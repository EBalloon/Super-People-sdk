// Class BravoHotelGame.AmbientSoundVolume
// Size: 0x370 (Inherited: 0x358)
struct AAmbientSoundVolume : AVolume {
	struct FString Ambience; // 0x358(0x10)
	int32_t Priority; // 0x368(0x04)
	char pad_36C[0x4]; // 0x36c(0x04)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BravoHotelGame.AmbientSoundVolume.OnOverlapEnd // (Final|Native|Protected) // @ game+0x1e42680
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.AmbientSoundVolume.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x1e42470
};

// Class BravoHotelGame.AnimNotifyState_PlaySound
// Size: 0x58 (Inherited: 0x30)
struct UAnimNotifyState_PlaySound : UAnimNotifyState {
	struct USoundBase* Sound; // 0x30(0x08)
	float VolumeMultiplier; // 0x38(0x04)
	float PitchMultiplier; // 0x3c(0x04)
	char bFollow : 1; // 0x40(0x01)
	char pad_40_1 : 7; // 0x40(0x01)
	char pad_41[0x3]; // 0x41(0x03)
	struct FName AttachName; // 0x44(0x08)
	char pad_4C[0xc]; // 0x4c(0x0c)
};

// Class BravoHotelGame.BravoHotelGameModeBase
// Size: 0x408 (Inherited: 0x408)
struct ABravoHotelGameModeBase : AGameMode {
};

// Class BravoHotelGame.BravoHotelGameMode
// Size: 0x588 (Inherited: 0x408)
struct ABravoHotelGameMode : ABravoHotelGameModeBase {
	char pad_408[0x4]; // 0x408(0x04)
	bool bFriendlyFire; // 0x40c(0x01)
	char pad_40D[0x3]; // 0x40d(0x03)
	struct UBravoHotelPoolingActorComponent* PoolingActorComponent; // 0x410(0x08)
	struct FDataTableRowHandle MapDataTableHandle; // 0x418(0x10)
	struct TMap<struct FString, struct APlayerController*> PCReceivedPlayerInfos; // 0x428(0x50)
	struct AAIController* TestAIControllerClass; // 0x478(0x08)
	char pad_480[0x71]; // 0x480(0x71)
	bool UsingOuterBlueZone; // 0x4f1(0x01)
	char pad_4F2[0x2]; // 0x4f2(0x02)
	struct FName SelectedPlayZoneName; // 0x4f4(0x08)
	char pad_4FC[0x4]; // 0x4fc(0x04)
	struct ABravoHotelBlueZone* BlueZoneClass; // 0x500(0x08)
	struct FString CQRType; // 0x508(0x10)
	char pad_518[0x68]; // 0x518(0x68)
	struct ABravoHotelBlueZone* BlueZone; // 0x580(0x08)

	void SetTestAIChangeLocation(struct AAIController* AIController); // Function BravoHotelGame.BravoHotelGameMode.SetTestAIChangeLocation // (Final|Native|Public) // @ game+0x1f1b5d0
	float GetCurrentOutOfCircleDamage(); // Function BravoHotelGame.BravoHotelGameMode.GetCurrentOutOfCircleDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f1b5a0
	struct ABravoHotelBlueZone* GetBlueZone(); // Function BravoHotelGame.BravoHotelGameMode.GetBlueZone // (Final|Native|Public) // @ game+0x1f1b570
};

// Class BravoHotelGame.BattleRoyaleGameMode
// Size: 0xe88 (Inherited: 0x588)
struct ABattleRoyaleGameMode : ABravoHotelGameMode {
	struct TArray<struct APlayerState*> RemovePendingPlayerArray; // 0x588(0x10)
	enum class EGameViewType GameViewType; // 0x598(0x01)
	enum class EMatchingType MatchingType; // 0x599(0x01)
	char pad_59A[0x2]; // 0x59a(0x02)
	int32_t TeamSize; // 0x59c(0x04)
	struct FString Training; // 0x5a0(0x10)
	int32_t AIGrade; // 0x5b0(0x04)
	char pad_5B4[0x4]; // 0x5b4(0x04)
	struct FMulticastInlineDelegate UpdateSurvivalCircleDelegate; // 0x5b8(0x10)
	char pad_5C8[0x38]; // 0x5c8(0x38)
	struct TMap<char, struct FTeamInfo> TeamInfoMap; // 0x600(0x50)
	char WinnerTeamIndex; // 0x650(0x01)
	char pad_651[0x7]; // 0x651(0x07)
	struct TArray<struct FName> SendPlayerEndedEvent; // 0x658(0x10)
	struct TArray<int32_t> SendPlayerRankedEvent; // 0x668(0x10)
	char pad_678[0x18]; // 0x678(0x18)
	struct APawn* AircraftViewPawnClass; // 0x690(0x08)
	struct APawn* AircraftFlightPawnClass; // 0x698(0x08)
	bool bAutoStart; // 0x6a0(0x01)
	char pad_6A1[0x3]; // 0x6a1(0x03)
	float StartingPlayerCountRate; // 0x6a4(0x04)
	int32_t WaitingTime; // 0x6a8(0x04)
	int32_t ReadyTime; // 0x6ac(0x04)
	int32_t DescentDelay; // 0x6b0(0x04)
	int32_t DescentableTime; // 0x6b4(0x04)
	struct ABravoHotelAircraftFlight* AircraftFlight; // 0x6b8(0x08)
	bool bIsUseAircraft; // 0x6c0(0x01)
	char pad_6C1[0x14]; // 0x6c1(0x14)
	bool bUseAircraftViewPawn; // 0x6d5(0x01)
	bool bEndlessGame; // 0x6d6(0x01)
	char pad_6D7[0x19]; // 0x6d7(0x19)
	struct TArray<struct FDamageInfo> DamageInfoArray; // 0x6f0(0x10)
	char pad_700[0x8]; // 0x700(0x08)
	struct ABravoHotelRedZoneManager* RedZoneManagerClass; // 0x708(0x08)
	struct ABravoHotelRedZoneManager* RedZoneManager; // 0x710(0x08)
	char pad_718[0x80]; // 0x718(0x80)
	struct ABHPersonalSupplyBoxManager* PersonalSupplyBoxManagerClass; // 0x798(0x08)
	struct ABHPersonalSupplyBoxManager* PersonalSupplyBoxManager; // 0x7a0(0x08)
	struct FLogBuildCountData DivisionItemCountResult; // 0x7a8(0x10)
	bool DisivisonComplete; // 0x7b8(0x01)
	char pad_7B9[0x1e7]; // 0x7b9(0x1e7)
	struct FStandardGroupKeyCountInfo StandardGroupKeyCountInfo; // 0x9a0(0x58)
	struct TMap<struct FName, struct FAreaSpawnRateInfo> AreaSpawnRateList; // 0x9f8(0x50)
	struct FAreaSpawnRateInfo BlueZoneSpawnRateInfo; // 0xa48(0x88)
	struct FName BlueZoneSpawnRateKey; // 0xad0(0x08)
	struct FAreaSpawnRateInfo NoneData; // 0xad8(0x88)
	struct TMap<struct FName, struct FVehicleAreaSpawnRateInfo> VehicleAreaSpawnRateList; // 0xb60(0x50)
	struct FVehicleAreaSpawnRateInfo VehicleBlueZoneSpawnRateInfo; // 0xbb0(0x78)
	struct FName VehicleBlueZoneSpawnRateKey; // 0xc28(0x08)
	struct FVehicleAreaSpawnRateInfo NoneVehicleData; // 0xc30(0x78)
	struct FLocalSpawnRate CustomBlueZoneSpawnRateInfo; // 0xca8(0x28)
	struct TMap<struct FName, struct FLocalSpawnRate> CustomAreaSpawnRateList; // 0xcd0(0x50)
	struct FLocalSpawnRate CustomVehicleBlueZoneSpawnRateInfo; // 0xd20(0x28)
	struct TMap<struct FName, struct FLocalSpawnRate> CustomVehicleAreaSpawnRateList; // 0xd48(0x50)
	char pad_D98[0x8]; // 0xd98(0x08)
	float ItemDivisionDelay; // 0xda0(0x04)
	bool UsingWorldItemSpawnTalbeInBlueZone; // 0xda4(0x01)
	bool ItemSpawnInBlueZone; // 0xda5(0x01)
	bool UnlimitItemSpawnCnt; // 0xda6(0x01)
	char pad_DA7[0x1]; // 0xda7(0x01)
	int32_t MaxItemDivisionCountAtOnce; // 0xda8(0x04)
	bool ItemDivisionLevelLoadComplet; // 0xdac(0x01)
	bool ItemDivisionGameReady; // 0xdad(0x01)
	bool UsingMaxPickUpItemSpawnCount; // 0xdae(0x01)
	char pad_DAF[0x1]; // 0xdaf(0x01)
	int32_t MaxPickUpItemSpawnCount; // 0xdb0(0x04)
	bool UsingMaxVehicleSpawnCount; // 0xdb4(0x01)
	char pad_DB5[0x3]; // 0xdb5(0x03)
	int32_t MaxVehicleSpawnCount; // 0xdb8(0x04)
	int32_t MaxPickUpVehicleSpawnCount; // 0xdbc(0x04)
	bool UsingDynamicMaxPickUpItemSpawnCount; // 0xdc0(0x01)
	char pad_DC1[0x3]; // 0xdc1(0x03)
	struct FItemSpawnLimitInfo ItemSpawnLimitInfo; // 0xdc4(0x14)
	bool GCRecordData; // 0xdd8(0x01)
	char pad_DD9[0x7]; // 0xdd9(0x07)
	struct FString GCRecordDataTitle; // 0xde0(0x10)
	bool RecordBuildingData; // 0xdf0(0x01)
	bool RecordPersonalSupplyBoxData; // 0xdf1(0x01)
	char pad_DF2[0x6]; // 0xdf2(0x06)
	struct UCurveFloat* ItemSpawnRateCurve; // 0xdf8(0x08)
	struct UCurveFloat* VehicleSpawnRateCurve; // 0xe00(0x08)
	int32_t CurrentSpawnVehicleCount; // 0xe08(0x04)
	int32_t CurrentDivisionItemCount; // 0xe0c(0x04)
	char pad_E10[0x18]; // 0xe10(0x18)
	struct TArray<struct ABravoHotelCharacter*> CheckCharacters; // 0xe28(0x10)
	char pad_E38[0x10]; // 0xe38(0x10)
	struct TArray<struct FLoadBuildingInfo> LoadCompleteList; // 0xe48(0x10)
	char pad_E58[0x8]; // 0xe58(0x08)
	struct TArray<int32_t> AutoBotIds; // 0xe60(0x10)
	struct TArray<int32_t> AutoBotInfoSendIDList; // 0xe70(0x10)
	char pad_E80[0x8]; // 0xe80(0x08)

	void UpdateSurvivalCircleDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode.UpdateSurvivalCircleDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void UpdateItemSpawnState(); // Function BravoHotelGame.BattleRoyaleGameMode.UpdateItemSpawnState // (Final|Native|Public) // @ game+0x1e43800
	void UpdateCheckStartPlayCharacters(); // Function BravoHotelGame.BattleRoyaleGameMode.UpdateCheckStartPlayCharacters // (Final|Native|Private) // @ game+0x1e437e0
	void ServerCheat(bool Active, enum class EDediGameCheatType Type); // Function BravoHotelGame.BattleRoyaleGameMode.ServerCheat // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e43710
	void OnBattleRoyalStateChanged(enum class EBattleRoyaleState PrevState, enum class EBattleRoyaleState CurrentState); // Function BravoHotelGame.BattleRoyaleGameMode.OnBattleRoyalStateChanged // (Final|Native|Public) // @ game+0x1e43650
	struct FString GetSpawnAreaName(struct AController* Player); // Function BravoHotelGame.BattleRoyaleGameMode.GetSpawnAreaName // (Final|Native|Public|BlueprintCallable) // @ game+0x1e43570
	struct ABravoHotelRedZoneManager* GetRedZoneManager(); // Function BravoHotelGame.BattleRoyaleGameMode.GetRedZoneManager // (Final|Native|Public) // @ game+0x1e43540
	enum class EBattleRoyaleState GetBattleRoyaleState(); // Function BravoHotelGame.BattleRoyaleGameMode.GetBattleRoyaleState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e43510
	void DestroyRedZoneManager(); // Function BravoHotelGame.BattleRoyaleGameMode.DestroyRedZoneManager // (Final|Native|Public) // @ game+0x1e434f0
	bool CreateRedZoneManager(); // Function BravoHotelGame.BattleRoyaleGameMode.CreateRedZoneManager // (Final|Native|Public) // @ game+0x1e434c0
	void Cheat(bool Active, int8_t Type); // Function BravoHotelGame.BattleRoyaleGameMode.Cheat // (Final|Exec|Native|Public) // @ game+0x1e43400
	void AddAIPlayerByTimer(bool bByTimer); // Function BravoHotelGame.BattleRoyaleGameMode.AddAIPlayerByTimer // (Final|Native|Public) // @ game+0x1e43370
};

// Class BravoHotelGame.BattleRoyaleGameMode_Login
// Size: 0x640 (Inherited: 0x408)
struct ABattleRoyaleGameMode_Login : ABravoHotelGameModeBase {
	float MatchingTimeout; // 0x408(0x04)
	char pad_40C[0x4]; // 0x40c(0x04)
	struct TArray<struct FPlayerPawnList> PlayerPawnList; // 0x410(0x10)
	struct ACharacter* CustomizeCharacter; // 0x420(0x08)
	struct ACharacter* RankingCharacter; // 0x428(0x08)
	struct USkeletalMeshComponent* AppearingMotionCharacter; // 0x430(0x08)
	char pad_438[0x118]; // 0x438(0x118)
	struct FTimerHandle Loading_TimerHandle; // 0x550(0x08)
	struct FTimerHandle PartyInfo_TimerHandle; // 0x558(0x08)
	struct FTimerHandle Ping_TimerHandle; // 0x560(0x08)
	struct FTimerHandle GeeGeeLoginToken_TimerHandle; // 0x568(0x08)
	struct FTimerHandle SteamLoginToken_TimerHandle; // 0x570(0x08)
	struct FTimerHandle DuplicatedReconnect_TimerHandle; // 0x578(0x08)
	struct FMulticastInlineDelegate OnLoginSucceeded; // 0x580(0x10)
	struct FMulticastInlineDelegate OnLoginNotify; // 0x590(0x10)
	struct FMulticastInlineDelegate OnLoginFailed; // 0x5a0(0x10)
	struct FMulticastInlineDelegate OnMatchingPending; // 0x5b0(0x10)
	struct FMulticastInlineDelegate OnMatchingStarted; // 0x5c0(0x10)
	struct FMulticastInlineDelegate OnMatchingSucceeded; // 0x5d0(0x10)
	struct FMulticastInlineDelegate OnMatchingFailed; // 0x5e0(0x10)
	struct FMulticastInlineDelegate OnPartyInvited; // 0x5f0(0x10)
	struct FMulticastInlineDelegate OnPartyInfoChanged; // 0x600(0x10)
	struct FMulticastInlineDelegate OnPartyMemberInfoChanged; // 0x610(0x10)
	struct FMulticastInlineDelegate OnMatchingSettingsChanged; // 0x620(0x10)
	struct FMulticastInlineDelegate OnCreateCharacter; // 0x630(0x10)

	void UpdatePCInfo(); // Function BravoHotelGame.BattleRoyaleGameMode_Login.UpdatePCInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1e45190
	void StartTutorialPlay(bool bOpeningTutorial); // Function BravoHotelGame.BattleRoyaleGameMode_Login.StartTutorialPlay // (Final|Native|Public|BlueprintCallable) // @ game+0x1e45100
	void StartLoginEx(); // Function BravoHotelGame.BattleRoyaleGameMode_Login.StartLoginEx // (Final|Native|Public|BlueprintCallable) // @ game+0x1e450e0
	void StartLogin(struct TMap<struct FString, struct FString>& AppIDs, struct TMap<struct FString, struct FString>& LoginKeys, enum class ELoginType Type); // Function BravoHotelGame.BattleRoyaleGameMode_Login.StartLogin // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1e44eb0
	void SetVisibleRankingCharacter(bool bState); // Function BravoHotelGame.BattleRoyaleGameMode_Login.SetVisibleRankingCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1e44e20
	void SetRankingCharacter(struct ACharacter* SpawnCharacter); // Function BravoHotelGame.BattleRoyaleGameMode_Login.SetRankingCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1e44da0
	void SetPawnList(struct TArray<struct ACharacter*>& PawnList); // Function BravoHotelGame.BattleRoyaleGameMode_Login.SetPawnList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1e44cf0
	void SetCustomizeCharacter(struct ACharacter* SpawnCustomizeCharacter); // Function BravoHotelGame.BattleRoyaleGameMode_Login.SetCustomizeCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1e44c70
	void SetAppearingMotionCharacter(struct USkeletalMeshComponent* MeshComponent); // Function BravoHotelGame.BattleRoyaleGameMode_Login.SetAppearingMotionCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1e44bf0
	void PartyMemberInfoChanged__DelegateSignature(struct FString MemberUID, struct FBravoHotelPartyMemberInfo& MemberInfo); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.PartyMemberInfoChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void PartyInvited__DelegateSignature(struct FBravoHotelPartyInvitation& Invitation); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.PartyInvited__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void PartyInfoChanged__DelegateSignature(struct FBravoHotelPartyInfo& PartyInfo); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.PartyInfoChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void OnReadFriendsListComplete(int32_t LocalPlayerNum, bool bWasSuccessful, struct FString ListName, struct FString PlatformName); // Function BravoHotelGame.BattleRoyaleGameMode_Login.OnReadFriendsListComplete // (Final|Native|Protected) // @ game+0x1e44a70
	void MatchingSucceeded__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.MatchingSucceeded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void MatchingStarted__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.MatchingStarted__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void MatchingSettingsChanged__DelegateSignature(struct FBravoHotelMatchingSettings& Settings); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.MatchingSettingsChanged__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void MatchingPending__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.MatchingPending__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void MatchingFailed__DelegateSignature(int32_t ErrorCode, struct FString ExtraDescription); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.MatchingFailed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void LoginSucceeded__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.LoginSucceeded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void LoginNotify__DelegateSignature(struct FString Parameters); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.LoginNotify__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void LoginFailed__DelegateSignature(int32_t ErrorIndex, struct FString ErrorID, struct FString Parameters); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.LoginFailed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	struct TArray<struct FString> GetServicePlatforms(); // Function BravoHotelGame.BattleRoyaleGameMode_Login.GetServicePlatforms // (Final|Native|Public|BlueprintCallable) // @ game+0x1e44990
	struct FString GetServicePlatformName(); // Function BravoHotelGame.BattleRoyaleGameMode_Login.GetServicePlatformName // (Final|Native|Public|BlueprintCallable) // @ game+0x1e44910
	struct ABravoHotelCharacter* GetLobbyPawn(int32_t Index); // Function BravoHotelGame.BattleRoyaleGameMode_Login.GetLobbyPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e44880
	struct ABravoHotelCharacter* GetCustomizePawn(); // Function BravoHotelGame.BattleRoyaleGameMode_Login.GetCustomizePawn // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e44850
	void EquipDefaultWeapon(struct ABravoHotelCharacter* TargetCharacter, struct FName& ItemRowName, int32_t TargetWeaponSlotIndex); // Function BravoHotelGame.BattleRoyaleGameMode_Login.EquipDefaultWeapon // (Final|Native|Public|HasOutParms) // @ game+0x1e44740
	void CreateCharacter__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameMode_Login.CreateCharacter__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
};

// Class BravoHotelGame.BattleRoyaleGameMode_StoreWeb
// Size: 0x408 (Inherited: 0x408)
struct ABattleRoyaleGameMode_StoreWeb : ABravoHotelGameModeBase {

	void ChangeLevel(struct FString NextLevelName); // Function BravoHotelGame.BattleRoyaleGameMode_StoreWeb.ChangeLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x1e45330
};

// Class BravoHotelGame.BravoHotelGameState
// Size: 0x678 (Inherited: 0x390)
struct ABravoHotelGameState : AGameState {
	char MatchWinnerTeam; // 0x390(0x01)
	char pad_391[0x7]; // 0x391(0x07)
	struct ABravoHotelPlayerState* WinnerPlayerState; // 0x398(0x08)
	int32_t TimeRemaining; // 0x3a0(0x04)
	struct FName CurrentSeasonID; // 0x3a4(0x08)
	int32_t PerkMode; // 0x3ac(0x04)
	int32_t RecipeMode; // 0x3b0(0x04)
	int32_t MaxPerkCount; // 0x3b4(0x04)
	int32_t OverrideUltimateLevel; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)
	struct TMap<struct FName, int32_t> PerkClassNumCap; // 0x3c0(0x50)
	struct TMap<struct FName, float> PerkClassWeightModifier; // 0x410(0x50)
	struct TArray<struct FName> PerkClassBlock; // 0x460(0x10)
	bool bBlockSpawnVehicle; // 0x470(0x01)
	bool bBlockRedZone; // 0x471(0x01)
	bool PerkLevelUpAllUserSame; // 0x472(0x01)
	char pad_473[0x5]; // 0x473(0x05)
	struct FString CQRKey; // 0x478(0x10)
	enum class EGameViewType GameViewType; // 0x488(0x01)
	enum class EMatchingType MatchingType; // 0x489(0x01)
	char pad_48A[0x2]; // 0x48a(0x02)
	struct FName ExpertWeaponTableID; // 0x48c(0x08)
	int32_t PersonalSupplyBoxPositionType; // 0x494(0x04)
	bool NoDelaySpawnPersonalSupplyBox; // 0x498(0x01)
	bool MustSpawnPersonalSupplyBox; // 0x499(0x01)
	char pad_49A[0x2]; // 0x49a(0x02)
	int32_t RetiredPlayerCount; // 0x49c(0x04)
	struct TMap<int32_t, struct ABravoHotelPlayerState*> UniqueIDPlayerStates; // 0x4a0(0x50)
	struct FGuid MatchID; // 0x4f0(0x10)
	struct FString GameServerID; // 0x500(0x10)
	char pad_510[0x10]; // 0x510(0x10)
	struct FGameSettingClassSelectInfoElement DefaultClassSelectInfo; // 0x520(0x28)
	struct FGameSettingClassChangeInfoElement DefaultClassChangeInfo; // 0x548(0x48)
	struct FGameSettingInfo CurrentGameSettingInfo; // 0x590(0x88)
	bool IsUsingOuterAreaBlueZone; // 0x618(0x01)
	char pad_619[0x7]; // 0x619(0x07)
	struct ABravoHotelBlueZone* BlueZone; // 0x620(0x08)
	struct FMulticastInlineDelegate OnBlueZoneDelegate; // 0x628(0x10)
	struct FMulticastInlineDelegate OnChangePerkModeDelegate; // 0x638(0x10)
	char pad_648[0x1c]; // 0x648(0x1c)
	float RecoilModifier_AR; // 0x664(0x04)
	float RecoilModifier_SMG; // 0x668(0x04)
	float RecoilModifier_SG; // 0x66c(0x04)
	float RecoilModifier_DMR; // 0x670(0x04)
	float RecoilModifier_SR; // 0x674(0x04)

	void ShowTimeHUDMessage(); // Function BravoHotelGame.BravoHotelGameState.ShowTimeHUDMessage // (Native|Public) // @ game+0x1f204b0
	void OnRep_TimeRemaining(); // Function BravoHotelGame.BravoHotelGameState.OnRep_TimeRemaining // (Final|Native|Public) // @ game+0x1f20490
	void OnRep_RecipeMode(); // Function BravoHotelGame.BravoHotelGameState.OnRep_RecipeMode // (Final|Native|Public) // @ game+0x1f20470
	void OnRep_PerkMode(); // Function BravoHotelGame.BravoHotelGameState.OnRep_PerkMode // (Final|Native|Public) // @ game+0x1f20450
	void OnRep_OverrideUltimateLevel(); // Function BravoHotelGame.BravoHotelGameState.OnRep_OverrideUltimateLevel // (Final|Native|Public) // @ game+0x1f20430
	void OnRep_CurrentGameSettingInfo(); // Function BravoHotelGame.BravoHotelGameState.OnRep_CurrentGameSettingInfo // (Final|Native|Public) // @ game+0x1f20410
	void OnRep_BlueZone(); // Function BravoHotelGame.BravoHotelGameState.OnRep_BlueZone // (Final|Native|Public) // @ game+0x1f203f0
	void OnChangePerkModeDelegate__DelegateSignature(int32_t PerkMode); // DelegateFunction BravoHotelGame.BravoHotelGameState.OnChangePerkModeDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	bool IsDuplicateSelectPossible(); // Function BravoHotelGame.BravoHotelGameState.IsDuplicateSelectPossible // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f203c0
	bool IsCurrentStatusParty(); // Function BravoHotelGame.BravoHotelGameState.IsCurrentStatusParty // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f20390
	struct ABravoHotelPlayerState* GetPlayerStateByUniqueID(int32_t UniqueID); // Function BravoHotelGame.BravoHotelGameState.GetPlayerStateByUniqueID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f20300
	struct FString GetMatchIDString(); // Function BravoHotelGame.BravoHotelGameState.GetMatchIDString // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f20270
	struct ABravoHotelBlueZone* GetBlueZone(); // Function BravoHotelGame.BravoHotelGameState.GetBlueZone // (Native|Public|BlueprintCallable) // @ game+0x1f20240
	void ChangeRemainTime(int32_t RemainTime); // Function BravoHotelGame.BravoHotelGameState.ChangeRemainTime // (Native|Public) // @ game+0x1f201b0
	void BlueZoneDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelGameState.BlueZoneDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
};

// Class BravoHotelGame.BattleRoyaleGameState
// Size: 0x850 (Inherited: 0x678)
struct ABattleRoyaleGameState : ABravoHotelGameState {
	bool IsNewItemSpawnMode; // 0x678(0x01)
	char pad_679[0x3]; // 0x679(0x03)
	int32_t TeamSize; // 0x67c(0x04)
	enum class EGameMode GameRule; // 0x680(0x01)
	enum class EBattleRoyaleState BattleRoyaleState; // 0x681(0x01)
	char pad_682[0x2]; // 0x682(0x02)
	int32_t TotalPlayerCount; // 0x684(0x04)
	int32_t TotalAIPlayerCount; // 0x688(0x04)
	int32_t CurrentPlayerCount; // 0x68c(0x04)
	int32_t CurrentTeamCount; // 0x690(0x04)
	int32_t TotalTeamCount; // 0x694(0x04)
	struct FMulticastInlineDelegate OnBattleRoyalStateChanged; // 0x698(0x10)
	struct FMulticastInlineDelegate OnRocketLaunch; // 0x6a8(0x10)
	struct FMulticastInlineDelegate OnItemSpawnModeChanged; // 0x6b8(0x10)
	struct FMulticastInlineDelegate OnChangeRemainTime; // 0x6c8(0x10)
	bool bCheckSeaLevelZ; // 0x6d8(0x01)
	char pad_6D9[0x3]; // 0x6d9(0x03)
	float SeaLevelZ; // 0x6dc(0x04)
	char pad_6E0[0x4]; // 0x6e0(0x04)
	int32_t GhostPlayerCountForTest; // 0x6e4(0x04)
	struct FMulticastInlineDelegate OnRepTeamSize; // 0x6e8(0x10)
	struct TArray<struct FCharacterDiedInfo> CharacterDiedInfos; // 0x6f8(0x10)
	struct TArray<struct FTeamEndInfo> TeamEndInfos; // 0x708(0x10)
	struct TArray<struct FAirCraftBoardingPlayerList> AirCraftBoardingInfos; // 0x718(0x10)
	struct ABravoHotelRedZone* redzone; // 0x728(0x08)
	struct ABravoHotelRedZoneManager* RedZoneManager; // 0x730(0x08)
	char pad_738[0x58]; // 0x738(0x58)
	struct FMulticastInlineDelegate AirCraftDescentPlayerInfoEvent; // 0x790(0x10)
	struct FMulticastInlineDelegate EndAirCraftBoardingPlayerEvent; // 0x7a0(0x10)
	struct ABravoHotelAircraftFlight* AircraftFlightRef; // 0x7b0(0x08)
	struct FMulticastInlineDelegate OnRepCurrentPlayerCount; // 0x7b8(0x10)
	struct FMulticastInlineDelegate OnRepCurrentTeamCount; // 0x7c8(0x10)
	struct TArray<struct UObject*> RestoreList; // 0x7d8(0x10)
	char pad_7E8[0x8]; // 0x7e8(0x08)
	struct FTimerHandle TimerHandle_MoveToLobbyLevel; // 0x7f0(0x08)
	struct TMap<struct FName, int32_t> CurrentClassCounts; // 0x7f8(0x50)
	int32_t AutoBotCount; // 0x848(0x04)
	char pad_84C[0x4]; // 0x84c(0x04)

	void SetDescentPlayerInfo(int32_t PlayerId); // Function BravoHotelGame.BattleRoyaleGameState.SetDescentPlayerInfo // (Final|Native|Public) // @ game+0x1e46a00
	void SetAutoBotCount(int32_t Count); // Function BravoHotelGame.BattleRoyaleGameState.SetAutoBotCount // (Final|Native|Public) // @ game+0x1e46980
	void SetAirCraftBoardingPlayerInfo(bool IsTeam, int32_t TeamID, int32_t PlayerId); // Function BravoHotelGame.BattleRoyaleGameState.SetAirCraftBoardingPlayerInfo // (Final|Native|Public) // @ game+0x1e46880
	void ResetAirCraftBoardingPlayerInfo(); // Function BravoHotelGame.BattleRoyaleGameState.ResetAirCraftBoardingPlayerInfo // (Final|Native|Public) // @ game+0x1e46860
	void RemainTimeDelegate__DelegateSignature(int32_t RemainTime); // DelegateFunction BravoHotelGame.BattleRoyaleGameState.RemainTimeDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnRocketLaunch__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameState.OnRocketLaunch__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnRepTeamSize__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameState.OnRepTeamSize__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnRepCurrentPlayerCount__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameState.OnRepCurrentPlayerCount__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnRep_TeamSize(); // Function BravoHotelGame.BattleRoyaleGameState.OnRep_TeamSize // (Final|Native|Public) // @ game+0x1e46840
	void OnRep_CurrentTeamCount(); // Function BravoHotelGame.BattleRoyaleGameState.OnRep_CurrentTeamCount // (Final|Native|Public) // @ game+0x1e46820
	void OnRep_CurrentPlayerCount(); // Function BravoHotelGame.BattleRoyaleGameState.OnRep_CurrentPlayerCount // (Final|Native|Public) // @ game+0x1e46800
	void OnRep_ChangeNewItemSpawnMode(); // Function BravoHotelGame.BattleRoyaleGameState.OnRep_ChangeNewItemSpawnMode // (Final|Native|Public) // @ game+0x1e467e0
	void OnRep_BattleRoyaleState(); // Function BravoHotelGame.BattleRoyaleGameState.OnRep_BattleRoyaleState // (Final|Native|Public) // @ game+0x1e467c0
	void MulticastOnRocketLaunch(); // Function BravoHotelGame.BattleRoyaleGameState.MulticastOnRocketLaunch // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1e467a0
	void MulticastMoveToLobbyLevel(); // Function BravoHotelGame.BattleRoyaleGameState.MulticastMoveToLobbyLevel // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1e46780
	void ItemSpawnModeDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameState.ItemSpawnModeDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	float GetSeaLevelZ(); // Function BravoHotelGame.BattleRoyaleGameState.GetSeaLevelZ // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e46750
	struct ABravoHotelRedZone* GetRedZone(); // Function BravoHotelGame.BattleRoyaleGameState.GetRedZone // (Final|Native|Public|BlueprintCallable) // @ game+0x1e46720
	void FindAirCraftFlightActor(); // Function BravoHotelGame.BattleRoyaleGameState.FindAirCraftFlightActor // (Final|Native|Public) // @ game+0x1e46700
	void EndAirCraftBoardingPlayer__DelegateSignature(); // DelegateFunction BravoHotelGame.BattleRoyaleGameState.EndAirCraftBoardingPlayer__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void EndAirCraftBoardingPlayer(); // Function BravoHotelGame.BattleRoyaleGameState.EndAirCraftBoardingPlayer // (Final|Native|Public) // @ game+0x1e466e0
	void DoRestore(); // Function BravoHotelGame.BattleRoyaleGameState.DoRestore // (Final|Native|Public) // @ game+0x1e466c0
	void DoMoveToLobbyLevel(float DelayTime); // Function BravoHotelGame.BattleRoyaleGameState.DoMoveToLobbyLevel // (Final|Native|Public) // @ game+0x1e46640
	void ClientExcuteEndAirCraftBoardingPlayerEvent(); // Function BravoHotelGame.BattleRoyaleGameState.ClientExcuteEndAirCraftBoardingPlayerEvent // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1e46620
	void ClientExcuteAirCraftDescentPlayerInfoEvent(int32_t AirCraftID, int32_t SeatID, int32_t PlayerId); // Function BravoHotelGame.BattleRoyaleGameState.ClientExcuteAirCraftDescentPlayerInfoEvent // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1e46530
	void BattleRoyalStateChanged__DelegateSignature(enum class EBattleRoyaleState PrevState, enum class EBattleRoyaleState CurrentState); // DelegateFunction BravoHotelGame.BattleRoyaleGameState.BattleRoyalStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void AirCraftDescentPlayerInfo__DelegateSignature(int32_t AirCraftID, int32_t SeatID, int32_t PlayerId); // DelegateFunction BravoHotelGame.BattleRoyaleGameState.AirCraftDescentPlayerInfo__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
};

// Class BravoHotelGame.BHPersonalSupplyBox
// Size: 0x388 (Inherited: 0x320)
struct ABHPersonalSupplyBox : AActor {
	bool NeedInit; // 0x320(0x01)
	char pad_321[0xf]; // 0x321(0x0f)
	struct UBoxComponent* RootBoxComponent; // 0x330(0x08)
	struct USphereComponent* InteractiveSphereComponent; // 0x338(0x08)
	struct UBoxComponent* InteractiveCancleSphereComponent; // 0x340(0x08)
	struct FName BoxName; // 0x348(0x08)
	struct TArray<int32_t> RelatedPlayerIds; // 0x350(0x10)
	char pad_360[0x9]; // 0x360(0x09)
	enum class EBoxStateType CurrentStateType; // 0x369(0x01)
	bool CheckRePosition; // 0x36a(0x01)
	char pad_36B[0x5]; // 0x36b(0x05)
	struct FTimerHandle TimeHandle_CheckRePosition; // 0x370(0x08)
	int32_t CustomIndex; // 0x378(0x04)
	bool TraceLand; // 0x37c(0x01)
	char pad_37D[0x3]; // 0x37d(0x03)
	struct FTimerHandle TimerHandle_Destroy; // 0x380(0x08)

	void UpdateCheckRePosition(); // Function BravoHotelGame.BHPersonalSupplyBox.UpdateCheckRePosition // (Final|Native|Public) // @ game+0x1e47960
	void RequestRePosition(float StartZ, float EndZ); // Function BravoHotelGame.BHPersonalSupplyBox.RequestRePosition // (Final|Native|Public) // @ game+0x1e478a0
	void RePosition(struct FVector& NewLocation); // Function BravoHotelGame.BHPersonalSupplyBox.RePosition // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1e47810
	void OnRep_SetStateType(); // Function BravoHotelGame.BHPersonalSupplyBox.OnRep_SetStateType // (Native|Public) // @ game+0x1e477f0
	void OnRep_RelatedPlayerIds(); // Function BravoHotelGame.BHPersonalSupplyBox.OnRep_RelatedPlayerIds // (Final|Native|Public) // @ game+0x1e477d0
	void OnRep_CheckRePosition(); // Function BravoHotelGame.BHPersonalSupplyBox.OnRep_CheckRePosition // (Final|Native|Public) // @ game+0x1e477b0
	void OnRecall(); // Function BravoHotelGame.BHPersonalSupplyBox.OnRecall // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BravoHotelGame.BHPersonalSupplyBox.OnOverlapEnd // (Final|Native|Public) // @ game+0x1e47670
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.BHPersonalSupplyBox.OnOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x1e47460
	void OnChangeState(enum class EBoxStateType StateType); // Function BravoHotelGame.BHPersonalSupplyBox.OnChangeState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnAssigned(); // Function BravoHotelGame.BHPersonalSupplyBox.OnAssigned // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool IsReplatedBP(); // Function BravoHotelGame.BHPersonalSupplyBox.IsReplatedBP // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e47430
	void GetRelatedPlayerIds(struct TArray<int32_t>& outList); // Function BravoHotelGame.BHPersonalSupplyBox.GetRelatedPlayerIds // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1e47380
	void DestroyBox(); // Function BravoHotelGame.BHPersonalSupplyBox.DestroyBox // (Final|Native|Public) // @ game+0x1e47360
	void ChangeBoxMesh(bool IsMyBox); // Function BravoHotelGame.BHPersonalSupplyBox.ChangeBoxMesh // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelDropBoxActor
// Size: 0x3a0 (Inherited: 0x320)
struct ABravoHotelDropBoxActor : AActor {
	enum class EPickupRoot RootType; // 0x320(0x01)
	char pad_321[0x7]; // 0x321(0x07)
	struct UBoxComponent* RootBoxComponent; // 0x328(0x08)
	struct UDropBoxInventoryComponent* InventoryComponent; // 0x330(0x08)
	struct USphereComponent* InteractiveSphereComponent; // 0x338(0x08)
	struct UBoxComponent* InteractiveCancleSphereComponent; // 0x340(0x08)
	struct FName DropperNickName; // 0x348(0x08)
	struct FName BoxName; // 0x350(0x08)
	int32_t RarityIndex; // 0x358(0x04)
	char pad_35C[0x4]; // 0x35c(0x04)
	struct ABravoHotelCharacter* DetectedCharacter; // 0x360(0x08)
	char pad_368[0x38]; // 0x368(0x38)

	void SetItemInBlueprint(struct FName& ItemKey); // Function BravoHotelGame.BravoHotelDropBoxActor.SetItemInBlueprint // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BravoHotelGame.BravoHotelDropBoxActor.OnOverlapEnd // (Native|Public) // @ game+0x1f12110
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.BravoHotelDropBoxActor.OnOverlapBegin // (Native|Public|HasOutParms) // @ game+0x1f11f10
	void OnDeactivated(); // Function BravoHotelGame.BravoHotelDropBoxActor.OnDeactivated // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnBoxChanged(); // Function BravoHotelGame.BravoHotelDropBoxActor.OnBoxChanged // (Native|Public) // @ game+0x1f11ef0
	void OnActivated(); // Function BravoHotelGame.BravoHotelDropBoxActor.OnActivated // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void AddItemsToBox(struct TArray<struct FSpawnItemResult>& ItemsToSpawn); // Function BravoHotelGame.BravoHotelDropBoxActor.AddItemsToBox // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f11e10
};

// Class BravoHotelGame.BHPersonalSupplyBoxDummy
// Size: 0x3a8 (Inherited: 0x3a0)
struct ABHPersonalSupplyBoxDummy : ABravoHotelDropBoxActor {
	int32_t playerGUID; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)
};

// Class BravoHotelGame.BHPersonalSupplyBoxManager
// Size: 0x3e0 (Inherited: 0x320)
struct ABHPersonalSupplyBoxManager : AInfo {
	struct ABHPersonalSupplyBox* SupplyBoxClass; // 0x320(0x08)
	struct TArray<struct FPersonalSupplyPhaseInfo> ListPhaseInfo; // 0x328(0x10)
	int32_t CurrentPhaseNum; // 0x338(0x04)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct TArray<struct ABHPersonalSupplyBox*> ListUsableSupplyBox; // 0x340(0x10)
	struct TMap<int32_t, struct ABHPersonalSupplyBox*> MapSupplyBox; // 0x350(0x50)
	struct FName TestRandomTableID; // 0x3a0(0x08)
	bool UseTestRandom; // 0x3a8(0x01)
	char pad_3A9[0x17]; // 0x3a9(0x17)
	struct TArray<struct ABHPersonalSupplyBox*> SpawnedSupplyBoxList; // 0x3c0(0x10)
	struct TArray<struct ABHPersonalSupplyBox*> ForceSpawnedSupplyBoxList; // 0x3d0(0x10)

	void SetCurrentPhaseNum(int32_t PhaseNum); // Function BravoHotelGame.BHPersonalSupplyBoxManager.SetCurrentPhaseNum // (Final|Native|Public|BlueprintCallable) // @ game+0x1e47e40
	void RecallAll(); // Function BravoHotelGame.BHPersonalSupplyBoxManager.RecallAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1e47e20
	void ReassignAll(bool Force); // Function BravoHotelGame.BHPersonalSupplyBoxManager.ReassignAll // (Final|Native|Public|BlueprintCallable) // @ game+0x1e47d90
};

// Class BravoHotelGame.BravoHotelCharacter
// Size: 0x3ac0 (Inherited: 0x5f0)
struct ABravoHotelCharacter : ACharacter {
	char pad_5F0[0xad8]; // 0x5f0(0xad8)
	struct UAkComponent* AudioComponent; // 0x10c8(0x08)
	char pad_10D0[0x560]; // 0x10d0(0x560)
	struct USceneComponent* CameraBase; // 0x1630(0x08)
	char pad_1638[0x1c30]; // 0x1638(0x1c30)
	struct USpringArmComponent* CameraAssistant3P; // 0x3268(0x08)
	struct UBravoHotelCameraComponent* Camera3P; // 0x1a98(0x08)
	struct UPointLightComponent* CharacterBackLight; // 0x1460(0x08)
	struct UPointLightComponent* CharacterBackLightSecond; // 0x9d8(0x08)
	float BackLightIntensity_FPP; // 0x1ebc(0x04)
	float BackLightIntensity_ADS; // 0x88c(0x04)
	struct TArray<struct UParticleSystemComponent*> BuffParticleComponents; // 0x1800(0x10)
	struct UCustomizableSkeletalComponent* MutableComponent; // 0x2f90(0x08)
	struct USphereComponent* InteractiveSphereComponent; // 0x28e8(0x08)
	struct USphereComponent* InteractiveCancleSphereComponent; // 0x22a0(0x08)
	struct USkeletalMeshComponent* Parachute; // 0xe88(0x08)
	struct UParticleSystemComponent* WaterParticleSystem; // 0xe18(0x08)
	struct UParticleSystemComponent* FlameDamageParticleComponent; // 0x28f8(0x08)
	char pad_32D0[0x780]; // 0x32d0(0x780)
	struct UParticleSystem* FlameDamageParticle; // 0x3a50(0x08)
	struct UBravoHotelSTMComponent* STMComponent; // 0x1580(0x08)
	struct UBravoHotelActionComponent* ActionComponent; // 0xaf8(0x08)
	char pad_3A68[0x50]; // 0x3a68(0x50)
	struct UBravoHotelPerkComponent* PerkComponent; // 0x3ab8(0x08)
	struct UTeamInfoUpdaterComponent* TeamInfoUpdaterComponentRef; // 0x1d98(0x08)
	struct FTimerHandle TimeHandle_MolotovDotDamage; // 0x19e8(0x08)
	struct FAnimSlot Stand_FlameDotDamageAnim; // 0x19b8(0x10)
	struct FAnimSlot Prone_FlameDotDamageAnim; // 0x1db8(0x10)
	struct TArray<struct FMolotovFlameDotDamageInfo> FlameDamageInfos; // 0x2398(0x10)
	struct FString NPCNickName; // 0xce0(0x10)
	bool bAllowToggleCamera; // 0xea8(0x01)
	bool bThirdPerson; // 0x7f5(0x01)
	float SprintingMoveRightModifier; // 0xb54(0x04)
	float LeanValue; // 0x27fc(0x04)
	float LeanDegreeMax; // 0x3278(0x04)
	float LeanUpdateSpeed; // 0x894(0x04)
	enum class ELeanState SaveLeanState; // 0x1820(0x01)
	enum class ELeanState PrevLeanState; // 0x25c8(0x01)
	bool bFixLeanDegreeMax; // 0x1840(0x01)
	bool bFixFPPFoV; // 0x2a30(0x01)
	float Health; // 0x22d0(0x04)
	float ShortTimeHealth; // 0x18f8(0x04)
	float TargetHealth; // 0xb68(0x04)
	float BandageTargetHealth; // 0x3650(0x04)
	float OverHealHealth; // 0xb10(0x04)
	struct UCameraPostProcessPreset* PP_Preset_ShortHealth; // 0x9e8(0x08)
	struct UCameraPostProcessPreset* PPInst_ShortHealth; // 0x17f0(0x08)
	struct TMap<enum class ETargetHealthType, struct FTargetHealthInfo> TargetHealthMap; // 0x1a10(0x50)
	float Oxygen; // 0x2878(0x04)
	float SteadyPoint; // 0x1588(0x04)
	int8_t BoostPercent; // 0x8d8(0x01)
	float Default3PFOV; // 0x3304(0x04)
	float Default3PFOV_AOS; // 0xe68(0x04)
	float Default3PFOV_AMP; // 0x9f0(0x04)
	float Default3PFOV_HeartBeatSensor; // 0x3728(0x04)
	float Default3PFOV_SkillMAP; // 0x9e0(0x04)
	float ForwardAxisValue; // 0x1958(0x04)
	float RightAxisValue; // 0x2288(0x04)
	float InputMovementAttenuationTime; // 0x1290(0x04)
	float InputMovementAttenuationTimeIdleToCrouch; // 0x2838(0x04)
	float InputMovementAttenuationTimeIdleToProne; // 0x2020(0x04)
	float InputMovementAttenuationTimeProneToIdle; // 0xa18(0x04)
	float InputMovementAttenuationValueIdleToCrouch; // 0x2860(0x04)
	float InputMovementAttenuationValueIdleToProne; // 0x37d0(0x04)
	float InputMovementAttenuationValueProneToIdle; // 0x34a0(0x04)
	float InputMovementAttenuationValue; // 0x2e40(0x04)
	bool bMovementKeyPushed; // 0x2ae8(0x01)
	bool bLastMovementKeyPushed; // 0x1b0c(0x01)
	bool bMovementInputLock; // 0x2931(0x01)
	struct FVector2D InputAxisOnLockMovement; // 0x2c98(0x08)
	bool bInputKeyJump; // 0x7e8(0x01)
	float DoubleTapDelay_ToggleLean; // 0x1ce8(0x04)
	bool bShouldSprint; // 0x28c0(0x01)
	enum class EFireType FireTypeComplete; // 0x2864(0x01)
	struct UDataTable* PerBoneDamageTable; // 0x1b80(0x08)
	struct UDataTable* MeleeDamageTable; // 0x1828(0x08)
	struct UDataTable* PistolsDamageTable; // 0x7d8(0x08)
	struct UDataTable* ShotgunsDamageTable; // 0x1d00(0x08)
	struct UDataTable* SMGsDamageTable; // 0x1ad8(0x08)
	struct UDataTable* ARsDamageTable; // 0x2048(0x08)
	struct UDataTable* DMRsDamageTable; // 0x2128(0x08)
	struct UDataTable* SRsDamageTable; // 0xcf8(0x08)
	struct ABravoHotelBrokenEquipment* BrokenHelmetClass; // 0xa10(0x08)
	bool bNeedToSpawnBrokenEquipment; // 0x2024(0x01)
	float BrokenEquipmentLevel; // 0x3a34(0x04)
	struct FVector BrokenEquipmentDamagedDirection; // 0xdd4(0x0c)
	enum class EWearableItemType BrokenEquipmentType; // 0x166c(0x01)
	enum class EInteractionType InteractionType; // 0x3810(0x01)
	float InteractionTraceDistance; // 0x1420(0x04)
	struct AActor* DetectedInteractionActor; // 0x2ef0(0x08)
	struct UPrimitiveComponent* DetectedInteractionComponet; // 0x1cd8(0x08)
	struct USceneComponent* DetectedVehicleSeatComponent; // 0x36c0(0x08)
	struct TArray<struct AActor*> DetectedInteractionCancleActors; // 0x2840(0x10)
	struct TMap<struct UObject*, float> InteractionDistRatioMap; // 0x2e90(0x50)
	float ResurrectionCameraBlendTime; // 0x1698(0x04)
	struct UCameraPostProcessPreset* PostProcessResurrectionClass; // 0x3320(0x08)
	struct UCurveFloat* ResurrectionEffectCurve; // 0x1988(0x08)
	struct TScriptInterface<IMaterialControllableInterface> ResurrectionMaterialController; // 0x3a88(0x10)
	struct ABravoHotelPickup* DetectedPickableItem; // 0x3770(0x08)
	struct TArray<struct ABravoHotelPickup*> DetectedItemList; // 0x2bd8(0x10)
	struct TArray<struct ABravoHotelDropBoxActor*> DetectedBoxList; // 0x1068(0x10)
	struct TArray<struct ABravoHotelCharacter*> DetectedStealableList; // 0x8f8(0x10)
	struct TArray<struct ABravoHotelPickup*> DetectedItemHideList; // 0x30c8(0x10)
	struct FTimerHandle TimerHandle_CheckDetectedItemList; // 0x3490(0x08)
	struct UPlayerInventoryComponent* InventoryComponent; // 0xe70(0x08)
	struct UBravoHotelAbilityComponent* AbilityComponent; // 0x7e0(0x08)
	struct UBravoHotelDoorComponent* DoorComponent; // 0x1ef0(0x08)
	struct UParkourComponent* ParkourComponent; // 0x36a8(0x08)
	struct UBravoHotelBlueZoneGameRule* BlueZoneGameRule; // 0x2830(0x08)
	struct UBravoHotelVoiceComponent* VoiceComponent; // 0x1920(0x08)
	struct ULadderComponent* LadderComponent; // 0x29c0(0x08)
	struct UBHStationaryCharInfo* StationaryCharInfo; // 0x12e0(0x08)
	struct UBHCharacterReplication* CharacterReplication; // 0x37b0(0x08)
	struct FAnimSlot CombineAnim_Stand; // 0x3410(0x10)
	struct FAnimSlot CombineAnim_Prone; // 0x2b18(0x10)
	struct FAnimSlot RepairAnim_Stand; // 0x2b68(0x10)
	struct FAnimSlot RepairAnim_Prone; // 0x25b8(0x10)
	struct UAnimMontage* CurrentPickupMontage; // 0x19c8(0x08)
	struct FAnimSlot PickUpAnim_Unarmed_Floor; // 0x2bc8(0x10)
	struct FAnimSlot PickUpAnim_Unarmed_Table; // 0x23a8(0x10)
	struct FAnimSlot PickUpAnim_Unarmed_Crouch; // 0x2898(0x10)
	struct FAnimSlot PickUpAnim_Unarmed_Prone; // 0x27d8(0x10)
	struct FAnimSlot PickUpAnim_Rifle_Floor; // 0x1908(0x10)
	struct FAnimSlot PickUpAnim_Rifle_Table; // 0x8b0(0x10)
	struct FAnimSlot PickUpAnim_Rifle_Crouch; // 0x2080(0x10)
	struct FAnimSlot PickUpAnim_Rifle_Prone; // 0x1f00(0x10)
	struct FAnimSlot PickUpAnim_Pistol_Floor; // 0x2e70(0x10)
	struct FAnimSlot PickUpAnim_Pistol_Table; // 0x1050(0x10)
	struct FAnimSlot PickUpAnim_Pistol_Crouch; // 0x2258(0x10)
	struct FAnimSlot PickUpAnim_Pistol_Prone; // 0x1610(0x10)
	struct FAnimSlot DoorAnim_Open; // 0x2f98(0x10)
	struct FAnimSlot DoorAnim_Close; // 0x32c0(0x10)
	struct FAnimSlot DoorAnim_Kick; // 0x1858(0x10)
	struct FAnimSlot MovementAnim_GetUpFromBack; // 0x2bf0(0x10)
	struct FAnimSlot MovementAnim_GetUpFromFront; // 0xac0(0x10)
	struct FAnimSlot ConditionAnim_ShakeOut_Unarmed; // 0xd38(0x10)
	struct FAnimSlot ConditionAnim_ShakeOut_Rifle; // 0x30a0(0x10)
	struct TArray<struct FAnimSlot> MeleeAnim_Punch_Idle; // 0x15c8(0x10)
	struct TArray<struct FAnimSlot> MeleeAnim_Punch_Crouch; // 0x26f8(0x10)
	struct FAnimSlot MeleeAnim_Punch_Jump; // 0x1248(0x10)
	struct TArray<struct FAnimSlot> MeleeAnim_Rifle_Idle; // 0x1c70(0x10)
	struct TArray<struct FAnimSlot> MeleeAnim_Rifle_Crouch; // 0x1188(0x10)
	struct TArray<struct FAnimSlot> MeleeAnim_Pistol_Idle; // 0x8e0(0x10)
	struct TArray<struct FAnimSlot> MeleeAnim_Pistol_Crouch; // 0x28a8(0x10)
	struct TArray<struct FAnimSlot> DeathAnim_Crouch; // 0x1960(0x10)
	struct TArray<struct FAnimSlot> DeathAnim_FlameDamage; // 0x2a50(0x10)
	struct TArray<struct FAnimSlot> DeathAnim_Grenade; // 0xda8(0x10)
	struct TArray<struct FAnimSlot> DeathAnim_HeadShot; // 0x3168(0x10)
	struct TArray<struct FAnimSlot> DeathAnim_Natural; // 0x3378(0x10)
	struct TArray<struct FAnimSlot> DeathAnim_Rifle; // 0x3240(0x10)
	struct TArray<struct FAnimSlot> DeathAnim_Shotgun; // 0x25e0(0x10)
	struct TArray<struct FAnimSlot> DeathAnim_Sprint; // 0x1e10(0x10)
	struct TArray<struct FAnimSlot> DeathAnim_Falling; // 0x2530(0x10)
	struct UAnimationAsset* DeathAnim_ClosedEyes; // 0x26c0(0x08)
	struct UAkAudioEvent* PickUpStartEvent; // 0xdf0(0x08)
	struct UAkAudioEvent* PickUpBackpackEvent; // 0x2040(0x08)
	struct FAnimSlot EquipAnim_MainWeapon1; // 0x2cd8(0x10)
	struct FAnimSlot EquipAnim_MainWeapon1_Prone; // 0x2b58(0x10)
	struct FAnimSlot EquipAnim_MainWeapon2; // 0x1300(0x10)
	struct FAnimSlot EquipAnim_MainWeapon2_Prone; // 0x1a68(0x10)
	struct FAnimSlot EquipAnim_SubWeapon; // 0x2ac0(0x10)
	struct FAnimSlot EquipAnim_SubWeapon_Prone; // 0x1b58(0x10)
	struct FAnimSlot EquipAnim_Melee; // 0x1ae0(0x10)
	struct FAnimSlot EquipAnim_Melee_Prone; // 0x2600(0x10)
	struct FAnimSlot EquipAnim_Amplifier; // 0x3458(0x10)
	struct FAnimSlot EquipAnim_Amplifier_Prone; // 0x3090(0x10)
	struct FAnimSlot EquipAnim_HeartBeatSensor; // 0x2f18(0x10)
	struct FAnimSlot EquipAnim_HeartBeatSensor_Prone; // 0xc70(0x10)
	struct FAnimSlot SlidingAnim; // 0xf60(0x10)
	struct FAnimSlot RollingAnim; // 0x2068(0x10)
	struct FAnimSlot KnockbackRollingAnim; // 0x25f0(0x10)
	struct FAnimSlot EquipAnim_ThrowingWeapon; // 0x2fc0(0x10)
	struct FAnimSlot EquipAnim_Prone_ThrowingWeapon; // 0x16f0(0x10)
	struct FAnimSlot UnequipAnim_MainWeapon1; // 0xb90(0x10)
	struct FAnimSlot UnequipAnim_MainWeapon1_Prone; // 0x1c80(0x10)
	struct FAnimSlot UnequipAnim_MainWeapon2; // 0x3658(0x10)
	struct FAnimSlot UnequipAnim_MainWeapon2_Prone; // 0x3578(0x10)
	struct FAnimSlot UnequipAnim_SubWeapon; // 0x7c0(0x10)
	struct FAnimSlot UnequipAnim_SubWeapon_Prone; // 0xb40(0x10)
	struct FAnimSlot UnequipAnim_Melee; // 0x1468(0x10)
	struct FAnimSlot UnequipAnim_Melee_Prone; // 0x1a80(0x10)
	struct FAnimSlot UnequipAnim_Amplifier; // 0x14c8(0x10)
	struct FAnimSlot UnequipAnim_Amplifier_Prone; // 0x2300(0x10)
	struct FAnimSlot UnequipAnim_HeartBeatSensor; // 0x1f18(0x10)
	struct FAnimSlot UnequipAnim_HeartBeatSensor_Prone; // 0xfb8(0x10)
	struct FAnimSlot UnequipAnim_ThrowingWeapon; // 0x1e20(0x10)
	struct FAnimSlot UnequipAnim_Prone_ThrowingWeapon; // 0x1ca0(0x10)
	struct FAnimSlot LandingAnim_LandStop; // 0x1e58(0x10)
	struct FAnimSlot LandingAnim_Parachute; // 0x2730(0x10)
	struct FAnimSlot LandingAnim_Unarmed; // 0xca8(0x10)
	struct FAnimSlot LandingAnim_Rifle; // 0x33b0(0x10)
	struct FAnimSlot LandingAnim_Pistol; // 0x29a8(0x10)
	struct TArray<struct FResuscitationAnimSet> ResuscitationAnimSets; // 0x1040(0x10)
	struct TArray<struct UAkAudioEvent*> WeaponEquipEvents; // 0x2b80(0x10)
	struct TArray<struct UAkAudioEvent*> AttachmentEquipEvents; // 0xe78(0x10)
	struct TArray<struct UAkAudioEvent*> WearableEquipEvents; // 0x2090(0x10)
	struct TArray<struct UAkAudioEvent*> ConsumablesEvents; // 0x3a98(0x10)
	struct UAkAudioEvent* MedipackUseEvent; // 0x1ee0(0x08)
	struct UAkAudioEvent* ItemDropEvent; // 0x1b68(0x08)
	struct UAkAudioEvent* ADSEnterEvent; // 0x2198(0x08)
	struct UAkAudioEvent* ADSEnterEvent_Digital; // 0x3510(0x08)
	struct UAkAudioEvent* ADSExitEvent; // 0x1cd0(0x08)
	struct UAkAudioEvent* ADSExitEvent_Digital; // 0xc48(0x08)
	struct UAkAudioEvent* AOSEnterEvent; // 0x39c0(0x08)
	struct UAkAudioEvent* AOSExitEvent; // 0x37b8(0x08)
	struct UAkAudioEvent* AMPEnterEvent; // 0x2ba8(0x08)
	struct UAkAudioEvent* AMPExitEvent; // 0x2408(0x08)
	struct UAkAudioEvent* AMPNoiseEvent; // 0xb18(0x08)
	struct UAkAudioEvent* AMPNoiseStopEvent; // 0x2f70(0x08)
	struct UAkAudioEvent* PlosiveSoundDetection3LvEvent; // 0xbc8(0x08)
	struct UAkAudioEvent* HeartBeatSensorEnterEvent; // 0x8a0(0x08)
	struct UAkAudioEvent* HeartBeatSensorExitEvent; // 0x29e0(0x08)
	struct UAkAudioEvent* HeartBeatSensorNoiseEvent; // 0x32b0(0x08)
	struct UAkAudioEvent* HeartBeatSensorNoiseStopEvent; // 0x3798(0x08)
	struct UAkAudioEvent* DamagedEvent; // 0x2708(0x08)
	struct UAkAudioEvent* HitEvent; // 0x1478(0x08)
	struct UAkAudioEvent* SnowAreaEnteringEvent; // 0x9f8(0x08)
	struct UAkAudioEvent* UltimateSprintEvent; // 0x33e0(0x08)
	bool bIsParachuteLanding; // 0x2f88(0x01)
	float ParachuteLandingHeight; // 0x1408(0x04)
	struct UAkAudioEvent* StartDescendingEvent; // 0x23f8(0x08)
	struct UAkAudioEvent* ParachuteFoldEvent; // 0x1e70(0x08)
	struct FTimerHandle TimerHandle_Sequnce; // 0x2890(0x08)
	struct UWidgetComponent* TeamPosition; // 0x23f0(0x08)
	float AdditionalTeamPositionWidgetHeight; // 0x8f0(0x04)
	float TeamPositionWidgetInterpSpeed; // 0x3a18(0x04)
	float CurrentTeamPositionHeight; // 0x1258(0x04)
	struct FMulticastInlineDelegate OnChangeDetectedItems; // 0x3680(0x10)
	bool bIsArmedBeforeAction; // 0x17d8(0x01)
	struct FMulticastInlineDelegate Delegate_OnViewCameraInWater; // 0x1b28(0x10)
	struct FMulticastInlineDelegate Delegate_OnViewCameraOutWater; // 0x14e0(0x10)
	bool bInSmoke; // 0x1484(0x01)
	struct FMulticastInlineDelegate Delegate_OnInSmoke; // 0x1168(0x10)
	struct FMulticastInlineDelegate Delegate_OnOutSmoke; // 0x2a20(0x10)
	struct TArray<struct AActor*> SmokeActors; // 0x34c0(0x10)
	struct UAkAudioEvent* SwimDiveEvent; // 0x1ac0(0x08)
	bool bIsEnterIndoorVolume; // 0x1bbc(0x01)
	struct USkyLightComponent* SkyLightRef; // 0x2f68(0x08)
	float PrevSkyLightIntensityCache; // 0x19e0(0x04)
	struct FColor PrevSkyLightOcclusionTintCache; // 0x1240(0x04)
	float SkyLightCurrentPriority; // 0x3318(0x04)
	struct TArray<struct UInDoorVolumeComponent*> OverlappedInDoorVolumes; // 0x2b38(0x10)
	struct UBravoHotelPhysicalMaterial* LastSteppedSurface; // 0xae0(0x08)
	enum class EPhysicalSurface SurfaceType; // 0x3114(0x01)
	enum class EPhysicalSurface SurfaceType_LastTick; // 0x1344(0x01)
	float MP_SnowInterpSpeed; // 0x37e4(0x04)
	struct FTimerHandle TimerHandle_BreathEffect; // 0x1cf8(0x08)
	struct UParticleSystemComponent* BreathParticleComponent; // 0x9c0(0x08)
	struct UParticleSystem* BreathParticle_Idle; // 0x1550(0x08)
	struct UParticleSystem* BreathParticle_Moving; // 0x3960(0x08)
	struct UParticleSystem* InWaterParticle; // 0x3a58(0x08)
	struct FMulticastInlineDelegate OnUpdateMutableDelegate; // 0xd90(0x10)
	struct ABravoHotelWaterPhysicsVolume* OverlapWaterVolume; // 0x2c70(0x08)
	bool bIsMelee; // 0x2d69(0x01)
	bool bIsMeleeJumpAttack; // 0x2c79(0x01)
	bool bCanJumpMeleeAttack; // 0x2e58(0x01)
	bool bIsMeleeAttackBlocked; // 0x36b4(0x01)
	float LastMeleeAttackTime; // 0x2728(0x04)
	struct FAnimSlot CurrentMeleeAnimSlot; // 0xa70(0x10)
	struct TArray<struct AActor*> ActorsToIgnore_Melee; // 0x1448(0x10)
	struct TArray<struct UPrimitiveComponent*> MeshesToIgnore_Melee; // 0xb58(0x10)
	float UnarmedMeleeDamage_Ground; // 0xe04(0x04)
	float UnarmedMeleeDamage_Jump; // 0x3694(0x04)
	bool bIsFired; // 0xf59(0x01)
	bool bWantsToFire; // 0x1928(0x01)
	bool bWantsToAOS; // 0x2c80(0x01)
	bool bIsLanded; // 0xebc(0x01)
	float FiredTimeCount; // 0x2be8(0x04)
	float StartFireTime; // 0x1b00(0x04)
	char bIsADSFireToCamera : 1; // 0x2ef8(0x01)
	float FireToCameraLocationCorrection; // 0x3270(0x04)
	struct FRotator ArmsLagRotation; // 0x3078(0x0c)
	float ArmsLagDeltaMin; // 0x2120(0x04)
	float ArmsLagDeltaMax; // 0x258c(0x04)
	float DefaultsArmsLagRotationMax; // 0x1a0c(0x04)
	float DefaultsArmsLagRotationSpeed; // 0x1a7c(0x04)
	struct TMap<enum class EWeaponAttachmentItem, struct FBravoHotelArmsLag> ArmsLags; // 0x928(0x50)
	float ArmsLagBaseModify; // 0xe98(0x04)
	float ArmsLagWeaponModify; // 0x12e8(0x04)
	struct FRotator ArmsLagWeaponRotation; // 0x1de4(0x0c)
	struct FRotator ADSDeltaRotation; // 0x7f8(0x0c)
	struct FVector ADSEndLocation; // 0xe38(0x0c)
	bool bSteadyAim; // 0xfb1(0x01)
	struct FVector LastSwayRotationOnSteadyAim; // 0x168c(0x0c)
	struct UAkAudioEvent* SteadyAimReadyEvent; // 0x1fd8(0x08)
	struct UAkAudioEvent* SteadyAimStartEvent; // 0x1eb0(0x08)
	struct UAkAudioEvent* SteadyAimEndEvent; // 0x3070(0x08)
	float HeadShotBloodEffectDistance; // 0x1294(0x04)
	struct UParticleSystem* HeadShotHelmetFxEmitterTemplate; // 0x2200(0x08)
	float BoltActionDelayTime; // 0x3958(0x04)
	bool bWaitingADSReturn; // 0xf94(0x01)
	float ADSReturnEnableTime; // 0x3480(0x04)
	float Delay_AOSToADS; // 0xc84(0x04)
	bool bNeedToBeADS; // 0x22f0(0x01)
	struct FTimerHandle TimerHandle_ADSProcess; // 0x7d0(0x08)
	struct UCameraPostProcessPreset* PP_Preset_ADS; // 0x29d8(0x08)
	struct UCameraPostProcessPreset* PPInst_ADS; // 0x16b0(0x08)
	float ReplayInputForwardAxisValue; // 0x898(0x04)
	float ReplayInputRightAxisValue; // 0xf48(0x04)
	struct FVector2D CurrentInputAxis; // 0x2f48(0x08)
	struct FMulticastInlineDelegate Delegate_OnCameraViewModeChanged; // 0x5f8(0x10)
	struct UAkAudioEvent* ZoomInAudioEvent_Digital; // 0x2570(0x08)
	struct UAkAudioEvent* ZoomOutAudioEvent_Digital; // 0x2680(0x08)
	float ZoomAudioEventRepeatDelay; // 0x1aa0(0x04)
	float ZoomAudioEventLastPlayTime; // 0x2e30(0x04)
	struct FMulticastInlineDelegate OnPickableItemDetected; // 0x638(0x10)
	float OverHeadTraceDistance; // 0xc18(0x04)
	bool bShouldAdjustOverHead; // 0x3568(0x01)
	float UpdateAnimationDistance; // 0x1eb8(0x04)
	bool bIsDisarming; // 0x668(0x01)
	struct UAkAudioEvent* ResuscitationStopEvents; // 0x820(0x08)
	struct ABravoHotelCharacter* ResuscitatingCharacter; // 0xca0(0x08)
	float RequestResuscitationCoolTime; // 0x2670(0x04)
	struct FAnimSlot CurrentResuscitationAnimSlot; // 0xc38(0x10)
	struct FTimerHandle TimerHandle_SetIsFired; // 0xc58(0x08)
	float KillAssistValidTime; // 0x32b8(0x04)
	int32_t KillAssistMaxCount; // 0x37cc(0x04)
	float KnockOutAssistValidTime; // 0x3724(0x04)
	int32_t KnockOutAssistMaxCount; // 0x2cc4(0x04)
	struct TArray<struct FAssistInfo> AssistInfo; // 0x2938(0x10)
	float ThrowingWeaponFireDelay; // 0x1d60(0x04)
	float PreShootDeltaSecond; // 0x3554(0x04)
	bool bIsParachuteAvailable; // 0x2338(0x01)
	float ParachuteInputForward; // 0xad0(0x04)
	float ParachuteInputRight; // 0xf24(0x04)
	float ParachuteForwardMomentum; // 0x27c0(0x04)
	struct FRotator ParachuteLastRotator; // 0x3730(0x0c)
	float CurrentParachuteMaxMomentum; // 0x3a3c(0x04)
	float ParachuteMaxMomentum; // 0x9d4(0x04)
	float ParachuteMomentumAcc; // 0x22f8(0x04)
	float ParachuteMomentumDeacc; // 0x2718(0x04)
	float ParachuteMomentumZ; // 0x29c8(0x04)
	float DescentInputVectorAcc; // 0x109c(0x04)
	float ParachuteInputVectorAcc; // 0x2058(0x04)
	float ParachuteVelocityChangeFinalRate; // 0x3570(0x04)
	float ParachuteVelocityChangeZDecRate; // 0x17e8(0x04)
	float ParachuteLandingVelocityZ; // 0x14b0(0x04)
	float ParachuteLandingVelocityXY; // 0x137c(0x04)
	float ForwardMomentumRangeMin; // 0x3280(0x04)
	float ForwardMomentumRangeMax; // 0x39b8(0x04)
	float CurrentYawSpeed; // 0x1dd4(0x04)
	float CurrentRollSpeed; // 0x2ce8(0x04)
	float CurrentPitchSpeed; // 0x1f8c(0x04)
	float MinPitchInParachute; // 0x12c0(0x04)
	float MaxPitchInParachute; // 0xdf8(0x04)
	float GlidePitchInParachute; // 0x2558(0x04)
	float MinRollInParachute; // 0x1ef8(0x04)
	float MaxRollInParachute; // 0x3698(0x04)
	float MaxRollInParachuteVelocity; // 0x2078(0x04)
	float ParachuteTurnSpeedYaw; // 0x292c(0x04)
	float ParachuteTurnSpeedPitch; // 0x2d84(0x04)
	float ParachuteTurnSpeedRoll; // 0x818(0x04)
	float ParachuteTurnChangeSpeedYaw; // 0x1dd0(0x04)
	float ParachuteTurnChangeSpeedPitch; // 0x17c8(0x04)
	float ParachuteTurnChangeSpeedRoll; // 0x1d68(0x04)
	float HeightToGetInParachuteFromLand; // 0x34ec(0x04)
	float ForceHeightToGetInParachuteFromLand; // 0x12dc(0x04)
	struct FVector_NetQuantize ReplicatedParachuteVelocity; // 0x2fd8(0x0c)
	struct UCurveFloat* ParachutePitchCurve; // 0x12f8(0x08)
	struct TArray<struct TSoftObjectPtr<UMaterialInterface>> ParachuteSkinMaterials; // 0x1510(0x10)
	struct UMaterialInterface* CurrentParachuteSkin; // 0x7b8(0x08)
	bool bChangeNearClipPlane; // 0x2540(0x01)
	float DescentStartZPosition; // 0x3a38(0x04)
	float ParachuteAvailableFallingDistance; // 0x3084(0x04)
	float DescentZ; // 0x2b90(0x04)
	float SeaLevelZ; // 0x30b4(0x04)
	float SaveMaxWalkSpeed; // 0x2134(0x04)
	float SaveCameraBoomLocationZ; // 0x36b0(0x04)
	float PosToGetInParachute; // 0xe5c(0x04)
	struct UCameraPostProcessPreset* AccelerationPPClass; // 0x27c8(0x08)
	struct UCurveFloat* RadialOnDescentCurve; // 0x3520(0x08)
	float RadialRate; // 0x1568(0x04)
	float DescentBlurWidth; // 0x22f4(0x04)
	struct UCameraPostProcessPreset* AccelerationPPInst; // 0x2a08(0x08)
	float TargetSpringArmLengthDescent; // 0x1b18(0x04)
	float SpeedSpringArmLengthDesecnt; // 0x864(0x04)
	bool bDescentCameraShakeLoop; // 0x3558(0x01)
	float DescentCameraShakeDelay; // 0x1b08(0x04)
	struct UCameraShake* DescentCameraShake; // 0x14a8(0x08)
	struct UParticleSystem* CloudFxEmitterTemplate; // 0x26a0(0x08)
	struct UParticleSystemComponent* CloudFxInDescent; // 0x2920(0x08)
	float VelocityZ_LandStop; // 0x3488(0x04)
	float VelocityZ_Falling; // 0x1ffc(0x04)
	float PrevMeshRelativeZ; // 0x3214(0x04)
	float PronedEyeHeight; // 0x155c(0x04)
	bool bIsProneWeaponIdle; // 0x3028(0x01)
	bool bIsAutoSprint; // 0x2c78(0x01)
	float PronedDeltaHeightCamera3P; // 0xb70(0x04)
	float CrouchedDeltaHeightCamera3P; // 0x2ae4(0x04)
	float CrouchMovedDeltaHeightCamera3P; // 0x1b04(0x04)
	float StandDeltaHeightCamera3P; // 0x12a8(0x04)
	float StandSprintDeltaHeightCamera3P; // 0x2f10(0x04)
	struct FVector Camera1PInterpSrc; // 0x1b40(0x0c)
	struct FVector Camera3PInterpSrc; // 0x18fc(0x0c)
	struct FVector Camera3PInterpDst; // 0x194c(0x0c)
	float TargetArmLength; // 0x81c(0x04)
	float TargetArmLengthInterpSpeed; // 0x2d38(0x04)
	float TargetArmLengthInterpSpeed_AMP; // 0x23c8(0x04)
	float TargetArmLengthInterpSpeed_HeartBeatSensor; // 0x2664(0x04)
	float TargetFieldOfView; // 0x1948(0x04)
	struct FVector TargetSocketOffset; // 0xe9c(0x0c)
	float DefaultCameraLag; // 0x207c(0x04)
	float ReturnCameraLag; // 0x3ab0(0x04)
	struct FVector DefaultSocketOffset_VehicleAOS; // 0x330c(0x0c)
	struct FVector DefaultSocketOffset_LeftHipshot; // 0x2e5c(0x0c)
	struct FVector DefaultSocketOffset_Hipshot; // 0x34dc(0x0c)
	struct FVector DefaultSocketOffset_RightHipshot; // 0x1078(0x0c)
	struct FVector DefaultSocketOffset_LeftLeanAOS; // 0x3548(0x0c)
	struct FVector DefaultSocketOffset_RightLeanAOS; // 0x355c(0x0c)
	struct FVector DefaultSocketOffset_LeftAOS_Idle; // 0x33d4(0x0c)
	struct FVector DefaultSocketOffset_RightAOS_Idle; // 0x3670(0x0c)
	struct FVector DefaultSocketOffset_LeftAOS_Crouch; // 0x868(0x0c)
	struct FVector DefaultSocketOffset_RightAOS_Crouch; // 0x2b98(0x0c)
	struct FVector DefaultSocketOffset_LeftAOS_Prone; // 0x14f0(0x0c)
	struct FVector DefaultSocketOffset_RightAOS_Prone; // 0x1b88(0x0c)
	struct FVector DefaultTargetOffset_HipShot; // 0x1bec(0x0c)
	struct FVector DefaultTargetOffset_AOS_Stand_Idle; // 0xc00(0x0c)
	struct FVector DefaultTargetOffset_AOS_Stand_Lean; // 0x394c(0x0c)
	struct FVector DefaultTargetOffset_AOS_Crouch_Idle; // 0x2cc8(0x0c)
	struct FVector DefaultTargetOffset_AOS_Crouch_Lean; // 0x1500(0x0c)
	float DefaultTargetArmLength_Hipshot; // 0x131c(0x04)
	float DefaultTargetArmLength_AOS; // 0x37e0(0x04)
	float Camera3P_FOV_InterpSpeed; // 0x1de0(0x04)
	float Camera3P_AMP_FOV_InterpSpeed; // 0x2af0(0x04)
	float Camera3P_HeartBeatSensor_FOV_InterpSpeed; // 0xd18(0x04)
	float Camera3P_Lean_InterpSpeed; // 0x2660(0x04)
	struct AActor* DeathCamClass; // 0x1640(0x08)
	float DeathBeginTime; // 0x3500(0x04)
	struct USkeletalMesh* BodyBaseSkeletalMesh; // 0x678(0x08)
	bool bNeedToUpdatePreviewPawn; // 0x1bb4(0x01)
	struct UCustomizableObjectInstance* Mutable_MaleInstance; // 0xe90(0x08)
	struct UCustomizableObjectInstance* Mutable_FemaleInstance; // 0x14b8(0x08)
	struct ABravoHotelInventoryCharacter* InventoryCharacterClass; // 0x1d18(0x08)
	struct ABravoHotelInventoryCharacter* InventoryCharacter; // 0x2330(0x08)
	struct FMulticastInlineDelegate OnUpdateCastingDelegate; // 0x6c0(0x10)
	int32_t UsingBackpackItemIndex; // 0x27e8(0x04)
	float ItemInterruptInputSeconds; // 0x2d80(0x04)
	struct FTimerHandle CastingItemTimer; // 0x27f0(0x08)
	struct FTimerHandle CastingSupplyTimer; // 0x3748(0x08)
	struct FTimerHandle CastingItemMontageTimer; // 0x3260(0x08)
	struct FAnimSlot LastCastingItemAnimSlot_Stand; // 0x22c0(0x10)
	struct FAnimSlot LastCastingItemAnimSlot_Prone; // 0x32e0(0x10)
	struct TArray<struct UAkAudioEvent*> CastingStopEvents; // 0x3968(0x10)
	bool bIsCastingItem; // 0x205c(0x01)
	struct FCompletedCasting CompletedCastingInfo; // 0x2544(0x08)
	int32_t BasicSetting_gender; // 0x17b0(0x04)
	int32_t BasicSetting_face; // 0xda0(0x04)
	int32_t BasicSetting_face_color; // 0x19f0(0x04)
	int32_t BasicSetting_hair; // 0x1264(0x04)
	int32_t BasicSetting_hair_color; // 0x3370(0x04)
	int32_t BasicSetting_makeup; // 0x1f48(0x04)
	struct TArray<struct FInventoryItemInfo> BasicSettingItemInfos; // 0x31a0(0x10)
	struct FName CombineTargetRecipe; // 0x1298(0x08)
	struct TArray<struct FName> CombineTargetMaterials; // 0x808(0x10)
	struct UAkAudioEvent* CombineCompleteAudioEvent; // 0x1848(0x08)
	bool bEnabledFur; // 0x3029(0x01)
	struct FName WearableNameHasFur; // 0x7ec(0x08)
	float CooldownTimeForEnterVehicle; // 0x1270(0x04)
	float CoolDownTimeForUseLadder; // 0x17e0(0x04)
	struct TArray<struct ABravoHotelVehicle*> NearbyVehicles; // 0x1f90(0x10)
	struct FMulticastInlineDelegate Delegate_OnEnteredVehicle; // 0x6d0(0x10)
	float MaxVehicleEscapeSpeed; // 0x2e68(0x04)
	struct UBravoHotelVehicleSeatComponent* PreviousVehicleSeat; // 0x23e8(0x08)
	struct TArray<struct ABravoHotelProjectileGrenade*> ProjectileGrenades; // 0x2d40(0x10)
	struct FMulticastInlineDelegate OnChangeProjectilePredictPath; // 0xab0(0x10)
	bool IsBlind; // 0x9b8(0x01)
	struct FMulticastInlineDelegate OnAirCraftDelegate; // 0xe48(0x10)
	struct FMulticastInlineDelegate OnCharacterGroundStateChangeDelegate; // 0x1cb0(0x10)
	float FlashBangAngle; // 0x14c0(0x04)
	struct UCameraPostProcessPreset* PostProcessFlashBangClass; // 0x3528(0x08)
	struct UAkAudioEvent* GrenadeFlashBangStartEvent; // 0x32f0(0x08)
	struct UAkAudioEvent* GrenadeFlashBangEndEvent; // 0x2b48(0x08)
	struct UAkAudioEvent* GrenadeFragmentExplosionSineStopEvent; // 0x3760(0x08)
	struct UCameraPostProcessPreset* PostProcessBloodHitClass; // 0x2fd0(0x08)
	struct UCurveFloat* DamagedDissolveAnimationCurve; // 0x1178(0x08)
	struct UCameraPostProcessPreset* PostProcessBloodHit; // 0x1f50(0x08)
	float DamagedDissolveRateTime; // 0x2b94(0x04)
	float DamagedTermTime; // 0xf00(0x04)
	float DamagedDissolveAnimaitionMaxTime; // 0xcf0(0x04)
	float HitBlinkTime; // 0xec4(0x04)
	float InternalDamagedTermTime; // 0x27d0(0x04)
	float InternalHitBlinkTime; // 0xd00(0x04)
	float DamagedDissolveAnimationValue; // 0x1458(0x04)
	bool IsEndTermTime; // 0x1ec8(0x01)
	bool IsPlayingDamage; // 0x2400(0x01)
	bool IsHit; // 0x1520(0x01)
	bool IsDissolve; // 0x3790(0x01)
	bool DamageReset; // 0x1fc0(0x01)
	int32_t HitBlinkState; // 0x1598(0x04)
	int32_t CurrentDamageCount; // 0x2c7c(0x04)
	int32_t DissolveCount; // 0x30b8(0x04)
	struct UCameraPostProcessPreset* PostProcessOuterPlayZoneClass; // 0x1da0(0x08)
	float ShowTimePostProcessOuterPlayZone; // 0x3088(0x04)
	struct FTimerHandle TimerHandle_OuterPlayZone; // 0x2c68(0x08)
	struct UCameraPostProcessPreset* PostProcessBlueZoneHitClass; // 0x3298(0x08)
	struct FTimerHandle TimerHandle_BlueZone; // 0x1fa0(0x08)
	struct UCameraPostProcessPreset* PostProcessMagneticHitClass; // 0x1320(0x08)
	struct UCameraPostProcessPreset* PostProcessMagneticHit; // 0x1090(0x08)
	struct UCurveFloat* MagneticDamagedDissolveAnimationCurve; // 0x2e28(0x08)
	float MagneticDamagedTermTime; // 0x32a4(0x04)
	float MagneticDamagedDissolveAnimaitionMaxTime; // 0xbfc(0x04)
	float MagneticHitBlinkTime; // 0x29e8(0x04)
	float InternalMagneticDamagedTermTime; // 0x1060(0x04)
	float InternalMagneticHitBlinkTime; // 0x31b0(0x04)
	float MagneticDamagedDissolveAnimationValue; // 0x356c(0x04)
	float BluezoneMaterialOnTime; // 0x2850(0x04)
	bool IsMagneticEndTermTime; // 0x17e4(0x01)
	bool IsMagneticDamage; // 0x3518(0x01)
	bool IsMagneticHit; // 0x201c(0x01)
	bool IsMagneticDissolve; // 0x349c(0x01)
	bool MagneticDamageReset; // 0x2fb0(0x01)
	struct UCameraPostProcessPreset* PostProcessDustClass; // 0xf50(0x08)
	struct UCurveFloat* DustDissolveAnimationCurve; // 0x2550(0x08)
	struct UCameraPostProcessPreset* PostProcessDust; // 0x2298(0x08)
	float DustDissolveAnimaitionMaxTime; // 0x2bb0(0x04)
	float DustDissolveDelayTime; // 0x19b0(0x04)
	float InternalDustDissolveDelayTime; // 0x1f10(0x04)
	float DustDissolveAnimationValue; // 0x191c(0x04)
	bool IsOnDust; // 0x1e50(0x01)
	bool IsDustDissolve; // 0x1084(0x01)
	bool DustReset; // 0x2528(0x01)
	struct UCameraPostProcessPreset* PP_Preset_PickupOutline; // 0x29f0(0x08)
	struct UCameraPostProcessPreset* PP_PickupOutlineRef; // 0x2868(0x08)
	float CurrentOutlineThickness; // 0x228c(0x04)
	float MaxOutlineThickness; // 0x15ac(0x04)
	float OutlineThicknessInterpSpeed; // 0x2564(0x04)
	float CurrentCameraModifyerX; // 0x1ce4(0x04)
	float CurrentCameraModifyerY; // 0x91c(0x04)
	enum class EMouseSensitivityState CurrentEMouseSensitivityState; // 0x1a78(0x01)
	bool bPendingOpenDoor; // 0xb6c(0x01)
	struct ABravoHotelDoor* KickTargetDoor; // 0x3478(0x08)
	struct UParticleSystem* DoorBreachingParticle; // 0x2bb8(0x08)
	struct UParticleSystem* WindowBreachingParticle; // 0x3198(0x08)
	struct UAkAudioEvent* BreachingAudioEvent; // 0xf40(0x08)
	struct UAkAudioEvent* BreachingAudioEvent_Silence; // 0xf30(0x08)
	struct UBravoHotelAnimInstance* AnimInstance; // 0xc88(0x08)
	struct UBravoHotelAnimInstancePostprocess* PostprocessAnimInstance; // 0x1d90(0x08)
	struct UBravoHotelAnimInstanceFPP* AnimInstance_FPP; // 0x2060(0x08)
	struct ABravoHotelGameState* BravoHotelGameState; // 0x23b8(0x08)
	struct ABravoHotelPlayerController* BravoHotelPlayerController; // 0x37a8(0x08)
	int32_t IdleNum; // 0xf90(0x04)
	float IdleWaitingTime; // 0x1bb0(0x04)
	struct FName LevelUpEffectBuffName; // 0x1970(0x08)
	struct TArray<struct FName> DefaultBuffName; // 0xdc0(0x10)
	struct TArray<struct FPerkInfo> DefaultPerkInfo; // 0x1fe8(0x10)
	struct TArray<struct FString> UberUser; // 0xf70(0x10)
	struct TArray<struct FPerkInfo> CurrentPerkInfos; // 0x1c90(0x10)
	struct FPerkInfo UltimatePerkInfo; // 0x1bc0(0x28)
	struct TArray<struct FPerkUIInfo> PerkUIInfos; // 0x3360(0x10)
	struct FPerkUIInfo UltimateUIInfo; // 0xd48(0x2c)
	struct TArray<struct FPerkDeckElement> CurrentPerkCards; // 0x1ed0(0x10)
	struct TArray<struct FMutableData> MutableBuffList; // 0x1278(0x10)
	enum class EBuffEventType CurrentSkillType; // 0x2411(0x01)
	struct FMulticastInlineDelegate OnChangeFireType; // 0xc20(0x10)
	int32_t CurrentReadyToSnipeGrade; // 0x2598(0x04)
	struct FMulticastInlineDelegate Delegate_OnEndSearchInstinct; // 0x37f0(0x10)
	struct TArray<struct AActor*> UsedTrapList; // 0x1650(0x10)
	enum class EPerkLevelUpType PerkLevelUpType; // 0x15d8(0x01)
	int32_t ActiveSkillInitIndex; // 0xc64(0x04)
	int32_t ActiveSkillCount; // 0xe58(0x04)
	struct FDisplayAbility CurrentDisplayAbility; // 0x32f8(0x0c)
	struct TArray<struct UObject*> LoadedClasses; // 0x2d50(0x10)
	int32_t PerkDeckChangingCount; // 0x17fc(0x04)
	struct FMulticastInlineDelegate OnMovementInputPressedDelegate; // 0x718(0x10)
	char bIsMoving : 1; // 0x36a0(0x01)
	char bForceMoving : 1; // 0x3184(0x01)
	struct UBravoHotelDamageType* LastDamagedType; // 0x12a0(0x08)
	float LastDamagedAmount; // 0x1088(0x04)
	struct UBravoHotelDamageType* LastHitType; // 0x3470(0x08)
	struct FBravoHotelTakeDamageInfo LastSimulatedTakeDamageInfo; // 0xa20(0x48)
	struct FHitResult DebuffHitResult; // 0x2d98(0x88)
	struct UBravoHotelDamageType* DebuffHitDamageType; // 0x1df8(0x08)
	struct TArray<struct FAnimSlot> TakeDamageMontageList; // 0x830(0x10)
	struct UParticleSystem* BloodSplatterEffect; // 0x1f58(0x08)
	struct UParticleSystem* PunchEffect; // 0x2a48(0x08)
	struct UParticleSystem* ThrowingWeaponDirectHitEffect; // 0x29d0(0x08)
	float BloodEffectNearbyDist; // 0x3620(0x04)
	struct FBravoHotelDefaultItemSetting DefaultItemSetting; // 0x3420(0x38)
	struct FBravoHotelDefaultWearableSetting DefaultWearableSetting; // 0x2808(0x18)
	struct TArray<struct FBravoHotelItemPresetForBlackMarket> BlackMarketItemPresetList; // 0x3750(0x10)
	struct FMulticastInlineDelegate OnCanProneFailedDelegate; // 0x730(0x10)
	float MinDamageableFallingSpeed; // 0x1f74(0x04)
	float MaxDamageableFallingSpeed; // 0x19f4(0x04)
	float MinDamageableFallingSpeedFromVehicle; // 0x25cc(0x04)
	float MaxDamageableFallingSpeedFromVehicle; // 0x367c(0x04)
	enum class ELandingReason LandingReason; // 0x1660(0x01)
	struct FMulticastInlineDelegate Delegate_OnExitFallingState; // 0x850(0x10)
	struct TArray<struct TWeakObjectPtr<struct UBravoHotelPhysicalMaterial>> OverlappedPhysicMaterials; // 0x878(0x10)
	float BushSoundSpawnDelay; // 0x15b0(0x04)
	float BushLandingDamageMultiplier; // 0x21a4(0x04)
	struct TSet<struct UPrimitiveComponent*> OverlappedCantProneComponent; // 0x2418(0x50)
	bool bIsInsideBlueZone; // 0x1e00(0x01)
	bool bIsSpectated; // 0x145c(0x01)
	struct TMap<struct FName, struct FVector> Camera3P_DeltaTargetOffsets; // 0x18a8(0x50)
	bool bReplaceFreeLook; // 0x1378(0x01)
	bool bUpdateDeathRotation; // 0x8a8(0x01)
	struct FVector RagdollLocation; // 0x1310(0x0c)
	struct FVector RagdollVelocity; // 0x33c8(0x0c)
	struct UDamageType* LastDamageType; // 0x37e8(0x08)
	float Ragdoll_ZOffset; // 0x2fa8(0x04)
	bool bApplyRagdollForce; // 0x2ca0(0x01)
	struct UBravoHotelCharacterMovementComponent* BravoHotelCharacterMovement; // 0x760(0x08)
	enum class EMovementMode PrevMovementMode; // 0x2c64(0x01)
	enum class EMovementMode NewMovementMode; // 0x1b94(0x01)
	enum class ECustomMovementMode PrevCustomMovementMode; // 0x2a38(0x01)
	enum class ECustomMovementMode NewCustomMovementMode; // 0xbd8(0x01)
	struct FVector MovementInputVector; // 0xb04(0x0c)
	struct FTimerHandle TimerHandle_HideParachute; // 0x768(0x08)
	struct FTimeline Timeline_TunnelEffect; // 0x2490(0x98)
	struct TMap<enum class EWeaponAttachmentItem, struct UCurveFloat*> Curve_TunnelEffect; // 0x2c08(0x50)
	struct FTimeline Timeline_CameraInterp; // 0x11a8(0x98)
	struct UCurveFloat* Curve_CameraInterp; // 0x1590(0x08)
	struct UCurveFloat* Curve_AdsCameraInterp; // 0x34b8(0x08)
	float MinTimeJumpingBeforeLand; // 0x844(0x04)
	float DescentXYAcc; // 0x2240(0x04)
	float DescentAirControl; // 0x1850(0x04)
	float DescentSpeed; // 0x3690(0x04)
	float DescentGravityScale; // 0xbd0(0x04)
	float DescentDeacceleration; // 0x3948(0x04)
	float DescentMaxAcceleration; // 0xb00(0x04)
	struct FVector DescentCameraLocation; // 0x2614(0x0c)
	float ParachuteAirControl; // 0x15b8(0x04)
	float ParachuteSpeed; // 0x14b4(0x04)
	float ParachuteGravity; // 0x14d8(0x04)
	float ParachuteDeacceleration; // 0x156c(0x04)
	float ParachuteMaxAcceleration; // 0x26c8(0x04)
	struct FVector ParachuteCameraLocation; // 0x2268(0x0c)
	float ParachuteSocketOffsetY; // 0xd34(0x04)
	float ParachuteSocketDeltaOffsetZ; // 0xcdc(0x04)
	float ParachuteReadyToLandHeight; // 0x848(0x04)
	float ParachuteQuickLandingStartHeight; // 0x2030(0x04)
	float ParachuteQuickLandingStartRadius; // 0x1e0c(0x04)
	float ParachuteQuickLandingVelocityModifierXY; // 0x2f50(0x04)
	float ParachuteQuickLandingVelocityModifierZ; // 0x351c(0x04)
	float ParachuteQuickLandingDMGRate; // 0x1870(0x04)
	bool bCanQuickLanding; // 0x918(0x01)
	struct FVector LastQuickLandingAllowedLocation; // 0x3108(0x0c)
	struct FVector ParachuteTargetCameraLocation; // 0xd20(0x0c)
	float ParachuteTargetCameraSpeed; // 0xdfc(0x04)
	float ParachuteTargetArmLengthSpeedStart; // 0x159c(0x04)
	float ParachuteTargetArmLengthSpeedEnd; // 0x20a8(0x04)
	struct UCameraShake* ParachuteUnfoldCameraShake; // 0x2b30(0x08)
	struct UAkAudioEvent* BreathStartEvent; // 0x2038(0x08)
	struct UAkAudioEvent* BreathEndEvent; // 0xbf0(0x08)
	struct UAkAudioEvent* BreathStopEvent; // 0x1f80(0x08)
	struct FVector2D SprintingBeginRange; // 0x1ba8(0x08)
	struct FVector2D SprintingRange; // 0x8cc(0x08)
	float ReduceCharacterSpeedTime; // 0x2390(0x04)
	float InternalReduceCharacterSpeedTime; // 0x1fe0(0x04)
	bool IsInReduceSpeedExplosionRange; // 0x3400(0x01)
	struct UDataTable* PostProcessEffectsTable; // 0x3628(0x08)
	struct TMap<struct FName, struct FBravoHotelPostProcessSettings> PostProcessAssignedList; // 0x3118(0x50)
	struct TArray<struct UCameraPostProcessPreset*> PostProcessBuffList; // 0x19a0(0x10)
	struct UDataTable* RenderSettingsTable; // 0x2668(0x08)
	bool bUpdateRenderSettings; // 0x1980(0x01)
	int32_t CurrentTerrainType; // 0x3a10(0x04)
	struct FVector AttachInAircraftOffset; // 0xc0c(0x0c)
	struct FRotator AttachInAircraftRotationOffset; // 0x1338(0x0c)
	struct FVector AttachInAircraftCameraLocaiton; // 0x1fa8(0x0c)
	float InitSpringArmLengthInAircraft; // 0xaa0(0x04)
	float TargetSpringArmLengthInAircraft; // 0x3a24(0x04)
	float SpeedSpringArmLengthInAirCraft; // 0x2aec(0x04)
	float PrevBloomIntensity; // 0x9d0(0x04)
	float PrevBloomThreshold; // 0x2f08(0x04)
	float TargetBloomIntensityInAirCraft; // 0x373c(0x04)
	float SpeedBloomIntensityInAirCraft; // 0x1638(0x04)
	float BloomStartDelayTimeInAirCraft; // 0x23c4(0x04)
	float CineDurationTimeMax; // 0x1438(0x04)
	float CineTextAnimationAppearTime; // 0x32d0(0x04)
	float GetPerkOnStartTime; // 0x1ecc(0x04)
	struct UBravoHotelCameraComponent* FPSK_Camera; // 0x19f8(0x08)
	struct USceneComponent* ADSCameraScene; // 0x3a28(0x08)
	struct UCustomizableSkeletalComponent* FPSK_MutableArms; // 0x2ab8(0x08)
	struct USkeletalMeshComponent* FPSK_Arms; // 0x1418(0x08)
	struct FVector FPSK_CameraHeight; // 0x1a00(0x0c)
	float FPSK_CameraProbe; // 0x1bb8(0x04)
	float FPSK_CameraPitchDeltaX; // 0x860(0x04)
	struct FVector FPSK_CameraLocation_Idle; // 0x22d8(0x0c)
	struct FName FPSK_CameraBone_Idle; // 0x2674(0x08)
	struct FVector FPSK_CameraLocation_ADS; // 0x1350(0x0c)
	struct FVector FPSK_CameraLocation_Parkour; // 0x26a8(0x0c)
	struct FName FPSK_CameraBone_Parkour; // 0x1530(0x08)
	float FPSK_CameraHeight_Stand; // 0x2a34(0x04)
	float FPSK_CameraHeight_Crouch; // 0x9cc(0x04)
	float FPSK_CameraHeight_Prone; // 0x1f30(0x04)
	struct FVector FPSK_CameraLocation_Collide; // 0x26b4(0x0c)
	struct FVector FPSK_CameraLocation_LeftLeanDelta; // 0x1880(0x0c)
	struct FVector FPSK_CameraLocation_RightLeanDelta; // 0x39e0(0x0c)
	float FPSK_CameraLocation_CollideAlpha; // 0x3504(0x04)
	struct FVector FPSK_StartCameraHeight; // 0x200c(0x0c)
	struct FVector FPSK_DestCameraHeight; // 0x1574(0x0c)
	struct USkeletalMeshComponent* FPSK_WeaponShadow; // 0x1348(0x08)
	struct UStaticMeshComponent* FPSK_SightShadow; // 0x1d88(0x08)
	struct UStaticMeshComponent* FPSK_GripShadow; // 0x20b0(0x08)
	struct UStaticMeshComponent* FPSK_MagazineShadow; // 0x3288(0x08)
	struct UStaticMeshComponent* FPSK_StockShadow; // 0x3068(0x08)
	struct UStaticMeshComponent* FPSK_TacticalAttachmentShadow; // 0xd10(0x08)
	struct USkeletalMeshComponent* FPSK_BarrelShadow; // 0x37d8(0x08)
	struct USkeletalMeshComponent* FPSK_MuzzleShadow; // 0x30f0(0x08)
	struct TArray<struct UMeshComponent*> FPSK_WeaponAttachments; // 0x2e48(0x10)
	bool bFPSK_UseCustomCurve; // 0x37a0(0x01)
	bool bFPSK_IsDefaultTransformUpdated; // 0x2ca2(0x01)
	bool bFPSK_IsFPSMode; // 0xc68(0x01)
	struct FTransform FPSK_CurrentWeaponTransform; // 0x15e0(0x30)
	struct FTransform FPSK_IdleWeaponTransform; // 0x3980(0x30)
	struct FTransform FPSK_CollideWeaponTransform; // 0xed0(0x30)
	struct FTransform FPSK_ADS_DefaultWeaponTransform; // 0x3330(0x30)
	struct FTransform FPSK_ADS_TargetWeaponTransform; // 0x2770(0x30)
	struct FTransform FPSK_ADS_DefaultWeaponTransform_BasicSightCache; // 0x2ff0(0x30)
	struct FTransform FPSK_ADS_DefaultWeaponTransform_CurrentSightCache; // 0x16c0(0x30)
	struct FTransform FPSK_ADS_WeaponTransform; // 0x2210(0x30)
	float FPSK_ADSFOV; // 0x3408(0x04)
	float FPSK_AOSFOV; // 0x1664(0x04)
	float FPSK_DefaultFOV; // 0x14fc(0x04)
	float FPSK_CurrentMagnificationFactor; // 0xbc0(0x04)
	float FPSK_TargetMagnificationFactor; // 0x12d8(0x04)
	struct UMaterialParameterCollection* MPC_WeaponFov; // 0x1878(0x08)
	struct FVector FPSK_CurrentCameraRelativeLocation; // 0x15a0(0x0c)
	float FPSK_ADSAlpha; // 0x27c4(0x04)
	float FPSK_StartFOV_Delta; // 0x267c(0x04)
	float CameraInterpPlayRate; // 0xf4c(0x04)
	float AdsCameraInterpPlayRate; // 0x3828(0x04)
	float FPSK_TargetADSAlpha; // 0x1978(0x04)
	struct FTimeline FPSK_Timeline_Sway_Idle; // 0x1718(0x98)
	struct FTimeline FPSK_Timeline_Sway_Move; // 0x3588(0x98)
	struct UCurveVector* FPSK_Curve_Sway_Idle_Default; // 0x34a8(0x08)
	struct UCurveVector* FPSK_Curve_Sway_Move_Default; // 0x2280(0x08)
	struct UCurveFloat* FPSK_Curve_Sway_Scale_With_Fov; // 0x30e0(0x08)
	struct UCurveVector* FPSK_Curve_Sway_Idle; // 0x2b78(0x08)
	struct UCurveVector* FPSK_Curve_Sway_Move; // 0xe60(0x08)
	bool bUseFPSK_Sway; // 0x1f2c(0x01)
	float FPSK_SwayAlpha; // 0x3a44(0x04)
	float FPSK_SwayAlphaMin; // 0x2488(0x04)
	float FPSK_SwayAlphaMax; // 0x369c(0x04)
	float FPSK_SwayScale; // 0x2290(0x04)
	struct FRotator FPSK_SwayRotationIdle; // 0x33f0(0x0c)
	struct FRotator FPSK_SwayRotationMove; // 0x22e4(0x0c)
	struct FRotator FPSK_SwayRotationDeltaForSteadyAim; // 0x2620(0x0c)
	float FPSK_SwayInterpSpeed; // 0x3778(0x04)
	struct FRotator FPSK_LeanRotation; // 0x25a8(0x0c)
	struct FVector FPSK_LeanLocation; // 0xf18(0x0c)
	struct FTransform FPSK_CurrentCollideWeaponTransform; // 0x1e80(0x30)
	float FPSK_CollideAlpha; // 0x2bc0(0x04)
	float FPSK_CollideAngle; // 0xd7c(0x04)
	float FPSK_CollideAngle_LocalCache; // 0xd30(0x04)
	bool bFPSK_IsCollide; // 0x145d(0x01)
	struct TMap<enum class EWeaponAttachmentItem, struct UCurveFloat*> FPSK_Curves_TunnelEffect; // 0x21b0(0x50)
	float FPSK_TargetFOV; // 0x3a6c(0x04)
	struct FTimerHandle TimerHandle_NoCarLandingDamageToTeam; // 0x1818(0x08)
	float InAircraftNearClipPlane; // 0x16a0(0x04)
	struct TArray<struct ABravoHotelCharacter*> AIBot_SearchedEnemyList; // 0xae8(0x10)
	bool bEnableCustomDepth; // 0x256c(0x01)
	struct FTimerHandle TimerHandle_HurtCondition; // 0x2b50(0x08)
	float ProneDamageScaleInRedZone; // 0xfc8(0x04)
	struct UAkAudioEvent* BlueZoneFreezeEvent; // 0x23d8(0x08)
	struct UAkAudioEvent* BlueZoneFreezeStopEvent; // 0xf10(0x08)
	struct UAkAudioEvent* BlueZoneDroneEvent; // 0x2278(0x08)
	struct UAkAudioEvent* BlueZoneDroneStopEvent; // 0x1dd8(0x08)
	struct UAkAudioEvent* SupplyBoxNotifyAlertMe; // 0x32d8(0x08)
	struct UAkAudioEvent* SupplyBoxNotifyAlertOther; // 0x2480(0x08)
	float CheckFreezeDistance; // 0x890(0x04)
	float CheckDroneDistance; // 0xbd4(0x04)
	struct FVector DefaultSocketOffset_LeftLeanAMP; // 0xfa4(0x0c)
	struct FVector DefaultSocketOffset_RightLeanAMP; // 0x3250(0x0c)
	struct FVector DefaultSocketOffset_RightAMP; // 0xbe0(0x0c)
	struct FVector DefaultSocketOffset_LeftAMP; // 0x978(0x0c)
	float DefaultTargetArmLength_AMP; // 0x3308(0x04)
	float AmplifierFocusDistance; // 0x31b4(0x04)
	struct FVector DefaultSocketOffset_LeftLeanHeartBeatSensor; // 0x34d0(0x0c)
	struct FVector DefaultSocketOffset_RightLeanHeartBeatSensor; // 0x287c(0x0c)
	struct FVector DefaultSocketOffset_RightHeartBeatSensor; // 0x1158(0x0c)
	struct FVector DefaultSocketOffset_LeftHeartBeatSensor; // 0xb20(0x0c)
	float DefaultTargetArmLength_HeartBeatSensor; // 0x30c0(0x04)
	float HeartBeatSensorFocusDistance; // 0x1be8(0x04)
	float CameraFocusDistanceAOS; // 0xc30(0x04)
	float AirWalkStartTime; // 0x1628(0x04)
	struct FTimerHandle TimerHandle_StopAirWalk; // 0x12b0(0x08)
	float AirWalkBestRecord; // 0xc80(0x04)
	float AirWalkTotalRecord; // 0x2888(0x04)
	struct UAkAudioEvent* AirWalkAudioEvent; // 0x1b38(0x08)
	float CurrentAirWalkVelocityZ; // 0x1624(0x04)
	float AirWalkDuration; // 0x2714(0x04)
	float AirWalkGravity; // 0x1da8(0x04)
	struct UBHPersonalSupplySystemComponent* PersonalSupplySystemComponent; // 0x1b70(0x08)
	enum class ENetworkSmoothingMode PrevNetworkSmoothingMode; // 0x920(0x01)
	struct FTimerHandle TimeHandle_SkyDive; // 0x788(0x08)
	bool bActiveCriticalTime; // 0x2394(0x01)
	float CriticalTimeTickInterval; // 0x26cc(0x04)
	float CriticalTimeLimitTime; // 0x2610(0x04)
	struct FVector CriticalTimeMeshLocaiton; // 0x2c58(0x0c)
	struct TMap<struct UActorComponent*, float> CriticalTimeComponentTickIntervals; // 0x2948(0x50)
	float ParachuteEnableHieght; // 0x3740(0x04)
	struct ABravoHotelParachuteTriggerBox* ParachuteTriggerBox; // 0x7b0(0x08)
	struct FHitResult CurHit; // 0x1380(0x88)
	struct UCurveFloat* Curve_Sliding; // 0xe08(0x08)
	struct UParticleSystem* ParticleSystem_Sliding; // 0x17d0(0x08)
	struct UParticleSystemComponent* ParticleSystemComponent_Sliding; // 0x1360(0x08)
	float SlidingStartTime; // 0x1424(0x04)
	enum class ECharacterGroundState GroundStateBeforeSliding; // 0x1efc(0x01)
	struct TMap<int16_t, int32_t> ReplicateIndexPerkMap; // 0x31b8(0x50)
	int16_t SlidingBuffIndex; // 0x29fa(0x02)
	bool bPendingStopSliding; // 0xd1c(0x01)
	float RollingStartTime; // 0x2f54(0x04)
	struct UCameraPostProcessPreset* PostProcessWetFogClass; // 0x25a0(0x08)
	struct TArray<struct ABravoHotelAreaSkillZone*> ActiveWetFogAreas; // 0x908(0x10)
	struct FAreaSkillZoneInfo WetFogInfo; // 0x1138(0x20)
	struct FWetFogZoneInfo WetFogZoneInfo; // 0x2f58(0x0c)
	struct FTimerHandle TimerHandle_WetFog; // 0x12b8(0x08)
	struct UCameraPostProcessPreset* PostProcessBlackOutClass; // 0x39d8(0x08)
	struct TArray<struct ABravoHotelAreaSkillZone*> ActivePowerInterruptions; // 0x2f78(0x10)
	struct FAreaSkillZoneInfo BlackOutInfo; // 0x1488(0x20)
	struct FTimerHandle TimerHandle_BlackOut; // 0x1ec0(0x08)
	struct UAkAudioEvent* StartBlackOutAudioEvent; // 0x1288(0x08)
	struct UParticleSystem* StartBlackOutParticle; // 0x1b20(0x08)
	struct UParticleSystemComponent* StartBlackOutParticleComponent; // 0x3788(0x08)
	struct FMulticastInlineDelegate OnSpawnBlackOutDelegate; // 0x1aa8(0x10)
	struct UCameraPostProcessPreset* PostProcessForceFieldClass; // 0xd08(0x08)
	struct TArray<struct ABravoHotelAreaSkillZone*> ActiveForceFields; // 0x1b98(0x10)
	struct FAreaSkillZoneInfo ForceFieldInfo; // 0x988(0x20)
	struct FTimerHandle TimerHandle_ForceField; // 0x10a0(0x08)
	struct ABravoHotelSuperBarrier* SuperBarrierClass; // 0x2f40(0x08)
	bool UsingSimulationBox; // 0x1dcc(0x01)
	bool HiddenSimulationBox; // 0x1a61(0x01)
	float SimulationBoxHeight; // 0x2fac(0x04)
	struct TSoftClassPtr<UObject> SimulationBoxClass; // 0x2638(0x28)
	struct FMulticastInlineDelegate OnCompleteActiveSkillDelegate; // 0xa00(0x10)
	struct ABravoHotelSkillTargetingBase* BombingTargetActor; // 0x1af8(0x08)
	struct UAkAudioEvent* StartBomingEvent; // 0x1528(0x08)
	bool IsBombing; // 0x1714(0x01)
	struct FBombingInfo BombingInfo; // 0x3218(0x24)
	float AutoAimRadius; // 0xec0(0x04)
	float AutoAimDistance; // 0x3a20(0x04)
	bool bShowAutoAimDebug; // 0x21a8(0x01)
	struct UParticleSystem* TeleportFxTemplate; // 0xaa8(0x08)
	struct UParticleSystem* TeleportTraceFxTemplate; // 0x39b0(0x08)
	float TeleportDisappearTime; // 0x33fc(0x04)
	float TeleportAppearTime; // 0x2928(0x04)
	float RocketJumpGravity; // 0x2018(0x04)
	struct UAkAudioEvent* RocketJumpAudioEvent; // 0x2d60(0x08)
	struct UAkAudioEvent* RocketJumpLandedAudioEvent; // 0x1428(0x08)
	struct UParticleSystem* ParticleSystem_RocketJump; // 0xe10(0x08)
	struct UParticleSystem* ParticleSystem_RocketJumpTrail; // 0x1648(0x08)
	struct UParticleSystem* ParticleSystem_RocketJumpLanded; // 0x2b28(0x08)
	struct UParticleSystemComponent* RocketJumpTrailEffect; // 0x1df0(0x08)
	bool bFinishMeteorJump; // 0x1ee8(0x01)
	float MeteorJumpGravity; // 0x318c(0x04)
	bool bMeteorStrikeBlockingHit; // 0x1e68(0x01)
	struct TArray<struct ABravoHotelProjectileGrenade*> MeteorGrenadeProjectileClass; // 0x2470(0x10)
	struct UAkAudioEvent* MeteorJumpAudioEvent; // 0xeb0(0x08)
	struct UAkAudioEvent* MeteorJumpLandedAudioEvent; // 0x3aa8(0x08)
	struct UParticleSystem* ParticleSystem_MeteorJump; // 0xb88(0x08)
	struct UParticleSystem* ParticleSystem_MeteorJumpTrail; // 0x28c8(0x08)
	struct UParticleSystem* ParticleSystem_MeteorJumpLanded; // 0xf08(0x08)
	struct UParticleSystemComponent* MeteorJumpTrailEffect; // 0x1e38(0x08)
	struct AActor* MeteorTarget; // 0x2f00(0x08)
	struct TArray<struct ABravoHotelProjectileGrenadeFlashbang*> ThrownFlashbangs; // 0x10a8(0x10)
	struct TArray<struct ABravoHotelProjectileGrenadeMolotovCocktail*> ThrownMolotovCocktails; // 0x3a00(0x10)
	struct TArray<struct ABravoHotelProjectileGrenadeC4*> ThrownC4s; // 0x33a0(0x10)
	bool bIsUltimateSprint; // 0x3938(0x01)
	bool IgnoreInteraction; // 0x2ca1(0x01)
	struct FMulticastInlineDelegate OnChangeCharacterStateDelegate; // 0x2248(0x10)
	int32_t LogSize; // 0x2468(0x04)
	struct FTimerHandle TimeHandle_RequestBuildingInfo; // 0x22b8(0x08)
	float LogIntervalTime; // 0x1244(0x04)
	int32_t LogRequestSize; // 0x1f78(0x04)
	struct TArray<struct FString> LogList; // 0x39c8(0x10)
	struct TArray<struct FString> LogJsonList; // 0x1fc8(0x10)
	struct UParticleSystem* GodEffect1; // 0x2f38(0x08)
	struct UParticleSystem* GodEffect2; // 0x3020(0x08)
	struct UParticleSystem* ParticleSystem_Knockout; // 0x1868(0x08)
	struct FRepSimulatedHittedDamage RepSimulatedHittedDamage; // 0x12c8(0x10)
	float FirstTimeHittedDamage; // 0x2a00(0x04)
	float LastTimeHittedDamage; // 0xb80(0x04)
	struct UParticleSystemComponent* GodParticle; // 0x1440(0x08)
	bool NeedFindPersonalSupplyBoxLocation; // 0x3768(0x01)
	int32_t PersonalSupplyBoxRePositionCount; // 0x3468(0x04)
	bool UsingPersonalSupplyBoxWeightMap; // 0x23e0(0x01)
	bool UsingPersonalSupplyBoxRePosition; // 0x2e34(0x01)
	float PersonalSupplyBoxRePositionDistance; // 0xe00(0x04)
	struct FTimerHandle TimeHandle_Ultimate_Recon; // 0xf28(0x08)
	struct FAnimSlot AnimSlot_Ultimate_Recon; // 0x30f8(0x10)
	bool bIsUltimate_Recon; // 0x154c(0x01)
	struct UAnimMontage* AvoidHeadShotMontage; // 0x2a10(0x08)
	struct UAkAudioEvent* SteelHelmetSound; // 0x2820(0x08)
	struct FVector StuntmanRollingDir; // 0x3390(0x0c)
	float StuntmanStartTime; // 0xc60(0x04)
	struct FTimerHandle TimerHandle_Stuntman; // 0x2720(0x08)
	bool bNeedToUpdateNitroBoost; // 0x1715(0x01)
	float NitroBoostTorqueScale; // 0x3530(0x04)
	struct ABravoHotelVehicle* NitroBoomTargetVehicle; // 0x1268(0x08)
	bool bNeedToUpdateNitroBoom; // 0x3a14(0x01)
	float NitroBoomDuration; // 0x12ec(0x04)
	bool bNeedToDrawNitroBoomTarget; // 0x3a30(0x01)
	struct FVector NitroBoomTargetLocation; // 0x2cb8(0x0c)
	float NitroBoomLastVehicleSetTime; // 0x2568(0x04)
	bool bNeedToUpdateUltimate_Driver; // 0x2ca3(0x01)
	bool bNeedToCheckPlosiveSoundDetection; // 0x3290(0x01)
	struct ABravoHotelMoveElevator* EnteredElevatorRef; // 0x2918(0x08)
	float OuterDamage; // 0x790(0x04)
	struct FTimerHandle TimerHandle_InOuterArea; // 0x798(0x08)
	struct FTimerHandle TimerHandle_UpdateInOuterArea; // 0x7a0(0x08)
	struct FMulticastInlineDelegate DelegateCheckSupplyCost; // 0x2ad0(0x10)
	struct FSecuredVariablesCache SecuredCache; // 0x2cd4(0x04)
	struct UCurveFloat* DamageCorrectValueByPenetrationDepthCurve; // 0x2e38(0x08)
	struct ABravoHotelAircraftFlight* AircraftFlightRef; // 0x3808(0x08)

	void WearItem(enum class EWearableItemType Slot, struct FString UniqueKey, bool bUpdateSkeletalMesh); // Function BravoHotelGame.BravoHotelCharacter.WearItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1eceb80
	bool WasMeshRecentlyRenderedOnScreen(float Tolerance); // Function BravoHotelGame.BravoHotelCharacter.WasMeshRecentlyRenderedOnScreen // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eceaf0
	bool WantToFPSMode(); // Function BravoHotelGame.BravoHotelCharacter.WantToFPSMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ecea60
	bool WantsToRocketJump(); // Function BravoHotelGame.BravoHotelCharacter.WantsToRocketJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eceac0
	bool WantsToMeteorJump(); // Function BravoHotelGame.BravoHotelCharacter.WantsToMeteorJump // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ecea90
	bool ValidateEquippedWeaponsInVehicle(int32_t WeaponIndex); // Function BravoHotelGame.BravoHotelCharacter.ValidateEquippedWeaponsInVehicle // (Final|Native|Public|BlueprintCallable) // @ game+0x1ece9d0
	void ValidateCameraInterp(); // Function BravoHotelGame.BravoHotelCharacter.ValidateCameraInterp // (Final|Native|Public) // @ game+0x1ece9b0
	void UpdateWetFogPP(bool bForce); // Function BravoHotelGame.BravoHotelCharacter.UpdateWetFogPP // (Final|Native|Public) // @ game+0x1ece920
	void UpdateWalking_Prone(); // Function BravoHotelGame.BravoHotelCharacter.UpdateWalking_Prone // (Final|Native|Public) // @ game+0x1ece900
	void UpdateWalking(); // Function BravoHotelGame.BravoHotelCharacter.UpdateWalking // (Final|Native|Public) // @ game+0x1ece8e0
	void UpdateUltimate_Recon(); // Function BravoHotelGame.BravoHotelCharacter.UpdateUltimate_Recon // (Final|Native|Public) // @ game+0x1ece8c0
	void UpdateTunnelEffect(float Value); // Function BravoHotelGame.BravoHotelCharacter.UpdateTunnelEffect // (Final|Native|Public) // @ game+0x1ece840
	void UpdateTimeline(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateTimeline // (Final|Native|Public) // @ game+0x1ece7c0
	void UpdateTerrainType(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateTerrainType // (Final|Native|Public) // @ game+0x1ece740
	void UpdateTargetHealth(enum class ETargetHealthType Type, float InTargetHealth); // Function BravoHotelGame.BravoHotelCharacter.UpdateTargetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1ece680
	void UpdateSurfaceType(); // Function BravoHotelGame.BravoHotelCharacter.UpdateSurfaceType // (Final|Native|Public) // @ game+0x1ece660
	void UpdateStatupMaterialEffect(); // Function BravoHotelGame.BravoHotelCharacter.UpdateStatupMaterialEffect // (Final|Native|Protected) // @ game+0x1ece640
	void UpdateSliding(); // Function BravoHotelGame.BravoHotelCharacter.UpdateSliding // (Final|Native|Public) // @ game+0x1ece620
	void UpdateRolling(); // Function BravoHotelGame.BravoHotelCharacter.UpdateRolling // (Final|Native|Public) // @ game+0x1ece600
	void UpdateReplaceFreeLook(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateReplaceFreeLook // (Final|Native|Public) // @ game+0x1ece580
	void UpdateRenderSettings(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateRenderSettings // (Final|Native|Public) // @ game+0x1ece500
	void UpdatePowerInterruptionPP(bool bForce); // Function BravoHotelGame.BravoHotelCharacter.UpdatePowerInterruptionPP // (Final|Native|Public) // @ game+0x1ece470
	void UpdatePostProcess_Indoor(float Value); // Function BravoHotelGame.BravoHotelCharacter.UpdatePostProcess_Indoor // (Final|Native|Public) // @ game+0x1ece3f0
	void UpdatePostProcess_FPP(float Value); // Function BravoHotelGame.BravoHotelCharacter.UpdatePostProcess_FPP // (Final|Native|Public) // @ game+0x1ece370
	void UpdatePostProcess_CameraMonoChrome(float Value); // Function BravoHotelGame.BravoHotelCharacter.UpdatePostProcess_CameraMonoChrome // (Final|Native|Public) // @ game+0x1ece2f0
	void UpdatePostProcess_ADS(float Value); // Function BravoHotelGame.BravoHotelCharacter.UpdatePostProcess_ADS // (Final|Native|Public) // @ game+0x1ece270
	void UpdatePostProcess(struct FName RowName, float Value); // Function BravoHotelGame.BravoHotelCharacter.UpdatePostProcess // (Final|Native|Public) // @ game+0x1ece1a0
	void UpdatePassengerLocation(); // Function BravoHotelGame.BravoHotelCharacter.UpdatePassengerLocation // (Final|Native|Public) // @ game+0x1ece180
	void UpdateOuterPlayZonePP(bool bForce); // Function BravoHotelGame.BravoHotelCharacter.UpdateOuterPlayZonePP // (Final|Native|Public) // @ game+0x1ece0f0
	void UpdateNitroBoom(); // Function BravoHotelGame.BravoHotelCharacter.UpdateNitroBoom // (Final|Native|Protected) // @ game+0x1ece0d0
	void UpdateNearClipPlane(); // Function BravoHotelGame.BravoHotelCharacter.UpdateNearClipPlane // (Final|Native|Public) // @ game+0x1ece0b0
	void UpdateMutableMesh(); // Function BravoHotelGame.BravoHotelCharacter.UpdateMutableMesh // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ece090
	void UpdateMutableBuffList(); // Function BravoHotelGame.BravoHotelCharacter.UpdateMutableBuffList // (Final|Native|Public|BlueprintCallable) // @ game+0x1ece070
	void UpdateMutable__DelegateSignature(struct ABravoHotelCharacter* Character); // DelegateFunction BravoHotelGame.BravoHotelCharacter.UpdateMutable__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void UpdateMeleeAttack(struct UBravoHotelAnimNotifyState_Melee* MeleeAnimNotifyClass, bool bDrawDebugObject); // Function BravoHotelGame.BravoHotelCharacter.UpdateMeleeAttack // (Final|Native|Public) // @ game+0x1ecdfa0
	void UpdateLeanValue(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateLeanValue // (Final|Native|Public) // @ game+0x1ecdf20
	void UpdateKnockOutParticle(); // Function BravoHotelGame.BravoHotelCharacter.UpdateKnockOutParticle // (Final|Native|Private) // @ game+0x1ecdf00
	void UpdateJetpackFuel(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateJetpackFuel // (Final|Native|Public) // @ game+0x1ecde80
	void UpdateInteractionType(struct FHitResult& Hit); // Function BravoHotelGame.BravoHotelCharacter.UpdateInteractionType // (Final|Native|Public|HasOutParms) // @ game+0x1ecdda0
	void UpdateInRagdoll(); // Function BravoHotelGame.BravoHotelCharacter.UpdateInRagdoll // (Final|Native|Public) // @ game+0x1ecdd80
	void UpdateIdleNum(); // Function BravoHotelGame.BravoHotelCharacter.UpdateIdleNum // (Final|Native|Public) // @ game+0x1ecdd60
	void UpdateGroundFriction(); // Function BravoHotelGame.BravoHotelCharacter.UpdateGroundFriction // (Final|Native|Public) // @ game+0x1ecdd40
	void UpdateFurActivation(); // Function BravoHotelGame.BravoHotelCharacter.UpdateFurActivation // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecdd20
	void UpdateFPSMode(); // Function BravoHotelGame.BravoHotelCharacter.UpdateFPSMode // (Final|Native|Public) // @ game+0x1ecdc30
	void UpdateForceFieldPP(bool bForce); // Function BravoHotelGame.BravoHotelCharacter.UpdateForceFieldPP // (Final|Native|Public) // @ game+0x1ecdc90
	void UpdateFireInput(); // Function BravoHotelGame.BravoHotelCharacter.UpdateFireInput // (Final|Native|Public) // @ game+0x1ecdc70
	void UpdateFalling(); // Function BravoHotelGame.BravoHotelCharacter.UpdateFalling // (Final|Native|Public) // @ game+0x1ecdc50
	void UpdateDrive(); // Function BravoHotelGame.BravoHotelCharacter.UpdateDrive // (Final|Native|Public) // @ game+0x151b910
	void UpdateDebuffState(); // Function BravoHotelGame.BravoHotelCharacter.UpdateDebuffState // (Final|Native|Protected) // @ game+0x1ecdc10
	void UpdateCharacterOutlineMaterial(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateCharacterOutlineMaterial // (Final|Native|Public) // @ game+0x1ecdb90
	void UpdateCharacterMagneticDamagedMaterial(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateCharacterMagneticDamagedMaterial // (Final|Native|Public) // @ game+0x1ecdb10
	void UpdateCharacterDustMaterial(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateCharacterDustMaterial // (Final|Native|Public) // @ game+0x1ecda90
	void UpdateCharacterDamagedMaterial(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateCharacterDamagedMaterial // (Final|Native|Public) // @ game+0x1ecda10
	void UpdateCastingUI(); // Function BravoHotelGame.BravoHotelCharacter.UpdateCastingUI // (Final|Native|Public) // @ game+0x1ecd9f0
	void UpdateCameraPPByBuff(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateCameraPPByBuff // (Final|Native|Protected) // @ game+0x1ecd970
	void UpdateCameraPP(bool bIsOn, float StartValue, float TargetValue, float InTime, float OutTime, struct FName AnimName, struct UCameraPostProcessPreset* PPPresetClass, struct FTimerHandle& DeactiveTimer, bool bForce); // Function BravoHotelGame.BravoHotelCharacter.UpdateCameraPP // (Final|Native|Public|HasOutParms) // @ game+0x1ecd6d0
	void UpdateCameraInterp(float Value); // Function BravoHotelGame.BravoHotelCharacter.UpdateCameraInterp // (Final|Native|Public) // @ game+0x1ecd650
	void UpdateCamera(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.UpdateCamera // (Final|Native|Public) // @ game+0x1ecd5d0
	void UpdateBreathEffect(); // Function BravoHotelGame.BravoHotelCharacter.UpdateBreathEffect // (Final|Native|Public) // @ game+0x1ecd5b0
	void UpdateBlueZonePP(bool bForce); // Function BravoHotelGame.BravoHotelCharacter.UpdateBlueZonePP // (Final|Native|Public) // @ game+0x1ecd520
	void UpdateAreaInfo(struct TArray<struct ABravoHotelAreaSkillZone*> TargetActiveAreas, struct FAreaSkillZoneInfo& TargetSkillZoneInfo); // Function BravoHotelGame.BravoHotelCharacter.UpdateAreaInfo // (Final|Native|Public|HasOutParms) // @ game+0x1ecd3c0
	void UpdateAOSMode(); // Function BravoHotelGame.BravoHotelCharacter.UpdateAOSMode // (Final|Native|Public) // @ game+0x1ecd320
	void UpdateADSReturnTrigger(); // Function BravoHotelGame.BravoHotelCharacter.UpdateADSReturnTrigger // (Final|Native|Public) // @ game+0x1ecd300
	void UpdateAdsCameraInterp(float Value); // Function BravoHotelGame.BravoHotelCharacter.UpdateAdsCameraInterp // (Final|Native|Public) // @ game+0x1ecd340
	void UnProne(bool bClientSimulation); // Function BravoHotelGame.BravoHotelCharacter.UnProne // (Native|Public|BlueprintCallable) // @ game+0x1ecd250
	void UnlockMovementInput(); // Function BravoHotelGame.BravoHotelCharacter.UnlockMovementInput // (Final|Native|Public) // @ game+0x1ecd2e0
	void TryRetreat(bool InIsRandomLocation, struct FVector InTargetLocation); // Function BravoHotelGame.BravoHotelCharacter.TryRetreat // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1ecd170
	void TryNuclear(struct FVector InTargetLocation); // Function BravoHotelGame.BravoHotelCharacter.TryNuclear // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1ecd0e0
	void TryExitLadder(bool bIsForce); // Function BravoHotelGame.BravoHotelCharacter.TryExitLadder // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecd050
	struct UBravoHotelPhysicalMaterial* TraceSteppedSurface(); // Function BravoHotelGame.BravoHotelCharacter.TraceSteppedSurface // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ecd020
	void ThrowingGrenade(); // Function BravoHotelGame.BravoHotelCharacter.ThrowingGrenade // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecd000
	void TestSpawnPersonalSupplyBox(struct FVector& ServerLocation); // Function BravoHotelGame.BravoHotelCharacter.TestSpawnPersonalSupplyBox // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1eccf70
	void TestMultiPersonalSupplyBox(float Distance, int32_t Count); // Function BravoHotelGame.BravoHotelCharacter.TestMultiPersonalSupplyBox // (Final|Native|Public) // @ game+0x1eccea0
	void TestEndItemSpawnSimulationBox(struct FSpawnPerkData& Data, struct FString Msg); // Function BravoHotelGame.BravoHotelCharacter.TestEndItemSpawnSimulationBox // (Final|Native|Public|HasOutParms) // @ game+0x1eccd40
	void StopRagdoll(); // Function BravoHotelGame.BravoHotelCharacter.StopRagdoll // (Final|Native|Public) // @ game+0x1eccd20
	void StopPostProcessEffects(struct FName RowName, bool bImmediately); // Function BravoHotelGame.BravoHotelCharacter.StopPostProcessEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x1eccc50
	void StopPlayingPickupAnim(); // Function BravoHotelGame.BravoHotelCharacter.StopPlayingPickupAnim // (Final|Native|Public) // @ game+0x1eccc30
	void StopAllPostProcessEffects(); // Function BravoHotelGame.BravoHotelCharacter.StopAllPostProcessEffects // (Final|Native|Public) // @ game+0x1eccc10
	void StartTunnelEffect(); // Function BravoHotelGame.BravoHotelCharacter.StartTunnelEffect // (Final|Native|Public) // @ game+0x1eccbf0
	void StartSteadyAim(); // Function BravoHotelGame.BravoHotelCharacter.StartSteadyAim // (Final|Native|Public|BlueprintCallable) // @ game+0x1eccbd0
	void StartStatupMaterialEffect(struct FStatupAnimParameters& StatupParams); // Function BravoHotelGame.BravoHotelCharacter.StartStatupMaterialEffect // (Final|Native|Public|HasOutParms) // @ game+0x1eccb20
	void StartSpawnBlackOut(float DelayTime); // Function BravoHotelGame.BravoHotelCharacter.StartSpawnBlackOut // (Final|Native|Public) // @ game+0x1eccaa0
	void StartReplaceFreeLook(); // Function BravoHotelGame.BravoHotelCharacter.StartReplaceFreeLook // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecca80
	void StartRagdoll(); // Function BravoHotelGame.BravoHotelCharacter.StartRagdoll // (Final|Native|Public) // @ game+0x1ecca60
	void StartPostProcessEffects(struct FName RowName); // Function BravoHotelGame.BravoHotelCharacter.StartPostProcessEffects // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecc9e0
	void StartFalling(); // Function BravoHotelGame.BravoHotelCharacter.StartFalling // (Final|Native|Protected) // @ game+0x1ecc9c0
	void StartDescending(); // Function BravoHotelGame.BravoHotelCharacter.StartDescending // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecc9a0
	void StartCastingUI(enum class ECastingUIType CastingUIType, struct FName SourceName, float MaxTime, struct ABravoHotelCharacter* Target); // Function BravoHotelGame.BravoHotelCharacter.StartCastingUI // (Final|Native|Public) // @ game+0x1ecc850
	void StartADSProcess_2(); // Function BravoHotelGame.BravoHotelCharacter.StartADSProcess_2 // (Final|Native|Public) // @ game+0x1ecc830
	void SpectatedDelegate__DelegateSignature(bool bIsSpectated); // DelegateFunction BravoHotelGame.BravoHotelCharacter.SpectatedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	struct ABravoHotelSkillTargetingBase* SpawnSkillTargeting(struct FName& ActorName, struct FVector& InSpawnLocation, float Radius); // Function BravoHotelGame.BravoHotelCharacter.SpawnSkillTargeting // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1ecc700
	void SpawnRandomWeapon(); // Function BravoHotelGame.BravoHotelCharacter.SpawnRandomWeapon // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ecc6b0
	void SpawnBrokenEquipment(); // Function BravoHotelGame.BravoHotelCharacter.SpawnBrokenEquipment // (Final|Native|Public) // @ game+0x1ecc690
	void SimulatedTakeDamage(); // Function BravoHotelGame.BravoHotelCharacter.SimulatedTakeDamage // (Final|Native|Public) // @ game+0x1ecc670
	void ShowTeleportAppearEffect(); // Function BravoHotelGame.BravoHotelCharacter.ShowTeleportAppearEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecc650
	void ShowSkillMap(float Radius); // Function BravoHotelGame.BravoHotelCharacter.ShowSkillMap // (Final|Native|Public) // @ game+0x1ecc5d0
	void ShowParachuteMesh(bool bVisibility, bool bIsWithParachute); // Function BravoHotelGame.BravoHotelCharacter.ShowParachuteMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecc500
	void ShowKeyActions(); // Function BravoHotelGame.BravoHotelCharacter.ShowKeyActions // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecc4e0
	void ShowInventoryNotEnoughSpaceMessage(); // Function BravoHotelGame.BravoHotelCharacter.ShowInventoryNotEnoughSpaceMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecc4c0
	void ShowInteractiveForPickup(struct FInteraction& InteractionInfo, struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.BravoHotelCharacter.ShowInteractiveForPickup // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1ecc2f0
	void ShowInteractiveForAction(struct FInteraction& InteractionInfo); // Function BravoHotelGame.BravoHotelCharacter.ShowInteractiveForAction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1ecc1d0
	void ShowInteractionWidget(struct FInteraction InteractionInfo); // Function BravoHotelGame.BravoHotelCharacter.ShowInteractionWidget // (Final|Native|Public) // @ game+0x1ecc060
	void ShowHUDbySequence(); // Function BravoHotelGame.BravoHotelCharacter.ShowHUDbySequence // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecc040
	void ShowHeartBeatSensorEffect(bool IsHeartBeatSensorEffect, float HeartBeatSensorLength); // Function BravoHotelGame.BravoHotelCharacter.ShowHeartBeatSensorEffect // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ShowCloudFxInDescent(bool bWantsToShow); // Function BravoHotelGame.BravoHotelCharacter.ShowCloudFxInDescent // (Final|Native|Public) // @ game+0x1ecbfb0
	void ShowAmplifierEffect(bool IsAmplifierEffect, float AmplifierLength); // Function BravoHotelGame.BravoHotelCharacter.ShowAmplifierEffect // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ShouldSprinting(bool bNewShouldSprinting); // Function BravoHotelGame.BravoHotelCharacter.ShouldSprinting // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecbf20
	bool ShouldAdjustInDoor(enum class EInDoorAdjustmentTarget InTarget); // Function BravoHotelGame.BravoHotelCharacter.ShouldAdjustInDoor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ecbe90
	void SetVisibleOutBlueZoneBlizzard(bool Visible); // Function BravoHotelGame.BravoHotelCharacter.SetVisibleOutBlueZoneBlizzard // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetTunnelEffectRatio(float Ratio); // Function BravoHotelGame.BravoHotelCharacter.SetTunnelEffectRatio // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecbe10
	void SetTeleportEffect(bool bStart); // Function BravoHotelGame.BravoHotelCharacter.SetTeleportEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecbd80
	void SetTeamInfoVisibility(bool IsVisible); // Function BravoHotelGame.BravoHotelCharacter.SetTeamInfoVisibility // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetTargetHealth(enum class ETargetHealthType Type, float InTargetHealth, float InUsableHealth); // Function BravoHotelGame.BravoHotelCharacter.SetTargetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecbc80
	void SetSteadyAim(bool SteadyAim); // Function BravoHotelGame.BravoHotelCharacter.SetSteadyAim // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecbbf0
	void SetState(enum class ECharacterState NewState, bool bReplicated); // Function BravoHotelGame.BravoHotelCharacter.SetState // (Final|Native|Public) // @ game+0x1ecbb20
	void SetSavedPlayerState(struct APlayerState* PState); // Function BravoHotelGame.BravoHotelCharacter.SetSavedPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecba80
	void SetReplicatedAnimMontage(struct UAnimMontage* NewAnimMontageTPP, struct UAnimMontage* NewAnimMontageFPP); // Function BravoHotelGame.BravoHotelCharacter.SetReplicatedAnimMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecb9c0
	void SetRecordingCharacterTickRate(float TickRate); // Function BravoHotelGame.BravoHotelCharacter.SetRecordingCharacterTickRate // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	void SetRandomValuesToCustomizableObject(); // Function BravoHotelGame.BravoHotelCharacter.SetRandomValuesToCustomizableObject // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecb9a0
	void SetRandomIdleNum(); // Function BravoHotelGame.BravoHotelCharacter.SetRandomIdleNum // (Final|Native|Public) // @ game+0x1ecb980
	void SetProjectileGrenadeActor(struct ABravoHotelProjectileGrenade* Grenade); // Function BravoHotelGame.BravoHotelCharacter.SetProjectileGrenadeActor // (Final|Native|Public) // @ game+0x1ecb900
	void SetParkourTestComponentIndex(int32_t IndexKey); // Function BravoHotelGame.BravoHotelCharacter.SetParkourTestComponentIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecb880
	void SetNearClipPlane(float NearClipPlane); // Function BravoHotelGame.BravoHotelCharacter.SetNearClipPlane // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecb800
	void SetMolotovFlameDotDamage(); // Function BravoHotelGame.BravoHotelCharacter.SetMolotovFlameDotDamage // (Final|Native|Public) // @ game+0x1ecb7e0
	void SetMagneticDmgDissolveAnimationCurve(); // Function BravoHotelGame.BravoHotelCharacter.SetMagneticDmgDissolveAnimationCurve // (Final|Native|Public) // @ game+0x1ecb7c0
	void SetMagneticDamagedCharacterMaterial(); // Function BravoHotelGame.BravoHotelCharacter.SetMagneticDamagedCharacterMaterial // (Final|Native|Public) // @ game+0x1ecb7a0
	void SetLocalChargingGauge(bool bStart); // Function BravoHotelGame.BravoHotelCharacter.SetLocalChargingGauge // (Final|Native|Public) // @ game+0x1ecb710
	void SetLadderComponent(struct ULadderComponent* NewLadder); // Function BravoHotelGame.BravoHotelCharacter.SetLadderComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecb690
	void SetIsMelee(bool bNewMelee, bool bNewMeleeJumpAttack); // Function BravoHotelGame.BravoHotelCharacter.SetIsMelee // (Final|Native|Public) // @ game+0x1ecb5c0
	void SetIsLanded(bool bNewLanded); // Function BravoHotelGame.BravoHotelCharacter.SetIsLanded // (Final|Native|Public) // @ game+0x1ecb530
	void SetIsInsideBlueZone(bool bIsInsideBlueZone); // Function BravoHotelGame.BravoHotelCharacter.SetIsInsideBlueZone // (Final|Native|Protected|BlueprintCallable) // @ game+0x1ecb4a0
	void SetIsFreeLook(bool bNewFreeLook); // Function BravoHotelGame.BravoHotelCharacter.SetIsFreeLook // (Final|Native|Public) // @ game+0x1ecb410
	void SetIsFired(bool bNewFired, float AutoDeactiveDelayTime); // Function BravoHotelGame.BravoHotelCharacter.SetIsFired // (Final|Native|Public) // @ game+0x1ecb340
	void SetInternalMagneticDamagedDissolveCharacterMaterial(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.SetInternalMagneticDamagedDissolveCharacterMaterial // (Final|Native|Public) // @ game+0x1ecb2c0
	void SetInternalMagneticDamagedCharacterMaterial(bool bOn); // Function BravoHotelGame.BravoHotelCharacter.SetInternalMagneticDamagedCharacterMaterial // (Final|Native|Public) // @ game+0x1ecb230
	void SetInternalMagneticDamagedCharacterBackGroundMaterial_On(); // Function BravoHotelGame.BravoHotelCharacter.SetInternalMagneticDamagedCharacterBackGroundMaterial_On // (Final|Native|Public) // @ game+0x1ecb210
	void SetInternalMagneticDamagedCharacterBackGroundMaterial_Off(); // Function BravoHotelGame.BravoHotelCharacter.SetInternalMagneticDamagedCharacterBackGroundMaterial_Off // (Final|Native|Public) // @ game+0x1ecb1f0
	void SetInternalDustDissolveCharacterMaterial(); // Function BravoHotelGame.BravoHotelCharacter.SetInternalDustDissolveCharacterMaterial // (Final|Native|Public) // @ game+0x1ecb1d0
	void SetInternalDustCharacterMaterial(bool bOn); // Function BravoHotelGame.BravoHotelCharacter.SetInternalDustCharacterMaterial // (Final|Native|Public) // @ game+0x1ecb140
	void SetInternalDamagedDissolveCharacterMaterial(); // Function BravoHotelGame.BravoHotelCharacter.SetInternalDamagedDissolveCharacterMaterial // (Final|Native|Public) // @ game+0x1ecb120
	void SetInternalDamagedCharacterMaterial(bool bOn); // Function BravoHotelGame.BravoHotelCharacter.SetInternalDamagedCharacterMaterial // (Final|Native|Public) // @ game+0x1ecb090
	void SetInternalDamagedCharacterBackGroundMaterial_On(); // Function BravoHotelGame.BravoHotelCharacter.SetInternalDamagedCharacterBackGroundMaterial_On // (Final|Native|Public) // @ game+0x1ecb070
	void SetInternalDamagedCharacterBackGroundMaterial_Off(); // Function BravoHotelGame.BravoHotelCharacter.SetInternalDamagedCharacterBackGroundMaterial_Off // (Final|Native|Public) // @ game+0x1ecb050
	void SetInteractiveNoHide(bool NoHide); // Function BravoHotelGame.BravoHotelCharacter.SetInteractiveNoHide // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecafc0
	void SetInteractiveCustomMode(int32_t ModeNum); // Function BravoHotelGame.BravoHotelCharacter.SetInteractiveCustomMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecaf40
	void SetInteractionType(enum class EInteractionType NewType); // Function BravoHotelGame.BravoHotelCharacter.SetInteractionType // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecaec0
	void SetInReduceSpeedExplosionRange(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.SetInReduceSpeedExplosionRange // (Final|Native|Protected) // @ game+0x1ecae40
	void SetFoundVehicleLocations(struct FCarScanUIInfo& InCarScanUIInfo); // Function BravoHotelGame.BravoHotelCharacter.SetFoundVehicleLocations // (Final|Native|Public|HasOutParms) // @ game+0x1ecad70
	void SetFlashBangPlaySound(); // Function BravoHotelGame.BravoHotelCharacter.SetFlashBangPlaySound // (Final|Native|Public) // @ game+0x1ecad50
	void SetFlashBangEndSound(); // Function BravoHotelGame.BravoHotelCharacter.SetFlashBangEndSound // (Final|Native|Public) // @ game+0x1ecad30
	void SetFlashBangAngle(float Angle); // Function BravoHotelGame.BravoHotelCharacter.SetFlashBangAngle // (Final|Native|Public) // @ game+0x1ecacb0
	void SetFireType(enum class EFireType NewFireType); // Function BravoHotelGame.BravoHotelCharacter.SetFireType // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecac30
	void SetDustDissolveAnimationCurve(); // Function BravoHotelGame.BravoHotelCharacter.SetDustDissolveAnimationCurve // (Final|Native|Public) // @ game+0x1ecac10
	void SetDustCharacterMaterial(); // Function BravoHotelGame.BravoHotelCharacter.SetDustCharacterMaterial // (Final|Native|Public) // @ game+0x1ecabf0
	void SetDissolveAnimationCurveData(); // Function BravoHotelGame.BravoHotelCharacter.SetDissolveAnimationCurveData // (Final|Native|Public) // @ game+0x1ecabd0
	void SetDescentVariables(float NewAirControl, float NewMaxWalkSpeed, float NewGravityScale, float NewBarkingDecelerationFalling, float NewMaxAcceleration, struct FVector NewCameraRelativeLocation, bool bForceLocation); // Function BravoHotelGame.BravoHotelCharacter.SetDescentVariables // (Final|Native|Public|HasDefaults) // @ game+0x1eca9b0
	void SetDefaultCameraLag(float NewDefaultCameraLag); // Function BravoHotelGame.BravoHotelCharacter.SetDefaultCameraLag // (Final|Native|Public) // @ game+0x1eca930
	void SetDamagedFlashBang(float FlashBangValue); // Function BravoHotelGame.BravoHotelCharacter.SetDamagedFlashBang // (Final|Native|Public) // @ game+0x1eca8b0
	void SetDamagedCharacterMaterial(); // Function BravoHotelGame.BravoHotelCharacter.SetDamagedCharacterMaterial // (Final|Native|Public) // @ game+0x1eca890
	void SetClassSelectType(bool bSelectType); // Function BravoHotelGame.BravoHotelCharacter.SetClassSelectType // (Final|Native|Public|BlueprintCallable) // @ game+0x1eca810
	void SetChargingGauge(bool bStart); // Function BravoHotelGame.BravoHotelCharacter.SetChargingGauge // (Final|Native|Public) // @ game+0x1eca780
	void SetCharacterMovementMode(enum class EMovementMode Mode); // Function BravoHotelGame.BravoHotelCharacter.SetCharacterMovementMode // (Final|Native|Public) // @ game+0x1eca700
	void SetCharacterIntheWater(); // Function BravoHotelGame.BravoHotelCharacter.SetCharacterIntheWater // (Native|Event|Public|BlueprintEvent) // @ game+0x1eca6e0
	void SetCameraLag(bool bEnable); // Function BravoHotelGame.BravoHotelCharacter.SetCameraLag // (Final|Native|Public) // @ game+0x1eca650
	void SetCameraAssistComponent(bool bSpectactor); // Function BravoHotelGame.BravoHotelCharacter.SetCameraAssistComponent // (Final|Native|Public) // @ game+0x1eca5c0
	void SetBackLightComponentsActive(bool bNewActive); // Function BravoHotelGame.BravoHotelCharacter.SetBackLightComponentsActive // (Final|Native|Public) // @ game+0x1eca530
	void SetArmedState(bool bDoArm, bool bPlayUnequipAnimation, bool bOrdered); // Function BravoHotelGame.BravoHotelCharacter.SetArmedState // (Final|Native|Public|BlueprintCallable) // @ game+0x1eca410
	void SetADSReturnTimer(float ADSReturnDelayTime); // Function BravoHotelGame.BravoHotelCharacter.SetADSReturnTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1eca300
	void SetActiveFur(bool bActive); // Function BravoHotelGame.BravoHotelCharacter.SetActiveFur // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetActiveBreathEffect(bool bNewActive); // Function BravoHotelGame.BravoHotelCharacter.SetActiveBreathEffect // (Final|Native|Public) // @ game+0x1eca380
	void ServerWindowBreaching(struct TArray<struct ABravoHotelCharacter*> TargetDamagedCharacters); // Function BravoHotelGame.BravoHotelCharacter.ServerWindowBreaching // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1eca240
	void ServerUseBackpackItem(int32_t BackpackItemIndex); // Function BravoHotelGame.BravoHotelCharacter.ServerUseBackpackItem // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1eca180
	void ServerUpdateRagdollVariables(struct FVector NewRagdollVelocity, struct FVector NewRagdollLocation, struct FVector NewActorLocation); // Function BravoHotelGame.BravoHotelCharacter.ServerUpdateRagdollVariables // (Net|Native|Event|Protected|NetServer|HasDefaults|NetValidate) // @ game+0x1ec9ff0
	void ServerUpdateNearbyVehicles(struct TArray<struct ABravoHotelVehicle*> AddedVehicles, struct TArray<struct ABravoHotelVehicle*> RemovedVehicles); // Function BravoHotelGame.BravoHotelCharacter.ServerUpdateNearbyVehicles // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9ed0
	void ServerUpdateCamera(struct FRepCameraInfo InCameraInfo); // Function BravoHotelGame.BravoHotelCharacter.ServerUpdateCamera // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1ec9e10
	void ServerTryUseLadder(struct ABravoHotelLadder* DetectedLadder); // Function BravoHotelGame.BravoHotelCharacter.ServerTryUseLadder // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9d50
	void ServerTryExitVehicle(enum class ECharacterState NextState); // Function BravoHotelGame.BravoHotelCharacter.ServerTryExitVehicle // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9ca0
	void ServerTryExitLadder(); // Function BravoHotelGame.BravoHotelCharacter.ServerTryExitLadder // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9c50
	void ServerTryEnterVehicle(struct UBravoHotelVehicleSeatComponent* TargetVehicleSeat); // Function BravoHotelGame.BravoHotelCharacter.ServerTryEnterVehicle // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9b90
	void ServerTryElevatorInteraction(struct AActor* ElevatorActor, struct UPrimitiveComponent* ElevatorComponet); // Function BravoHotelGame.BravoHotelCharacter.ServerTryElevatorInteraction // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec9a90
	void ServerTryDropBoxInteraction(struct AActor* TmpDropBox); // Function BravoHotelGame.BravoHotelCharacter.ServerTryDropBoxInteraction // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec99d0
	void ServerTotalAirWalkDistance(float TotalDistance); // Function BravoHotelGame.BravoHotelCharacter.ServerTotalAirWalkDistance // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9920
	void ServerTestSpawnPersonalBox(float X, float Y); // Function BravoHotelGame.BravoHotelCharacter.ServerTestSpawnPersonalBox // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9820
	void ServerTakeDamage_Radial(float DamageAmount, struct FBravoHotelDamageEvent_Radial DamageEvent, struct ABravoHotelCharacter* TargetCharacter); // Function BravoHotelGame.BravoHotelCharacter.ServerTakeDamage_Radial // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec95a0
	void ServerTakeDamage_Point(float DamageAmount, struct FBravoHotelDamageEvent_Point DamageEvent, struct ABravoHotelCharacter* TargetCharacter); // Function BravoHotelGame.BravoHotelCharacter.ServerTakeDamage_Point // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec93f0
	void ServerTakeDamage(float DamageAmount, struct FDamageEvent DamageEvent, struct ABravoHotelCharacter* TargetCharacter); // Function BravoHotelGame.BravoHotelCharacter.ServerTakeDamage // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec92a0
	void ServerStopUltimate_Recon(); // Function BravoHotelGame.BravoHotelCharacter.ServerStopUltimate_Recon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9250
	void ServerStopSliding(); // Function BravoHotelGame.BravoHotelCharacter.ServerStopSliding // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9200
	void ServerStopRolling(); // Function BravoHotelGame.BravoHotelCharacter.ServerStopRolling // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec91b0
	void ServerStopRevive(struct AActor* RevivedActor); // Function BravoHotelGame.BravoHotelCharacter.ServerStopRevive // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec90f0
	void ServerStopResuscitation(struct AActor* ResuscitatedActor); // Function BravoHotelGame.BravoHotelCharacter.ServerStopResuscitation // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec9030
	void ServerStopMontage(struct UAnimMontage* AnimMontage, float BlendTime); // Function BravoHotelGame.BravoHotelCharacter.ServerStopMontage // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec8f30
	void ServerStartUltimate_Recon(struct FVector_NetQuantize InitialImpulse); // Function BravoHotelGame.BravoHotelCharacter.ServerStartUltimate_Recon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8e80
	void ServerStartStuntman(); // Function BravoHotelGame.BravoHotelCharacter.ServerStartStuntman // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec8e30
	void ServerStartSteadyAim(); // Function BravoHotelGame.BravoHotelCharacter.ServerStartSteadyAim // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8de0
	void ServerStartSliding(); // Function BravoHotelGame.BravoHotelCharacter.ServerStartSliding // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8d90
	void ServerStartRolling(struct FVector_NetQuantize TargetRollingImpulse); // Function BravoHotelGame.BravoHotelCharacter.ServerStartRolling // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8ce0
	void ServerStartRocketJump(); // Function BravoHotelGame.BravoHotelCharacter.ServerStartRocketJump // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8c90
	void ServerStartRevive(struct AActor* RevivedActor); // Function BravoHotelGame.BravoHotelCharacter.ServerStartRevive // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8bd0
	void ServerStartResuscitation(struct AActor* ResuscitatedActor); // Function BravoHotelGame.BravoHotelCharacter.ServerStartResuscitation // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8b10
	void ServerStartMeteorJump(); // Function BravoHotelGame.BravoHotelCharacter.ServerStartMeteorJump // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8ac0
	void ServerStartKickDoor(struct ABravoHotelDoor* TargetDoor); // Function BravoHotelGame.BravoHotelCharacter.ServerStartKickDoor // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8a00
	void ServerStartDescenting(); // Function BravoHotelGame.BravoHotelCharacter.ServerStartDescenting // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec89b0
	void ServerSpawnPersonalBox(struct FSpawnPerkData SpawnPersonalBoxData, struct FDebugSupplyBoxInfo DebugData); // Function BravoHotelGame.BravoHotelCharacter.ServerSpawnPersonalBox // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8840
	void ServerSpawnPerk(struct FSpawnPerkData SpawnPerkData); // Function BravoHotelGame.BravoHotelCharacter.ServerSpawnPerk // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8730
	void ServerSpawnBombing(struct FVector_NetQuantize SpawnLocation); // Function BravoHotelGame.BravoHotelCharacter.ServerSpawnBombing // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8680
	void ServerSetUpdateRenderSettings(bool bValue); // Function BravoHotelGame.BravoHotelCharacter.ServerSetUpdateRenderSettings // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1ec85c0
	void ServerSetState(enum class ECharacterState NewState); // Function BravoHotelGame.BravoHotelCharacter.ServerSetState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8510
	void ServerSetSearchInstinctLocation(struct FVector_NetQuantize InSearchInstinctLocation); // Function BravoHotelGame.BravoHotelCharacter.ServerSetSearchInstinctLocation // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1ec8460
	void ServerSetRemoteViewRotForDriver(uint16_t SendPitch, uint16_t SendYaw); // Function BravoHotelGame.BravoHotelCharacter.ServerSetRemoteViewRotForDriver // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8360
	void ServerSetProjectileGrenadeState(struct ABravoHotelProjectileGrenade* Grenade, enum class EProjectileGrenadeState NewState, struct AActor* NewTriggerActor); // Function BravoHotelGame.BravoHotelCharacter.ServerSetProjectileGrenadeState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec8230
	void ServerSetParachuteTargetRotator(struct FRotator NewRotation); // Function BravoHotelGame.BravoHotelCharacter.ServerSetParachuteTargetRotator // (Net|Native|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec8180
	void ServerSetLeanState(enum class ELeanState NewLeanState, float InLeanDegreeMax); // Function BravoHotelGame.BravoHotelCharacter.ServerSetLeanState // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1ec8080
	void ServerSetIsParachuteLanding(bool Flag, float Height); // Function BravoHotelGame.BravoHotelCharacter.ServerSetIsParachuteLanding // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec7f80
	void ServerSetIsMelee(bool bNewMelee); // Function BravoHotelGame.BravoHotelCharacter.ServerSetIsMelee // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec7ec0
	void ServerSetIsFreeLook(bool bNewFreeLook); // Function BravoHotelGame.BravoHotelCharacter.ServerSetIsFreeLook // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1ec7e00
	void ServerSetInteractionType(enum class EInteractionType NewType); // Function BravoHotelGame.BravoHotelCharacter.ServerSetInteractionType // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1ec7d50
	void ServerSetInSmoke(bool bNewSmoke); // Function BravoHotelGame.BravoHotelCharacter.ServerSetInSmoke // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec7c90
	void ServerSetFireType(enum class EFireType NewFireType); // Function BravoHotelGame.BravoHotelCharacter.ServerSetFireType // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec7be0
	void ServerSetCustomBuoyancySwimMode(bool Mode); // Function BravoHotelGame.BravoHotelCharacter.ServerSetCustomBuoyancySwimMode // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec7b20
	void ServerSetChargingGauge(bool bStart); // Function BravoHotelGame.BravoHotelCharacter.ServerSetChargingGauge // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec7a60
	void ServerSetCastingUI(enum class ECastingUIType CastingUIType, struct FName SourceName, float MaxTime, struct ABravoHotelCharacter* Target); // Function BravoHotelGame.BravoHotelCharacter.ServerSetCastingUI // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec78e0
	void ServerSetBoostPercent(int8_t Percent); // Function BravoHotelGame.BravoHotelCharacter.ServerSetBoostPercent // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1ec7830
	void ServerSetActorRotation(struct FRotator NewRotation); // Function BravoHotelGame.BravoHotelCharacter.ServerSetActorRotation // (Net|Native|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec7780
	void ServerSetActorLocationAndRotation(struct FVector NewLocation, struct FRotator NewRotation); // Function BravoHotelGame.BravoHotelCharacter.ServerSetActorLocationAndRotation // (Net|Native|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec7650
	void ServerSetActiveSkillsKeyNameList(struct TArray<struct FName> KeyNameList); // Function BravoHotelGame.BravoHotelCharacter.ServerSetActiveSkillsKeyNameList // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec7590
	void ServerSendInvalidHitInfos(struct TArray<struct FRepInvalidHitInfo> InvalidHitInofs); // Function BravoHotelGame.BravoHotelCharacter.ServerSendInvalidHitInfos // (Net|Native|Event|Public|NetServer) // @ game+0x1ec74f0
	void ServerSelectThrowingWeaponThrowingType(enum class EGrenadeThrowingType NewThrowingType); // Function BravoHotelGame.BravoHotelCharacter.ServerSelectThrowingWeaponThrowingType // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1ec7440
	void ServerRewindMontage(struct UAnimMontage* AnimMontage); // Function BravoHotelGame.BravoHotelCharacter.ServerRewindMontage // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec7380
	void ServerResetVehicleSearch(); // Function BravoHotelGame.BravoHotelCharacter.ServerResetVehicleSearch // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec7330
	void ServerResetSearchInstinct(); // Function BravoHotelGame.BravoHotelCharacter.ServerResetSearchInstinct // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1ec72e0
	void ServerReselectPerkDeck(); // Function BravoHotelGame.BravoHotelCharacter.ServerReselectPerkDeck // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec7290
	void ServerRequestPayGold(int32_t ActionCode, int32_t Amount); // Function BravoHotelGame.BravoHotelCharacter.ServerRequestPayGold // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec7190
	void ServerRequestBuildingItemSpawnState(struct ABravoHotelBuilding* Building); // Function BravoHotelGame.BravoHotelCharacter.ServerRequestBuildingItemSpawnState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec70d0
	void ServerRequestBuildingItemSpawnList(int32_t Size, float IntervalTime, bool ToJson); // Function BravoHotelGame.BravoHotelCharacter.ServerRequestBuildingItemSpawnList // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec6f90
	void ServerRequestBuildingCount(); // Function BravoHotelGame.BravoHotelCharacter.ServerRequestBuildingCount // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec6f40
	void ServerQuickLanding(struct FVector_NetQuantize ClientActorLocation); // Function BravoHotelGame.BravoHotelCharacter.ServerQuickLanding // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec6e90
	void ServerPlayMontage(struct UAnimMontage* AnimMontageTPP, struct UAnimMontage* AnimMontageFPP); // Function BravoHotelGame.BravoHotelCharacter.ServerPlayMontage // (Net|NetReliableNative|Event|Protected|NetServer|BlueprintCallable|NetValidate) // @ game+0x1ec6d90
	void ServerPickUpInBox(struct ABravoHotelDropBoxActor* DropBoxActor, int8_t ItemIndex, int32_t GainQuantity, int32_t WeaponSlotIndex); // Function BravoHotelGame.BravoHotelCharacter.ServerPickUpInBox // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec6c10
	void ServerPersonalBoxRePosition(struct ABHPersonalSupplyBox* TargetSupplyBox, struct FVector NewLocation, struct FString HitActorName); // Function BravoHotelGame.BravoHotelCharacter.ServerPersonalBoxRePosition // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec6ac0
	void ServerMoveItem(struct AActor* SourceActor, enum class ItemWidgetDragType SourceSlotType, struct FInventoryItemInfo SourceItemInfo, struct AActor* TargetActor, enum class ItemWidgetDragType TargetSlotType, int32_t TargetIndex, int32_t GainQuantity); // Function BravoHotelGame.BravoHotelCharacter.ServerMoveItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec6830
	void ServerMeteorStrike(); // Function BravoHotelGame.BravoHotelCharacter.ServerMeteorStrike // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec67e0
	void ServerMaxAirWalkDistance(float MaxDistance); // Function BravoHotelGame.BravoHotelCharacter.ServerMaxAirWalkDistance // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec6730
	void ServerLaunchCharacter(struct FVector LaunchVelocity); // Function BravoHotelGame.BravoHotelCharacter.ServerLaunchCharacter // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec6660
	void ServerJetpackBooster(bool bNewJackpack); // Function BravoHotelGame.BravoHotelCharacter.ServerJetpackBooster // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec65a0
	void ServerJetpackAim(bool bNewJetpackAim); // Function BravoHotelGame.BravoHotelCharacter.ServerJetpackAim // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec64e0
	void ServerInputState(int8_t Forward, int8_t Right); // Function BravoHotelGame.BravoHotelCharacter.ServerInputState // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec63f0
	void ServerInputFPSOnly(bool bFlag); // Function BravoHotelGame.BravoHotelCharacter.ServerInputFPSOnly // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec6330
	void ServerHealthRegain(float Amount, enum class ECharacterBuffType BuffType); // Function BravoHotelGame.BravoHotelCharacter.ServerHealthRegain // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec6230
	void ServerHandleDamageToVehicleDestructibleComponent(struct UBravoHotelDestructibleComponent* DestructibleComponent, struct FHitResult HitDetails, struct FVector ImpactVelocity); // Function BravoHotelGame.BravoHotelCharacter.ServerHandleDamageToVehicleDestructibleComponent // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec5ff0
	void ServerForceUpdateTerrainType(); // Function BravoHotelGame.BravoHotelCharacter.ServerForceUpdateTerrainType // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1ec5fa0
	void ServerFireMode(); // Function BravoHotelGame.BravoHotelCharacter.ServerFireMode // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5f50
	void ServerFailedActiveSkill_2(); // Function BravoHotelGame.BravoHotelCharacter.ServerFailedActiveSkill_2 // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5f00
	void ServerFailedActiveSkill_1(); // Function BravoHotelGame.BravoHotelCharacter.ServerFailedActiveSkill_1 // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5eb0
	void ServerEscapeTheFlames(struct FMolotovFlameDotDamageInfo FlameDamageInfo); // Function BravoHotelGame.BravoHotelCharacter.ServerEscapeTheFlames // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5d70
	void ServerEquipPerk(enum class EPerkSlotFlag Slot, struct FName PerkName, int32_t Level, bool Reset); // Function BravoHotelGame.BravoHotelCharacter.ServerEquipPerk // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5bf0
	void ServerEndSteadyAim(); // Function BravoHotelGame.BravoHotelCharacter.ServerEndSteadyAim // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5ba0
	void ServerEndRevive(struct AActor* RevivedActor); // Function BravoHotelGame.BravoHotelCharacter.ServerEndRevive // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5ae0
	void ServerEndResuscitation(struct AActor* ResuscitatedActor); // Function BravoHotelGame.BravoHotelCharacter.ServerEndResuscitation // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5a20
	void ServerDoWalking(bool bNewWalking); // Function BravoHotelGame.BravoHotelCharacter.ServerDoWalking // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5810
	void ServerDoSprinting(bool bNewSprinting); // Function BravoHotelGame.BravoHotelCharacter.ServerDoSprinting // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5750
	void ServerDoRetreat(struct FVector NewLocation, struct FRotator NewRotation, float RandomDistanceMax); // Function BravoHotelGame.BravoHotelCharacter.ServerDoRetreat // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec55d0
	void ServerDoProne(bool bNewProne); // Function BravoHotelGame.BravoHotelCharacter.ServerDoProne // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5510
	void ServerDoPickUpItemOrWeapon(int32_t WeaponSlotIndex, struct ABravoHotelPickup* PickableItem, int32_t GainQuantity); // Function BravoHotelGame.BravoHotelCharacter.ServerDoPickUpItemOrWeapon // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec53e0
	void ServerDoorBreaching(struct ABravoHotelDoor* TargetDoor, bool bIsDamageCauserFrontOfDoor, struct TArray<struct ABravoHotelCharacter*> TargetDamagedCharacters); // Function BravoHotelGame.BravoHotelCharacter.ServerDoorBreaching // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec58d0
	void ServerDoNuclear(struct FVector_NetQuantize SpawnLocation, struct FNuclearInfo NewNuclearInfo); // Function BravoHotelGame.BravoHotelCharacter.ServerDoNuclear // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec52d0
	void ServerDoAirWalk(bool bNewAirWalk, float InDuration, float InGravity); // Function BravoHotelGame.BravoHotelCharacter.ServerDoAirWalk // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5190
	void ServerDamageInFlames(struct FMolotovFlameDotDamageInfo FlameDamageInfo); // Function BravoHotelGame.BravoHotelCharacter.ServerDamageInFlames // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec5050
	void ServerCompletedCombine(); // Function BravoHotelGame.BravoHotelCharacter.ServerCompletedCombine // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec5000
	void ServerClearCastingUI(); // Function BravoHotelGame.BravoHotelCharacter.ServerClearCastingUI // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec4fb0
	void ServerChoosePerkDeck(int32_t ChooseIndex); // Function BravoHotelGame.BravoHotelCharacter.ServerChoosePerkDeck // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec4ef0
	void ServerCheckLineTrace(); // Function BravoHotelGame.BravoHotelCharacter.ServerCheckLineTrace // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec4ea0
	void ServerChangeGender(); // Function BravoHotelGame.BravoHotelCharacter.ServerChangeGender // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec4e50
	void ServerCancleActiveSkill(int32_t CancleActiveSkillSlot); // Function BravoHotelGame.BravoHotelCharacter.ServerCancleActiveSkill // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec4d90
	void ServerBuildingCountCheck(); // Function BravoHotelGame.BravoHotelCharacter.ServerBuildingCountCheck // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec4d40
	void ServerBeginCombine(struct FName RecipeKey); // Function BravoHotelGame.BravoHotelCharacter.ServerBeginCombine // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec4c80
	void ServerBeginCastingBackpackItem(int32_t BackpackItemIndex); // Function BravoHotelGame.BravoHotelCharacter.ServerBeginCastingBackpackItem // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec4bc0
	void ServerAttachToComponent(struct AActor* AttachingActor, struct UPrimitiveComponent* AttachedComponent, struct FVector AttachLocation, struct FVector AttachNormal); // Function BravoHotelGame.BravoHotelCharacter.ServerAttachToComponent // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec4a10
	void ServerApplyDamage(float DamageAmount, struct FDamageEvent DamageEvent, struct AController* EventInstigator, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelCharacter.ServerApplyDamage // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec4880
	void ServerAddPerk(int32_t Count); // Function BravoHotelGame.BravoHotelCharacter.ServerAddPerk // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec47c0
	void ServerAddExpToPerk(enum class EPerkSlotFlag Slot, int32_t ExpValue); // Function BravoHotelGame.BravoHotelCharacter.ServerAddExpToPerk // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec46c0
	void ServerActiveSkill(int32_t ActiveSkillSlot); // Function BravoHotelGame.BravoHotelCharacter.ServerActiveSkill // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ec4600
	void ServerActionDestructObject(struct ADestructibleActor* DestructibleActor, struct UDestructibleComponent* DestructibleComponent, struct FVector Location, float Damage, float EffectRange); // Function BravoHotelGame.BravoHotelCharacter.ServerActionDestructObject // (Net|Native|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec4430
	void ServerAbortCombine(); // Function BravoHotelGame.BravoHotelCharacter.ServerAbortCombine // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec43e0
	void ServerAbortCastingBackpackItem(int32_t BackpackItemIndex); // Function BravoHotelGame.BravoHotelCharacter.ServerAbortCastingBackpackItem // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1ec4320
	void SelectThrowingWeaponThrowingType(); // Function BravoHotelGame.BravoHotelCharacter.SelectThrowingWeaponThrowingType // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec4300
	void SelectPerkDeck(struct FName DeckName); // Function BravoHotelGame.BravoHotelCharacter.SelectPerkDeck // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec4280
	void RifleMeleeAttack(); // Function BravoHotelGame.BravoHotelCharacter.RifleMeleeAttack // (Final|Native|Protected) // @ game+0x1ec4260
	void RevertGeneralSettingNearClipPlane(); // Function BravoHotelGame.BravoHotelCharacter.RevertGeneralSettingNearClipPlane // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec4240
	void ResetTargetHealth(); // Function BravoHotelGame.BravoHotelCharacter.ResetTargetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec4220
	void ResetPerkDeckUI(); // Function BravoHotelGame.BravoHotelCharacter.ResetPerkDeckUI // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec4200
	void ResetOxygen(); // Function BravoHotelGame.BravoHotelCharacter.ResetOxygen // (Final|Native|Public) // @ game+0x1ec41e0
	void ResetMagneticDamagedCharacterMaterial(); // Function BravoHotelGame.BravoHotelCharacter.ResetMagneticDamagedCharacterMaterial // (Final|Native|Public) // @ game+0x1ec41c0
	void ResetLanding(); // Function BravoHotelGame.BravoHotelCharacter.ResetLanding // (Final|Native|Public) // @ game+0x1ec41a0
	void ResetIdleNum(); // Function BravoHotelGame.BravoHotelCharacter.ResetIdleNum // (Final|Native|Public) // @ game+0x1ec4180
	void ResetFlashBangPP(); // Function BravoHotelGame.BravoHotelCharacter.ResetFlashBangPP // (Final|Native|Public) // @ game+0x1ec4160
	void ResetDustCharacterMaterial(); // Function BravoHotelGame.BravoHotelCharacter.ResetDustCharacterMaterial // (Final|Native|Public) // @ game+0x1ec4140
	void ResetDamagedCharacterMaterial(); // Function BravoHotelGame.BravoHotelCharacter.ResetDamagedCharacterMaterial // (Final|Native|Public) // @ game+0x1ec4120
	void ResendHUDInfo(); // Function BravoHotelGame.BravoHotelCharacter.ResendHUDInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec4100
	void RequestServerBuildingCount(); // Function BravoHotelGame.BravoHotelCharacter.RequestServerBuildingCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec40e0
	void RequestNearBuildingItemSpawnState(); // Function BravoHotelGame.BravoHotelCharacter.RequestNearBuildingItemSpawnState // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec40c0
	void RequestAllBuildingItemSpawnInfo(int32_t RequestSize, float IntervalTime, bool ToJson); // Function BravoHotelGame.BravoHotelCharacter.RequestAllBuildingItemSpawnInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3fb0
	void ReplaceFreeLookImmediately(); // Function BravoHotelGame.BravoHotelCharacter.ReplaceFreeLookImmediately // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3f90
	void RemoveWearableItem(enum class EWearableItemType Slot, bool bUpdateSkeletalMesh); // Function BravoHotelGame.BravoHotelCharacter.RemoveWearableItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3ec0
	void RemoveThrownMolotovCocktail(struct ABravoHotelProjectileGrenadeMolotovCocktail* MolotovCocktail); // Function BravoHotelGame.BravoHotelCharacter.RemoveThrownMolotovCocktail // (Final|Native|Public) // @ game+0x1ec3e40
	void RemoveThrownFlashbang(struct ABravoHotelProjectileGrenadeFlashbang* Flashbang); // Function BravoHotelGame.BravoHotelCharacter.RemoveThrownFlashbang // (Final|Native|Public) // @ game+0x1ec3dc0
	void RemoveTargetHealth(enum class ETargetHealthType Type); // Function BravoHotelGame.BravoHotelCharacter.RemoveTargetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3d40
	void RemoveShortTimeHealth(struct UObject* HealthOwner); // Function BravoHotelGame.BravoHotelCharacter.RemoveShortTimeHealth // (Final|Native|Public) // @ game+0x1ec3cc0
	void RemoveEquippingWearableItems(); // Function BravoHotelGame.BravoHotelCharacter.RemoveEquippingWearableItems // (Final|Native|Public) // @ game+0x1ec3ca0
	void RemoveDetectedStealable(struct ABravoHotelCharacter* NewCharacter); // Function BravoHotelGame.BravoHotelCharacter.RemoveDetectedStealable // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3c20
	void RemoveDetectedItem(struct ABravoHotelPickup* NewPickup); // Function BravoHotelGame.BravoHotelCharacter.RemoveDetectedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3ba0
	void RemoveDetectedDropBox(struct ABravoHotelDropBoxActor* NewPickup); // Function BravoHotelGame.BravoHotelCharacter.RemoveDetectedDropBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3b20
	void RemoveCondition(enum class ECharacterConditionType ConditionType, enum class EAbilityCase Key); // Function BravoHotelGame.BravoHotelCharacter.RemoveCondition // (Final|Native|Public) // @ game+0x1ec3a60
	void RemoveCameraPP(struct UCameraPostProcessPreset* TargetPPPresetClass); // Function BravoHotelGame.BravoHotelCharacter.RemoveCameraPP // (Final|Native|Public) // @ game+0x1ec39e0
	void RemoveBackpackShield(struct FBravoHotelDamageEvent_Point& DamageEvent); // Function BravoHotelGame.BravoHotelCharacter.RemoveBackpackShield // (Final|Native|Public|HasOutParms) // @ game+0x1ec38c0
	struct FName RemoveArmShield(struct FHitResult& TargetHitResult, struct FVector& ShotDirection); // Function BravoHotelGame.BravoHotelCharacter.RemoveArmShield // (Final|Native|Public|HasOutParms|HasDefaults|Const) // @ game+0x1ec3780
	void RemoveAllWearableItem2(); // Function BravoHotelGame.BravoHotelCharacter.RemoveAllWearableItem2 // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3740
	void RemoveAllWearableItem(); // Function BravoHotelGame.BravoHotelCharacter.RemoveAllWearableItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3760
	void RemoveAllFoundVehicleLocations(); // Function BravoHotelGame.BravoHotelCharacter.RemoveAllFoundVehicleLocations // (Final|Native|Public) // @ game+0x1ec3720
	void RemoveAllDetectedItems(); // Function BravoHotelGame.BravoHotelCharacter.RemoveAllDetectedItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3700
	void RemoveAllBackpackItem(); // Function BravoHotelGame.BravoHotelCharacter.RemoveAllBackpackItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec36e0
	void RefreshAppearanceInfo(); // Function BravoHotelGame.BravoHotelCharacter.RefreshAppearanceInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec36c0
	void ReduceCharacterSpeedInGrenadeExplosionRange(); // Function BravoHotelGame.BravoHotelCharacter.ReduceCharacterSpeedInGrenadeExplosionRange // (Final|Native|Public) // @ game+0x1ec36a0
	void ReconnectProcess(); // Function BravoHotelGame.BravoHotelCharacter.ReconnectProcess // (Final|Native|Public) // @ game+0x1ec3680
	void ReceiverVoice(struct FName Idx); // Function BravoHotelGame.BravoHotelCharacter.ReceiverVoice // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1ec35f0
	void ReadyTeleport(); // Function BravoHotelGame.BravoHotelCharacter.ReadyTeleport // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ReadyGivePerkEvent(); // Function BravoHotelGame.BravoHotelCharacter.ReadyGivePerkEvent // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void PunchOnGround(); // Function BravoHotelGame.BravoHotelCharacter.PunchOnGround // (Final|Native|Protected) // @ game+0x1ec35d0
	void PunchOnAir(); // Function BravoHotelGame.BravoHotelCharacter.PunchOnAir // (Final|Native|Protected) // @ game+0x1ec35b0
	void Prone(bool bClientSimulation); // Function BravoHotelGame.BravoHotelCharacter.Prone // (Native|Public|BlueprintCallable) // @ game+0x1ec3520
	void PrintAllDetectedItems(); // Function BravoHotelGame.BravoHotelCharacter.PrintAllDetectedItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3500
	void PrepareLanding(enum class ELandingReason InLandingReason); // Function BravoHotelGame.BravoHotelCharacter.PrepareLanding // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3480
	void PlaySoundPlosiveSoundDetection3Lv(); // Function BravoHotelGame.BravoHotelCharacter.PlaySoundPlosiveSoundDetection3Lv // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3460
	void PlayMontageTakeDamage(); // Function BravoHotelGame.BravoHotelCharacter.PlayMontageTakeDamage // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec3440
	void PlayHitSoundForInstigator(); // Function BravoHotelGame.BravoHotelCharacter.PlayHitSoundForInstigator // (Final|Native|Public) // @ game+0x1ec3420
	void PlayDeathAnimation(struct FAnimSlot DeathAnimSlot, bool bIsForce, struct FVector Force, struct FRotator DeathRotation); // Function BravoHotelGame.BravoHotelCharacter.PlayDeathAnimation // (Final|Native|Private|HasDefaults) // @ game+0x1ec32a0
	struct FAudioPlayingHandle PlayCharacterSound(struct UAkAudioEvent* Event, struct TArray<struct FAudioCondition>& Conditions); // Function BravoHotelGame.BravoHotelCharacter.PlayCharacterSound // (Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1ec3170
	void PlayCameraShakeDescenting(); // Function BravoHotelGame.BravoHotelCharacter.PlayCameraShakeDescenting // (Final|Native|Public) // @ game+0x1ec3150
	void PistolMeleeAttack(); // Function BravoHotelGame.BravoHotelCharacter.PistolMeleeAttack // (Final|Native|Protected) // @ game+0x1ec3130
	void PickableItemDetected__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.PickableItemDetected__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void PhysicsImpulse_OnServer(struct ABravoHotelMutiplayerPhysicsActor* PhysicsActor, struct FVector Impulse, struct FName BoneName); // Function BravoHotelGame.BravoHotelCharacter.PhysicsImpulse_OnServer // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec2fd0
	void PhysicsImpulse_Multicast(struct ABravoHotelMutiplayerPhysicsActor* PhysicsActor, struct FVector Impulse, struct FName BoneName); // Function BravoHotelGame.BravoHotelCharacter.PhysicsImpulse_Multicast // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1ec2eb0
	void PhysicsActor_OnServer(struct ABravoHotelMutiplayerPhysicsActor* PhysicsActor, struct FTransform actorTransform); // Function BravoHotelGame.BravoHotelCharacter.PhysicsActor_OnServer // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ec2d50
	void PhysicsActor_Multicast(struct ABravoHotelMutiplayerPhysicsActor* PhysicsActor, struct FTransform actorTransform); // Function BravoHotelGame.BravoHotelCharacter.PhysicsActor_Multicast // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1ec2c10
	void PhasePerkLevelUpTimer(float DelayTime, int32_t UpCount); // Function BravoHotelGame.BravoHotelCharacter.PhasePerkLevelUpTimer // (Final|Native|Public) // @ game+0x1ec2b40
	void PhasePerkLevelUpReady(); // Function BravoHotelGame.BravoHotelCharacter.PhasePerkLevelUpReady // (Final|Native|Public) // @ game+0x1ec2b20
	void PhasePerkLevelUp(int32_t UpCount); // Function BravoHotelGame.BravoHotelCharacter.PhasePerkLevelUp // (Final|Native|Public) // @ game+0x1ec2aa0
	void PerkSpinEvent(bool bShow, int32_t Count, enum class EPerkSlotFlag Slot); // Function BravoHotelGame.BravoHotelCharacter.PerkSpinEvent // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnViewCameraOutWater__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnViewCameraOutWater__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnViewCameraInWater__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnViewCameraInWater__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnUpdateStartReady(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateStartReady // (Final|Native|Public) // @ game+0x1ec2a20
	void OnUpdatePassenger(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdatePassenger // (Final|Native|Public) // @ game+0x1ec26a0
	void OnUpdateParachuting(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateParachuting // (Final|Native|Public) // @ game+0x1ec29a0
	void OnUpdateLadder(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateLadder // (Final|Native|Public) // @ game+0x1ec27a0
	void OnUpdateKnockout(float fDeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateKnockout // (Final|Native|Public) // @ game+0x1ec2920
	void OnUpdateInAircraftCinematic(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateInAircraftCinematic // (Final|Native|Public) // @ game+0x1ec28a0
	void OnUpdateInAircraft(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateInAircraft // (Final|Native|Public) // @ game+0x1ec2820
	void OnUpdateEndReady(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateEndReady // (Final|Native|Public) // @ game+0x1ec27a0
	void OnUpdateDriverPossessedPawn(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateDriverPossessedPawn // (Final|Native|Public) // @ game+0x1ec2720
	void OnUpdateDriver(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateDriver // (Final|Native|Public) // @ game+0x1ec26a0
	void OnUpdateDescent(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateDescent // (Final|Native|Public) // @ game+0x1ec2620
	void OnUpdateDeath(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateDeath // (Final|Native|Public) // @ game+0x1ec25a0
	void OnUpdateCriticalTime(float fDeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateCriticalTime // (Final|Native|Public) // @ game+0x1ec2520
	void OnUpdateBattle(float fDeltaTime); // Function BravoHotelGame.BravoHotelCharacter.OnUpdateBattle // (Final|Native|Public) // @ game+0x1ec24a0
	void OnToggleWidget(enum class EToggleWidgetModeType& ToggleType); // Function BravoHotelGame.BravoHotelCharacter.OnToggleWidget // (Final|Native|Public|HasOutParms) // @ game+0x1ec2410
	void OnThrowingGrenadeMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function BravoHotelGame.BravoHotelCharacter.OnThrowingGrenadeMontageEnded // (Final|Native|Protected) // @ game+0x1ec1410
	void OnStartCineAircraft(struct AActor* InAircraftFlight); // Function BravoHotelGame.BravoHotelCharacter.OnStartCineAircraft // (Final|Native|Protected) // @ game+0x1ec2390
	void OnSpawnBlackOutDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnSpawnBlackOutDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnSetBaseElevator(struct UPrimitiveComponent* baseComponent); // Function BravoHotelGame.BravoHotelCharacter.OnSetBaseElevator // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec2310
	void OnRep_UnderWater(bool& LastFlag); // Function BravoHotelGame.BravoHotelCharacter.OnRep_UnderWater // (Final|Native|Public|HasOutParms) // @ game+0x1ec2260
	void OnRep_SteadyAim(); // Function BravoHotelGame.BravoHotelCharacter.OnRep_SteadyAim // (Final|Native|Private) // @ game+0x1ec2240
	void OnRep_NeedFindPersonalSupplyBoxLocation(); // Function BravoHotelGame.BravoHotelCharacter.OnRep_NeedFindPersonalSupplyBoxLocation // (Final|Native|Public) // @ game+0x1ec21a0
	void OnRep_Health(float& LastHealth); // Function BravoHotelGame.BravoHotelCharacter.OnRep_Health // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x1ec20e0
	void OnRep_FPSK_TargetMagnificationFactor(); // Function BravoHotelGame.BravoHotelCharacter.OnRep_FPSK_TargetMagnificationFactor // (Final|Native|Public) // @ game+0x1ec20a0
	void OnRep_CurrentPerkInfos(); // Function BravoHotelGame.BravoHotelCharacter.OnRep_CurrentPerkInfos // (Final|Native|Protected) // @ game+0x1ec2080
	void OnRep_CurrentPerkDeck(); // Function BravoHotelGame.BravoHotelCharacter.OnRep_CurrentPerkDeck // (Final|Native|Public) // @ game+0x1ec2040
	void OnRep_BoostPercent(); // Function BravoHotelGame.BravoHotelCharacter.OnRep_BoostPercent // (Final|Native|Public) // @ game+0x1ec2000
	void OnRep_bInSmoke(); // Function BravoHotelGame.BravoHotelCharacter.OnRep_bInSmoke // (Final|Native|Public) // @ game+0x1ec22f0
	void OnRep_BandageTargetHealth(); // Function BravoHotelGame.BravoHotelCharacter.OnRep_BandageTargetHealth // (Final|Native|Public) // @ game+0x1ec1fe0
	void OnPinOffMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function BravoHotelGame.BravoHotelCharacter.OnPinOffMontageEnded // (Final|Native|Protected) // @ game+0x1ec1410
	void OnParachuteSkinDataLoaded(struct TSoftObjectPtr<UMaterialInterface> TargetParachuteSkin); // Function BravoHotelGame.BravoHotelCharacter.OnParachuteSkinDataLoaded // (Final|Native|Public) // @ game+0x1ec1ec0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BravoHotelGame.BravoHotelCharacter.OnOverlapEnd // (Final|Native|Protected) // @ game+0x1ec1d80
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.BravoHotelCharacter.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x1ec1b70
	void OnOutSmoke__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnOutSmoke__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnOriginRebasing(struct UWorld* World, struct FIntVector PreviosWorldOriginLocation, struct FIntVector OriginLocation); // Function BravoHotelGame.BravoHotelCharacter.OnOriginRebasing // (Native|Public|HasDefaults) // @ game+0x1ec1a40
	void OnMovementUpdated(float DeltaSeconds, struct FVector OldLocation, struct FVector OldVelocity); // Function BravoHotelGame.BravoHotelCharacter.OnMovementUpdated // (Final|Native|Protected|HasDefaults) // @ game+0x1ec1920
	void OnMovementInputPressed__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnMovementInputPressed__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnInstigatorHitCharacter(struct UBravoHotelDamageType* DamageTypeClass); // Function BravoHotelGame.BravoHotelCharacter.OnInstigatorHitCharacter // (Final|Native|Public) // @ game+0x1ec18a0
	void OnInSmoke__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnInSmoke__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnInputStopFreeLook(); // Function BravoHotelGame.BravoHotelCharacter.OnInputStopFreeLook // (Final|Native|Public) // @ game+0x1ec1880
	void OnInputStopFire(); // Function BravoHotelGame.BravoHotelCharacter.OnInputStopFire // (Final|Native|Public) // @ game+0x1ec1860
	void OnInputStopBoostItemMenu(); // Function BravoHotelGame.BravoHotelCharacter.OnInputStopBoostItemMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec1840
	void OnInputStartSprinting(); // Function BravoHotelGame.BravoHotelCharacter.OnInputStartSprinting // (Final|Native|Public) // @ game+0x1ec1820
	void OnInputStartMovement(); // Function BravoHotelGame.BravoHotelCharacter.OnInputStartMovement // (Final|Native|Public) // @ game+0x151b910
	void OnInputStartFreeLook(); // Function BravoHotelGame.BravoHotelCharacter.OnInputStartFreeLook // (Final|Native|Public) // @ game+0x1ec1800
	void OnInputSmartPingMenuWorldMap(); // Function BravoHotelGame.BravoHotelCharacter.OnInputSmartPingMenuWorldMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec17e0
	void OnInputSmartPingMenu2WorldMap(); // Function BravoHotelGame.BravoHotelCharacter.OnInputSmartPingMenu2WorldMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec17a0
	void OnInputSmartPingMenu(); // Function BravoHotelGame.BravoHotelCharacter.OnInputSmartPingMenu // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec17c0
	void OnInputReleaseCrouch(); // Function BravoHotelGame.BravoHotelCharacter.OnInputReleaseCrouch // (Final|Native|Public) // @ game+0x1ec1780
	void OnInputFPSOnly(); // Function BravoHotelGame.BravoHotelCharacter.OnInputFPSOnly // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec1760
	void OnInputEndSteadyAim(); // Function BravoHotelGame.BravoHotelCharacter.OnInputEndSteadyAim // (Final|Native|Public) // @ game+0x1ec1740
	void OnInitializedFSM(struct UStateMachineComponent* Context); // Function BravoHotelGame.BravoHotelCharacter.OnInitializedFSM // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ec16b0
	void OnHitMeteorStrike(struct UPrimitiveComponent* HitComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function BravoHotelGame.BravoHotelCharacter.OnHitMeteorStrike // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1ec14e0
	void OnGrenadeCookMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function BravoHotelGame.BravoHotelCharacter.OnGrenadeCookMontageEnded // (Final|Native|Protected) // @ game+0x1ec1410
	void OnFinishRocketJump(); // Function BravoHotelGame.BravoHotelCharacter.OnFinishRocketJump // (Final|Native|Public) // @ game+0x1ec13f0
	void OnFinishMeteorJump(); // Function BravoHotelGame.BravoHotelCharacter.OnFinishMeteorJump // (Final|Native|Public) // @ game+0x1ec13d0
	void OnFinishAirWalk(); // Function BravoHotelGame.BravoHotelCharacter.OnFinishAirWalk // (Final|Native|Public) // @ game+0x1ec13b0
	void OnExitStartReady(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitStartReady // (Final|Native|Public) // @ game+0x1ec0fd0
	void OnExitPassenger(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitPassenger // (Final|Native|Public) // @ game+0x1ec12f0
	void OnExitParachuting(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitParachuting // (Final|Native|Public) // @ game+0x1ec1270
	void OnExitLadder(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitLadder // (Final|Native|Public) // @ game+0x1ec11f0
	void OnExitKnockout(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitKnockout // (Final|Native|Public) // @ game+0x1ec1170
	void OnExitInAircraftCinematic(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitInAircraftCinematic // (Final|Native|Public) // @ game+0x1ec10f0
	void OnExitInAircraft(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitInAircraft // (Final|Native|Public) // @ game+0x1ec1070
	void OnExitHipShot(); // Function BravoHotelGame.BravoHotelCharacter.OnExitHipShot // (Final|Native|Public) // @ game+0x151b910
	void OnExitHeartBeatSensor(); // Function BravoHotelGame.BravoHotelCharacter.OnExitHeartBeatSensor // (Final|Native|Public) // @ game+0x1ec1050
	void OnExitForceFieldDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnExitForceFieldDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnExitFallingState__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnExitFallingState__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnExitEndReady(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitEndReady // (Final|Native|Public) // @ game+0x1ec0fd0
	void OnExitedVehicle(); // Function BravoHotelGame.BravoHotelCharacter.OnExitedVehicle // (Final|Native|Protected) // @ game+0x1ec1390
	void OnExitedElevator(); // Function BravoHotelGame.BravoHotelCharacter.OnExitedElevator // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec1370
	void OnExitDriverPossessedPawn(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitDriverPossessedPawn // (Final|Native|Public) // @ game+0x1ec0f50
	void OnExitDriver(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitDriver // (Final|Native|Public) // @ game+0x1ec0ed0
	void OnExitDescent(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitDescent // (Final|Native|Public) // @ game+0x1ec0e50
	void OnExitDeath(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitDeath // (Final|Native|Public) // @ game+0x1ec0dd0
	void OnExitCriticalTime(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitCriticalTime // (Final|Native|Public) // @ game+0x1ec0d50
	void OnExitBattle(char NextStateID); // Function BravoHotelGame.BravoHotelCharacter.OnExitBattle // (Final|Native|Public) // @ game+0x1ec0cd0
	void OnExitAOS(); // Function BravoHotelGame.BravoHotelCharacter.OnExitAOS // (Final|Native|Public) // @ game+0x1ec0cb0
	void OnExitAMP(); // Function BravoHotelGame.BravoHotelCharacter.OnExitAMP // (Final|Native|Public) // @ game+0x1ec0c90
	void OnExitADS(bool bImmediately); // Function BravoHotelGame.BravoHotelCharacter.OnExitADS // (Final|Native|Public) // @ game+0x1ec0c00
	void OnEnterHipShot(bool bImmediately); // Function BravoHotelGame.BravoHotelCharacter.OnEnterHipShot // (Final|Native|Public) // @ game+0x1ec0ad0
	void OnEnterHeartBeatSensor(bool bImmediately); // Function BravoHotelGame.BravoHotelCharacter.OnEnterHeartBeatSensor // (Final|Native|Public) // @ game+0x1ec0a40
	void OnEnteredVehicle__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnEnteredVehicle__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnEnteredVehicle(); // Function BravoHotelGame.BravoHotelCharacter.OnEnteredVehicle // (Final|Native|Protected) // @ game+0x1ec0be0
	void OnEnteredElevator(struct ABravoHotelMoveElevator* OutElevatorRef); // Function BravoHotelGame.BravoHotelCharacter.OnEnteredElevator // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec0b60
	void OnEnterAOS(bool bImmediately); // Function BravoHotelGame.BravoHotelCharacter.OnEnterAOS // (Final|Native|Public) // @ game+0x1ec09b0
	void OnEnterAMP(bool bImmediately); // Function BravoHotelGame.BravoHotelCharacter.OnEnterAMP // (Final|Native|Public) // @ game+0x1ec0920
	void OnEnterADS(bool bImmediately); // Function BravoHotelGame.BravoHotelCharacter.OnEnterADS // (Final|Native|Public) // @ game+0x1ec0890
	void OnEndSearchInstinct__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnEndSearchInstinct__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnEndCineAircraft(); // Function BravoHotelGame.BravoHotelCharacter.OnEndCineAircraft // (Final|Native|Protected) // @ game+0x1ec0870
	void OnDeath(); // Function BravoHotelGame.BravoHotelCharacter.OnDeath // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ec0850
	void OnDamaged(struct UBravoHotelDamageType* DamageTypeClass, float DamageAmount); // Function BravoHotelGame.BravoHotelCharacter.OnDamaged // (Final|Native|Protected) // @ game+0x1ec0780
	void OnConditionStarted(enum class ECharacterConditionType NewCondition); // Function BravoHotelGame.BravoHotelCharacter.OnConditionStarted // (Final|Native|Public) // @ game+0x1ec0700
	void OnConditionEnded(enum class ECharacterConditionType NewCondition); // Function BravoHotelGame.BravoHotelCharacter.OnConditionEnded // (Final|Native|Public) // @ game+0x1ec0680
	void OnCompleteActiveSkillDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnCompleteActiveSkillDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnCheckSupplyCost__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnCheckSupplyCost__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnCharacterGroundStateChange__DelegateSignature(enum class ECharacterGroundState State); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnCharacterGroundStateChange__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnChangeWeaponAttachments(); // Function BravoHotelGame.BravoHotelCharacter.OnChangeWeaponAttachments // (Final|Native|Public) // @ game+0x1ec05a0
	void OnChangeTeleportState(bool IsStart); // Function BravoHotelGame.BravoHotelCharacter.OnChangeTeleportState // (Final|Native|Public|BlueprintCallable) // @ game+0x1ec0510
	void OnChangeProjectilePredictPath__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnChangeProjectilePredictPath__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnChangeFireType__DelegateSignature(enum class EFireType PreFireType, enum class EFireType NewFireType); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnChangeFireType__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnChangeEquipWeaponStateIntheWater(bool bState); // Function BravoHotelGame.BravoHotelCharacter.OnChangeEquipWeaponStateIntheWater // (Final|Native|Public) // @ game+0x1ec0480
	void OnChangeDetectedItems__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnChangeDetectedItems__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnChangedDediSettings(enum class ESettingType SettingType, float Value); // Function BravoHotelGame.BravoHotelCharacter.OnChangedDediSettings // (Final|Native|Public) // @ game+0x1ec05c0
	void OnChangeCurrentWeapon(); // Function BravoHotelGame.BravoHotelCharacter.OnChangeCurrentWeapon // (Final|Native|Private) // @ game+0x1ec0460
	void OnChangeCharacterState__DelegateSignature(enum class ECharacterState& StateType); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnChangeCharacterState__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void OnCameraViewModeChanged__DelegateSignature(bool bIsThirdPerson); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnCameraViewModeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnBoxChanged(); // Function BravoHotelGame.BravoHotelCharacter.OnBoxChanged // (Final|Native|Public) // @ game+0x1eb3150
	void OnBlueZoneFollowingChanged(struct AActor* Checker, bool bIsFollowing); // Function BravoHotelGame.BravoHotelCharacter.OnBlueZoneFollowingChanged // (Final|Native|Protected) // @ game+0x1ec0390
	void OnBeginStartReady(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginStartReady // (Final|Native|Public) // @ game+0x1ec0370
	void OnBeginPassenger(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginPassenger // (Final|Native|Public) // @ game+0x1ec0350
	void OnBeginParachuting(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginParachuting // (Final|Native|Public) // @ game+0x1ec0330
	void OnBeginLadder(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginLadder // (Final|Native|Public) // @ game+0x1ec0310
	void OnBeginKnockout(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginKnockout // (Final|Native|Public) // @ game+0x1ec02f0
	void OnBeginInAircraftCinematic(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginInAircraftCinematic // (Final|Native|Public) // @ game+0x1ec02d0
	void OnBeginInAircraft(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginInAircraft // (Final|Native|Public) // @ game+0x1ec02b0
	void OnBeginEndReady(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginEndReady // (Final|Native|Public) // @ game+0x1ec0290
	void OnBeginDriverPossessedPawn(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginDriverPossessedPawn // (Final|Native|Public) // @ game+0x1ec0270
	void OnBeginDriver(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginDriver // (Final|Native|Public) // @ game+0x1ec0250
	void OnBeginDescent(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginDescent // (Final|Native|Public) // @ game+0x1ec0230
	void OnBeginDeath(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginDeath // (Final|Native|Public) // @ game+0x1ec0210
	void OnBeginCriticalTime(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginCriticalTime // (Final|Native|Public) // @ game+0x1ec01f0
	void OnBeginBattle(); // Function BravoHotelGame.BravoHotelCharacter.OnBeginBattle // (Final|Native|Public) // @ game+0x1ec01d0
	void OnBattleRoyalStateChanged(enum class EBattleRoyaleState PrevState, enum class EBattleRoyaleState CurrentState); // Function BravoHotelGame.BravoHotelCharacter.OnBattleRoyalStateChanged // (Final|Native|Public) // @ game+0x1ec0110
	void OnAttackOtherCharacterWithRangedWeapon__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnAttackOtherCharacterWithRangedWeapon__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnAnyUpdateState(struct UStateMachineComponent* Context, struct FName WithStateName, char WithStateID, float WithStateTime); // Function BravoHotelGame.BravoHotelCharacter.OnAnyUpdateState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ebffd0
	void OnAnyExitState(struct UStateMachineComponent* Context, struct FName WithStateName, char WithStateID); // Function BravoHotelGame.BravoHotelCharacter.OnAnyExitState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ebfed0
	void OnAnyBeginState(struct UStateMachineComponent* Context, struct FName WithStateName, char WithStateID, char WithPrevious); // Function BravoHotelGame.BravoHotelCharacter.OnAnyBeginState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ebfd90
	void OnAnimInitialized(); // Function BravoHotelGame.BravoHotelCharacter.OnAnimInitialized // (Final|Native|Protected) // @ game+0x1ebfd70
	void OnAirCraftDelegate__DelegateSignature(bool State); // DelegateFunction BravoHotelGame.BravoHotelCharacter.OnAirCraftDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void NextParkourTestComponent(); // Function BravoHotelGame.BravoHotelCharacter.NextParkourTestComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void NeedCheckCurrentBuff(); // Function BravoHotelGame.BravoHotelCharacter.NeedCheckCurrentBuff // (Final|Native|Public) // @ game+0x1ebfd50
	void MultiEndAppearingVehicle(struct ABravoHotelVehicle* TargetVehicle, struct UObject* TargetClass, struct FTransform TargetTransform); // Function BravoHotelGame.BravoHotelCharacter.MultiEndAppearingVehicle // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1ebe7c0
	void MultiDisappearingVehicle(struct ABravoHotelVehicle* TargetVehicle); // Function BravoHotelGame.BravoHotelCharacter.MultiDisappearingVehicle // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebe730
	void MulticastWindowBreaching(); // Function BravoHotelGame.BravoHotelCharacter.MulticastWindowBreaching // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebfd30
	void MulticastUpdateRagdollVariables(struct FVector NewRagdollVelocity, struct FVector NewRagdollLocation, struct FVector NewActorLocation); // Function BravoHotelGame.BravoHotelCharacter.MulticastUpdateRagdollVariables // (Net|Native|Event|NetMulticast|Protected|HasDefaults|NetValidate) // @ game+0x1ebfba0
	void MulticastTakePointDamage(struct FRepPointDamageInfo DamageInfo); // Function BravoHotelGame.BravoHotelCharacter.MulticastTakePointDamage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebfad0
	void MulticastStopMontage(struct UAnimMontage* AnimMontage, float BlendTime); // Function BravoHotelGame.BravoHotelCharacter.MulticastStopMontage // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1ebfa00
	void MulticastSimulatedTakeDamage(struct FRepSimulatedTakeDamageInfo RepSimulatedInfo); // Function BravoHotelGame.BravoHotelCharacter.MulticastSimulatedTakeDamage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebf950
	void MulticastSimulatedHittedDamage(struct FRepSimulatedHittedDamage RepSimulatedInfo); // Function BravoHotelGame.BravoHotelCharacter.MulticastSimulatedHittedDamage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebf8b0
	void MulticastSetInteractiveShpere(bool bActive); // Function BravoHotelGame.BravoHotelCharacter.MulticastSetInteractiveShpere // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebf820
	void MulticastRewindMontage(struct UAnimMontage* AnimMontage); // Function BravoHotelGame.BravoHotelCharacter.MulticastRewindMontage // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1ebf790
	void MulticastRemoveAttachedUsableItem(); // Function BravoHotelGame.BravoHotelCharacter.MulticastRemoveAttachedUsableItem // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1ebf770
	void MulticastPlayMontage(bool bPlayOnLocalClient, struct UAnimMontage* AnimMontageTPP, struct UAnimMontage* AnimMontageFPP); // Function BravoHotelGame.BravoHotelCharacter.MulticastPlayMontage // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1ebf660
	void MulticastPlayCharacterSound(enum class ECharacterAudioEventType AudioEventType, char TypeIndex); // Function BravoHotelGame.BravoHotelCharacter.MulticastPlayCharacterSound // (Net|Native|Event|NetMulticast|Public) // @ game+0x1ebf5a0
	void MulticastObjectDestruction(struct ADestructibleActor* DestructibleActor, struct UDestructibleComponent* DestructibleComponent, struct FVector Location, float Damage, float EffectRange); // Function BravoHotelGame.BravoHotelCharacter.MulticastObjectDestruction // (Net|Native|Event|NetMulticast|Public|HasDefaults) // @ game+0x1ebf410
	void MulticastInAircraft(struct AActor* AircraftFlight, float AttachYaw); // Function BravoHotelGame.BravoHotelCharacter.MulticastInAircraft // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebf340
	void MulticastHandleDamageToVehicleDestructibleComponent(struct UBravoHotelDestructibleComponent* DestructibleComponent, struct FHitResult HitDetails, struct FVector ImpactVelocity); // Function BravoHotelGame.BravoHotelCharacter.MulticastHandleDamageToVehicleDestructibleComponent // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1ebf190
	void MulticastExceptOwnerStopAnimMontage(struct UAnimMontage* MontageToStopTPP, struct UAnimMontage* MontageToStopFPP); // Function BravoHotelGame.BravoHotelCharacter.MulticastExceptOwnerStopAnimMontage // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebf0c0
	void MulticastEndCombine(bool bSuccess, struct FName TargetRecipe); // Function BravoHotelGame.BravoHotelCharacter.MulticastEndCombine // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1ebeff0
	void MulticastEndCastingBackpackItem(bool bSuccess, struct FName ItemKey); // Function BravoHotelGame.BravoHotelCharacter.MulticastEndCastingBackpackItem // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1ebef20
	void MulticastDoorObjectDestruction(struct AActor* DoorActor, struct FRadialDamageEvent DamageEvent, struct AController* EventInstigator, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelCharacter.MulticastDoorObjectDestruction // (Net|Native|Event|NetMulticast|Public) // @ game+0x1ebeda0
	void MulticastDoorBreaching(struct FVector_NetQuantize BreachingParticleLocation, struct FVector_NetQuantize BreachingParticleRotation); // Function BravoHotelGame.BravoHotelCharacter.MulticastDoorBreaching // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebecc0
	void MulticastBravoHotelHIDestructionObejct(struct UBravoHotelHIDestructibleComponent* BravoHotelDestructibleComponent, float Damage, struct FRadialDamageEvent DamageEvent, struct AController* EventInstigator, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelCharacter.MulticastBravoHotelHIDestructionObejct // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ebeb00
	void MulticastBravoHotelDestructionObejct(struct UBravoHotelDestructibleComponent* BravoHotelDestructibleComponent, float Damage, struct FRadialDamageEvent DamageEvent, struct AController* EventInstigator, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelCharacter.MulticastBravoHotelDestructionObejct // (Net|Native|Event|NetMulticast|Public) // @ game+0x1ebe940
	void MultiAppearingVehicle(struct ABravoHotelVehicle* TargetVehicle, struct UObject* TargetClass, struct FTransform TargetTransform); // Function BravoHotelGame.BravoHotelCharacter.MultiAppearingVehicle // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x1ebe5b0
	void MuiticastSetUpdateRenderSettings(bool bValue); // Function BravoHotelGame.BravoHotelCharacter.MuiticastSetUpdateRenderSettings // (Net|Native|Event|NetMulticast|Public) // @ game+0x1ebe520
	void MoveRightOnDescent(float DeltaTime, float AxisValue); // Function BravoHotelGame.BravoHotelCharacter.MoveRightOnDescent // (Final|Native|Public) // @ game+0x1ebe460
	void MoveRight(float AxisValue); // Function BravoHotelGame.BravoHotelCharacter.MoveRight // (Final|Native|Public) // @ game+0x1ebe3e0
	void MoveForwardOnDescent(float DeltaTime, float AxisValue); // Function BravoHotelGame.BravoHotelCharacter.MoveForwardOnDescent // (Final|Native|Public) // @ game+0x1ebe320
	void MoveForward(float AxisValue); // Function BravoHotelGame.BravoHotelCharacter.MoveForward // (Final|Native|Public) // @ game+0x1ebe2a0
	void MarkBrokenEquipmentNeedToSpawn(int32_t Equipmentlevel, struct FVector& DamageImpulseDir, enum class EWearableItemType& EquipmentType); // Function BravoHotelGame.BravoHotelCharacter.MarkBrokenEquipmentNeedToSpawn // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1ebe180
	void ManageRotation(); // Function BravoHotelGame.BravoHotelCharacter.ManageRotation // (Final|Native|Public) // @ game+0x1ebe160
	void ManageMovementMode(); // Function BravoHotelGame.BravoHotelCharacter.ManageMovementMode // (Final|Native|Public) // @ game+0x1ebe140
	void ManageDebuffState(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.ManageDebuffState // (Final|Native|Protected) // @ game+0x1ebe0c0
	void LockMovementInput(); // Function BravoHotelGame.BravoHotelCharacter.LockMovementInput // (Final|Native|Public) // @ game+0x1ebe0a0
	void LoadMouseSensitivty(); // Function BravoHotelGame.BravoHotelCharacter.LoadMouseSensitivty // (Final|Native|Public|BlueprintCallable) // @ game+0x1ebe080
	void KillPerkLevelUpTimer(float DelayTime, int32_t UpCount, int32_t KillCount); // Function BravoHotelGame.BravoHotelCharacter.KillPerkLevelUpTimer // (Final|Native|Public) // @ game+0x1ebdf70
	void KillPerkLevelUpReady(int32_t KillCount); // Function BravoHotelGame.BravoHotelCharacter.KillPerkLevelUpReady // (Final|Native|Public) // @ game+0x1ebdef0
	void KillPerkLevelUp(int32_t UpCount, int32_t KillCount); // Function BravoHotelGame.BravoHotelCharacter.KillPerkLevelUp // (Final|Native|Public) // @ game+0x1ebde30
	void KillGivePerkEvent(int32_t KillCount); // Function BravoHotelGame.BravoHotelCharacter.KillGivePerkEvent // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_UpdateMutable_PreviewPawn(bool bChangeGender); // Function BravoHotelGame.BravoHotelCharacter.K2_UpdateMutable_PreviewPawn // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnStartProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust); // Function BravoHotelGame.BravoHotelCharacter.K2_OnStartProne // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnGoParachute(); // Function BravoHotelGame.BravoHotelCharacter.K2_OnGoParachute // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnEndProne(float HalfHeightAdjust, float ScaledHalfHeightAdjust); // Function BravoHotelGame.BravoHotelCharacter.K2_OnEndProne // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnCameraViewModeChanged(bool bIsThirdPerson); // Function BravoHotelGame.BravoHotelCharacter.K2_OnCameraViewModeChanged // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnAddControllerYawInput(float Val); // Function BravoHotelGame.BravoHotelCharacter.K2_OnAddControllerYawInput // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	struct FPerkLevelUpData K2_GetPerkLevelUpData(); // Function BravoHotelGame.BravoHotelCharacter.K2_GetPerkLevelUpData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebddc0
	struct FPerkDeckData K2_GetPerkDeckData(); // Function BravoHotelGame.BravoHotelCharacter.K2_GetPerkDeckData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebdd50
	struct FPerkLevelUpElement K2_GetPerkClassLevelUpElement(int32_t Level); // Function BravoHotelGame.BravoHotelCharacter.K2_GetPerkClassLevelUpElement // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebdb80
	void K2_FPSK_OnStartADS(); // Function BravoHotelGame.BravoHotelCharacter.K2_FPSK_OnStartADS // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_FPSK_OnEndADS(); // Function BravoHotelGame.BravoHotelCharacter.K2_FPSK_OnEndADS // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_EnterSceneOfWin(); // Function BravoHotelGame.BravoHotelCharacter.K2_EnterSceneOfWin // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void K2_Cheat_ToggleCharacterDebugCamera(); // Function BravoHotelGame.BravoHotelCharacter.K2_Cheat_ToggleCharacterDebugCamera // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool IsWantsToJetpackAim(); // Function BravoHotelGame.BravoHotelCharacter.IsWantsToJetpackAim // (Final|Native|Public|Const) // @ game+0x1ebdb50
	bool IsWantsToJetpack(); // Function BravoHotelGame.BravoHotelCharacter.IsWantsToJetpack // (Final|Native|Public|Const) // @ game+0x1ebdb20
	bool IsViewPointInWaterVolume(); // Function BravoHotelGame.BravoHotelCharacter.IsViewPointInWaterVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebdaf0
	bool IsVehicleState(enum class ECharacterState State); // Function BravoHotelGame.BravoHotelCharacter.IsVehicleState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebda60
	bool IsVehiclePassenger(); // Function BravoHotelGame.BravoHotelCharacter.IsVehiclePassenger // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebda30
	bool IsVehicleDriver(); // Function BravoHotelGame.BravoHotelCharacter.IsVehicleDriver // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebda00
	bool IsThirdPerson(); // Function BravoHotelGame.BravoHotelCharacter.IsThirdPerson // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd9d0
	bool IsSwimming(); // Function BravoHotelGame.BravoHotelCharacter.IsSwimming // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd9a0
	bool IsSteadyAim(); // Function BravoHotelGame.BravoHotelCharacter.IsSteadyAim // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd970
	bool IsSprinting(); // Function BravoHotelGame.BravoHotelCharacter.IsSprinting // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd940
	bool IsShowingLandingPosition(); // Function BravoHotelGame.BravoHotelCharacter.IsShowingLandingPosition // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebd910
	bool IsReviving(); // Function BravoHotelGame.BravoHotelCharacter.IsReviving // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd890
	bool IsResuscitating(); // Function BravoHotelGame.BravoHotelCharacter.IsResuscitating // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd810
	bool IsRecommendedPerkDeck(struct FName& PerkName); // Function BravoHotelGame.BravoHotelCharacter.IsRecommendedPerkDeck // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd770
	bool IsReadyToSnipe(); // Function BravoHotelGame.BravoHotelCharacter.IsReadyToSnipe // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebd750
	bool IsProneStateTransitioning(); // Function BravoHotelGame.BravoHotelCharacter.IsProneStateTransitioning // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd720
	bool IsProne(); // Function BravoHotelGame.BravoHotelCharacter.IsProne // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd6f0
	bool IsPlayingPickupAnim(); // Function BravoHotelGame.BravoHotelCharacter.IsPlayingPickupAnim // (Final|Native|Public|Const) // @ game+0x1ebd6c0
	bool IsPlayingEquipAnim(); // Function BravoHotelGame.BravoHotelCharacter.IsPlayingEquipAnim // (Final|Native|Public|Const) // @ game+0x1ebd690
	bool IsPlayingCastingAnim(); // Function BravoHotelGame.BravoHotelCharacter.IsPlayingCastingAnim // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd660
	bool IsPlayerReplayViewMode(); // Function BravoHotelGame.BravoHotelCharacter.IsPlayerReplayViewMode // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebd630
	bool IsPendingKickDoor(); // Function BravoHotelGame.BravoHotelCharacter.IsPendingKickDoor // (Final|Native|Public|Const) // @ game+0x1ebd600
	bool IsOverlapWaterVolume(); // Function BravoHotelGame.BravoHotelCharacter.IsOverlapWaterVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd5d0
	bool IsOnLadder(); // Function BravoHotelGame.BravoHotelCharacter.IsOnLadder // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebd5a0
	bool IsOnIceLand(); // Function BravoHotelGame.BravoHotelCharacter.IsOnIceLand // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd570
	bool IsOnDescent(); // Function BravoHotelGame.BravoHotelCharacter.IsOnDescent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd540
	bool IsMaxLevel(); // Function BravoHotelGame.BravoHotelCharacter.IsMaxLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebd510
	bool IsMale(); // Function BravoHotelGame.BravoHotelCharacter.IsMale // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd4e0
	bool IsLockedInventory(); // Function BravoHotelGame.BravoHotelCharacter.IsLockedInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd4b0
	bool IsLocalPlayerControlledPawn(); // Function BravoHotelGame.BravoHotelCharacter.IsLocalPlayerControlledPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd3f0
	bool IsLocallyPlaying(bool bIncludeSpectedPawn); // Function BravoHotelGame.BravoHotelCharacter.IsLocallyPlaying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd420
	bool IsLandStop(); // Function BravoHotelGame.BravoHotelCharacter.IsLandStop // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd3c0
	bool IsKicking(); // Function BravoHotelGame.BravoHotelCharacter.IsKicking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd390
	bool IsJumping(); // Function BravoHotelGame.BravoHotelCharacter.IsJumping // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd360
	bool IsJumpAttacking(); // Function BravoHotelGame.BravoHotelCharacter.IsJumpAttacking // (Final|Native|Public|Const) // @ game+0x1ebd330
	bool IsInVehicle(); // Function BravoHotelGame.BravoHotelCharacter.IsInVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd300
	bool IsInstancedFoliageActor(struct AActor* TargetActor); // Function BravoHotelGame.BravoHotelCharacter.IsInstancedFoliageActor // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool IsInSkydiving(); // Function BravoHotelGame.BravoHotelCharacter.IsInSkydiving // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd2d0
	bool IsInParachute(); // Function BravoHotelGame.BravoHotelCharacter.IsInParachute // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd2a0
	bool IsInForceField(); // Function BravoHotelGame.BravoHotelCharacter.IsInForceField // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebd270
	bool IsInDoor(); // Function BravoHotelGame.BravoHotelCharacter.IsInDoor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd240
	bool IsInAircraft(); // Function BravoHotelGame.BravoHotelCharacter.IsInAircraft // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd210
	bool IsHipShot(); // Function BravoHotelGame.BravoHotelCharacter.IsHipShot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd1e0
	bool IsFoundVehicleSearch(); // Function BravoHotelGame.BravoHotelCharacter.IsFoundVehicleSearch // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebd1b0
	bool IsFoundSearchInstinct(); // Function BravoHotelGame.BravoHotelCharacter.IsFoundSearchInstinct // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebd180
	bool IsFollowReplayViewMode(); // Function BravoHotelGame.BravoHotelCharacter.IsFollowReplayViewMode // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebd150
	bool IsFirstPerson(); // Function BravoHotelGame.BravoHotelCharacter.IsFirstPerson // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd120
	bool IsFiring(); // Function BravoHotelGame.BravoHotelCharacter.IsFiring // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd0f0
	bool IsEnoughtSupplyGold(); // Function BravoHotelGame.BravoHotelCharacter.IsEnoughtSupplyGold // (Final|Native|Public|BlueprintCallable) // @ game+0x1ebd0c0
	bool IsEnemyFor(struct ABravoHotelPlayerController* OtherPlayerController); // Function BravoHotelGame.BravoHotelCharacter.IsEnemyFor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebd030
	bool IsEnemyCharacter(struct ABravoHotelCharacter* OtherCharacter); // Function BravoHotelGame.BravoHotelCharacter.IsEnemyCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcfa0
	bool IsEnableSpawnSupplyBox(struct AActor* TargetActor, struct FString& OutResult); // Function BravoHotelGame.BravoHotelCharacter.IsEnableSpawnSupplyBox // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool IsDisconnected(); // Function BravoHotelGame.BravoHotelCharacter.IsDisconnected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcf70
	bool IsCustomBuoyancySwimMode(); // Function BravoHotelGame.BravoHotelCharacter.IsCustomBuoyancySwimMode // (Final|Native|Public|Const) // @ game+0x1ebcf40
	bool IsCurrentThrowingWeapon(); // Function BravoHotelGame.BravoHotelCharacter.IsCurrentThrowingWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcf10
	bool IsControllerTargetPawn(); // Function BravoHotelGame.BravoHotelCharacter.IsControllerTargetPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebcee0
	bool IsCondition(enum class ECharacterConditionType ConditionType); // Function BravoHotelGame.BravoHotelCharacter.IsCondition // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebce50
	bool IsClimbing(); // Function BravoHotelGame.BravoHotelCharacter.IsClimbing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebce20
	bool IsChargingGauge(); // Function BravoHotelGame.BravoHotelCharacter.IsChargingGauge // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebcdf0
	bool IsCharacterPositionUnderWaterSurface(); // Function BravoHotelGame.BravoHotelCharacter.IsCharacterPositionUnderWaterSurface // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcdc0
	bool IsChangingWeapon(); // Function BravoHotelGame.BravoHotelCharacter.IsChangingWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcd90
	bool IsCastingBackpackItem(); // Function BravoHotelGame.BravoHotelCharacter.IsCastingBackpackItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcd60
	bool IsBuff(enum class ECharacterBuffType BuffType); // Function BravoHotelGame.BravoHotelCharacter.IsBuff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebccd0
	bool IsBeginner(); // Function BravoHotelGame.BravoHotelCharacter.IsBeginner // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcca0
	bool IsAppearanceReplicated(); // Function BravoHotelGame.BravoHotelCharacter.IsAppearanceReplicated // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcc70
	bool IsAOS(); // Function BravoHotelGame.BravoHotelCharacter.IsAOS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebca20
	bool IsAlive(); // Function BravoHotelGame.BravoHotelCharacter.IsAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcc40
	bool IsAirWalking(); // Function BravoHotelGame.BravoHotelCharacter.IsAirWalking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcc10
	bool IsADS(); // Function BravoHotelGame.BravoHotelCharacter.IsADS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebc9f0
	bool IsActiveLeanDamageBuff(); // Function BravoHotelGame.BravoHotelCharacter.IsActiveLeanDamageBuff // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebcbe0
	bool IsActiveHeartBeatSensor(); // Function BravoHotelGame.BravoHotelCharacter.IsActiveHeartBeatSensor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcbb0
	bool IsActiveCastingUIWithType(enum class ECastingUIType& InCastingUIType); // Function BravoHotelGame.BravoHotelCharacter.IsActiveCastingUIWithType // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1ebcb10
	bool IsActiveCastingUI(); // Function BravoHotelGame.BravoHotelCharacter.IsActiveCastingUI // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebcae0
	bool IsActiveAmplifier(); // Function BravoHotelGame.BravoHotelCharacter.IsActiveAmplifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebcab0
	bool IsActionWithWeapon(); // Function BravoHotelGame.BravoHotelCharacter.IsActionWithWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1ebca80
	bool IsABot(); // Function BravoHotelGame.BravoHotelCharacter.IsABot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebc9c0
	bool IsAbleUltimate(); // Function BravoHotelGame.BravoHotelCharacter.IsAbleUltimate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebca50
	void InternalSimulatedTakeDamage(struct FRepSimulatedTakeDamageInfo& RepSimulatedInfo); // Function BravoHotelGame.BravoHotelCharacter.InternalSimulatedTakeDamage // (Final|Native|Public|HasOutParms) // @ game+0x1ebc900
	void InternalSimulatedHittedDamage(struct FRepHitDamageInfo& RepDamageInfo); // Function BravoHotelGame.BravoHotelCharacter.InternalSimulatedHittedDamage // (Final|Native|Private|HasOutParms) // @ game+0x1ebc840
	void InternalJetpackBooster(bool bNewJackpack); // Function BravoHotelGame.BravoHotelCharacter.InternalJetpackBooster // (Final|Native|Public) // @ game+0x1ebc7b0
	void InternalJetpackAim(bool bNewJetpackAim); // Function BravoHotelGame.BravoHotelCharacter.InternalJetpackAim // (Final|Native|Public) // @ game+0x1ebc720
	void InternalInAircraft(struct AActor* AircraftFlight, float AttachYaw, bool bCheckCinematic); // Function BravoHotelGame.BravoHotelCharacter.InternalInAircraft // (Final|Native|Public) // @ game+0x1ebc610
	void InitTimeline(); // Function BravoHotelGame.BravoHotelCharacter.InitTimeline // (Final|Native|Public) // @ game+0x1ebc5d0
	void InitRecordingCharacter(); // Function BravoHotelGame.BravoHotelCharacter.InitRecordingCharacter // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	void InitializeStateAtCriticalTime(); // Function BravoHotelGame.BravoHotelCharacter.InitializeStateAtCriticalTime // (Final|Native|Public) // @ game+0x1ebc5f0
	void InitCustomizableObjectInstance(); // Function BravoHotelGame.BravoHotelCharacter.InitCustomizableObjectInstance // (Native|Event|Public|BlueprintEvent) // @ game+0x1ebc5b0
	void HideSkillMap(); // Function BravoHotelGame.BravoHotelCharacter.HideSkillMap // (Final|Native|Public) // @ game+0x1ebc590
	void HideInteractive(); // Function BravoHotelGame.BravoHotelCharacter.HideInteractive // (Final|Native|Public|BlueprintCallable) // @ game+0x1ebc570
	void HideHUDbySequence(); // Function BravoHotelGame.BravoHotelCharacter.HideHUDbySequence // (Final|Native|Public|BlueprintCallable) // @ game+0x1ebc550
	void HealthTick(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.HealthTick // (Final|Native|Public) // @ game+0x1ebc4d0
	bool HasWeaponOfType(enum class EWeaponType WeaponType); // Function BravoHotelGame.BravoHotelCharacter.HasWeaponOfType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebc440
	void HandleDamageToVehicleDestructibleComponent(struct UBravoHotelDestructibleComponent* DestructibleComponent, struct FHitResult HitDetails, struct FVector ImpactVelocity); // Function BravoHotelGame.BravoHotelCharacter.HandleDamageToVehicleDestructibleComponent // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1ebc290
	void GoParachute(); // Function BravoHotelGame.BravoHotelCharacter.GoParachute // (Final|Native|Public) // @ game+0x1ebc270
	void GoIncapacitated(bool bCriticalTime, struct FDamageInstigatorInfo& DamageInstigatorInfo); // Function BravoHotelGame.BravoHotelCharacter.GoIncapacitated // (Final|Native|Public|HasOutParms) // @ game+0x1ebc150
	void GoForceParachute(); // Function BravoHotelGame.BravoHotelCharacter.GoForceParachute // (Final|Native|Public) // @ game+0x1ebc130
	void GiveEquipment(); // Function BravoHotelGame.BravoHotelCharacter.GiveEquipment // (Final|Native|Public|BlueprintCallable) // @ game+0x1ebc110
	int32_t GetZeroPointDistance(); // Function BravoHotelGame.BravoHotelCharacter.GetZeroPointDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebc0e0
	int32_t GetWearableRarity(enum class EWearableItemType WearableItemType); // Function BravoHotelGame.BravoHotelCharacter.GetWearableRarity // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebc050
	struct FString GetWearableItemName(enum class EWearableItemType SlotType); // Function BravoHotelGame.BravoHotelCharacter.GetWearableItemName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebbfa0
	struct FName GetWeaponSocketNameBySlot(int32_t SlotIndex); // Function BravoHotelGame.BravoHotelCharacter.GetWeaponSocketNameBySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebbf10
	enum class EWaterDepthType GetWaterDepthType(); // Function BravoHotelGame.BravoHotelCharacter.GetWaterDepthType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebbef0
	float GetViewPitch(); // Function BravoHotelGame.BravoHotelCharacter.GetViewPitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebbec0
	struct ABravoHotelLadder* GetUsingLadder(); // Function BravoHotelGame.BravoHotelCharacter.GetUsingLadder // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebbe90
	int32_t GetUsingBackpackItemIndex(); // Function BravoHotelGame.BravoHotelCharacter.GetUsingBackpackItemIndex // (Final|Native|Public|Const) // @ game+0x1ebbe70
	int32_t GetUniquePlayerId(); // Function BravoHotelGame.BravoHotelCharacter.GetUniquePlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebbe40
	enum class EGrenadeThrowingType GetThrowingType(); // Function BravoHotelGame.BravoHotelCharacter.GetThrowingType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebbe10
	struct UAnimMontage* GetThrowingGrenade(enum class EGrenadeThrowingType Type); // Function BravoHotelGame.BravoHotelCharacter.GetThrowingGrenade // (Final|Native|Public|Const) // @ game+0x1ebbd80
	float GetTeamPositionWidgetHeight(bool FromBottom); // Function BravoHotelGame.BravoHotelCharacter.GetTeamPositionWidgetHeight // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebbce0
	struct UUserWidget* GetTeamPositionWidget(); // Function BravoHotelGame.BravoHotelCharacter.GetTeamPositionWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebbcb0
	bool GetTargetHealthAfterHealing(float& OutTargetHealth); // Function BravoHotelGame.BravoHotelCharacter.GetTargetHealthAfterHealing // (Final|Native|Public|HasOutParms) // @ game+0x1ebbc00
	float GetTargetHealth(); // Function BravoHotelGame.BravoHotelCharacter.GetTargetHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebbbd0
	float GetSurfaceDegrees(); // Function BravoHotelGame.BravoHotelCharacter.GetSurfaceDegrees // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebbba0
	float GetStateTime(); // Function BravoHotelGame.BravoHotelCharacter.GetStateTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebbb70
	enum class ECharacterState GetState(); // Function BravoHotelGame.BravoHotelCharacter.GetState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebbb40
	struct UBravoHotelSmartPingSystem* GetSmartPingSystem(); // Function BravoHotelGame.BravoHotelCharacter.GetSmartPingSystem // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	struct APlayerState* GetSavedPlayerState(); // Function BravoHotelGame.BravoHotelCharacter.GetSavedPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebbb10
	struct TArray<struct ACharacter*> GetRevivers(); // Function BravoHotelGame.BravoHotelCharacter.GetRevivers // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebbae0
	struct TArray<struct ACharacter*> GetResuscitaters(); // Function BravoHotelGame.BravoHotelCharacter.GetResuscitaters // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebbab0
	float GetReadyToSnipeGauge(); // Function BravoHotelGame.BravoHotelCharacter.GetReadyToSnipeGauge // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebba90
	enum class ECharacterState GetPreviousState(); // Function BravoHotelGame.BravoHotelCharacter.GetPreviousState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebba60
	struct TScriptInterface<IMaterialControllableInterface> GetPostProcessMagneticHit(); // Function BravoHotelGame.BravoHotelCharacter.GetPostProcessMagneticHit // (Final|Native|Public) // @ game+0x1ebba20
	struct TScriptInterface<IMaterialControllableInterface> GetPostProcessMagneticDamage(); // Function BravoHotelGame.BravoHotelCharacter.GetPostProcessMagneticDamage // (Final|Native|Public) // @ game+0x1ebb9e0
	struct TScriptInterface<IMaterialControllableInterface> GetPostProcessHit(); // Function BravoHotelGame.BravoHotelCharacter.GetPostProcessHit // (Final|Native|Public) // @ game+0x1ebb9a0
	struct TScriptInterface<IMaterialControllableInterface> GetPostProcessDust(); // Function BravoHotelGame.BravoHotelCharacter.GetPostProcessDust // (Final|Native|Public) // @ game+0x1ebb960
	struct TScriptInterface<IMaterialControllableInterface> GetPostProcessBlood(); // Function BravoHotelGame.BravoHotelCharacter.GetPostProcessBlood // (Final|Native|Public) // @ game+0x1ebb920
	struct FString GetPlayerName(); // Function BravoHotelGame.BravoHotelCharacter.GetPlayerName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb8a0
	struct FAnimSlot GetPickupAnimSlot(); // Function BravoHotelGame.BravoHotelCharacter.GetPickupAnimSlot // (Final|Native|Public|Const) // @ game+0x1ebb870
	void GetPerkOnStart(); // Function BravoHotelGame.BravoHotelCharacter.GetPerkOnStart // (Final|Native|Public) // @ game+0x1ebb850
	struct FName GetPerkNameByBuffName(struct FName BuffName); // Function BravoHotelGame.BravoHotelCharacter.GetPerkNameByBuffName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb7c0
	int32_t GetPerkIDByBuffName(struct FName BuffName); // Function BravoHotelGame.BravoHotelCharacter.GetPerkIDByBuffName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb730
	int32_t GetPerkClassLevel(); // Function BravoHotelGame.BravoHotelCharacter.GetPerkClassLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb700
	struct ABravoHotelWeaponBase* GetPendingWeapon(); // Function BravoHotelGame.BravoHotelCharacter.GetPendingWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb6d0
	int32_t GetParkourTestIndexKey(); // Function BravoHotelGame.BravoHotelCharacter.GetParkourTestIndexKey // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1508350
	struct ABravoHotelWaterPhysicsVolume* GetOverlapWaterVolume(); // Function BravoHotelGame.BravoHotelCharacter.GetOverlapWaterVolume // (Final|Native|Public|BlueprintCallable) // @ game+0x1ebb6b0
	float GetOverHeal(); // Function BravoHotelGame.BravoHotelCharacter.GetOverHeal // (Final|Native|Public|Const) // @ game+0x1ebb680
	struct UBravoHotelVehicleSeatComponent* GetOccupyingVehicleSeat(); // Function BravoHotelGame.BravoHotelCharacter.GetOccupyingVehicleSeat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb650
	struct ABravoHotelVehicle* GetOccupyingVehicle(); // Function BravoHotelGame.BravoHotelCharacter.GetOccupyingVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb620
	int32_t GetNextUltimateUnlockLevel(int32_t UltimateLevel); // Function BravoHotelGame.BravoHotelCharacter.GetNextUltimateUnlockLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb590
	struct UCustomizableObjectInstance* GetMutableObjectInstance(); // Function BravoHotelGame.BravoHotelCharacter.GetMutableObjectInstance // (Final|Native|Public|Const) // @ game+0x1ebb560
	struct UCustomizableObjectInstance* GetMutableCloneInstance(); // Function BravoHotelGame.BravoHotelCharacter.GetMutableCloneInstance // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebb530
	float GetMeleeAttackDamage(); // Function BravoHotelGame.BravoHotelCharacter.GetMeleeAttackDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebb500
	float GetMaxLeanValue(); // Function BravoHotelGame.BravoHotelCharacter.GetMaxLeanValue // (Final|Native|Public) // @ game+0x1ebb4d0
	int32_t GetMaxHealth(); // Function BravoHotelGame.BravoHotelCharacter.GetMaxHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb4a0
	enum class ELeanState GetLeanState(); // Function BravoHotelGame.BravoHotelCharacter.GetLeanState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb470
	float GetLeanRotationAngle(); // Function BravoHotelGame.BravoHotelCharacter.GetLeanRotationAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebb440
	float GetLeanDegreeMax(); // Function BravoHotelGame.BravoHotelCharacter.GetLeanDegreeMax // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb410
	float GetLandingTimeRate(float LandingDuration); // Function BravoHotelGame.BravoHotelCharacter.GetLandingTimeRate // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebb380
	float GetLandingPositionDuration(); // Function BravoHotelGame.BravoHotelCharacter.GetLandingPositionDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb360
	struct FVector GetLandingPosition(); // Function BravoHotelGame.BravoHotelCharacter.GetLandingPosition // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1ebb330
	struct ULadderComponent* GetLadderComponent(); // Function BravoHotelGame.BravoHotelCharacter.GetLadderComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb310
	float GetJetpackFuel(); // Function BravoHotelGame.BravoHotelCharacter.GetJetpackFuel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb2e0
	float GetIsFiredRemaining(); // Function BravoHotelGame.BravoHotelCharacter.GetIsFiredRemaining // (Final|Native|Public|Const) // @ game+0x1ebb2b0
	struct ABravoHotelInventoryCharacter* GetInventoryCharacter(); // Function BravoHotelGame.BravoHotelCharacter.GetInventoryCharacter // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1ebb280
	int32_t GetIconIndex(); // Function BravoHotelGame.BravoHotelCharacter.GetIconIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1ebb250
	float GetHeartBeatSensorLength(); // Function BravoHotelGame.BravoHotelCharacter.GetHeartBeatSensorLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb220
	float GetGoldenTimePercent(); // Function BravoHotelGame.BravoHotelCharacter.GetGoldenTimePercent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb1f0
	struct FString GetGameServerUIDString(); // Function BravoHotelGame.BravoHotelCharacter.GetGameServerUIDString // (Final|Native|Public|BlueprintCallable) // @ game+0x1ebb170
	struct FVector GetFloorLocation(); // Function BravoHotelGame.BravoHotelCharacter.GetFloorLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb130
	struct FRotator GetFixedBaseAimRotation(); // Function BravoHotelGame.BravoHotelCharacter.GetFixedBaseAimRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb100
	enum class EFireType GetFireType(); // Function BravoHotelGame.BravoHotelCharacter.GetFireType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb0d0
	float GetFindLandingPositionRadius(); // Function BravoHotelGame.BravoHotelCharacter.GetFindLandingPositionRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb0a0
	struct FVector GetEyeLocation(); // Function BravoHotelGame.BravoHotelCharacter.GetEyeLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb060
	struct FVector GetEyeForwardVector(); // Function BravoHotelGame.BravoHotelCharacter.GetEyeForwardVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebb020
	struct ABravoHotelWeaponBase* GetEquippedThrowingWeapon(); // Function BravoHotelGame.BravoHotelCharacter.GetEquippedThrowingWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebaff0
	struct ABravoHotelWeaponBase* GetEquippedMeleeWeapon(); // Function BravoHotelGame.BravoHotelCharacter.GetEquippedMeleeWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebafc0
	int32_t GetDefeatLevel(); // Function BravoHotelGame.BravoHotelCharacter.GetDefeatLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebaf90
	struct FBravoHotelDefaultBalanceData GetDefaultBalanceData(); // Function BravoHotelGame.BravoHotelCharacter.GetDefaultBalanceData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebaeb0
	bool GetDeathAnimMontage(struct UBravoHotelDamageType* DamageTypeClass, bool bLocalHeadShot, struct FAnimSlot& OutAnimSlot, bool& bOutIsForce); // Function BravoHotelGame.BravoHotelCharacter.GetDeathAnimMontage // (Final|Native|Private|HasOutParms) // @ game+0x1ebad20
	struct ABravoHotelWeaponBase* GetCurrentWeapon(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebacf0
	int32_t GetCurrentUltimateLevel(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentUltimateLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebacc0
	enum class EThrowingWeaponState GetCurrentThrowingWeaponState(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentThrowingWeaponState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebac90
	int32_t GetCurrentSelfResuscitationPrice(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentSelfResuscitationPrice // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebac60
	int32_t GetCurrentResuscitationPrice(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentResuscitationPrice // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebac30
	struct ABravoHotelRangedWeapon* GetCurrentRangedWeapon(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentRangedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebac00
	struct FPerkDeckSelectInfo GetCurrentPerkDeckSelectInfo(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentPerkDeckSelectInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebaae0
	struct FName GetCurrentPerkDeck(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentPerkDeck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebaaa0
	struct UParkourComponent* GetCurrentParkourComponent(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentParkourComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ebaa70
	float GetCurrentMovementModeTime(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentMovementModeTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1ebaa40
	struct UAkRoomComponent* GetCurrentAkRoomComponent(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentAkRoomComponent // (Final|Native|Public) // @ game+0x1ebaa10
	struct ABravoHotelWeaponBase* GetCurrentAbilityWeapon(); // Function BravoHotelGame.BravoHotelCharacter.GetCurrentAbilityWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eba9e0
	struct ABravoHotelWeaponBase* GetCompareWeaponObjectRef(struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.BravoHotelCharacter.GetCompareWeaponObjectRef // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1eba8e0
	struct TArray<struct ABravoHotelCharacter*> GetCharactersInBreachingArea(struct FVector& BreachingForward, struct FVector& BreachingRight, struct FVector& BreachingUp, struct FVector& BreachingLoc); // Function BravoHotelGame.BravoHotelCharacter.GetCharactersInBreachingArea // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1eba6f0
	float GetCastingRemainTime(); // Function BravoHotelGame.BravoHotelCharacter.GetCastingRemainTime // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eba6d0
	float GetCastingPercent(); // Function BravoHotelGame.BravoHotelCharacter.GetCastingPercent // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eba6b0
	struct FInventoryItemInfo GetCastingItemInfo(); // Function BravoHotelGame.BravoHotelCharacter.GetCastingItemInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eba620
	struct FCastingInfo GetCastingInfo(); // Function BravoHotelGame.BravoHotelCharacter.GetCastingInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eba5e0
	struct UCameraComponent* GetCamera3P(); // Function BravoHotelGame.BravoHotelCharacter.GetCamera3P // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eba5b0
	struct ABravoHotelPlayerState* GetBravoHotelPlayerState(); // Function BravoHotelGame.BravoHotelCharacter.GetBravoHotelPlayerState // (Final|Native|Public|BlueprintCallable) // @ game+0x1eba580
	struct FString GetAudioConditionState(struct FConditionGroup& Group); // Function BravoHotelGame.BravoHotelCharacter.GetAudioConditionState // (BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1eba470
	void GetAttachedUsableItems(struct USkeletalMeshComponent* TargetParent, struct TArray<struct ABravoHotelAttachedUsableItem*>& OutItems); // Function BravoHotelGame.BravoHotelCharacter.GetAttachedUsableItems // (Final|Native|Protected|HasOutParms) // @ game+0x1eba380
	void GetArmsOffset(struct FVector& OutOffset); // Function BravoHotelGame.BravoHotelCharacter.GetArmsOffset // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eba2f0
	struct FString GetAppearanceMutableKey(int32_t AppearanceID, int32_t ColorID); // Function BravoHotelGame.BravoHotelCharacter.GetAppearanceMutableKey // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eba210
	struct UAnimMontage* GetAnimSlotMontage(struct FAnimSlot AnimSlot); // Function BravoHotelGame.BravoHotelCharacter.GetAnimSlotMontage // (Final|Native|Public|Const) // @ game+0x1eba170
	struct FAnimSlot GetAnimSlotByProneState(struct FAnimSlot& AnimSlot_Stand, struct FAnimSlot& AnimSlot_Prone); // Function BravoHotelGame.BravoHotelCharacter.GetAnimSlotByProneState // (Final|Native|Public|HasOutParms|Const) // @ game+0x1eba060
	float GetAmplifierLength(); // Function BravoHotelGame.BravoHotelCharacter.GetAmplifierLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eba030
	struct TArray<enum class EWeaponType> GetAllowedWeaponType(); // Function BravoHotelGame.BravoHotelCharacter.GetAllowedWeaponType // (Final|Native|Public|Const) // @ game+0x1eb9fb0
	struct UAkComponent* GetAkComponent(); // Function BravoHotelGame.BravoHotelCharacter.GetAkComponent // (Final|Native|Public|Const) // @ game+0x1eb9f90
	struct FVector GetAirWalkGravity(); // Function BravoHotelGame.BravoHotelCharacter.GetAirWalkGravity // (Final|Native|Public|HasDefaults) // @ game+0x1eb9f50
	struct FRotator GetAimOffsets(); // Function BravoHotelGame.BravoHotelCharacter.GetAimOffsets // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb9f10
	struct FName GetActiveSkillKeyName(int32_t ActiveSkillSlot); // Function BravoHotelGame.BravoHotelCharacter.GetActiveSkillKeyName // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb9e80
	struct USkeletalMeshComponent* GetActiveMesh(); // Function BravoHotelGame.BravoHotelCharacter.GetActiveMesh // (Final|Native|Public|Const) // @ game+0x1eb9e50
	float GetActiveCameraTargetArmLength(); // Function BravoHotelGame.BravoHotelCharacter.GetActiveCameraTargetArmLength // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eb9e20
	float GetActiveCameraSocketDistance(); // Function BravoHotelGame.BravoHotelCharacter.GetActiveCameraSocketDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eb9df0
	struct UCameraComponent* GetActiveCamera(); // Function BravoHotelGame.BravoHotelCharacter.GetActiveCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb9dc0
	float GetAbilityModifier(enum class ECharacterAbilityType AbilityType); // Function BravoHotelGame.BravoHotelCharacter.GetAbilityModifier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb9d30
	void FPSK_UpdateWeaponTransform(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.FPSK_UpdateWeaponTransform // (Final|Native|Public) // @ game+0x1eb99a0
	void FPSK_UpdateSwayMove(struct FVector Value); // Function BravoHotelGame.BravoHotelCharacter.FPSK_UpdateSwayMove // (Final|Native|Public|HasDefaults) // @ game+0x1eb9910
	void FPSK_UpdateSwayIdle(struct FVector Value); // Function BravoHotelGame.BravoHotelCharacter.FPSK_UpdateSwayIdle // (Final|Native|Public|HasDefaults) // @ game+0x1eb9880
	void FPSK_UpdateMaterialParams(); // Function BravoHotelGame.BravoHotelCharacter.FPSK_UpdateMaterialParams // (Final|Native|Public) // @ game+0x1eb9860
	void FPSK_UpdateADSReady(); // Function BravoHotelGame.BravoHotelCharacter.FPSK_UpdateADSReady // (Final|Native|Public) // @ game+0x1eb9840
	void FPSK_UpdateADSFOV(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.FPSK_UpdateADSFOV // (Final|Native|Public) // @ game+0x1eb97c0
	void FPSK_SetWeaponShadowVisible(bool bVisible); // Function BravoHotelGame.BravoHotelCharacter.FPSK_SetWeaponShadowVisible // (Final|Native|Public) // @ game+0x1eb9730
	void FPSK_SetADSReady(bool bReady, bool bImmediately); // Function BravoHotelGame.BravoHotelCharacter.FPSK_SetADSReady // (Final|Native|Public) // @ game+0x1eb9540
	void FPSK_SetADSFOV(float TargetFOV, bool bImmediately); // Function BravoHotelGame.BravoHotelCharacter.FPSK_SetADSFOV // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb9470
	void FPSK_SetActiveMutableClipping(bool bNewActive); // Function BravoHotelGame.BravoHotelCharacter.FPSK_SetActiveMutableClipping // (Final|Native|Public) // @ game+0x1eb96a0
	void FPSK_SetActive(bool bNewActive); // Function BravoHotelGame.BravoHotelCharacter.FPSK_SetActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb9610
	void FPSK_ServerSetTargetFovMagnifier(float CurrentMagnifier, float NewMagnifier); // Function BravoHotelGame.BravoHotelCharacter.FPSK_ServerSetTargetFovMagnifier // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1eb9370
	void FPSK_KeepBoltActionCallbackFunc(); // Function BravoHotelGame.BravoHotelCharacter.FPSK_KeepBoltActionCallbackFunc // (Final|Native|Public) // @ game+0x1eb9350
	struct UCameraComponent* FPSK_GetCamera(); // Function BravoHotelGame.BravoHotelCharacter.FPSK_GetCamera // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb9320
	void FPSK_DoSetTargetFovMagnifier(float NewMagnifier); // Function BravoHotelGame.BravoHotelCharacter.FPSK_DoSetTargetFovMagnifier // (Final|Native|Public) // @ game+0x1eb92a0
	void FPSK_CreateWeaponshadowComponents(); // Function BravoHotelGame.BravoHotelCharacter.FPSK_CreateWeaponshadowComponents // (Final|Native|Public) // @ game+0x1eb9280
	void FPSK_ClientSetTargetFovMagnifier(float NewMagnifier); // Function BravoHotelGame.BravoHotelCharacter.FPSK_ClientSetTargetFovMagnifier // (Net|Native|Event|Public|NetClient) // @ game+0x1eb9200
	bool FPSK_CheckIsCollide(struct FTransform& DefaultRelativeWeaponTransform); // Function BravoHotelGame.BravoHotelCharacter.FPSK_CheckIsCollide // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1eb9120
	bool FPSK_CanWearItem(enum class EWearableItemType& Slot, struct FString UniqueKey); // Function BravoHotelGame.BravoHotelCharacter.FPSK_CanWearItem // (Final|Native|Public|HasOutParms) // @ game+0x1eb9020
	bool FPSK_CanSway(); // Function BravoHotelGame.BravoHotelCharacter.FPSK_CanSway // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eb8ff0
	void FPSK_ActiveADSEffects(bool bActive); // Function BravoHotelGame.BravoHotelCharacter.FPSK_ActiveADSEffects // (Final|Native|Public) // @ game+0x1eb8f60
	void ForceUnProne(); // Function BravoHotelGame.BravoHotelCharacter.ForceUnProne // (Final|Native|Public) // @ game+0x1eb9d10
	void ForceUnCrouch(); // Function BravoHotelGame.BravoHotelCharacter.ForceUnCrouch // (Final|Native|Public) // @ game+0x1eb9cf0
	void ForceProne(); // Function BravoHotelGame.BravoHotelCharacter.ForceProne // (Final|Native|Public) // @ game+0x1eb9cd0
	void ForceClearCastingUI(); // Function BravoHotelGame.BravoHotelCharacter.ForceClearCastingUI // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb9cb0
	void ForceAllUpdateCameraPP(); // Function BravoHotelGame.BravoHotelCharacter.ForceAllUpdateCameraPP // (Final|Native|Public) // @ game+0x1eb9c90
	struct USkyLightComponent* FindSkyLight(); // Function BravoHotelGame.BravoHotelCharacter.FindSkyLight // (Final|Native|Public) // @ game+0x1eb9c60
	struct FVector FindLocationPersonalSupplyBox(int32_t MinDistance, int32_t MaxDistance, float Degree); // Function BravoHotelGame.BravoHotelCharacter.FindLocationPersonalSupplyBox // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1eb9b40
	struct FVector FindLocation(int32_t MinDistance, int32_t MaxDistance, float Degree); // Function BravoHotelGame.BravoHotelCharacter.FindLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1eb9a20
	struct FText ExpertWeaponName(int32_t Index); // Function BravoHotelGame.BravoHotelCharacter.ExpertWeaponName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eb8e70
	struct FName ExpertWeaponKey(int32_t Index); // Function BravoHotelGame.BravoHotelCharacter.ExpertWeaponKey // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eb8de0
	void ExitWetFog(struct ABravoHotelAreaSkillZone* AreaSkillZone); // Function BravoHotelGame.BravoHotelCharacter.ExitWetFog // (Final|Native|Public) // @ game+0x1eb8d60
	void ExitPowerInterruption(struct ABravoHotelAreaSkillZone* AreaSkillZone); // Function BravoHotelGame.BravoHotelCharacter.ExitPowerInterruption // (Final|Native|Public) // @ game+0x1eb8ce0
	void ExitForceField(struct ABravoHotelAreaSkillZone* AreaSkillZone); // Function BravoHotelGame.BravoHotelCharacter.ExitForceField // (Final|Native|Public) // @ game+0x1eb8c60
	void EnterWetFog(struct ABravoHotelAreaSkillZone* AreaSkillZone); // Function BravoHotelGame.BravoHotelCharacter.EnterWetFog // (Final|Native|Public) // @ game+0x1eb8be0
	void EnterPowerInterruption(struct ABravoHotelAreaSkillZone* AreaSkillZone); // Function BravoHotelGame.BravoHotelCharacter.EnterPowerInterruption // (Final|Native|Public) // @ game+0x1eb8b60
	void EnterForceField(struct ABravoHotelAreaSkillZone* AreaSkillZone); // Function BravoHotelGame.BravoHotelCharacter.EnterForceField // (Final|Native|Public) // @ game+0x1eb8ae0
	void EnterCameraInterp(); // Function BravoHotelGame.BravoHotelCharacter.EnterCameraInterp // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb8ac0
	void EndSpawnSimulationBox(struct FSpawnPerkData& Data, struct FString Msg); // Function BravoHotelGame.BravoHotelCharacter.EndSpawnSimulationBox // (Final|Native|Public|HasOutParms) // @ game+0x1eb8960
	void EndRevived(struct AActor* ActActor); // Function BravoHotelGame.BravoHotelCharacter.EndRevived // (Final|Native|Public) // @ game+0x1eb88e0
	void EndResuscitated(struct AActor* InActActor, int32_t InRevivedCurrentGold, int32_t InSaviorCurrentGold, bool bGoldRequest, int32_t InRevivedUseGold, int32_t InSaviorUseGold); // Function BravoHotelGame.BravoHotelCharacter.EndResuscitated // (Final|Native|Public) // @ game+0x1eb8720
	void EndReplaceFreeLook(); // Function BravoHotelGame.BravoHotelCharacter.EndReplaceFreeLook // (Final|Native|Public) // @ game+0x1eb8700
	void EndKickDoor(); // Function BravoHotelGame.BravoHotelCharacter.EndKickDoor // (Final|Native|Public) // @ game+0x1eb86e0
	void EndItemSpawnSimulationBox(struct FSpawnPerkData& Data); // Function BravoHotelGame.BravoHotelCharacter.EndItemSpawnSimulationBox // (Final|Native|Public|HasOutParms) // @ game+0x1eb85e0
	void EndAppearingVehicle(struct ABravoHotelVehicle* TargetVehicle, struct FTransform TargetTransform); // Function BravoHotelGame.BravoHotelCharacter.EndAppearingVehicle // (Final|Native|Public|HasDefaults) // @ game+0x1eb84a0
	void DrawFoliageLayDown(struct UTextureRenderTarget2D* TextureRenderTarget, struct UMaterialInterface* RenderMaterial, float fTextureScale, float fLieDistance, float fCollisionAreaRadius, float fDrawDistance); // Function BravoHotelGame.BravoHotelCharacter.DrawFoliageLayDown // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb82e0
	void DoWindowBreaching(); // Function BravoHotelGame.BravoHotelCharacter.DoWindowBreaching // (Final|Native|Public) // @ game+0x1eb82c0
	void DoWeaponMeleeAttack(); // Function BravoHotelGame.BravoHotelCharacter.DoWeaponMeleeAttack // (Final|Native|Public) // @ game+0x1eb82a0
	void DoWalking(bool bNewWalking); // Function BravoHotelGame.BravoHotelCharacter.DoWalking // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb8210
	void DoTryUseBackpackItem(int32_t& BackpackItemIndex); // Function BravoHotelGame.BravoHotelCharacter.DoTryUseBackpackItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eb8180
	void DoTryExitVehicle(bool bForceExit); // Function BravoHotelGame.BravoHotelCharacter.DoTryExitVehicle // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb80f0
	void DoTryEnterVehicle(struct UBravoHotelVehicleSeatComponent* TargetVehicleSeat, bool bRetryToVacantSeat); // Function BravoHotelGame.BravoHotelCharacter.DoTryEnterVehicle // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb8020
	void DoToggleCamera(); // Function BravoHotelGame.BravoHotelCharacter.DoToggleCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb8000
	void DoThrowWeaponReady(); // Function BravoHotelGame.BravoHotelCharacter.DoThrowWeaponReady // (Final|Native|Public) // @ game+0x1eb7fe0
	void DoThrowWeaponFire(); // Function BravoHotelGame.BravoHotelCharacter.DoThrowWeaponFire // (Final|Native|Public) // @ game+0x1eb7fc0
	void DoTeleport(); // Function BravoHotelGame.BravoHotelCharacter.DoTeleport // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7fa0
	void DoStopSliding(); // Function BravoHotelGame.BravoHotelCharacter.DoStopSliding // (Final|Native|Public) // @ game+0x1eb7f80
	void DoStopRevive(); // Function BravoHotelGame.BravoHotelCharacter.DoStopRevive // (Final|Native|Public) // @ game+0x1eb7f60
	void DoStopResuscitation(); // Function BravoHotelGame.BravoHotelCharacter.DoStopResuscitation // (Final|Native|Public) // @ game+0x1eb7f40
	void DoStopMontage(struct UAnimMontage* AnimMontage, float BlendTime); // Function BravoHotelGame.BravoHotelCharacter.DoStopMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7e70
	void DoStopInteraction(); // Function BravoHotelGame.BravoHotelCharacter.DoStopInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7e50
	void DoStopCastingAction(); // Function BravoHotelGame.BravoHotelCharacter.DoStopCastingAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7e30
	void DoStopAllActions(bool bStopAllMontages); // Function BravoHotelGame.BravoHotelCharacter.DoStopAllActions // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7da0
	void DoStartUltimate_Recon(float InitialImpulseStrength); // Function BravoHotelGame.BravoHotelCharacter.DoStartUltimate_Recon // (Final|Native|Public) // @ game+0x1eb7d20
	void DoStartStuntman(); // Function BravoHotelGame.BravoHotelCharacter.DoStartStuntman // (Final|Native|Protected) // @ game+0x1eb7d00
	void DoStartSliding(); // Function BravoHotelGame.BravoHotelCharacter.DoStartSliding // (Final|Native|Public) // @ game+0x1eb7ce0
	void DoStartRolling(float InitialImpulseStrength); // Function BravoHotelGame.BravoHotelCharacter.DoStartRolling // (Final|Native|Public) // @ game+0x1eb7c60
	void DoStartRevive(); // Function BravoHotelGame.BravoHotelCharacter.DoStartRevive // (Final|Native|Public) // @ game+0x1eb7c40
	void DoStartResuscitation(); // Function BravoHotelGame.BravoHotelCharacter.DoStartResuscitation // (Final|Native|Public) // @ game+0x1eb7c20
	void DoStartKickDoor(bool bFromReplication); // Function BravoHotelGame.BravoHotelCharacter.DoStartKickDoor // (Final|Native|Public) // @ game+0x1eb7b90
	void DoStartInteraction(); // Function BravoHotelGame.BravoHotelCharacter.DoStartInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7b70
	void DoSprinting(bool bNewSprinting); // Function BravoHotelGame.BravoHotelCharacter.DoSprinting // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7ae0
	void DoSpawnBlackOut(); // Function BravoHotelGame.BravoHotelCharacter.DoSpawnBlackOut // (Final|Native|Public) // @ game+0x1eb7ac0
	void DoSetIsParachuteLanding(float DeltaTime, bool Flag, float Height); // Function BravoHotelGame.BravoHotelCharacter.DoSetIsParachuteLanding // (Final|Native|Protected) // @ game+0x1eb79b0
	void DoSetActorRotation(struct FRotator& NewRotation); // Function BravoHotelGame.BravoHotelCharacter.DoSetActorRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1eb7920
	void DoReselectPerkDeck(); // Function BravoHotelGame.BravoHotelCharacter.DoReselectPerkDeck // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7900
	void DoReloadImmediately(); // Function BravoHotelGame.BravoHotelCharacter.DoReloadImmediately // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb78e0
	void DoReload(); // Function BravoHotelGame.BravoHotelCharacter.DoReload // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb78c0
	void DoPunchAttack(); // Function BravoHotelGame.BravoHotelCharacter.DoPunchAttack // (Final|Native|Public) // @ game+0x1eb78a0
	void DoProne(bool bNewProne); // Function BravoHotelGame.BravoHotelCharacter.DoProne // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7810
	void DoPlayAnimSlot(struct FAnimSlot& AnimSlot); // Function BravoHotelGame.BravoHotelCharacter.DoPlayAnimSlot // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eb7770
	void DoPickUpWeapon(int32_t& WeaponSlotIndex, struct ABravoHotelPickup* PickableItem); // Function BravoHotelGame.BravoHotelCharacter.DoPickUpWeapon // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eb76a0
	void DoPickUpQuantity(struct ABravoHotelPickup* PickableItem, int32_t GainQuantity); // Function BravoHotelGame.BravoHotelCharacter.DoPickUpQuantity // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb75e0
	void DoPickUpInBox(struct ABravoHotelDropBoxActor* DropBoxActor, struct FInventoryItemInfo& GainItemInfo, int32_t GainQuantity, int32_t WeaponSlotIndex); // Function BravoHotelGame.BravoHotelCharacter.DoPickUpInBox // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eb7420
	void DoPickUp(struct ABravoHotelPickup* PickableItem); // Function BravoHotelGame.BravoHotelCharacter.DoPickUp // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb73a0
	void DoNuclear(); // Function BravoHotelGame.BravoHotelCharacter.DoNuclear // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7380
	void DoMoveUp(float AxisValue); // Function BravoHotelGame.BravoHotelCharacter.DoMoveUp // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7300
	void DoMoveRight(float AxisValue); // Function BravoHotelGame.BravoHotelCharacter.DoMoveRight // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb7280
	void DoMoveItem(struct AActor* SourceActor, enum class ItemWidgetDragType SourceSlotType, struct FInventoryItemInfo& SourceItemInfo, struct AActor* TargetActor, enum class ItemWidgetDragType TargetSlotType, int32_t TargetIndex, int32_t GainQuantity); // Function BravoHotelGame.BravoHotelCharacter.DoMoveItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eb7020
	void DoMoveForward(float AxisValue); // Function BravoHotelGame.BravoHotelCharacter.DoMoveForward // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6fa0
	void DoJumpEx(bool bNewJumping); // Function BravoHotelGame.BravoHotelCharacter.DoJumpEx // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6f10
	void DoJetpackBooster(bool bNewJackpack); // Function BravoHotelGame.BravoHotelCharacter.DoJetpackBooster // (Final|Native|Public) // @ game+0x1eb6e80
	void DoJetpackAim(bool bNewJetpackAim); // Function BravoHotelGame.BravoHotelCharacter.DoJetpackAim // (Final|Native|Public) // @ game+0x1eb6df0
	void DoInAircraft(struct AActor* AircraftFlight, float AttachYaw); // Function BravoHotelGame.BravoHotelCharacter.DoInAircraft // (Final|Native|Public) // @ game+0x1eb6d20
	void DoFiring(bool bIsNewFire); // Function BravoHotelGame.BravoHotelCharacter.DoFiring // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6c90
	void DoFireMode(); // Function BravoHotelGame.BravoHotelCharacter.DoFireMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6c70
	void DoEquipPerkByID(enum class EPerkSlotFlag Slot, int32_t ID, int32_t Level); // Function BravoHotelGame.BravoHotelCharacter.DoEquipPerkByID // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6b70
	void DoEquipPerk(enum class EPerkSlotFlag Slot, struct FName PerkName, int32_t Level); // Function BravoHotelGame.BravoHotelCharacter.DoEquipPerk // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6a70
	void DoEndSteadyAim(); // Function BravoHotelGame.BravoHotelCharacter.DoEndSteadyAim // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6a50
	void DoEndRevive(); // Function BravoHotelGame.BravoHotelCharacter.DoEndRevive // (Final|Native|Public) // @ game+0x1eb6a30
	void DoEndResuscitation(); // Function BravoHotelGame.BravoHotelCharacter.DoEndResuscitation // (Final|Native|Public) // @ game+0x1eb6a10
	void DoDoorBreaching(); // Function BravoHotelGame.BravoHotelCharacter.DoDoorBreaching // (Final|Native|Public) // @ game+0x1eb69f0
	void DoDisArm(); // Function BravoHotelGame.BravoHotelCharacter.DoDisArm // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb69d0
	void DoCrouch(bool bNewCrouch); // Function BravoHotelGame.BravoHotelCharacter.DoCrouch // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6940
	void DoCookThrowingWeapon(); // Function BravoHotelGame.BravoHotelCharacter.DoCookThrowingWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6920
	void DoChoosePerkDeck(int32_t ChooseIndex); // Function BravoHotelGame.BravoHotelCharacter.DoChoosePerkDeck // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb68a0
	void DoChangeWeaponZeroPoint(bool bNext); // Function BravoHotelGame.BravoHotelCharacter.DoChangeWeaponZeroPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6810
	void DoChangeWeapon(int32_t NewWeaponSlotIndex, bool bPlayUnequipAnimation); // Function BravoHotelGame.BravoHotelCharacter.DoChangeWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6750
	void DoChangeGender(); // Function BravoHotelGame.BravoHotelCharacter.DoChangeGender // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6730
	void DoCancelActiveSkill(); // Function BravoHotelGame.BravoHotelCharacter.DoCancelActiveSkill // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6710
	void DoBeginCombine(struct FName& RecipeKey); // Function BravoHotelGame.BravoHotelCharacter.DoBeginCombine // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1eb6680
	void DoAnalogStickX(float AxisValue); // Function BravoHotelGame.BravoHotelCharacter.DoAnalogStickX // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6600
	void DoAirWalk(bool bNewAirWalk); // Function BravoHotelGame.BravoHotelCharacter.DoAirWalk // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6570
	void DestroyProjectileGrenadeActor(struct ABravoHotelProjectileGrenade* Grenade); // Function BravoHotelGame.BravoHotelCharacter.DestroyProjectileGrenadeActor // (Final|Native|Public) // @ game+0x1eb64f0
	void DeactiveHeartBeatSensor(); // Function BravoHotelGame.BravoHotelCharacter.DeactiveHeartBeatSensor // (Final|Native|Public) // @ game+0x1eb64d0
	void DeactiveAmplifier(); // Function BravoHotelGame.BravoHotelCharacter.DeactiveAmplifier // (Final|Native|Public) // @ game+0x1eb64b0
	void DeactivateADSPostProcess(); // Function BravoHotelGame.BravoHotelCharacter.DeactivateADSPostProcess // (Final|Native|Public) // @ game+0x1eb6490
	void CreateRandomWeapon(); // Function BravoHotelGame.BravoHotelCharacter.CreateRandomWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb6470
	bool CollisionCheckBeforeProne(); // Function BravoHotelGame.BravoHotelCharacter.CollisionCheckBeforeProne // (Final|Native|Public) // @ game+0x1eb6440
	void ClinentRemoveNoPlayVoice(struct FName Idx); // Function BravoHotelGame.BravoHotelCharacter.ClinentRemoveNoPlayVoice // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb63b0
	void ClinentAddNoPlayVoice(struct FName Idx); // Function BravoHotelGame.BravoHotelCharacter.ClinentAddNoPlayVoice // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb6320
	void ClientUpdateKillcamInfo(struct ABravoHotelCharacter* OtherCharacter, bool bUpdateTime); // Function BravoHotelGame.BravoHotelCharacter.ClientUpdateKillcamInfo // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1eb6220
	void ClientStopUseLadderByReconnect(); // Function BravoHotelGame.BravoHotelCharacter.ClientStopUseLadderByReconnect // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb60a0
	void ClientStopedRevive(struct AActor* RevivedActor); // Function BravoHotelGame.BravoHotelCharacter.ClientStopedRevive // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb6190
	void ClientStopedResuscitation(struct AActor* ResuscitatedActor, bool bSuccess); // Function BravoHotelGame.BravoHotelCharacter.ClientStopedResuscitation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb60c0
	void ClientSpawnPerkNotiMessage(struct FCommonMessageInfo Message); // Function BravoHotelGame.BravoHotelCharacter.ClientSpawnPerkNotiMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb6000
	void ClientSimulatedHittedDamage(struct FRepSimulatedHittedDamage RepSimulatedInfo); // Function BravoHotelGame.BravoHotelCharacter.ClientSimulatedHittedDamage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5f60
	void ClientShowInventoryNotEnoughSpaceMessage(); // Function BravoHotelGame.BravoHotelCharacter.ClientShowInventoryNotEnoughSpaceMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5f40
	void ClientShowInvenMaterialSlotNotEnoughSpaceMessage(); // Function BravoHotelGame.BravoHotelCharacter.ClientShowInvenMaterialSlotNotEnoughSpaceMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5f20
	void ClientShowActionMessage(int32_t TableIndex, struct FText Message); // Function BravoHotelGame.BravoHotelCharacter.ClientShowActionMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5e10
	void ClientSetLeanState(enum class ELeanState NewLeanState); // Function BravoHotelGame.BravoHotelCharacter.ClientSetLeanState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5d90
	void ClientSetCastingUI(enum class ECastingUIType CastingUIType, struct FName SourceName, float MaxTime, struct ABravoHotelCharacter* Target); // Function BravoHotelGame.BravoHotelCharacter.ClientSetCastingUI // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5c50
	void ClientRewindMontage(struct UAnimMontage* AnimMontage); // Function BravoHotelGame.BravoHotelCharacter.ClientRewindMontage // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb5bd0
	void ClientReselectPerkDeckLog(struct FName PrePerkDeck, struct FName NextPerkDeck); // Function BravoHotelGame.BravoHotelCharacter.ClientReselectPerkDeckLog // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5b00
	void ClientRequestBuildingItemSpawnStateString(struct FString BuildingItemSpawnLog); // Function BravoHotelGame.BravoHotelCharacter.ClientRequestBuildingItemSpawnStateString // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5a50
	void ClientRequestBuildingItemSpawnList(struct TArray<struct FString> List, bool bStart, bool bEnd, int32_t TotalCnt); // Function BravoHotelGame.BravoHotelCharacter.ClientRequestBuildingItemSpawnList // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb58b0
	void ClientRequestBuildingCount(struct FLogBuildCountData DivisionBuildingCount, struct FLogBuildCountData CurrentBuildingCount); // Function BravoHotelGame.BravoHotelCharacter.ClientRequestBuildingCount // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb57e0
	void ClientReconnectProcess(struct FRepClientCharacterReconnectInfo ReconnectInfo); // Function BravoHotelGame.BravoHotelCharacter.ClientReconnectProcess // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5760
	void ClientQuickLanding(); // Function BravoHotelGame.BravoHotelCharacter.ClientQuickLanding // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5740
	void ClientPrepareLanding(enum class ELandingReason InLandingReason); // Function BravoHotelGame.BravoHotelCharacter.ClientPrepareLanding // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb56c0
	void ClientPlayVoice(struct FName Idx); // Function BravoHotelGame.BravoHotelCharacter.ClientPlayVoice // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5630
	void ClientPlaySequence(struct ALevelSequenceActor* Sequnce, bool bReverse); // Function BravoHotelGame.BravoHotelCharacter.ClientPlaySequence // (Net|Native|Event|Public|NetClient|BlueprintCallable) // @ game+0x1eb5560
	void ClientPickupDefaultTime(float IntervalTime); // Function BravoHotelGame.BravoHotelCharacter.ClientPickupDefaultTime // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb54e0
	void ClientPhasePerkLevelUpReady(); // Function BravoHotelGame.BravoHotelCharacter.ClientPhasePerkLevelUpReady // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb54c0
	void ClientPerkSpinEvent(bool bShow, int32_t Count, enum class EPerkSlotFlag Slot); // Function BravoHotelGame.BravoHotelCharacter.ClientPerkSpinEvent // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb53b0
	void ClientNotifyDamageToDamageCauser(struct ABravoHotelCharacter* HittedCharacter, float DamageAmount, struct FDamageEvent DamageEvent, struct AController* EventInstigator, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelCharacter.ClientNotifyDamageToDamageCauser // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5210
	void ClientKillPerkLevelUpReady(int32_t KillCount); // Function BravoHotelGame.BravoHotelCharacter.ClientKillPerkLevelUpReady // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb5180
	void ClientJetpackBooster(bool bNewJackpack); // Function BravoHotelGame.BravoHotelCharacter.ClientJetpackBooster // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1eb50c0
	void ClientInAircraft(struct AActor* AircraftFlight, float AttachYaw); // Function BravoHotelGame.BravoHotelCharacter.ClientInAircraft // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4ff0
	void ClientHitRateData(struct FHitRateWeaponLogData InHitRateWeaponLogData); // Function BravoHotelGame.BravoHotelCharacter.ClientHitRateData // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4f60
	void ClientFindPersonalSupplyBoxLocation(struct FSpawnBaseInfo SpawnInfo); // Function BravoHotelGame.BravoHotelCharacter.ClientFindPersonalSupplyBoxLocation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4eb0
	void ClientFailedToEnterVehicle(); // Function BravoHotelGame.BravoHotelCharacter.ClientFailedToEnterVehicle // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4e90
	void ClientExitLadder(); // Function BravoHotelGame.BravoHotelCharacter.ClientExitLadder // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4e70
	void ClientEndRevive(struct AActor* InRevivedActor, int32_t InRevivedTime); // Function BravoHotelGame.BravoHotelCharacter.ClientEndRevive // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4da0
	void ClientEndResuscitated(struct APlayerState* InRevivedPlayerState, struct APlayerState* InSaviorPlayerState, struct FGoldenTimeLogData InLogData); // Function BravoHotelGame.BravoHotelCharacter.ClientEndResuscitated // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4c90
	void ClientDoAbortCastingBackpackItemInVehicle(); // Function BravoHotelGame.BravoHotelCharacter.ClientDoAbortCastingBackpackItemInVehicle // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4c70
	void ClientDebugBoxTrace(struct FVector TraceStart, struct FVector TraceEnd, struct FVector HalfSize); // Function BravoHotelGame.BravoHotelCharacter.ClientDebugBoxTrace // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x1eb4b80
	void ClientClearCastingUI(); // Function BravoHotelGame.BravoHotelCharacter.ClientClearCastingUI // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4b60
	void ClientChoosePerkDeck(int32_t ChooseIndex, bool bSuccess); // Function BravoHotelGame.BravoHotelCharacter.ClientChoosePerkDeck // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4a90
	void ClientApplyDamage(float DamageAmount, struct FDamageEvent DamageEvent, struct AController* EventInstigator, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelCharacter.ClientApplyDamage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4940
	void ClientAddWearableEffectBuffList(struct FString BuffIndex); // Function BravoHotelGame.BravoHotelCharacter.ClientAddWearableEffectBuffList // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb4890
	void ClientAddPerkLevel(struct FPerkInfo InPerkInfo, enum class EPerkLevelUpType InLevelUpType, int32_t InBeforeLevel, int32_t InAfterLevel, int32_t InBeforeMaxHealth); // Function BravoHotelGame.BravoHotelCharacter.ClientAddPerkLevel // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1eb46f0
	void ClearInteractionUI(); // Function BravoHotelGame.BravoHotelCharacter.ClearInteractionUI // (Final|Native|Public) // @ game+0x1eb46d0
	void CheckVisibleOutBlueZoneBlizzard(); // Function BravoHotelGame.BravoHotelCharacter.CheckVisibleOutBlueZoneBlizzard // (Final|Native|Public) // @ game+0x1eb46b0
	void CheckUseItem(struct FName& ItemKey); // Function BravoHotelGame.BravoHotelCharacter.CheckUseItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eb4620
	void CheckUnderLand(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.CheckUnderLand // (Final|Native|Public) // @ game+0x1eb45a0
	void CheckThrowWeapon(struct FName& ItemKey); // Function BravoHotelGame.BravoHotelCharacter.CheckThrowWeapon // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eb4510
	void CheckStopRevive(); // Function BravoHotelGame.BravoHotelCharacter.CheckStopRevive // (Final|Native|Public) // @ game+0x1eb44f0
	void CheckSteady(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.CheckSteady // (Final|Native|Public) // @ game+0x1eb4470
	void CheckShakeOutMontage(); // Function BravoHotelGame.BravoHotelCharacter.CheckShakeOutMontage // (Final|Native|Public) // @ game+0x1eb4450
	void CheckRequestBuildingInfo(); // Function BravoHotelGame.BravoHotelCharacter.CheckRequestBuildingInfo // (Final|Native|Public) // @ game+0x1eb4430
	void CheckProneWeaponIdle(); // Function BravoHotelGame.BravoHotelCharacter.CheckProneWeaponIdle // (Final|Native|Public) // @ game+0x1eb4410
	void CheckProneCollision(); // Function BravoHotelGame.BravoHotelCharacter.CheckProneCollision // (Final|Native|Protected) // @ game+0x1eb43f0
	bool CheckPlosiveSoundDetection(enum class EPlosiveSoundDetectionType DetiectionType); // Function BravoHotelGame.BravoHotelCharacter.CheckPlosiveSoundDetection // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb4360
	void CheckOxygen(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.CheckOxygen // (Final|Native|Public) // @ game+0x1eb42e0
	void CheckOverHeal(float DeltaTime); // Function BravoHotelGame.BravoHotelCharacter.CheckOverHeal // (Final|Native|Public) // @ game+0x1eb4260
	void CheckOnChangeCondition(); // Function BravoHotelGame.BravoHotelCharacter.CheckOnChangeCondition // (Final|Native|Public) // @ game+0x151b910
	bool CheckNeedOwnerStopLadder(); // Function BravoHotelGame.BravoHotelCharacter.CheckNeedOwnerStopLadder // (Final|Native|Public) // @ game+0x1eb4230
	void CheckMeleeAnim(); // Function BravoHotelGame.BravoHotelCharacter.CheckMeleeAnim // (Final|Native|Public) // @ game+0x1eb4210
	bool CheckIsCastingBackpackItem(struct FInventoryItemInfo& TargetItemInfo); // Function BravoHotelGame.BravoHotelCharacter.CheckIsCastingBackpackItem // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1eb4110
	void CheckEquipAnim(); // Function BravoHotelGame.BravoHotelCharacter.CheckEquipAnim // (Final|Native|Public) // @ game+0x1eb40f0
	void CheckCurrentBuff(); // Function BravoHotelGame.BravoHotelCharacter.CheckCurrentBuff // (Final|Native|Public) // @ game+0x1eb40d0
	void CheckCharacterNamedArguments(); // Function BravoHotelGame.BravoHotelCharacter.CheckCharacterNamedArguments // (Final|Native|Public) // @ game+0x1eb40b0
	void CheckBrokenEquipment(); // Function BravoHotelGame.BravoHotelCharacter.CheckBrokenEquipment // (Final|Native|Public) // @ game+0x1eb4090
	void CheckBombingTargeting(); // Function BravoHotelGame.BravoHotelCharacter.CheckBombingTargeting // (Final|Native|Public) // @ game+0x1eb4070
	void CheckArmedStateForAction(bool bDoArm, bool bPlayUnequipAnimation, bool bOrdered); // Function BravoHotelGame.BravoHotelCharacter.CheckArmedStateForAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb3f50
	void ChangeOption(struct TArray<enum class ESettingType>& ChangeTypeList); // Function BravoHotelGame.BravoHotelCharacter.ChangeOption // (Final|Native|Public|HasOutParms) // @ game+0x1eb3ea0
	void ChangeCastingMontageOnProneEvent(bool bNewProne, float TargetMontagePosition); // Function BravoHotelGame.BravoHotelCharacter.ChangeCastingMontageOnProneEvent // (Final|Native|Public) // @ game+0x1eb3dd0
	void CastingDelegate__DelegateSignature(struct FCastingInfo& CastingInfo, float CastingPercent); // DelegateFunction BravoHotelGame.BravoHotelCharacter.CastingDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	bool CanWeaponMeleeAttack(); // Function BravoHotelGame.BravoHotelCharacter.CanWeaponMeleeAttack // (Final|Native|Protected) // @ game+0x1eb3d60
	bool CanUseBackpackItem(int32_t BackpackItemIndex); // Function BravoHotelGame.BravoHotelCharacter.CanUseBackpackItem // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb3cd0
	bool CanUpdateIdleNum(); // Function BravoHotelGame.BravoHotelCharacter.CanUpdateIdleNum // (Final|Native|Public|Const) // @ game+0x1eb3ca0
	bool CanUltimate_Recon(); // Function BravoHotelGame.BravoHotelCharacter.CanUltimate_Recon // (Final|Native|Public|Const) // @ game+0x1eb3c70
	bool CanTryUseAutoLadder(); // Function BravoHotelGame.BravoHotelCharacter.CanTryUseAutoLadder // (Final|Native|Public) // @ game+0x1eb3c40
	bool CanSprint(); // Function BravoHotelGame.BravoHotelCharacter.CanSprint // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eb3c10
	bool CanSpawnSuperBarrier(struct FTransform& OutSpawnTransform); // Function BravoHotelGame.BravoHotelCharacter.CanSpawnSuperBarrier // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1eb3b30
	bool CanSliding(); // Function BravoHotelGame.BravoHotelCharacter.CanSliding // (Final|Native|Public|Const) // @ game+0x1eb3b00
	bool CanRolling(); // Function BravoHotelGame.BravoHotelCharacter.CanRolling // (Final|Native|Public|Const) // @ game+0x1eb3ad0
	bool CanRocketJump(); // Function BravoHotelGame.BravoHotelCharacter.CanRocketJump // (Final|Native|Public) // @ game+0x1eb3aa0
	bool CanReviveOtherPlayer(); // Function BravoHotelGame.BravoHotelCharacter.CanReviveOtherPlayer // (Final|Native|Public|Const) // @ game+0x1eb3a70
	bool CanResuscitationOtherPlayer(struct AActor* ResuscitatedActor); // Function BravoHotelGame.BravoHotelCharacter.CanResuscitationOtherPlayer // (Final|Native|Public|Const) // @ game+0x1eb39e0
	void CanProneFailedDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCharacter.CanProneFailedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	bool CanPlayShakeOutMontage(); // Function BravoHotelGame.BravoHotelCharacter.CanPlayShakeOutMontage // (Final|Native|Public) // @ game+0x1eb39b0
	bool CanMove(); // Function BravoHotelGame.BravoHotelCharacter.CanMove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb3980
	bool CanMeteorJump(); // Function BravoHotelGame.BravoHotelCharacter.CanMeteorJump // (Final|Native|Public) // @ game+0x1eb3950
	bool CanMeleeAttack(); // Function BravoHotelGame.BravoHotelCharacter.CanMeleeAttack // (Final|Native|Protected) // @ game+0x1eb3920
	bool CanLean(); // Function BravoHotelGame.BravoHotelCharacter.CanLean // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eb38f0
	bool CanKickDoor(); // Function BravoHotelGame.BravoHotelCharacter.CanKickDoor // (Final|Native|Public|Const) // @ game+0x1eb38c0
	bool CanJetpack(); // Function BravoHotelGame.BravoHotelCharacter.CanJetpack // (Final|Native|Public|Const) // @ game+0x1eb3890
	bool CanHeartBeatSensor(); // Function BravoHotelGame.BravoHotelCharacter.CanHeartBeatSensor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb3860
	bool CanFreeLook(); // Function BravoHotelGame.BravoHotelCharacter.CanFreeLook // (Final|Native|Public) // @ game+0x1eb3830
	bool CanFPS(); // Function BravoHotelGame.BravoHotelCharacter.CanFPS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb37d0
	bool CanFire(); // Function BravoHotelGame.BravoHotelCharacter.CanFire // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb3800
	bool CanEnterVehicle(struct UBravoHotelVehicleSeatComponent* TargetVehicleSeat); // Function BravoHotelGame.BravoHotelCharacter.CanEnterVehicle // (Final|Native|Public|Const) // @ game+0x1eb3740
	bool CanCombine(); // Function BravoHotelGame.BravoHotelCharacter.CanCombine // (Final|Native|Protected|BlueprintCallable) // @ game+0x1eb3710
	bool CanChangeWeapon(); // Function BravoHotelGame.BravoHotelCharacter.CanChangeWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb36e0
	bool CanChangeFireMode(); // Function BravoHotelGame.BravoHotelCharacter.CanChangeFireMode // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eb36b0
	void CancelMelee(); // Function BravoHotelGame.BravoHotelCharacter.CancelMelee // (Final|Native|Public) // @ game+0x1eb3db0
	void CancelAimingInVehicle(); // Function BravoHotelGame.BravoHotelCharacter.CancelAimingInVehicle // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb3d90
	bool CanBeKnockedBack(); // Function BravoHotelGame.BravoHotelCharacter.CanBeKnockedBack // (Final|Native|Public|Const) // @ game+0x1eb3680
	bool CanApplyActiveItem(int32_t BackpackItemIndex); // Function BravoHotelGame.BravoHotelCharacter.CanApplyActiveItem // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1eb35f0
	bool CanAOS(); // Function BravoHotelGame.BravoHotelCharacter.CanAOS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb3590
	bool CanAMP(); // Function BravoHotelGame.BravoHotelCharacter.CanAMP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb3560
	bool CanAirWalk(); // Function BravoHotelGame.BravoHotelCharacter.CanAirWalk // (Final|Native|Public) // @ game+0x1eb35c0
	bool CanADS(); // Function BravoHotelGame.BravoHotelCharacter.CanADS // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb3530
	void CallbackLanded(struct FHitResult& Hit); // Function BravoHotelGame.BravoHotelCharacter.CallbackLanded // (Final|Native|Public|HasOutParms) // @ game+0x1eb3450
	void CalculatePreShootInformations(float DeltaTime, struct FVector& Pos, bool& LineOfFire, bool& LastUpdate); // Function BravoHotelGame.BravoHotelCharacter.CalculatePreShootInformations // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1eb32c0
	struct FVector CalculateActorLocationInRagdoll(); // Function BravoHotelGame.BravoHotelCharacter.CalculateActorLocationInRagdoll // (Final|Native|Protected|HasDefaults) // @ game+0x1eb3280
	float CalcDamageByFallingSpeed(float InMinSpeed, float InMaxSpeed, bool bIsLandedFromVehicle); // Function BravoHotelGame.BravoHotelCharacter.CalcDamageByFallingSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1eb3170
	void BroadcastDetectItemsDelegate(); // Function BravoHotelGame.BravoHotelCharacter.BroadcastDetectItemsDelegate // (Final|Native|Public) // @ game+0x1eb3150
	void BPSetReplicateMovement(bool bInReplicateMovement); // Function BravoHotelGame.BravoHotelCharacter.BPSetReplicateMovement // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb30a0
	void BeginPlay(); // Function BravoHotelGame.BravoHotelCharacter.BeginPlay // (Native|Public|BlueprintCallable) // @ game+0x1eb3130
	void AttachWeaponToSlot(struct ABravoHotelEquippableActor* EquippableActor, int32_t SlotIndex); // Function BravoHotelGame.BravoHotelCharacter.AttachWeaponToSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb2fe0
	void ApplyDamageEx(float DamageAmount, struct FDamageEvent& DamageEvent, struct AController* EventInstigator, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelCharacter.ApplyDamageEx // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eb2e70
	void AIExitForceField(); // Function BravoHotelGame.BravoHotelCharacter.AIExitForceField // (Final|Native|Public) // @ game+0x1eb25a0
	void AIEnterForceField(); // Function BravoHotelGame.BravoHotelCharacter.AIEnterForceField // (Final|Native|Public) // @ game+0x1eb2580
	float AffectedByForceField_Impl(float OutModifier, bool bNeedMultipy, bool bIsOwnerIgnore); // Function BravoHotelGame.BravoHotelCharacter.AffectedByForceField_Impl // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1eb2d60
	void ADSSettingsAfterChangeCamera(bool bUseCustomCurve); // Function BravoHotelGame.BravoHotelCharacter.ADSSettingsAfterChangeCamera // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb24f0
	void AddThrownMolotovCocktail(struct ABravoHotelProjectileGrenadeMolotovCocktail* MolotovCocktail); // Function BravoHotelGame.BravoHotelCharacter.AddThrownMolotovCocktail // (Final|Native|Public) // @ game+0x1eb2ce0
	void AddThrownFlashbang(struct ABravoHotelProjectileGrenadeFlashbang* Flashbang); // Function BravoHotelGame.BravoHotelCharacter.AddThrownFlashbang // (Final|Native|Public) // @ game+0x1eb2c60
	void AddSimulatedHittedDamage(struct UBravoHotelDamageType* DamageTypeClass, struct APawn* DamageInstigator, float Damage, int16_t HitPointIdx, uint16_t ProjectileId); // Function BravoHotelGame.BravoHotelCharacter.AddSimulatedHittedDamage // (Final|Native|Private) // @ game+0x1eb2ad0
	void AddShortTimeHealth(struct UObject* HealthOwner, float AddHealth); // Function BravoHotelGame.BravoHotelCharacter.AddShortTimeHealth // (Final|Native|Public) // @ game+0x1eb2a00
	bool AddPerkLevel(enum class EPerkSlotFlag PerkSlot, int32_t Count, bool bTakeOne); // Function BravoHotelGame.BravoHotelCharacter.AddPerkLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb2900
	void AddPerkEvent(struct FPerkInfo& PerkInfo, struct FDisplayAbility& InCurrentDisplayAbility, int32_t LastLevel, int32_t ClassLevel, enum class EPerkLevelUpType LevelUpType); // Function BravoHotelGame.BravoHotelCharacter.AddPerkEvent // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void AddOverHeal(float Amount); // Function BravoHotelGame.BravoHotelCharacter.AddOverHeal // (Final|Native|Public) // @ game+0x1eb2880
	void AddDetectedStealable(struct ABravoHotelCharacter* NewCharacter); // Function BravoHotelGame.BravoHotelCharacter.AddDetectedStealable // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb2800
	void AddDetectedItem(struct ABravoHotelPickup* NewPickup); // Function BravoHotelGame.BravoHotelCharacter.AddDetectedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb2780
	void AddDetectedDropBox(struct ABravoHotelDropBoxActor* NewPickup); // Function BravoHotelGame.BravoHotelCharacter.AddDetectedDropBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1eb2700
	void AddCondition(enum class ECharacterConditionType ConditionType, enum class EAbilityCase Key); // Function BravoHotelGame.BravoHotelCharacter.AddCondition // (Final|Native|Public) // @ game+0x1eb2640
	void AddCharacterRotation(float Val); // Function BravoHotelGame.BravoHotelCharacter.AddCharacterRotation // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	bool ActiveHeartBeatSensor(); // Function BravoHotelGame.BravoHotelCharacter.ActiveHeartBeatSensor // (Final|Native|Public) // @ game+0x1eb2610
	bool ActiveAmplifier(); // Function BravoHotelGame.BravoHotelCharacter.ActiveAmplifier // (Final|Native|Public) // @ game+0x1eb25e0
	void ActivateADSPostProcess(); // Function BravoHotelGame.BravoHotelCharacter.ActivateADSPostProcess // (Final|Native|Public) // @ game+0x1eb25c0
};

// Class BravoHotelGame.BHPersonalSupplySystemComponent
// Size: 0x1c0 (Inherited: 0xb0)
struct UBHPersonalSupplySystemComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct ABHPersonalSupplyBox* CurrentSupplyBox; // 0xc0(0x08)
	struct ABHPersonalSupplyBoxDummy* CurrentSupplyBoxDummy; // 0xc8(0x08)
	struct ABHPersonalSupplyBox* SupplyBoxClass; // 0xd0(0x08)
	struct ABHPersonalSupplyBoxDummy* SupplyBoxDummyClass; // 0xd8(0x08)
	struct FSupplyBoxAssignmentInfo CurrentAssignmentInfo; // 0xe0(0x30)
	int32_t CountOpenSupplyBox; // 0x110(0x04)
	int32_t SupplyBoxCost; // 0x114(0x04)
	enum class EPersonalSupplyBoxState CurrentPSBState; // 0x118(0x01)
	enum class EAssignReason AssignReason; // 0x119(0x01)
	char pad_11A[0x8]; // 0x11a(0x08)
	bool ShowPingByHUD; // 0x122(0x01)
	char pad_123[0x9d]; // 0x123(0x9d)

	void StartSpawnFromSpawnInfo(struct FSpawnPerkData& Data, bool CheckRePosition); // Function BravoHotelGame.BHPersonalSupplySystemComponent.StartSpawnFromSpawnInfo // (Final|Native|Public|HasOutParms) // @ game+0x1e493a0
	void StartSpawn(); // Function BravoHotelGame.BHPersonalSupplySystemComponent.StartSpawn // (Final|Native|Public) // @ game+0x1e49380
	void SetPersonalSupplyBoxInfo(enum class EPersonalSupplyBoxState NewState, struct FVector NewLocation); // Function BravoHotelGame.BHPersonalSupplySystemComponent.SetPersonalSupplyBoxInfo // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1e492b0
	void ServerSpawnSupplyBoxDummy(); // Function BravoHotelGame.BHPersonalSupplySystemComponent.ServerSpawnSupplyBoxDummy // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e49260
	void ServerPayGold(int32_t Amount); // Function BravoHotelGame.BHPersonalSupplySystemComponent.ServerPayGold // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e491a0
	void Response_PayGold(bool bSuccess, int32_t Amount); // Function BravoHotelGame.BHPersonalSupplySystemComponent.Response_PayGold // (Final|Native|Public) // @ game+0x1e490e0
	void OnRep_SupplyBoxCost(); // Function BravoHotelGame.BHPersonalSupplySystemComponent.OnRep_SupplyBoxCost // (Final|Native|Protected) // @ game+0x1e490c0
	void OnRep_CurrentAssignmentInfo(); // Function BravoHotelGame.BHPersonalSupplySystemComponent.OnRep_CurrentAssignmentInfo // (Final|Native|Protected) // @ game+0x1e490a0
	void OnRep_ChangePSMState(); // Function BravoHotelGame.BHPersonalSupplySystemComponent.OnRep_ChangePSMState // (Final|Native|Protected) // @ game+0x1e49080
	void MulticastNotifyAlert(int32_t player_uid); // Function BravoHotelGame.BHPersonalSupplySystemComponent.MulticastNotifyAlert // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1e48ff0
	struct FPersonalSupplyBoxPingInfo GetPersonalSupplyBoxInfo(); // Function BravoHotelGame.BHPersonalSupplySystemComponent.GetPersonalSupplyBoxInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e48fb0
	void ForceSpawnPersonalBox(struct FTransform SpawnTransform, struct TArray<struct FSpawnItemResult> ItemInfos); // Function BravoHotelGame.BHPersonalSupplySystemComponent.ForceSpawnPersonalBox // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1e48e20
	void ForceSpawnBox(struct FTransform SpawnTransform, struct TArray<struct FInventoryItemInfo> ItemInfos); // Function BravoHotelGame.BHPersonalSupplySystemComponent.ForceSpawnBox // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1e48c40
	void ClientSetPersonalSupplyBox(struct FSupplyBoxAssignmentInfo AssignmentInfo); // Function BravoHotelGame.BHPersonalSupplySystemComponent.ClientSetPersonalSupplyBox // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1e48b90
	void ClientRecallPersonalSupplyBox(); // Function BravoHotelGame.BHPersonalSupplySystemComponent.ClientRecallPersonalSupplyBox // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1e48b70
	void ClientChangePSMState(enum class EPersonalSupplyBoxState State); // Function BravoHotelGame.BHPersonalSupplySystemComponent.ClientChangePSMState // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1e48af0
	void ChangePersonalSupplyBoxLocationInfo(struct FVector NewLocation); // Function BravoHotelGame.BHPersonalSupplySystemComponent.ChangePersonalSupplyBoxLocationInfo // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1e48a60
};

// Class BravoHotelGame.BravoHotel3DViewActor
// Size: 0x320 (Inherited: 0x320)
struct ABravoHotel3DViewActor : AActor {
};

// Class BravoHotelGame.BravoHotelAbilityComponent
// Size: 0x7d0 (Inherited: 0xb0)
struct UBravoHotelAbilityComponent : UActorComponent {
	char pad_B0[0x5d8]; // 0xb0(0x5d8)
	struct FBravoHotelDefaultBalanceData DefaultBalanceData; // 0x688(0x78)
	struct TMap<enum class ECharacterBuffType, struct FName> CharacterBuffDataKeys; // 0x288(0x50)
	struct AActor* DefaultFireCell; // 0x280(0x08)
	float SimulatedTickTime; // 0xc0(0x04)
	struct TMap<enum class ECharacterAbilityType, struct FBravoHotelAbilityState> AbilityStates; // 0x708(0x50)
	struct TMap<enum class ECharacterConditionedAbilityType, struct FBravoHotelConditionedAbilityState> ConditionedAbilityStates; // 0x388(0x50)
	struct TMap<enum class ECharacterConditionType, struct FBravoHotelConditionState> ConditionStates; // 0x230(0x50)
	uint64_t ConditionFlags; // 0x478(0x08)
	struct TMap<int32_t, struct FBravoHotelBuffUIInfo> BuffUIInfos; // 0x428(0x50)
	struct FBuffHandleArray CurrentBuffKeys; // 0xc8(0x118)
	struct TMap<uint16_t, struct UBravoHotelBuffBase*> CurrentBuffInfos; // 0x528(0x50)
	struct TMap<uint16_t, struct UBuffControlState*> BuffControls; // 0x1e0(0x50)
	struct TArray<struct UBravoHotelBuffBase*> StackBuffInfos; // 0x678(0x10)
	float Loudness; // 0x7bc(0x04)
	float LoudnessCrouchRatio; // 0x2d8(0x04)
	float LoudnessProneRatio; // 0x420(0x04)
	float LoudnessTime; // 0x7b8(0x04)
	struct UUserWidget* DebugWidgetClass; // 0x618(0x08)
	struct TMap<struct UObject*, struct FMaterialEffectInfo> MaterialEffectInfos; // 0x578(0x50)
	struct UCurveFloat* MaterialEffectCurve; // 0x7a8(0x08)
	struct UCurveFloat* MaterialEffectStrCurve; // 0x670(0x08)
	struct UUserWidget* DebugWidget; // 0x7c8(0x08)
	struct UBravoHotelDebugWidget* WeaponDebugTextWidget; // 0x768(0x08)
	struct TMap<enum class EBuffEventType, struct FMulticastInlineDelegate> BuffEventDelegates; // 0x330(0x50)
	struct TMap<enum class EBuffEventType, struct FMulticastInlineDelegate> BuffEndEventDelegates; // 0x2e0(0x50)
	struct TMap<enum class EWeaponBuffEventType, struct FMulticastInlineDelegate> WeaponBuffEventDelegates; // 0x5c8(0x50)

	void WeaponBuffEventDelegate__DelegateSignature(enum class EWeaponBuffEventType& EventType, struct FConditionedWeaponInfo& WeaponInfo); // DelegateFunction BravoHotelGame.BravoHotelAbilityComponent.WeaponBuffEventDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void UpdateWeaponDebugTextWidget(); // Function BravoHotelGame.BravoHotelAbilityComponent.UpdateWeaponDebugTextWidget // (Final|Native|Private) // @ game+0x1e51830
	void ToggleWeaponDebugTextWidgetVisible(); // Function BravoHotelGame.BravoHotelAbilityComponent.ToggleWeaponDebugTextWidgetVisible // (Final|Native|Public) // @ game+0x1e51810
	void ShowAbilityDubugText(bool bFlag); // Function BravoHotelGame.BravoHotelAbilityComponent.ShowAbilityDubugText // (Final|Native|Public|BlueprintCallable) // @ game+0x1e51780
	void ServerStopBuffControl(uint16_t BuffIndex); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerStopBuffControl // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e516c0
	void ServerSetBuffControlTimer(uint16_t BuffIndex, float NewTimer); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerSetBuffControlTimer // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e515c0
	void ServerRemoveCondition(enum class ECharacterConditionType ConditionType, int32_t Key); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerRemoveCondition // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e514c0
	void ServerRemoveBuffByIndex(uint16_t BuffIndex); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerRemoveBuffByIndex // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e51400
	void ServerForceRemoveCondition(enum class ECharacterConditionType ConditionType); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerForceRemoveCondition // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e51350
	void ServerCheckBuffControl(uint16_t BuffIndex); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerCheckBuffControl // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e51290
	void ServerAddStackBuffByIndex(uint16_t BuffIndex); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerAddStackBuffByIndex // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e511d0
	void ServerAddCondition(enum class ECharacterConditionType ConditionType, int32_t Key); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerAddCondition // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e510d0
	void ServerAddBuffByIndex(uint16_t BuffIndex); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerAddBuffByIndex // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e51010
	void ServerAddBuffByAttacker(uint16_t BuffIndex, struct AController* PC, struct AActor* Actor); // Function BravoHotelGame.BravoHotelAbilityComponent.ServerAddBuffByAttacker // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1e50ee0
	void ResetAllBuffCoolTime(); // Function BravoHotelGame.BravoHotelAbilityComponent.ResetAllBuffCoolTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1e50ec0
	void RemoveCondition(enum class ECharacterConditionType ConditionType, enum class EAbilityCase Key); // Function BravoHotelGame.BravoHotelAbilityComponent.RemoveCondition // (Final|Native|Public|BlueprintCallable) // @ game+0x1e50e00
	void RemoveBuffByData(struct FName BuffName); // Function BravoHotelGame.BravoHotelAbilityComponent.RemoveBuffByData // (Final|Native|Public|BlueprintCallable) // @ game+0x1e50d80
	void OnRep_ChangedCurrentBuffKeys(); // Function BravoHotelGame.BravoHotelAbilityComponent.OnRep_ChangedCurrentBuffKeys // (Final|Native|Private) // @ game+0x1e50d60
	void MultiResetBuffTimeByIndex(uint16_t BuffIndex, float Time); // Function BravoHotelGame.BravoHotelAbilityComponent.MultiResetBuffTimeByIndex // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1e50c90
	bool IsShowAbilityDubugText(); // Function BravoHotelGame.BravoHotelAbilityComponent.IsShowAbilityDubugText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e50c70
	bool IsBuff(enum class ECharacterBuffType BuffType); // Function BravoHotelGame.BravoHotelAbilityComponent.IsBuff // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e50be0
	void ClientSyncCondition(struct TArray<struct FBravoHotelConditionState> ConditionInfo); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientSyncCondition // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e50b10
	void ClientSetBuffControlTimer(uint16_t BuffIndex, float NewTimer); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientSetBuffControlTimer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e50a40
	void ClientRemoveCondition(enum class ECharacterConditionType ConditionType, int32_t Key); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientRemoveCondition // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e50970
	void ClientRemoveBuffByIndex(uint16_t BuffIndex); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientRemoveBuffByIndex // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e508e0
	void ClientRemoveAllBuffDelegates(); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientRemoveAllBuffDelegates // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x120dbb0
	void ClientForceRemoveCondition(enum class ECharacterConditionType ConditionType); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientForceRemoveCondition // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e50860
	void ClientAddStackBuffByIndex(uint16_t BuffIndex); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientAddStackBuffByIndex // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e507d0
	void ClientAddCondition(enum class ECharacterConditionType ConditionType, int32_t Key); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientAddCondition // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e50700
	void ClientAddBuffByIndex(uint16_t BuffIndex); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientAddBuffByIndex // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e50670
	void ClientAddBuffByAttacker(uint16_t BuffIndex, struct AController* PC, struct AActor* Actor); // Function BravoHotelGame.BravoHotelAbilityComponent.ClientAddBuffByAttacker // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1e50570
	void BuffEventDelegate__DelegateSignature(enum class EBuffEventType& EventType); // DelegateFunction BravoHotelGame.BravoHotelAbilityComponent.BuffEventDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void AddCondition(enum class ECharacterConditionType ConditionType, enum class EAbilityCase Key); // Function BravoHotelGame.BravoHotelAbilityComponent.AddCondition // (Final|Native|Public|BlueprintCallable) // @ game+0x1e504b0
	void AddBuffByData(struct FName BuffName); // Function BravoHotelGame.BravoHotelAbilityComponent.AddBuffByData // (Final|Native|Public|BlueprintCallable) // @ game+0x1e50430
};

// Class BravoHotelGame.ConditionedAbilityGetter
// Size: 0xe8 (Inherited: 0x28)
struct UConditionedAbilityGetter : UObject {
	char pad_28[0xc0]; // 0x28(0xc0)
};

// Class BravoHotelGame.BuffControlState
// Size: 0xb0 (Inherited: 0x28)
struct UBuffControlState : UObject {
	char pad_28[0x48]; // 0x28(0x48)
	struct TArray<uint16_t> ActiveBuffs; // 0x70(0x10)
	struct ABravoHotelCharacter* BravoHotelCharacter; // 0x80(0x08)
	struct UBravoHotelAbilityComponent* BravoHotelAbilityComponent; // 0x88(0x08)
	char pad_90[0x20]; // 0x90(0x20)

	void WeaponEventEndCallBack(enum class EWeaponBuffEventType& BuffEventType, struct FConditionedWeaponInfo& WeaponInfo); // Function BravoHotelGame.BuffControlState.WeaponEventEndCallBack // (Final|Native|Public|HasOutParms) // @ game+0x1e5d630
	void WeaponEventCallBack(enum class EWeaponBuffEventType& BuffEventType, struct FConditionedWeaponInfo& WeaponInfo); // Function BravoHotelGame.BuffControlState.WeaponEventCallBack // (Final|Native|Public|HasOutParms) // @ game+0x1e5d510
	void ReduceCoolTimeOnRangedAttack(); // Function BravoHotelGame.BuffControlState.ReduceCoolTimeOnRangedAttack // (Final|Native|Private) // @ game+0x1e5d4f0
	void ReduceCoolTimeOnKill(); // Function BravoHotelGame.BuffControlState.ReduceCoolTimeOnKill // (Final|Native|Private) // @ game+0x1e5d4d0
	void OnEndCoolTime__DelegateSignature(); // DelegateFunction BravoHotelGame.BuffControlState.OnEndCoolTime__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnBeginCoolTime__DelegateSignature(); // DelegateFunction BravoHotelGame.BuffControlState.OnBeginCoolTime__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnBeginCoolTime(); // Function BravoHotelGame.BuffControlState.OnBeginCoolTime // (Final|Native|Public) // @ game+0x1e5d4b0
	void EventEndCallBack(enum class EBuffEventType& BuffEvnetType); // Function BravoHotelGame.BuffControlState.EventEndCallBack // (Final|Native|Public|HasOutParms) // @ game+0x1e5d420
	void EventCallBack(enum class EBuffEventType& BuffEvnetType); // Function BravoHotelGame.BuffControlState.EventCallBack // (Final|Native|Public|HasOutParms) // @ game+0x1e5d390
};

// Class BravoHotelGame.BravoHotelAchievementManager
// Size: 0x98 (Inherited: 0x28)
struct UBravoHotelAchievementManager : UObject {
	char pad_28[0x70]; // 0x28(0x70)
};

// Class BravoHotelGame.BravoHotelActionComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UBravoHotelActionComponent : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
	char bWalking : 1; // 0xc8(0x01)
	char bSprinting : 1; // 0xc8(0x01)
	char bIsProned : 1; // 0xc8(0x01)
	char bIsJumping : 1; // 0xc8(0x01)
	char bIsKicking : 1; // 0xc8(0x01)
	char bIsAirWalking : 1; // 0xc8(0x01)
	char bWantsToRocketJump : 1; // 0xc8(0x01)
	char bWantsToMeteorJump : 1; // 0xc8(0x01)
	char bWantsToMeteorStrike : 1; // 0xc9(0x01)
	char bWantsToJetpack : 1; // 0xc9(0x01)
	char bWantsToJetpackAim : 1; // 0xc9(0x01)
	char CustomBuoyancySwimMode : 1; // 0xc9(0x01)
	char pad_C9_4 : 4; // 0xc9(0x01)
	enum class ELeanState LeanState; // 0xca(0x01)
	enum class EFireType FireType; // 0xcb(0x01)
	enum class EGrenadeThrowingType ThrowingType; // 0xcc(0x01)
	char pad_CD[0x3]; // 0xcd(0x03)
	struct UAnimMontage* ReplicatedAnimMontage; // 0xd0(0x08)
	struct UAnimMontage* ReplicatedAnimMontage_FPP; // 0xd8(0x08)
	bool bIsSliding; // 0xe0(0x01)
	bool bIsRolling; // 0xe1(0x01)
	char pad_E2[0x6]; // 0xe2(0x06)
	struct UBravoHotelCharacterMovementComponent* BravoHotelCharacterMovement; // 0xe8(0x08)

	void OnRep_ThrowingType(); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_ThrowingType // (Final|Native|Protected) // @ game+0x1e5eb60
	void OnRep_IsProned(); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_IsProned // (Final|Native|Protected) // @ game+0x1e5eb40
	void OnRep_FireType(enum class EFireType& PreFireType); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_FireType // (Final|Native|Protected|HasOutParms) // @ game+0x1e5eab0
	void OnRep_bWantsToRocketJump(); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_bWantsToRocketJump // (Final|Native|Protected) // @ game+0x1e5ec00
	void OnRep_bWantsToMeteorJump(); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_bWantsToMeteorJump // (Final|Native|Protected) // @ game+0x1e5ebe0
	void OnRep_bIsSliding(); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_bIsSliding // (Final|Native|Protected) // @ game+0x1e5ebc0
	void OnRep_bIsKicking(); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_bIsKicking // (Final|Native|Protected) // @ game+0x1e5eba0
	void OnRep_bIsAirWalking(); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_bIsAirWalking // (Final|Native|Protected) // @ game+0x1e5eb80
	void OnRep_AnimMontageFPP(); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_AnimMontageFPP // (Final|Native|Protected) // @ game+0x1e5ea90
	void OnRep_AnimMontage(); // Function BravoHotelGame.BravoHotelActionComponent.OnRep_AnimMontage // (Final|Native|Protected) // @ game+0x1e5ea70
};

// Class BravoHotelGame.BravoHotelActor
// Size: 0x320 (Inherited: 0x320)
struct ABravoHotelActor : AActor {
};

// Class BravoHotelGame.BravoHotelAggregateTickComponent
// Size: 0x100 (Inherited: 0xb0)
struct UBravoHotelAggregateTickComponent : UActorComponent {
	char pad_B0[0x50]; // 0xb0(0x50)
};

// Class BravoHotelGame.BravoHotelAIPlayerController
// Size: 0x530 (Inherited: 0x448)
struct ABravoHotelAIPlayerController : AAIController {
	float AutoRotateSpeed; // 0x448(0x04)
	struct FName DefaultWeaponName; // 0x44c(0x08)
	char pad_454[0x1c]; // 0x454(0x1c)
	struct AController* NearPlayerController; // 0x470(0x08)
	struct APawn* NearTargetPawn; // 0x478(0x08)
	struct APawn* AttackTargetPawn; // 0x480(0x08)
	char pad_488[0xa8]; // 0x488(0xa8)

	void StartDescenting(); // Function BravoHotelGame.BravoHotelAIPlayerController.StartDescenting // (Final|Native|Public|BlueprintCallable) // @ game+0x1e61330
	void SetIsParachuteLanding(bool Flag, float Height); // Function BravoHotelGame.BravoHotelAIPlayerController.SetIsParachuteLanding // (Final|Native|Public|BlueprintCallable) // @ game+0x1e61260
	void SetHealthModify(); // Function BravoHotelGame.BravoHotelAIPlayerController.SetHealthModify // (Final|Native|Public|BlueprintCallable) // @ game+0x1e61240
	void RefillCurrentWeaponsAmmo(bool bDirectToWeapon, int32_t Count); // Function BravoHotelGame.BravoHotelAIPlayerController.RefillCurrentWeaponsAmmo // (Final|Native|Public|BlueprintCallable) // @ game+0x1e61180
	void OnUpdateParachuting(float DeltaTime); // Function BravoHotelGame.BravoHotelAIPlayerController.OnUpdateParachuting // (Final|Native|Public|BlueprintCallable) // @ game+0x1e61100
	void OnTakeDamagePawn(struct AActor* DamagedActor, float Damage, struct UDamageType* DamageType, struct AController* InstigatedBy, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelAIPlayerController.OnTakeDamagePawn // (Final|Native|Public) // @ game+0x1e60f70
	void OnChangeSurvivalCirclePhase(int32_t PrevPhase, int32_t CurrentPhase); // Function BravoHotelGame.BravoHotelAIPlayerController.OnChangeSurvivalCirclePhase // (Final|Native|Public) // @ game+0x1e60eb0
	void MoveRightOnDescent(float DeltaTime, float AxisValue); // Function BravoHotelGame.BravoHotelAIPlayerController.MoveRightOnDescent // (Final|Native|Public|BlueprintCallable) // @ game+0x1e60df0
	void MoveForwardOnDescent(float DeltaTime, float AxisValue); // Function BravoHotelGame.BravoHotelAIPlayerController.MoveForwardOnDescent // (Final|Native|Public|BlueprintCallable) // @ game+0x1e60d30
	bool IsSwimmingBlockingHit(); // Function BravoHotelGame.BravoHotelAIPlayerController.IsSwimmingBlockingHit // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e60d00
	bool isinbluezone(); // Function BravoHotelGame.BravoHotelAIPlayerController.isinbluezone // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e60cd0
	void GiveEquipment(); // Function BravoHotelGame.BravoHotelAIPlayerController.GiveEquipment // (Final|Native|Public|BlueprintCallable) // @ game+0x1e60cb0
	float GetTestAINoAttackTime(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetTestAINoAttackTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60c80
	int32_t GetTestAIMoveMode(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetTestAIMoveMode // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60c60
	float GetTestAIDescentDurationWeight(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetTestAIDescentDurationWeight // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60c30
	float GetTestAIAttackTime(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetTestAIAttackTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60c00
	int32_t GetTestAIAttackMode(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetTestAIAttackMode // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60be0
	float GetDescentTargetAngle(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetDescentTargetAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e60bb0
	float GetDescentDuration(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetDescentDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e60b80
	float GetCharacterSpeed(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetCharacterSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e60b50
	enum class EBluseZoneState GetBlueZoneState(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetBlueZoneState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e60b20
	struct FVector GetBlueZoneRandomPointInCircle(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetBlueZoneRandomPointInCircle // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e60ae0
	struct FVector GetBlueZoneNearLandPos(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetBlueZoneNearLandPos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e60aa0
	float GetBlueZoneCircleRadius(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetBlueZoneCircleRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60a70
	struct FVector GetBlueZoneCirclePos(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetBlueZoneCirclePos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e60a30
	struct FVector GetAircraftFlightDirection(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetAircraftFlightDirection // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e609f0
	float GetAIHealthRate(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetAIHealthRate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e609c0
	float GetAIFireTendencyWithAI(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetAIFireTendencyWithAI // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60990
	float GetAIFireTendency(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetAIFireTendency // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60960
	float GetAIFireAccuracyWithAI(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetAIFireAccuracyWithAI // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60930
	float GetAIFireAccuracy(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetAIFireAccuracy // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e60900
	float GetAIDamageRate(); // Function BravoHotelGame.BravoHotelAIPlayerController.GetAIDamageRate // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e608d0
	void DoFiring(bool bIsNewFire, struct FVector ProjectileLocation, struct FRotator ProjectileRotation, struct AActor* TargetActor, struct FHitResult TargetHitResult); // Function BravoHotelGame.BravoHotelAIPlayerController.DoFiring // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1e60680
	void DoCrouch(bool bCrouch); // Function BravoHotelGame.BravoHotelAIPlayerController.DoCrouch // (Final|Native|Public|BlueprintCallable) // @ game+0x1e605f0
	void DoAIFiring(struct FVector& ProjectileLocation, struct FRotator& ProjectileRotation, struct ABravoHotelCharacter* TargetActor); // Function BravoHotelGame.BravoHotelAIPlayerController.DoAIFiring // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1e604d0
};

// Class BravoHotelGame.BravoHotelAircraft
// Size: 0x328 (Inherited: 0x320)
struct ABravoHotelAircraft : AActor {
	char pad_320[0x8]; // 0x320(0x08)
};

// Class BravoHotelGame.BravoHotelAircraftBomber
// Size: 0x330 (Inherited: 0x320)
struct ABravoHotelAircraftBomber : AActor {
	struct UInterpToMovementComponent* MovementComponent; // 0x320(0x08)
	int32_t LoopCount; // 0x328(0x04)
	char pad_32C[0x4]; // 0x32c(0x04)

	void OnReset(struct FHitResult& ImpactResult, float Time); // Function BravoHotelGame.BravoHotelAircraftBomber.OnReset // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1e615d0
};

// Class BravoHotelGame.BravoHotelAircraftFlight
// Size: 0x890 (Inherited: 0x5f0)
struct ABravoHotelAircraftFlight : ACharacter {
	struct ABravoHotelAircraftPoint* FixedStartingPoint; // 0x5e8(0x08)
	bool bScrambled; // 0x5f0(0x01)
	struct UAkComponent* AudioEmitter; // 0x5f8(0x08)
	struct UAkAudioEvent* StartFlyingEvent; // 0x600(0x08)
	struct UAkAudioEvent* StopFlyingEvent; // 0x608(0x08)
	struct FAudioPlayingHandle FlyingSoundHandle; // 0x610(0x04)
	char pad_615[0x3]; // 0x615(0x03)
	struct TArray<struct ABravoHotelAircraft*> Aircrafts; // 0x618(0x10)
	struct TArray<int32_t> AircraftOrdersForEvenFormation; // 0x628(0x10)
	struct TArray<int32_t> AircraftOrdersForOddFormation; // 0x638(0x10)
	enum class EAircraftMovementMethod MovementMethod; // 0x648(0x01)
	char pad_649[0x3]; // 0x649(0x03)
	float ScramblingDuration; // 0x64c(0x04)
	float ScramblingSpeed; // 0x650(0x04)
	float DistanceFromBorder; // 0x654(0x04)
	float SpeedToChangeAltitude; // 0x658(0x04)
	float TargetAltitude; // 0x65c(0x04)
	float AltitudeFromTargetAtFirst; // 0x660(0x04)
	char pad_664[0x4]; // 0x664(0x04)
	struct UCameraComponent* CineCamera; // 0x668(0x08)
	struct USceneComponent* AircraftRoot; // 0x670(0x08)
	struct UParticleSystemComponent* CineParticle; // 0x678(0x08)
	struct USplineComponent* CineCameraSpline; // 0x680(0x08)
	struct FVector CineDeltaLocation; // 0x688(0x0c)
	float CineInterpSpeed; // 0x694(0x04)
	float CineInterpSpeedZ; // 0x698(0x04)
	char pad_69C[0x4]; // 0x69c(0x04)
	struct ABravoHotelCharacter* CinePawn; // 0x6a0(0x08)
	struct APlayerController* CineController; // 0x6a8(0x08)
	float CineCameraBlendTime; // 0x6b0(0x04)
	char CineCameraBlendFunction; // 0x6b4(0x01)
	char pad_6B5[0x3]; // 0x6b5(0x03)
	float CineCameraBlendExp; // 0x6b8(0x04)
	bool bUseSplineAnimation; // 0x6bc(0x01)
	char pad_6BD[0x3]; // 0x6bd(0x03)
	float SplineAnimationDelayTime; // 0x6c0(0x04)
	float SplineAnimationTime; // 0x6c4(0x04)
	char pad_6C8[0x8]; // 0x6c8(0x08)
	struct FTimeline Timeline_SplineInterp; // 0x6d0(0x98)
	struct UCurveFloat* Curve_SplineInterp; // 0x768(0x08)
	struct FMulticastInlineDelegate OnStartCinematic; // 0x770(0x10)
	struct FMulticastInlineDelegate OnEndCinematic; // 0x780(0x10)
	struct TArray<struct FAircraftCinematic> CinematicSequenceList; // 0x790(0x10)
	struct ALevelSequenceActor* LevelSequenceActor; // 0x7a0(0x08)
	char pad_7A8[0x8]; // 0x7a8(0x08)
	struct FVector OriginLocation; // 0x7b0(0x0c)
	struct FVector TargetLocation; // 0x7bc(0x0c)
	struct FRotator SavedRotation; // 0x7c8(0x0c)
	struct FVector2D DescentStartPos; // 0x7d4(0x08)
	struct FVector2D DescentEndPos; // 0x7dc(0x08)
	char pad_7E4[0x64]; // 0x7e4(0x64)
	struct UBravoHotelWeightMapData* WeightMapInfo; // 0x848(0x08)
	char pad_850[0x28]; // 0x850(0x28)
	bool bUseUpdateBloom; // 0x878(0x01)
	char pad_879[0x3]; // 0x879(0x03)
	float BloomSpeed; // 0x87c(0x04)
	float TargetBloomIntensity; // 0x880(0x04)
	bool IsVisibleStartPoint; // 0x884(0x01)
	bool IsVisibleEndPoint; // 0x885(0x01)
	bool IsVisibleAircraf; // 0x886(0x01)
	bool IsVisibleAircraftLine; // 0x887(0x01)
	bool bWantsToDestroy; // 0x888(0x01)
	enum class EAircraftFlightState State; // 0x889(0x01)
	char pad_88A[0x6]; // 0x88a(0x06)

	void UpdateSplineTimeline(float Value); // Function BravoHotelGame.BravoHotelAircraftFlight.UpdateSplineTimeline // (Final|Native|Protected) // @ game+0x1e62a60
	void OnStartCinematic__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelAircraftFlight.OnStartCinematic__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnScrambled(); // Function BravoHotelGame.BravoHotelAircraftFlight.OnScrambled // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnRep_Scrambled(); // Function BravoHotelGame.BravoHotelAircraftFlight.OnRep_Scrambled // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnMediaState(enum class EMediaPlayerState MediaState); // Function BravoHotelGame.BravoHotelAircraftFlight.OnMediaState // (Final|Native|Public) // @ game+0x1e629e0
	void OnEndCinematic__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelAircraftFlight.OnEndCinematic__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnAudioEmitterUnregistered(); // Function BravoHotelGame.BravoHotelAircraftFlight.OnAudioEmitterUnregistered // (Final|Native|Protected) // @ game+0x1e629c0
	void OnAudioEmitterRegistered(); // Function BravoHotelGame.BravoHotelAircraftFlight.OnAudioEmitterRegistered // (Final|Native|Protected) // @ game+0x1e629a0
	void FinishSplineTimeline(); // Function BravoHotelGame.BravoHotelAircraftFlight.FinishSplineTimeline // (Final|Native|Protected) // @ game+0x1e62980
	void EndCinematic(); // Function BravoHotelGame.BravoHotelAircraftFlight.EndCinematic // (Final|Native|Public) // @ game+0x1e62960
};

// Class BravoHotelGame.BravoHotelAircraftPoint
// Size: 0x328 (Inherited: 0x320)
struct ABravoHotelAircraftPoint : ATargetPoint {
	struct ABravoHotelAircraftPoint* NextPoint; // 0x320(0x08)

	void StartFromHere(struct ABravoHotelAircraftFlight* AircraftFlight, int32_t AircraftCount); // Function BravoHotelGame.BravoHotelAircraftPoint.StartFromHere // (Final|Native|Public|BlueprintCallable) // @ game+0x1e62c80
};

// Class BravoHotelGame.BravoHotelAircraftRouteWidget
// Size: 0x2b0 (Inherited: 0x248)
struct UBravoHotelAircraftRouteWidget : UUserWidget {
	char pad_248[0x60]; // 0x248(0x60)
	struct ABravoHotelAircraftFlight* AirCraftRef; // 0x2a8(0x08)

	void UpdateAircraftPosition(struct UBravoHotelMapCompWidget* MapCompWidget); // Function BravoHotelGame.BravoHotelAircraftRouteWidget.UpdateAircraftPosition // (Final|Native|Public) // @ game+0x1e63650
	bool UpdateAircraftInfo(struct UBravoHotelMapCompWidget* MapCompWidget); // Function BravoHotelGame.BravoHotelAircraftRouteWidget.UpdateAircraftInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1e635c0
	void UpdateAircraftAngle(float Angle); // Function BravoHotelGame.BravoHotelAircraftRouteWidget.UpdateAircraftAngle // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	struct FAirCraftInfo GetAirCraftInfo(); // Function BravoHotelGame.BravoHotelAircraftRouteWidget.GetAirCraftInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e63550
};

// Class BravoHotelGame.BravoHotelAircraftViewer
// Size: 0x3a8 (Inherited: 0x390)
struct ABravoHotelAircraftViewer : APawn {
	struct USpringArmComponent* SpringArm; // 0x390(0x08)
	struct UCameraComponent* Camera; // 0x398(0x08)
	float StartYaw; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)

	void StartDescent(); // Function BravoHotelGame.BravoHotelAircraftViewer.StartDescent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetHideHUDbySequence(bool Hide); // Function BravoHotelGame.BravoHotelAircraftViewer.SetHideHUDbySequence // (Final|Native|Public|BlueprintCallable) // @ game+0x1e63a20
	void OnStartYaw(); // Function BravoHotelGame.BravoHotelAircraftViewer.OnStartYaw // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnRep_StartYaw(); // Function BravoHotelGame.BravoHotelAircraftViewer.OnRep_StartYaw // (Final|Native|Public) // @ game+0x1e63a00
};

// Class BravoHotelGame.BravoHotelAircraftWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelAircraftWidget : UUserWidget {
	char pad_248[0x10]; // 0x248(0x10)

	void OnEndAirCraftBoardingPlayer(); // Function BravoHotelGame.BravoHotelAircraftWidget.OnEndAirCraftBoardingPlayer // (Final|Native|Private) // @ game+0x1e641a0
	void OnAirCraftSetPlayer(float setNum, struct TArray<struct FAirCraftBoardingInfo>& AddAirCraftPassengerList); // Function BravoHotelGame.BravoHotelAircraftWidget.OnAirCraftSetPlayer // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void OnAirCraftDescentPlayerInfo(int32_t AirCraftID, int32_t SeatID, int32_t PlayerId); // Function BravoHotelGame.BravoHotelAircraftWidget.OnAirCraftDescentPlayerInfo // (Final|Native|Private) // @ game+0x1e640a0
	void OnAirCraftDescentPlayer(float DescentNum, int32_t PlayerId); // Function BravoHotelGame.BravoHotelAircraftWidget.OnAirCraftDescentPlayer // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelAliveInfoWidget
// Size: 0x288 (Inherited: 0x248)
struct UBravoHotelAliveInfoWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	struct UCanvasPanel* Canvas_Aircraft; // 0x250(0x08)
	struct UTextBlock* T_BoardingCount; // 0x258(0x08)
	struct UTextBlock* T_MaxBoardingCount; // 0x260(0x08)
	char pad_268[0x8]; // 0x268(0x08)
	struct FKillAliveInfo KillAliveInfo; // 0x270(0x14)
	char pad_284[0x4]; // 0x284(0x04)

	void UpdateTeamCount(); // Function BravoHotelGame.BravoHotelAliveInfoWidget.UpdateTeamCount // (Final|Native|Public) // @ game+0x1e64b50
	void UpdateKillCount(); // Function BravoHotelGame.BravoHotelAliveInfoWidget.UpdateKillCount // (Final|Native|Public) // @ game+0x1e64b30
	void UpdateAssistCount(); // Function BravoHotelGame.BravoHotelAliveInfoWidget.UpdateAssistCount // (Final|Native|Public) // @ game+0x1e64b10
	void UpdateAliveCount(); // Function BravoHotelGame.BravoHotelAliveInfoWidget.UpdateAliveCount // (Final|Native|Public) // @ game+0x1e64af0
	void ShowResuscitation(); // Function BravoHotelGame.BravoHotelAliveInfoWidget.ShowResuscitation // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetKillCount_BP(int32_t NewKillCount); // Function BravoHotelGame.BravoHotelAliveInfoWidget.SetKillCount_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetAssistCount_BP(int32_t NewKillCount); // Function BravoHotelGame.BravoHotelAliveInfoWidget.SetAssistCount_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetAliveTeamCount_BP(int32_t NewAliveTeamCount, int32_t TeamSize); // Function BravoHotelGame.BravoHotelAliveInfoWidget.SetAliveTeamCount_BP // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetAliveCount_BP(int32_t NewAliveCount); // Function BravoHotelGame.BravoHotelAliveInfoWidget.SetAliveCount_BP // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnEndAirCraftBoardingPlayer(); // Function BravoHotelGame.BravoHotelAliveInfoWidget.OnEndAirCraftBoardingPlayer // (Final|Native|Public) // @ game+0x1e64ad0
	void OnAirCraftDescentPlayerInfo(int32_t AirCraftID, int32_t SeatID, int32_t PlayerId); // Function BravoHotelGame.BravoHotelAliveInfoWidget.OnAirCraftDescentPlayerInfo // (Final|Native|Public) // @ game+0x1e649d0
	void Init(); // Function BravoHotelGame.BravoHotelAliveInfoWidget.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x1e649b0
};

// Class BravoHotelGame.BravoHotelAmbientSound
// Size: 0x388 (Inherited: 0x360)
struct ABravoHotelAmbientSound : AAkAmbientSound {
	bool bUseMultiplePositions; // 0x360(0x01)
	char pad_361[0x7]; // 0x361(0x07)
	struct TArray<struct FTransform> RelativeMultiplePositions; // 0x368(0x10)
	bool bUseSynchronization; // 0x378(0x01)
	char pad_379[0x3]; // 0x379(0x03)
	float LoopInterval; // 0x37c(0x04)
	char pad_380[0x8]; // 0x380(0x08)

	void OnEmitterUnregistered(); // Function BravoHotelGame.BravoHotelAmbientSound.OnEmitterUnregistered // (Final|Native|Protected) // @ game+0x1e64d60
	void OnEmitterRegistered(); // Function BravoHotelGame.BravoHotelAmbientSound.OnEmitterRegistered // (Final|Native|Protected) // @ game+0x1e64d40
};

// Class BravoHotelGame.BravoHotelEquippableActor
// Size: 0x868 (Inherited: 0x320)
struct ABravoHotelEquippableActor : AActor {
	struct UEquippableComponent* ReplicatedComponent; // 0x320(0x08)
	struct UStaticMeshComponent* StaticMesh; // 0x328(0x08)
	struct USkeletalMeshComponent* SkelMesh; // 0x330(0x08)
	struct FInventoryItemDetailInfo ItemDetailInfo; // 0x338(0x490)
	float EquipTime_L; // 0x7c8(0x04)
	float EquipTime_R; // 0x7cc(0x04)
	float UnEquipTime; // 0x7d0(0x04)
	float EquipAnimationPlayRate_L; // 0x7d4(0x04)
	float EquipAnimationPlayRate_R; // 0x7d8(0x04)
	float UnequipAnimationPlayRate; // 0x7dc(0x04)
	char bPendingEquip : 1; // 0x7e0(0x01)
	char bPendingUnEquip : 1; // 0x7e0(0x01)
	char pad_7E0_2 : 6; // 0x7e0(0x01)
	char pad_7E1[0x27]; // 0x7e1(0x27)
	struct FName OverrideAttachSocketName; // 0x808(0x08)
	struct FName OverrideAttachSocketName_Backpack; // 0x810(0x08)
	struct FAnimSlot OverrideEquipAnimMontage_StandSlot; // 0x818(0x10)
	struct FAnimSlot OverrideEquipAnimMontage_ProneSlot; // 0x828(0x10)
	struct FAnimSlot OverrideUnequipAnimMontage_StandSlot; // 0x838(0x10)
	struct FAnimSlot OverrideUnequipAnimMontage_ProneSlot; // 0x848(0x10)
	char pad_858[0x8]; // 0x858(0x08)
	char bIsEquipped : 1; // 0x860(0x01)
	char pad_860_1 : 7; // 0x860(0x01)
	char pad_861[0x7]; // 0x861(0x07)

	float OnUnEquip(bool bPlayUnequipAnimation); // Function BravoHotelGame.BravoHotelEquippableActor.OnUnEquip // (Native|Public) // @ game+0x1f143f0
	void OnRep_PendingUnEquip(); // Function BravoHotelGame.BravoHotelEquippableActor.OnRep_PendingUnEquip // (Native|Public) // @ game+0x11cd6c0
	void OnRep_PendingEquip(); // Function BravoHotelGame.BravoHotelEquippableActor.OnRep_PendingEquip // (Native|Public) // @ game+0x1f143d0
	void OnRep_IsEquipped(); // Function BravoHotelGame.BravoHotelEquippableActor.OnRep_IsEquipped // (Native|Public) // @ game+0x1f143b0
	float OnEquip(); // Function BravoHotelGame.BravoHotelEquippableActor.OnEquip // (Native|Public) // @ game+0x1f14370
	void K2_OnUnEquip(); // Function BravoHotelGame.BravoHotelEquippableActor.K2_OnUnEquip // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnEquip(); // Function BravoHotelGame.BravoHotelEquippableActor.K2_OnEquip // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool IsPendingUnequip(); // Function BravoHotelGame.BravoHotelEquippableActor.IsPendingUnequip // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f14340
	bool IsPendingEquip(); // Function BravoHotelGame.BravoHotelEquippableActor.IsPendingEquip // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f14310
	struct ACharacter* GetOwingPawn(); // Function BravoHotelGame.BravoHotelEquippableActor.GetOwingPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f142e0
	struct FName GetOverrideAttachSocketName(); // Function BravoHotelGame.BravoHotelEquippableActor.GetOverrideAttachSocketName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f142b0
	struct FInventoryItemInfo GetItemInfo_Const(); // Function BravoHotelGame.BravoHotelEquippableActor.GetItemInfo_Const // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f14170
	bool GetItemInfo(struct FInventoryItemInfo& OutItemInfo, struct FInventoryItemDetailInfo& OutItemDetailInfo); // Function BravoHotelGame.BravoHotelEquippableActor.GetItemInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f13ff0
	int32_t GetEquippedSlotIndex(); // Function BravoHotelGame.BravoHotelEquippableActor.GetEquippedSlotIndex // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f13fc0
	void AttachToWeaponBySlot(int8_t NewSlotIndex); // Function BravoHotelGame.BravoHotelEquippableActor.AttachToWeaponBySlot // (Final|Native|Public) // @ game+0x1f13f40
};

// Class BravoHotelGame.BravoHotelWeaponBase
// Size: 0x1bd0 (Inherited: 0x868)
struct ABravoHotelWeaponBase : ABravoHotelEquippableActor {
	char pad_868[0x1290]; // 0x868(0x1290)
	struct UWeaponReplicatedComponent* WeaponReplicatedComponent; // 0x1af8(0x08)
	struct UClientSkeletalMeshComponent* SkelMesh1P; // 0x1908(0x08)
	struct FDataTableRowHandle WeaponDataTable; // 0x1a58(0x10)
	struct TArray<struct FInventoryItemInfo> AttachmentItems; // 0xba0(0x10)
	struct TArray<enum class EWeaponAttachmentItem> AttachmentItemEnums; // 0xac8(0x10)
	struct UAnimSequence* IdleHandAnim_3p; // 0x890(0x08)
	struct UAnimSequence* ProneHandAnim_3p; // 0xc50(0x08)
	struct UAnimSequence* IdleHandAnim_1p; // 0x1ab8(0x08)
	struct UAnimSequence* IdleHandAnim_Crouch; // 0xcd0(0x08)
	struct UAnimSequence* IdleHandAnim_InVehicle; // 0xb70(0x08)
	struct UAnimSequence* AOSAnim; // 0xac0(0x08)
	struct UAnimSequence* ADSAnim; // 0x19b8(0x08)
	char pad_1B70[0x20]; // 0x1b70(0x20)
	struct UAnimSequence* CollideUpsideAnim; // 0x1b90(0x08)
	struct UAnimSequence* CollideDownsideAnim; // 0xab8(0x08)
	struct UAnimSequence* CollideProneAnim; // 0x19b0(0x08)
	bool bAlwaysMaxCollideAlpha; // 0x19d0(0x01)
	bool bUseSpecialProneAnimation; // 0xb98(0x01)
	bool bDisableHandAnimDuringCollide; // 0x964(0x01)
	bool bDisableHandAnimDuringProneCollide; // 0xad9(0x01)
	struct UBlendSpaceBase* SpecialProneAnimation; // 0x1a48(0x08)
	struct UBlendSpaceBase* SpecialProneAnimation_1P; // 0xab0(0x08)
	bool bUseSpecialSprintAnimation; // 0xc4c(0x01)
	struct UBlendSpaceBase* SpecialSprintAnimation; // 0xc40(0x08)
	struct UAnimSequence* SpecialSprintReadyAnimation; // 0x1aa8(0x08)
	bool bUseSpecialCrouchSprintAnimation; // 0x9c1(0x01)
	struct UBlendSpaceBase* SpecialCrouchSprintAnimation; // 0x1af0(0x08)
	struct UAnimSequence* SprintAnim_1P; // 0x19c8(0x08)
	struct UAnimSequence* Anim_SecondaryWeapon_Stand_Idle; // 0x8a0(0x08)
	struct UAnimSequence* Anim_SecondaryWeapon_Crouch_Idle; // 0xc58(0x08)
	bool bUseOneHandSprintAnimation; // 0x1a70(0x01)
	bool bDisableHandAnimDuringSprint; // 0x9c0(0x01)
	float AimOffsetMinY_TPP; // 0xc00(0x04)
	float AimOffsetMaxY_TPP; // 0x9b0(0x04)
	bool bHideMagazineWhenEmpty; // 0x1b98(0x01)
	bool bIsTrueDamageWeapon; // 0xb30(0x01)
	struct FBravoHotelWeaponInfo WeaponInfo; // 0xcd8(0xb20)
	struct FWeaponBaseData WeaponBaseData; // 0x17f8(0x110)
	struct UParticleSystemComponent* ShiningEffectComponent; // 0xa70(0x08)
	struct UParticleSystem* ShiningEffect; // 0x1b58(0x08)
	float LastFireTime; // 0x8a8(0x04)
	int32_t magazine; // 0x960(0x04)
	int32_t BackPackInTotalAmmoCount; // 0x19c4(0x04)
	int32_t MagazineCapacity; // 0x904(0x04)
	float UI_CurrentDamage; // 0x898(0x04)
	int32_t UI_CurrentRPM; // 0x1910(0x04)
	bool bIsPerkWeapon; // 0x8ac(0x01)
	struct FName PerkIndex; // 0x1a9c(0x08)
	bool bIsNoDamageWeapon; // 0x1b00(0x01)
	bool ProhibitedforUseInVehicle; // 0x19c0(0x01)
	struct FMulticastInlineDelegate OnFireDelegate; // 0x8f0(0x10)
	struct UAnimMontage* CurrentPlayerMontage_1P; // 0x1b08(0x08)
	struct UAnimMontage* CurrentPlayerMontage_3P; // 0x1a68(0x08)
	struct UAnimMontage* CurrentWeaponMontage_1P; // 0xb90(0x08)
	struct UAnimMontage* CurrentWeaponMontage_3P; // 0xb88(0x08)
	enum class EWeaponState CurrentMontageState; // 0x1a50(0x01)
	float PausedMontagePosition; // 0xb34(0x04)
	struct FBravoHotelAttachmentInfo AttachmentInfoModifier; // 0x1968(0x48)
	struct FTimerHandle TimerHandle_UpdateActorHiddenInGame_TPPOnly; // 0x908(0x08)
	struct TMap<enum class EWeaponAttachmentItem, struct FVector> IdlePositionDeltaArray_FPP; // 0x1918(0x50)
	struct TMap<enum class EWeaponAttachmentItem, struct FVector> AOSPositionDeltaArray_FPP; // 0xbb0(0x50)
	float AOSPositionInterpSpeed_FPP; // 0x1b50(0x04)
	bool bVisibleAbsolutely; // 0x1b99(0x01)

	void UpdateActorHiddenInGame_TPPOnly(); // Function BravoHotelGame.BravoHotelWeaponBase.UpdateActorHiddenInGame_TPPOnly // (Final|Native|Public) // @ game+0x2023d40
	void StopCurrentPlayingMontage(); // Function BravoHotelGame.BravoHotelWeaponBase.StopCurrentPlayingMontage // (Final|Native|Protected) // @ game+0x2023d20
	void StopAllAction(); // Function BravoHotelGame.BravoHotelWeaponBase.StopAllAction // (Native|Public) // @ game+0x2023d00
	void SetWeaponVisibilityAbsolutely(bool bNewVisibleAbsolutely); // Function BravoHotelGame.BravoHotelWeaponBase.SetWeaponVisibilityAbsolutely // (Final|Native|Public|BlueprintCallable) // @ game+0x2023c70
	void SetWeaponMaterialFov(float TargetFOV); // Function BravoHotelGame.BravoHotelWeaponBase.SetWeaponMaterialFov // (Native|Public) // @ game+0x2023bf0
	void SetFPSMode(bool bFPS); // Function BravoHotelGame.BravoHotelWeaponBase.SetFPSMode // (Native|Public|BlueprintCallable) // @ game+0x2023b60
	void SetADSPostProcessEffects(); // Function BravoHotelGame.BravoHotelWeaponBase.SetADSPostProcessEffects // (Final|Native|Public) // @ game+0x2023b40
	void SetADSMode(bool bADS); // Function BravoHotelGame.BravoHotelWeaponBase.SetADSMode // (Native|Public|BlueprintCallable) // @ game+0x2023ab0
	void ServerBackPackInTotalAmmoCount(int32_t nCount); // Function BravoHotelGame.BravoHotelWeaponBase.ServerBackPackInTotalAmmoCount // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x20239f0
	bool RemoveAttachment(enum class EWeaponAttachmentType RemoveAttachmentType); // Function BravoHotelGame.BravoHotelWeaponBase.RemoveAttachment // (Native|Public|BlueprintCallable) // @ game+0x2023960
	void OnRep_Magazine(int32_t LastValue); // Function BravoHotelGame.BravoHotelWeaponBase.OnRep_Magazine // (Native|Public) // @ game+0x20238d0
	void OnFireProjectile__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelWeaponBase.OnFireProjectile__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnChangeWeaponAttachmentsDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelWeaponBase.OnChangeWeaponAttachmentsDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	bool IsPerkWeapon(); // Function BravoHotelGame.BravoHotelWeaponBase.IsPerkWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2023550
	bool IsNoDamageWeapon(); // Function BravoHotelGame.BravoHotelWeaponBase.IsNoDamageWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2023530
	bool IsFPSMode(); // Function BravoHotelGame.BravoHotelWeaponBase.IsFPSMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2023510
	bool IsEquippableAttachmentEmptySlot(struct FInventoryItemInfo NewAttachmentItemInfo); // Function BravoHotelGame.BravoHotelWeaponBase.IsEquippableAttachmentEmptySlot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2023420
	bool IsEquippableAttachmentByType(enum class EWeaponAttachmentType AttachmentType, enum class EWeaponAttachmentItem AttachmentItem); // Function BravoHotelGame.BravoHotelWeaponBase.IsEquippableAttachmentByType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2023350
	bool IsEquippableAttachment(struct FInventoryItemInfo NewAttachmentItemInfo); // Function BravoHotelGame.BravoHotelWeaponBase.IsEquippableAttachment // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2023260
	bool IsEnablePerkWeapon(); // Function BravoHotelGame.BravoHotelWeaponBase.IsEnablePerkWeapon // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2023230
	void InitializeWeapon(struct FInventoryItemInfo NewItemInfo); // Function BravoHotelGame.BravoHotelWeaponBase.InitializeWeapon // (Native|Public|BlueprintCallable) // @ game+0x2023140
	enum class EWeaponType GetWeaponType(); // Function BravoHotelGame.BravoHotelWeaponBase.GetWeaponType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2023110
	struct FBravoHotelWeaponInfo GetWeaponInfo(); // Function BravoHotelGame.BravoHotelWeaponBase.GetWeaponInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x20230d0
	struct FWeaponBaseData GetWeaponBaseData(); // Function BravoHotelGame.BravoHotelWeaponBase.GetWeaponBaseData // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022f40
	enum class EWeaponAnimationType GetWeaponAnimationType(); // Function BravoHotelGame.BravoHotelWeaponBase.GetWeaponAnimationType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022f10
	int32_t GetUICurrentRPM(); // Function BravoHotelGame.BravoHotelWeaponBase.GetUICurrentRPM // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022ef0
	float GetUICurrentDamage(); // Function BravoHotelGame.BravoHotelWeaponBase.GetUICurrentDamage // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022ed0
	struct FBravoHotelReloadInfo GetReloadInfo(); // Function BravoHotelGame.BravoHotelWeaponBase.GetReloadInfo // (Native|Public|Const) // @ game+0x2022e90
	int32_t GetMagazineInBackPack(); // Function BravoHotelGame.BravoHotelWeaponBase.GetMagazineInBackPack // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022e60
	struct FString GetIdentityName(); // Function BravoHotelGame.BravoHotelWeaponBase.GetIdentityName // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2022e10
	float GetCoolTimeRatePerkWeapon(); // Function BravoHotelGame.BravoHotelWeaponBase.GetCoolTimeRatePerkWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022de0
	enum class EWeaponAttachmentUseType GetAttachmentSlotUseType(enum class EWeaponAttachmentType AttachmentType); // Function BravoHotelGame.BravoHotelWeaponBase.GetAttachmentSlotUseType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2022c20
	bool GetAttachmentInfo(enum class EWeaponAttachmentType AttachmentType, struct FInventoryItemInfo& OutItemInfo, struct FInventoryItemDetailInfo& OutItemDetailInfo); // Function BravoHotelGame.BravoHotelWeaponBase.GetAttachmentInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x2022750
	int32_t GetAmmoPerkWeapon(); // Function BravoHotelGame.BravoHotelWeaponBase.GetAmmoPerkWeapon // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022720
	struct FName GetAmmoName(); // Function BravoHotelGame.BravoHotelWeaponBase.GetAmmoName // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x20226e0
	float GetADSFOV(); // Function BravoHotelGame.BravoHotelWeaponBase.GetADSFOV // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x20226a0
	void FPSK_SetWeaponVisibility(bool bNewVisibility); // Function BravoHotelGame.BravoHotelWeaponBase.FPSK_SetWeaponVisibility // (Native|Public|BlueprintCallable) // @ game+0x20225f0
	void FPSK_SetWeaponCastShadow(bool bNewCastShadow, bool bNewCastHiddenShadow); // Function BravoHotelGame.BravoHotelWeaponBase.FPSK_SetWeaponCastShadow // (Native|Public|BlueprintCallable) // @ game+0x2022520
	void FireWeapon(); // Function BravoHotelGame.BravoHotelWeaponBase.FireWeapon // (Native|Public|BlueprintCallable) // @ game+0x2022680
	void DoProne(); // Function BravoHotelGame.BravoHotelWeaponBase.DoProne // (Native|Public) // @ game+0x20199e0
	void ClientSetMagazine(int32_t NewMagazine); // Function BravoHotelGame.BravoHotelWeaponBase.ClientSetMagazine // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f94890
	void ChangeAbilities(); // Function BravoHotelGame.BravoHotelWeaponBase.ChangeAbilities // (Native|Public|BlueprintCallable) // @ game+0x2022500
	bool CanSprint(); // Function BravoHotelGame.BravoHotelWeaponBase.CanSprint // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x20224d0
	bool CanMeleeAttack(); // Function BravoHotelGame.BravoHotelWeaponBase.CanMeleeAttack // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x20224a0
	bool CanFire(); // Function BravoHotelGame.BravoHotelWeaponBase.CanFire // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022470
	bool CanAOS(); // Function BravoHotelGame.BravoHotelWeaponBase.CanAOS // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022440
	bool CanADS(); // Function BravoHotelGame.BravoHotelWeaponBase.CanADS // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022410
	bool AttachToWeaponStaticMesh(struct FName SocketName); // Function BravoHotelGame.BravoHotelWeaponBase.AttachToWeaponStaticMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x2022380
	bool AttachToWeaponSkeletalMesh(struct FName SocketName); // Function BravoHotelGame.BravoHotelWeaponBase.AttachToWeaponSkeletalMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x20222f0
	void ApplyAsyncLoadedData(); // Function BravoHotelGame.BravoHotelWeaponBase.ApplyAsyncLoadedData // (Native|Public) // @ game+0x20222d0
	bool AddAttachment(struct FInventoryItemInfo& NewAttachmentItemInfo); // Function BravoHotelGame.BravoHotelWeaponBase.AddAttachment // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x20221d0
	void ActivateShiningEffect(bool bActive); // Function BravoHotelGame.BravoHotelWeaponBase.ActivateShiningEffect // (Final|Native|Public) // @ game+0x2022140
};

// Class BravoHotelGame.BravoHotelAmplifier
// Size: 0x1bf0 (Inherited: 0x1bd0)
struct ABravoHotelAmplifier : ABravoHotelWeaponBase {
	char pad_1BD0[0x4]; // 0x1bd0(0x04)
	float AmplifierLength; // 0x1bd4(0x04)
	struct FTimerHandle TimerHandle_OnStartEffectEvent; // 0x1bd8(0x08)
	struct TArray<struct ABravoHotelCharacter*> DetectedCharacters; // 0x1be0(0x10)

	void ServerValidateAmplifierEffect(struct ABravoHotelCharacter* TargetCharacter); // Function BravoHotelGame.BravoHotelAmplifier.ServerValidateAmplifierEffect // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1e651f0
	void OnStartAmplifier(); // Function BravoHotelGame.BravoHotelAmplifier.OnStartAmplifier // (Final|Native|Public|BlueprintCallable) // @ game+0x1e651d0
	void OnPostEventAtLocationEvent(struct FString EventKey, struct FVector& Location); // Function BravoHotelGame.BravoHotelAmplifier.OnPostEventAtLocationEvent // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void OnDeactiveAmplifier(); // Function BravoHotelGame.BravoHotelAmplifier.OnDeactiveAmplifier // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnClickedAmplifier(); // Function BravoHotelGame.BravoHotelAmplifier.OnClickedAmplifier // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnActiveAmplifier(); // Function BravoHotelGame.BravoHotelAmplifier.OnActiveAmplifier // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	float GetAmplifierLength(); // Function BravoHotelGame.BravoHotelAmplifier.GetAmplifierLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e651a0
};

// Class BravoHotelGame.BravoHotelAnimInstance
// Size: 0xc80 (Inherited: 0x270)
struct UBravoHotelAnimInstance : UAnimInstance {
	char pad_270[0x1c0]; // 0x270(0x1c0)
	struct ABravoHotelCharacter* Character; // 0x430(0x08)
	char pad_438[0x7c0]; // 0x438(0x7c0)
	struct UBravoHotelCharacterMovementComponent* CharacterMovementComponent; // 0xbf8(0x08)
	char pad_C00[0x2d]; // 0xc00(0x2d)
	bool bIsAccelerating; // 0xc2d(0x01)
	float ParachuteInputForward; // 0x418(0x04)
	float ParachuteInputRight; // 0x3e0(0x04)
	bool bIsParachuteLanding; // 0x324(0x01)
	float Direction; // 0x4fc(0x04)
	bool bIsLocallyPlaying; // 0xc2f(0x01)
	bool bIsFreeLook; // 0xaca(0x01)
	bool bIsProne; // 0xba8(0x01)
	bool bIsCrouch; // 0x2d4(0x01)
	bool bIsMelee; // 0x490(0x01)
	bool bIsJumpAttack; // 0x4f8(0x01)
	bool bMoving; // 0x489(0x01)
	bool bIsClimbing; // 0x414(0x01)
	bool bIsKnockbackRolling; // 0x544(0x01)
	int32_t IdleNum; // 0x520(0x04)
	float CastingRemainTime; // 0x570(0x04)
	bool bMovedWhileMontage; // 0x4d1(0x01)
	bool bIsFallingOrLanding; // 0xb48(0x01)
	bool bIsSprintStop; // 0x658(0x01)
	bool bUseSprintAnimation; // 0x269(0x01)
	bool bUseSpecialSprintAnimation; // 0xbc8(0x01)
	bool bUseSpecialCrouchSprintAnimation; // 0x384(0x01)
	bool bUseSpecialProneAnimation; // 0x40c(0x01)
	bool bUseFallingAnimation; // 0xb75(0x01)
	bool bUseVehicleStandAnimation; // 0x630(0x01)
	char pad_C55[0x24]; // 0xc55(0x24)
	bool bIsAirWalking; // 0xc79(0x01)
	bool bIsAmplifier; // 0x4d5(0x01)
	bool bIsCriticalTime; // 0xc08(0x01)
	bool bIsResuscitating; // 0x3fc(0x01)
	bool bIsInVehicle; // 0x312(0x01)
	bool bIsVehicleDriver; // 0x311(0x01)
	bool bEnableDriverIK_HandL; // 0xc49(0x01)
	bool bEnableDriverIK_HandR; // 0xac9(0x01)
	float DriverAimOffsetAlpha; // 0x3e4(0x04)
	struct UAnimSequence* VehicleUnarmedAnimIdle; // 0x550(0x08)
	struct UAnimSequence* VehicleUnarmedAnimStand; // 0xb60(0x08)
	struct UAnimSequence* VehicleAnimIdle; // 0xb00(0x08)
	struct UAnimSequence* VehicleAnimAOS; // 0x660(0x08)
	struct UAnimSequence* VehicleAnimIdleForMontagePlay; // 0x498(0x08)
	struct UBlendSpaceBase* VehicleAimingAimOffset; // 0x360(0x08)
	struct UBlendSpaceBase* VehicleIdleAimOffset; // 0x330(0x08)
	struct UBlendSpaceBase* VehicleUnderThrowAimOffset; // 0x560(0x08)
	struct UBlendSpaceBase* VehicleAimBlending; // 0x650(0x08)
	struct UAnimSequence* VehicleHandlingIdleAnim; // 0xc30(0x08)
	struct UAnimSequence* VehicleHandlingLeftAnim; // 0x598(0x08)
	struct UAnimSequence* VehicleHandlingRightAnim; // 0xc00(0x08)
	bool IsVehicleAimingMotion; // 0xc38(0x01)
	float VehicleADSBlendTime; // 0xb70(0x04)
	float VehicleADSBlendDirectTime; // 0xc58(0x04)
	float VehicleAimingBlendTime; // 0x438(0x04)
	float VehicleAimingBlendDirectTime; // 0xbc4(0x04)
	bool bUseVehicleAimingAimOffset; // 0x4d4(0x01)
	float VehicleAOSBlendingAngle; // 0xb30(0x04)
	float VehicleAOSBlendingPlayRate; // 0x3a4(0x04)
	bool bIsHandlebar; // 0xb81(0x01)
	struct UBlendSpaceBase* BS_HandlebarVehicle; // 0xc50(0x08)
	float HandlebarDirection; // 0xb6c(0x04)
	float HandlebarSpeed; // 0xaa8(0x04)
	bool bIsLeftSteering; // 0x638(0x01)
	bool bIsRightSteering; // 0x278(0x01)
	float LeftSteeringPlayRate; // 0x3b4(0x04)
	float RightSteeringPlayRate; // 0x26c(0x04)
	bool bIsIdleSteering; // 0x4b0(0x01)
	bool IsLadderAnim; // 0x618(0x01)
	bool IsPawnOnLadder; // 0x5fd(0x01)
	bool IsLadderSliding; // 0x450(0x01)
	bool LadderIdleMotion; // 0x3a2(0x01)
	bool LadderIdleIsLeft; // 0xac8(0x01)
	float LadderBlendTime; // 0x2e0(0x04)
	float EvaluateAnimSequence; // 0xbb4(0x04)
	struct UAnimSequence* AS_Ladder_Up_Loop; // 0xae0(0x08)
	struct FVector LadderIKLocation_HandL; // 0x4d8(0x0c)
	struct FVector LadderIKLocation_HandR; // 0x354(0x0c)
	struct FVector LadderIKLocation_FootL; // 0x388(0x0c)
	struct FVector LadderIKLocation_FootR; // 0x5a4(0x0c)
	bool bEnableLadderIK_HandL; // 0x458(0x01)
	bool bEnableLadderIK_HandR; // 0xc2c(0x01)
	bool bEnableLadderIK_FootL; // 0x5fe(0x01)
	bool bEnableLadderIK_FootR; // 0xbe4(0x01)
	struct FVector2D AimOffset; // 0xac0(0x08)
	bool bEnableAimOffset; // 0x270(0x01)
	bool bEnableSprintAimOffset; // 0x340(0x01)
	bool bIsAimingDownside; // 0x488(0x01)
	float DownsideBlendTime; // 0xb34(0x04)
	float AimOffsetInterpSpeed; // 0x5e0(0x04)
	bool bIsPlayingWeaponMontage; // 0x61a(0x01)
	bool bIsPlayingCollideWeaponMontage; // 0x2c4(0x01)
	bool bIsADS; // 0x294(0x01)
	struct UAnimSequence* CollideUpsideAnim; // 0x4f0(0x08)
	struct UAnimSequence* CollideDownsideAnim; // 0x4a0(0x08)
	struct UAnimSequence* CollideProneAnim; // 0x5d8(0x08)
	bool bIsWeaponColliding; // 0x3a0(0x01)
	enum class EWeaponType WeaponType; // 0x268(0x01)
	enum class EWeaponAnimationType WeaponAnimType; // 0x55c(0x01)
	enum class ESimpleWeaponAnimationType SimpleWeaponAnimType; // 0x2c5(0x01)
	bool bIsEquippingThrowWeapon; // 0x451(0x01)
	bool bIsProneColliding; // 0x604(0x01)
	struct UAnimSequence* WeaponHandAnim; // 0x648(0x08)
	struct UAnimSequence* WeaponHandAnim_Crouch; // 0x530(0x08)
	struct UAnimSequence* WeaponHandAnim_Prone; // 0x5b8(0x08)
	struct UAnimSequence* WeaponHandAnim_InVehicle; // 0x2b8(0x08)
	float WeaponHandAnimAlpha; // 0xc40(0x04)
	float AOS_Weight; // 0x65c(0x04)
	float AOS_Weight_InterpSpeed; // 0x3b8(0x04)
	struct UAnimSequence* CurrentAOSAnim; // 0xbd8(0x08)
	struct UAnimSequence* CurrentADSAnim; // 0x378(0x08)
	struct UAnimSequence* SecondaryWeapon_Stand_Idle; // 0x590(0x08)
	struct UAnimSequence* SecondaryWeapon_Crouch_Idle; // 0x2d8(0x08)
	enum class EThrowingWeaponState ThrowingWeaponState; // 0x428(0x01)
	enum class EGrenadeThrowingType GrenadeThrowingType; // 0xbb0(0x01)
	struct UAnimSequence* ThrowingWeapon_Stand_Idle; // 0x400(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_Idle_Under; // 0x5c8(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_PinOff_Idle; // 0xba0(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_PinOff_Idle_Additive; // 0xb58(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_ThrowUnder_Idle; // 0x670(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_ThrowUnder_Idle_Additive; // 0x288(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_Idle; // 0x3f0(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_PinOff_Idle; // 0xb78(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_PinOff_Idle_Additive; // 0x668(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_ThrowUnder_Idle; // 0x2a8(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_ThrowUnder_Idle_Additive; // 0x368(0x08)
	struct UAnimSequence* ThrowingWeapon_Prone_Idle; // 0x580(0x08)
	struct UAnimSequence* ThrowingWeapon_Prone_PinOff_Idle_ThrowOver; // 0x298(0x08)
	struct UAnimSequence* ThrowingWeapon_Prone_PinOff_Idle_ThrowUnder; // 0xb28(0x08)
	struct UAnimSequence* MeleeWeapon_Stand_Idle; // 0x4a8(0x08)
	struct UAnimSequence* MeleeWeapon_Crouch_Idle; // 0x510(0x08)
	struct UAnimSequence* MeleeWeapon_Prone_Idle; // 0x4b8(0x08)
	float BS_SprintSpeed; // 0x328(0x04)
	float BS_IdleSpeed; // 0x574(0x04)
	float BS_SprintSpeedLimit; // 0x3ec(0x04)
	float FallSpeed; // 0x290(0x04)
	float AimOffsetBlendTime; // 0x30c(0x04)
	float UseSprintAnimBlendTime; // 0xacc(0x04)
	float WeaponCollideAlpha; // 0x424(0x04)
	float WeaponMontageCollideAlpha; // 0x3d0(0x04)
	float AimOffsetAlpha; // 0x34c(0x04)
	float DoorAnimAlpha; // 0x308(0x04)
	float FootPosition; // 0x48c(0x04)
	float FootPositionDirection; // 0x620(0x04)
	bool bUseRightFootAnimation; // 0x31c(0x01)
	float LeanRotation; // 0xbb8(0x04)
	float LeanAcceleration; // 0x578(0x04)
	bool bLockRotation; // 0x4d3(0x01)
	enum class EMovementDirection MovementDirection; // 0xb68(0x01)
	struct UBlendSpaceBase* SpecialSprintAnimation; // 0x480(0x08)
	struct UBlendSpaceBase* SpecialCrouchSprintAnimation; // 0xa98(0x08)
	struct UAnimSequence* SpecialSprintReadyAnimation; // 0xc70(0x08)
	struct UBlendSpaceBase* SpecialProneAnimation; // 0x678(0x08)
	struct FBravoHotelFallingAnimParameters FallingAnimParams; // 0xc10(0x0c)
	float LeanInAir; // 0x2c0(0x04)
	struct UAnimSequence* JumpAnimSequence_Unarmed; // 0x3c0(0x08)
	struct UAnimSequence* JumpAnimSequence_Rifle; // 0x3d8(0x08)
	struct UAnimSequence* JumpAnimSequence_Pistol; // 0x338(0x08)
	struct UAnimSequence* JumpAnim_Unarmed_NotMoving; // 0x688(0x08)
	struct UAnimSequence* JumpAnim_Unarmed_Moving; // 0x538(0x08)
	struct UAnimSequence* JumpAnim_Rifle_NotMoving; // 0x478(0x08)
	struct UAnimSequence* JumpAnim_Rifle_Moving; // 0x2f0(0x08)
	struct UAnimSequence* JumpAnim_Pistol_NotMoving; // 0x610(0x08)
	struct UAnimSequence* JumpAnim_Pistol_Moving; // 0xbd0(0x08)
	struct UAnimSequence* ToCriticalTime; // 0x4c8(0x08)
	struct UAnimSequence* CriticalTimeIdle; // 0x3c8(0x08)
	struct UAnimSequence* Resuscitated; // 0xbe8(0x08)
	bool bUnderWaterSurface; // 0x568(0x01)
	float SwimDirection; // 0x634(0x04)
	struct FRotator FinalSwimRotation; // 0x5f0(0x0c)
	struct FTurnAnims TurnInPlaceInfo; // 0x698(0x400)
	float TurnInPlaceRepeatTriggerTime; // 0x408(0x04)
	float TurnInPlaceRepeatTriggerAngle; // 0x4c4(0x04)
	float TurnInPlaceRepeatTime; // 0x680(0x04)
	float TurnInPlaceRepeatAngle; // 0xaec(0x04)
	float TurnInPlaceRepeatTimeCrouch; // 0x27c(0x04)
	float TurnInPlaceRepeatTimeProne; // 0xab0(0x04)
	float TurnInPlaceBlendInTime; // 0x518(0x04)
	float TurnInPlaceBlendOutTime; // 0x52c(0x04)
	bool bTurnInPlaceRepeatCheat; // 0xb80(0x01)
	struct UParticleSystem* ParticleSystem_WaterDust; // 0xc60(0x08)
	bool bUsePredictedAirTime; // 0xad8(0x01)
	bool bHitPredictedInAirTime; // 0x3e8(0x01)
	float HitPredictedZ; // 0x380(0x04)
	float WaterSurfaceHeight; // 0x454(0x04)
	float SwimTransformAlpha; // 0x690(0x04)
	float SprintReadyEnteredTime; // 0x410(0x04)
	bool bCanEnterSprintReadyState; // 0xc1c(0x01)
	float DebuffAlpha_Burn_FullBody; // 0xb20(0x04)
	float DebuffAlpha_Burn_UpperBody; // 0x344(0x04)
	float DebuffAlpha_Hurt_Additive; // 0xb4c(0x04)
	float DebuffAlpha_Hurt_Layered; // 0x3b0(0x04)
	float Hurt_Additive_RightHandAlpha; // 0xbbc(0x04)
	float ExplicitTime_FallingAnim; // 0x274(0x04)
	bool bIsUnarmedHeadBanging; // 0xaf0(0x01)
	float HeadBangingAlpha; // 0x4e4(0x04)
	int32_t HeadBangingAnimIndex; // 0x608(0x04)
	float HeadBangingCurrentPlayRate; // 0x3f8(0x04)
	float DescentForwardPicthMin; // 0x5c4(0x04)
	float DescentIdlePicthMin; // 0x350(0x04)
	struct UAnimMontage* DescentBackwardMontage; // 0x628(0x08)
	float BS_DescentRotationInput; // 0x588(0x04)
	float RightArmAnimAlpha; // 0x548(0x04)
	float ThrowWeaponCookingAnimAlpha; // 0x528(0x04)
	float EquipAnimAlpha; // 0x43c(0x04)
	float UpperBodySlotAlpha; // 0xbf4(0x04)
	struct FVector2D CharacterRotationCorrectionValueByLeanState; // 0xaf4(0x08)

	bool Transition_Swim_ToMovementModeConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Swim_ToMovementModeConduit // (Final|Native|Public) // @ game+0x1e68920
	bool Transition_Swim_NotMovingToMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Swim_NotMovingToMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e688f0
	bool Transition_Swim_MovingToNotMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Swim_MovingToNotMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e688c0
	bool Transition_StandToProne_ToProne_4(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_StandToProne_ToProne_4 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67990
	bool Transition_StandToProne_ToProne_3(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_StandToProne_ToProne_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e681a0
	bool Transition_StandToProne_ToProne_2(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_StandToProne_ToProne_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e680e0
	bool Transition_StandToProne_IdleProne_ToSprintProne(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_StandToProne_IdleProne_ToSprintProne // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e680b0
	bool Transition_StandToCrouch_ToCrouch_4(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_StandToCrouch_ToCrouch_4 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67990
	bool Transition_StandToCrouch_ToCrouch_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_StandToCrouch_ToCrouch_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67030
	bool Transition_StandToCrouch_ToCrouch_2(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_StandToCrouch_ToCrouch_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67ff0
	bool Transition_Stand_ToStandToProne(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_ToStandToProne // (Final|Native|Public) // @ game+0x1e671e0
	bool Transition_Stand_ToStandToCrouch(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_ToStandToCrouch // (Final|Native|Public) // @ game+0x1e68890
	bool Transition_Stand_ToMoveToLadder(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_ToMoveToLadder // (Final|Native|Public) // @ game+0x1e68860
	bool Transition_Stand_ToCrouch_4(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_ToCrouch_4 // (Final|Native|Public) // @ game+0x1e68830
	bool Transition_Stand_ToCrouch_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_ToCrouch_3 // (Final|Native|Public) // @ game+0x1e68800
	bool Transition_Stand_ToCrouch_2(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_ToCrouch_2 // (Final|Native|Public) // @ game+0x1e687d0
	bool Transition_Stand_StoppingToNotMoving_3(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_StoppingToNotMoving_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e68710
	bool Transition_Stand_StoppingToNotMoving_2(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_StoppingToNotMoving_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e68650
	bool Transition_Stand_StoppingToMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_StoppingToMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e68620
	bool Transition_Stand_SprintStoppingToNotMoving(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_SprintStoppingToNotMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e68560
	bool Transition_Stand_SprintStoppingToMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_SprintStoppingToMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e670f0
	bool Transition_Stand_SprintReadyToMoving_6(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_SprintReadyToMoving_6 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e68530
	bool Transition_Stand_SprintReadyToMoving_5(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_SprintReadyToMoving_5 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e68500
	bool Transition_Stand_SprintReadyToMoving_4(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_SprintReadyToMoving_4 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e684d0
	bool Transition_Stand_SprintReadyToMoving_3(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_SprintReadyToMoving_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e68410
	bool Transition_Stand_SprintReadyToMoving_2(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_SprintReadyToMoving_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e68350
	bool Transition_Stand_NotMovingToMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_NotMovingToMoving // (Final|Native|Public) // @ game+0x1e68320
	bool Transition_Stand_MovingToStopping(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_MovingToStopping // (Final|Native|Public) // @ game+0x1e682f0
	bool Transition_Stand_MovingToSprintStopping(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_MovingToSprintStopping // (Final|Native|Public) // @ game+0x1e682c0
	bool Transition_Stand_MovingToSprintReady(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_MovingToSprintReady // (Final|Native|Public) // @ game+0x1e68290
	bool Transition_Stand_MovingToNotMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Stand_MovingToNotMoving // (Final|Native|Public) // @ game+0x1e68260
	bool Transition_Reviving_ToGrounded(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Reviving_ToGrounded // (Final|Native|Public) // @ game+0x1e67fc0
	bool Transition_ProneToStand_ToStand_3(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_ProneToStand_ToStand_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67d80
	bool Transition_ProneToStand_ToStand_2(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_ProneToStand_ToStand_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67cc0
	bool Transition_ProneToCrouch_ToCrouch(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_ProneToCrouch_ToCrouch // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67c00
	bool Transition_Prone_ToProneToStand(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Prone_ToProneToStand // (Final|Native|Public) // @ game+0x1e67f90
	bool Transition_Prone_StoppingToNotMoving(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Prone_StoppingToNotMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67ed0
	bool Transition_Prone_StoppingToMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Prone_StoppingToMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67ea0
	bool Transition_Prone_NotMovingToMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Prone_NotMovingToMoving // (Final|Native|Public) // @ game+0x1e670c0
	bool Transition_Prone_MovingToStopping(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Prone_MovingToStopping // (Final|Native|Public) // @ game+0x1e67e70
	bool Transition_Prone_MovingToNotMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Prone_MovingToNotMoving // (Final|Native|Public) // @ game+0x1e67e40
	bool Transition_MoveToLadder_ToStand(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_MoveToLadder_ToStand // (Final|Native|Public) // @ game+0x1e67a80
	bool Transition_MovementModeConduit_ToSwim(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_MovementModeConduit_ToSwim // (Final|Native|Public) // @ game+0x1e67bd0
	bool Transition_MovementModeConduit_ToLand(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_MovementModeConduit_ToLand // (Final|Native|Public) // @ game+0x1e67ba0
	bool Transition_MovementModeConduit_ToGrounded_4(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_MovementModeConduit_ToGrounded_4 // (Final|Native|Public) // @ game+0x1e67b70
	bool Transition_MovementModeConduit_ToGrounded_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_MovementModeConduit_ToGrounded_3 // (Final|Native|Public) // @ game+0x1e67b40
	bool Transition_MovementModeConduit_ToGrounded_2(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_MovementModeConduit_ToGrounded_2 // (Final|Native|Public) // @ game+0x1e67b10
	bool Transition_MovementModeConduit_ToFallingConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_MovementModeConduit_ToFallingConduit // (Final|Native|Public) // @ game+0x1e67ae0
	bool Transition_MovementModeConduit_ToCustomMovementModeConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_MovementModeConduit_ToCustomMovementModeConduit // (Final|Native|Public) // @ game+0x1e67ab0
	bool Transition_Land_ToMovementModeConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Land_ToMovementModeConduit // (Final|Native|Public) // @ game+0x1e67a50
	bool Transition_Land_ToGrounded_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Land_ToGrounded_3 // (Final|Native|Public) // @ game+0x1e67a20
	bool Transition_Land_ToGrounded_2(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Land_ToGrounded_2 // (Final|Native|Public) // @ game+0x1e679f0
	bool Transition_KnockOut_ToGrounded(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_KnockOut_ToGrounded // (Final|Native|Public) // @ game+0x1e679c0
	bool Transition_KnockOut_EnterToNotMoving_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_KnockOut_EnterToNotMoving_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67990
	bool Transition_KnockOut_EnterToNotMoving_2(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_KnockOut_EnterToNotMoving_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e678d0
	bool Transition_InParachuteStart_ToInParachute_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_InParachuteStart_ToInParachute_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67870
	bool Transition_InParachuteStart_ToInParachute_2(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_InParachuteStart_ToInParachute_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e677b0
	bool Transition_InParachute_ToFallingConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_InParachute_ToFallingConduit // (Final|Native|Public) // @ game+0x1e678a0
	bool Transition_Grounded_ToReviving_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Grounded_ToReviving_3 // (Final|Native|Public) // @ game+0x1e67780
	bool Transition_Grounded_ToReviving_2(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Grounded_ToReviving_2 // (Final|Native|Public) // @ game+0x1e67750
	bool Transition_Grounded_ToMovementModeConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Grounded_ToMovementModeConduit // (Final|Native|Public) // @ game+0x1e67720
	bool Transition_Grounded_ToLand(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Grounded_ToLand // (Final|Native|Public) // @ game+0x1e676f0
	bool Transition_Grounded_ToKnockOut(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Grounded_ToKnockOut // (Final|Native|Public) // @ game+0x1e676c0
	bool Transition_Grounded_ToCriticalTime(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Grounded_ToCriticalTime // (Final|Native|Public) // @ game+0x1e67690
	bool Transition_FallingConduit_ToMovementModeConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_FallingConduit_ToMovementModeConduit // (Final|Native|Public) // @ game+0x1e67300
	bool Transition_FallingConduit_ToFalling_4(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_FallingConduit_ToFalling_4 // (Final|Native|Public) // @ game+0x1e67600
	bool Transition_FallingConduit_ToFalling_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_FallingConduit_ToFalling_3 // (Final|Native|Public) // @ game+0x1e675d0
	bool Transition_FallingConduit_ToFalling_2(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_FallingConduit_ToFalling_2 // (Final|Native|Public) // @ game+0x1e675a0
	bool Transition_FallingConduit_ToDescent(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_FallingConduit_ToDescent // (Final|Native|Public) // @ game+0x1e67570
	bool Transition_Falling_ToFallingConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Falling_ToFallingConduit // (Final|Native|Public) // @ game+0x1e67660
	bool Transition_Falling_ToDescent(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Falling_ToDescent // (Final|Native|Public) // @ game+0x1e67630
	bool Transition_DriverPose_RightSteeringToLeftSteering(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_DriverPose_RightSteeringToLeftSteering // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e674b0
	bool Transition_DriverPose_LeftSteeringToRightSteering(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_DriverPose_LeftSteeringToRightSteering // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e673f0
	bool Transition_Drive_ToCustomMovementModeConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Drive_ToCustomMovementModeConduit // (Final|Native|Public) // @ game+0x1e673c0
	bool Transition_Drive_PassengerIdleToPassengerAiming(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Drive_PassengerIdleToPassengerAiming // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67390
	bool Transition_Drive_PassengerAimingToPassengerIdle(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Drive_PassengerAimingToPassengerIdle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67360
	bool Transition_Descent_ToInParachuteStart(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Descent_ToInParachuteStart // (Final|Native|Public) // @ game+0x1e67330
	bool Transition_Descent_ToFallingConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Descent_ToFallingConduit // (Final|Native|Public) // @ game+0x1e67300
	bool Transition_CustomMovementModeConduit_ToMovementModeConduit(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_CustomMovementModeConduit_ToMovementModeConduit // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e672d0
	bool Transition_CustomMovementModeConduit_ToDrive(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_CustomMovementModeConduit_ToDrive // (Final|Native|Public) // @ game+0x1e672a0
	bool Transition_CrouchToStand_ToStand_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_CrouchToStand_ToStand_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67030
	bool Transition_CrouchToStand_ToStand_2(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_CrouchToStand_ToStand_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e66f70
	bool Transition_CrouchToProne_ToProne(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_CrouchToProne_ToProne // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e66eb0
	bool Transition_Crouch_ToStand_3(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Crouch_ToStand_3 // (Final|Native|Public) // @ game+0x1e67270
	bool Transition_Crouch_ToStand_2(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Crouch_ToStand_2 // (Final|Native|Public) // @ game+0x1e67240
	bool Transition_Crouch_ToCrouchToStand(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Crouch_ToCrouchToStand // (Final|Native|Public) // @ game+0x1e67210
	bool Transition_Crouch_ToCrouchToProne(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Crouch_ToCrouchToProne // (Final|Native|Public) // @ game+0x1e671e0
	bool Transition_Crouch_StoppingToNotMoving(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Crouch_StoppingToNotMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e67120
	bool Transition_Crouch_StoppingToMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Crouch_StoppingToMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e670f0
	bool Transition_Crouch_NotMovingToMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Crouch_NotMovingToMoving // (Final|Native|Public) // @ game+0x1e670c0
	bool Transition_Crouch_MovingToStopping(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Crouch_MovingToStopping // (Final|Native|Public) // @ game+0x1e67090
	bool Transition_Crouch_MovingToNotMoving(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_Crouch_MovingToNotMoving // (Final|Native|Public) // @ game+0x1e67060
	bool Transition_CriticalTime_ToResuscitated(); // Function BravoHotelGame.BravoHotelAnimInstance.Transition_CriticalTime_ToResuscitated // (Final|Native|Public) // @ game+0x1e66e80
	void StopTurnInPlace(); // Function BravoHotelGame.BravoHotelAnimInstance.StopTurnInPlace // (Final|Native|Public|BlueprintCallable) // @ game+0x1e66e60
	void SetSkipTransitionBlend(bool bNeedToSkip, float SkipStateDuration); // Function BravoHotelGame.BravoHotelAnimInstance.SetSkipTransitionBlend // (Final|Native|Public) // @ game+0x1e66d90
	void SetJumpAnimSequence(); // Function BravoHotelGame.BravoHotelAnimInstance.SetJumpAnimSequence // (Final|Native|Public|BlueprintCallable) // @ game+0x1e66d70
	void SetAnimInstanceTickEnable(bool bEnable); // Function BravoHotelGame.BravoHotelAnimInstance.SetAnimInstanceTickEnable // (Final|Native|Public|BlueprintCallable) // @ game+0x1e66ce0
	void SetAnimCurves(); // Function BravoHotelGame.BravoHotelAnimInstance.SetAnimCurves // (Final|Native|Protected|BlueprintCallable) // @ game+0x1e66cc0
	void OnAnimNotifySwimLeft(); // Function BravoHotelGame.BravoHotelAnimInstance.OnAnimNotifySwimLeft // (Final|Native|Protected|BlueprintCallable) // @ game+0x1e66ca0
	void OnAnimNotifySwimEnter(); // Function BravoHotelGame.BravoHotelAnimInstance.OnAnimNotifySwimEnter // (Final|Native|Protected|BlueprintCallable) // @ game+0x1e66c80
	void OnAnimNotifyFootstep(bool bLeftFoot); // Function BravoHotelGame.BravoHotelAnimInstance.OnAnimNotifyFootstep // (Final|Native|Protected|BlueprintCallable) // @ game+0x1e66bf0
	void OnAnimNotifyFalling(); // Function BravoHotelGame.BravoHotelAnimInstance.OnAnimNotifyFalling // (Final|Native|Protected|BlueprintCallable) // @ game+0x1e66bd0
	bool IsProneToIdle(); // Function BravoHotelGame.BravoHotelAnimInstance.IsProneToIdle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e66ba0
	bool IsIdleToProne(); // Function BravoHotelGame.BravoHotelAnimInstance.IsIdleToProne // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e66b70
	void ChooseFallingAnimParam(); // Function BravoHotelGame.BravoHotelAnimInstance.ChooseFallingAnimParam // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelAnimInstanceFPP
// Size: 0x700 (Inherited: 0x270)
struct UBravoHotelAnimInstanceFPP : UAnimInstance {
	struct ABravoHotelCharacter* CharacterRef; // 0x268(0x08)
	struct ABravoHotelWeaponBase* CurrentWeaponRef; // 0x270(0x08)
	struct UBravoHotelAnimInstance* AnimInstanceRef; // 0x278(0x08)
	struct UBravoHotelAnimInstancePostprocess* AnimInstancePostProsessRef; // 0x280(0x08)
	struct USkeletalMeshComponent* MeshComponent_3P; // 0x288(0x08)
	float DeltaTime; // 0x290(0x04)
	float CurrentScopeAngle; // 0x294(0x04)
	struct FTransform CurrentCameraTransform; // 0x2a0(0x30)
	struct UAnimSequence* BaseGripAnimation; // 0x2d0(0x08)
	struct UAnimSequence* WeaponHandAnim; // 0x2d8(0x08)
	struct UAnimSequence* WeaponSprintAnim; // 0x2e0(0x08)
	enum class EWeaponType WeaponType; // 0x2e8(0x01)
	enum class EWeaponAnimationType WeaponAnimType; // 0x2e9(0x01)
	enum class EFireType FireType; // 0x2ea(0x01)
	char pad_2EB[0x1]; // 0x2eb(0x01)
	int32_t IdleNum; // 0x2ec(0x04)
	float CharacterDirection; // 0x2f0(0x04)
	float CharacterSpeed; // 0x2f4(0x04)
	struct FVector SpinePosition; // 0x2f8(0x0c)
	struct FVector SpineJointPosition; // 0x304(0x0c)
	struct FRotator SpineRotation; // 0x310(0x0c)
	bool bUpdateProneSlope; // 0x31c(0x01)
	char pad_31D[0x3]; // 0x31d(0x03)
	struct FRotator ProneSlopeRotation; // 0x320(0x0c)
	struct FVector ProneRootOffset; // 0x32c(0x0c)
	float PrevSurfaceDegrees; // 0x338(0x04)
	struct FVector RecoilVector; // 0x33c(0x0c)
	struct FRotator RecoilRotator; // 0x348(0x0c)
	bool bEnableModifySpine; // 0x354(0x01)
	bool bEnableGenderIK; // 0x355(0x01)
	bool bEnableWeaponMontageGenderIK; // 0x356(0x01)
	char pad_357[0x1]; // 0x357(0x01)
	float ADSAlpha; // 0x358(0x04)
	bool bIsNoWeapon; // 0x35c(0x01)
	bool bIsNoRangedWeapon; // 0x35d(0x01)
	bool bUseFirstPersonSM; // 0x35e(0x01)
	bool bUseThirdPersonLowerBody; // 0x35f(0x01)
	float BlendTime_NoWeapon; // 0x360(0x04)
	float BlendTime_ADS; // 0x364(0x04)
	bool bIsFreeLook; // 0x368(0x01)
	bool bIsMoving; // 0x369(0x01)
	bool bIsProne; // 0x36a(0x01)
	bool bCrouching; // 0x36b(0x01)
	bool bIsSprint; // 0x36c(0x01)
	bool bIsJumping; // 0x36d(0x01)
	bool bIsSwimming; // 0x36e(0x01)
	bool bUnderWaterSurface; // 0x36f(0x01)
	bool bIsLandStop; // 0x370(0x01)
	bool bIsAirWalking; // 0x371(0x01)
	bool bIsClimbing; // 0x372(0x01)
	bool bIsADS; // 0x373(0x01)
	bool bIsAOS; // 0x374(0x01)
	bool bIsFiring; // 0x375(0x01)
	bool bUseSpecialProneAnimation; // 0x376(0x01)
	char pad_377[0x1]; // 0x377(0x01)
	struct UBlendSpaceBase* SpecialProneAnimation; // 0x378(0x08)
	bool bIsAmplifier; // 0x380(0x01)
	bool bIsReviving; // 0x381(0x01)
	bool bIsKnockedOut; // 0x382(0x01)
	char pad_383[0x1]; // 0x383(0x01)
	float CastingRemainTime; // 0x384(0x04)
	bool bHoldWeaponPosition; // 0x388(0x01)
	bool bLastHoldWeaponPosition; // 0x389(0x01)
	bool bUseTPPUpper; // 0x38a(0x01)
	bool bEnableHandIK; // 0x38b(0x01)
	bool bUseLeftHandIK; // 0x38c(0x01)
	bool bIsWeaponAttachedToCamera; // 0x38d(0x01)
	bool bUseGrip; // 0x38e(0x01)
	bool bUseLeanRotation; // 0x38f(0x01)
	bool bAttachWeaponToLHand; // 0x390(0x01)
	char pad_391[0x3]; // 0x391(0x03)
	float DisableHandIKTimer; // 0x394(0x04)
	float AttachWeaponToLHandTimer; // 0x398(0x04)
	bool bUseLeftArmBlendSlot; // 0x39c(0x01)
	char pad_39D[0x3]; // 0x39d(0x03)
	float BlendTime_HandIK; // 0x3a0(0x04)
	struct FName AttachWeaponBoneToLHand; // 0x3a4(0x08)
	char pad_3AC[0x4]; // 0x3ac(0x04)
	struct FTransform AttachWeaponToLHandTransform; // 0x3b0(0x30)
	struct FVector AttachLHandIK_Location; // 0x3e0(0x0c)
	struct FRotator AttachLHandIK_Rotation; // 0x3ec(0x0c)
	bool bReloading; // 0x3f8(0x01)
	bool bBoltAction; // 0x3f9(0x01)
	enum class EMovementMode MovementMode; // 0x3fa(0x01)
	bool bIsInVehicle; // 0x3fb(0x01)
	bool bIsVehiclePassenger; // 0x3fc(0x01)
	bool bIsVehicleDriver; // 0x3fd(0x01)
	char pad_3FE[0x2]; // 0x3fe(0x02)
	struct ABravoHotelVehicle* VehicleRef; // 0x400(0x08)
	float VehicleAimOffsetYaw; // 0x408(0x04)
	float VehicleAimOffsetPitch; // 0x40c(0x04)
	bool bUseHandlebarAnim; // 0x410(0x01)
	bool bUseOnlyRightHandInADS; // 0x411(0x01)
	char pad_412[0x6]; // 0x412(0x06)
	struct UBlendSpaceBase* BS_DriverHandleBar; // 0x418(0x08)
	struct UAnimSequence* VehicleHandlingIdleAnim; // 0x420(0x08)
	struct UAnimSequence* VehicleHandlingLeftAnim; // 0x428(0x08)
	struct UAnimSequence* VehicleHandlingRightAnim; // 0x430(0x08)
	struct UAnimSequence* DriverAimOffsetBasePose; // 0x438(0x08)
	struct UBlendSpaceBase* DriverAimOffset; // 0x440(0x08)
	char pad_448[0x8]; // 0x448(0x08)
	struct FTransform VehicleLeftHandIK; // 0x450(0x30)
	struct FVector VehicleLeftHandIK_Location; // 0x480(0x0c)
	struct FRotator VehicleLeftHandIK_Rotation; // 0x48c(0x0c)
	char pad_498[0x8]; // 0x498(0x08)
	struct FTransform VehicleRightHandIK; // 0x4a0(0x30)
	struct FVector VehicleRightHandIK_Location; // 0x4d0(0x0c)
	struct FRotator VehicleRightHandIK_Rotation; // 0x4dc(0x0c)
	char pad_4E8[0x8]; // 0x4e8(0x08)
	struct FTransform VehicleLeftFootIK; // 0x4f0(0x30)
	struct FTransform VehicleRightFootIK; // 0x520(0x30)
	bool bHasFootIKSocket; // 0x550(0x01)
	bool bUseVehicleLeftHandIK; // 0x551(0x01)
	bool bUseVehicleRightHandIK; // 0x552(0x01)
	bool bIsLeftSteering; // 0x553(0x01)
	bool bIsRightSteering; // 0x554(0x01)
	char pad_555[0x3]; // 0x555(0x03)
	float LeftSteeringPlayRate; // 0x558(0x04)
	float RightSteeringPlayRate; // 0x55c(0x04)
	bool bIsIdleSteering; // 0x560(0x01)
	char pad_561[0x3]; // 0x561(0x03)
	float DriverIdlePoseBlendAlpha; // 0x564(0x04)
	float WeaponTransformTimer; // 0x568(0x04)
	float WeaponTransformMaxTime; // 0x56c(0x04)
	float AOSAlpha; // 0x570(0x04)
	float SprintSpeedModifier; // 0x574(0x04)
	char pad_578[0x8]; // 0x578(0x08)
	struct FTransform CurrentWeaponWorldTransform; // 0x580(0x30)
	struct FTransform LeftHandComponentIK; // 0x5b0(0x30)
	struct FTransform RightHandComponentIK; // 0x5e0(0x30)
	struct FVector LeftHandIK_Location; // 0x610(0x0c)
	struct FRotator LeftHandIK_Rotation; // 0x61c(0x0c)
	struct FVector RightHandIK_Location; // 0x628(0x0c)
	struct FRotator RightHandIK_Rotation; // 0x634(0x0c)
	struct FVector FemaleLeftHandIKModify; // 0x640(0x0c)
	struct FVector IdleCameraPosition; // 0x64c(0x0c)
	struct FRotator LeanRotation; // 0x658(0x0c)
	enum class EThrowingWeaponType ThrowingWeaponType; // 0x664(0x01)
	enum class EThrowingWeaponState ThrowingWeaponState; // 0x665(0x01)
	enum class EGrenadeThrowingType GrenadeThrowingType; // 0x666(0x01)
	bool bIsUnderThrowType; // 0x667(0x01)
	struct UAnimSequence* ThrowingWeapon_Stand_Idle; // 0x668(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_Idle_Under; // 0x670(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_PinOff_Idle; // 0x678(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_PinOff_Idle_Additive; // 0x680(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_ThrowUnder_Idle; // 0x688(0x08)
	struct UAnimSequence* ThrowingWeapon_Stand_ThrowUnder_Idle_Additive; // 0x690(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_Idle; // 0x698(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_PinOff_Idle; // 0x6a0(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_PinOff_Idle_Additive; // 0x6a8(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_ThrowUnder_Idle; // 0x6b0(0x08)
	struct UAnimSequence* ThrowingWeapon_Crouch_ThrowUnder_Idle_Additive; // 0x6b8(0x08)
	struct UAnimSequence* ThrowingWeapon_Prone_Idle; // 0x6c0(0x08)
	struct UAnimSequence* ThrowingWeapon_Prone_PinOff_Idle_ThrowOver; // 0x6c8(0x08)
	struct UAnimSequence* ThrowingWeapon_Prone_PinOff_Idle_ThrowUnder; // 0x6d0(0x08)
	struct TArray<struct UAnimMontage*> MontageListWithoutHandIK; // 0x6d8(0x10)
	char pad_6E8[0x1]; // 0x6e8(0x01)
	bool bIsCold; // 0x6e9(0x01)
	bool bIsBurning; // 0x6ea(0x01)
	char pad_6EB[0x1]; // 0x6eb(0x01)
	float HurtAlpha; // 0x6ec(0x04)
	float HeadBangingAlpha; // 0x6f0(0x04)
	bool bUseFallingAnimation; // 0x6f4(0x01)
	char pad_6F5[0xb]; // 0x6f5(0x0b)

	void UpdateWeaponVariables(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.UpdateWeaponVariables // (Final|Native|Protected) // @ game+0x1e697c0
	void UpdateVehicleVariables(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.UpdateVehicleVariables // (Final|Native|Protected) // @ game+0x1e697a0
	void UpdateSpineTransform(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.UpdateSpineTransform // (Final|Native|Protected) // @ game+0x1e69780
	void UpdateRemoteController(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.UpdateRemoteController // (Final|Native|Protected) // @ game+0x1e69760
	void UpdateRangedWeapon(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.UpdateRangedWeapon // (Final|Native|Protected) // @ game+0x1e69740
	void UpdateGrenadeWeapon(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.UpdateGrenadeWeapon // (Final|Native|Protected) // @ game+0x1e69720
	void UpdateCharacterVariables(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.UpdateCharacterVariables // (Final|Native|Protected) // @ game+0x1e69700
	bool Transition_StandToSprint(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_StandToSprint // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e696d0
	bool Transition_SprintToStand_3(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_SprintToStand_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e69670
	bool Transition_SprintToStand_2(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_SprintToStand_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e696a0
	bool Transition_SprintToCrouch_3(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_SprintToCrouch_3 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e69670
	bool Transition_SprintToCrouch_2(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_SprintToCrouch_2 // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e69640
	bool Transition_MovementModeConduit_ToGround(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_MovementModeConduit_ToGround // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e69610
	bool Transition_JumpToGround(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_JumpToGround // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e695e0
	bool Transition_Ground_ToMovementModeConduit(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_Ground_ToMovementModeConduit // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e695b0
	bool Transition_FirstPersonSM_LandedToGround(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_FirstPersonSM_LandedToGround // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e694f0
	bool Transition_DriverPose_RightSteeringToLeftSteering(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_DriverPose_RightSteeringToLeftSteering // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e69430
	bool Transition_DriverPose_LeftSteeringToRightSteering(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_DriverPose_LeftSteeringToRightSteering // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e69370
	bool Transition_CrouchToSprint(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.Transition_CrouchToSprint // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e69340
	void CheckMontage(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.CheckMontage // (Final|Native|Protected) // @ game+0x1e69320
	bool CanUseThirdPersonLowerBody(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.CanUseThirdPersonLowerBody // (Final|Native|Public) // @ game+0x1e692f0
	bool CanUseFirstPersonSM(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.CanUseFirstPersonSM // (Final|Native|Public) // @ game+0x1e692c0
	bool CanModifySpine(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.CanModifySpine // (Final|Native|Public) // @ game+0x1e69290
	bool CanEnableHandIK(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.CanEnableHandIK // (Final|Native|Public) // @ game+0x1e69260
	bool CanEnableGenderIK(); // Function BravoHotelGame.BravoHotelAnimInstanceFPP.CanEnableGenderIK // (Final|Native|Public) // @ game+0x1e69230
};

// Class BravoHotelGame.BravoHotelAnimInstanceParachute
// Size: 0x2d0 (Inherited: 0x270)
struct UBravoHotelAnimInstanceParachute : UAnimInstance {
	struct ABravoHotelCharacter* CharacterRef; // 0x268(0x08)
	float DeltaTime; // 0x270(0x04)
	float InputForward; // 0x274(0x04)
	float InputRight; // 0x278(0x04)
	enum class ECharacterState CharacterState; // 0x27c(0x01)
	bool bIsDescentFalling; // 0x27d(0x01)
	struct FVector LeftHandleTransition; // 0x280(0x0c)
	struct FVector RightHandleTransition; // 0x28c(0x0c)
	bool bNeedToSkipTransitionBlend; // 0x298(0x01)
	bool Transition_InDescentToStart; // 0x299(0x01)
	bool Transition_Stand_NotMovingToMoving; // 0x29a(0x01)
	bool Transition_StartToMovement_3; // 0x29b(0x01)
	bool Transition_MovementToEnd; // 0x29c(0x01)
	bool Transition_EndToInDescent; // 0x29d(0x01)
	struct UAnimationAsset* ParachuteSeparationAnim_OnLand; // 0x2a0(0x08)
	struct UAnimationAsset* ParachuteSeparationAnim_OnAir; // 0x2a8(0x08)
	struct ASkeletalMeshActor* SpawnedParachuteActor; // 0x2b0(0x08)
	float SpawnedParachuteDissolveValue; // 0x2b8(0x04)
	float SpawnedParachuteDissolveStartTime; // 0x2bc(0x04)
	float SpawnedParachuteDissolveDuration; // 0x2c0(0x04)
	float ParachuteSpawnTime; // 0x2c4(0x04)
	char pad_2CC[0x4]; // 0x2cc(0x04)

	void UpdateSpawnedParachute(); // Function BravoHotelGame.BravoHotelAnimInstanceParachute.UpdateSpawnedParachute // (Final|Native|Protected) // @ game+0x1e69b90
	bool Transition_StartToMovement_2(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelAnimInstanceParachute.Transition_StartToMovement_2 // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1e69ad0
	void SpawnParachuteAnimActor(bool bIsQuickLanding, struct UMaterialInterface* OverrideSkinMaterial); // Function BravoHotelGame.BravoHotelAnimInstanceParachute.SpawnParachuteAnimActor // (Final|Native|Public) // @ game+0x1e69a10
};

// Class BravoHotelGame.BravoHotelAnimInstancePostprocess
// Size: 0x520 (Inherited: 0x270)
struct UBravoHotelAnimInstancePostprocess : UAnimInstance {
	struct ABravoHotelCharacter* Character; // 0x268(0x08)
	struct UCharacterMovementComponent* CharacterMovementComponent; // 0x270(0x08)
	float DeltaTime; // 0x278(0x04)
	struct TArray<struct UAnimMontage*> AM_CheckMontageIsPlaying; // 0x280(0x10)
	struct FVector PelvisZOffset; // 0x290(0x0c)
	struct FVector LeftFootZOffset; // 0x29c(0x0c)
	struct FVector RightFootZOffset; // 0x2a8(0x0c)
	struct FRotator LeftFootRotationOffset; // 0x2b4(0x0c)
	struct FRotator RightFootRotationOffset; // 0x2c0(0x0c)
	struct FRotator RootRotationOffset; // 0x2cc(0x0c)
	struct FVector RootZOffset; // 0x2d8(0x0c)
	bool bEnablePelvisZOffset; // 0x2e4(0x01)
	bool bEnableLeftFootIK; // 0x2e5(0x01)
	bool bEnableRightFootIK; // 0x2e6(0x01)
	char pad_2EB[0x1]; // 0x2eb(0x01)
	float ZOffsetMaxLimit; // 0x2ec(0x04)
	float ZOffsetMinLimit; // 0x2f0(0x04)
	float RollOffsetMaxLimit; // 0x2f4(0x04)
	float RollOffsetMinLimit; // 0x2f8(0x04)
	float PitchOffsetMaxLimit; // 0x2fc(0x04)
	float PitchOffsetMinLimit; // 0x300(0x04)
	float ZOffsetFastInterpSpeed; // 0x304(0x04)
	float ZOffsetSlowinterpSpeed; // 0x308(0x04)
	float RotationOffsetInterpSpeed; // 0x30c(0x04)
	float RootRotationOffsetInterpSpeed; // 0x310(0x04)
	struct FName LeftFootName; // 0x314(0x08)
	struct FName RightFootName; // 0x31c(0x08)
	struct FName RootName; // 0x324(0x08)
	float TraceStartHeight; // 0x32c(0x04)
	float TraceLengthBelowCapsule; // 0x330(0x04)
	bool EnableHandIK; // 0x334(0x01)
	bool bDisableHandIK_ByAnimNotifyState; // 0x335(0x01)
	bool IsEquippingNormalGrip; // 0x336(0x01)
	char pad_337[0x1]; // 0x337(0x01)
	struct UAnimSequence* IdleHandAnim; // 0x338(0x08)
	bool bIsPlayingWeaponMontage; // 0x340(0x01)
	bool bForceUseGripPose; // 0x341(0x01)
	char pad_342[0x2]; // 0x342(0x02)
	struct FVector HandL_Location; // 0x344(0x0c)
	struct FRotator HandL_Rotation; // 0x350(0x0c)
	struct FRotator Collide_HandR_Rotation; // 0x35c(0x0c)
	bool bEnableCollideHandR_Rotation; // 0x368(0x01)
	char pad_369[0x3]; // 0x369(0x03)
	float HandR_Rotation_Alpha; // 0x36c(0x04)
	float HandIK_BlendTime; // 0x370(0x04)
	enum class EWeaponAttachmentGrip GripType; // 0x374(0x01)
	char pad_375[0x3]; // 0x375(0x03)
	float LeanValue; // 0x378(0x04)
	struct FRotator Spine01_LeanRotation; // 0x37c(0x0c)
	struct FRotator Lowerarm_r_LeanRotation; // 0x388(0x0c)
	struct FVector Pelvis_CrouchLeanTranslation; // 0x394(0x0c)
	struct FRotator UpperarmR_LeanRotation; // 0x3a0(0x0c)
	bool bUpdateLeanNodes; // 0x3ac(0x01)
	char pad_3AD[0x3]; // 0x3ad(0x03)
	struct FVector LeftHandActionPos; // 0x3b0(0x0c)
	struct FVector RightHandActionPos; // 0x3bc(0x0c)
	bool bIsInVehicle; // 0x3c8(0x01)
	bool bUseDriverTwoHandIK; // 0x3c9(0x01)
	bool bEnableDriverIK_HandL; // 0x3ca(0x01)
	bool bEnableDriverIK_HandR; // 0x3cb(0x01)
	bool bUsePassengerTwoHandIK; // 0x3cc(0x01)
	char pad_3CD[0x3]; // 0x3cd(0x03)
	float VehicleFootIKAlpha; // 0x3d0(0x04)
	struct FVector VehicleLeftHandIK_Location; // 0x3d4(0x0c)
	struct FRotator VehicleLeftHandIK_Rotation; // 0x3e0(0x0c)
	struct FVector VehicleRightHandIK_Location; // 0x3ec(0x0c)
	struct FRotator VehicleRightHandIK_Rotation; // 0x3f8(0x0c)
	struct FVector VehicleLeftFootIK_Location; // 0x404(0x0c)
	struct FRotator VehicleLeftFootIK_Rotation; // 0x410(0x0c)
	struct FVector VehicleRightFootIK_Location; // 0x41c(0x0c)
	struct FRotator VehicleRightFootIK_Rotation; // 0x428(0x0c)
	bool bIsParkourArmIK; // 0x434(0x01)
	bool bIsAimingDownside; // 0x435(0x01)
	bool bIsIdleWeaponColliding; // 0x436(0x01)
	bool bIsProneWeaponColliding; // 0x437(0x01)
	float CollideAlpha; // 0x438(0x04)
	bool EnableFootIK; // 0x43c(0x01)
	char pad_43D[0x3]; // 0x43d(0x03)
	float LeftFootTarget; // 0x440(0x04)
	float RightFootTarget; // 0x444(0x04)
	struct FVector LeftFootLocation; // 0x448(0x0c)
	struct FVector RightFootLocation; // 0x454(0x0c)
	char pad_460[0x1c]; // 0x460(0x1c)
	bool bUseTwoHandIK; // 0x47c(0x01)
	enum class EMovementMode MovementMode; // 0x47d(0x01)
	enum class ECustomMovementMode CustomMovementMode; // 0x47e(0x01)
	char pad_47F[0x1]; // 0x47f(0x01)
	struct FVector JointTargetLocationR; // 0x480(0x0c)
	struct FVector JointTargetLocationL; // 0x48c(0x0c)
	struct FVector EffectorLocationR; // 0x498(0x0c)
	struct FVector PakourIKLocationR; // 0x4a4(0x0c)
	struct FVector PakourIKLocationL; // 0x4b0(0x0c)
	bool bIsProned; // 0x4bc(0x01)
	char pad_4BD[0x3]; // 0x4bd(0x03)
	struct FVector Pelvis_LeanTranslation; // 0x4c0(0x0c)
	bool bIsCrouch; // 0x4cc(0x01)
	bool bIsLocallyControlled; // 0x4cd(0x01)
	bool IsEquippingRangedWeapon; // 0x4ce(0x01)
	char pad_4CF[0x1]; // 0x4cf(0x01)
	struct FRotator UpperarmL_LeanRotation; // 0x4d0(0x0c)
	bool LeanLeftSide; // 0x4dc(0x01)
	bool bIsOneHandSprint; // 0x4dd(0x01)
	char pad_4DE[0x2]; // 0x4de(0x02)
	float OneHandSprintLastTime; // 0x4e0(0x04)
	bool bEnableAnimDynamics; // 0x4e4(0x01)
	bool bUsePonytailDynamics; // 0x4e5(0x01)
	char pad_4E6[0x2]; // 0x4e6(0x02)
	float PonytailDynamicsAlpha; // 0x4e8(0x04)
	bool bUseHairDynamics; // 0x4ec(0x01)
	char pad_4ED[0x3]; // 0x4ed(0x03)
	float HairDynamicsAlpha; // 0x4f0(0x04)
	bool bUseSkirtDynamics; // 0x4f4(0x01)
	char pad_4F5[0x3]; // 0x4f5(0x03)
	float SkirtDynamicsAlpha; // 0x4f8(0x04)
	bool bUseBackpackDynamics; // 0x4fc(0x01)
	char pad_4FD[0x3]; // 0x4fd(0x03)
	float BackpackDynamicsAlpha; // 0x500(0x04)
	bool bUseBreastDynamics; // 0x504(0x01)
	bool bUseCoatDynamics; // 0x505(0x01)
	bool bUseGhillieDynamics; // 0x506(0x01)
	char pad_507[0x1]; // 0x507(0x01)
	float KawaiiAlpha; // 0x508(0x04)
	float BoneDrivenAlpha; // 0x50c(0x04)
	float TargetKawaiiAlpha; // 0x510(0x04)
	float TargetBoneDrivenAlpha; // 0x514(0x04)
	char pad_518[0x8]; // 0x518(0x08)

	void UpdateAnimDynamicsAlpha(); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.UpdateAnimDynamicsAlpha // (Final|Native|Public) // @ game+0x1e6a610
	struct FVector TraceStart(struct FVector& StartVector); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.TraceStart // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1e6a560
	struct FVector TraceEnd(struct FVector& EndVector); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.TraceEnd // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1e6a4b0
	void SetKawaiiAlpha(float NewAlpha); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.SetKawaiiAlpha // (Final|Native|Public) // @ game+0x1e6a430
	void SetBoneDrivenAlpha(float NewAlpha); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.SetBoneDrivenAlpha // (Final|Native|Public) // @ game+0x1e6a3b0
	float InterpZOffset(float Current, float Target, bool bLeftFoot); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.InterpZOffset // (Final|Native|Protected|BlueprintCallable) // @ game+0x1e6a2a0
	void FootIK(); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.FootIK // (Final|Native|Protected) // @ game+0x1e6a280
	float ClampZOffset(float ZOffset); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.ClampZOffset // (Final|Native|Protected|BlueprintCallable) // @ game+0x1e6a1f0
	float ClampRotationOffsetRoll(float Roll); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.ClampRotationOffsetRoll // (Final|Native|Protected|BlueprintCallable) // @ game+0x1e6a160
	float ClampRotationOffsetPitch(float Pitch); // Function BravoHotelGame.BravoHotelAnimInstancePostprocess.ClampRotationOffsetPitch // (Final|Native|Protected|BlueprintCallable) // @ game+0x1e6a0d0
};

// Class BravoHotelGame.BravoHotelAnimInstanceUsableItem
// Size: 0x290 (Inherited: 0x270)
struct UBravoHotelAnimInstanceUsableItem : UAnimInstance {
	struct AActor* OwningActorRef; // 0x268(0x08)
	struct ABravoHotelCharacter* CharacterRef; // 0x270(0x08)
	float DeltaTime; // 0x278(0x04)
	bool bIsCharacterProned; // 0x27c(0x01)
	bool bIsThirdPerson; // 0x27d(0x01)
	bool bIsOwnerPlayingAnimation; // 0x27e(0x01)
	float AnimStartPosition; // 0x280(0x04)
	float AnimPlayRate; // 0x284(0x04)
	float OwnerCastingRemainTime; // 0x288(0x04)
};

// Class BravoHotelGame.BravoHotelAnimInstanceWeapon
// Size: 0x330 (Inherited: 0x270)
struct UBravoHotelAnimInstanceWeapon : UAnimInstance {
	struct ABravoHotelCharacter* CharacterRef; // 0x268(0x08)
	struct ABravoHotelRangedWeapon* WeaponRef; // 0x270(0x08)
	struct UBravoHotelAnimInstanceFPP* CharacterAnimInstance1PRef; // 0x278(0x08)
	float DeltaTime; // 0x280(0x04)
	struct FVector ArmsOffset; // 0x284(0x0c)
	struct FVector RootJointScale; // 0x290(0x0c)
	float ItemRecoilPitchAngle; // 0x29c(0x04)
	float ItemRecoilYawAngle; // 0x2a0(0x04)
	struct FRotator CollideRotation; // 0x2a4(0x0c)
	float CollideAlpha; // 0x2b0(0x04)
	bool bIsDefaultTransformUpdated; // 0x2b4(0x01)
	struct FVector SightSocketDeltaLocation; // 0x2b8(0x0c)
	struct FRotator SightSocketDeltaRotation; // 0x2c4(0x0c)
	bool bIsADS; // 0x2d0(0x01)
	struct FVector WeaponLocation; // 0x2d4(0x0c)
	struct FRotator WeaponRotation; // 0x2e0(0x0c)
	char pad_2EE[0x2]; // 0x2ee(0x02)
	struct FTransform WeaponTransform; // 0x2f0(0x30)
	enum class EWeaponFireMode FireMode; // 0x320(0x01)
	bool bIsAimingDownside; // 0x321(0x01)
	char pad_322[0xe]; // 0x322(0x0e)
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_AttachWeaponToCamera
// Size: 0x30 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_AttachWeaponToCamera : UAnimNotifyState {
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_AttachWeaponToLHand
// Size: 0x38 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_AttachWeaponToLHand : UAnimNotifyState {
	struct FName WeaponBone; // 0x30(0x08)
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_BreakDestructable
// Size: 0x48 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_BreakDestructable : UAnimNotifyState {
	float UpdateFrequency; // 0x30(0x04)
	struct FName CheckBoneName; // 0x34(0x08)
	float TraceRadius; // 0x3c(0x04)
	char pad_40[0x8]; // 0x40(0x08)
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_DisableHandIK
// Size: 0x30 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_DisableHandIK : UAnimNotifyState {
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_ForceUseGripPose
// Size: 0x30 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_ForceUseGripPose : UAnimNotifyState {
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_Melee
// Size: 0x58 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_Melee : UAnimNotifyState {
	float UpdateFrequency; // 0x30(0x04)
	struct FName TraceStartSocketName; // 0x34(0x08)
	struct FName TraceEndSocketName; // 0x3c(0x08)
	float TraceRadius; // 0x44(0x04)
	float ApplyDamage_EndTime; // 0x48(0x04)
	char pad_4C[0xc]; // 0x4c(0x0c)
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_TimedParticle
// Size: 0x70 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_TimedParticle : UAnimNotifyState {
	struct UParticleSystem* PSTemplate; // 0x30(0x08)
	struct UParticleSystem* PSTemplate_OnlyOtherPlayerSee; // 0x38(0x08)
	struct FName SocketName; // 0x40(0x08)
	struct FVector LocationOffset; // 0x48(0x0c)
	struct FRotator RotationOffset; // 0x54(0x0c)
	struct FVector Scale3D; // 0x60(0x0c)
	bool bDestroyAtEnd; // 0x6c(0x01)
	char pad_6D[0x3]; // 0x6d(0x03)
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_TurnOffBoneDriven
// Size: 0x30 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_TurnOffBoneDriven : UAnimNotifyState {
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_TurnOffKawaii
// Size: 0x30 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_TurnOffKawaii : UAnimNotifyState {
};

// Class BravoHotelGame.BravoHotelAnimNotifyState_UseLeftArmBlendFPP
// Size: 0x30 (Inherited: 0x30)
struct UBravoHotelAnimNotifyState_UseLeftArmBlendFPP : UAnimNotifyState {
};

// Class BravoHotelGame.BravoHotelAnimNotify_AttachMesh
// Size: 0xa8 (Inherited: 0x38)
struct UBravoHotelAnimNotify_AttachMesh : UAnimNotify {
	struct TSoftObjectPtr<UStaticMesh> StaticMesh; // 0x38(0x28)
	struct TSoftObjectPtr<USkeletalMesh> SkeletalMesh; // 0x60(0x28)
	bool bUsePhysics; // 0x88(0x01)
	char pad_89[0x3]; // 0x89(0x03)
	struct FName AttachSocketName; // 0x8c(0x08)
	float AttachDuration; // 0x94(0x04)
	struct TArray<struct FAttachedUsableItem_ScalarParamData> ScalarParamDatas; // 0x98(0x10)
};

// Class BravoHotelGame.BravoHotelAnimNotify_BulletParticle
// Size: 0x38 (Inherited: 0x38)
struct UBravoHotelAnimNotify_BulletParticle : UAnimNotify {
};

// Class BravoHotelGame.BravoHotelAnimNotify_DropMagazine
// Size: 0x48 (Inherited: 0x38)
struct UBravoHotelAnimNotify_DropMagazine : UAnimNotify {
	struct FName WeaponSlotNameForSpawn; // 0x38(0x08)
	struct ABravoHotelMagazineForDrop* MagazineClass; // 0x40(0x08)
};

// Class BravoHotelGame.BravoHotelAnimNotify_EndIdle
// Size: 0x38 (Inherited: 0x38)
struct UBravoHotelAnimNotify_EndIdle : UAnimNotify {
};

// Class BravoHotelGame.BravoHotelAnimNotify_PlayConditionedSound
// Size: 0x50 (Inherited: 0x38)
struct UBravoHotelAnimNotify_PlayConditionedSound : UAnimNotify {
	struct FConditionedSound ConditionedSound; // 0x38(0x10)
	bool bFollow; // 0x48(0x01)
	bool bPlayOnServer; // 0x49(0x01)
	bool bPlayWhileFalling; // 0x4a(0x01)
	bool bPlayOnlyForPawnMesh; // 0x4b(0x01)
	bool bPlayOnlyLocalPlayer; // 0x4c(0x01)
	bool bForced2D; // 0x4d(0x01)
	bool bUseConditionProvider; // 0x4e(0x01)
	char pad_4F[0x1]; // 0x4f(0x01)
};

// Class BravoHotelGame.BravoHotelAnimNotify_PlayMontageOnInteractedTarget
// Size: 0x50 (Inherited: 0x38)
struct UBravoHotelAnimNotify_PlayMontageOnInteractedTarget : UAnimNotify {
	struct UAnimMontage* TargetMontage; // 0x38(0x08)
	float PlayRate; // 0x40(0x04)
	struct FName StartSectionName; // 0x44(0x08)
	char pad_4C[0x4]; // 0x4c(0x04)
};

// Class BravoHotelGame.BravoHotelAnimNotify_StartRagdoll
// Size: 0x38 (Inherited: 0x38)
struct UBravoHotelAnimNotify_StartRagdoll : UAnimNotify {
};

// Class BravoHotelGame.BravoHotelAnimNotify_ThrowingPose
// Size: 0x38 (Inherited: 0x38)
struct UBravoHotelAnimNotify_ThrowingPose : UAnimNotify {
};

// Class BravoHotelGame.BravoHotelAnimNotify_TimedPostProcess
// Size: 0x48 (Inherited: 0x38)
struct UBravoHotelAnimNotify_TimedPostProcess : UAnimNotify {
	struct FName EffectRowName; // 0x38(0x08)
	float Duration; // 0x40(0x04)
	bool bFPPOnly; // 0x44(0x01)
	char pad_45[0x3]; // 0x45(0x03)
};

// Class BravoHotelGame.BravoHotelAnimNotify_Voice
// Size: 0x40 (Inherited: 0x38)
struct UBravoHotelAnimNotify_Voice : UAnimNotify {
	struct FName SoundIdx; // 0x38(0x08)
};

// Class BravoHotelGame.BravoHotelAppAudioStateManager
// Size: 0x78 (Inherited: 0x28)
struct UBravoHotelAppAudioStateManager : UObject {
	struct TMap<enum class EAppAudioState, struct FString> StateConditionMap; // 0x28(0x50)
};

// Class BravoHotelGame.BravoHotelAreaSkillZone
// Size: 0x378 (Inherited: 0x320)
struct ABravoHotelAreaSkillZone : AActor {
	struct USphereComponent* SphereCollision; // 0x320(0x08)
	struct UParticleSystemComponent* AreaParticle; // 0x328(0x08)
	struct UParticleSystemComponent* AreaParticleOwner; // 0x330(0x08)
	struct FAreaSkillInfo AreaSkillInfo; // 0x338(0x08)
	struct TArray<struct ABravoHotelCharacter*> OverlappedCharacters; // 0x340(0x10)
	struct FAreaSkillZoneInfo AreaSkillZoneInfo; // 0x350(0x20)
	char pad_370[0x8]; // 0x370(0x08)

	void StartDestroy(); // Function BravoHotelGame.BravoHotelAreaSkillZone.StartDestroy // (Native|Event|Public|BlueprintEvent) // @ game+0x1e477f0
	void StartAreaSkillParticle(); // Function BravoHotelGame.BravoHotelAreaSkillZone.StartAreaSkillParticle // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6d010
	void StartAreaSkillCollision(); // Function BravoHotelGame.BravoHotelAreaSkillZone.StartAreaSkillCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6cff0
	void OnRep_AreaSkillInfo(); // Function BravoHotelGame.BravoHotelAreaSkillZone.OnRep_AreaSkillInfo // (Final|Native|Public) // @ game+0x1e6cfd0
	void OnEndOverlapArea(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BravoHotelGame.BravoHotelAreaSkillZone.OnEndOverlapArea // (Native|Event|Public|BlueprintEvent) // @ game+0x1e6ce90
	void OnBeginOverlapArea(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.BravoHotelAreaSkillZone.OnBeginOverlapArea // (Native|Event|Public|HasOutParms|BlueprintEvent) // @ game+0x1e6cc90
	struct FAreaSkillZoneInfo GetAreaSkillZoneInfo(); // Function BravoHotelGame.BravoHotelAreaSkillZone.GetAreaSkillZoneInfo // (Final|Native|Public|Const) // @ game+0x1e6cc60
	void DeactivateEffect(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelAreaSkillZone.DeactivateEffect // (Native|Event|Public|BlueprintEvent) // @ game+0x1e6cbd0
	void BPSetAreaSkillInfo(); // Function BravoHotelGame.BravoHotelAreaSkillZone.BPSetAreaSkillInfo // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ActivateEffect(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelAreaSkillZone.ActivateEffect // (Native|Event|Public|BlueprintEvent) // @ game+0x1237d00
};

// Class BravoHotelGame.BravoHotelAreaSkillZoneHacking
// Size: 0x378 (Inherited: 0x378)
struct ABravoHotelAreaSkillZoneHacking : ABravoHotelAreaSkillZone {
};

// Class BravoHotelGame.BravoHotelAreaSkillZonePowerInterruption
// Size: 0x378 (Inherited: 0x378)
struct ABravoHotelAreaSkillZonePowerInterruption : ABravoHotelAreaSkillZone {
};

// Class BravoHotelGame.BravoHotelAreaSkillZoneWetFog
// Size: 0x398 (Inherited: 0x378)
struct ABravoHotelAreaSkillZoneWetFog : ABravoHotelAreaSkillZone {
	struct FWetFogZoneInfo WetFogZoneInfo; // 0x378(0x0c)
	char pad_384[0x4]; // 0x384(0x04)
	struct TArray<struct ABravoHotelCharacter*> EffectActiveCharacters; // 0x388(0x10)

	struct FWetFogZoneInfo GetWetFogZoneInfo(); // Function BravoHotelGame.BravoHotelAreaSkillZoneWetFog.GetWetFogZoneInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e6d3c0
};

// Class BravoHotelGame.BravoHotelCoherentObject
// Size: 0x30 (Inherited: 0x28)
struct UBravoHotelCoherentObject : UObject {
	struct UCoherentUIGTWidget* CoherentWidget; // 0x28(0x08)
};

// Class BravoHotelGame.BravoHotelArmory
// Size: 0x110 (Inherited: 0x30)
struct UBravoHotelArmory : UBravoHotelCoherentObject {
	struct TMap<struct FString, struct ABravoHotelArmoryMeshActor*> ArmoryMeshMap; // 0x30(0x50)
	struct FMulticastInlineDelegate ChangeSceneDelegate; // 0x80(0x10)
	struct FMulticastInlineDelegate MouseEventDelegate; // 0x90(0x10)
	struct FCoh_ResultInfo ResultInfo; // 0xa0(0x38)
	int32_t CurrentMaterialCount; // 0xd8(0x04)
	char pad_DC[0x4]; // 0xdc(0x04)
	struct FMulticastInlineDelegate SkipIdentifiedDelegate; // 0xe0(0x10)
	struct FMulticastInlineDelegate ArmoryTabDelegate; // 0xf0(0x10)
	char pad_100[0x10]; // 0x100(0x10)

	void SetHiddenAllArmoryMesh(); // Function BravoHotelGame.BravoHotelArmory.SetHiddenAllArmoryMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e710
	void SetArmoryMesh(struct UArmoryDataAsset* ArmoryDataAsset, struct FString MeshName); // Function BravoHotelGame.BravoHotelArmory.SetArmoryMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e630
	void SendMessage_UpgradeWeapon(); // Function BravoHotelGame.BravoHotelArmory.SendMessage_UpgradeWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e610
	void SendMessage_FinishIdentified(); // Function BravoHotelGame.BravoHotelArmory.SendMessage_FinishIdentified // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e5f0
	void SendMessage_CloseUpgradePopup(); // Function BravoHotelGame.BravoHotelArmory.SendMessage_CloseUpgradePopup // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e5d0
	void ResetActor(); // Function BravoHotelGame.BravoHotelArmory.ResetActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e5b0
	void OnSkipIdentifiedDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelArmory.OnSkipIdentifiedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnSelectWeapon(int32_t ItemId, bool bAcquisitionItems); // Function BravoHotelGame.BravoHotelArmory.OnSelectWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e4f0
	void OnSelectMaterial(int32_t ItemId); // Function BravoHotelGame.BravoHotelArmory.OnSelectMaterial // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e470
	void OnSelectMaking(int32_t ItemId); // Function BravoHotelGame.BravoHotelArmory.OnSelectMaking // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e3f0
	void OnMouseEventDelegate__DelegateSignature(struct FString InputGroup, enum class ECoh_EventType EventType, enum class ECoh_MouseButton Button, struct FVector2D Pos, struct FVector2D Wheel); // DelegateFunction BravoHotelGame.BravoHotelArmory.OnMouseEventDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasDefaults) // @ game+0x23a3b60
	void OnCraftResult(); // Function BravoHotelGame.BravoHotelArmory.OnCraftResult // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e3d0
	void OnChangeSceneDelegate__DelegateSignature(struct FString SceneName); // DelegateFunction BravoHotelGame.BravoHotelArmory.OnChangeSceneDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnArmoryTabDelegate__DelegateSignature(struct FString TabName); // DelegateFunction BravoHotelGame.BravoHotelArmory.OnArmoryTabDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void MoveScene(struct FString SceneName); // Function BravoHotelGame.BravoHotelArmory.MoveScene // (Final|Native|Public|BlueprintCallable) // @ game+0x1e6e330
	struct FString GetTabName(); // Function BravoHotelGame.BravoHotelArmory.GetTabName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e6e300
	struct ABravoHotelArmoryMeshActor* GetCurrentArmoryMesh(); // Function BravoHotelGame.BravoHotelArmory.GetCurrentArmoryMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e6e2d0
	struct ABravoHotelArmoryMeshActor* GetArmoryMesh(struct FString MeshName); // Function BravoHotelGame.BravoHotelArmory.GetArmoryMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e6e220
};

// Class BravoHotelGame.BravoHotelArmoryMeshActor
// Size: 0x3a0 (Inherited: 0x320)
struct ABravoHotelArmoryMeshActor : AActor {
	struct UStaticMeshComponent* ArmoryMesh; // 0x320(0x08)
	char pad_328[0x8]; // 0x328(0x08)
	struct FTransform DefaultTransform; // 0x330(0x30)
	struct FVector LocationOffset; // 0x360(0x0c)
	struct FRotator RotationOffset; // 0x36c(0x0c)
	struct FVector ScaleOffset; // 0x378(0x0c)
	char pad_384[0x1c]; // 0x384(0x1c)
};

// Class BravoHotelGame.BravoHotelAssetManager
// Size: 0x438 (Inherited: 0x438)
struct UBravoHotelAssetManager : UAssetManager {
};

// Class BravoHotelGame.BravoHotelAttachedUsableItem
// Size: 0x378 (Inherited: 0x320)
struct ABravoHotelAttachedUsableItem : AActor {
	struct UStaticMeshComponent* WorldStaticMesh; // 0x320(0x08)
	struct USkeletalMeshComponent* WorldSkelMesh; // 0x328(0x08)
	struct UStaticMeshComponent* ShadowStaticMesh; // 0x330(0x08)
	struct USkeletalMeshComponent* ShadowSkelMesh; // 0x338(0x08)
	bool bTurnOnPhysicsWhenDetach; // 0x340(0x01)
	char pad_341[0x7]; // 0x341(0x07)
	struct TArray<struct UObject*> LoadedAssets; // 0x348(0x10)
	char pad_358[0x20]; // 0x358(0x20)

	void OnCompleteAysnLoadItems(struct TSoftObjectPtr<UStaticMesh> StaticMeshPtr, struct TSoftObjectPtr<USkeletalMesh> SkeletalMeshPtr); // Function BravoHotelGame.BravoHotelAttachedUsableItem.OnCompleteAysnLoadItems // (Final|Native|Protected) // @ game+0x1e6fa50
	void InitUsableItem(float InAttachTime, bool bUsePhysics, struct TSoftObjectPtr<UStaticMesh> InStaticMeshPtr, struct TSoftObjectPtr<USkeletalMesh> InSkeletalMeshPtr, struct TArray<struct FAttachedUsableItem_ScalarParamData>& InScalarParamDatas); // Function BravoHotelGame.BravoHotelAttachedUsableItem.InitUsableItem // (Final|Native|Public|HasOutParms) // @ game+0x1e6f760
};

// Class BravoHotelGame.BravoHotelAttackDamageWidget
// Size: 0x3a0 (Inherited: 0x248)
struct UBravoHotelAttackDamageWidget : UUserWidget {
	struct UWidgetAnimation* Enemy_DamageFadeIn; // 0x248(0x08)
	struct UWidgetAnimation* Enemy_DamageFadeOut; // 0x250(0x08)
	struct UWidgetAnimation* Enemy_DamageBroken; // 0x258(0x08)
	struct FTimerHandle TimerHandle_EventRemoveWidget; // 0x260(0x08)
	struct ABravoHotelPlayerController* PlayerControllerRef; // 0x268(0x08)
	struct UWidgetSwitcher* WidgetSwitcher_1; // 0x270(0x08)
	struct UTextBlock* TextBlock_1; // 0x278(0x08)
	struct UTextBlock* TextBlock_3; // 0x280(0x08)
	struct UTextBlock* TextBlock_457; // 0x288(0x08)
	struct UImage* Image_1; // 0x290(0x08)
	struct UImage* Image_2; // 0x298(0x08)
	struct UImage* Image_145; // 0x2a0(0x08)
	struct UImage* Image_147; // 0x2a8(0x08)
	struct UImage* Image_177; // 0x2b0(0x08)
	struct FAttackDamageWidgetInfo AttackDamageWidgetInfo; // 0x2b8(0x50)
	bool bIsTrueDamage; // 0x308(0x01)
	bool bIsDestructed; // 0x309(0x01)
	char pad_30A[0x2]; // 0x30a(0x02)
	struct FVector WidgetLocation; // 0x30c(0x0c)
	struct FDelegate Delegate_OnEnemy_DamageFadeIn_Finished; // 0x318(0x10)
	char pad_328[0x40]; // 0x328(0x40)
	struct UPaperSprite* Texture_Helmet; // 0x368(0x08)
	struct UPaperSprite* Texture_HelmetBroken; // 0x370(0x08)
	struct UPaperSprite* Texture_Chest; // 0x378(0x08)
	struct UPaperSprite* Texture_ChestBroken; // 0x380(0x08)
	struct UPaperSprite* Texture_Tire; // 0x388(0x08)
	struct UFont* Font_Heavy; // 0x390(0x08)
	struct UFont* Font_Regular; // 0x398(0x08)

	void SetImage(struct FString InHitType); // Function BravoHotelGame.BravoHotelAttackDamageWidget.SetImage // (Final|Native|Public) // @ game+0x1e6fe30
	void EventRemoveWidget(); // Function BravoHotelGame.BravoHotelAttackDamageWidget.EventRemoveWidget // (Final|Native|Public) // @ game+0x1e6fe10
};

// Class BravoHotelGame.BravoHotelAttackUserWidget
// Size: 0x2a0 (Inherited: 0x248)
struct UBravoHotelAttackUserWidget : UUserWidget {
	struct UWidgetAnimation* Enemy_Lv_Motion_FadeIn; // 0x248(0x08)
	struct UWidgetAnimation* Enemy_Lv_Motion_FadeOut; // 0x250(0x08)
	struct FTimerHandle TimerHandle_EventRemoveWidget; // 0x258(0x08)
	struct ABravoHotelCharacter* PawnRef; // 0x260(0x08)
	struct UOverlay* Enemy_Name; // 0x268(0x08)
	struct UTextBlock* TextBlock_Level; // 0x270(0x08)
	struct UTextBlock* TextBlock_Level2; // 0x278(0x08)
	struct UTextBlock* TextBlock_Name; // 0x280(0x08)
	struct UTextBlock* TextBlock_Name2; // 0x288(0x08)
	struct UImage* Image_Icon; // 0x290(0x08)
	struct UImage* Image_Icon2; // 0x298(0x08)

	void EventRemoveWidget(); // Function BravoHotelGame.BravoHotelAttackUserWidget.EventRemoveWidget // (Final|Native|Public) // @ game+0x1e70110
};

// Class BravoHotelGame.BravoHotelAudioAmbientMapData
// Size: 0xf8 (Inherited: 0x30)
struct UBravoHotelAudioAmbientMapData : UDataAsset {
	struct TMap<struct FName, struct FColor> StateColors; // 0x30(0x50)
	struct TMap<struct FString, struct FColor> NewStateColors; // 0x80(0x50)
	struct FVector2D WorldSize; // 0xd0(0x08)
	struct FVector2D WorldCenter; // 0xd8(0x08)
	struct FVector2D BaseMapSize; // 0xe0(0x08)
	struct TArray<char> BitDataArray; // 0xe8(0x10)
};

// Class BravoHotelGame.BravoHotelAudioEmitterComponent
// Size: 0x4b0 (Inherited: 0x450)
struct UBravoHotelAudioEmitterComponent : UAkComponent {
	char pad_450[0x20]; // 0x450(0x20)
	bool bUseEventRadiusAsMinBounds; // 0x470(0x01)
	char pad_471[0x3]; // 0x471(0x03)
	float MinBoundsRadius; // 0x474(0x04)
	char pad_478[0x10]; // 0x478(0x10)
	struct FMulticastInlineDelegate EmitterRegisteredEvent; // 0x488(0x10)
	struct FMulticastInlineDelegate EmitterUnregisteredEvent; // 0x498(0x10)
	char pad_4A8[0x8]; // 0x4a8(0x08)
};

// Class BravoHotelGame.BravoHotelAudioEventDescription
// Size: 0x178 (Inherited: 0x30)
struct UBravoHotelAudioEventDescription : UDataAsset {
	struct TMap<struct TSoftObjectPtr<UAkAudioEvent>, struct FAudioEventAssetData> EventAssetDataMap; // 0x30(0x50)
	char pad_80[0xf8]; // 0x80(0xf8)
};

// Class BravoHotelGame.BravoHotelAudioListenerComponent
// Size: 0x4e0 (Inherited: 0x450)
struct UBravoHotelAudioListenerComponent : UAkComponent {
	char pad_450[0x58]; // 0x450(0x58)
	struct UBravoHotelAudioAmbientMapData* AmbientMapData; // 0x4a8(0x08)
	char pad_4B0[0x30]; // 0x4b0(0x30)
};

// Class BravoHotelGame.BravoHotelAudioMultipleEmitterComponent
// Size: 0x4f0 (Inherited: 0x4b0)
struct UBravoHotelAudioMultipleEmitterComponent : UBravoHotelAudioEmitterComponent {
	char pad_4B0[0x40]; // 0x4b0(0x40)
};

// Class BravoHotelGame.BravoHotelAudioPortalComponent
// Size: 0x500 (Inherited: 0x4d0)
struct UBravoHotelAudioPortalComponent : UBoxComponent {
	char pad_4D0[0x8]; // 0x4d0(0x08)
	bool bEnable; // 0x4d8(0x01)
	enum class AkAcousticPortalState InitialState; // 0x4d9(0x01)
	char pad_4DA[0x26]; // 0x4da(0x26)

	void OpenPortal(); // Function BravoHotelGame.BravoHotelAudioPortalComponent.OpenPortal // (Final|Native|Public|BlueprintCallable) // @ game+0x1e71990
	enum class AkAcousticPortalState GetCurrentState(); // Function BravoHotelGame.BravoHotelAudioPortalComponent.GetCurrentState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e71960
	void ClosePortal(); // Function BravoHotelGame.BravoHotelAudioPortalComponent.ClosePortal // (Final|Native|Public|BlueprintCallable) // @ game+0x1e71940
};

// Class BravoHotelGame.BravoHotelAudioRoomComponent
// Size: 0x410 (Inherited: 0x270)
struct UBravoHotelAudioRoomComponent : UAkRoomComponent {
	char pad_270[0x8]; // 0x270(0x08)
	struct UStaticMeshComponent* ParentMeshComponent; // 0x278(0x08)
	enum class EOcclusionMethod OcclusionMethod; // 0x280(0x04)
	char pad_284[0x4]; // 0x284(0x04)
	struct FString AmbienceState; // 0x288(0x10)
	bool bIsOnRoof; // 0x298(0x01)
	int8_t OcclusionHeightLevel; // 0x299(0x01)
	char OcclusionDepthLevel; // 0x29a(0x01)
	char IndoorConditionTargets; // 0x29b(0x01)
	char pad_29C[0x14]; // 0x29c(0x14)
	int8_t HighestLevelInGroup; // 0x2b0(0x01)
	char pad_2B1[0x18]; // 0x2b1(0x18)
	enum class AkMeshType MeshType; // 0x2c9(0x01)
	char pad_2CA[0x2]; // 0x2ca(0x02)
	int32_t LOD; // 0x2cc(0x04)
	float WeldingThreshold; // 0x2d0(0x04)
	char pad_2D4[0x4]; // 0x2d4(0x04)
	struct TMap<struct UMaterialInterface*, struct FAkGeometrySurfaceOverride> StaticMeshSurfaceOverride; // 0x2d8(0x50)
	struct FAkGeometrySurfaceOverride CollisionMeshSurfaceOverride; // 0x328(0x10)
	char bEnableDiffraction : 1; // 0x338(0x01)
	char bEnableDiffractionOnBoundaryEdges : 1; // 0x338(0x01)
	char pad_338_2 : 6; // 0x338(0x01)
	char pad_339[0x7]; // 0x339(0x07)
	struct FAudioGeometryData GeometryData; // 0x340(0x60)
	char pad_3A0[0x50]; // 0x3a0(0x50)
	struct UAkAuxBus* AuxBus; // 0x3f0(0x08)
	struct FString AuxBusName; // 0x3f8(0x10)
	float SendLevel; // 0x408(0x04)
	float FadeRate; // 0x40c(0x04)

	void UpdateGeometry(); // Function BravoHotelGame.BravoHotelAudioRoomComponent.UpdateGeometry // (Final|Native|Public|BlueprintCallable) // @ game+0x1e722e0
	void RemoveGeometry(); // Function BravoHotelGame.BravoHotelAudioRoomComponent.RemoveGeometry // (Final|Native|Public|BlueprintCallable) // @ game+0x1e722c0
	void ConvertMesh(); // Function BravoHotelGame.BravoHotelAudioRoomComponent.ConvertMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x1e722a0
};

// Class BravoHotelGame.BravoHotelAudioStatics
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelAudioStatics : UBlueprintFunctionLibrary {

	void StopPlayingSound(struct FAudioPlayingHandle& InPlayingHandle); // Function BravoHotelGame.BravoHotelAudioStatics.StopPlayingSound // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e73c60
	void SetAudioListener(struct AActor* ListenerActor); // Function BravoHotelGame.BravoHotelAudioStatics.SetAudioListener // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x1e73bf0
	void SetAudioConditions(struct UObject* WorldContextObject, struct TArray<struct FAudioCondition>& InConditions); // Function BravoHotelGame.BravoHotelAudioStatics.SetAudioConditions // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e73ad0
	void SetAudioCondition(struct UObject* WorldContextObject, struct FAudioCondition& InCondition); // Function BravoHotelGame.BravoHotelAudioStatics.SetAudioCondition // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e739b0
	void ResetAllConditions(struct UObject* InWorldContextObject); // Function BravoHotelGame.BravoHotelAudioStatics.ResetAllConditions // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // @ game+0x1e73940
	struct FAudioPlayingHandle PostAudioEventAttached(struct UAkAudioEvent* InEvent, struct USceneComponent* AttachParent, struct FName& AttachSocket, struct TArray<struct FAudioCondition>& InConditions, bool bAutoDestroy); // Function BravoHotelGame.BravoHotelAudioStatics.PostAudioEventAttached // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e73750
	struct FAudioPlayingHandle PostAudioEventAtLocation(struct UObject* WorldContextObject, struct UAkAudioEvent* InEvent, struct FVector& InLocation, struct FRotator& InRotation, struct TArray<struct FAudioCondition>& InConditions, bool bForceSpawnEvent); // Function BravoHotelGame.BravoHotelAudioStatics.PostAudioEventAtLocation // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1e73510
	struct FAudioPlayingHandle PostAudioEvent2D(struct UObject* WorldContextObject, struct UAkAudioEvent* InEvent, struct TArray<struct FAudioCondition>& InConditions); // Function BravoHotelGame.BravoHotelAudioStatics.PostAudioEvent2D // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e731f0
	struct FAudioPlayingHandle PostAudioEvent(struct UAkAudioEvent* InEvent, struct UAkComponent* InEmitter, struct TArray<struct FAudioCondition>& InConditions, float StartingTime); // Function BravoHotelGame.BravoHotelAudioStatics.PostAudioEvent // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e73350
	struct FAudioCondition MakeSwitchCondition(struct FString InGroup, struct FString InState, struct UAkComponent* InEmitter); // Function BravoHotelGame.BravoHotelAudioStatics.MakeSwitchCondition // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e73070
	struct FAudioCondition MakeStateCondition(struct FString InGroup, struct FString InState); // Function BravoHotelGame.BravoHotelAudioStatics.MakeStateCondition // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e72f30
	struct FAudioCondition MakeRtpcCondition(struct FString InGroup, float InValue, struct UAkComponent* InEmitter, float InInterpTimeMs); // Function BravoHotelGame.BravoHotelAudioStatics.MakeRtpcCondition // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e72d70
	bool IsValidHandle(struct FAudioPlayingHandle& InPlayingHandle); // Function BravoHotelGame.BravoHotelAudioStatics.IsValidHandle // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e72ce0
	bool IsPlayingAudioEvent2D(struct UObject* WorldContextObject, struct FAudioPlayingHandle& InPlayingHandle); // Function BravoHotelGame.BravoHotelAudioStatics.IsPlayingAudioEvent2D // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e72b40
	bool IsPlayingAudioEvent(struct UAkComponent* InEmitter, struct FAudioPlayingHandle& InPlayingHandle); // Function BravoHotelGame.BravoHotelAudioStatics.IsPlayingAudioEvent // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e72c10
	bool IsActiveAudioWorld(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelAudioStatics.IsActiveAudioWorld // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e72ac0
	struct UAkComponent* GetAudioListener(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelAudioStatics.GetAudioListener // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e72a40
	struct UAkComponent* DuplicateAkComponent(struct UAkComponent* InTemplate, bool bAutoDestroy); // Function BravoHotelGame.BravoHotelAudioStatics.DuplicateAkComponent // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e72980
	float CalcPitchScaleByDoppler(struct AActor* InListenerActor, struct AActor* InSourceActor, float Intensity); // Function BravoHotelGame.BravoHotelAudioStatics.CalcPitchScaleByDoppler // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e72880
};

// Class BravoHotelGame.BravoHotelAutoMoveSaveGame
// Size: 0xc8 (Inherited: 0x28)
struct UBravoHotelAutoMoveSaveGame : USaveGame {
	struct FVector StartPos; // 0x28(0x0c)
	char pad_34[0x4]; // 0x34(0x04)
	struct TArray<float> RotationKeyTime; // 0x38(0x10)
	struct TArray<struct FRotator> RotationData; // 0x48(0x10)
	struct TArray<float> MoveKeyTime; // 0x58(0x10)
	struct TArray<struct FVector> MoveData; // 0x68(0x10)
	struct TArray<float> RunKeyTime; // 0x78(0x10)
	struct TArray<bool> RunData; // 0x88(0x10)
	struct TArray<float> ActionKeyTime; // 0x98(0x10)
	struct TArray<enum class EAutoMoveSnapshotActionType> ActionData; // 0xa8(0x10)
	struct TArray<struct FVector> ActionLocationData; // 0xb8(0x10)
};

// Class BravoHotelGame.BravoHotelAutoSettingsUnitTest
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelAutoSettingsUnitTest : UObject {
};

// Class BravoHotelGame.BravoHotelBaseHUD
// Size: 0x428 (Inherited: 0x410)
struct ABravoHotelBaseHUD : AHUD {
	struct UUserWidget* MainWidgetClass; // 0x410(0x08)
	struct UUserWidget* MainWidget; // 0x418(0x08)
	char pad_420[0x8]; // 0x420(0x08)

	struct UUserWidget* GetMainWidget(bool bWantsToCreateIfNull); // Function BravoHotelGame.BravoHotelBaseHUD.GetMainWidget // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e743f0
};

// Class BravoHotelGame.BravoHotelBlueprintExtension
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelBlueprintExtension : UBlueprintFunctionLibrary {

	void Zip(struct FString archivePath, struct UObject* ZipUtilityInterfaceDelegate, enum class EBravoHotel_ZipUtilityCompressionFormat Format); // Function BravoHotelGame.BravoHotelBlueprintExtension.Zip // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e81da0
	struct FVector2D ValidateWidgetPosWithBoundary(struct FVector2D& Position, struct FVector2D& Size, struct FVector2D& BoundarySize, struct FVector2D& PositionInsideBoudary); // Function BravoHotelGame.BravoHotelBlueprintExtension.ValidateWidgetPosWithBoundary // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e81c00
	bool ValidateMatchingType(int32_t PartyMemberCount); // Function BravoHotelGame.BravoHotelBlueprintExtension.ValidateMatchingType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e81b80
	bool UnzipFileNamedTo(struct FString archivePath, struct FString Name, struct FString destinationPath, struct UObject* ZipUtilityInterfaceDelegate, enum class EBravoHotel_ZipUtilityCompressionFormat Format); // Function BravoHotelGame.BravoHotelBlueprintExtension.UnzipFileNamedTo // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e819c0
	bool UnzipFileNamed(struct FString archivePath, struct FString Name, struct UObject* ZipUtilityInterfaceDelegate, enum class EBravoHotel_ZipUtilityCompressionFormat Format); // Function BravoHotelGame.BravoHotelBlueprintExtension.UnzipFileNamed // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e81850
	struct FVector UnshiftLocation(struct UObject* WorldContextObject, struct FVector& Location); // Function BravoHotelGame.BravoHotelBlueprintExtension.UnshiftLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e81770
	struct FHitResult UnshiftHitResult(struct UObject* WorldContextObject, struct FHitResult& HitResult); // Function BravoHotelGame.BravoHotelBlueprintExtension.UnshiftHitResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e815f0
	void TutorialMovieSkip(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.TutorialMovieSkip // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e81580
	void TestLog(struct UObject* WorldContextObject, struct FString Message, int32_t Index); // Function BravoHotelGame.BravoHotelBlueprintExtension.TestLog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e81470
	void ShowHUDMessageByType(struct UObject* WorldContextObject, enum class EHUDMessageType MessageType, int32_t Priority, struct FText& Message); // Function BravoHotelGame.BravoHotelBlueprintExtension.ShowHUDMessageByType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e812f0
	void ShowHUDMessage(struct UObject* WorldContextObject, enum class EHUDMessageTableType MessageTableType, int32_t TableIndex, struct FText Message0, struct FText Message1, struct FText Message2, struct FText Message3, struct FText Message4); // Function BravoHotelGame.BravoHotelBlueprintExtension.ShowHUDMessage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e80ed0
	void ShowGuideWidget(struct UObject* WorldContextObject, enum class EGuideWidgetType GuideType); // Function BravoHotelGame.BravoHotelBlueprintExtension.ShowGuideWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e80e20
	struct FVector ShiftLocation(struct UObject* WorldContextObject, struct FVector& Location); // Function BravoHotelGame.BravoHotelBlueprintExtension.ShiftLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e80d40
	struct FHitResult ShiftHitResult(struct UObject* WorldContextObject, struct FHitResult& HitResult); // Function BravoHotelGame.BravoHotelBlueprintExtension.ShiftHitResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e80bc0
	bool SettingTypeToActionName(enum class EKeySettingType KeySettingType, struct FName& outActionName); // Function BravoHotelGame.BravoHotelBlueprintExtension.SettingTypeToActionName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e80af0
	void SetScalePFEandPFIbyBP(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetScalePFEandPFIbyBP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e80a80
	void SetReportType(enum class EReportType InReportType); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetReportType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e80a10
	void SetPrefabToolActorConnect(struct UObject* WorldContextObject, struct APrefabToolActor* PrefabToolActor, bool bFlag, bool bRecursive); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetPrefabToolActorConnect // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e808d0
	void SetLobbyExitType(struct UObject* WorldContextObject, enum class ELobbyExitType InLobbyExitType); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetLobbyExitType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e80820
	void SetLobbyCurrentWidgetScene(struct UObject* WorldContextObject, struct FString InCurrentWidgetScene); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetLobbyCurrentWidgetScene // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e80750
	void SetGameExitType(struct UObject* WorldContextObject, enum class EGameExitType InGameExitType); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetGameExitType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e806a0
	void SetFirstClientRun(); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetFirstClientRun // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e80680
	void SetClipBoardData(struct FString Data); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetClipBoardData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x106d5d0
	void SetBeginReportWidgetType(enum class EBeginReportWidgetType InWidgetType); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetBeginReportWidgetType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e80610
	void SetBeginReportWidget(struct UUserWidget* InWidget); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetBeginReportWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e805a0
	void SetAudioVolume(enum class EAudioSettingType Type, float Volume); // Function BravoHotelGame.BravoHotelBlueprintExtension.SetAudioVolume // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e804f0
	struct TArray<int32_t> SelectNumbersInRange(int32_t Min, int32_t MAX, int32_t Count); // Function BravoHotelGame.BravoHotelBlueprintExtension.SelectNumbersInRange // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e803c0
	int32_t SelectIndex(struct TArray<int32_t>& Probabilities); // Function BravoHotelGame.BravoHotelBlueprintExtension.SelectIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e80310
	void RemoveLog(struct UObject* WorldContextObject, enum class ELogTag Tag); // Function BravoHotelGame.BravoHotelBlueprintExtension.RemoveLog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e80260
	void RemoveLocalPing(struct UObject* WorldContextObject, int32_t LocalPingIndex); // Function BravoHotelGame.BravoHotelBlueprintExtension.RemoveLocalPing // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e801b0
	struct FPerkUIInfo MakePerkUIInfo(struct FPerkInfo& InPerkInfo); // Function BravoHotelGame.BravoHotelBlueprintExtension.MakePerkUIInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e800d0
	bool ListFilesInArchive(struct FString archivePath, struct UObject* ZipUtilityInterfaceDelegate, enum class EBravoHotel_ZipUtilityCompressionFormat Format); // Function BravoHotelGame.BravoHotelBlueprintExtension.ListFilesInArchive // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7ffb0
	void LeaveParty(); // Function BravoHotelGame.BravoHotelBlueprintExtension.LeaveParty // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7ff90
	bool IsWorldTearingDown(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsWorldTearingDown // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7ff10
	bool IsValidMapName(struct FName InMapName); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsValidMapName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7fe90
	bool IsTutorialLevel(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsTutorialLevel // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7fe10
	bool IsSubWeaponType(enum class EWeaponType& WeaponType); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsSubWeaponType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e7fd80
	bool IsReportSendedUsers(struct FString InUserName); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsReportSendedUsers // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7fc90
	bool IsReplayReportAbleDateTime(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsReplayReportAbleDateTime // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7fc10
	bool IsReplayReportAbleCamera(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsReplayReportAbleCamera // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7fb90
	bool IsPlayInEditor(); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsPlayInEditor // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7fb60
	bool IsMainWeaponType(enum class EWeaponType& WeaponType); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsMainWeaponType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e7fad0
	bool IsLobby(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsLobby // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7fa50
	bool IsGameStarted(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsGameStarted // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7f9d0
	bool IsExistReportUser(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsExistReportUser // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7f950
	bool IsEqualWeaponType(enum class EWeaponType& TypeA, enum class EWeaponType& TypeB); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsEqualWeaponType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e7f870
	bool IsEnableBlueZoneLogic(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsEnableBlueZoneLogic // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7f7f0
	bool IsEnableBlueZone(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsEnableBlueZone // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7f770
	bool IsEditorWorld(); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsEditorWorld // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7f740
	bool IsCompareReplayOwnerReportUser(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsCompareReplayOwnerReportUser // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7f6c0
	bool IsCheatable(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.IsCheatable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x17d8920
	void InvitePraty(struct FBravoHotelFriendInfo& FriendInfo); // Function BravoHotelGame.BravoHotelBlueprintExtension.InvitePraty // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7f540
	void InstigateExplosion(struct AActor* Causer, struct FVector& Origin, float Radius, float BaseDamage, struct AController* Instigator, bool bIgnoresCauser); // Function BravoHotelGame.BravoHotelBlueprintExtension.InstigateExplosion // (Final|BlueprintAuthorityOnly|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1e7f360
	bool InBlueZone(struct UObject* WorldContextObject, struct FVector TargetWorldPoint, bool Unshift); // Function BravoHotelGame.BravoHotelBlueprintExtension.InBlueZone // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1e7f250
	void HideHUDMessageByTableType(struct UObject* WorldContextObject, enum class EHUDMessageTableType MessageTableType, int32_t TableIndex); // Function BravoHotelGame.BravoHotelBlueprintExtension.HideHUDMessageByTableType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7f160
	void HideHUDMessage(struct UObject* WorldContextObject, enum class EHUDMessageType MessageType); // Function BravoHotelGame.BravoHotelBlueprintExtension.HideHUDMessage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7f0b0
	void HideGuideWidget(struct UObject* WorldContextObject, enum class EGuideWidgetType GuideType); // Function BravoHotelGame.BravoHotelBlueprintExtension.HideGuideWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7f000
	struct UDataTable* GetWeaponTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetWeaponTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7efd0
	bool GetWeaponInfoByIndex(int32_t TableIndex, struct FBravoHotelWeaponInfo& OutWeaponInfo); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetWeaponInfoByIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e7eec0
	int32_t GetWeaponIndex(struct AActor* WeaponActor); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetWeaponIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7ee40
	struct UDataTable* GetWeaponBaseTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetWeaponBaseTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7ee10
	struct UDataTable* GetVehicleTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetVehicleTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7ede0
	struct UDataTable* GetUsableItemTextTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetUsableItemTextTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7edb0
	struct TArray<struct AActor*> GetUnoverlappingActors(struct UPrimitiveComponent* Target, struct AActor* ClassFilter); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetUnoverlappingActors // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7eca0
	float GetTimerProgressPercent(struct UObject* WorldContextObject, struct FTimerHandle TimerHandle); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetTimerProgressPercent // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7ebe0
	bool GetTierIconPathString(struct ABravoHotelPlayerState* TargetPlayerState, struct FString& outString); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetTierIconPathString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e7eaf0
	bool GetTableInfoFromSettingType(enum class ESettingType Type, struct FSettingInfo& OutInfo, struct FName& OutKey); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetTableInfoFromSettingType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7e860
	struct UUserWidget* GetSystemPopupWidget(struct UObject* WorldContextObject, struct UUserWidget* WidgetClass); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetSystemPopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7e7a0
	void GetSupportedFullscreenResolutionsWithAspectRatio(struct TArray<struct FIntPoint>& Resolutions); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetSupportedFullscreenResolutionsWithAspectRatio // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7e700
	void GetSupportedFullscreenResolutions(struct FSettingInfo& OutInfo); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetSupportedFullscreenResolutions // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7e4f0
	void GetSmartPingTypeName(struct FBravoHotelPingInfo& PingInfo, struct FText& outMessage); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetSmartPingTypeName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7e3b0
	bool GetSettingTypeFromKey(struct FName& Key, enum class ESettingType& outType); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetSettingTypeFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7e2d0
	void GetSettingDefaultData(struct TMap<struct FName, struct FString>& outList); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetSettingDefaultData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7e1d0
	void GetSettingDataFromIndex(struct FName& SettingKey, struct FString Index, struct FSettingValue& outValueData); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetSettingDataFromIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7e050
	struct FSettingData GetSettingData(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetSettingData // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7e010
	float GetSeaLevelZ(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetSeaLevelZ // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7df80
	struct FString GetReportUserNickName(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetReportUserNickName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7deb0
	struct FTransform GetRawBonePose(struct USkinnedMeshComponent* SkinnedMeshComponent, struct FName BoneName); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetRawBonePose // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e7ddb0
	struct FLinearColor GetRarityColorByRarity(int32_t InRarity, bool bIsBrightColor); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetRarityColorByRarity // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e7dce0
	struct FLinearColor GetRarityColorByName(struct FName& ItemName, bool bIsBrightColor); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetRarityColorByName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e7dc00
	struct FVector GetRandomPointInCircle(struct UObject* WorldContextObject, struct FVector& Location, float Radius, bool bCheckLand); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetRandomPointInCircle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e7da80
	struct TArray<struct FName> GetRandomItems(struct FDataTableRowHandle& ItemRowHandle, struct TMap<struct FString, float>& InputModifiers, int32_t CallCount); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetRandomItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7d8b0
	int32_t GetPopupWidgetCount(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPopupWidgetCount // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7d830
	struct UDataTable* GetPlayZoneTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPlayZoneTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7d780
	struct TArray<struct FName> GetPlayZoneKeys(struct FName MapKey); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPlayZoneKeys // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7d6b0
	struct ABravoHotelCharacter* GetPlayingCharacter(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPlayingCharacter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7d7b0
	bool GetPingRegionAddress(struct FString InAccessRegion, struct FString& OutUrl, struct FString& OutRegionName); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPingRegionAddress // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7d530
	bool GetPersonalSupplyBoxInfo(struct UObject* WorldContextObject, struct FPersonalSupplyBoxPingInfo& PersonalSupplyBoxPingInfo); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPersonalSupplyBoxInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7d450
	struct FBravoHotelUserInfo GetPersistentUserInfo(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPersistentUserInfo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7d390
	struct UDataTable* GetPerkTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPerkTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7d360
	struct FName GetPerkNetworkName(int32_t table_index); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPerkNetworkName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7d2d0
	struct UDataTable* GetPerkDeckTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPerkDeckTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7d2a0
	struct FBravoHotelPartyInfo GetPartyInfo(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetPartyInfo // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7d1c0
	struct UDataTable* GetNoticeTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetNoticeTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7d190
	struct UUserWidget* GetNoticePopupWidget(struct UObject* WorldContextObject, struct UUserWidget* WidgetClass); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetNoticePopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7d0d0
	float GetNextInterpRatio(bool bIncrease, float CurrentRatio, float TotalTime, float DeltaTime); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetNextInterpRatio // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7cf90
	struct UBravoHotelSmartPingSystem* GetMySmartPingSystem(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetMySmartPingSystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7cf10
	struct ABravoHotelPlayerState* GetMyPlayerState(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetMyPlayerState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7ce90
	struct UDataTable* GetMapTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetMapTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7ce60
	struct UDataTable* GetMapPlayZoneTable(struct FName MapKey); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetMapPlayZoneTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7cde0
	struct FText GetMainStringText(struct FString ID); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetMainStringText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7cc90
	struct TArray<struct FString> GetLogs(struct UObject* WorldContextObject, enum class ELogTag Tag); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetLogs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7cb30
	struct FString GetLocaliztionCulture(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetLocaliztionCulture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7cab0
	struct UDataTable* GetLevelStreamingSettingTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetLevelStreamingSettingTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7ca80
	struct UDataTable* GetKickTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetKickTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7ca50
	bool GetKeySettingTypeFromKey(struct FName& Key, enum class EKeySettingType& outType); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetKeySettingTypeFromKey // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7c970
	struct FString GetKeyNameFromType(struct UObject* WorldContextObject, enum class EKeySettingType KeyType); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetKeyNameFromType // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7c860
	bool GetKeyMappingInfoFromType(struct UObject* WorldContextObject, enum class EKeySettingType KeyType, bool& outShift, bool& outCtrl, bool& outAlt, struct FKey& OutKey); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetKeyMappingInfoFromType // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7c630
	struct UDataTable* GetItemWeaponTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemWeaponTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c600
	struct FName GetItemWeaponName(struct FName ItemName, int32_t ItemLevel); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemWeaponName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c540
	struct UDataTable* GetItemTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c510
	struct UDataTable* GetItemRecipeTreeTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemRecipeTreeTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c4e0
	struct UDataTable* GetItemRecipeTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemRecipeTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c4b0
	struct UDataTable* GetItemOptionTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemOptionTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c480
	struct FName GetItemNetworkName(int32_t table_index); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemNetworkName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c3f0
	struct UDataTable* GetItemMaterialTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemMaterialTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c3c0
	bool GetItemKeyFromID(int32_t ID, struct FName& OutKey); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemKeyFromID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7c2f0
	struct UDataTable* GetItemColorTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemColorTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c2c0
	struct UDataTable* GetItemAppearanceTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemAppearanceTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7c290
	bool GetItemAmount(struct FName& Key, int32_t& outCount); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetItemAmount // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7c1b0
	struct FText GetHUDMessage(enum class EHUDMessageTableType MessageTableType, int32_t TableIndex, struct FText Message0, struct FText Message1, struct FText Message2, struct FText Message3, struct FText Message4); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetHUDMessage // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7bd60
	struct UDataTable* GetGroupItemTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetGroupItemTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7bd30
	struct UUserWidget* GetGamePopupWidget(struct UObject* WorldContextObject, struct UUserWidget* WidgetClass); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetGamePopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7bc70
	void GetFriendListAsync(struct FDelegate& OnFriendListGot); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetFriendListAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7bbd0
	struct FVector GetFloorLocation(struct UObject* WorldContextObject, struct FVector& TraceStartLocation); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetFloorLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e7baf0
	struct FText GetErrorString(int32_t ErrorCode, struct FString ExtraDescription); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetErrorString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7b8f0
	void GetEnableLanguages(struct FSettingInfo& OutInfo); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetEnableLanguages // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7b6e0
	struct UUserWidget* GetDelayAlertPopupWidget(struct UObject* WorldContextObject, struct UUserWidget* WidgetClass); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetDelayAlertPopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7b620
	struct UObject* GetDefaultObject(struct UObject* ObjectClass); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetDefaultObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7b5a0
	int32_t GetDefaultLanguagesIndex(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetDefaultLanguagesIndex // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7b570
	struct FString GetDefaultLanguagesCode(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetDefaultLanguagesCode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7b4f0
	void GetDefaultKeySettng(struct UPlayerInput* Input, struct TMap<enum class EKeySettingType, struct FInputActionKeyMapping>& outKeySettings, struct TMap<enum class EKeySettingType, struct FInputActionKeyMapping>& outSubKeySettings); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetDefaultKeySettng // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7b2e0
	bool GetDamageTypeRow(int32_t DamageTypeID, struct FDamageTypeTable& OutRow); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetDamageTypeRow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1e7b180
	float GetCurrentValueByRatio(float CurrentRatio, float MinValue, float MaxValue); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetCurrentValueByRatio // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7b070
	float GetCurrentRatioByValue(float CurrentValue, float MinValue, float MaxValue); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetCurrentRatioByValue // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7af60
	struct UDataTable* GetCrosshairTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetCrosshairTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7af30
	bool GetColorFromWeightMap(struct UTexture2D* TargetTexture, struct UBravoHotelWeightMapData* TargetData, float& CurMapSize, struct FVector2D& CurPos, struct FColor& outFColor, struct FString& outErrorMessage); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetColorFromWeightMap // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1e7ad20
	struct UDataTable* GetCharacterClassTypeTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetCharacterClassTypeTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7acf0
	struct UDataTable* GetCharacterClassDataTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetCharacterClassDataTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7acc0
	bool GetBundleItemCount(struct FRandomProbability& RandomProbability, int32_t& outCount); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBundleItemCount // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7ab30
	struct UDataTable* GetBuffTable(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBuffTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7ab00
	struct ABravoHotelWorldSettings* GetBravoHotelWorldSettings(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBravoHotelWorldSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7aa80
	struct UBravoHotelUserSettings* GetBravoHotelUserSettings(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBravoHotelUserSettings // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7aa50
	struct FLinearColor GetBoosterColorByName(struct FName& ItemName); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBoosterColorByName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e7a9b0
	struct FLinearColor GetBoosterColorByBuffClass(struct UBravoHotelBuffBase* BuffClass); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBoosterColorByBuffClass // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e7a920
	struct FLinearColor GetBoosterColor(bool bIsRed, bool bIsGreen, bool bIsBlue); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBoosterColor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e7a810
	struct UUserWidget* GetBeginReportWidget(); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBeginReportWidget // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7a7e0
	struct ABattleRoyaleGameState* GetBattleRoyaleGameState(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBattleRoyaleGameState // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7a760
	struct ABattleRoyaleGameMode* GetBattleRoyaleGameMode(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetBattleRoyaleGameMode // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7a6e0
	int32_t GetAspectRation(int32_t TargetWidth, int32_t TargetHeight); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetAspectRation // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7a620
	bool GetAmmoCount(struct FName& AmmoKey, int32_t& outCount); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetAmmoCount // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7a540
	int32_t GetActiveSkillIndex(struct TArray<struct FName>& BuffNames); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetActiveSkillIndex // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e7a490
	struct FName GetActiveSkillActionName(int32_t ActiveSkillSlot); // Function BravoHotelGame.BravoHotelBlueprintExtension.GetActiveSkillActionName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e7a400
	struct TArray<struct FSpawnItemResult> GenerateRandomItemsByName(struct FName RandomItemName); // Function BravoHotelGame.BravoHotelBlueprintExtension.GenerateRandomItemsByName // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e7a2c0
	bool GenerateRandomItems(struct FDataTableRowHandle& ItemRowHandle, struct TMap<struct FString, float>& InputModifiers, struct TMap<struct FName, struct FRandomSpawn>& AreaOverrideStandardGroupDatas, struct TArray<struct FSpawnItemResult>& OutResult, bool bWithAmmoSpawn, int32_t CallCount); // Function BravoHotelGame.BravoHotelBlueprintExtension.GenerateRandomItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e79f60
	struct FText GenerateDescriptionText(struct FText BodyText, struct TMap<struct FString, struct FText> ArgsValuesMap); // Function BravoHotelGame.BravoHotelBlueprintExtension.GenerateDescriptionText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e79d00
	struct FText GenerateBlockText(struct FString Str); // Function BravoHotelGame.BravoHotelBlueprintExtension.GenerateBlockText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e79c00
	void FriendListGot__DelegateSignature(struct TArray<struct FBravoHotelFriendInfo>& OutFriendList); // DelegateFunction BravoHotelGame.BravoHotelBlueprintExtension.FriendListGot__DelegateSignature // (Public|Delegate|HasOutParms) // @ game+0x23a3b60
	struct FText FormatLineBreak(struct FText& Text); // Function BravoHotelGame.BravoHotelBlueprintExtension.FormatLineBreak // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e79ad0
	void ForceItemsSpawn(struct UWorld* World, struct TMap<struct FName, int32_t>& outResultInfo, struct TArray<struct FSpawnItems_DEBUG>& outResultData); // Function BravoHotelGame.BravoHotelBlueprintExtension.ForceItemsSpawn // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e79820
	bool FindHUDMessageRow(enum class EHUDMessageTableType MessageTableType, int32_t TableIndex, struct FBravoHotelHUDMessageRow& OutMessageRow); // Function BravoHotelGame.BravoHotelBlueprintExtension.FindHUDMessageRow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e792d0
	bool FindHitPointAtLandscape(struct UObject* WorldContextObject, struct FVector& StartPoint, struct FVector& EndPoint, struct FHitResult& OutHit); // Function BravoHotelGame.BravoHotelBlueprintExtension.FindHitPointAtLandscape // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e79650
	bool FindHitPoint(struct UObject* WorldContextObject, struct FVector& StartPoint, struct FVector& EndPoint, struct FHitResult& OutHit); // Function BravoHotelGame.BravoHotelBlueprintExtension.FindHitPoint // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e79480
	struct FText ExportParameterText(struct FString Key, struct FString Parameters); // Function BravoHotelGame.BravoHotelBlueprintExtension.ExportParameterText // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1e79170
	struct FLogBuildCountData DivisionItems(struct UWorld* World, struct TArray<struct FString>& outItemSpawnTableIsNullActorList); // Function BravoHotelGame.BravoHotelBlueprintExtension.DivisionItems // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e79050
	bool CreateWeightMapData(struct UTexture2D* TargetTexture, struct UBravoHotelWeightMapData* TargetData, struct FBravoHotelMapTableRow& MapRow, struct FString& outErrorMessage); // Function BravoHotelGame.BravoHotelBlueprintExtension.CreateWeightMapData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e78ea0
	struct UUserWidget* CreateSystemPopupWidget(struct UObject* WorldContextObject, struct UUserWidget* WidgetClass, bool InputGameAndUIMode); // Function BravoHotelGame.BravoHotelBlueprintExtension.CreateSystemPopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e78da0
	struct UUserWidget* CreateNoticePopupWidget(struct UObject* WorldContextObject, struct UUserWidget* WidgetClass, bool InputGameAndUIMode); // Function BravoHotelGame.BravoHotelBlueprintExtension.CreateNoticePopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e78ca0
	struct UUserWidget* CreateGamePopupWidget(struct UObject* WorldContextObject, struct UUserWidget* WidgetClass, bool InputGameAndUIMode); // Function BravoHotelGame.BravoHotelBlueprintExtension.CreateGamePopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e78ba0
	struct UUserWidget* CreateDelayAlertPopupWidget(struct UObject* WorldContextObject, struct UUserWidget* WidgetClass, bool InputGameAndUIMode, int32_t StringTableIndex); // Function BravoHotelGame.BravoHotelBlueprintExtension.CreateDelayAlertPopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e78a60
	bool CreateAudioAmbientMapData(struct UTexture2D* TargetTexture, struct UBravoHotelAudioAmbientMapData* TargetData, struct FBravoHotelMapTableRow& MapRow, struct FString& outErrorMessage); // Function BravoHotelGame.BravoHotelBlueprintExtension.CreateAudioAmbientMapData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e788b0
	struct FVector2D ConvWorldLocationToWidgetLocation(struct FVector2D& WorldLocation, struct FVector2D& WorldSize, struct FVector2D& WidgetSize); // Function BravoHotelGame.BravoHotelBlueprintExtension.ConvWorldLocationToWidgetLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e78550
	struct FString ConvertLanguagesIndexToCode(int32_t LanguageIndex); // Function BravoHotelGame.BravoHotelBlueprintExtension.ConvertLanguagesIndexToCode // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e787f0
	struct FText ConvertCharacterText(struct UObject* WorldContextObject, struct FText& InText); // Function BravoHotelGame.BravoHotelBlueprintExtension.ConvertCharacterText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e78680
	void ClosePopupWidget(struct UObject* WorldContextObject, bool bUpdateInputMode); // Function BravoHotelGame.BravoHotelBlueprintExtension.ClosePopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e78490
	void CloseNoticePopupWidget(struct UObject* Object, bool bUpdateInputMode); // Function BravoHotelGame.BravoHotelBlueprintExtension.CloseNoticePopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e783d0
	void CloseDelayAlertPopupWidget(struct UObject* WorldContextObject, bool bUpdateInputMode); // Function BravoHotelGame.BravoHotelBlueprintExtension.CloseDelayAlertPopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e78310
	void CloseAllPopupWidget(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.CloseAllPopupWidget // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e782a0
	struct FColor CLerp(struct FColor& A, struct FColor& B, float ALPHA); // Function BravoHotelGame.BravoHotelBlueprintExtension.CLerp // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e77a70
	bool CheckWeightMapData(struct UTexture2D* TargetTexture, struct UBravoHotelWeightMapData* TargetData, struct FString& outErrorMessage); // Function BravoHotelGame.BravoHotelBlueprintExtension.CheckWeightMapData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e78170
	void CheckStringAndLocaliztionTable(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.CheckStringAndLocaliztionTable // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e78100
	void CheckSoloScaleOnPFEandPFI(struct UObject* WorldContextObject, struct TArray<struct APrefabToolActor*>& OnlyPFE, struct TArray<struct APrefabToolActor*>& OnlyPFI); // Function BravoHotelGame.BravoHotelBlueprintExtension.CheckSoloScaleOnPFEandPFI // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e77fb0
	struct FLogBuildCountData CheckItemList(struct UWorld* World, int32_t CheckCount); // Function BravoHotelGame.BravoHotelBlueprintExtension.CheckItemList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e77ee0
	bool CheckIsLandWeight(struct UObject* WorldContextObject, struct FVector2D& TargetLocation); // Function BravoHotelGame.BravoHotelBlueprintExtension.CheckIsLandWeight // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e77e10
	void ChangeLocaliztionCulture(struct FString NewCulture); // Function BravoHotelGame.BravoHotelBlueprintExtension.ChangeLocaliztionCulture // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e77d80
	float CalculateWidgetDirection(struct FVector& ForwardVector); // Function BravoHotelGame.BravoHotelBlueprintExtension.CalculateWidgetDirection // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e77cf0
	void CalcPointsonCircle(struct FVector2D Center, float Radius, int32_t SlicedCount, struct TArray<struct FVector2D>& outList); // Function BravoHotelGame.BravoHotelBlueprintExtension.CalcPointsonCircle // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1e77b90
	void BroadcastStartTutorialCallback(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.BroadcastStartTutorialCallback // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e77a00
	void BroadcastPlayCinematicVideoCallback(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.BroadcastPlayCinematicVideoCallback // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e77990
	void BroadcastOpenGamePopupCallback(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.BroadcastOpenGamePopupCallback // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e77920
	void BroadcastEndTutorialCallback(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.BroadcastEndTutorialCallback // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e778b0
	void BroadcastEndPlayCinematicVideoCallback(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.BroadcastEndPlayCinematicVideoCallback // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e77840
	void BroadcastCloseGamePopupCallback(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.BroadcastCloseGamePopupCallback // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e777d0
	void BlueprintLogSP(struct FString LogText); // Function BravoHotelGame.BravoHotelBlueprintExtension.BlueprintLogSP // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e77740
	void BlueprintLog(struct FString LogText); // Function BravoHotelGame.BravoHotelBlueprintExtension.BlueprintLog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1077c60
	void AllRemoveLog(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelBlueprintExtension.AllRemoveLog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e776d0
	void AddLog(struct UObject* WorldContextObject, enum class ELogTag Tag, struct FString Log); // Function BravoHotelGame.BravoHotelBlueprintExtension.AddLog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e775c0
	int32_t AddLocalPing(struct UObject* WorldContextObject, struct FBravoHotelLocalPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelBlueprintExtension.AddLocalPing // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e774d0
	struct UActorComponent* AddDynamicComponent(struct AActor* NewActor, struct UActorComponent* ComponentClass); // Function BravoHotelGame.BravoHotelBlueprintExtension.AddDynamicComponent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1e77410
	void AcceptPratyInvitaion(struct FBravoHotelPartyInvitation& Invitation); // Function BravoHotelGame.BravoHotelBlueprintExtension.AcceptPratyInvitaion // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1e77340
};

// Class BravoHotelGame.BravoHotelBlueZone
// Size: 0x7d0 (Inherited: 0x320)
struct ABravoHotelBlueZone : AActor {
	struct UStaticMeshComponent* BlueZoneMesh; // 0x320(0x08)
	struct UBravoHotelPainCausingComponent* PainCausingComponent; // 0x328(0x08)
	struct APawn* TransportPawnClass; // 0x330(0x08)
	int32_t CurrentPhase; // 0x338(0x04)
	struct FVector OriginSurvivalCirclePos; // 0x33c(0x0c)
	float OriginSurvivalCircleRadius; // 0x348(0x04)
	struct FVector TargetSurvivalCirclePos; // 0x34c(0x0c)
	float TargetSurvivalCircleRadius; // 0x358(0x04)
	float TimeToStartShrinking; // 0x35c(0x04)
	float TimeToEndShrinking; // 0x360(0x04)
	enum class EBluseZoneState eState; // 0x364(0x01)
	bool IsVisibleTargetCircle; // 0x365(0x01)
	bool IsVisibleBlueZone; // 0x366(0x01)
	char pad_367[0x11]; // 0x367(0x11)
	struct FVector CurrentSurvivalCirclePos; // 0x378(0x0c)
	float CurrentSurvivalCircleRadius; // 0x384(0x04)
	struct FMulticastInlineDelegate OnBlueZoneStateChanged; // 0x388(0x10)
	struct FMulticastInlineDelegate OnSurvivalCirclePhaseChanged; // 0x398(0x10)
	struct FMulticastInlineDelegate OnBlueZoneEnd; // 0x3a8(0x10)
	float DefaultRadiusRate; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)
	struct FBravoHotelGameData GameData; // 0x3c0(0x320)
	bool SetVisibleBlueZone; // 0x6e0(0x01)
	char pad_6E1[0x17]; // 0x6e1(0x17)
	struct UBravoHotelWeightMapData* WeightMapInfo; // 0x6f8(0x08)
	char pad_700[0x38]; // 0x700(0x38)
	struct TArray<struct ABravoHotelCharacter*> InBlueZoneCharacters; // 0x738(0x10)
	struct TArray<struct ABravoHotelCharacter*> OutBlueZoneCharacters; // 0x748(0x10)
	char pad_758[0x50]; // 0x758(0x50)
	struct FVector2D OuterCirclePos; // 0x7a8(0x08)
	struct FName SelectedPlayZoneName; // 0x7b0(0x08)
	int32_t SelectedPlayZoneInfoIndex; // 0x7b8(0x04)
	char pad_7BC[0x4]; // 0x7bc(0x04)
	struct TArray<struct FBattleRoyalPhaseInfo> ClientPlayZonePhaseList; // 0x7c0(0x10)

	bool TryGetCustomCircle(struct FVector& OutCenter, float& OutRadius); // Function BravoHotelGame.BravoHotelBlueZone.TryGetCustomCircle // (Final|BlueprintCosmetic|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1e834f0
	void SurvivalCirclePhaseChanged__DelegateSignature(int32_t PrevPhase, int32_t CurrentPhase); // DelegateFunction BravoHotelGame.BravoHotelBlueZone.SurvivalCirclePhaseChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void SpawnCurrentTransportAircraftPawn(); // Function BravoHotelGame.BravoHotelBlueZone.SpawnCurrentTransportAircraftPawn // (Final|Native|Public) // @ game+0x1e834d0
	void SetCharacterLocation(struct FVector CharacterLocation); // Function BravoHotelGame.BravoHotelBlueZone.SetCharacterLocation // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void OnWorldShifted(struct UWorld* InWorld, struct FIntVector PreviousOrigin, struct FIntVector CurrentOrigin); // Function BravoHotelGame.BravoHotelBlueZone.OnWorldShifted // (Event|Protected|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void OnRepSetVisibilityBlueZoneMesh(); // Function BravoHotelGame.BravoHotelBlueZone.OnRepSetVisibilityBlueZoneMesh // (Final|Native|Public) // @ game+0x1e83490
	void OnRepSelectedPlayZoneName(); // Function BravoHotelGame.BravoHotelBlueZone.OnRepSelectedPlayZoneName // (Final|Native|Public) // @ game+0x1e83470
	void OnRepPlayZonePhaseList(); // Function BravoHotelGame.BravoHotelBlueZone.OnRepPlayZonePhaseList // (Final|Native|Public) // @ game+0x1e83450
	void OnRepOutCirclePos(); // Function BravoHotelGame.BravoHotelBlueZone.OnRepOutCirclePos // (Final|Native|Public) // @ game+0x1e83430
	void OnRep_GameData(); // Function BravoHotelGame.BravoHotelBlueZone.OnRep_GameData // (Final|Native|Public) // @ game+0x1e834b0
	void OnBattleRoyalStateChanged(enum class EBattleRoyaleState PrevState, enum class EBattleRoyaleState CurrentState); // Function BravoHotelGame.BravoHotelBlueZone.OnBattleRoyalStateChanged // (Final|Native|Public) // @ game+0x1e83370
	bool InBlueZone(struct FVector& TargetWorldPoint); // Function BravoHotelGame.BravoHotelBlueZone.InBlueZone // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1e832d0
	struct UBravoHotelPainCausingComponent* GetPainCausingComponent(); // Function BravoHotelGame.BravoHotelBlueZone.GetPainCausingComponent // (Final|Native|Public) // @ game+0x1e832a0
	void ClientNotifySelectedPlayZoneInfoIndex(int32_t NewSelectedPlayZoneInfoIndex); // Function BravoHotelGame.BravoHotelBlueZone.ClientNotifySelectedPlayZoneInfoIndex // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1e83210
	void ClientNotifyPhaseChangedEvent(int32_t PrevPhase, int32_t NewPhase); // Function BravoHotelGame.BravoHotelBlueZone.ClientNotifyPhaseChangedEvent // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1e83150
	void ClientNotifyBlueZoneStateChangedEvent(enum class EBluseZoneState PrevState, enum class EBluseZoneState NewState); // Function BravoHotelGame.BravoHotelBlueZone.ClientNotifyBlueZoneStateChangedEvent // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1e83090
	void BlueZoneStateChanged__DelegateSignature(enum class EBluseZoneState PrevState, enum class EBluseZoneState CurrentState); // DelegateFunction BravoHotelGame.BravoHotelBlueZone.BlueZoneStateChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void BlueZoneEnd__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelBlueZone.BlueZoneEnd__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
};

// Class BravoHotelGame.GameRuleInvokerComponent
// Size: 0xd0 (Inherited: 0xb0)
struct UGameRuleInvokerComponent : UActorComponent {
	bool bIsFollowingRule; // 0xb0(0x01)
	char pad_B1[0x1f]; // 0xb1(0x1f)
};

// Class BravoHotelGame.BravoHotelBlueZoneGameRule
// Size: 0xe8 (Inherited: 0xd0)
struct UBravoHotelBlueZoneGameRule : UGameRuleInvokerComponent {
	struct UAkAudioEvent* BluezoneStartEvent; // 0xd0(0x08)
	struct UAkAudioEvent* BluezoneEndEvent; // 0xd8(0x08)
	char pad_E0[0x8]; // 0xe0(0x08)

	void OnFollowingChanged(struct AActor* Checker, bool bIsFollowing); // Function BravoHotelGame.BravoHotelBlueZoneGameRule.OnFollowingChanged // (Final|Native|Public) // @ game+0x1e837c0
	struct ABravoHotelBlueZone* GetBlueZone(); // Function BravoHotelGame.BravoHotelBlueZoneGameRule.GetBlueZone // (Final|Native|Public) // @ game+0x1e83790
};

// Class BravoHotelGame.BravoHotelBootyBoxActor
// Size: 0x3c8 (Inherited: 0x3a0)
struct ABravoHotelBootyBoxActor : ABravoHotelDropBoxActor {
	struct UParticleSystem* RarityParticle; // 0x3a0(0x08)
	struct UParticleSystemComponent* RarityParticleComponent; // 0x3a8(0x08)
	enum class EItemRarity HighestRarityOfCurrentItems; // 0x3b0(0x01)
	char pad_3B1[0xf]; // 0x3b1(0x0f)
	struct FTimerHandle TimerHandle_Deactivate; // 0x3c0(0x08)

	void RefreshHighestRarityOfCurrentItems(); // Function BravoHotelGame.BravoHotelBootyBoxActor.RefreshHighestRarityOfCurrentItems // (Final|Native|Protected) // @ game+0x1e83bf0
	void OnRep_HighestRarityOfCurrentItems(enum class EItemRarity& PrevRarity); // Function BravoHotelGame.BravoHotelBootyBoxActor.OnRep_HighestRarityOfCurrentItems // (Final|Native|Protected|HasOutParms) // @ game+0x1e83b60
};

// Class BravoHotelGame.BravoHotelBottomInfoInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelBottomInfoInterface : UInterface {

	void UpdateLineOfFire(struct FVector2D& Pos, bool LastUpdate, float delataTime); // Function BravoHotelGame.BravoHotelBottomInfoInterface.UpdateLineOfFire // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ToggleMiniMap(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ToggleMiniMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void TeamInfoVisibility(bool bState); // Function BravoHotelGame.BravoHotelBottomInfoInterface.TeamInfoVisibility // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e869e0
	void ShowVehicleWidget(struct UBravoHotelVehicleSeatComponent* VehicleSeat); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowVehicleWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowTeamPositionWidget(int32_t TeamIndex, struct FVector2D ScreenPosition, bool bNetCullDistance); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowTeamPositionWidget // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowReverseSideTeamPositionWidget(int32_t TeamIconIndex, float Angle, struct FVector2D ScreenMaxSize); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowReverseSideTeamPositionWidget // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowRedZoneStartMessage(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowRedZoneStartMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e869c0
	void ShowRedZoneBombMessage(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowRedZoneBombMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e869a0
	void ShowNuclearMessage(int32_t Count); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowNuclearMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e86920
	void ShowMyKnockOutInfo(struct FText& WeaponName, struct FText& Victim, bool bHeadShot, bool bTeamKill); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowMyKnockOutInfo // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1e86710
	void ShowMyKillInfo(struct FText& WeaponName, struct FText& Victim, int32_t KillCount, int32_t AliveCount, bool bHeadShot, bool bTeamKill); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowMyKillInfo // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1e864a0
	void ShowMinimapWidget(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowMinimapWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowLineOfFire(struct FVector2D& Pos); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowLineOfFire // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowInventoryNotEnoughSpaceMessage(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowInventoryNotEnoughSpaceMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowHittedDamage(struct ABravoHotelCharacter* InstigatorCharacter); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowHittedDamage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowGameWaitMessage(int32_t Time); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowGameWaitMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowGameProgressMessage(int32_t Type, int32_t Time); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowGameProgressMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowEnergyItemUse(int32_t Type); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowEnergyItemUse // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowDeathUserWidget(struct FKillBroadcastUIInfo& Info); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowDeathUserWidget // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowDeathAndAliveMessage(struct FText& Victim, int32_t AliveCount); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowDeathAndAliveMessage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowCommonMessage(struct FCommonMessageInfo& MessageInfo); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowCommonMessage // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1e863f0
	void ShowBlueZoneNotiMessage(struct FString Title, struct FString Desc); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowBlueZoneNotiMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowAttackDamage(struct AActor* DamageCauser, struct AActor* TargetPawn, float DamageAmount, struct FString HitType, struct FVector& ImpactPoint); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowAttackDamage // (Native|Public|HasOutParms|HasDefaults) // @ game+0x1e86240
	void ShowAmplifier(struct FString InText); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ShowAmplifier // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e861a0
	void SetToggleMinimap(bool bToggle); // Function BravoHotelGame.BravoHotelBottomInfoInterface.SetToggleMinimap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetNickName(struct FText& NickName); // Function BravoHotelGame.BravoHotelBottomInfoInterface.SetNickName // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ResetWorldMap(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ResetWorldMap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e86180
	void ResetMiniMapPlayers(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.ResetMiniMapPlayers // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void PlaySupplyBoxMessage(struct FString Message); // Function BravoHotelGame.BravoHotelBottomInfoInterface.PlaySupplyBoxMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OpenMainMenu(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.OpenMainMenu // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void Open(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.Open // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e86160
	void OnPlayerDied(struct UBravoHotelDamageType* DamageType, struct FName& DiedPlayerName, struct FName& KillerPlayerName, bool KillIsLocal, struct FString KillingWeaponName, int32_t AliveCount, bool bHeadShot, bool bKnockOut, int32_t KillerTierID, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.OnPlayerDied // (Native|Public|HasOutParms) // @ game+0x1e85e40
	void OnChangedToggleType(enum class EToggleWidgetModeType PreType, enum class EToggleWidgetModeType CurrentType); // Function BravoHotelGame.BravoHotelBottomInfoInterface.OnChangedToggleType // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e85d80
	void OnAddPerk(struct FName PerkName, int32_t Level); // Function BravoHotelGame.BravoHotelBottomInfoInterface.OnAddPerk // (Native|Public) // @ game+0x1e85cb0
	void LevelUpEvent(struct FPerkUIInfo PerkInfo, int32_t CurrentLevel, enum class EPerkLevelUpType LevelUpType, struct FDisplayAbility DisplayAbility, int32_t LastLevel); // Function BravoHotelGame.BravoHotelBottomInfoInterface.LevelUpEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void HideVehicleWidget(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.HideVehicleWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void HideTeamPositionWidget(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.HideTeamPositionWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void HideMinimapWidget(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.HideMinimapWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void HideBlueZoneNotiMessage(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.HideBlueZoneNotiMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void HideAmplifier(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.HideAmplifier // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e85c90
	struct UBravoHotelInteractionWidget* GetInteractiveWidget(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.GetInteractiveWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void FinishPerkSpin(enum class EPerkLevelUpType LevelUpType); // Function BravoHotelGame.BravoHotelBottomInfoInterface.FinishPerkSpin // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void Close(); // Function BravoHotelGame.BravoHotelBottomInfoInterface.Close // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e85c70
	void AddRequestMessage(struct ABravoHotelPlayerState* PlayerState, struct FString Message); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddRequestMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddPingMessage(struct FString MessageTag, bool UsingBackGround); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddPingMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddPerkMessage(struct FName PerkName, int32_t Level); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddPerkMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgSuicide(struct FText& Victim, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgSuicide // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgRedZone(struct FText& Victim, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgRedZone // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgNoOxygen(struct FText& Victim, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgNoOxygen // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgMagneticField(struct FText& Victim, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgMagneticField // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgKnockOut(struct FText& Killer, struct FText& Victim, bool bLocalKiller, bool bByTeam, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t KillerTierID, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgKnockOut // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgFallToDeath(struct FText& Victim, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgFallToDeath // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgCrash(struct FText& Victim, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgCrash // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgByWeapon(struct FText& Killer, struct FText& WeaponName, struct FText& Victim, bool bHeasShot, bool bLocalKiller, bool bByTeam, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t KillerTierID, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgByWeapon // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgByVehicle(struct FText& Killer, struct FText& Victim, bool bLocalKiller, bool bByTeam, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t KillerTierID, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgByVehicle // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMsgByMolotovFlame(struct FText& Killer, struct FText& WeaponName, struct FText& Victim, bool bHeasShot, bool bLocalKiller, bool bByTeam, bool bTeamDead, int32_t AliveCount, bool bKnockOut, int32_t KillerTierID, int32_t DiedTierID); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddKillMsgByMolotovFlame // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddCoreInfoSmartping(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddCoreInfoSmartping // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddCoreInfoRouteping(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddCoreInfoRouteping // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddCoreInfoRequestResuscitation(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelBottomInfoInterface.AddCoreInfoRequestResuscitation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelBroadcastingWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelBroadcastingWidget : UUserWidget {
	char pad_248[0x10]; // 0x248(0x10)

	void OnWaitingMessage(bool IsMessage); // Function BravoHotelGame.BravoHotelBroadcastingWidget.OnWaitingMessage // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnReplayMessageVisibility(bool IsMessage); // Function BravoHotelGame.BravoHotelBroadcastingWidget.OnReplayMessageVisibility // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnReplayMessage(struct FText& TargetName); // Function BravoHotelGame.BravoHotelBroadcastingWidget.OnReplayMessage // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void OnBattleRoyalStateChanged(enum class EBattleRoyaleState PrevState, enum class EBattleRoyaleState CurrentState); // Function BravoHotelGame.BravoHotelBroadcastingWidget.OnBattleRoyalStateChanged // (Final|Native|Public) // @ game+0x1e86f20
	void OnBattleRoyalCurrentState(enum class EBattleRoyaleState CurrentState); // Function BravoHotelGame.BravoHotelBroadcastingWidget.OnBattleRoyalCurrentState // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelBrokenEquipment
// Size: 0x340 (Inherited: 0x320)
struct ABravoHotelBrokenEquipment : AActor {
	struct UStaticMeshComponent* WorldStaticMesh; // 0x320(0x08)
	struct USkeletalMeshComponent* WorldSkelMesh; // 0x328(0x08)
	int32_t Equipmentlevel; // 0x330(0x04)
	struct FVector DamageImpulseDir; // 0x334(0x0c)
};

// Class BravoHotelGame.BravoHotelBTServiceDetectTarget
// Size: 0x80 (Inherited: 0x70)
struct UBravoHotelBTServiceDetectTarget : UBTService {
	struct UBlackboardComponent* BlackboardComponent; // 0x70(0x08)
	char pad_78[0x8]; // 0x78(0x08)
};

// Class BravoHotelGame.BravoHotelBuffBase
// Size: 0x2b8 (Inherited: 0x28)
struct UBravoHotelBuffBase : UObject {
	char pad_28[0x218]; // 0x28(0x218)
	struct ABravoHotelCharacter* BravoHotelCharacter; // 0x240(0x08)
	struct UBravoHotelAbilityComponent* BravoHotelAbilityComponent; // 0x248(0x08)
	char pad_250[0x30]; // 0x250(0x30)
	struct TArray<struct FTimerHandle> TimerHandles; // 0x280(0x10)
	struct TArray<struct UParticleSystemComponent*> CharacterParticles; // 0x290(0x10)
	struct AController* AttackerPC; // 0x2a0(0x08)
	struct AActor* AttackerActor; // 0x2a8(0x08)
	char pad_2B0[0x8]; // 0x2b0(0x08)

	void SetToEnd(); // Function BravoHotelGame.BravoHotelBuffBase.SetToEnd // (Final|Native|Public) // @ game+0x1e9d200
	void ResetCoolTime(); // Function BravoHotelGame.BravoHotelBuffBase.ResetCoolTime // (Native|Public) // @ game+0x1e9d1e0
	void OnReactive(uint16_t Index); // Function BravoHotelGame.BravoHotelBuffBase.OnReactive // (Native|Public) // @ game+0x1e9d080
};

// Class BravoHotelGame.BHBMultiBoost
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBMultiBoost : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBBooster
// Size: 0x388 (Inherited: 0x2b8)
struct UBHBBooster : UBravoHotelBuffBase {
	char pad_2B8[0xd0]; // 0x2b8(0xd0)
};

// Class BravoHotelGame.BHBBandage
// Size: 0x3f8 (Inherited: 0x2b8)
struct UBHBBandage : UBravoHotelBuffBase {
	char pad_2B8[0x140]; // 0x2b8(0x140)
};

// Class BravoHotelGame.BHBRegen
// Size: 0x388 (Inherited: 0x2b8)
struct UBHBRegen : UBravoHotelBuffBase {
	char pad_2B8[0xd0]; // 0x2b8(0xd0)
};

// Class BravoHotelGame.BHBAddConditionBase
// Size: 0x2c8 (Inherited: 0x2b8)
struct UBHBAddConditionBase : UBravoHotelBuffBase {
	char pad_2B8[0x10]; // 0x2b8(0x10)
};

// Class BravoHotelGame.BHBCanSliding
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBCanSliding : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBCanChangeGroundStateOnWater
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBCanChangeGroundStateOnWater : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBCanBreaching
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBCanBreaching : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBNoFallingDamage
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBNoFallingDamage : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBNoLandingAnim
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBNoLandingAnim : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBWalkSilently
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBWalkSilently : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBMoveSilently
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBMoveSilently : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBWaterSilently
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBWaterSilently : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBAllSilently
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBAllSilently : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBUseFlashbangBoobyTrap
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBUseFlashbangBoobyTrap : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBHelmetSound
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBHelmetSound : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBGoodMoveOnWater
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBGoodMoveOnWater : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBBreakSilentlyPakour
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBBreakSilentlyPakour : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBHeadBanging
// Size: 0x2d0 (Inherited: 0x2c8)
struct UBHBHeadBanging : UBHBAddConditionBase {
	float HeadBangingStartTime; // 0x2c8(0x04)
	float HeadBangingEndTime; // 0x2cc(0x04)
};

// Class BravoHotelGame.BHBHandSpeed
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBHandSpeed : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBHandSpeedADS
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBHandSpeedADS : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBPassiveSkipBoltAction
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBPassiveSkipBoltAction : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBStuntman
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBStuntman : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBNoCarLandingDamageToTeam
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBNoCarLandingDamageToTeam : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBSeeThroughSmoke
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBSeeThroughSmoke : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBJetpackBooster
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBJetpackBooster : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBJetpackAimBooster
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBJetpackAimBooster : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBNoSteadyAim
// Size: 0x2c8 (Inherited: 0x2c8)
struct UBHBNoSteadyAim : UBHBAddConditionBase {
};

// Class BravoHotelGame.BHBAbilityModify
// Size: 0x338 (Inherited: 0x2b8)
struct UBHBAbilityModify : UBravoHotelBuffBase {
	char pad_2B8[0x80]; // 0x2b8(0x80)
};

// Class BravoHotelGame.BHBMaxHealthPlus
// Size: 0x338 (Inherited: 0x338)
struct UBHBMaxHealthPlus : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBMaxOxygen
// Size: 0x338 (Inherited: 0x338)
struct UBHBMaxOxygen : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBUseBreath
// Size: 0x338 (Inherited: 0x338)
struct UBHBUseBreath : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBMoveSpeed
// Size: 0x338 (Inherited: 0x338)
struct UBHBMoveSpeed : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBHealOfTime
// Size: 0x338 (Inherited: 0x338)
struct UBHBHealOfTime : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBMaxCapacity
// Size: 0x338 (Inherited: 0x338)
struct UBHBMaxCapacity : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBReloadSpeed
// Size: 0x338 (Inherited: 0x338)
struct UBHBReloadSpeed : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBBoltActionSpeed
// Size: 0x338 (Inherited: 0x338)
struct UBHBBoltActionSpeed : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBBoosterTime
// Size: 0x338 (Inherited: 0x338)
struct UBHBBoosterTime : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBExpBoost
// Size: 0x338 (Inherited: 0x338)
struct UBHBExpBoost : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBMaxSteady
// Size: 0x338 (Inherited: 0x338)
struct UBHBMaxSteady : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBKnockOutHealth
// Size: 0x338 (Inherited: 0x338)
struct UBHBKnockOutHealth : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBADSSpeed
// Size: 0x338 (Inherited: 0x338)
struct UBHBADSSpeed : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBChangeWeaponSpeed
// Size: 0x338 (Inherited: 0x338)
struct UBHBChangeWeaponSpeed : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBRevivedHealth
// Size: 0x338 (Inherited: 0x338)
struct UBHBRevivedHealth : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBRevivingHealth
// Size: 0x338 (Inherited: 0x338)
struct UBHBRevivingHealth : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBReviveSpeed
// Size: 0x338 (Inherited: 0x338)
struct UBHBReviveSpeed : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBResuscitateSpeed
// Size: 0x338 (Inherited: 0x338)
struct UBHBResuscitateSpeed : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBListeningRange
// Size: 0x338 (Inherited: 0x338)
struct UBHBListeningRange : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBActSilently
// Size: 0x338 (Inherited: 0x338)
struct UBHBActSilently : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBMovoWhileUsing
// Size: 0x338 (Inherited: 0x338)
struct UBHBMovoWhileUsing : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBBoostHealAmount
// Size: 0x338 (Inherited: 0x338)
struct UBHBBoostHealAmount : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBHealTeamOne
// Size: 0x338 (Inherited: 0x338)
struct UBHBHealTeamOne : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBVehicleArmor
// Size: 0x338 (Inherited: 0x338)
struct UBHBVehicleArmor : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBParkourSpeed
// Size: 0x338 (Inherited: 0x338)
struct UBHBParkourSpeed : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBVehicleEfficiency
// Size: 0x338 (Inherited: 0x338)
struct UBHBVehicleEfficiency : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBDamageReduceOwnBomb
// Size: 0x338 (Inherited: 0x338)
struct UBHBDamageReduceOwnBomb : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBProtectFlashBang
// Size: 0x338 (Inherited: 0x338)
struct UBHBProtectFlashBang : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBIncressStun
// Size: 0x338 (Inherited: 0x338)
struct UBHBIncressStun : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBIncressFlameTime
// Size: 0x338 (Inherited: 0x338)
struct UBHBIncressFlameTime : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBIncressFrameDamage
// Size: 0x338 (Inherited: 0x338)
struct UBHBIncressFrameDamage : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBParachuteFallingSpeed
// Size: 0x338 (Inherited: 0x338)
struct UBHBParachuteFallingSpeed : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBIncressGrenadeBurstRange
// Size: 0x338 (Inherited: 0x338)
struct UBHBIncressGrenadeBurstRange : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBIncressHealLimit
// Size: 0x338 (Inherited: 0x338)
struct UBHBIncressHealLimit : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBIncressAmplifierRange
// Size: 0x338 (Inherited: 0x338)
struct UBHBIncressAmplifierRange : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBIncressHeartBeatSensorRange
// Size: 0x338 (Inherited: 0x338)
struct UBHBIncressHeartBeatSensorRange : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBRocketJumpModifier
// Size: 0x338 (Inherited: 0x338)
struct UBHBRocketJumpModifier : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBMeteorJumpModifier
// Size: 0x338 (Inherited: 0x338)
struct UBHBMeteorJumpModifier : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBIncressAirControl
// Size: 0x338 (Inherited: 0x338)
struct UBHBIncressAirControl : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBGravityModifier
// Size: 0x338 (Inherited: 0x338)
struct UBHBGravityModifier : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBLeftLeanAngleModifier
// Size: 0x338 (Inherited: 0x338)
struct UBHBLeftLeanAngleModifier : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBRightLeanAngleModifier
// Size: 0x338 (Inherited: 0x338)
struct UBHBRightLeanAngleModifier : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBLeftLeanSpeedModifier
// Size: 0x338 (Inherited: 0x338)
struct UBHBLeftLeanSpeedModifier : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBRightLeanSpeedModifier
// Size: 0x338 (Inherited: 0x338)
struct UBHBRightLeanSpeedModifier : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBSuperThrowingTrail
// Size: 0x338 (Inherited: 0x338)
struct UBHBSuperThrowingTrail : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBShiningThrowProjectile
// Size: 0x338 (Inherited: 0x338)
struct UBHBShiningThrowProjectile : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBFindParachutes
// Size: 0x338 (Inherited: 0x338)
struct UBHBFindParachutes : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBBulletproofGlass
// Size: 0x338 (Inherited: 0x338)
struct UBHBBulletproofGlass : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBBoostHP
// Size: 0x338 (Inherited: 0x338)
struct UBHBBoostHP : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBHeatScan
// Size: 0x338 (Inherited: 0x338)
struct UBHBHeatScan : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBReduceBuffCoolTime
// Size: 0x338 (Inherited: 0x338)
struct UBHBReduceBuffCoolTime : UBHBAbilityModify {
};

// Class BravoHotelGame.BHBConditionedAbilityModify
// Size: 0x3a0 (Inherited: 0x2b8)
struct UBHBConditionedAbilityModify : UBravoHotelBuffBase {
	char pad_2B8[0xe8]; // 0x2b8(0xe8)
};

// Class BravoHotelGame.BHBDamageReduce
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBDamageReduce : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBArmor
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBArmor : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBDurability
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBDurability : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBHorizontalRecoil
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBHorizontalRecoil : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBVerticalRecoil
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBVerticalRecoil : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBRecoil
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBRecoil : UBHBHorizontalRecoil {
};

// Class BravoHotelGame.BHBConditionedMoveSpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedMoveSpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBSway
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBSway : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBDamageIncress
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBDamageIncress : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBInvisibleDamageIncress
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBInvisibleDamageIncress : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBInvisibleDamageReduce
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBInvisibleDamageReduce : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBAccuracy
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBAccuracy : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBMovePenalty
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBMovePenalty : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBArmorDamage
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBArmorDamage : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBHealAmount
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBHealAmount : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBUseSpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBUseSpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBUseSpeedOnDamage
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBUseSpeedOnDamage : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBAdditionalItem
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBAdditionalItem : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressRange
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressRange : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedReloadSpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedReloadSpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedADSSpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedADSSpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedRateOfFire
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedRateOfFire : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedJumpHeight
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedJumpHeight : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedDecressRampSpeedPenalty
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDecressRampSpeedPenalty : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedLadderSpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedLadderSpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedLandedSpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedLandedSpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedDamageReduceOnBack
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDamageReduceOnBack : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedDamageReduceOnFront
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDamageReduceOnFront : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedIncressMazineCapacity
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedIncressMazineCapacity : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedIncressBullet
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedIncressBullet : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedDamageReduceOver200m
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDamageReduceOver200m : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedDamageReduceIn25m
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDamageReduceIn25m : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedDamageIncressBySpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDamageIncressBySpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedDamageReduceBySpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDamageReduceBySpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedDamageIncressReverseSpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDamageIncressReverseSpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedDamageReduceReverseSpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDamageReduceReverseSpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBConditionedAirWalkDistance
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedAirWalkDistance : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBDamageIncressOnBlueZoneBorder
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBDamageIncressOnBlueZoneBorder : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBDamageReduceOnBlueZoneBorder
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBDamageReduceOnBlueZoneBorder : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBAdditionalConsumeAmmo
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBAdditionalConsumeAmmo : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBBoosterItemEffective
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBBoosterItemEffective : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBSearchableBase
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBSearchableBase : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBBulletTrail
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBBulletTrail : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBBulletTrail3P
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBBulletTrail3P : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBBulletAttachEffect
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBBulletAttachEffect : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBBulletStopEffect
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBBulletStopEffect : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBBulletAttachEffect3P
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBBulletAttachEffect3P : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBBulletStopEffect3P
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBBulletStopEffect3P : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBMuzzleEffect
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBMuzzleEffect : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBMuzzleEffectNoAttach
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBMuzzleEffectNoAttach : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBHitDebuff
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBHitDebuff : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBIncendiaryAmmo
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncendiaryAmmo : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBPoisonAmmo
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBPoisonAmmo : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBFootstepEffect
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBFootstepEffect : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBDrinkFuel
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBDrinkFuel : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBExpertTerrianBase
// Size: 0x2f8 (Inherited: 0x2b8)
struct UBHBExpertTerrianBase : UBravoHotelBuffBase {
	char pad_2B8[0x40]; // 0x2b8(0x40)
};

// Class BravoHotelGame.BHBExpertTerrianAnD
// Size: 0x338 (Inherited: 0x2f8)
struct UBHBExpertTerrianAnD : UBHBExpertTerrianBase {
	char pad_2F8[0x40]; // 0x2f8(0x40)
};

// Class BravoHotelGame.BHBFreeColorPerk
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBFreeColorPerk : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBFreeClassPerk
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBFreeClassPerk : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBAddItem
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAddItem : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBAddCurrentWeaponAmmo
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAddCurrentWeaponAmmo : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBReload
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBReload : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBHeal
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBHeal : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBAddBoost
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAddBoost : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBFixArmor
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBFixArmor : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBFixArmorPerTime
// Size: 0x338 (Inherited: 0x2b8)
struct UBHBFixArmorPerTime : UBravoHotelBuffBase {
	char pad_2B8[0x80]; // 0x2b8(0x80)
};

// Class BravoHotelGame.BHBRepairVehicle
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBRepairVehicle : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBSpatialSense
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBSpatialSense : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBStun
// Size: 0x2e8 (Inherited: 0x2b8)
struct UBHBStun : UBravoHotelBuffBase {
	char pad_2B8[0x30]; // 0x2b8(0x30)
};

// Class BravoHotelGame.BHBDeafen
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBDeafen : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBEquipOtherOnThirdWeaponSlot
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBEquipOtherOnThirdWeaponSlot : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBAdditionalAttachment
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAdditionalAttachment : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBAddPerkExp
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAddPerkExp : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBAddPerk
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAddPerk : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBAddExpertWeaponLevel
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAddExpertWeaponLevel : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBAttachmentSlot
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAttachmentSlot : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBEquipAttachment
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBEquipAttachment : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBLoadAmmo
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBLoadAmmo : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBChangeAmmo
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBChangeAmmo : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBWeaponSlot
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBWeaponSlot : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBShowVechicleOnMap
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBShowVechicleOnMap : UBravoHotelBuffBase {
	char pad_2B8[0x8]; // 0x2b8(0x08)
};

// Class BravoHotelGame.BHBBleeding
// Size: 0x300 (Inherited: 0x2b8)
struct UBHBBleeding : UBravoHotelBuffBase {
	char pad_2B8[0x48]; // 0x2b8(0x48)
};

// Class BravoHotelGame.BHBPoisoning
// Size: 0x2f8 (Inherited: 0x2b8)
struct UBHBPoisoning : UBravoHotelBuffBase {
	char pad_2B8[0x40]; // 0x2b8(0x40)
};

// Class BravoHotelGame.BHBAddBullet
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAddBullet : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBAddWeapon
// Size: 0x2f8 (Inherited: 0x2b8)
struct UBHBAddWeapon : UBravoHotelBuffBase {
	char pad_2B8[0x40]; // 0x2b8(0x40)
};

// Class BravoHotelGame.BHBLockWeaponSlot
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBLockWeaponSlot : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBSpawnSuperBarrier
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBSpawnSuperBarrier : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBCoolTimeReduceOnRangedAttack
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBCoolTimeReduceOnRangedAttack : UBravoHotelBuffBase {
	char pad_2B8[0x8]; // 0x2b8(0x08)
};

// Class BravoHotelGame.BHBActiveRoll
// Size: 0x2c0 (Inherited: 0x2c0)
struct UBHBActiveRoll : UBHBCoolTimeReduceOnRangedAttack {
};

// Class BravoHotelGame.BHBPassiveRoll
// Size: 0x2c0 (Inherited: 0x2c0)
struct UBHBPassiveRoll : UBHBCoolTimeReduceOnRangedAttack {
};

// Class BravoHotelGame.BHBActiveSkipBoltAction
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBActiveSkipBoltAction : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBDoorBreaching
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBDoorBreaching : UBravoHotelBuffBase {
	struct FTimerHandle TimerHandle_EndBuff; // 0x2b8(0x08)
};

// Class BravoHotelGame.BHBWindowBreaching
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBWindowBreaching : UBravoHotelBuffBase {
	struct FTimerHandle TimerHandle_EndBuff; // 0x2b8(0x08)
};

// Class BravoHotelGame.BHBHackBallistic
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBHackBallistic : UBHBDamageReduce {

	void RemoveAvoidHeadShotCondition(); // Function BravoHotelGame.BHBHackBallistic.RemoveAvoidHeadShotCondition // (Final|Native|Protected) // @ game+0x1e9d1c0
};

// Class BravoHotelGame.BHBAreaSkillBase
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBAreaSkillBase : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBWetFog
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBWetFog : UBHBAreaSkillBase {
};

// Class BravoHotelGame.BHBPowerInterruption
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBPowerInterruption : UBHBAreaSkillBase {
	char pad_2B8[0x8]; // 0x2b8(0x08)

	void SpawnBlackOut(); // Function BravoHotelGame.BHBPowerInterruption.SpawnBlackOut // (Final|Native|Public) // @ game+0x1e9d230
};

// Class BravoHotelGame.BHBHacking
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBHacking : UBHBAreaSkillBase {
};

// Class BravoHotelGame.BHBForceField
// Size: 0x318 (Inherited: 0x2b8)
struct UBHBForceField : UBravoHotelBuffBase {
	struct TArray<struct UAnimInstance*> AnimInstanceArray; // 0x2b8(0x10)
	char pad_2C8[0x50]; // 0x2c8(0x50)

	void OnExitForceField(); // Function BravoHotelGame.BHBForceField.OnExitForceField // (Final|Native|Public) // @ game+0x1e9cdf0
};

// Class BravoHotelGame.BHBNitroBoost
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBNitroBoost : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBNitroBoom
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBNitroBoom : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBCancelableActiveSkill
// Size: 0x378 (Inherited: 0x2b8)
struct UBHBCancelableActiveSkill : UBravoHotelBuffBase {
	char pad_2B8[0xc0]; // 0x2b8(0xc0)

	void UnbindAllBuffDelegates(); // Function BravoHotelGame.BHBCancelableActiveSkill.UnbindAllBuffDelegates // (Native|Public) // @ game+0x1e9d2e0
	void ToggleWidget(enum class EToggleWidgetModeType& ToggleType); // Function BravoHotelGame.BHBCancelableActiveSkill.ToggleWidget // (Final|Native|Public|HasOutParms) // @ game+0x1e9d250
	void ReadyActiveSkill(); // Function BravoHotelGame.BHBCancelableActiveSkill.ReadyActiveSkill // (Native|Public) // @ game+0x1e9d110
	void OnInputActiveSkillButton(enum class EBuffEventType& InBuffEventType); // Function BravoHotelGame.BHBCancelableActiveSkill.OnInputActiveSkillButton // (Final|Native|Public|HasOutParms) // @ game+0x1e9ce10
	void OnDoActiveSkillFromBuffEventType(enum class EBuffEventType& InBuffEventType); // Function BravoHotelGame.BHBCancelableActiveSkill.OnDoActiveSkillFromBuffEventType // (Final|Native|Public|HasOutParms) // @ game+0x1e9cd60
	void OnCompleteActiveSkill(); // Function BravoHotelGame.BHBCancelableActiveSkill.OnCompleteActiveSkill // (Native|Public) // @ game+0x1e9cd40
	bool IsSkillUsed(); // Function BravoHotelGame.BHBCancelableActiveSkill.IsSkillUsed // (Final|Native|Public) // @ game+0x1e9cc00
	void InputActiveSkillButton(); // Function BravoHotelGame.BHBCancelableActiveSkill.InputActiveSkillButton // (Final|Native|Public) // @ game+0x1e9cbe0
	void FinishActiveSkill(); // Function BravoHotelGame.BHBCancelableActiveSkill.FinishActiveSkill // (Native|Public) // @ game+0x1e9cbc0
	void DoActiveSkillFromBuffEventType(); // Function BravoHotelGame.BHBCancelableActiveSkill.DoActiveSkillFromBuffEventType // (Native|Public) // @ game+0x1e9cba0
	void DoActiveSkill(); // Function BravoHotelGame.BHBCancelableActiveSkill.DoActiveSkill // (Native|Public) // @ game+0x1e9cb80
	void ChangeCharacterState(enum class ECharacterState& CharacterState); // Function BravoHotelGame.BHBCancelableActiveSkill.ChangeCharacterState // (Final|Native|Public|HasOutParms) // @ game+0x1e9caf0
	bool CanActiveSkillButton(); // Function BravoHotelGame.BHBCancelableActiveSkill.CanActiveSkillButton // (Native|Public) // @ game+0x1e9cac0
	void BindAllBuffDelegates(); // Function BravoHotelGame.BHBCancelableActiveSkill.BindAllBuffDelegates // (Native|Public) // @ game+0x1e9caa0
};

// Class BravoHotelGame.BHBBombing
// Size: 0x378 (Inherited: 0x378)
struct UBHBBombing : UBHBCancelableActiveSkill {
};

// Class BravoHotelGame.BHBRetreat
// Size: 0x478 (Inherited: 0x378)
struct UBHBRetreat : UBHBCancelableActiveSkill {
	char pad_378[0x100]; // 0x378(0x100)
};

// Class BravoHotelGame.BHBNuclear
// Size: 0x388 (Inherited: 0x378)
struct UBHBNuclear : UBHBCancelableActiveSkill {
	char pad_378[0x10]; // 0x378(0x10)
};

// Class BravoHotelGame.BHBKnockbackCharacter
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBKnockbackCharacter : UBravoHotelBuffBase {
	char pad_2B8[0x8]; // 0x2b8(0x08)
};

// Class BravoHotelGame.BHBUltimate_Sprint
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBUltimate_Sprint : UBHBConditionedAbilityModify {

	void PlayJumpSound(enum class EBuffEventType& BuffEventType); // Function BravoHotelGame.BHBUltimate_Sprint.PlayJumpSound // (Final|Native|Public|HasOutParms) // @ game+0x1e9d130
};

// Class BravoHotelGame.BHBUltimate_Recon
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBUltimate_Recon : UBravoHotelBuffBase {
	int32_t CurrentActiveCount; // 0x2b8(0x04)
	int32_t MaxActiveCount; // 0x2bc(0x04)
};

// Class BravoHotelGame.BHBReadyToSnipe
// Size: 0x3a8 (Inherited: 0x3a0)
struct UBHBReadyToSnipe : UBHBConditionedAbilityModify {
	float MaxReadyToSnipeTime; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)
};

// Class BravoHotelGame.BHBConditionedDamageIncressByAntiAirFire
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBConditionedDamageIncressByAntiAirFire : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBShortTimeHealth
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBShortTimeHealth : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBCamouflage
// Size: 0x2c8 (Inherited: 0x2b8)
struct UBHBCamouflage : UBravoHotelBuffBase {
	struct FString BuffMutableString; // 0x2b8(0x10)
};

// Class BravoHotelGame.BHBWaterGhillie
// Size: 0x2c8 (Inherited: 0x2b8)
struct UBHBWaterGhillie : UBravoHotelBuffBase {
	struct FString BuffMutableString; // 0x2b8(0x10)
};

// Class BravoHotelGame.BHBCarScanRange
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBCarScanRange : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBSearchInstinct
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBSearchInstinct : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBVehicleSearch
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBVehicleSearch : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBMaterialEffectBase
// Size: 0x3e0 (Inherited: 0x2b8)
struct UBHBMaterialEffectBase : UBravoHotelBuffBase {
	char pad_2B8[0xc8]; // 0x2b8(0xc8)
	struct UCameraPostProcessPreset* CameraPostProcessPreset; // 0x380(0x08)
	struct TArray<struct UMeshComponent*> TargetMeshs; // 0x388(0x10)
	char pad_398[0x48]; // 0x398(0x48)

	void MarkRenderStateDirty(struct ABravoHotelCharacter* UpdatedCharacter); // Function BravoHotelGame.BHBMaterialEffectBase.MarkRenderStateDirty // (Final|Native|Protected) // @ game+0x1e9cc30
};

// Class BravoHotelGame.BHBCharacterMaterialEffectBase
// Size: 0x3e0 (Inherited: 0x3e0)
struct UBHBCharacterMaterialEffectBase : UBHBMaterialEffectBase {
};

// Class BravoHotelGame.BHBUpgradeMaterialEffectBase
// Size: 0x420 (Inherited: 0x3e0)
struct UBHBUpgradeMaterialEffectBase : UBHBMaterialEffectBase {
	char pad_3E0[0x40]; // 0x3e0(0x40)
};

// Class BravoHotelGame.BHBArmorUpgradeMaterialEffectBase
// Size: 0x420 (Inherited: 0x420)
struct UBHBArmorUpgradeMaterialEffectBase : UBHBUpgradeMaterialEffectBase {
};

// Class BravoHotelGame.BHBArmorRepairMaterialEffectBase
// Size: 0x420 (Inherited: 0x420)
struct UBHBArmorRepairMaterialEffectBase : UBHBUpgradeMaterialEffectBase {
};

// Class BravoHotelGame.BHBShiningCharacter
// Size: 0x3e0 (Inherited: 0x3e0)
struct UBHBShiningCharacter : UBHBCharacterMaterialEffectBase {
};

// Class BravoHotelGame.BHBLevelUpCharacter
// Size: 0x3e0 (Inherited: 0x3e0)
struct UBHBLevelUpCharacter : UBHBCharacterMaterialEffectBase {
};

// Class BravoHotelGame.BHBShiningWeapon
// Size: 0x450 (Inherited: 0x3e0)
struct UBHBShiningWeapon : UBHBMaterialEffectBase {
	char pad_3E0[0x70]; // 0x3e0(0x70)
};

// Class BravoHotelGame.BHBWeaponUpgradeEffectBase
// Size: 0x428 (Inherited: 0x420)
struct UBHBWeaponUpgradeEffectBase : UBHBUpgradeMaterialEffectBase {
	struct ABravoHotelWeaponBase* TargetWeapon; // 0x420(0x08)
};

// Class BravoHotelGame.BHBAutoAimWeight
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBAutoAimWeight : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBAutoAimRadius
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBAutoAimRadius : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressThrowingWeaponDamage
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressThrowingWeaponDamage : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressThrowingWeaponFireCount
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressThrowingWeaponFireCount : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressMaxCountFlashbangBoobyTrap
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressMaxCountFlashbangBoobyTrap : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressRangeFlashbangBoobyTrap
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressRangeFlashbangBoobyTrap : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressRangeMolotovCocktailBoobyTrap
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressRangeMolotovCocktailBoobyTrap : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressBurstCount
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressBurstCount : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBStartOtherBuff
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBStartOtherBuff : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBStopOtherBuff
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBStopOtherBuff : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBCameraPostProcess
// Size: 0x3e0 (Inherited: 0x3e0)
struct UBHBCameraPostProcess : UBHBMaterialEffectBase {
};

// Class BravoHotelGame.BHBCameraPostProcess_TPP
// Size: 0x3e8 (Inherited: 0x3e0)
struct UBHBCameraPostProcess_TPP : UBHBCameraPostProcess {
	char pad_3E0[0x8]; // 0x3e0(0x08)
};

// Class BravoHotelGame.BHBCameraPostProcess_FPP
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBCameraPostProcess_FPP : UBravoHotelBuffBase {
	char pad_2B8[0x8]; // 0x2b8(0x08)
};

// Class BravoHotelGame.BHBAdditiveCrosshairBase
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBAdditiveCrosshairBase : UBravoHotelBuffBase {
	struct FName CrosshairTableRow; // 0x2b8(0x08)

	bool IsNeedToDrawAdditiveCrosshair(); // Function BravoHotelGame.BHBAdditiveCrosshairBase.IsNeedToDrawAdditiveCrosshair // (Native|Protected) // @ game+0x1e9cac0
};

// Class BravoHotelGame.BHBAdditiveCrosshair_CenterFocus
// Size: 0x2c0 (Inherited: 0x2c0)
struct UBHBAdditiveCrosshair_CenterFocus : UBHBAdditiveCrosshairBase {
};

// Class BravoHotelGame.BHBOverrideItem
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBOverrideItem : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBTeamBuffWhenItemUsed
// Size: 0x308 (Inherited: 0x2b8)
struct UBHBTeamBuffWhenItemUsed : UBravoHotelBuffBase {
	char pad_2B8[0x50]; // 0x2b8(0x50)

	void OnItemUsed(struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.BHBTeamBuffWhenItemUsed.OnItemUsed // (Final|Native|Public|HasOutParms) // @ game+0x1e9cf90
};

// Class BravoHotelGame.BHBBuffWhenItemUsed
// Size: 0x308 (Inherited: 0x2b8)
struct UBHBBuffWhenItemUsed : UBravoHotelBuffBase {
	char pad_2B8[0x50]; // 0x2b8(0x50)

	void OnItemUsed(struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.BHBBuffWhenItemUsed.OnItemUsed // (Final|Native|Public|HasOutParms) // @ game+0x1e9cea0
};

// Class BravoHotelGame.BHBIncressThrowingWeaponHitDamage
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressThrowingWeaponHitDamage : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBOverrideParkourData
// Size: 0x2c8 (Inherited: 0x2b8)
struct UBHBOverrideParkourData : UBravoHotelBuffBase {
	char pad_2B8[0x10]; // 0x2b8(0x10)
};

// Class BravoHotelGame.BHBIncressThrownRange
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressThrownRange : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressThrownAnimSpeed
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressThrownAnimSpeed : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressFirePropagationLevel
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressFirePropagationLevel : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBIncressDeafenRange
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBIncressDeafenRange : UBHBConditionedAbilityModify {
};

// Class BravoHotelGame.BHBSpawnVehicle
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBSpawnVehicle : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBUltimate_Driver
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBUltimate_Driver : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBSummonNearVehicle
// Size: 0x2b8 (Inherited: 0x2b8)
struct UBHBSummonNearVehicle : UBravoHotelBuffBase {
};

// Class BravoHotelGame.BHBActiveBuffBase
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBActiveBuffBase : UBravoHotelBuffBase {
	char pad_2B8[0x8]; // 0x2b8(0x08)

	void OnStartBuffFailed(); // Function BravoHotelGame.BHBActiveBuffBase.OnStartBuffFailed // (Native|Protected) // @ game+0x1e9d110
};

// Class BravoHotelGame.BHBActiveRocketJump
// Size: 0x2c8 (Inherited: 0x2c0)
struct UBHBActiveRocketJump : UBHBActiveBuffBase {
	char pad_2C0[0x8]; // 0x2c0(0x08)
};

// Class BravoHotelGame.BHBActiveMeteorJump
// Size: 0x2c0 (Inherited: 0x2c0)
struct UBHBActiveMeteorJump : UBHBActiveBuffBase {

	void MeteorStrike(enum class EBuffEventType& InBuffEventType); // Function BravoHotelGame.BHBActiveMeteorJump.MeteorStrike // (Final|Native|Public|HasOutParms) // @ game+0x1e9ccb0
};

// Class BravoHotelGame.BHBNitroJump
// Size: 0x2c8 (Inherited: 0x2c0)
struct UBHBNitroJump : UBHBActiveBuffBase {
	char pad_2C0[0x8]; // 0x2c0(0x08)
};

// Class BravoHotelGame.BHBPlosiveSoundDetection
// Size: 0x3a0 (Inherited: 0x3a0)
struct UBHBPlosiveSoundDetection : UBHBSearchableBase {
};

// Class BravoHotelGame.BHBCameraEffectBase
// Size: 0x2c0 (Inherited: 0x2b8)
struct UBHBCameraEffectBase : UBravoHotelBuffBase {
	char pad_2B8[0x8]; // 0x2b8(0x08)
};

// Class BravoHotelGame.BravoHotelBuilding
// Size: 0x470 (Inherited: 0x320)
struct ABravoHotelBuilding : AActor {
	float ExteriorMaxDrawDistance; // 0x320(0x04)
	float InteriorMaxDrawDistance; // 0x324(0x04)
	int32_t ItemWorldSpawnTableIndex; // 0x328(0x04)
	char pad_32C[0x4]; // 0x32c(0x04)
	struct FDataTableRowHandle ItemWorldSpawnInfo; // 0x330(0x10)
	struct TArray<struct FTransform> SpawnBoxList; // 0x340(0x10)
	struct FName SaveDetectingUserName; // 0x350(0x08)
	struct TArray<struct ABravoHotelPickup*> SpawnedItemList; // 0x358(0x10)
	struct FBuildingItemSpawnLog LogItemData; // 0x368(0xa0)
	bool IgnorePersonalSpawnBox; // 0x408(0x01)
	bool EnableItemSpawn; // 0x409(0x01)
	char pad_40A[0x2]; // 0x40a(0x02)
	struct FName AreaSpawnRateTableKey; // 0x40c(0x08)
	char pad_414[0x4]; // 0x414(0x04)
	struct TMap<struct FName, struct FRandomSpawn> AreaOverrideStandardGroupDatas; // 0x418(0x50)
	char pad_468[0x3]; // 0x468(0x03)
	bool EnableUnImportantItemSpawn; // 0x46b(0x01)
	char pad_46C[0x4]; // 0x46c(0x04)

	void PropagateDrawDistanceByTag(); // Function BravoHotelGame.BravoHotelBuilding.PropagateDrawDistanceByTag // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void PropagateDrawDistance(); // Function BravoHotelGame.BravoHotelBuilding.PropagateDrawDistance // (Final|Native|Public|BlueprintCallable) // @ game+0x1e9d610
};

// Class BravoHotelGame.BravoHotelRemoteController
// Size: 0x1bf0 (Inherited: 0x1bd0)
struct ABravoHotelRemoteController : ABravoHotelWeaponBase {
	struct FAnimSlot ActiveAnim; // 0x1bd0(0x10)
	struct UAkAudioEvent* ActiveSound; // 0x1be0(0x08)
	enum class ERemoteControlState RemoteControlState; // 0x1be8(0x01)
	char pad_1BE9[0x3]; // 0x1be9(0x03)
	int32_t SwitchOnSimulation; // 0x1bec(0x04)

	void SetRemoteControllerState(enum class ERemoteControlState NewState); // Function BravoHotelGame.BravoHotelRemoteController.SetRemoteControllerState // (Final|Native|Protected) // @ game+0x1fad6b0
	void ServerSetRemoteControllerState(enum class ERemoteControlState NewState); // Function BravoHotelGame.BravoHotelRemoteController.ServerSetRemoteControllerState // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1fad600
	void ServerPlaySimulation(); // Function BravoHotelGame.BravoHotelRemoteController.ServerPlaySimulation // (Net|Native|Event|Protected|NetServer|NetValidate) // @ game+0x1fad5b0
	void OnRep_SwitchOnSimulation(); // Function BravoHotelGame.BravoHotelRemoteController.OnRep_SwitchOnSimulation // (Final|Native|Private) // @ game+0x1fad590
	void OnRep_ChangeState(); // Function BravoHotelGame.BravoHotelRemoteController.OnRep_ChangeState // (Final|Native|Private) // @ game+0x1fad570
};

// Class BravoHotelGame.BravoHotelC4RemoteController
// Size: 0x1c10 (Inherited: 0x1bf0)
struct ABravoHotelC4RemoteController : ABravoHotelRemoteController {
	struct ABravoHotelProjectileGrenadeC4* ThrownC4; // 0x1bf0(0x08)
	float EnableDistance; // 0x1bf8(0x04)
	char pad_1BFC[0xc]; // 0x1bfc(0x0c)
	float UpdateCheckTime; // 0x1c08(0x04)
	bool bEnableRemoteController; // 0x1c0c(0x01)
	char pad_1C0D[0x3]; // 0x1c0d(0x03)

	void UpdateCheckDistance(); // Function BravoHotelGame.BravoHotelC4RemoteController.UpdateCheckDistance // (Final|Native|Private) // @ game+0x1e9da10
	void OnRep_ThrownC4(); // Function BravoHotelGame.BravoHotelC4RemoteController.OnRep_ThrownC4 // (Final|Native|Private) // @ game+0x1e9d9f0
	float GetTimerRate(); // Function BravoHotelGame.BravoHotelC4RemoteController.GetTimerRate // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e9d9c0
	float GetRemainTime(); // Function BravoHotelGame.BravoHotelC4RemoteController.GetRemainTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e9d990
	void FindThrownC4(); // Function BravoHotelGame.BravoHotelC4RemoteController.FindThrownC4 // (Final|Native|Private) // @ game+0x1e9d970
};

// Class BravoHotelGame.BravoHotelCameraComponent
// Size: 0x960 (Inherited: 0x960)
struct UBravoHotelCameraComponent : UCineCameraComponent {
	float ResetCameraMovementFOVThreshold; // 0x958(0x04)
};

// Class BravoHotelGame.BravoHotelCarKey
// Size: 0x1d20 (Inherited: 0x1bf0)
struct ABravoHotelCarKey : ABravoHotelRemoteController {
	struct TArray<struct ABravoHotelVehicle*> FindVehicles; // 0x1bf0(0x10)
	struct UAkAudioEvent* CarKeySound; // 0x1c00(0x08)
	struct FTimerHandle TimerHandle_DeactiveCarKey; // 0x1c08(0x08)
	struct FTimerHandle Timer_UpdateUltimateVehicleLocation; // 0x1c10(0x08)
	struct UParticleSystemComponent* UltimateParticleComponent; // 0x1c18(0x08)
	struct UDecalComponent* UltimateDecalComponent; // 0x1c20(0x08)
	struct UParticleSystem* UltimateParticle; // 0x1c28(0x08)
	struct UMaterialInterface* UltimateDecal; // 0x1c30(0x08)
	struct TMap<struct FName, struct FLinearColor> CanSpawnColor; // 0x1c38(0x50)
	struct TMap<struct FName, struct FLinearColor> CannotSpawnColor; // 0x1c88(0x50)
	float UltimateParticle_DeltaHeight; // 0x1cd8(0x04)
	char pad_1CDC[0x4]; // 0x1cdc(0x04)
	struct TArray<struct FName> ActiveBuffs; // 0x1ce0(0x10)
	struct TArray<struct FName> UltimateActiveBuffs; // 0x1cf0(0x10)
	struct ABravoHotelVehicle* UltimateSpawnVehicle; // 0x1d00(0x08)
	struct FVector_NetQuantize UltimateSpawnVehicleLocation; // 0x1d08(0x0c)
	char pad_1D14[0xc]; // 0x1d14(0x0c)

	void UpdateUltimateVehicleLocation(); // Function BravoHotelGame.BravoHotelCarKey.UpdateUltimateVehicleLocation // (Final|Native|Protected) // @ game+0x1e9e3b0
	void UpdateUltimateEffects(); // Function BravoHotelGame.BravoHotelCarKey.UpdateUltimateEffects // (Final|Native|Protected) // @ game+0x1e9e390
	void ServerFindCars(); // Function BravoHotelGame.BravoHotelCarKey.ServerFindCars // (Net|NetReliableNative|Event|Protected|NetServer) // @ game+0x1e9e370
	void ServerBroadcastShotBuffEvent(); // Function BravoHotelGame.BravoHotelCarKey.ServerBroadcastShotBuffEvent // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1e9e320
	struct FVector GetUltimateSpawnVehicleLocation(); // Function BravoHotelGame.BravoHotelCarKey.GetUltimateSpawnVehicleLocation // (Final|Native|Public|HasDefaults|Const) // @ game+0x1e9e2e0
	struct ABravoHotelVehicle* GetUltimateSpawnVehicle(); // Function BravoHotelGame.BravoHotelCarKey.GetUltimateSpawnVehicle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1e9e2c0
	void DeactiveCarKey(); // Function BravoHotelGame.BravoHotelCarKey.DeactiveCarKey // (Final|Native|Protected) // @ game+0x1e9e2a0
	void ClientFindCars(struct TArray<struct ABravoHotelVehicle*> ServerFindResults); // Function BravoHotelGame.BravoHotelCarKey.ClientFindCars // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1e9e200
	void ClientFailedSpawnVehicle(); // Function BravoHotelGame.BravoHotelCarKey.ClientFailedSpawnVehicle // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1e9e1e0
	bool CanSpawnCar(); // Function BravoHotelGame.BravoHotelCarKey.CanSpawnCar // (Final|Native|Public) // @ game+0x1e9e1b0
};

// Class BravoHotelGame.BHStationaryCharInfo
// Size: 0x100 (Inherited: 0xb0)
struct UBHStationaryCharInfo : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	bool bLocalCharacterInReplay; // 0xc0(0x01)
	char pad_C1[0x7]; // 0xc1(0x07)
	struct FPerkDeckSelectInfo CurrentPerkDeckSelectInfo; // 0xc8(0x18)
	struct APlayerState* SavedPlayerState; // 0xe0(0x08)
	int32_t ParachuteSkinIndex; // 0xe8(0x04)
	bool bDisconnected; // 0xec(0x01)
	char pad_ED[0x3]; // 0xed(0x03)
	struct APlayerState* DisconnectedPlayerState; // 0xf0(0x08)
	bool IsClientTeam; // 0xf8(0x01)
	char pad_F9[0x7]; // 0xf9(0x07)

	void OnRep_ParachuteSkinIndex(); // Function BravoHotelGame.BHStationaryCharInfo.OnRep_ParachuteSkinIndex // (Final|Native|Protected) // @ game+0x1ec21e0
	void OnRep_CurrentPerkDeckSelectInfo(); // Function BravoHotelGame.BHStationaryCharInfo.OnRep_CurrentPerkDeckSelectInfo // (Final|Native|Protected) // @ game+0x1ec2060
};

// Class BravoHotelGame.BHCharacterReplication
// Size: 0x1d0 (Inherited: 0xb0)
struct UBHCharacterReplication : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	char bIsFreeLook : 1; // 0xc0(0x01)
	char bFPSK_WantToFPSMode : 1; // 0xc0(0x01)
	char bIsFlameDamaged : 1; // 0xc0(0x01)
	char bIsChargingGauge : 1; // 0xc0(0x01)
	char bIsShowingLandingPosition : 1; // 0xc0(0x01)
	char pad_C0_5 : 3; // 0xc0(0x01)
	char pad_C1[0x3]; // 0xc1(0x03)
	int32_t KnockOutCount; // 0xc4(0x04)
	int32_t CriticalTimeCount; // 0xc8(0x04)
	char ReplicatedStateID; // 0xcc(0x01)
	char pad_CD[0x3]; // 0xcd(0x03)
	struct FInventoryItemInfo CastingItemInfo; // 0xd0(0x98)
	struct FVector_NetQuantize SearchInstinctLocation; // 0x168(0x0c)
	char pad_174[0x4]; // 0x174(0x04)
	struct FCastingInfo CastingInfo; // 0x178(0x18)
	struct AActor* RevivingActor; // 0x190(0x08)
	struct AActor* ResuscitatedTargetActor; // 0x198(0x08)
	struct AActor* InteractedTargetActor; // 0x1a0(0x08)
	struct TArray<struct ACharacter*> Revivers; // 0x1a8(0x10)
	struct TArray<struct ACharacter*> Resuscitaters; // 0x1b8(0x10)
	struct UBravoHotelVehicleSeatComponent* OccupyingVehicleSeat; // 0x1c8(0x08)

	void OnRep_ResuscitatedTargetActor(); // Function BravoHotelGame.BHCharacterReplication.OnRep_ResuscitatedTargetActor // (Final|Native|Protected) // @ game+0x1ec2220
	void OnRep_ReplicatedStateID(); // Function BravoHotelGame.BHCharacterReplication.OnRep_ReplicatedStateID // (Final|Native|Protected) // @ game+0x1ec2200
	void OnRep_OccupyingVehicleSeat(); // Function BravoHotelGame.BHCharacterReplication.OnRep_OccupyingVehicleSeat // (Final|Native|Protected) // @ game+0x1ec21c0
	void OnRep_IsChargingGauge(); // Function BravoHotelGame.BHCharacterReplication.OnRep_IsChargingGauge // (Final|Native|Protected) // @ game+0x1ec2180
	void OnRep_FlameDamaged(); // Function BravoHotelGame.BHCharacterReplication.OnRep_FlameDamaged // (Final|Native|Protected) // @ game+0x1ec20c0
	void OnRep_CastingInfo(); // Function BravoHotelGame.BHCharacterReplication.OnRep_CastingInfo // (Final|Native|Protected) // @ game+0x1ec2020
};

// Class BravoHotelGame.BravoHotelCharacterAbilityBase
// Size: 0x30 (Inherited: 0x28)
struct UBravoHotelCharacterAbilityBase : UObject {
	char pad_28[0x8]; // 0x28(0x08)
};

// Class BravoHotelGame.BravoHotelCharacterAkComponent
// Size: 0x4c0 (Inherited: 0x4b0)
struct UBravoHotelCharacterAkComponent : UBravoHotelAudioEmitterComponent {
	char pad_4B0[0x10]; // 0x4b0(0x10)
};

// Class BravoHotelGame.BravoHotelCharacterMovementComponent
// Size: 0x800 (Inherited: 0x6d0)
struct UBravoHotelCharacterMovementComponent : UCharacterMovementComponent {
	char pad_6D0[0x54]; // 0x6d0(0x54)
	float MoveRightSpeedModifier; // 0x724(0x04)
	char pad_728[0xc]; // 0x728(0x0c)
	float MoveBackSpeedModifier; // 0x734(0x04)
	char pad_738[0x54]; // 0x738(0x54)
	float WalkInNoProneWaterSpeedModifier; // 0x78c(0x04)
	float WalkInWaterSpeedModifier; // 0x738(0x04)
	struct UCurveFloat* MoveSlopeSpeedModifierCurve; // 0x770(0x08)
	float ReduceCharacterSpeedInGrenadeExplosionRangeModifier; // 0x744(0x04)
	float LastMaxSpeed; // 0x720(0x04)
	float MaxWalkSpeedProned; // 0x730(0x04)
	char pad_7A8[0x4]; // 0x7a8(0x04)
	float MaxRunSpeed; // 0x7ac(0x04)
	float MaxRunSpeedCrouched; // 0x7a0(0x04)
	float MaxRunSpeedProned; // 0x6ec(0x04)
	char pad_7B8[0x34]; // 0x7b8(0x34)
	float MaxSprintSpeed; // 0x7ec(0x04)
	float MaxSprintSpeedCrouched; // 0x7bc(0x04)
	char pad_7F4[0x4]; // 0x7f4(0x04)
	float MaxSprintSpeedProned; // 0x7f8(0x04)
	float MaxWalkSpeedAMP; // 0x7a8(0x04)
	float MaxWalkSpeedHeartBeatSensor; // 0x6dc(0x04)
	float PronedHalfHeight; // 0x718(0x04)
	float SwimHalfHeight; // 0x750(0x04)
	char bCanWalkOffLedgesWhenProning : 1; // 0x764(0x01)
	char bWantsToProne : 1; // 0x790(0x01)
	char bProneMaintainsBaseLocation : 1; // 0x74c(0x01)
	char bSwimMaintainsBaseLocation : 1; // 0x76c(0x01)
	float FallingDecelerationDuration; // 0x71c(0x04)
	struct FFloatRange SkydivingKValueRange; // 0x7c4(0x10)
	struct FFloatRange SkydivingPitchRange; // 0x708(0x10)
	float MaxParachuteSpeed; // 0x728(0x04)
	float ParachuteKValue; // 0x73c(0x04)
	float MaxRocketJumpSpeed; // 0x740(0x04)
	float DepthWaterNoProne; // 0x7e8(0x04)
	float DepthWaterNoCrouch; // 0x7f0(0x04)
	float DepthWaterSuface; // 0x6d4(0x04)
	float DepthUnderWater; // 0x72c(0x04)
	float AngleUnderWater; // 0x788(0x04)
	float CurrentWaterDepth; // 0x6e0(0x04)
	struct FReplicationMoveParameter MoveParameter; // 0x6fc(0x08)
	float ServerControlRotationInveral; // 0x7e4(0x04)
	float ClientNetSendMoveDeltaTimeScaleBySpectator; // 0x7d4(0x04)
	float LastGroundStateChangedTime; // 0x6d8(0x04)
	struct ABravoHotelCharacter* BravoHotelCharacterOwner; // 0x7b0(0x08)
	float ClientServerSyncSpeed; // 0x6e8(0x04)

	void ServerSetLocationImmediatly(struct FVector TargetLocation, struct FVector TargetVelocity, float ClientTimeStamp, enum class EMovementMode ClientMovementMode); // Function BravoHotelGame.BravoHotelCharacterMovementComponent.ServerSetLocationImmediatly // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1ecf960
	void ServerSetControlRotation(uint32_t View); // Function BravoHotelGame.BravoHotelCharacterMovementComponent.ServerSetControlRotation // (Net|Native|Event|Protected|NetServer|NetValidate) // @ game+0x1ecf8a0
	void ServerSendTimeStampFromClient(float Timestamp); // Function BravoHotelGame.BravoHotelCharacterMovementComponent.ServerSendTimeStampFromClient // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ecf7f0
	void ServerScaleByMoveDeltaTime(float Scale); // Function BravoHotelGame.BravoHotelCharacterMovementComponent.ServerScaleByMoveDeltaTime // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ecf740
	void ServerApplyNetworkMovementMode(char NewMovementMode); // Function BravoHotelGame.BravoHotelCharacterMovementComponent.ServerApplyNetworkMovementMode // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1ecf690
	void SendTimeStampToServer(); // Function BravoHotelGame.BravoHotelCharacterMovementComponent.SendTimeStampToServer // (Final|Native|Public) // @ game+0x1ecf670
	void MulticastScaleByMoveDeltaTime(float Scale); // Function BravoHotelGame.BravoHotelCharacterMovementComponent.MulticastScaleByMoveDeltaTime // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1ecf5f0
	void ClientResetPredictionDataSaveMove(); // Function BravoHotelGame.BravoHotelCharacterMovementComponent.ClientResetPredictionDataSaveMove // (Final|Native|Public|BlueprintCallable) // @ game+0x1ecf5d0
};

// Class BravoHotelGame.BravoHotelCharacterPrefab
// Size: 0x3ac0 (Inherited: 0x3ac0)
struct ABravoHotelCharacterPrefab : ABravoHotelCharacter {
};

// Class BravoHotelGame.BravoHotelCheatManager
// Size: 0x88 (Inherited: 0x78)
struct UBravoHotelCheatManager : UCheatManagerEx {
	struct UUserWidget* OpenedWidget; // 0x78(0x08)
	char pad_80[0x8]; // 0x80(0x08)

	void WeaponDebugText(); // Function BravoHotelGame.BravoHotelCheatManager.WeaponDebugText // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void VehicleAutoCamera(bool bEnables); // Function BravoHotelGame.BravoHotelCheatManager.VehicleAutoCamera // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void UseDevPlayZone(); // Function BravoHotelGame.BravoHotelCheatManager.UseDevPlayZone // (Final|Exec|Native|Public) // @ game+0x151b910
	void UpdateRenderSettings(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.UpdateRenderSettings // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void UnlockRoomLimit(bool bInIsActive); // Function BravoHotelGame.BravoHotelCheatManager.UnlockRoomLimit // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void ToggleCharacterDebugCamera(); // Function BravoHotelGame.BravoHotelCheatManager.ToggleCharacterDebugCamera // (Final|Exec|Native|Public) // @ game+0x151b910
	void TOD(struct FName TODTypeName, float DL_Transition, float PostTransitionDelay, float PostTransition); // Function BravoHotelGame.BravoHotelCheatManager.TOD // (Final|Exec|Native|Public) // @ game+0x1ed5610
	void TestWidget(); // Function BravoHotelGame.BravoHotelCheatManager.TestWidget // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void TestPerkDeckSelectInfoByString(struct FString String); // Function BravoHotelGame.BravoHotelCheatManager.TestPerkDeckSelectInfoByString // (Final|Exec|Native|Public) // @ game+0x1ed5a30
	void TestPerkDeckInfoByString(struct FString String); // Function BravoHotelGame.BravoHotelCheatManager.TestPerkDeckInfoByString // (Final|Exec|Native|Public) // @ game+0x1ed5990
	void TestJson(); // Function BravoHotelGame.BravoHotelCheatManager.TestJson // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x151b910
	void TestGCSLog(struct FString LogString, struct FString BucketString, struct FString ObjectString); // Function BravoHotelGame.BravoHotelCheatManager.TestGCSLog // (Final|Exec|Native|Public) // @ game+0x1ed5760
	void TestClientLog(struct FString LogString); // Function BravoHotelGame.BravoHotelCheatManager.TestClientLog // (Final|Exec|Native|Public) // @ game+0x1ed3490
	void TemporaryLogOut(); // Function BravoHotelGame.BravoHotelCheatManager.TemporaryLogOut // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void TemporaryLogIn(); // Function BravoHotelGame.BravoHotelCheatManager.TemporaryLogIn // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void TeleportWidget(); // Function BravoHotelGame.BravoHotelCheatManager.TeleportWidget // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void StatDS(bool bEnable); // Function BravoHotelGame.BravoHotelCheatManager.StatDS // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void StartGame(float InDelay, bool bUseAircraft); // Function BravoHotelGame.BravoHotelCheatManager.StartGame // (Final|Exec|Native|Public|Const) // @ game+0x1ed5540
	void SpawnTransportForce(); // Function BravoHotelGame.BravoHotelCheatManager.SpawnTransportForce // (Final|Exec|Native|Public) // @ game+0x151b910
	void SpawnTransport(); // Function BravoHotelGame.BravoHotelCheatManager.SpawnTransport // (Final|Exec|Native|Public) // @ game+0x151b910
	void SpawnRateCustomDivision(bool IsVehicle); // Function BravoHotelGame.BravoHotelCheatManager.SpawnRateCustomDivision // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void SpawnPersonalSupplyBoxToNearBuilding(); // Function BravoHotelGame.BravoHotelCheatManager.SpawnPersonalSupplyBoxToNearBuilding // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x151b910
	void SpawnPersonalSupplyBoxFromServerLocation(float X, float Y, float Z); // Function BravoHotelGame.BravoHotelCheatManager.SpawnPersonalSupplyBoxFromServerLocation // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1ed5430
	void SpawnPersonalSupplyBox(float Dist, int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.SpawnPersonalSupplyBox // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1ed5360
	void SpawnMyPersonalSupplyBox(); // Function BravoHotelGame.BravoHotelCheatManager.SpawnMyPersonalSupplyBox // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x151b910
	void SpawnAllItems(); // Function BravoHotelGame.BravoHotelCheatManager.SpawnAllItems // (Final|Exec|Native|Public) // @ game+0x151b910
	void Snowfield(int32_t Radius, int32_t CenterX, int32_t CenterY); // Function BravoHotelGame.BravoHotelCheatManager.Snowfield // (Final|Exec|Native|Public) // @ game+0x1ed5260
	void SmoothFrameRate(int32_t bFlag); // Function BravoHotelGame.BravoHotelCheatManager.SmoothFrameRate // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SkyDiveAll(float ZLocation); // Function BravoHotelGame.BravoHotelCheatManager.SkyDiveAll // (Final|Exec|Native|Public|Const) // @ game+0x1ec27a0
	void SkyDive(float ZLocation); // Function BravoHotelGame.BravoHotelCheatManager.SkyDive // (Final|Exec|Native|Public|Const) // @ game+0x1ec27a0
	void ShowVehiclePosition(); // Function BravoHotelGame.BravoHotelCheatManager.ShowVehiclePosition // (Final|Exec|Native|Public) // @ game+0x151b910
	void ShowNetInfo(); // Function BravoHotelGame.BravoHotelCheatManager.ShowNetInfo // (Final|Exec|Native|Public) // @ game+0x151b910
	void ShowNearPlayerInfo(); // Function BravoHotelGame.BravoHotelCheatManager.ShowNearPlayerInfo // (Final|Exec|Native|Public) // @ game+0x151b910
	void ShowMatchResultWidget(bool bIsShowingSimpleResult, bool bIsMatchEnd, bool bGiveUp, bool bExitGame); // Function BravoHotelGame.BravoHotelCheatManager.ShowMatchResultWidget // (Final|Exec|Native|Public) // @ game+0x1ed50f0
	void ShowKillMessageAll(); // Function BravoHotelGame.BravoHotelCheatManager.ShowKillMessageAll // (Final|Exec|Native|Public) // @ game+0x151b910
	void ShowHudMessageAt(int32_t MessageTypeNum); // Function BravoHotelGame.BravoHotelCheatManager.ShowHudMessageAt // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void ShowHudMessageAll(); // Function BravoHotelGame.BravoHotelCheatManager.ShowHudMessageAll // (Final|Exec|Native|Public) // @ game+0x151b910
	void ShowHitActorPhysFalling(bool bShow); // Function BravoHotelGame.BravoHotelCheatManager.ShowHitActorPhysFalling // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void ShowHideObjectList(); // Function BravoHotelGame.BravoHotelCheatManager.ShowHideObjectList // (Final|Exec|Native|Public) // @ game+0x151b910
	void ShowDebugWidget(); // Function BravoHotelGame.BravoHotelCheatManager.ShowDebugWidget // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void SetUsingOuterBlueZone(bool UsingOuterBlueZone); // Function BravoHotelGame.BravoHotelCheatManager.SetUsingOuterBlueZone // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void SetUsingDynamicMaxPickUpItemSpawnCount(bool UsingDynamicMaxPickUpItemSpawnCount); // Function BravoHotelGame.BravoHotelCheatManager.SetUsingDynamicMaxPickUpItemSpawnCount // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void SetUltimateLevel(int32_t Level); // Function BravoHotelGame.BravoHotelCheatManager.SetUltimateLevel // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetTestAINoAttackTime(int32_t TestAINoAttackTime); // Function BravoHotelGame.BravoHotelCheatManager.SetTestAINoAttackTime // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetTestAIMoveMode(int32_t TestAIMoveMode); // Function BravoHotelGame.BravoHotelCheatManager.SetTestAIMoveMode // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetTestAIDescentDurationWeight(float TestAIDescentDurationWeight); // Function BravoHotelGame.BravoHotelCheatManager.SetTestAIDescentDurationWeight // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetTestAIAttackTime(float TestAIAttackTime); // Function BravoHotelGame.BravoHotelCheatManager.SetTestAIAttackTime // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetTestAIAttackMode(int32_t TestAIAttackMode); // Function BravoHotelGame.BravoHotelCheatManager.SetTestAIAttackMode // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetTeamSize(int32_t InSize); // Function BravoHotelGame.BravoHotelCheatManager.SetTeamSize // (Final|Exec|Native|Public|Const) // @ game+0x1ecb880
	void SetSupplyCount(int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.SetSupplyCount // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetSimulationBoxVisibleState(bool IsShow); // Function BravoHotelGame.BravoHotelCheatManager.SetSimulationBoxVisibleState // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x124d5e0
	void SetReplicateFrequency(int32_t nFrequency); // Function BravoHotelGame.BravoHotelCheatManager.SetReplicateFrequency // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetRecordData(bool RecordBuildingData, bool RecordPersonalSupplyBoxData); // Function BravoHotelGame.BravoHotelCheatManager.SetRecordData // (Final|Exec|Native|Public) // @ game+0x1ed4890
	void SetRecoil(float AR, float SMG, float SG, float DMR, float SR); // Function BravoHotelGame.BravoHotelCheatManager.SetRecoil // (Final|Exec|Native|Public) // @ game+0x1ed4f50
	void SetPersonalSupplyBoxSpawnOption(bool NoDelay, bool MustSpawn); // Function BravoHotelGame.BravoHotelCheatManager.SetPersonalSupplyBoxSpawnOption // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1ed4890
	void SetPersonalSupplyBoxSpawnMode(int32_t Mode); // Function BravoHotelGame.BravoHotelCheatManager.SetPersonalSupplyBoxSpawnMode // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1ecb880
	void SetNewItemSpawnMode(bool IsNewMode); // Function BravoHotelGame.BravoHotelCheatManager.SetNewItemSpawnMode // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void SetMatchingType(struct FString NewMatchingType); // Function BravoHotelGame.BravoHotelCheatManager.SetMatchingType // (Final|Exec|Native|Public) // @ game+0x1ed32b0
	void SetLimitedServerPerformMoveMode(int32_t Mode); // Function BravoHotelGame.BravoHotelCheatManager.SetLimitedServerPerformMoveMode // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetLightLevelOrigin(); // Function BravoHotelGame.BravoHotelCheatManager.SetLightLevelOrigin // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void SetLightLevelDefault(); // Function BravoHotelGame.BravoHotelCheatManager.SetLightLevelDefault // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void SetLightLevel(int32_t ArrayIndex); // Function BravoHotelGame.BravoHotelCheatManager.SetLightLevel // (Final|Exec|Native|Public|Const) // @ game+0x1ecb880
	void SetItemSpawnRule(bool UsingWorldItemSpawnTalbeInBlueZone, bool ItemSpawnInBlueZone, bool UnlimitItemSpawnCnt, bool UsingMaxPickUpItemSpawnCount, int32_t MaxPickUpItemSpawnCount); // Function BravoHotelGame.BravoHotelCheatManager.SetItemSpawnRule // (Final|Exec|Native|Public) // @ game+0x1ed4d90
	void SetInGameHUDVisible(bool bState); // Function BravoHotelGame.BravoHotelCheatManager.SetInGameHUDVisible // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void SetGold(int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.SetGold // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetGlobalItemSpawnRate(float Rate); // Function BravoHotelGame.BravoHotelCheatManager.SetGlobalItemSpawnRate // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetGCRecordData(bool GCRecordData, struct FString GCRecordDataTitle); // Function BravoHotelGame.BravoHotelCheatManager.SetGCRecordData // (Final|Exec|Native|Public) // @ game+0x1ed4ca0
	void SetGameSettingString(struct FString GameSettingString); // Function BravoHotelGame.BravoHotelCheatManager.SetGameSettingString // (Final|Exec|Native|Public) // @ game+0x1ed32b0
	void SetFreeSupplyCount(int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.SetFreeSupplyCount // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetFinalRank(int32_t FinalRank); // Function BravoHotelGame.BravoHotelCheatManager.SetFinalRank // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetDynamicMaxPickUpItemSpawnCount(int32_t MaxLimitCnt, int32_t UserCnt1, int32_t LimitCnt1, int32_t UserCnt2, int32_t LimitCnt2); // Function BravoHotelGame.BravoHotelCheatManager.SetDynamicMaxPickUpItemSpawnCount // (Final|Exec|Native|Public) // @ game+0x1ed4b20
	void SetDurabilityAllSupplyWeapons(int32_t Amount); // Function BravoHotelGame.BravoHotelCheatManager.SetDurabilityAllSupplyWeapons // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetDebugLightPole(bool bIsDebug); // Function BravoHotelGame.BravoHotelCheatManager.SetDebugLightPole // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void SetCameraMode(struct FName NewCamMode); // Function BravoHotelGame.BravoHotelCheatManager.SetCameraMode // (Final|Exec|Native|Public) // @ game+0x16b4f10
	void SetAIPlayerTargetCount(int32_t Val); // Function BravoHotelGame.BravoHotelCheatManager.SetAIPlayerTargetCount // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void SetAIPlayerMinSpawnTime(float Val); // Function BravoHotelGame.BravoHotelCheatManager.SetAIPlayerMinSpawnTime // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetAIPlayerMaxSpawnTime(float Val); // Function BravoHotelGame.BravoHotelCheatManager.SetAIPlayerMaxSpawnTime // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetAIMissTargetDistance(float AIMissTargetDistance); // Function BravoHotelGame.BravoHotelCheatManager.SetAIMissTargetDistance // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetAIHealthRate(float AIHealthRate); // Function BravoHotelGame.BravoHotelCheatManager.SetAIHealthRate // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetAIFireTendency(float AIFireTendency); // Function BravoHotelGame.BravoHotelCheatManager.SetAIFireTendency // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetAIFireAccuracy(float AIFireAccuracy); // Function BravoHotelGame.BravoHotelCheatManager.SetAIFireAccuracy // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetAIDetectTargetEyesightDistance(float AIDetectTargetEyesightDistance); // Function BravoHotelGame.BravoHotelCheatManager.SetAIDetectTargetEyesightDistance // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetAIDetectTargetCloseDistance(float AIDetectTargetCloseDistance); // Function BravoHotelGame.BravoHotelCheatManager.SetAIDetectTargetCloseDistance // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SetAIDamageRate(float AIDamageRate); // Function BravoHotelGame.BravoHotelCheatManager.SetAIDamageRate // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void SendReportReplay(); // Function BravoHotelGame.BravoHotelCheatManager.SendReportReplay // (Final|Exec|Native|Public) // @ game+0x151b910
	void SelectSearchMaterialItemss(struct FName& TopItem, struct FName& BaseItem); // Function BravoHotelGame.BravoHotelCheatManager.SelectSearchMaterialItemss // (Final|Exec|Native|Public|HasOutParms|Const) // @ game+0x1ed4a40
	void SelectPreBlueZoneFromCQRKey(); // Function BravoHotelGame.BravoHotelCheatManager.SelectPreBlueZoneFromCQRKey // (Final|Exec|Native|Public) // @ game+0x151b910
	void SelectNextBlueZoneFromCQRKey(); // Function BravoHotelGame.BravoHotelCheatManager.SelectNextBlueZoneFromCQRKey // (Final|Exec|Native|Public) // @ game+0x151b910
	void SelectNextBlueZone(); // Function BravoHotelGame.BravoHotelCheatManager.SelectNextBlueZone // (Final|Exec|Native|Public) // @ game+0x151b910
	void SelectBlueZone(int32_t Index); // Function BravoHotelGame.BravoHotelCheatManager.SelectBlueZone // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void ReviveSelf(); // Function BravoHotelGame.BravoHotelCheatManager.ReviveSelf // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void ResetTeam(); // Function BravoHotelGame.BravoHotelCheatManager.ResetTeam // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void ResetHideGun(); // Function BravoHotelGame.BravoHotelCheatManager.ResetHideGun // (Final|Exec|Native|Public) // @ game+0x151b910
	void ResetField(); // Function BravoHotelGame.BravoHotelCheatManager.ResetField // (Final|Exec|Native|Public) // @ game+0x151b910
	void ReSelectPlayZoneCenter(); // Function BravoHotelGame.BravoHotelCheatManager.ReSelectPlayZoneCenter // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void RenewGame(); // Function BravoHotelGame.BravoHotelCheatManager.RenewGame // (Final|Exec|Native|Public) // @ game+0x151b910
	void RemoveWidget(); // Function BravoHotelGame.BravoHotelCheatManager.RemoveWidget // (Final|Exec|Native|Public) // @ game+0x151b910
	void RemoveVehicles(); // Function BravoHotelGame.BravoHotelCheatManager.RemoveVehicles // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void RemoveNameTooltip(struct FName NickName); // Function BravoHotelGame.BravoHotelCheatManager.RemoveNameTooltip // (Final|Exec|Native|Public) // @ game+0x16b4f10
	void RemoveAllWeaponOption(); // Function BravoHotelGame.BravoHotelCheatManager.RemoveAllWeaponOption // (Final|Exec|Native|Public) // @ game+0x151b910
	void RemoveAllTestAI(); // Function BravoHotelGame.BravoHotelCheatManager.RemoveAllTestAI // (Final|Exec|Native|Public) // @ game+0x151b910
	void RemoveAllNameTooltip(); // Function BravoHotelGame.BravoHotelCheatManager.RemoveAllNameTooltip // (Final|Exec|Native|Public) // @ game+0x151b910
	void RemoveAllDediAutoBot(); // Function BravoHotelGame.BravoHotelCheatManager.RemoveAllDediAutoBot // (Final|Exec|Native|Public) // @ game+0x151b910
	void RemoteExec(struct FString Cmds); // Function BravoHotelGame.BravoHotelCheatManager.RemoteExec // (Final|Exec|Native|Public) // @ game+0x1ed32b0
	void RedZoneManager(int32_t Phase); // Function BravoHotelGame.BravoHotelCheatManager.RedZoneManager // (Final|Exec|Native|Public|Const) // @ game+0x1ecb880
	void RedZoneEx(int32_t Count, float Range); // Function BravoHotelGame.BravoHotelCheatManager.RedZoneEx // (Final|Exec|Native|Public|Const) // @ game+0x1ed36b0
	void redzone(); // Function BravoHotelGame.BravoHotelCheatManager.redzone // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void RandomCOI(bool bAllCharacter); // Function BravoHotelGame.BravoHotelCheatManager.RandomCOI // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void PrintVehicleLocations(); // Function BravoHotelGame.BravoHotelCheatManager.PrintVehicleLocations // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void PrintNeareastVehicleLocations(); // Function BravoHotelGame.BravoHotelCheatManager.PrintNeareastVehicleLocations // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void PopupDialog(struct FString Text); // Function BravoHotelGame.BravoHotelCheatManager.PopupDialog // (Final|Exec|Native|Public) // @ game+0x1ed32b0
	void PlayWinAnimation(); // Function BravoHotelGame.BravoHotelCheatManager.PlayWinAnimation // (Final|Exec|Native|Public) // @ game+0x151b910
	void PlayCharacterVoice(struct FName& Idx); // Function BravoHotelGame.BravoHotelCheatManager.PlayCharacterVoice // (Final|Exec|Native|Public|HasOutParms|Const) // @ game+0x1eb4510
	void PickupIntervalTime(float IntervalTime); // Function BravoHotelGame.BravoHotelCheatManager.PickupIntervalTime // (Final|Exec|Native|Public|Const) // @ game+0x1ec27a0
	void PersonalSupplyBoxWarp(int32_t BoxIndex); // Function BravoHotelGame.BravoHotelCheatManager.PersonalSupplyBoxWarp // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1ecb880
	void PersonalSupplyBoxShowPing(bool bShow); // Function BravoHotelGame.BravoHotelCheatManager.PersonalSupplyBoxShowPing // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x124d5e0
	void PersonalSupplyBoxShowAll(bool bShow); // Function BravoHotelGame.BravoHotelCheatManager.PersonalSupplyBoxShowAll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x124d5e0
	void PersonalSupplyBoxReset(); // Function BravoHotelGame.BravoHotelCheatManager.PersonalSupplyBoxReset // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x151b910
	void PersonalSupplyBoxRecallAll(); // Function BravoHotelGame.BravoHotelCheatManager.PersonalSupplyBoxRecallAll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x151b910
	void PersonalSupplyBoxReassignAllForce(int32_t PhaseNum); // Function BravoHotelGame.BravoHotelCheatManager.PersonalSupplyBoxReassignAllForce // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1ecb880
	void PersonalSupplyBoxReassignAll(int32_t PhaseNum); // Function BravoHotelGame.BravoHotelCheatManager.PersonalSupplyBoxReassignAll // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1ecb880
	void PersonalSupplyBoxRandomItem(bool bUse, struct FName TableID); // Function BravoHotelGame.BravoHotelCheatManager.PersonalSupplyBoxRandomItem // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1ed4980
	void PersonalSupplyBoxPhaseInfo(int32_t PhaseNum); // Function BravoHotelGame.BravoHotelCheatManager.PersonalSupplyBoxPhaseInfo // (Final|Exec|Native|Public|BlueprintCallable) // @ game+0x1ecb880
	void PerfectShot(); // Function BravoHotelGame.BravoHotelCheatManager.PerfectShot // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void PakInfoOutputFile(); // Function BravoHotelGame.BravoHotelCheatManager.PakInfoOutputFile // (Final|Exec|Native|Public) // @ game+0x1ed4960
	void NoCoolTime(bool bState); // Function BravoHotelGame.BravoHotelCheatManager.NoCoolTime // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void NoAircraft(); // Function BravoHotelGame.BravoHotelCheatManager.NoAircraft // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void NetProfileDS(bool bEnable); // Function BravoHotelGame.BravoHotelCheatManager.NetProfileDS // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void MarkSkylightDirty(); // Function BravoHotelGame.BravoHotelCheatManager.MarkSkylightDirty // (Final|Native|Public) // @ game+0x151b910
	void LogTickableObjectsForPawn(bool bIncludeComponents, bool bIncludeSelf); // Function BravoHotelGame.BravoHotelCheatManager.LogTickableObjectsForPawn // (Final|Exec|Native|Public) // @ game+0x1ed4890
	void LogItemSpawn(); // Function BravoHotelGame.BravoHotelCheatManager.LogItemSpawn // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void LoadLight(int32_t Index); // Function BravoHotelGame.BravoHotelCheatManager.LoadLight // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void LeaveVoiceChannels(); // Function BravoHotelGame.BravoHotelCheatManager.LeaveVoiceChannels // (Final|Exec|Native|Public) // @ game+0x151b910
	void JoinVoiceChannels(struct FString ChanelName); // Function BravoHotelGame.BravoHotelCheatManager.JoinVoiceChannels // (Final|Exec|Native|Public) // @ game+0x1ed32b0
	void IWantToDie(); // Function BravoHotelGame.BravoHotelCheatManager.IWantToDie // (Final|Exec|Native|Public) // @ game+0x151b910
	void ItemSpawnRateWidget(); // Function BravoHotelGame.BravoHotelCheatManager.ItemSpawnRateWidget // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void ItemSpawner(bool bEnables); // Function BravoHotelGame.BravoHotelCheatManager.ItemSpawner // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void ItemSpawnDebugWidget(); // Function BravoHotelGame.BravoHotelCheatManager.ItemSpawnDebugWidget // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	bool InternalGiveItem(struct FName& ItemRowName, int32_t Count, struct UPlayerInventoryComponent* Character); // Function BravoHotelGame.BravoHotelCheatManager.InternalGiveItem // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1ed4780
	void InitCustomItemSpawnRate(bool IsVehicle); // Function BravoHotelGame.BravoHotelCheatManager.InitCustomItemSpawnRate // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void InfiniteAmmo(); // Function BravoHotelGame.BravoHotelCheatManager.InfiniteAmmo // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void hp(int32_t Rate); // Function BravoHotelGame.BravoHotelCheatManager.hp // (Final|Exec|Native|Public|Const) // @ game+0x1ecb880
	void HideSubLevel(struct FString SubLevelName); // Function BravoHotelGame.BravoHotelCheatManager.HideSubLevel // (Final|Exec|Native|Public) // @ game+0x1ed3490
	void HideAllPrefabByName(struct FString Name); // Function BravoHotelGame.BravoHotelCheatManager.HideAllPrefabByName // (Final|Exec|Native|Public) // @ game+0x1ed3490
	void HideAllObjectByTag(struct FString Tag, bool bActor, bool bComponent, bool bDestroy); // Function BravoHotelGame.BravoHotelCheatManager.HideAllObjectByTag // (Final|Exec|Native|Public) // @ game+0x1ed45c0
	void HideAllObjectByName(struct FString Name, bool bActor, bool bComponent, bool bDestroy); // Function BravoHotelGame.BravoHotelCheatManager.HideAllObjectByName // (Final|Exec|Native|Public) // @ game+0x1ed45c0
	void HideAllObjectByClass(struct FString ClassName, bool bDestroy); // Function BravoHotelGame.BravoHotelCheatManager.HideAllObjectByClass // (Final|Exec|Native|Public) // @ game+0x1ed3020
	void HideAllLandscapeLevels(); // Function BravoHotelGame.BravoHotelCheatManager.HideAllLandscapeLevels // (Final|Exec|Native|Public) // @ game+0x151b910
	void HardwareBenchmark(int32_t WorkScale, float CPUMultiplier, float GPUMultiplier); // Function BravoHotelGame.BravoHotelCheatManager.HardwareBenchmark // (Final|Exec|Native|Public) // @ game+0x1ed44c0
	void GodAll(bool bGod); // Function BravoHotelGame.BravoHotelCheatManager.GodAll // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Go(struct FName& AreaName, bool IsEnableCharacterRotate); // Function BravoHotelGame.BravoHotelCheatManager.Go // (Final|Exec|Native|Public|HasOutParms) // @ game+0x1ed43f0
	void GiveAmmo(int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.GiveAmmo // (Final|Exec|Native|Public|Const) // @ game+0x1ecb880
	void Give(struct FName& TableRowName, int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.Give // (Final|Exec|Native|Public|HasOutParms|Const) // @ game+0x1ed4320
	void GetPCStatusInDedi(); // Function BravoHotelGame.BravoHotelCheatManager.GetPCStatusInDedi // (Final|Exec|Native|Public) // @ game+0x151b910
	void GetAllTeamInfoInDedi(); // Function BravoHotelGame.BravoHotelCheatManager.GetAllTeamInfoInDedi // (Final|Exec|Native|Public) // @ game+0x151b910
	void GainGold(int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.GainGold // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void Fuel(int32_t Rate); // Function BravoHotelGame.BravoHotelCheatManager.Fuel // (Final|Exec|Native|Public|Const) // @ game+0x1ecb880
	void ForceViewTarget(); // Function BravoHotelGame.BravoHotelCheatManager.ForceViewTarget // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void ForceSpectate(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.ForceSpectate // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void ForceSpawnSupplyBox(float X, float Y); // Function BravoHotelGame.BravoHotelCheatManager.ForceSpawnSupplyBox // (Final|Exec|Native|Public) // @ game+0x1ed4260
	void ForceReconnect(); // Function BravoHotelGame.BravoHotelCheatManager.ForceReconnect // (Final|Exec|Native|Public) // @ game+0x151b910
	void ForcePossess(); // Function BravoHotelGame.BravoHotelCheatManager.ForcePossess // (Final|Exec|Native|Public) // @ game+0x151b910
	void ForceItemSpawn(); // Function BravoHotelGame.BravoHotelCheatManager.ForceItemSpawn // (Final|Exec|Native|Public) // @ game+0x151b910
	void ForceCrash(); // Function BravoHotelGame.BravoHotelCheatManager.ForceCrash // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void ForceClientCrash(float DelayTime); // Function BravoHotelGame.BravoHotelCheatManager.ForceClientCrash // (Final|Exec|Native|Public|Const) // @ game+0x1ec27a0
	void FindBuiding(struct FString BuildingName, bool AllFind); // Function BravoHotelGame.BravoHotelCheatManager.FindBuiding // (Final|Exec|Native|Public) // @ game+0x1ed4170
	void EquipPerkID(struct FString Slot, int32_t ID, int32_t Level); // Function BravoHotelGame.BravoHotelCheatManager.EquipPerkID // (Final|Exec|Native|Public) // @ game+0x1ed4010
	void EquipPerk(struct FString Slot, struct FName PerkName, int32_t Level); // Function BravoHotelGame.BravoHotelCheatManager.EquipPerk // (Final|Exec|Native|Public) // @ game+0x1ed3eb0
	void EnlightenTextureEnvironmentBrightness(float Brightness); // Function BravoHotelGame.BravoHotelCheatManager.EnlightenTextureEnvironmentBrightness // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void EndlessGame(bool bEndlessGame); // Function BravoHotelGame.BravoHotelCheatManager.EndlessGame // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void EnableRot(bool IsEnable); // Function BravoHotelGame.BravoHotelCheatManager.EnableRot // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void EnablePrintDamageInfo(bool bState); // Function BravoHotelGame.BravoHotelCheatManager.EnablePrintDamageInfo // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void EnableMakeAccount(); // Function BravoHotelGame.BravoHotelCheatManager.EnableMakeAccount // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void EnableHideGun(); // Function BravoHotelGame.BravoHotelCheatManager.EnableHideGun // (Final|Exec|Native|Public) // @ game+0x151b910
	void EnableCharacterVoice(bool bState); // Function BravoHotelGame.BravoHotelCheatManager.EnableCharacterVoice // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void EnableAutoBot(bool bEnable); // Function BravoHotelGame.BravoHotelCheatManager.EnableAutoBot // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void ElevatorSpeed(float Speed); // Function BravoHotelGame.BravoHotelCheatManager.ElevatorSpeed // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void DumpAllAreaRenderOverview(); // Function BravoHotelGame.BravoHotelCheatManager.DumpAllAreaRenderOverview // (Final|Exec|Native|Public) // @ game+0x1ed3e90
	void DropTransportBox(float Height, struct FName& TableKey); // Function BravoHotelGame.BravoHotelCheatManager.DropTransportBox // (Final|Exec|Native|Public|HasOutParms) // @ game+0x1ed3db0
	void DisableVehicleSpawner(bool bInDisabled); // Function BravoHotelGame.BravoHotelCheatManager.DisableVehicleSpawner // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void DefaultCameraLag(float cameraLag); // Function BravoHotelGame.BravoHotelCheatManager.DefaultCameraLag // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void DeactivateAutoStart(); // Function BravoHotelGame.BravoHotelCheatManager.DeactivateAutoStart // (Final|Exec|Native|Public) // @ game+0x151b910
	void CustomSetting(); // Function BravoHotelGame.BravoHotelCheatManager.CustomSetting // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void Crash(); // Function BravoHotelGame.BravoHotelCheatManager.Crash // (Final|Exec|Native|Public) // @ game+0x151b910
	void ClientNetScaleByMoveDeltaTime(float Scale); // Function BravoHotelGame.BravoHotelCheatManager.ClientNetScaleByMoveDeltaTime // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void ClearMaterialPing(); // Function BravoHotelGame.BravoHotelCheatManager.ClearMaterialPing // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void CheckTimeOnChangeCollision(int32_t Count, bool bCollisionOn); // Function BravoHotelGame.BravoHotelCheatManager.CheckTimeOnChangeCollision // (Final|Exec|Native|Public) // @ game+0x1ed3cf0
	void CheckSpawnItems(); // Function BravoHotelGame.BravoHotelCheatManager.CheckSpawnItems // (Final|Exec|Native|Public) // @ game+0x151b910
	void CheckLineTrace(); // Function BravoHotelGame.BravoHotelCheatManager.CheckLineTrace // (Final|Exec|Native|Public) // @ game+0x151b910
	void CheckBuildingCount(); // Function BravoHotelGame.BravoHotelCheatManager.CheckBuildingCount // (Final|Exec|Native|Public) // @ game+0x151b910
	void CheatWidget(); // Function BravoHotelGame.BravoHotelCheatManager.CheatWidget // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void Cheatable(); // Function BravoHotelGame.BravoHotelCheatManager.Cheatable // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void ChangeTickIntervalForPawn(float NewInterval, bool bIncludeComponents, bool bIncludeSelf); // Function BravoHotelGame.BravoHotelCheatManager.ChangeTickIntervalForPawn // (Final|Exec|Native|Public) // @ game+0x1ed3be0
	void ChangeSearchMaterialRule(bool IgnoreStartStateSearchMaterial, int32_t ShowCount, float RemoveDistance, float MaxDistance, float MinDistance, float ReSearchWaitingTime, float PingLifeTime, bool ImmediatelyRemovePing, float SearchDelayTime); // Function BravoHotelGame.BravoHotelCheatManager.ChangeSearchMaterialRule // (Final|Exec|Native|Public) // @ game+0x1ed3950
	void ChangeRecipeMode(int32_t ModeIndex); // Function BravoHotelGame.BravoHotelCheatManager.ChangeRecipeMode // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void ChangePersonType(struct FString NewPersonType); // Function BravoHotelGame.BravoHotelCheatManager.ChangePersonType // (Final|Exec|Native|Public) // @ game+0x1ed3490
	void ChangePerkMode(int32_t ModeIndex); // Function BravoHotelGame.BravoHotelCheatManager.ChangePerkMode // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void ChangeItemSpawnDelay(float NewDelay); // Function BravoHotelGame.BravoHotelCheatManager.ChangeItemSpawnDelay // (Final|Exec|Native|Public) // @ game+0x1ec27a0
	void ChangeDeck(struct FName DeckName); // Function BravoHotelGame.BravoHotelCheatManager.ChangeDeck // (Final|Exec|Native|Public) // @ game+0x16b4f10
	void ChangeCustomItemSpawnRate(bool IsBlueZoneSpawnRate, struct FName& AreaSpawnRateKey, struct FName& ItemName, float Rate, bool IsVehicleData); // Function BravoHotelGame.BravoHotelCheatManager.ChangeCustomItemSpawnRate // (Final|Exec|Native|Public|HasOutParms) // @ game+0x1ed3780
	void ChangeAreaStandardGroupDataList(struct FString Data); // Function BravoHotelGame.BravoHotelCheatManager.ChangeAreaStandardGroupDataList // (Final|Exec|Native|Public) // @ game+0x1ed32b0
	void ChangeAircraftLine(bool TestForce); // Function BravoHotelGame.BravoHotelCheatManager.ChangeAircraftLine // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void CallTransportAircraft(struct FName RandomItemKey); // Function BravoHotelGame.BravoHotelCheatManager.CallTransportAircraft // (Final|Exec|Native|Public) // @ game+0x16b4f10
	void BluezoneSetPhase(int32_t PhaseNum); // Function BravoHotelGame.BravoHotelCheatManager.BluezoneSetPhase // (Final|Exec|Native|Public|Const) // @ game+0x1ecb880
	void BluezoneNextPhase(); // Function BravoHotelGame.BravoHotelCheatManager.BluezoneNextPhase // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void BluezoneCurPhaseOtherArea(); // Function BravoHotelGame.BravoHotelCheatManager.BluezoneCurPhaseOtherArea // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void BlueZone(bool bIsOn); // Function BravoHotelGame.BravoHotelCheatManager.BlueZone // (Final|Exec|Native|Public|Const) // @ game+0x124d5e0
	void AutoSearchMaterialItemss(); // Function BravoHotelGame.BravoHotelCheatManager.AutoSearchMaterialItemss // (Final|Exec|Native|Public|Const) // @ game+0x151b910
	void AutoProfileEx(bool bInIsAutoProfile); // Function BravoHotelGame.BravoHotelCheatManager.AutoProfileEx // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void AutoProfile(int32_t Mode, float Interval); // Function BravoHotelGame.BravoHotelCheatManager.AutoProfile // (Final|Exec|Native|Public) // @ game+0x1ed36b0
	void AutoNameTooltip(); // Function BravoHotelGame.BravoHotelCheatManager.AutoNameTooltip // (Final|Exec|Native|Public) // @ game+0x151b910
	void AutoMoveRecordingTimeKeyTeleport(struct FString SlotName, int32_t StartKeyTime); // Function BravoHotelGame.BravoHotelCheatManager.AutoMoveRecordingTimeKeyTeleport // (Final|Exec|Native|Public) // @ game+0x1ed3580
	void AutoMoveRecordingTimeKeyPlay(struct FString SlotName, int32_t StartKeyTime); // Function BravoHotelGame.BravoHotelCheatManager.AutoMoveRecordingTimeKeyPlay // (Final|Exec|Native|Public) // @ game+0x1ed3580
	void AutoMoveRecordingSave(struct FString SlotName); // Function BravoHotelGame.BravoHotelCheatManager.AutoMoveRecordingSave // (Final|Exec|Native|Public) // @ game+0x1ed3490
	void AutoMoveRecordingPlay(struct FString SlotNameList); // Function BravoHotelGame.BravoHotelCheatManager.AutoMoveRecordingPlay // (Final|Exec|Native|Public) // @ game+0x1ed3490
	void AutoMoveRecording(); // Function BravoHotelGame.BravoHotelCheatManager.AutoMoveRecording // (Final|Exec|Native|Public) // @ game+0x151b910
	void ArrmoryResult(int32_t Idx); // Function BravoHotelGame.BravoHotelCheatManager.ArrmoryResult // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void Appearance(struct FString SlotName, int32_t& AppearanceID, int32_t& ColorID); // Function BravoHotelGame.BravoHotelCheatManager.Appearance // (Final|Exec|Native|Public|HasOutParms|Const) // @ game+0x1ed3350
	void AllSupplyWeapons(); // Function BravoHotelGame.BravoHotelCheatManager.AllSupplyWeapons // (Final|Exec|Native|Public) // @ game+0x151b910
	void AddWidget(struct FString WidetClass); // Function BravoHotelGame.BravoHotelCheatManager.AddWidget // (Final|Exec|Native|Public) // @ game+0x1ed32b0
	void AddWeaponOption(struct FName OptionKey); // Function BravoHotelGame.BravoHotelCheatManager.AddWeaponOption // (Final|Exec|Native|Public) // @ game+0x16b4f10
	void AddTestAIEx(int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.AddTestAIEx // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void AddTestAI(int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.AddTestAI // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void AddPerk(int32_t MinCount, int32_t MaxCount); // Function BravoHotelGame.BravoHotelCheatManager.AddPerk // (Final|Exec|Native|Public) // @ game+0x1ed2f60
	void AddNameTooltip(struct FName NickName); // Function BravoHotelGame.BravoHotelCheatManager.AddNameTooltip // (Final|Exec|Native|Public) // @ game+0x16b4f10
	void AddImpulseVehicle(float ImpulsePower, float Direction_X, float Direction_Y, float Direction_Z); // Function BravoHotelGame.BravoHotelCheatManager.AddImpulseVehicle // (Final|Exec|Native|Public|Const) // @ game+0x1ed3160
	void AddDediAutoBot(int32_t Count); // Function BravoHotelGame.BravoHotelCheatManager.AddDediAutoBot // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void AddClassLevel(int32_t Level); // Function BravoHotelGame.BravoHotelCheatManager.AddClassLevel // (Final|Exec|Native|Public) // @ game+0x1ecb880
	void AddArea(struct FString AreaName, bool IsTeleportPointList); // Function BravoHotelGame.BravoHotelCheatManager.AddArea // (Final|Exec|Native|Public) // @ game+0x1ed3020
	void ActivateAutoStart(int32_t TimeSecond, int32_t PlayerCount); // Function BravoHotelGame.BravoHotelCheatManager.ActivateAutoStart // (Final|Exec|Native|Public) // @ game+0x1ed2f60
	void Abusing_VehicleThrottlingWithNoFuel(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_VehicleThrottlingWithNoFuel // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_VehicleFloodedButDriving(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_VehicleFloodedButDriving // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_VehicleControllingNotByDriver(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_VehicleControllingNotByDriver // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_SkipGrenadeThrowTime(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_SkipGrenadeThrowTime // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_ResizeSimulatedCharacter(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_ResizeSimulatedCharacter // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_ProjectileNoCollision(bool bNoCollision); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_ProjectileNoCollision // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_NoBuffEnd(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_NoBuffEnd // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidWeaponHave(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidWeaponHave // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidWeaponDormancy(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidWeaponDormancy // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidTeleportRange(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidTeleportRange // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidPickupWeaponDistance(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidPickupWeaponDistance // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidPickupDistance(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidPickupDistance // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidPickupAttachmentDistance(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidPickupAttachmentDistance // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidParachuteQuickLandingHeight(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidParachuteQuickLandingHeight // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidNoOxygenDamage(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidNoOxygenDamage // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidMeleeAttackDamage(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidMeleeAttackDamage // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidLeanDegree(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidLeanDegree // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidKickDoorDistance(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidKickDoorDistance // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidGrenadeGuidedShot(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidGrenadeGuidedShot // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidGrenadeDelayTime(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidGrenadeDelayTime // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidGrenadeDamage(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidGrenadeDamage // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidGold(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidGold // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidFOV(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidFOV // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidFlashbang(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidFlashbang // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidFireLocation(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidFireLocation // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidEquipUnequipWeaponTime(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidEquipUnequipWeaponTime // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidEnterVehicle(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidEnterVehicle // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidCameraLocation(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidCameraLocation // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidBoltAction(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidBoltAction // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidAreaSkillZoneInfo(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidAreaSkillZoneInfo // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_InvalidAmplifierRange(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_InvalidAmplifierRange // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void Abusing_GrenadeOutOfRange(bool bActive); // Function BravoHotelGame.BravoHotelCheatManager.Abusing_GrenadeOutOfRange // (Final|Exec|Native|Public) // @ game+0x124d5e0
	void AbilityDebugText(); // Function BravoHotelGame.BravoHotelCheatManager.AbilityDebugText // (Final|Exec|Native|Public|Const) // @ game+0x151b910
};

// Class BravoHotelGame.BravoHotelCheatWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelCheatWidget : UUserWidget {

	void Toggle(); // Function BravoHotelGame.BravoHotelCheatWidget.Toggle // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void Show(); // Function BravoHotelGame.BravoHotelCheatWidget.Show // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetCharacterDataUidList_BP(struct TArray<struct FString>& UidList); // Function BravoHotelGame.BravoHotelCheatWidget.SetCharacterDataUidList_BP // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void SetCharacterDataUidList(); // Function BravoHotelGame.BravoHotelCheatWidget.SetCharacterDataUidList // (Final|Native|Public) // @ game+0x1ed62e0
	void SetCharacterData_BP(struct FDediDataCharacterInfo& Data); // Function BravoHotelGame.BravoHotelCheatWidget.SetCharacterData_BP // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void SetCharacterData(); // Function BravoHotelGame.BravoHotelCheatWidget.SetCharacterData // (Final|Native|Public) // @ game+0x1ed62c0
	void SendGetCharacterDataList(); // Function BravoHotelGame.BravoHotelCheatWidget.SendGetCharacterDataList // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed62a0
	void SendGetCharacterData(struct FString UID); // Function BravoHotelGame.BravoHotelCheatWidget.SendGetCharacterData // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed61b0
	void Hide(); // Function BravoHotelGame.BravoHotelCheatWidget.Hide // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void GetCurrentTime(struct FString& TimeString, struct FString& TimeUnix); // Function BravoHotelGame.BravoHotelCheatWidget.GetCurrentTime // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1ed6080
	void Close(); // Function BravoHotelGame.BravoHotelCheatWidget.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed6060
};

// Class BravoHotelGame.BravoHotelClassicSettingPopupInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelClassicSettingPopupInterface : UInterface {

	void OpenMenu(bool OpenLobby); // Function BravoHotelGame.BravoHotelClassicSettingPopupInterface.OpenMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool IsMenuOpen(); // Function BravoHotelGame.BravoHotelClassicSettingPopupInterface.IsMenuOpen // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1ed64c0
	void CloseMenu(); // Function BravoHotelGame.BravoHotelClassicSettingPopupInterface.CloseMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelClassicSettingPopupWidget
// Size: 0x250 (Inherited: 0x248)
struct UBravoHotelClassicSettingPopupWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
};

// Class BravoHotelGame.BravoHotelCoherentBaseWidget
// Size: 0x288 (Inherited: 0x248)
struct UBravoHotelCoherentBaseWidget : UUserWidget {
	struct UCoherentUIGTWidget* CoherentWidget; // 0x248(0x08)
	struct UAkAudioEvent* AudioEvent; // 0x250(0x08)
	struct TArray<struct UBravoHotelCoherentObject*> ObjectArray; // 0x258(0x10)
	char pad_268[0x8]; // 0x268(0x08)
	struct FString WidgetName; // 0x270(0x10)
	bool bInvisibleAfterLoading; // 0x280(0x01)
	char pad_281[0x7]; // 0x281(0x07)

	void OnSetLocalSavedSettings(struct FString Settings); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.OnSetLocalSavedSettings // (Final|Native|Public) // @ game+0x1ed7cd0
	void OnScriptingReady(); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.OnScriptingReady // (Final|Native|Protected) // @ game+0x1ed7cb0
	void OnMouseEvent_Internal(struct FCoh_MouseEventData& MouseEvent); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.OnMouseEvent_Internal // (Final|Native|Public|HasOutParms) // @ game+0x1ed7c00
	void OnMouseEvent(enum class ECoh_MouseButton Button, enum class ECoh_EventType EventType, int32_t X, int32_t Y); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.OnMouseEvent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	struct FString OnMainStringTable(struct TArray<struct FString> RowNames); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.OnMainStringTable // (Final|Native|Public) // @ game+0x1ed7a50
	struct FString OnGetLocalSavedSettings(); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.OnGetLocalSavedSettings // (Final|Native|Public) // @ game+0x1ed79d0
	void OnFinishLoad(struct FString Path, bool isMainFrame); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.OnFinishLoad // (Native|Public) // @ game+0x1ed78e0
	struct FString OnFindTable(struct FCoh_Query& QuarryInfo); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.OnFindTable // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1ed77e0
	void OnAkAudioEvent(struct FString EventName); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.OnAkAudioEvent // (Final|Native|Public) // @ game+0x1ed7740
	void BindUI(); // Function BravoHotelGame.BravoHotelCoherentBaseWidget.BindUI // (Native|Public) // @ game+0x1ed7720
};

// Class BravoHotelGame.BravoHotelCoherentTestHUD
// Size: 0x470 (Inherited: 0x428)
struct ABravoHotelCoherentTestHUD : ABravoHotelBaseHUD {
	struct UUserWidget* MyWidgetClass; // 0x428(0x08)
	char pad_430[0x10]; // 0x430(0x10)
	struct FMulticastInlineDelegate ChangeCloseInvenDelegate; // 0x440(0x10)
	struct FMulticastInlineDelegate ChangeWeaponDelegate; // 0x450(0x10)
	struct FMulticastInlineDelegate SendTriggerDelegate; // 0x460(0x10)

	void SendTriggerEvent(struct FString Str, int32_t Value); // Function BravoHotelGame.BravoHotelCoherentTestHUD.SendTriggerEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed81e0
	void SendTriggerDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCoherentTestHUD.SendTriggerDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnCloseInventory(); // Function BravoHotelGame.BravoHotelCoherentTestHUD.OnCloseInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed81c0
	void OnChangeWeapon(); // Function BravoHotelGame.BravoHotelCoherentTestHUD.OnChangeWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed81a0
	void OnChangeText(); // Function BravoHotelGame.BravoHotelCoherentTestHUD.OnChangeText // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed8180
	void ChangeWeaponDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCoherentTestHUD.ChangeWeaponDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void ChangeCloseInvenDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCoherentTestHUD.ChangeCloseInvenDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void BindUI(); // Function BravoHotelGame.BravoHotelCoherentTestHUD.BindUI // (Final|Native|Public) // @ game+0x1ed8160
};

// Class BravoHotelGame.BravoHotelCompassUnitWidget
// Size: 0x250 (Inherited: 0x248)
struct UBravoHotelCompassUnitWidget : UUserWidget {
	float Angle; // 0x248(0x04)
	char pad_24C[0x4]; // 0x24c(0x04)
};

// Class BravoHotelGame.BravoHotelCompassWidget
// Size: 0x350 (Inherited: 0x248)
struct UBravoHotelCompassWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	float Length; // 0x250(0x04)
	float ArragnedAngle; // 0x254(0x04)
	float AngleBetweenUnits; // 0x258(0x04)
	float DefaultLengthRate; // 0x25c(0x04)
	float AdditionalLengthRate; // 0x260(0x04)
	char pad_264[0x14]; // 0x264(0x14)
	struct FMarkerInfo PersonalSupplyBoxMarkerInfo; // 0x278(0x28)
	struct TArray<struct FMarkerInfo> MarkerInfos; // 0x2a0(0x10)
	struct TArray<struct FMaterialItemMarkerInfo> MaterialItemMarkerInfos; // 0x2b0(0x10)
	struct TArray<struct FLocalPingMarkerInfo> LocalPingMarkerInfos; // 0x2c0(0x10)
	struct TArray<struct FResuscitationMarkerInfo> ResuscitationMarkerInfos; // 0x2d0(0x10)
	struct FExpertWeaponItemMarkerInfo ExpertWeaponItemMarkerInfo; // 0x2e0(0x40)
	struct TArray<struct FCompassUnit> UnitArray; // 0x320(0x10)
	struct TArray<struct FCompassUnit> UnitArray2; // 0x330(0x10)
	struct UCurveFloat* ScaleCurve; // 0x340(0x08)
	char pad_348[0x8]; // 0x348(0x08)

	struct UWidget* UpdateUnit(float& CurrentAngle, float& CurrentPos, float& WidgetAngle, bool& Reset, bool IsTest); // Function BravoHotelGame.BravoHotelCompassWidget.UpdateUnit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1edb200
	void UpdatePersonalSupplyMarker(enum class EPersonalSupplyBoxPingType NewType); // Function BravoHotelGame.BravoHotelCompassWidget.UpdatePersonalSupplyMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x1edb180
	void ResetResuscitationMarker(); // Function BravoHotelGame.BravoHotelCompassWidget.ResetResuscitationMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x1edb160
	void RemoveResuscitationMarker(struct ABravoHotelPlayerState* TargetState); // Function BravoHotelGame.BravoHotelCompassWidget.RemoveResuscitationMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x1edb0e0
	void RemoveMaterialItemMarker(int32_t PingIndex); // Function BravoHotelGame.BravoHotelCompassWidget.RemoveMaterialItemMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x1edb060
	void RemoveLocalPingMarker(int32_t PingIndex); // Function BravoHotelGame.BravoHotelCompassWidget.RemoveLocalPingMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x1edafe0
	void RemoveExpertWeaponItemMarker(); // Function BravoHotelGame.BravoHotelCompassWidget.RemoveExpertWeaponItemMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x1edafc0
	void OnUpdateViewAngle(float Value, int32_t RealAngle); // Function BravoHotelGame.BravoHotelCompassWidget.OnUpdateViewAngle // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnUpdateResuscitationMarkerPosition(struct UWidget* MarkerWidget, struct FVector2D Pos); // Function BravoHotelGame.BravoHotelCompassWidget.OnUpdateResuscitationMarkerPosition // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnUpdatePersonalSupplyBoxMarkerPosition(); // Function BravoHotelGame.BravoHotelCompassWidget.OnUpdatePersonalSupplyBoxMarkerPosition // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnUpdateMaterialItemMarkerPosition(int32_t PingIndex); // Function BravoHotelGame.BravoHotelCompassWidget.OnUpdateMaterialItemMarkerPosition // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnUpdateMarkerPosition(int32_t WidgetIdx); // Function BravoHotelGame.BravoHotelCompassWidget.OnUpdateMarkerPosition // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnUpdateLocalPingMarkerPosition(int32_t PingIndex); // Function BravoHotelGame.BravoHotelCompassWidget.OnUpdateLocalPingMarkerPosition // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnUpdateExpertWeaponItemMarkerPosition(); // Function BravoHotelGame.BravoHotelCompassWidget.OnUpdateExpertWeaponItemMarkerPosition // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnSetResuscitationMarkerInfo(struct UWidget* MarkerWidget, struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelCompassWidget.OnSetResuscitationMarkerInfo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnSetPersonalSupplyBoxMarkerInfo(struct FMarkerInfo& MarkerPingInfo, bool Opened, bool UsingSpawnAnimation); // Function BravoHotelGame.BravoHotelCompassWidget.OnSetPersonalSupplyBoxMarkerInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnSetMaterialItemMarkerInfo(struct FMaterialItemMarkerInfo& MaterialMarker, bool UsingSpawnAnimation); // Function BravoHotelGame.BravoHotelCompassWidget.OnSetMaterialItemMarkerInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnSetMarkerInfo(struct FMarkerInfo& MarkerPingInfo, bool UsingSpawnAnimation); // Function BravoHotelGame.BravoHotelCompassWidget.OnSetMarkerInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnSetLocalPingMarkerInfo(struct FLocalPingMarkerInfo& LocalPingMarker, bool UsingSpawnAnimation); // Function BravoHotelGame.BravoHotelCompassWidget.OnSetLocalPingMarkerInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnSetExpertWeaponItemMarkerInfo(struct FExpertWeaponItemMarkerInfo& ExpertWeaponMarker, bool UsingSpawnAnimation); // Function BravoHotelGame.BravoHotelCompassWidget.OnSetExpertWeaponItemMarkerInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnResetUnit(struct UWidget* Widget, float UnitAngle); // Function BravoHotelGame.BravoHotelCompassWidget.OnResetUnit // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	struct UWidget* GetUnit(int32_t Index, float& Angle, bool IsTest); // Function BravoHotelGame.BravoHotelCompassWidget.GetUnit // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1edaea0
	bool GetMarkerPosX(struct FVector& MarkerPosition, struct FVector& ActorLocation, struct FRotator ActorRotation, float& Distance, bool UsingShifting); // Function BravoHotelGame.BravoHotelCompassWidget.GetMarkerPosX // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1edacb0
	float GetDirectionAngle_Impl(float TargetAngle, float CurrentAngle, struct UCurveFloat* Curve); // Function BravoHotelGame.BravoHotelCompassWidget.GetDirectionAngle_Impl // (Final|Native|Public|BlueprintCallable) // @ game+0x1edaba0
	float GetCurvedFactor_Impl(float TargetAngle, float CurrentAngle, float Weight, float Offset, struct UCurveFloat* Curve); // Function BravoHotelGame.BravoHotelCompassWidget.GetCurvedFactor_Impl // (Final|Native|Public|BlueprintCallable) // @ game+0x1edaa00
	struct UUserWidget* CreateResuscitationMarker(); // Function BravoHotelGame.BravoHotelCompassWidget.CreateResuscitationMarker // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	struct UUserWidget* CreateMaterialItemMarker(); // Function BravoHotelGame.BravoHotelCompassWidget.CreateMaterialItemMarker // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void CreateMarker(int32_t Count); // Function BravoHotelGame.BravoHotelCompassWidget.CreateMarker // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	struct UUserWidget* CreateLocalPingnMarker(); // Function BravoHotelGame.BravoHotelCompassWidget.CreateLocalPingnMarker // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	struct UUserWidget* CreateExpertWeaponItemMarker(); // Function BravoHotelGame.BravoHotelCompassWidget.CreateExpertWeaponItemMarker // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	float ConvertAngletoDistance_Impl(float Angle); // Function BravoHotelGame.BravoHotelCompassWidget.ConvertAngletoDistance_Impl // (Final|Native|Public|BlueprintCallable) // @ game+0x1eda970
	float ControllerRotationPosX(float& CurrentAngle); // Function BravoHotelGame.BravoHotelCompassWidget.ControllerRotationPosX // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eda8c0
	void AddUnit(struct UWidget* Widget, float Angle, bool IsTest); // Function BravoHotelGame.BravoHotelCompassWidget.AddUnit // (Final|Native|Public|BlueprintCallable) // @ game+0x1eda7b0
	void AddResuscitationMarker(struct ABravoHotelPlayerState* TargetState); // Function BravoHotelGame.BravoHotelCompassWidget.AddResuscitationMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x1eda730
	void AddPersonalSupplyMarker(struct FVector& MarkerPosition); // Function BravoHotelGame.BravoHotelCompassWidget.AddPersonalSupplyMarker // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1eda6a0
	void AddMaterialItemMarker(struct FMaterialItemPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelCompassWidget.AddMaterialItemMarker // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eda5f0
	void AddMarker(struct ABravoHotelPlayerState* TargetState); // Function BravoHotelGame.BravoHotelCompassWidget.AddMarker // (Final|Native|Public|BlueprintCallable) // @ game+0x1eda570
	void AddLocalPingMarker(struct FBravoHotelLocalPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelCompassWidget.AddLocalPingMarker // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eda4d0
	void AddExpertWeaponItemMarker(struct FExpertWeaponPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelCompassWidget.AddExpertWeaponItemMarker // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1eda420
};

// Class BravoHotelGame.BravoHotelCompassWidgetEx
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelCompassWidgetEx : UUserWidget {
};

// Class BravoHotelGame.BravohotelConditionBase
// Size: 0x28 (Inherited: 0x28)
struct UBravohotelConditionBase : UObject {
};

// Class BravoHotelGame.BravoHotelConfirmPopupWidget
// Size: 0x250 (Inherited: 0x248)
struct UBravoHotelConfirmPopupWidget : UUserWidget {
	struct UUserWidget* ParantWidget; // 0x248(0x08)
};

// Class BravoHotelGame.BravoHotelConversationComponent
// Size: 0x150 (Inherited: 0xb0)
struct UBravoHotelConversationComponent : UActorComponent {
	char pad_B0[0x18]; // 0xb0(0x18)
	struct UBravoHotelConversationWidget* ConversationWidgetClass; // 0xc8(0x08)
	struct UBravoHotelConversationWidget* CurrentConversationWidget; // 0xd0(0x08)
	struct FName CurrentConversationKey; // 0xd8(0x08)
	int32_t CurrentSentenceIndex; // 0xe0(0x04)
	char pad_E4[0x1c]; // 0xe4(0x1c)
	struct TMap<struct FName, struct FAudioPlayingHandle> VoiceChannelInfo; // 0x100(0x50)

	void StopConversation(); // Function BravoHotelGame.BravoHotelConversationComponent.StopConversation // (Final|Native|Public|BlueprintCallable) // @ game+0x1edbe10
	void StartConversation(struct FName ConversationKey); // Function BravoHotelGame.BravoHotelConversationComponent.StartConversation // (Final|Native|Public|BlueprintCallable) // @ game+0x1edbd90
	void ShowSentence(struct FSentenceData& SentenceData); // Function BravoHotelGame.BravoHotelConversationComponent.ShowSentence // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1edbb40
	void RemoveCurrentSentence(); // Function BravoHotelGame.BravoHotelConversationComponent.RemoveCurrentSentence // (Final|Native|Public|BlueprintCallable) // @ game+0x1edbb20
	void OnClicked(); // Function BravoHotelGame.BravoHotelConversationComponent.OnClicked // (Final|Native|Public) // @ game+0x1edbb00
	void NextSentence(); // Function BravoHotelGame.BravoHotelConversationComponent.NextSentence // (Final|Native|Public|BlueprintCallable) // @ game+0x1edbae0
};

// Class BravoHotelGame.BravoHotelConversationWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelConversationWidget : UUserWidget {
	char pad_248[0x10]; // 0x248(0x10)

	void ShowSentense(struct FSentenceData& SentenceData); // Function BravoHotelGame.BravoHotelConversationWidget.ShowSentense // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnClicked(); // Function BravoHotelGame.BravoHotelConversationWidget.OnClicked // (Final|Native|Public|BlueprintCallable) // @ game+0x1edc240
	void HideSentense(); // Function BravoHotelGame.BravoHotelConversationWidget.HideSentense // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ConversationWidgetClicked__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelConversationWidget.ConversationWidgetClicked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelCreateCharacterWidget
// Size: 0x308 (Inherited: 0x288)
struct UBravoHotelCreateCharacterWidget : UBravoHotelCoherentBaseWidget {
	char pad_288[0x10]; // 0x288(0x10)
	struct UBravoHotelCustomizedCharacter* CustomizedCharacterComponent; // 0x298(0x08)
	char pad_2A0[0x68]; // 0x2a0(0x68)

	void OnReceiveCharacterTab(struct FString ReceiveTab); // Function BravoHotelGame.BravoHotelCreateCharacterWidget.OnReceiveCharacterTab // (Final|Native|Private) // @ game+0x1edc8b0
	void OnReadyToLobby(struct FString AuthToken); // Function BravoHotelGame.BravoHotelCreateCharacterWidget.OnReadyToLobby // (Final|Native|Private) // @ game+0x1edc810
	void OnNickNameConfirmCoh(); // Function BravoHotelGame.BravoHotelCreateCharacterWidget.OnNickNameConfirmCoh // (Final|Native|Private) // @ game+0x1edc7f0
	void OnNickNameCheckCoh(); // Function BravoHotelGame.BravoHotelCreateCharacterWidget.OnNickNameCheckCoh // (Final|Native|Private) // @ game+0x1edc7d0
	void OnDefaultWearbleItems(struct FString Items); // Function BravoHotelGame.BravoHotelCreateCharacterWidget.OnDefaultWearbleItems // (Final|Native|Private) // @ game+0x1edc730
	void OnCancelTermsCondition(); // Function BravoHotelGame.BravoHotelCreateCharacterWidget.OnCancelTermsCondition // (Final|Native|Private) // @ game+0x1edc710
	void MouseEvent(struct FCoh_MouseEventData& MouseEvent); // Function BravoHotelGame.BravoHotelCreateCharacterWidget.MouseEvent // (Final|Native|Private|HasOutParms) // @ game+0x1edc660
};

// Class BravoHotelGame.BravoHotelCrosshair
// Size: 0xf8 (Inherited: 0x28)
struct UBravoHotelCrosshair : UObject {
	char pad_28[0x18]; // 0x28(0x18)
	struct FCrosshairDataMap CrosshairDataMap; // 0x40(0x50)
	struct FCrosshairDataMap CrosshairDataMap_ADS; // 0x90(0x50)
	char pad_E0[0x18]; // 0xe0(0x18)

	void OnChangeOption(struct TArray<enum class ESettingType>& ChangeTypeList); // Function BravoHotelGame.BravoHotelCrosshair.OnChangeOption // (Final|Native|Public|HasOutParms) // @ game+0x1edd300
};

// Class BravoHotelGame.BravoHotelCrosshairManager
// Size: 0xd8 (Inherited: 0x28)
struct UBravoHotelCrosshairManager : UObject {
	struct TMap<struct FName, struct UBravoHotelCrosshair*> Map; // 0x28(0x50)
	struct TMap<struct FName, struct UBravoHotelCrosshair*> AdditiveMap; // 0x78(0x50)
	struct TArray<struct FName> ActiveAdditiveCroshairList; // 0xc8(0x10)

	void RemoveAdditiveCrosshair(struct FName& CrosshairRowName); // Function BravoHotelGame.BravoHotelCrosshairManager.RemoveAdditiveCrosshair // (Final|Native|Public|HasOutParms) // @ game+0x1edd7f0
	struct UBravoHotelCrosshair* GetCrossHair(struct FName& CrosshairRowName); // Function BravoHotelGame.BravoHotelCrosshairManager.GetCrossHair // (Final|Native|Public|HasOutParms) // @ game+0x1edd750
	struct TMap<struct FName, struct UBravoHotelCrosshair*> GetAdditiveCrosshairMap(); // Function BravoHotelGame.BravoHotelCrosshairManager.GetAdditiveCrosshairMap // (Final|Native|Public) // @ game+0x1edd710
	struct UBravoHotelCrosshair* Create(struct FName& CrosshairRowName); // Function BravoHotelGame.BravoHotelCrosshairManager.Create // (Final|Native|Public|HasOutParms) // @ game+0x1edd670
	void AddAdditiveCrosshair(struct FName& CrosshairRowName); // Function BravoHotelGame.BravoHotelCrosshairManager.AddAdditiveCrosshair // (Final|Native|Public|HasOutParms) // @ game+0x1edd5e0
};

// Class BravoHotelGame.BravoHotelCryptoFunction
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelCryptoFunction : UBlueprintFunctionLibrary {

	struct FString OpensslEncryptAES256CBC(struct FString InContent); // Function BravoHotelGame.BravoHotelCryptoFunction.OpensslEncryptAES256CBC // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1eddd90
	struct FString OpensslDecryptAES256CBC(struct FString InCipherString); // Function BravoHotelGame.BravoHotelCryptoFunction.OpensslDecryptAES256CBC // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1eddcb0
	bool EncryptAES256(struct FString& OutContent, struct FString Key); // Function BravoHotelGame.BravoHotelCryptoFunction.EncryptAES256 // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1eddb90
	bool DecryptAES256(struct FString& OutContent, struct FString Key); // Function BravoHotelGame.BravoHotelCryptoFunction.DecryptAES256 // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1edda70
};

// Class BravoHotelGame.BravoHotelCustomizedCharacter
// Size: 0x88 (Inherited: 0x30)
struct UBravoHotelCustomizedCharacter : UBravoHotelCoherentObject {
	struct FMulticastInlineDelegate MoveLobbyCharacterWearableDelegate; // 0x30(0x10)
	struct FMulticastInlineDelegate MoveLobbyCharacterAppearanceDelegate; // 0x40(0x10)
	struct FMulticastInlineDelegate MouseEventDelegate; // 0x50(0x10)
	struct FString WearableMenu; // 0x60(0x10)
	char pad_70[0x18]; // 0x70(0x18)

	void OnPreViewEquipAppearance(struct FString PCLooks); // Function BravoHotelGame.BravoHotelCustomizedCharacter.OnPreViewEquipAppearance // (Final|Native|Public) // @ game+0x1ede2e0
	void OnParachuteSkinUpdate(struct TSoftObjectPtr<UMaterialInterface> TargetParachuteSkin); // Function BravoHotelGame.BravoHotelCustomizedCharacter.OnParachuteSkinUpdate // (Final|Native|Public) // @ game+0x1ede1c0
	void OnMoveLobbyCharacterWearableDelegate__DelegateSignature(struct FString Menu); // DelegateFunction BravoHotelGame.BravoHotelCustomizedCharacter.OnMoveLobbyCharacterWearableDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnMoveLobbyCharacterAppearanceDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelCustomizedCharacter.OnMoveLobbyCharacterAppearanceDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnMouseEventDelegate__DelegateSignature(enum class ECoh_EventType EventType, enum class ECoh_MouseButton Button, struct FVector2D Pos, struct FVector2D Wheel); // DelegateFunction BravoHotelGame.BravoHotelCustomizedCharacter.OnMouseEventDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasDefaults) // @ game+0x23a3b60
	void OnEntranceCharacterAppearance(); // Function BravoHotelGame.BravoHotelCustomizedCharacter.OnEntranceCharacterAppearance // (Final|Native|Public|BlueprintCallable) // @ game+0x1ede1a0
};

// Class BravoHotelGame.BravoHotelCustomizeWardrobeWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelCustomizeWardrobeWidget : UUserWidget {
	struct TArray<struct FBravoHotelWardrobeDataType> WearableList; // 0x248(0x10)
};

// Class BravoHotelGame.BravoHotelCustomMatchWidget
// Size: 0x400 (Inherited: 0x248)
struct UBravoHotelCustomMatchWidget : UUserWidget {
	struct FBravoHotelBlueZoneInfo Data; // 0x248(0x1a8)
	struct TArray<struct FBattleRoyalPhaseInfo> PhaseInfo; // 0x3f0(0x10)

	void Ok(); // Function BravoHotelGame.BravoHotelCustomMatchWidget.Ok // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	bool LoadData(struct FString& ErroMessage); // Function BravoHotelGame.BravoHotelCustomMatchWidget.LoadData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1edef90
	void Close(); // Function BravoHotelGame.BravoHotelCustomMatchWidget.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x1edef70
};

// Class BravoHotelGame.BravoHotelDamageType
// Size: 0xc0 (Inherited: 0x40)
struct UBravoHotelDamageType : UDamageType {
	struct FName Name; // 0x40(0x08)
	struct TArray<struct FName> Names; // 0x48(0x10)
	char bApplyHurtCondition : 1; // 0x58(0x01)
	char bShouldCalculatePerBoneDamage : 1; // 0x58(0x01)
	char bSpawnBlood : 1; // 0x58(0x01)
	char bSpawnDust : 1; // 0x58(0x01)
	char bPlayDamageEffect : 1; // 0x58(0x01)
	char bDrawBloodPostProcess : 1; // 0x58(0x01)
	char pad_58_6 : 2; // 0x58(0x01)
	char pad_59[0x7]; // 0x59(0x07)
	struct FString IconPath; // 0x60(0x10)
	struct TSoftObjectPtr<UPaperSprite> Icon; // 0x70(0x28)
	struct FText CauserText; // 0x98(0x18)
	float MultiplyRatio; // 0xb0(0x04)
	char pad_B4[0xc]; // 0xb4(0x0c)

	bool IsDamageTypeName(struct FName& InName); // Function BravoHotelGame.BravoHotelDamageType.IsDamageTypeName // (Final|Native|Public|HasOutParms|Const) // @ game+0x1ee2f40
	struct TArray<struct FName> GetDamageTypeNames(); // Function BravoHotelGame.BravoHotelDamageType.GetDamageTypeNames // (Final|Native|Public|Const) // @ game+0x1ee2e80
	struct FName GetDamageTypeName(); // Function BravoHotelGame.BravoHotelDamageType.GetDamageTypeName // (Final|Native|Public|Const) // @ game+0x1ee2e60
};

// Class BravoHotelGame.BravoHotelDamageType_Environment
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Environment : UBravoHotelDamageType {
};

// Class BravoHotelGame.BravoHotelDamageType_BlueZone
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_BlueZone : UBravoHotelDamageType_Environment {
};

// Class BravoHotelGame.BravoHotelDamageType_NoOxygen
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_NoOxygen : UBravoHotelDamageType_Environment {
};

// Class BravoHotelGame.BravoHotelDamageType_KnockOut
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_KnockOut : UBravoHotelDamageType_Environment {
};

// Class BravoHotelGame.BravoHotelDamageType_DotDamage
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_DotDamage : UBravoHotelDamageType {
};

// Class BravoHotelGame.BravoHotelDamageType_DamageBleed
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_DamageBleed : UBravoHotelDamageType_DotDamage {
};

// Class BravoHotelGame.BravoHotelDamageType_FireFlame
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_FireFlame : UBravoHotelDamageType_DotDamage {
};

// Class BravoHotelGame.BravoHotelDamageType_MolotovFlame
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_MolotovFlame : UBravoHotelDamageType_FireFlame {
};

// Class BravoHotelGame.BravoHotelDamageType_GatlingFlame
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_GatlingFlame : UBravoHotelDamageType_FireFlame {
};

// Class BravoHotelGame.BravoHotelDamageType_MolotovTrap
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_MolotovTrap : UBravoHotelDamageType_FireFlame {
};

// Class BravoHotelGame.BravoHotelDamageType_FireWall
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_FireWall : UBravoHotelDamageType_FireFlame {
};

// Class BravoHotelGame.BravoHotelDamageType_FlameThrower
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_FlameThrower : UBravoHotelDamageType_FireFlame {
};

// Class BravoHotelGame.BravoHotelDamageType_MeteorFlame
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_MeteorFlame : UBravoHotelDamageType_FireFlame {
};

// Class BravoHotelGame.BravoHotelDamageType_Poisoning
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Poisoning : UBravoHotelDamageType_DotDamage {
};

// Class BravoHotelGame.BravoHotelDamageType_Poisoning_Chemical
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Poisoning_Chemical : UBravoHotelDamageType_Poisoning {
};

// Class BravoHotelGame.BravoHotelDamageType_Poisoning_Gas
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Poisoning_Gas : UBravoHotelDamageType_Poisoning {
};

// Class BravoHotelGame.BravoHotelDamageType_Attack
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Attack : UBravoHotelDamageType {
};

// Class BravoHotelGame.BravoHotelDamageType_Weapon
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Weapon : UBravoHotelDamageType_Attack {
};

// Class BravoHotelGame.BravoHotelDamageType_Shotgun
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Shotgun : UBravoHotelDamageType_Weapon {
};

// Class BravoHotelGame.BravoHotelDamageType_Melee
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Melee : UBravoHotelDamageType_Attack {
};

// Class BravoHotelGame.BravoHotelDamageType_Punch
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Punch : UBravoHotelDamageType_Melee {
};

// Class BravoHotelGame.BravoHotelDamageType_JumpPunch
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_JumpPunch : UBravoHotelDamageType_Punch {
};

// Class BravoHotelGame.BravoHotelDamageType_Kick
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Kick : UBravoHotelDamageType_Melee {
};

// Class BravoHotelGame.BravoHotelDamageType_WindowBreaching
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_WindowBreaching : UBravoHotelDamageType_Melee {
};

// Class BravoHotelGame.BravoHotelDamageType_GunMelee
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_GunMelee : UBravoHotelDamageType_Melee {
};

// Class BravoHotelGame.BravoHotelDamageType_WoodBat
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_WoodBat : UBravoHotelDamageType_Melee {
};

// Class BravoHotelGame.BravoHotelDamageType_FireAx
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_FireAx : UBravoHotelDamageType_Melee {
};

// Class BravoHotelGame.BravoHotelDamageType_Explosion
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Explosion : UBravoHotelDamageType_Attack {
};

// Class BravoHotelGame.BravoHotelDamageType_GrenadeFragment
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_GrenadeFragment : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_Flashbang
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Flashbang : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_UpgradedFlashbang
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_UpgradedFlashbang : UBravoHotelDamageType_Flashbang {
};

// Class BravoHotelGame.BravoHotelDamageType_VehicleExplosion
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_VehicleExplosion : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_RedZone
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_RedZone : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_PerkBomb
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_PerkBomb : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_Nuclear
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Nuclear : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_Rocket
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Rocket : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_MeteorStrike
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_MeteorStrike : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_DoorExplosion
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_DoorExplosion : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_Dynamite
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_Dynamite : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_C4
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_C4 : UBravoHotelDamageType_Explosion {
};

// Class BravoHotelGame.BravoHotelDamageType_ThrowingWeapon
// Size: 0xc0 (Inherited: 0xc0)
struct UBravoHotelDamageType_ThrowingWeapon : UBravoHotelDamageType_Attack {
};

// Class BravoHotelGame.BravoHotelDamageType_Impulse
// Size: 0xc8 (Inherited: 0xc0)
struct UBravoHotelDamageType_Impulse : UBravoHotelDamageType {
	char pad_C0[0x8]; // 0xc0(0x08)
};

// Class BravoHotelGame.BravoHotelDamageType_Bump
// Size: 0xc8 (Inherited: 0xc8)
struct UBravoHotelDamageType_Bump : UBravoHotelDamageType_Impulse {
};

// Class BravoHotelGame.BravoHotelDamageType_Crash
// Size: 0xc8 (Inherited: 0xc8)
struct UBravoHotelDamageType_Crash : UBravoHotelDamageType_Impulse {
};

// Class BravoHotelGame.BravoHotelDamageType_Parkour
// Size: 0xc8 (Inherited: 0xc8)
struct UBravoHotelDamageType_Parkour : UBravoHotelDamageType_Impulse {
};

// Class BravoHotelGame.BravoHotelDamageType_Falling
// Size: 0xc8 (Inherited: 0xc8)
struct UBravoHotelDamageType_Falling : UBravoHotelDamageType_Impulse {
};

// Class BravoHotelGame.BravoHotelDataManager
// Size: 0x5f8 (Inherited: 0x28)
struct UBravoHotelDataManager : UObject {
	char pad_28[0x3b8]; // 0x28(0x3b8)
	struct ABattleRoyaleGameMode* BattleRoyalGameMode; // 0x3e0(0x08)
	char pad_3E8[0x1d0]; // 0x3e8(0x1d0)
	struct ABravoHotelCharacter* ClientLogCharacter; // 0x5b8(0x08)
	char pad_5C0[0x38]; // 0x5c0(0x38)
};

// Class BravoHotelGame.BravoHotelDebugInfo
// Size: 0x140 (Inherited: 0x28)
struct UBravoHotelDebugInfo : UObject {
	char pad_28[0x118]; // 0x28(0x118)
};

// Class BravoHotelGame.BravoHotelDebugWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelDebugWidget : UUserWidget {
	struct FString DebugString; // 0x248(0x10)
};

// Class BravoHotelGame.BravoHotelDemoNetDriver
// Size: 0x13b8 (Inherited: 0x1398)
struct UBravoHotelDemoNetDriver : UDemoNetDriver {
	char pad_1398[0x20]; // 0x1398(0x20)
};

// Class BravoHotelGame.BravoHotelStaticMeshComponent
// Size: 0x550 (Inherited: 0x540)
struct UBravoHotelStaticMeshComponent : UStaticMeshComponent {
	char pad_540[0x10]; // 0x540(0x10)
};

// Class BravoHotelGame.BravoHotelDestructibleComponent
// Size: 0x610 (Inherited: 0x550)
struct UBravoHotelDestructibleComponent : UBravoHotelStaticMeshComponent {
	char pad_550[0x8]; // 0x550(0x08)
	struct TArray<struct UBravoHotelDamageType*> AllowedDamageType; // 0x558(0x10)
	bool bForceDestructionByVehicleDamage; // 0x568(0x01)
	char pad_569[0x3]; // 0x569(0x03)
	float ImpulseStrength; // 0x56c(0x04)
	float hp; // 0x570(0x04)
	int32_t CurrentHP; // 0x574(0x04)
	struct UAkAudioEvent* DestructedSound; // 0x578(0x08)
	bool bIsWindowComponent; // 0x580(0x01)
	char pad_581[0x7]; // 0x581(0x07)
	struct ADestructibleActor* DestructibleActorClass; // 0x588(0x08)
	struct TSoftObjectPtr<UDestructibleMesh> DestructibleMesh; // 0x590(0x28)
	char pad_5B8[0x3d]; // 0x5b8(0x3d)
	bool bIsDestruct; // 0x5f5(0x01)
	char pad_5F6[0x1a]; // 0x5f6(0x1a)

	void SimulatedDestructibleMesh(struct FVector HitLocation, struct FVector ImpactDirection); // Function BravoHotelGame.BravoHotelDestructibleComponent.SimulatedDestructibleMesh // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x1f0d0b0
	void OnRewind(); // Function BravoHotelGame.BravoHotelDestructibleComponent.OnRewind // (Final|Native|Public|BlueprintCallable) // @ game+0x1f0d090
	void OnRep_IsDestruct(); // Function BravoHotelGame.BravoHotelDestructibleComponent.OnRep_IsDestruct // (Final|Native|Protected) // @ game+0x1f0d070
	void OnFractureEffectSpawned(struct FFractureEffect& Effect, struct FVector& HitPoint, struct FVector& HitDirection); // Function BravoHotelGame.BravoHotelDestructibleComponent.OnFractureEffectSpawned // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1f0cf20
	void OnCompleteLoadDestructibleMesh(); // Function BravoHotelGame.BravoHotelDestructibleComponent.OnCompleteLoadDestructibleMesh // (Final|Native|Protected) // @ game+0x1f0cf00
	void MulticastOnDestructComponent(struct FRepDestructComponentInfo RepDestructComponetInfo); // Function BravoHotelGame.BravoHotelDestructibleComponent.MulticastOnDestructComponent // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1f0ce60
	void K2_OnDestructComponent(float DamageAmount, struct FHitResult& HitInfo, struct AController* EventInstigator, struct AActor* DamageCauser, struct FVector& ShotInfo); // Function BravoHotelGame.BravoHotelDestructibleComponent.K2_OnDestructComponent // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void InitializeDestructibleComponent(struct UDestructibleComponent* TargetDM); // Function BravoHotelGame.BravoHotelDestructibleComponent.InitializeDestructibleComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1f0cde0
	void AwakeOwnerDormancy(); // Function BravoHotelGame.BravoHotelDestructibleComponent.AwakeOwnerDormancy // (Final|Native|Public|BlueprintCallable) // @ game+0x1f0cdc0
};

// Class BravoHotelGame.BravoHotelDestructibleEx
// Size: 0x330 (Inherited: 0x320)
struct ABravoHotelDestructibleEx : AActor {
	char pad_320[0x8]; // 0x320(0x08)
	bool bHiddenInReplay; // 0x328(0x01)
	char pad_329[0x7]; // 0x329(0x07)

	void HandleInReplay(bool bState); // Function BravoHotelGame.BravoHotelDestructibleEx.HandleInReplay // (Final|Native|Public|BlueprintCallable) // @ game+0x1f0d310
};

// Class BravoHotelGame.BravoHotelDetectItemSpawnBoxComponent
// Size: 0x500 (Inherited: 0x4d0)
struct UBravoHotelDetectItemSpawnBoxComponent : UBoxComponent {
	struct TArray<struct FWorldSpawnItemInfo> SpawnItemList; // 0x4c8(0x10)
	char pad_4E0[0xc]; // 0x4e0(0x0c)
	float CheckItemSpawnDistance; // 0x4ec(0x04)
	float CheckUnImportanttemSpawnDistance; // 0x4f0(0x04)
	char pad_4F4[0xc]; // 0x4f4(0x0c)

	void SpawnItems(struct UBravoHotelItemSpawnBoxComponent* Box, struct TArray<struct FSpawnItemResult>& ItemsToSpawn); // Function BravoHotelGame.BravoHotelDetectItemSpawnBoxComponent.SpawnItems // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f0dd90
	void CheckItemSpawnMode(); // Function BravoHotelGame.BravoHotelDetectItemSpawnBoxComponent.CheckItemSpawnMode // (Final|Native|Public) // @ game+0x1f0dd70
	void AsyncLoadItemClasses(enum class EItemSpawnPriorityType ItemSpawnPriorityType); // Function BravoHotelGame.BravoHotelDetectItemSpawnBoxComponent.AsyncLoadItemClasses // (Final|Native|Public|BlueprintCallable) // @ game+0x1f0dcf0
};

// Class BravoHotelGame.BravoHotelDevelopmentBlackMarket
// Size: 0x2e8 (Inherited: 0x248)
struct UBravoHotelDevelopmentBlackMarket : UUserWidget {
	struct TArray<struct FBravoHotelBlackMarketDataType> WeaponList; // 0x248(0x10)
	struct TArray<struct FBravoHotelBlackMarketDataType> AmmoList; // 0x258(0x10)
	struct TArray<struct FBravoHotelBlackMarketDataType> AttachmentList; // 0x268(0x10)
	struct TArray<struct FBravoHotelBlackMarketDataType> WearableList; // 0x278(0x10)
	struct TArray<struct FBravoHotelBlackMarketDataType> ConsumableList; // 0x288(0x10)
	struct TArray<struct FBravoHotelBlackMarketDataType> CustomList; // 0x298(0x10)
	struct TArray<struct FBravoHotelBlackMarketDataType> VehicleList; // 0x2a8(0x10)
	struct TArray<struct FBravoHotelBlackMarketDataType> GearList; // 0x2b8(0x10)
	struct TArray<struct FBravoHotelBlackMarketDataType> PerkList; // 0x2c8(0x10)
	struct TArray<struct FBravoHotelBlackMarketDataType> PresetList; // 0x2d8(0x10)

	void SortListForDevelopment(enum class EBlackmarketTabType TabType); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SortListForDevelopment // (Final|Native|Public|BlueprintCallable) // @ game+0x1f0f640
	void SortList(enum class EBlackmarketTabType TabType, int32_t SortType, bool bAscend, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SortList // (Final|Native|Public|BlueprintCallable) // @ game+0x1f0f4f0
	void SetWearableSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetWearableSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetWeaponSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetWeaponSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetVehicleSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetVehicleSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPresetSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetPresetSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPerkSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetPerkSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetGearSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetGearSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetCustomizeSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetCustomizeSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetConsumableSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetConsumableSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetAttachmentSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetAttachmentSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetAmmoSlot(int32_t SlotType, bool bHideOption); // Function BravoHotelGame.BravoHotelDevelopmentBlackMarket.SetAmmoSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelDiedWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelDiedWidget : UUserWidget {

	void Show(struct FText& Name); // Function BravoHotelGame.BravoHotelDiedWidget.Show // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelDoor
// Size: 0x748 (Inherited: 0x320)
struct ABravoHotelDoor : AActor {
	char pad_320[0x8]; // 0x320(0x08)
	struct USceneComponent* RootNode; // 0x328(0x08)
	struct USceneComponent* MoveNode; // 0x330(0x08)
	struct UStaticMeshComponent* StaticMesh; // 0x338(0x08)
	struct UBoxComponent* PlayerInteractiveBox; // 0x340(0x08)
	struct UBoxComponent* PushBox; // 0x348(0x08)
	struct UArrowComponent* ForwardArrow; // 0x350(0x08)
	float InDoorNetCullDistanceSquared; // 0x358(0x04)
	float OutDoorNetCullDistanceSquared; // 0x35c(0x04)
	struct UDestructibleComponent* DestructibleMesh; // 0x360(0x08)
	struct UDestructibleMesh* DestructibleMeshTest; // 0x368(0x08)
	struct TSoftObjectPtr<UDestructibleMesh> DestructibleMeshRef; // 0x370(0x28)
	bool bIsDestructible; // 0x398(0x01)
	char pad_399[0x3]; // 0x399(0x03)
	float MaxHp; // 0x39c(0x04)
	float CurrentHP; // 0x3a0(0x04)
	bool bIsMeshCreated; // 0x3a4(0x01)
	char ChunkCount; // 0x3a5(0x01)
	char pad_3A6[0x2]; // 0x3a6(0x02)
	struct TArray<float> DestructPointStack; // 0x3a8(0x10)
	struct TArray<struct FVector> DestructedPoint; // 0x3b8(0x10)
	bool bOverrideMaterial; // 0x3c8(0x01)
	char pad_3C9[0x7]; // 0x3c9(0x07)
	struct UMaterialInterface* DestructibleMaterial; // 0x3d0(0x08)
	struct FTimerHandle TimerHandle_DestroyComponents; // 0x3d8(0x08)
	struct UCurveFloat* FadeAlphaCurve; // 0x3e0(0x08)
	struct FTimeline FadeTimeline; // 0x3e8(0x98)
	struct UMaterialInstanceDynamic* FadeMaterial; // 0x480(0x08)
	enum class EDoorState DoorState; // 0x488(0x01)
	bool bIsOpenedFromFront; // 0x489(0x01)
	char pad_48A[0x6]; // 0x48a(0x06)
	struct UCurveFloat* OpenCurve; // 0x490(0x08)
	struct UCurveFloat* CloseCurve; // 0x498(0x08)
	char pad_4A0[0x134]; // 0x4a0(0x134)
	struct FRotator DefaultDoorRotation; // 0x5d4(0x0c)
	char pad_5E0[0x78]; // 0x5e0(0x78)
	struct UAkAudioEvent* AkSound_Open; // 0x658(0x08)
	struct UAkAudioEvent* AkSound_StartClose; // 0x660(0x08)
	struct UAkAudioEvent* AkSound_Melee; // 0x668(0x08)
	struct UAkAudioEvent* AKSound_Kicked; // 0x670(0x08)
	struct UAkAudioEvent* AKSound_Destructed; // 0x678(0x08)
	enum class EDoorSoundType DoorSoundType; // 0x680(0x01)
	char pad_681[0x7]; // 0x681(0x07)
	struct UBravoHotelAudioPortalComponent* AudioPortalComponent; // 0x688(0x08)
	bool bKeepOpenAudioPortal; // 0x690(0x01)
	char pad_691[0x7]; // 0x691(0x07)
	struct UParticleSystem* KickedParticle; // 0x698(0x08)
	struct UParticleSystemComponent* KickedParticleSystem; // 0x6a0(0x08)
	float KickImpulseStrength; // 0x6a8(0x04)
	char pad_6AC[0x14]; // 0x6ac(0x14)
	struct TArray<struct ABravoHotelCharacter*> OverlappingPlayersInPushBox; // 0x6c0(0x10)
	char pad_6D0[0x28]; // 0x6d0(0x28)
	struct TMap<struct UBravoHotelDamageType*, float> DamageCorrectValues; // 0x6f8(0x50)

	void UpdateOpenDoor(float Value); // Function BravoHotelGame.BravoHotelDoor.UpdateOpenDoor // (Native|Event|Protected|BlueprintEvent) // @ game+0x1f11310
	void UpdateFade(); // Function BravoHotelGame.BravoHotelDoor.UpdateFade // (Final|Native|Protected) // @ game+0x1f112f0
	void UpdateCloseDoor(float Value); // Function BravoHotelGame.BravoHotelDoor.UpdateCloseDoor // (Native|Event|Protected|BlueprintEvent) // @ game+0x1f11270
	void TimerCallback_DestroyComponent(); // Function BravoHotelGame.BravoHotelDoor.TimerCallback_DestroyComponent // (Final|Native|Public) // @ game+0x1f11250
	void SetDoorDisabled(bool bDisabled); // Function BravoHotelGame.BravoHotelDoor.SetDoorDisabled // (Final|Native|Protected) // @ game+0x1f111c0
	void SetDestructed(bool bDestructed); // Function BravoHotelGame.BravoHotelDoor.SetDestructed // (Final|Native|Protected) // @ game+0x1f11130
	void SetAudioPortalState(bool bWantOpen); // Function BravoHotelGame.BravoHotelDoor.SetAudioPortalState // (Final|Native|Public|BlueprintCallable) // @ game+0x1f110a0
	void PlaySoundByDoorType(struct UAkAudioEvent* Sound); // Function BravoHotelGame.BravoHotelDoor.PlaySoundByDoorType // (Final|Native|Public|BlueprintCallable) // @ game+0x1f11020
	void OpenDoor(bool bKicking); // Function BravoHotelGame.BravoHotelDoor.OpenDoor // (Final|Native|Protected) // @ game+0x1f10f90
	void OnRep_DoorState(enum class EDoorState& PrevState); // Function BravoHotelGame.BravoHotelDoor.OnRep_DoorState // (Final|Native|Protected|HasOutParms) // @ game+0x1f10f00
	void OnRep_DestructedPoint(); // Function BravoHotelGame.BravoHotelDoor.OnRep_DestructedPoint // (Final|Native|Protected) // @ game+0x1f10ee0
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BravoHotelGame.BravoHotelDoor.OnOverlapEnd // (Final|Native|Protected) // @ game+0x1f10da0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.BravoHotelDoor.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x1f10b90
	void OnFractureEffectSpawned(struct FFractureEffect& Effect, struct FVector& HitPoint, struct FVector& HitDirection); // Function BravoHotelGame.BravoHotelDoor.OnFractureEffectSpawned // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x1f10a40
	void MoveOverlappingPlayersAfterMoving(); // Function BravoHotelGame.BravoHotelDoor.MoveOverlappingPlayersAfterMoving // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f10a20
	void KickDoor(struct FVector InstigatorLocation); // Function BravoHotelGame.BravoHotelDoor.KickDoor // (Final|Native|Public|HasDefaults) // @ game+0x1f10990
	void K2_OnDestruct(); // Function BravoHotelGame.BravoHotelDoor.K2_OnDestruct // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool IsPlayerLookingDoor(struct ABravoHotelCharacter* PlayerCharacter); // Function BravoHotelGame.BravoHotelDoor.IsPlayerLookingDoor // (Final|Native|Protected|Const) // @ game+0x1f10900
	bool IsOpened(); // Function BravoHotelGame.BravoHotelDoor.IsOpened // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f108d0
	bool IsFrontOfDoor(struct FVector TargetForwardVector); // Function BravoHotelGame.BravoHotelDoor.IsFrontOfDoor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f10830
	void InitTimeline(); // Function BravoHotelGame.BravoHotelDoor.InitTimeline // (Final|Native|Protected) // @ game+0x1f10810
	struct UStaticMeshComponent* GetStaticMesh(); // Function BravoHotelGame.BravoHotelDoor.GetStaticMesh // (Final|Native|Public|Const) // @ game+0x1f107e0
	struct TArray<struct ABravoHotelCharacter*> GetOverlappingCharactersInPushBox(); // Function BravoHotelGame.BravoHotelDoor.GetOverlappingCharactersInPushBox // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f10760
	struct FVector GetOriginalCenterVector(); // Function BravoHotelGame.BravoHotelDoor.GetOriginalCenterVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f10720
	float GetCurrentOpenCurveValue(); // Function BravoHotelGame.BravoHotelDoor.GetCurrentOpenCurveValue // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f106f0
	float GetCurrentCloseCurveValue(); // Function BravoHotelGame.BravoHotelDoor.GetCurrentCloseCurveValue // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f106c0
	struct FVector GetCenterVector(); // Function BravoHotelGame.BravoHotelDoor.GetCenterVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f10680
	void FinishOpenDoor(); // Function BravoHotelGame.BravoHotelDoor.FinishOpenDoor // (Native|Event|Protected|BlueprintEvent) // @ game+0x1f10660
	void FinishFade(); // Function BravoHotelGame.BravoHotelDoor.FinishFade // (Final|Native|Protected) // @ game+0x1f10640
	void FinishCloseDoor(); // Function BravoHotelGame.BravoHotelDoor.FinishCloseDoor // (Native|Event|Protected|BlueprintEvent) // @ game+0x1237ce0
	void DestroyComponents(float Delay); // Function BravoHotelGame.BravoHotelDoor.DestroyComponents // (Final|Native|Public) // @ game+0x1f105c0
	void CreateDestructibleMesh(); // Function BravoHotelGame.BravoHotelDoor.CreateDestructibleMesh // (Final|Native|Public) // @ game+0x1f105a0
	void CloseDoorImmediately(); // Function BravoHotelGame.BravoHotelDoor.CloseDoorImmediately // (Final|Native|Public) // @ game+0x1f10580
	void CloseDoor(); // Function BravoHotelGame.BravoHotelDoor.CloseDoor // (Final|Native|Protected) // @ game+0x1f10560
	bool CanKickDoor(); // Function BravoHotelGame.BravoHotelDoor.CanKickDoor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f10530
	bool CanActivateDoor(); // Function BravoHotelGame.BravoHotelDoor.CanActivateDoor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f10500
	void AddImpulseWhileMoving(); // Function BravoHotelGame.BravoHotelDoor.AddImpulseWhileMoving // (Native|Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x1e477f0
	void ActivateDoor(struct FVector InstigatorLocation); // Function BravoHotelGame.BravoHotelDoor.ActivateDoor // (Final|Native|Public|HasDefaults) // @ game+0x1f10470
};

// Class BravoHotelGame.BravoHotelDoorComponent
// Size: 0xb0 (Inherited: 0xb0)
struct UBravoHotelDoorComponent : UActorComponent {

	void ServerActivateDoor(struct ABravoHotelDoor* Door); // Function BravoHotelGame.BravoHotelDoorComponent.ServerActivateDoor // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1f115f0
	void DoActivateDoor(struct ABravoHotelDoor* Door); // Function BravoHotelGame.BravoHotelDoorComponent.DoActivateDoor // (Final|Native|Public|BlueprintCallable) // @ game+0x1f11570
};

// Class BravoHotelGame.BravoHotelDoorInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelDoorInterface : UInterface {

	void OpenDoor(); // Function BravoHotelGame.BravoHotelDoorInterface.OpenDoor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e85c70
	void InteractDoor(); // Function BravoHotelGame.BravoHotelDoorInterface.InteractDoor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e86180
	void CloseDoor(); // Function BravoHotelGame.BravoHotelDoorInterface.CloseDoor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e86160
};

// Class BravoHotelGame.BravoHotelShellCasing
// Size: 0x340 (Inherited: 0x320)
struct ABravoHotelShellCasing : AActor {
	struct UStaticMeshComponent* StaticMeshComponent; // 0x320(0x08)
	enum class EProjectileType ProjectileType; // 0x328(0x01)
	char pad_329[0x7]; // 0x329(0x07)
	struct UAkAudioEvent* HitSurfaceEvent; // 0x330(0x08)
	int8_t CurrentSoundPlayCount; // 0x338(0x01)
	int8_t MaxSoundPlayCount; // 0x339(0x01)
	char pad_33A[0x6]; // 0x33a(0x06)

	void OnHitSurface(struct UBravoHotelPhysicalMaterial* Surface, struct FVector& Location); // Function BravoHotelGame.BravoHotelShellCasing.OnHitSurface // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1fba310
	void OnHitCallback(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function BravoHotelGame.BravoHotelShellCasing.OnHitCallback // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x1fba140
};

// Class BravoHotelGame.BravoHotelEjectingClip
// Size: 0x348 (Inherited: 0x340)
struct ABravoHotelEjectingClip : ABravoHotelShellCasing {
	struct UAkAudioEvent* EjectingSound; // 0x340(0x08)
};

// Class BravoHotelGame.BravoHotelElevator
// Size: 0x3a8 (Inherited: 0x320)
struct ABravoHotelElevator : AActor {
	struct USceneComponent* ElevatorBody; // 0x320(0x08)
	struct TArray<struct ABravoHotelElevatorDoor*> DoorList; // 0x328(0x10)
	struct TArray<struct ABravoHotelElevatorDoor*> InnerDoorList; // 0x338(0x10)
	struct TArray<struct FTransform> InnerDoorPivotList; // 0x348(0x10)
	struct ABravoHotelElevatorDoor* TargetDoor; // 0x358(0x08)
	struct ABravoHotelElevatorDoor* CurrentDoor; // 0x360(0x08)
	struct TArray<int32_t> DoorQueue; // 0x368(0x10)
	enum class EElevatorStateType CurrentStateType; // 0x378(0x01)
	char pad_379[0x3]; // 0x379(0x03)
	int32_t DefaultDoorID; // 0x37c(0x04)
	float MoveSpeed; // 0x380(0x04)
	float DefaultDelayTime; // 0x384(0x04)
	float CurrentDelayTime; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct UAkComponent* AkAudioComponent; // 0x390(0x08)
	struct UAkAudioEvent* SoundEventForMoving; // 0x398(0x08)
	struct UAkAudioEvent* SoundEventForMoved; // 0x3a0(0x08)

	void OnRep_SetStateType(); // Function BravoHotelGame.BravoHotelElevator.OnRep_SetStateType // (Native|Protected) // @ game+0x1e477f0
	void OnDoorOpening(struct ABravoHotelElevatorDoor* Door); // Function BravoHotelGame.BravoHotelElevator.OnDoorOpening // (Final|Native|Protected) // @ game+0x1f12920
};

// Class BravoHotelGame.BravoHotelElevatorDoor
// Size: 0x400 (Inherited: 0x320)
struct ABravoHotelElevatorDoor : AActor {
	char pad_320[0x48]; // 0x320(0x48)
	bool bDoorUIEnable; // 0x368(0x01)
	char pad_369[0x7]; // 0x369(0x07)
	struct UBoxComponent* BoxTrigger; // 0x370(0x08)
	struct UBoxComponent* PushBox; // 0x378(0x08)
	struct USceneComponent* LeftDoorPivot; // 0x380(0x08)
	struct USceneComponent* RightDoorPivot; // 0x388(0x08)
	struct USceneComponent* ElevatorPivot; // 0x390(0x08)
	struct UStaticMeshComponent* ElevatorUI; // 0x398(0x08)
	struct UStaticMeshComponent* ButtonUI; // 0x3a0(0x08)
	enum class EElevatorDoorStateType CurrentStateType; // 0x3a8(0x01)
	char pad_3A9[0x3]; // 0x3a9(0x03)
	int32_t DoorID; // 0x3ac(0x04)
	int32_t MatchingDoorID; // 0x3b0(0x04)
	struct FVector LeftOpenLocation; // 0x3b4(0x0c)
	struct FVector RightOpenLocation; // 0x3c0(0x0c)
	float DoorSpeed; // 0x3cc(0x04)
	bool bCalled; // 0x3d0(0x01)
	char pad_3D1[0x7]; // 0x3d1(0x07)
	struct UAkComponent* AkAudioComponent; // 0x3d8(0x08)
	struct UAkAudioEvent* SoundEventForOpening; // 0x3e0(0x08)
	struct UAkAudioEvent* SoundEventForOpened; // 0x3e8(0x08)
	struct UAkAudioEvent* SoundEventForClosing; // 0x3f0(0x08)
	struct UAkAudioEvent* SoundEventForClosed; // 0x3f8(0x08)

	void OnRep_SetStateType(); // Function BravoHotelGame.BravoHotelElevatorDoor.OnRep_SetStateType // (Native|Protected) // @ game+0x1e477f0
	void OnInteract(); // Function BravoHotelGame.BravoHotelElevatorDoor.OnInteract // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnChageState(enum class EElevatorDoorStateType State); // Function BravoHotelGame.BravoHotelElevatorDoor.OnChageState // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool IsElevatorMoving(); // Function BravoHotelGame.BravoHotelElevatorDoor.IsElevatorMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f12fb0
	bool IsElevatorMoveUp(); // Function BravoHotelGame.BravoHotelElevatorDoor.IsElevatorMoveUp // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f12f80
	bool IsElevatorArrived(); // Function BravoHotelGame.BravoHotelElevatorDoor.IsElevatorArrived // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f12f50
};

// Class BravoHotelGame.BravoHotelEngine
// Size: 0xe40 (Inherited: 0xe38)
struct UBravoHotelEngine : UGameEngine {
	char pad_E38[0x8]; // 0xe38(0x08)
};

// Class BravoHotelGame.BravoHotelWebSocket
// Size: 0x1b0 (Inherited: 0x28)
struct UBravoHotelWebSocket : UObject {
	struct UGameInstance* ParentGameInstance; // 0x28(0x08)
	char pad_30[0x180]; // 0x30(0x180)
};

// Class BravoHotelGame.BravoHotelFallingWidget
// Size: 0x270 (Inherited: 0x248)
struct UBravoHotelFallingWidget : UUserWidget {
	char pad_248[0x28]; // 0x248(0x28)

	void SetParachuteInfo(struct FParachuteInfo SetParachuteInfo); // Function BravoHotelGame.BravoHotelFallingWidget.SetParachuteInfo // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelFence
// Size: 0x388 (Inherited: 0x330)
struct ABravoHotelFence : ABravoHotelDestructibleEx {
	char pad_330[0x8]; // 0x330(0x08)
	struct TMap<struct UBravoHotelDamageType*, float> DamageCorrectValues; // 0x338(0x50)

	bool ShouldReplicate(); // Function BravoHotelGame.BravoHotelFence.ShouldReplicate // (Event|Protected|BlueprintEvent|Const) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelFXFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelFXFunctionLibrary : UObject {

	struct UParticleSystemComponent* SpawnPoolingEffectAttached(struct UParticleSystem* EmitterTemplate, struct USceneComponent* AttachToComponent, struct FName AttachPointName, struct FVector Location, struct FRotator Rotation, enum class EAttachLocation LocationType, bool bWantsReleaseManually); // Function BravoHotelGame.BravoHotelFXFunctionLibrary.SpawnPoolingEffectAttached // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // @ game+0x1f150b0
	struct UParticleSystemComponent* SpawnPoolingEffectAtLocation(struct UObject* WorldContextObject, struct UParticleSystem* EmitterTemplate, struct FTransform& SpawnTransform, bool bWantsReleaseManually); // Function BravoHotelGame.BravoHotelFXFunctionLibrary.SpawnPoolingEffectAtLocation // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f14f10
	void SpawnImpactEffect(struct UObject* WorldContextObject, struct FPointDamageEvent& DamageEvent, bool bPlaySound, int32_t DecalMaterialIndex); // Function BravoHotelGame.BravoHotelFXFunctionLibrary.SpawnImpactEffect // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1f14d60
};

// Class BravoHotelGame.BravoHotelGameBlueprintLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelGameBlueprintLibrary : UBlueprintFunctionLibrary {

	struct ABravoHotelProjectile* SpawnProjectile(struct UObject* WorldContextObject, struct ABravoHotelProjectile* ProjectileClass, struct FVector& SpawnLocation, struct FVector& ShootDirection, int32_t ImpactDamage, float LifeSpan, struct AActor* InOwner); // Function BravoHotelGame.BravoHotelGameBlueprintLibrary.SpawnProjectile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f157e0
	void SetLevelStreamVisible(struct UObject* WorldContextObject, struct FName LevelStreamName, bool bVisibility); // Function BravoHotelGame.BravoHotelGameBlueprintLibrary.SetLevelStreamVisible // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f156e0
	void SetDisableDistanceStreaming(struct UObject* WorldContextObject, bool bDisable); // Function BravoHotelGame.BravoHotelGameBlueprintLibrary.SetDisableDistanceStreaming // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f15620
	struct UDataTable* GetDataTable_RedZone(); // Function BravoHotelGame.BravoHotelGameBlueprintLibrary.GetDataTable_RedZone // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f155f0
	struct FString GetAddressURL(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelGameBlueprintLibrary.GetAddressURL // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f15510
};

// Class BravoHotelGame.BravoHotelGameBuffSlot
// Size: 0x2f8 (Inherited: 0x248)
struct UBravoHotelGameBuffSlot : UUserWidget {
	struct UImage* Image_Buff; // 0x248(0x08)
	struct UProgressBar* ProgressBar_Slot; // 0x250(0x08)
	struct FBravoHotelBuffUIInfo BuffUIInfo; // 0x258(0x98)
	float LastTimer; // 0x2f0(0x04)
	char pad_2F4[0x4]; // 0x2f4(0x04)

	void UpdateBuff(int32_t KeyIndex, float Timer, float MaxTime); // Function BravoHotelGame.BravoHotelGameBuffSlot.UpdateBuff // (Final|Native|Public) // @ game+0x1f15e70
	void SetBuff(struct FBravoHotelBuffUIInfo& NewBuffUIInfo); // Function BravoHotelGame.BravoHotelGameBuffSlot.SetBuff // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1f15dc0
	void K2_UpdateBuff(float Timer, float MaxTime); // Function BravoHotelGame.BravoHotelGameBuffSlot.K2_UpdateBuff // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnRenewBuff(); // Function BravoHotelGame.BravoHotelGameBuffSlot.K2_OnRenewBuff // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnNewBuff(); // Function BravoHotelGame.BravoHotelGameBuffSlot.K2_OnNewBuff // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelGameInstance
// Size: 0x5a0 (Inherited: 0x250)
struct UBravoHotelGameInstance : UBravoHotelAppInstance {
	bool CharacterTeleport; // 0x250(0x01)
	bool EnableChatting; // 0x251(0x01)
	bool AllowReconnect; // 0x252(0x01)
	bool bIsInHouseDevBuild; // 0x253(0x01)
	char pad_254[0x4]; // 0x254(0x04)
	struct FString DefaultFontFamilyAsset; // 0x258(0x10)
	struct UFont* DefaultFontFamily; // 0x268(0x08)
	int32_t LoadingScreenIndex; // 0x270(0x04)
	char pad_274[0x4]; // 0x274(0x04)
	struct UBravoHotelLoadingWidget* LoadingScreenWidget; // 0x278(0x08)
	struct FSelectLoadingScreenData CurLoadingScreenInfo; // 0x280(0x40)
	enum class ELoadingScreenType ForceLoadingType; // 0x2c0(0x01)
	bool bIsPlayingKillCam; // 0x2c1(0x01)
	char pad_2C2[0x6]; // 0x2c2(0x06)
	int32_t KillerUniquePlayerId; // 0x2c8(0x04)
	int32_t MyUniquePlayerId; // 0x2cc(0x04)
	struct FMulticastInlineDelegate ReplayListChangedCallBack; // 0x2d0(0x10)
	bool bCheatable; // 0x2e0(0x01)
	bool bEnableMakeAccount; // 0x2e1(0x01)
	char pad_2E2[0x6]; // 0x2e2(0x06)
	struct UBravoHotelGameSettingManager* GameSettingManager; // 0x2e8(0x08)
	char pad_2F0[0x10]; // 0x2f0(0x10)
	struct FString LoadingScreenWidgetClass; // 0x300(0x10)
	char pad_310[0x58]; // 0x310(0x58)
	struct TArray<struct FCoherentWidgetInfo> CohWidgetList; // 0x368(0x10)
	char pad_378[0xe8]; // 0x378(0xe8)
	struct FString PopupWidgetClass; // 0x460(0x10)
	struct FMulticastInlineDelegate OnChangedLanguageCallBack; // 0x470(0x10)
	char pad_480[0x8]; // 0x480(0x08)
	struct TMap<struct FString, struct FVoiceTalkState> LobbyMemberVoiceStateList; // 0x488(0x50)
	struct TMap<struct FString, struct FVoiceTalkState> MemberVoiceStateList; // 0x4d8(0x50)
	char pad_528[0x78]; // 0x528(0x78)

	void UpdateVoiceTalkMember(bool bIsLobby); // Function BravoHotelGame.BravoHotelGameInstance.UpdateVoiceTalkMember // (Final|Native|Public|BlueprintCallable) // @ game+0x1f19a90
	void StopRecordingReplayFromBP(); // Function BravoHotelGame.BravoHotelGameInstance.StopRecordingReplayFromBP // (Final|Native|Public|BlueprintCallable) // @ game+0x1f19a70
	void StopPlayReplay(); // Function BravoHotelGame.BravoHotelGameInstance.StopPlayReplay // (Final|Native|Public|BlueprintCallable) // @ game+0x1f19a50
	void StartRecordingReplayFromBP(struct FString ReplayName, struct FString FriendlyName); // Function BravoHotelGame.BravoHotelGameInstance.StartRecordingReplayFromBP // (Final|Native|Public|BlueprintCallable) // @ game+0x1f198c0
	void SpawnAIPlayers(int32_t Num); // Function BravoHotelGame.BravoHotelGameInstance.SpawnAIPlayers // (Final|Native|Public|BlueprintCallable) // @ game+0x1f19840
	void SpawnAIPlayer(struct FString UserName); // Function BravoHotelGame.BravoHotelGameInstance.SpawnAIPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1f197a0
	void ShowVivoxChanels(struct TArray<struct FString>& outList); // Function BravoHotelGame.BravoHotelGameInstance.ShowVivoxChanels // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f196d0
	void ShowLoading(struct UObject* WorldContextObject, bool bTeleport, float MaxWaitTime, bool bLevelStreaming, enum class ELoadingScreenType LoadingType, enum class ELoadingScreenType NewForceLoadingType); // Function BravoHotelGame.BravoHotelGameInstance.ShowLoading // (Final|Native|Public|BlueprintCallable) // @ game+0x1f19500
	void SetVivoxVolumeState(struct FString UserName, bool bIsMute, int32_t NewVolume); // Function BravoHotelGame.BravoHotelGameInstance.SetVivoxVolumeState // (Native|Public|BlueprintCallable) // @ game+0x1f193d0
	void SetLoginTime(); // Function BravoHotelGame.BravoHotelGameInstance.SetLoginTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1f193b0
	void SetGameServerInfo(bool bDevServer); // Function BravoHotelGame.BravoHotelGameInstance.SetGameServerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x124d5e0
	void ResetKillCam(); // Function BravoHotelGame.BravoHotelGameInstance.ResetKillCam // (Final|Native|Public|BlueprintCallable) // @ game+0x1f19390
	void RenameReplay(struct FString ReplayName, struct FString NewFriendlyReplayName); // Function BravoHotelGame.BravoHotelGameInstance.RenameReplay // (Final|Native|Public|BlueprintCallable) // @ game+0x1f19290
	void PlayReplayFromBP(struct FString ReplayName); // Function BravoHotelGame.BravoHotelGameInstance.PlayReplayFromBP // (Final|Native|Public|BlueprintCallable) // @ game+0x1f191a0
	void OnDefaultLocalization(); // Function BravoHotelGame.BravoHotelGameInstance.OnDefaultLocalization // (Final|Native|Public) // @ game+0x1f19180
	void OnChangeOption(struct TArray<enum class ESettingType>& ChangeTypeList); // Function BravoHotelGame.BravoHotelGameInstance.OnChangeOption // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f190d0
	void LoadVersionFile(); // Function BravoHotelGame.BravoHotelGameInstance.LoadVersionFile // (Final|Native|Private) // @ game+0x1f190b0
	void LeaveVoiceChannels(); // Function BravoHotelGame.BravoHotelGameInstance.LeaveVoiceChannels // (Native|Public|BlueprintCallable) // @ game+0x11f81c0
	int32_t JoinFromChanelInfo(struct FVivoxChanelInfo& JoinChanelInfo); // Function BravoHotelGame.BravoHotelGameInstance.JoinFromChanelInfo // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f18fe0
	int32_t Join(enum class VoiceChannelType ChannelType, bool ShouldTransmitOnJoin, struct FString ChannelName, enum class PTTKey AssignChanneltoPTTKey, bool FromLogin); // Function BravoHotelGame.BravoHotelGameInstance.Join // (Native|Public|BlueprintCallable) // @ game+0x1f18e40
	bool IsReplaying(); // Function BravoHotelGame.BravoHotelGameInstance.IsReplaying // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f18e10
	bool IsNetWorkLoginFlow(enum class ENetworkLoginFlowFlags Flag); // Function BravoHotelGame.BravoHotelGameInstance.IsNetWorkLoginFlow // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f18d80
	bool IsInHouseDevBuild(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelGameInstance.IsInHouseDevBuild // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f18d00
	bool IsConnectedLoginServer(); // Function BravoHotelGame.BravoHotelGameInstance.IsConnectedLoginServer // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f18cd0
	void InternalSendReportReplay(struct FString DemoDirectory, struct FString ReportFileName, struct FString ReplayDirectory, bool bPlayback); // Function BravoHotelGame.BravoHotelGameInstance.InternalSendReportReplay // (Final|Native|Public) // @ game+0x1f18b30
	struct FDateTime GetStartLoginTime(); // Function BravoHotelGame.BravoHotelGameInstance.GetStartLoginTime // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f18b10
	struct UBravoHotelGameSettingManager* GetOrCreateGameSettingManager(); // Function BravoHotelGame.BravoHotelGameInstance.GetOrCreateGameSettingManager // (Final|Native|Public|BlueprintCallable) // @ game+0x1f18ae0
	bool GetMemberVoiceTalkState(bool bIsLobby, struct FString UserName, struct FVoiceTalkState& OutVoiceTalkState); // Function BravoHotelGame.BravoHotelGameInstance.GetMemberVoiceTalkState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f18980
	struct TMap<struct FString, struct FVoiceTalkState> GetMemberVoiceStateList(bool bIsLobby); // Function BravoHotelGame.BravoHotelGameInstance.GetMemberVoiceStateList // (Final|Native|Public|BlueprintCallable) // @ game+0x1f18890
	struct FString GetGameVersion(); // Function BravoHotelGame.BravoHotelGameInstance.GetGameVersion // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f18810
	struct UBravoHotelGameInstance* GetBravoHotelGameInstance(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelGameInstance.GetBravoHotelGameInstance // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f18790
	void FindReplays(); // Function BravoHotelGame.BravoHotelGameInstance.FindReplays // (Final|Native|Public|BlueprintCallable) // @ game+0x1f18770
	void DeleteReplay(struct FString ReplayName); // Function BravoHotelGame.BravoHotelGameInstance.DeleteReplay // (Final|Native|Public|BlueprintCallable) // @ game+0x1f186d0
	void ConnectLoginServer(bool bSuccess); // Function BravoHotelGame.BravoHotelGameInstance.ConnectLoginServer // (Final|Native|Public|BlueprintCallable) // @ game+0x1f18640
	void CompleteNetworkLoginFlow(enum class ENetworkLoginFlowFlags Flag); // Function BravoHotelGame.BravoHotelGameInstance.CompleteNetworkLoginFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x1f185c0
	void ClearMemberVoiceTalkState(bool bIsLobby); // Function BravoHotelGame.BravoHotelGameInstance.ClearMemberVoiceTalkState // (Final|Native|Public|BlueprintCallable) // @ game+0x1f18530
	void ClearCohWidget(); // Function BravoHotelGame.BravoHotelGameInstance.ClearCohWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f18510
	void BrowseToDefaultMap(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelGameInstance.BrowseToDefaultMap // (Final|Native|Public|BlueprintCallable) // @ game+0x16b4f10
	void BP_OnFindReplaysComplete(struct TArray<struct FS_ReplayInfo>& AllReplays); // Function BravoHotelGame.BravoHotelGameInstance.BP_OnFindReplaysComplete // (Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void AddOrUpdateMemberVoiceTalkState(struct FVoiceTalkState& NewVoiceTalkState, bool bIsLobby); // Function BravoHotelGame.BravoHotelGameInstance.AddOrUpdateMemberVoiceTalkState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f18400
};

// Class BravoHotelGame.BravoHotelGameInstanceSteam
// Size: 0x5b0 (Inherited: 0x5a0)
struct UBravoHotelGameInstanceSteam : UBravoHotelGameInstance {
	char pad_5A0[0x10]; // 0x5a0(0x10)

	struct UTexture2D* GetSteamFriendAvatar(struct FUniqueNetIdRepl& FriendUniqueNetId, enum class ESteamAvatarSize InAvatarSize); // Function BravoHotelGame.BravoHotelGameInstanceSteam.GetSteamFriendAvatar // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x1f19cf0
	void CheckInterworkWithSteam(); // Function BravoHotelGame.BravoHotelGameInstanceSteam.CheckInterworkWithSteam // (Final|Native|Public|BlueprintCallable) // @ game+0x1f19cd0
};

// Class BravoHotelGame.BravoHotelLayerBase
// Size: 0x40 (Inherited: 0x28)
struct UBravoHotelLayerBase : UObject {
	int32_t ZOrder; // 0x28(0x04)
	char pad_2C[0x4]; // 0x2c(0x04)
	struct TArray<struct FPopupWidgetInfo> WidgetList; // 0x30(0x10)
};

// Class BravoHotelGame.BravoHotelGameLayer
// Size: 0x40 (Inherited: 0x40)
struct UBravoHotelGameLayer : UBravoHotelLayerBase {
};

// Class BravoHotelGame.BravoHotelGameMatchEndWidget
// Size: 0x360 (Inherited: 0x248)
struct UBravoHotelGameMatchEndWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	enum class EGameResultWidgetMode CurrentGameResultWidgetMode; // 0x250(0x01)
	bool bIsShowingSimpleResult; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)
	struct FTimerHandle TimerHandle_ShowSimpleResult; // 0x258(0x08)
	char pad_260[0x10]; // 0x260(0x10)
	struct FMatchEndSimpleResult SimpleResultData; // 0x270(0xa8)
	bool bIsShowingFinalResult; // 0x318(0x01)
	struct FMatchEndFinalResult FinalResultData; // 0x319(0x04)
	char pad_31D[0x3]; // 0x31d(0x03)
	struct FTimerHandle TimerHandle_ShowFinalResult; // 0x320(0x08)
	char pad_328[0x10]; // 0x328(0x10)
	bool bIsShowingMatchEndAnimation; // 0x338(0x01)
	char pad_339[0x7]; // 0x339(0x07)
	struct FTimerHandle TimerHandle_ShowMatchEndAnimation; // 0x340(0x08)
	char pad_348[0x10]; // 0x348(0x10)
	struct FMatchEndAnimation MatchEndAnimationData; // 0x358(0x02)
	char pad_35A[0x6]; // 0x35a(0x06)

	void ShowSimpleResult(struct FMatchEndSimpleResult& SimpleResult, float ShowDelayTime); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.ShowSimpleResult // (Final|Native|Public|HasOutParms) // @ game+0x1f1b240
	void ShowResultAfterKillcam(bool WinMessage, bool LooseMessage, bool status); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.ShowResultAfterKillcam // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowMatchEndAnimation(struct FMatchEndAnimation& MatchEndAnimation, struct FMatchEndSimpleResult& SimpleResult, float ShowDelayTime); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.ShowMatchEndAnimation // (Final|Native|Public|HasOutParms) // @ game+0x1f1b0a0
	void ShowFinalResult(struct FMatchEndFinalResult& FinalResult, float ShowDelayTime); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.ShowFinalResult // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f1afc0
	void ShowEndResult(bool WinMessage, bool LooseMessage, bool IsSpectated, bool WinningCam); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.ShowEndResult // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void PlayKillcamAgain(); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.PlayKillcamAgain // (Final|Native|Public|BlueprintCallable) // @ game+0x1f1afa0
	void K2_ShowSimpleResult(struct FMatchEndSimpleResult& SimpleResult); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.K2_ShowSimpleResult // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1f1aeb0
	void K2_ShowMatchEndAnimation(struct FMatchEndAnimation& MatchEndAnimation, struct FMatchEndSimpleResult& SimpleResult); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.K2_ShowMatchEndAnimation // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1f1ad60
	void K2_ShowFinalResult(struct FMatchEndFinalResult& FinalResult); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.K2_ShowFinalResult // (Native|Event|Protected|HasOutParms|BlueprintEvent) // @ game+0x1f1acc0
	void K2_HideSimpleResult(); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.K2_HideSimpleResult // (Native|Event|Protected|BlueprintEvent) // @ game+0x1f1aca0
	void K2_HideMatchEndAnimation(); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.K2_HideMatchEndAnimation // (Native|Event|Protected|BlueprintEvent) // @ game+0x1ed7720
	void K2_HideFinalResult(); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.K2_HideFinalResult // (Native|Event|Protected|BlueprintEvent) // @ game+0x1f1ac80
	bool IsVisibleMatchEndWidget(); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.IsVisibleMatchEndWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void Init(); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.Init // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void HideSimpleResult(float HideDelayTime); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.HideSimpleResult // (Final|Native|Public) // @ game+0x1f1ac00
	void HideMatchEndAnimation(float HideDelayTime); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.HideMatchEndAnimation // (Final|Native|Public) // @ game+0x1f1ab80
	void HideFinalResult(float HideDelayTime); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.HideFinalResult // (Final|Native|Public|BlueprintCallable) // @ game+0x1f1ab00
	struct ABravoHotelPlayerState* GetPlayerStateAfterKillcam(); // Function BravoHotelGame.BravoHotelGameMatchEndWidget.GetPlayerStateAfterKillcam // (Final|Native|Public|BlueprintCallable) // @ game+0x1f1aad0
};

// Class BravoHotelGame.BravoHotelGameMode_DSIdle
// Size: 0x408 (Inherited: 0x408)
struct ABravoHotelGameMode_DSIdle : ABravoHotelGameModeBase {
};

// Class BravoHotelGame.BravoHotelGamePlayStatistics
// Size: 0xf0 (Inherited: 0x28)
struct UBravoHotelGamePlayStatistics : UObject {
	uint16_t HitScore; // 0x28(0x02)
	char pad_2A[0x2]; // 0x2a(0x02)
	int32_t PickUpCoin; // 0x2c(0x04)
	struct FRewardPoint ExpPoint; // 0x30(0x10)
	float TotalDistanceTraveled; // 0x40(0x04)
	char pad_44[0x4]; // 0x44(0x04)
	struct FMulticastInlineDelegate OnChangedFinalRankDelegate; // 0x48(0x10)
	char pad_58[0x2]; // 0x58(0x02)
	uint16_t FinalRank; // 0x5a(0x02)
	int32_t GainedRP; // 0x5c(0x04)
	struct FRewardPoint GoldPoint; // 0x60(0x10)
	struct TArray<struct FRewardItemInfo> RewardItemList; // 0x70(0x10)
	struct TArray<struct FRewardItemInfo> DropedItemList; // 0x80(0x10)
	float TotalDamage; // 0x90(0x04)
	float LifeTime; // 0x94(0x04)
	char pad_98[0x58]; // 0x98(0x58)

	float GetTotalDistanceTraveled(); // Function BravoHotelGame.BravoHotelGamePlayStatistics.GetTotalDistanceTraveled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f1c9f0
	struct TArray<struct FRewardItemInfo> GetRewardItemList(); // Function BravoHotelGame.BravoHotelGamePlayStatistics.GetRewardItemList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f1c9c0
	struct FMatchResultUIInfo GetMatchResultUIInfo(); // Function BravoHotelGame.BravoHotelGamePlayStatistics.GetMatchResultUIInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f1c870
	int32_t GetHitScore(); // Function BravoHotelGame.BravoHotelGamePlayStatistics.GetHitScore // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f1c850
	int32_t GetFinalRank(); // Function BravoHotelGame.BravoHotelGamePlayStatistics.GetFinalRank // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f1c830
	struct TArray<struct FRewardItemInfo> GetDropedItemList(); // Function BravoHotelGame.BravoHotelGamePlayStatistics.GetDropedItemList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f1c800
	void ChangedFinalRankDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelGamePlayStatistics.ChangedFinalRankDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelGamePopupInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelGamePopupInterface : UInterface {

	void ShowQuitPopup(); // Function BravoHotelGame.BravoHotelGamePopupInterface.ShowQuitPopup // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowGamePopup(); // Function BravoHotelGame.BravoHotelGamePopupInterface.ShowGamePopup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1cee0
	void Show(); // Function BravoHotelGame.BravoHotelGamePopupInterface.Show // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetNetworkDelayPopupMessage(int32_t StringTableIndex); // Function BravoHotelGame.BravoHotelGamePopupInterface.SetNetworkDelayPopupMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1ce60
	bool IsPopupWidgetVisible(); // Function BravoHotelGame.BravoHotelGamePopupInterface.IsPopupWidgetVisible // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1ce30
	bool IsOpenSystemPopup(); // Function BravoHotelGame.BravoHotelGamePopupInterface.IsOpenSystemPopup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1ce00
	bool IsGamePopupWidgetVisible(); // Function BravoHotelGame.BravoHotelGamePopupInterface.IsGamePopupWidgetVisible // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1cdd0
	void HideQuitPopup(); // Function BravoHotelGame.BravoHotelGamePopupInterface.HideQuitPopup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1cdb0
	void HideGamePopup(); // Function BravoHotelGame.BravoHotelGamePopupInterface.HideGamePopup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1cd90
	void Hide(); // Function BravoHotelGame.BravoHotelGamePopupInterface.Hide // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelGamePopupWidget
// Size: 0x250 (Inherited: 0x248)
struct UBravoHotelGamePopupWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
};

// Class BravoHotelGame.BravoHotelGameSession
// Size: 0x388 (Inherited: 0x338)
struct ABravoHotelGameSession : AGameSession {
	char pad_338[0x50]; // 0x338(0x50)
};

// Class BravoHotelGame.BravoHotelGameSettingManager
// Size: 0x38 (Inherited: 0x28)
struct UBravoHotelGameSettingManager : UObject {
	char pad_28[0x10]; // 0x28(0x10)

	void ReceiveInit(); // Function BravoHotelGame.BravoHotelGameSettingManager.ReceiveInit // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelGameSingleton
// Size: 0x1c8 (Inherited: 0x28)
struct UBravoHotelGameSingleton : UObject {
	struct UBravoHotelNetworkManager* BravoHotelNetworkManager; // 0x28(0x08)
	struct UBravoHotelItemSpawnStatisticManager* BravoHotelItemSpawnStatisticManager; // 0x30(0x08)
	char pad_38[0xf0]; // 0x38(0xf0)
	struct UBravoHotelDataManager* BravoHotelDataManager; // 0x128(0x08)
	struct UBravoHotelReportDataManager* BravoHotelReportDataManager; // 0x130(0x08)
	struct UBravoHotelOutGameDataManager* BravoHotelOutGameDataManager; // 0x138(0x08)
	struct UBravoHotelQuestManager* BravoHotelQuestManager; // 0x140(0x08)
	struct UBravoHotelAchievementManager* BravoHotelAchievementManager; // 0x148(0x08)
	char pad_150[0x8]; // 0x150(0x08)
	struct UBravoHotelAppAudioStateManager* BravoHotelAppAudioStateManager; // 0x158(0x08)
	char pad_160[0x18]; // 0x160(0x18)
	struct TMap<struct FString, struct UBravoHotelLocalSaveBase*> CachedLocalSaves; // 0x178(0x50)
};

// Class BravoHotelGame.BravoHotelGameStartRestoreInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelGameStartRestoreInterface : UInterface {

	void RestoreAfterGameStart(); // Function BravoHotelGame.BravoHotelGameStartRestoreInterface.RestoreAfterGameStart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e86180
};

// Class BravoHotelGame.BravoHotelGrassCollisionComponent
// Size: 0xb8 (Inherited: 0xb0)
struct UBravoHotelGrassCollisionComponent : UActorComponent {
	char pad_B0[0x8]; // 0xb0(0x08)

	void DrawGrassCollision(struct ABravoHotelCharacter* TargetCharacter); // Function BravoHotelGame.BravoHotelGrassCollisionComponent.DrawGrassCollision // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ClearRenderTarget(); // Function BravoHotelGame.BravoHotelGrassCollisionComponent.ClearRenderTarget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelThrowingWeapon
// Size: 0x1bd0 (Inherited: 0x1bd0)
struct ABravoHotelThrowingWeapon : ABravoHotelWeaponBase {
};

// Class BravoHotelGame.BravoHotelGrenadeWeapon
// Size: 0x1f20 (Inherited: 0x1bd0)
struct ABravoHotelGrenadeWeapon : ABravoHotelThrowingWeapon {
	struct ABravoHotelProjectileGrenade* GrenadeProjectileClass; // 0x1bd0(0x08)
	bool bNeedAssistantWeapon; // 0x1bd8(0x01)
	char pad_1BD9[0x3]; // 0x1bd9(0x03)
	struct FName StartFireBoneName; // 0x1bdc(0x08)
	char pad_1BE4[0x4]; // 0x1be4(0x04)
	struct ABravoHotelWeaponBase* AssistantWeaponClass; // 0x1be8(0x08)
	struct FName HandSocketName; // 0x1bf0(0x08)
	float GrenadeDamage; // 0x1bf8(0x04)
	float GrenadeHitDamage; // 0x1bfc(0x04)
	float GrenadeHitDamageToCharacter; // 0x1c00(0x04)
	float GrenadeCookingTime; // 0x1c04(0x04)
	float OverThrowDegreeValue; // 0x1c08(0x04)
	float UnderThrowDegreeValue; // 0x1c0c(0x04)
	float OverThrowGrenadeVelocity; // 0x1c10(0x04)
	float UnderThrowGrenadeVelocity; // 0x1c14(0x04)
	float GrenadeThrowDirectionCorrectionValue; // 0x1c18(0x04)
	float ThrowVelocityModifierByCharacterMovement; // 0x1c1c(0x04)
	struct UAkAudioEvent* CookEvent; // 0x1c20(0x08)
	struct UAkAudioEvent* ThrowEvent; // 0x1c28(0x08)
	bool bEnableCooking; // 0x1c30(0x01)
	bool bIsCooked; // 0x1c31(0x01)
	enum class EThrowingWeaponType GrenadeType; // 0x1c32(0x01)
	enum class EThrowingWeaponState GrenadeState; // 0x1c33(0x01)
	enum class EGrenadeThrowingType ThrowingType; // 0x1c34(0x01)
	char pad_1C35[0x3]; // 0x1c35(0x03)
	struct ABravoHotelProjectileGrenade* ProjectileGrenade; // 0x1c38(0x08)
	bool DrawPredictProjectileLine; // 0x1c40(0x01)
	char pad_1C41[0x3]; // 0x1c41(0x03)
	struct FVector FireLocation; // 0x1c44(0x0c)
	struct FVector FireDirection; // 0x1c50(0x0c)
	struct FRotator FireRotation; // 0x1c5c(0x0c)
	float FireVelocity; // 0x1c68(0x04)
	struct FVector FireLocationOffset; // 0x1c6c(0x0c)
	struct FRotator FireRotationOffset; // 0x1c78(0x0c)
	float ThrowStartedTime; // 0x1c84(0x04)
	float OverThrowLocationCompensationValue; // 0x1c88(0x04)
	float UnderThrowLocationCompensationValue; // 0x1c8c(0x04)
	float RightHandOffset; // 0x1c90(0x04)
	struct FVector FireWeaponLocationOffset; // 0x1c94(0x0c)
	enum class EGrenadeThrowingType PredictPathThrowingType; // 0x1ca0(0x01)
	bool bEnableUnderThrow; // 0x1ca1(0x01)
	char pad_1CA2[0x2]; // 0x1ca2(0x02)
	float AfterThrowAnimDelay; // 0x1ca4(0x04)
	char pad_1CA8[0x10]; // 0x1ca8(0x10)
	struct FAnimSlot OverThrowGrenade; // 0x1cb8(0x10)
	struct FAnimSlot UnderThrowGrenade; // 0x1cc8(0x10)
	struct FAnimSlot PinOffGrenade; // 0x1cd8(0x10)
	struct FAnimSlot LeverOffGrenade; // 0x1ce8(0x10)
	struct FAnimSlot UnderThrow_LeverOffGrenade; // 0x1cf8(0x10)
	struct FAnimSlot Crouch_OverThrowGrenade; // 0x1d08(0x10)
	struct FAnimSlot Crouch_UnderThrowGrenade; // 0x1d18(0x10)
	struct FAnimSlot Crouch_PinOffGrenade; // 0x1d28(0x10)
	struct FAnimSlot Crouch_UnderThrow_LeverOffGrenade; // 0x1d38(0x10)
	struct FAnimSlot Prone_OverThrow_LeverOffGrenade; // 0x1d48(0x10)
	struct FAnimSlot Prone_UnderThrow_LeverOffGrenade; // 0x1d58(0x10)
	struct FAnimSlot Prone_OverThrow; // 0x1d68(0x10)
	struct FAnimSlot Prone_UnderThrow; // 0x1d78(0x10)
	struct UAnimSequence* Locomotion_Stand_Idle; // 0x1d88(0x08)
	struct UAnimSequence* Locomotion_Stand_Idle_Under; // 0x1d90(0x08)
	struct UAnimSequence* Locomotion_Stand_PinOff_Idle; // 0x1d98(0x08)
	struct UAnimSequence* Locomotion_Stand_PinOff_Idle_Additive; // 0x1da0(0x08)
	struct UAnimSequence* Locomotion_Stand_ThrowUnder_Idle; // 0x1da8(0x08)
	struct UAnimSequence* Locomotion_Stand_ThrowUnder_Idle_Additive; // 0x1db0(0x08)
	struct UAnimSequence* Locomotion_Crouch_Idle; // 0x1db8(0x08)
	struct UAnimSequence* Locomotion_Crouch_PinOff_Idle; // 0x1dc0(0x08)
	struct UAnimSequence* Locomotion_Crouch_PinOff_Idle_Additive; // 0x1dc8(0x08)
	struct UAnimSequence* Locomotion_Crouch_ThrowUnder_Idle; // 0x1dd0(0x08)
	struct UAnimSequence* Locomotion_Crouch_ThrowUnder_Idle_Additive; // 0x1dd8(0x08)
	struct UAnimSequence* Locomotion_Prone_Idle; // 0x1de0(0x08)
	struct UAnimSequence* Locomotion_Prone_PinOff_Idle_ThrowOver; // 0x1de8(0x08)
	struct UAnimSequence* Locomotion_Prone_PinOff_Idle_ThrowUnder; // 0x1df0(0x08)
	struct UAnimSequence* Locomotion_Stand_Idle_1P; // 0x1df8(0x08)
	struct UAnimSequence* Locomotion_Stand_Idle_Under_1P; // 0x1e00(0x08)
	struct UAnimSequence* Locomotion_Stand_PinOff_Idle_1P; // 0x1e08(0x08)
	struct UAnimSequence* Locomotion_Stand_PinOff_Idle_Additive_1P; // 0x1e10(0x08)
	struct UAnimSequence* Locomotion_Stand_ThrowUnder_Idle_1P; // 0x1e18(0x08)
	struct UAnimSequence* Locomotion_Stand_ThrowUnder_Idle_Additive_1P; // 0x1e20(0x08)
	struct UAnimSequence* Locomotion_Crouch_Idle_1P; // 0x1e28(0x08)
	struct UAnimSequence* Locomotion_Crouch_PinOff_Idle_1P; // 0x1e30(0x08)
	struct UAnimSequence* Locomotion_Crouch_PinOff_Idle_Additive_1P; // 0x1e38(0x08)
	struct UAnimSequence* Locomotion_Crouch_ThrowUnder_Idle_1P; // 0x1e40(0x08)
	struct UAnimSequence* Locomotion_Crouch_ThrowUnder_Idle_Additive_1P; // 0x1e48(0x08)
	struct UAnimSequence* Locomotion_Prone_Idle_1P; // 0x1e50(0x08)
	struct UAnimSequence* Locomotion_Prone_PinOff_Idle_ThrowOver_1P; // 0x1e58(0x08)
	struct UAnimSequence* Locomotion_Prone_PinOff_Idle_ThrowUnder_1P; // 0x1e60(0x08)
	struct FMulticastInlineDelegate OnChangeThrowingWeaponStateDelegate; // 0x1e68(0x10)
	struct FMulticastInlineDelegate OnChangeThrowingTypeDelegate; // 0x1e78(0x10)
	float ThrowingWeaponCameraShakeDelayTime; // 0x1e88(0x04)
	char pad_1E8C[0x4]; // 0x1e8c(0x04)
	struct UCameraShake* ThrowingWeaponCameraShake; // 0x1e90(0x08)
	float DestroyDelayTime; // 0x1e98(0x04)
	float ThrowingWeaponCameraShakeScale; // 0x1e9c(0x04)
	struct UCurveFloat* InterpProjectilePredictPathJumpCurve; // 0x1ea0(0x08)
	struct UCurveFloat* InterpProjectilePredictPathNormalCurve; // 0x1ea8(0x08)
	struct FRotator CalcProjectilePredictPathRot; // 0x1eb0(0x0c)
	float ProjectilePredictTime; // 0x1ebc(0x04)
	float FireWeaponDelayTime; // 0x1ec0(0x04)
	bool bOverrideSpawnGrenadeCount; // 0x1ec4(0x01)
	char pad_1EC5[0x3]; // 0x1ec5(0x03)
	int32_t OverrideSpawnGrenadeCount; // 0x1ec8(0x04)
	char pad_1ECC[0x14]; // 0x1ecc(0x14)
	struct FTimerHandle PredictTimeHandle; // 0x1ee0(0x08)
	struct UParticleSystem* PinOffParticle; // 0x1ee8(0x08)
	char pad_1EF0[0x8]; // 0x1ef0(0x08)
	int32_t SpawnGrenadeCount; // 0x1ef8(0x04)
	float SpawnPositionDelta; // 0x1efc(0x04)
	float SpawnRotationDelta; // 0x1f00(0x04)
	bool bEnableGuidedShot; // 0x1f04(0x01)
	char pad_1F05[0x3]; // 0x1f05(0x03)
	float GuidedShotDistance; // 0x1f08(0x04)
	float GuidedShotRadius; // 0x1f0c(0x04)
	float FireCorrectLocationHitBlock; // 0x1f10(0x04)
	char pad_1F14[0xc]; // 0x1f14(0x0c)

	void SpawnPinOffParticle(struct FTransform& SpawnTransform); // Function BravoHotelGame.BravoHotelGrenadeWeapon.SpawnPinOffParticle // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f21b10
	void SetTimerInterpProjectilePredictNormal(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.SetTimerInterpProjectilePredictNormal // (Final|Native|Protected) // @ game+0x1f21af0
	void SetTimerInterpProjectilePredictJump(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.SetTimerInterpProjectilePredictJump // (Final|Native|Protected) // @ game+0x1f21ad0
	void SetThrowableLandingLocation(struct FVector& LandingLocation); // Function BravoHotelGame.BravoHotelGrenadeWeapon.SetThrowableLandingLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f21a40
	void SetDrawPredictProjectileLine(bool Draw); // Function BravoHotelGame.BravoHotelGrenadeWeapon.SetDrawPredictProjectileLine // (Final|Native|Public) // @ game+0x1f219c0
	void ServerThrowGrenade(struct FVector_NetQuantize ProjectileLocation, struct FRotator ProjectileRotation, bool bGuided, struct FVector GuidedLocation, bool bThrow); // Function BravoHotelGame.BravoHotelGrenadeWeapon.ServerThrowGrenade // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults|NetValidate) // @ game+0x1f217e0
	void ServerSetThrowingWeaponState(enum class EThrowingWeaponState NewState); // Function BravoHotelGame.BravoHotelGrenadeWeapon.ServerSetThrowingWeaponState // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1f21730
	void OnThrowGrenade(struct FVector ProjectileLocation, struct FRotator ProjectileRotation, bool bThrow); // Function BravoHotelGame.BravoHotelGrenadeWeapon.OnThrowGrenade // (Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnRep_ChangeGrenadeState(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.OnRep_ChangeGrenadeState // (Final|Native|Protected) // @ game+0x1f21710
	void OnChangeThrowingWeaponState__DelegateSignature(enum class EThrowingWeaponState ThrowingWeaponState); // DelegateFunction BravoHotelGame.BravoHotelGrenadeWeapon.OnChangeThrowingWeaponState__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnChangeThrowingType__DelegateSignature(enum class EGrenadeThrowingType ThrowingType); // DelegateFunction BravoHotelGame.BravoHotelGrenadeWeapon.OnChangeThrowingType__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	bool NeedDrawingPredictProjectileLine(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.NeedDrawingPredictProjectileLine // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f216e0
	void K2_OnOwnerEndViewTarget(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.K2_OnOwnerEndViewTarget // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnOwnerBecomeViewTarget(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.K2_OnOwnerBecomeViewTarget // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	bool IsPlayingThrowMontage(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.IsPlayingThrowMontage // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1f216b0
	bool IsDrawPredictProjectileLine(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.IsDrawPredictProjectileLine // (Final|Native|Public|Const) // @ game+0x1f21690
	void InterpProjectilePredictPathByJumpState(bool IsJump); // Function BravoHotelGame.BravoHotelGrenadeWeapon.InterpProjectilePredictPathByJumpState // (Final|Native|Public|BlueprintCallable) // @ game+0x1f21600
	struct FAnimSlot GetThrowingAnimSlot(bool bIsCrouched, bool bIsProned, bool bInVehicle); // Function BravoHotelGame.BravoHotelGrenadeWeapon.GetThrowingAnimSlot // (Final|Native|Protected) // @ game+0x1f214e0
	float GetThrowGrenadeVelocityByThrowingType(enum class EGrenadeThrowingType Type); // Function BravoHotelGame.BravoHotelGrenadeWeapon.GetThrowGrenadeVelocityByThrowingType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f21450
	struct FName GetStartFireBoneName(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.GetStartFireBoneName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f21410
	struct UCameraComponent* GetOwnCharacterActiveCameraComponent(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.GetOwnCharacterActiveCameraComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1f213e0
	struct FAnimSlot GetLeverOffAnimSlot(bool bIsCrouched, bool bIsProned); // Function BravoHotelGame.BravoHotelGrenadeWeapon.GetLeverOffAnimSlot // (Final|Native|Protected) // @ game+0x1f21300
	bool GetGuidedLocation(struct FVector& OutGuidedLocation); // Function BravoHotelGame.BravoHotelGrenadeWeapon.GetGuidedLocation // (Final|Native|Private|HasOutParms|HasDefaults) // @ game+0x1f21260
	struct FVector GetGrenadeSocketLocation(); // Function BravoHotelGame.BravoHotelGrenadeWeapon.GetGrenadeSocketLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f21220
	void GetFireLocationAndRotation(struct FVector& StartFireLocation, struct FRotator& StartFireRotation); // Function BravoHotelGame.BravoHotelGrenadeWeapon.GetFireLocationAndRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f21140
	void GetFireDesiredLocationAndRotation(struct FVector& DesiredLocation, struct FRotator& DesiredRotation); // Function BravoHotelGame.BravoHotelGrenadeWeapon.GetFireDesiredLocationAndRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f21060
	void ClientSetThrowingWeaponState(enum class EThrowingWeaponState NewState); // Function BravoHotelGame.BravoHotelGrenadeWeapon.ClientSetThrowingWeaponState // (Net|NetReliableNative|Event|Protected|NetClient) // @ game+0x1f20fe0
};

// Class BravoHotelGame.BravoHotelHeartBeatSensor
// Size: 0x1bf0 (Inherited: 0x1bd0)
struct ABravoHotelHeartBeatSensor : ABravoHotelWeaponBase {
	char pad_1BD0[0x4]; // 0x1bd0(0x04)
	float HeartBeatSensorLength; // 0x1bd4(0x04)
	struct FTimerHandle TimerHandle_OnStartEffectEvent; // 0x1bd8(0x08)
	struct TArray<struct ABravoHotelCharacter*> DetectedCharacters; // 0x1be0(0x10)

	void ServerValidateHeartBeatSensorEffect(struct ABravoHotelCharacter* TargetCharacter); // Function BravoHotelGame.BravoHotelHeartBeatSensor.ServerValidateHeartBeatSensorEffect // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1f21f90
	void OnStartHeartBeatSensor(); // Function BravoHotelGame.BravoHotelHeartBeatSensor.OnStartHeartBeatSensor // (Final|Native|Public|BlueprintCallable) // @ game+0x1f21f70
	void OnPostEventAtLocationEvent(struct FString EventKey, struct FVector& Location); // Function BravoHotelGame.BravoHotelHeartBeatSensor.OnPostEventAtLocationEvent // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void OnDeactiveHeartBeatSensor(); // Function BravoHotelGame.BravoHotelHeartBeatSensor.OnDeactiveHeartBeatSensor // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnClickedHeartBeatSensor(); // Function BravoHotelGame.BravoHotelHeartBeatSensor.OnClickedHeartBeatSensor // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnActiveHeartBeatSensor(); // Function BravoHotelGame.BravoHotelHeartBeatSensor.OnActiveHeartBeatSensor // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	float GetHeartBeatSensorLength(); // Function BravoHotelGame.BravoHotelHeartBeatSensor.GetHeartBeatSensorLength // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f21f40
};

// Class BravoHotelGame.BravoHotelHelperMeshComponent
// Size: 0xb70 (Inherited: 0xb70)
struct UBravoHotelHelperMeshComponent : USkeletalMeshComponent {
};

// Class BravoHotelGame.BravoHotelHIDestructibleComponent
// Size: 0x8b0 (Inherited: 0x700)
struct UBravoHotelHIDestructibleComponent : UHierarchicalInstancedStaticMeshComponent {
	char pad_700[0x18]; // 0x700(0x18)
	struct FName MeshClassType; // 0x718(0x08)
	struct TArray<struct UBravoHotelDamageType*> AllowedDamageType; // 0x720(0x10)
	float ImpulseStrength; // 0x730(0x04)
	char pad_734[0x4]; // 0x734(0x04)
	struct TArray<float> HpList; // 0x738(0x10)
	struct TArray<int16_t> CurrentHpList; // 0x748(0x10)
	struct UAkAudioEvent* DestructedSound; // 0x758(0x08)
	struct UParticleSystem* DestructedEffect; // 0x760(0x08)
	struct FVector EffectPositionDelta; // 0x768(0x0c)
	struct FVector EffectRotationDelta; // 0x774(0x0c)
	bool bOverrideMaterial; // 0x780(0x01)
	char pad_781[0x3]; // 0x781(0x03)
	int32_t DestructibleMaterialIndex; // 0x784(0x04)
	struct UMaterialInterface* DestructibleMaterial; // 0x788(0x08)
	bool bIsWindowComponent; // 0x790(0x01)
	char pad_791[0x7]; // 0x791(0x07)
	struct ADestructibleActor* DestructibleActorClass; // 0x798(0x08)
	struct TSoftObjectPtr<UDestructibleMesh> DestructibleMesh; // 0x7a0(0x28)
	char pad_7C8[0x68]; // 0x7c8(0x68)
	struct TArray<char> DisableInstanceArray; // 0x830(0x10)
	char pad_840[0x70]; // 0x840(0x70)

	void SimulatedDestructibleMesh(struct FVector HitLocation, struct FVector ImpactDirection, int32_t InstanceIndex); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.SimulatedDestructibleMesh // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x1f229c0
	void OnRewind(); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.OnRewind // (Final|Native|Public|BlueprintCallable) // @ game+0x1f229a0
	void OnRep_DisableInstanceArray(); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.OnRep_DisableInstanceArray // (Final|Native|Protected) // @ game+0x1f22980
	void OnFractureEffectSpawned(struct FFractureEffect& Effect, struct FVector& HitPoint, struct FVector& HitDirection); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.OnFractureEffectSpawned // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1f22830
	void OnCompleteLoadDestructibleMesh(); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.OnCompleteLoadDestructibleMesh // (Final|Native|Protected) // @ game+0x1f22810
	void MulticastOnDestructComponent(struct FRepDestructComponentInfo RepDestructCompInfo); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.MulticastOnDestructComponent // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x1f22770
	void K2_OnDestructComponent(float DamageAmount, struct FHitResult& HitInfo, struct AController* EventInstigator, struct AActor* DamageCauser, struct FVector& ShotInfo); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.K2_OnDestructComponent // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void InitializeDestructibleComponent(struct UDestructibleComponent* TargetDM); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.InitializeDestructibleComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x1f226f0
	struct FName GetMeshClassTypeName(); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.GetMeshClassTypeName // (Event|Public|BlueprintEvent|Const) // @ game+0x23a3b60
	void AwakeOwnerDormancy(); // Function BravoHotelGame.BravoHotelHIDestructibleComponent.AwakeOwnerDormancy // (Final|Native|Public|BlueprintCallable) // @ game+0x1f0cdc0
};

// Class BravoHotelGame.BravoHotelHISMMesh
// Size: 0x330 (Inherited: 0x320)
struct ABravoHotelHISMMesh : AActor {
	struct USceneComponent* RootNode; // 0x320(0x08)
	bool ActionLink; // 0x328(0x01)
	char pad_329[0x7]; // 0x329(0x07)
};

// Class BravoHotelGame.BravoHotelHttpClient
// Size: 0x100 (Inherited: 0x28)
struct UBravoHotelHttpClient : UObject {
	char pad_28[0xd8]; // 0x28(0xd8)
};

// Class BravoHotelGame.BravoHotelHUD
// Size: 0x410 (Inherited: 0x410)
struct ABravoHotelHUD : AHUD {
};

// Class BravoHotelGame.BravoHotelIconImageWidget
// Size: 0x270 (Inherited: 0x248)
struct UBravoHotelIconImageWidget : UUserWidget {
	struct UImage* Image_133; // 0x248(0x08)
	struct UImage* Icon; // 0x250(0x08)
	struct UImage* Bg; // 0x258(0x08)
	struct UOverlay* Overlay_36; // 0x260(0x08)
	struct UWidgetAnimation* NewAnimation; // 0x268(0x08)

	void SetIcon(struct UObject* ResourceImage, enum class EItemRarity ItemRarity, bool bEffectReinforce); // Function BravoHotelGame.BravoHotelIconImageWidget.SetIcon // (Final|Native|Public|BlueprintCallable) // @ game+0x1f3dbb0
	void SetAlpha(float NewAlpha); // Function BravoHotelGame.BravoHotelIconImageWidget.SetAlpha // (Final|Native|Public|BlueprintCallable) // @ game+0x1f3db30
};

// Class BravoHotelGame.BravoHotelInteractionWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelInteractionWidget : UUserWidget {

	void ShowPickupItem(struct FInteraction InteractionInfo, struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.BravoHotelInteractionWidget.ShowPickupItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f40b60
	void ShowCompareWeaponbyWeaponType(struct FInteraction InteractionInfo, struct FInventoryItemInfo& PickupInfo, struct ABravoHotelWeaponBase* EquipWeapon); // Function BravoHotelGame.BravoHotelInteractionWidget.ShowCompareWeaponbyWeaponType // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f40900
	void ShowCompareWeapon(struct FInteraction InteractionInfo, struct FInventoryItemInfo& NewPickupItemInfo, struct FInventoryItemInfo& NewCompareItemInfo); // Function BravoHotelGame.BravoHotelInteractionWidget.ShowCompareWeapon // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f40650
	void ShowAction(struct FInteraction InteractionInfo); // Function BravoHotelGame.BravoHotelInteractionWidget.ShowAction // (Final|Native|Public|BlueprintCallable) // @ game+0x1f404e0
	void SetWeapon(struct FInteraction& InteractionInfo, struct FWeaponItem& NewWeaponItem, struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.BravoHotelInteractionWidget.SetWeapon // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetShow(struct FInteraction& InteractionInfo); // Function BravoHotelGame.BravoHotelInteractionWidget.SetShow // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPickItem(struct FInteraction& InteractionInfo, struct FPickupItem& NewPickItem); // Function BravoHotelGame.BravoHotelInteractionWidget.SetPickItem // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetNoHide(bool NoHide); // Function BravoHotelGame.BravoHotelInteractionWidget.SetNoHide // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetHide(); // Function BravoHotelGame.BravoHotelInteractionWidget.SetHide // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetCustomMode(int32_t ModeNum); // Function BravoHotelGame.BravoHotelInteractionWidget.SetCustomMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetCompareWeapon(struct FInteraction& InteractionInfo, struct FWeaponCompare& NewWeaponItem, struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.BravoHotelInteractionWidget.SetCompareWeapon // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetAction(struct FInteraction& InteractionInfo); // Function BravoHotelGame.BravoHotelInteractionWidget.SetAction // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void GetInteractionActionKeyMappingInfo(struct FInputActionKeyMapping& OutKey); // Function BravoHotelGame.BravoHotelInteractionWidget.GetInteractionActionKeyMappingInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f40380
};

// Class BravoHotelGame.BravoHotelInventoryCharacter
// Size: 0x3e8 (Inherited: 0x320)
struct ABravoHotelInventoryCharacter : AActor {
	struct UCustomizableSkeletalComponent* MutableComponent; // 0x320(0x08)
	struct USkeletalMeshComponent* InventoryCharacterMesh; // 0x328(0x08)
	struct UWidgetComponent* BackgroundWidgetComponent; // 0x330(0x08)
	struct UPostProcessComponent* PostProcessComponet; // 0x338(0x08)
	struct USceneComponent* LightsRootComponent; // 0x340(0x08)
	struct USpotLightComponent* SpotLight; // 0x348(0x08)
	struct ABravoHotelCharacter* OwnCharacter; // 0x350(0x08)
	struct USkeletalMesh* BodyBaseSkeletalMesh; // 0x358(0x08)
	char pad_360[0x10]; // 0x360(0x10)
	struct FVector LocationOffset; // 0x370(0x0c)
	struct FVector DefaultMeshScale; // 0x37c(0x0c)
	struct FVector2D ScreenPosition; // 0x388(0x08)
	float CharacterFOV; // 0x390(0x04)
	float MoveScaleModify; // 0x394(0x04)
	float RotationInterpSpeed; // 0x398(0x04)
	char pad_39C[0x4]; // 0x39c(0x04)
	struct UUserWidget* DragWidgetClass; // 0x3a0(0x08)
	struct UUserWidget* DragWidget; // 0x3a8(0x08)
	char pad_3B0[0x38]; // 0x3b0(0x38)

	void UpdateWeapons(); // Function BravoHotelGame.BravoHotelInventoryCharacter.UpdateWeapons // (Final|Native|Public) // @ game+0x1f41640
	void UpdateMeshParameter(); // Function BravoHotelGame.BravoHotelInventoryCharacter.UpdateMeshParameter // (Final|Native|Public|BlueprintCallable) // @ game+0x1f41620
	void ShowInventory(bool bShow); // Function BravoHotelGame.BravoHotelInventoryCharacter.ShowInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x1f41590
	void SetVisibleLights(bool bVisible); // Function BravoHotelGame.BravoHotelInventoryCharacter.SetVisibleLights // (Final|Native|Public|BlueprintCallable) // @ game+0x1f41500
	void OnChangeWearableItem(); // Function BravoHotelGame.BravoHotelInventoryCharacter.OnChangeWearableItem // (Final|Native|Public) // @ game+0x1f414e0
	void K2_ShowInventoryWidget(bool bShow); // Function BravoHotelGame.BravoHotelInventoryCharacter.K2_ShowInventoryWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_CreateDragWidget(); // Function BravoHotelGame.BravoHotelInventoryCharacter.K2_CreateDragWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool IsDrawInventoryCharacter(); // Function BravoHotelGame.BravoHotelInventoryCharacter.IsDrawInventoryCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1f414b0
	struct ABravoHotelWeaponBase* GetPreviewWeapon(int32_t Index); // Function BravoHotelGame.BravoHotelInventoryCharacter.GetPreviewWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f41420
	struct ABravoHotelCharacter* GetOwnCharacter(); // Function BravoHotelGame.BravoHotelInventoryCharacter.GetOwnCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f413f0
	bool GetCanCharacterMove(); // Function BravoHotelGame.BravoHotelInventoryCharacter.GetCanCharacterMove // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f413c0
	void DrawInventoryCharacter(bool bDraw); // Function BravoHotelGame.BravoHotelInventoryCharacter.DrawInventoryCharacter // (Final|Native|Public|BlueprintCallable) // @ game+0x1f41330
	void CharacterMoveStart(struct FVector2D MousePostion); // Function BravoHotelGame.BravoHotelInventoryCharacter.CharacterMoveStart // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f412b0
	void CharacterMoveEnd(); // Function BravoHotelGame.BravoHotelInventoryCharacter.CharacterMoveEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1f41290
	void CharacterMove(struct FVector2D MousePostion); // Function BravoHotelGame.BravoHotelInventoryCharacter.CharacterMove // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f41210
};

// Class BravoHotelGame.BravoHotelInventoryHoverWidget
// Size: 0x280 (Inherited: 0x248)
struct UBravoHotelInventoryHoverWidget : UUserWidget {
	struct UCanvasPanel* CanvasItemSlotHover; // 0x248(0x08)
	struct UCanvasPanel* CanvasWeaponItemSlotHover; // 0x250(0x08)
	struct UCanvasPanel* CanvasPerkSlotHover; // 0x258(0x08)
	struct UCanvasPanel* CanvasStatSlotHover; // 0x260(0x08)
	struct UCanvasPanel* CanvasMaterialSlotHover; // 0x268(0x08)
	struct UCanvasPanel* CanvasTooltipSlotHover; // 0x270(0x08)
	bool bNeedUpdateHover; // 0x278(0x01)
	char pad_279[0x3]; // 0x279(0x03)
	int32_t HoverType; // 0x27c(0x04)

	void HideHoverBP(); // Function BravoHotelGame.BravoHotelInventoryHoverWidget.HideHoverBP // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void CheckHoverVisibility(); // Function BravoHotelGame.BravoHotelInventoryHoverWidget.CheckHoverVisibility // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelInventoryInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelInventoryInterface : UInterface {

	void ShowStatupAnim(struct FStatupAnimParameters& StatupParameters, enum class EStatupAnimType StatupType); // Function BravoHotelGame.BravoHotelInventoryInterface.ShowStatupAnim // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1f41f70
	void SetHoverTimer(struct FTimerHandle TimerHandle); // Function BravoHotelGame.BravoHotelInventoryInterface.SetHoverTimer // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f41ee0
	bool SetHoverPosition(); // Function BravoHotelGame.BravoHotelInventoryInterface.SetHoverPosition // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1ce30
	void Open(); // Function BravoHotelGame.BravoHotelInventoryInterface.Open // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f41ec0
	void OnChangeWeapon(); // Function BravoHotelGame.BravoHotelInventoryInterface.OnChangeWeapon // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1cd90
	void NotifyNewWeapon(); // Function BravoHotelGame.BravoHotelInventoryInterface.NotifyNewWeapon // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e86160
	bool IsShowingDropPopup(); // Function BravoHotelGame.BravoHotelInventoryInterface.IsShowingDropPopup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f41e90
	void HideHover(enum class ItemWidgetDragType DragType, bool bForce); // Function BravoHotelGame.BravoHotelInventoryInterface.HideHover // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f41dc0
	void CloseDropPopup(); // Function BravoHotelGame.BravoHotelInventoryInterface.CloseDropPopup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e869a0
	void Close(); // Function BravoHotelGame.BravoHotelInventoryInterface.Close // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f41da0
	void AcceptDropPopup(); // Function BravoHotelGame.BravoHotelInventoryInterface.AcceptDropPopup // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1cee0
};

// Class BravoHotelGame.BravoHotelInventoryPerkSlotWidget
// Size: 0x2a0 (Inherited: 0x248)
struct UBravoHotelInventoryPerkSlotWidget : UUserWidget {
	struct ABravoHotelCharacter* PlayerCharacter; // 0x248(0x08)
	struct FPerkUIInfo PerkInfo; // 0x250(0x2c)
	bool bIsJustVisual; // 0x27c(0x01)
	char pad_27D[0x3]; // 0x27d(0x03)
	struct UOverlay* OverlayCoolTime; // 0x280(0x08)
	struct UTextBlock* TextCoolTime; // 0x288(0x08)
	struct UImage* ImgCoolTime; // 0x290(0x08)
	struct UImage* Img_Active; // 0x298(0x08)
};

// Class BravoHotelGame.BravoHotelInventoryPerkWidget
// Size: 0x2e8 (Inherited: 0x248)
struct UBravoHotelInventoryPerkWidget : UUserWidget {
	struct ABravoHotelCharacter* PlayerCharacter; // 0x248(0x08)
	struct FPerkUIInfo UltimatePerkInfo; // 0x250(0x2c)
	char pad_27C[0x4]; // 0x27c(0x04)
	struct UWidget* LastHoverWidget; // 0x280(0x08)
	struct UWidget* OverlayUltimate; // 0x288(0x08)
	struct UWidget* VerticalBoxHealth; // 0x290(0x08)
	struct UWidget* VerticalBoxPower; // 0x298(0x08)
	struct UWidget* VerticalBoxSpeed; // 0x2a0(0x08)
	struct UOverlay* Over_CoolTime; // 0x2a8(0x08)
	struct UTextBlock* T_CoolTime; // 0x2b0(0x08)
	struct UImage* IMG_CoolTime; // 0x2b8(0x08)
	struct UImage* Img_Active; // 0x2c0(0x08)
	struct UImage* IMG_CanActive; // 0x2c8(0x08)
	char pad_2D0[0x8]; // 0x2d0(0x08)
	struct UTextBlock* T_RemainCount; // 0x2d8(0x08)
	bool bCanChangePerkDeck; // 0x2e0(0x01)
	char pad_2E1[0x7]; // 0x2e1(0x07)

	void UpdateUnlockLevel(int32_t NewLevel); // Function BravoHotelGame.BravoHotelInventoryPerkWidget.UpdateUnlockLevel // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnHoveredWidget(struct UWidget* HoveredWidget); // Function BravoHotelGame.BravoHotelInventoryPerkWidget.OnHoveredWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_RefreshPerkDeck(); // Function BravoHotelGame.BravoHotelInventoryPerkWidget.K2_RefreshPerkDeck // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelInventoryWidget
// Size: 0x278 (Inherited: 0x248)
struct UBravoHotelInventoryWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	struct FMulticastInlineDelegate WeaponAmmoDelegate; // 0x250(0x10)
	char pad_260[0x18]; // 0x260(0x18)

	float WeightGauge(struct FString ItemName, int32_t Quantity, bool Ground); // Function BravoHotelGame.BravoHotelInventoryWidget.WeightGauge // (Final|Native|Public|BlueprintCallable) // @ game+0x1f42840
	void WeaponAmmoDelegate__DelegateSignature(int32_t SlotIdx, int32_t CurAmmo, int32_t MaxAmmo); // DelegateFunction BravoHotelGame.BravoHotelInventoryWidget.WeaponAmmoDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnRefreshWeightProgress(); // Function BravoHotelGame.BravoHotelInventoryWidget.OnRefreshWeightProgress // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelItemFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelItemFunctionLibrary : UObject {

	struct ABravoHotelPickup* SpawnItemActorByName(struct UObject* WorldContextObject, struct FName& NewItemName, struct FTransform& SpawnTransform, float Quantity, bool bLoadMesh); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.SpawnItemActorByName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f44700
	void NativeGetItemSpawningInfos(struct FInventoryItemInfo& InItemInfo, bool& ReturnValue, struct FItemSpawingInfoTableRow& ItemSpawningOut); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.NativeGetItemSpawningInfos // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f44530
	bool NativeGetItemInfoByName(struct FName& InRowName, struct FInventoryItemDetailInfo& OutItemInfo); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.NativeGetItemInfoByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f44410
	bool NativeGetItemInfo(struct FDataTableRowHandle& DataHandle, struct FInventoryItemDetailInfo& OutItemInfo); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.NativeGetItemInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f442f0
	void NativeGetItemDetails(struct FInventoryItemInfo& InItemInfo, bool& ReturnValue, struct FInventoryItemDetailInfo& ItemDetailsOut); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.NativeGetItemDetails // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f44120
	bool IsBookItemByName(struct FName ItemName); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.IsBookItemByName // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f440a0
	int32_t IsBookItem(struct FInventoryItemDetailInfo& ItemDetailInfo); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.IsBookItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f43fd0
	int32_t GetWeaponSupplyCost(struct FName& ItemWeaponID); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GetWeaponSupplyCost // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1f43f40
	float GetWeaponDisplayDamage(struct FName& ItemWeaponID); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GetWeaponDisplayDamage // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1f43eb0
	enum class EDataItemType GetTypeForRecoard(struct FInventoryItemDetailInfo& ItemDetailInfo); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GetTypeForRecoard // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1f43de0
	struct FName GetSightSocketName(enum class EWeaponAttachmentItem& SightType); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GetSightSocketName // (Final|Native|Static|Public|HasOutParms) // @ game+0x1f43d40
	struct TArray<struct FItemRecipeTreeData> GetRecipeTreeMaterials(struct FItemRecipeTreeData& RecipeTree); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GetRecipeTreeMaterials // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f43bb0
	struct UDataTable* GetItemDataTable(); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GetItemDataTable // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f43b80
	enum class EPerkSlotFlag GetBookColor(struct FInventoryItemDetailInfo& ItemDetailInfo); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GetBookColor // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f43ab0
	struct TArray<struct FName> GenerateItemOptionsByGroupReward(struct TArray<struct FName> GroupRewards); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GenerateItemOptionsByGroupReward // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f43980
	bool GenerateItemInfosByWeaponInfo(struct FWeaponInfo& WeaponInfo, struct FInventoryItemInfo& OutItemInfo); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GenerateItemInfosByWeaponInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1f437d0
	bool GenerateItemInfosByWeaponID(int32_t WeaponId, struct FInventoryItemInfo& OutItemInfo); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GenerateItemInfosByWeaponID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1f436a0
	struct TArray<struct FInventoryItemInfo> GenerateItemInfosBySpawnItemResults(struct TArray<struct FSpawnItemResult>& SpawnItemResults); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GenerateItemInfosBySpawnItemResults // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1f434b0
	void GenerateItemInfoBySupplyItem(struct TArray<struct FInventoryItemInfo>& RefItemList, int32_t ItemDataID); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GenerateItemInfoBySupplyItem // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1f43370
	struct TArray<struct FName> GenerateBuffsByItemOptions(struct TArray<struct FName> ItemOptions); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GenerateBuffsByItemOptions // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f43240
	struct TArray<struct FName> GenerateBuffsByItemOptionIDs(struct TArray<int32_t> ItemOptionIDs); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.GenerateBuffsByItemOptionIDs // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f43110
	bool FindItemWeaponID(int32_t ItemId, int32_t Reinforce, struct FName& OutItemWeaponID); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.FindItemWeaponID // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1f43010
	void CheckSpawningItemInfo(struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.BravoHotelItemFunctionLibrary.CheckSpawningItemInfo // (Final|Native|Static|Public|HasOutParms) // @ game+0x1f42f30
};

// Class BravoHotelGame.BravoHotelPickup
// Size: 0x938 (Inherited: 0x320)
struct ABravoHotelPickup : AActor {
	char pad_320[0x8]; // 0x320(0x08)
	struct UBoxComponent* BoxComponent; // 0x328(0x08)
	struct USphereComponent* SphereComponent; // 0x330(0x08)
	struct UStaticMeshComponent* WorldStaticMesh; // 0x338(0x08)
	struct USkeletalMeshComponent* WorldSkelMesh; // 0x340(0x08)
	char pad_348[0x8]; // 0x348(0x08)
	struct UBravoHotelAudioEmitterComponent* AudioComponent; // 0x350(0x08)
	struct FInventoryItemInfo ItemInfo; // 0x358(0x98)
	struct FInventoryItemDetailInfo DetailItemInfo; // 0x3f0(0x490)
	struct TArray<struct FInventoryItemInfo> AttachmentItems; // 0x880(0x10)
	bool bDrawDebugInfo; // 0x890(0x01)
	char pad_891[0x7]; // 0x891(0x07)
	struct TArray<struct UObject*> LoadedAssets; // 0x898(0x10)
	char pad_8A8[0x9]; // 0x8a8(0x09)
	bool bLoadMesh; // 0x8b1(0x01)
	bool bPlaceOnTheGround; // 0x8b2(0x01)
	char pad_8B3[0x5]; // 0x8b3(0x05)
	struct FMulticastInlineDelegate OnChangeItemInfoDelegate; // 0x8b8(0x10)
	bool IsSpawnBook; // 0x8c8(0x01)
	char pad_8C9[0x7]; // 0x8c9(0x07)
	struct UParticleSystemComponent* BookSpawnEffectComponent; // 0x8d0(0x08)
	struct UParticleSystem* BookSpawnEffect; // 0x8d8(0x08)
	struct UParticleSystemComponent* RootParticleComponent; // 0x8e0(0x08)
	struct UParticleSystemComponent* MeshParticleComponent; // 0x8e8(0x08)
	struct TArray<struct UParticleSystemComponent*> PassiveChildParticleComponents; // 0x8f0(0x10)
	struct TArray<struct UParticleSystemComponent*> ActiveChildParticleComponents; // 0x900(0x10)
	char pad_910[0x8]; // 0x910(0x08)
	struct UParticleSystem* RootParticle; // 0x918(0x08)
	char pad_920[0x18]; // 0x920(0x18)

	void UpdateSkelMeshTickEnable(); // Function BravoHotelGame.BravoHotelPickup.UpdateSkelMeshTickEnable // (Final|Native|Protected) // @ game+0x1f7d510
	void SetQuantity(int32_t NewQuantity); // Function BravoHotelGame.BravoHotelPickup.SetQuantity // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7d490
	void PrintItemInfos(); // Function BravoHotelGame.BravoHotelPickup.PrintItemInfos // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7d470
	void OnRep_ItemInfo(); // Function BravoHotelGame.BravoHotelPickup.OnRep_ItemInfo // (Final|Native|Protected) // @ game+0x1f7d450
	void OnParticleDataLoaded(); // Function BravoHotelGame.BravoHotelPickup.OnParticleDataLoaded // (Final|Native|Public) // @ game+0x1f7d430
	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BravoHotelGame.BravoHotelPickup.OnOverlapEnd // (Final|Native|Public) // @ game+0x1f7d2f0
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.BravoHotelPickup.OnOverlapBegin // (Final|Native|Public|HasOutParms) // @ game+0x1f7d0e0
	void OnChangeItemInfoDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelPickup.OnChangeItemInfoDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnAudioEmitterRegistered(); // Function BravoHotelGame.BravoHotelPickup.OnAudioEmitterRegistered // (Final|Native|Protected) // @ game+0x1f7d0c0
	bool IsWearable(); // Function BravoHotelGame.BravoHotelPickup.IsWearable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f7d090
	bool IsStackable(); // Function BravoHotelGame.BravoHotelPickup.IsStackable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f7d060
	bool IsEquippable(); // Function BravoHotelGame.BravoHotelPickup.IsEquippable // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f7d030
	struct UStaticMeshComponent* GetWorldStaticMesh(); // Function BravoHotelGame.BravoHotelPickup.GetWorldStaticMesh // (Final|Native|Public|Const) // @ game+0x1f107e0
	struct USphereComponent* GetSphereComponent(); // Function BravoHotelGame.BravoHotelPickup.GetSphereComponent // (Final|Native|Public|Const) // @ game+0x1f7d000
	int32_t GetQuantity(); // Function BravoHotelGame.BravoHotelPickup.GetQuantity // (Final|Native|Public|Const) // @ game+0x1f7cfd0
	struct FString GetItemName(); // Function BravoHotelGame.BravoHotelPickup.GetItemName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f7cf50
	struct FName GetItemKey(); // Function BravoHotelGame.BravoHotelPickup.GetItemKey // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f7cf10
	bool GetItemInfo(struct FInventoryItemInfo& OutItemInfo, struct FInventoryItemDetailInfo& OutDetailItemInfo); // Function BravoHotelGame.BravoHotelPickup.GetItemInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f7cd90
	struct UBoxComponent* GetBoxComponent(); // Function BravoHotelGame.BravoHotelPickup.GetBoxComponent // (Final|Native|Public|Const) // @ game+0x1e832a0
	void DestroyIfHasNoQuantity(); // Function BravoHotelGame.BravoHotelPickup.DestroyIfHasNoQuantity // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7cd70
};

// Class BravoHotelGame.BravoHotelItemPickup
// Size: 0x938 (Inherited: 0x938)
struct ABravoHotelItemPickup : ABravoHotelPickup {
};

// Class BravoHotelGame.BravoHotelItemRecipeTreeWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelItemRecipeTreeWidget : UUserWidget {
	struct TArray<struct FRecipeTreeWidgetInfo> ItemRecipeTreeInfo; // 0x248(0x10)

	void SetTreeInfo(struct FName TopRecipe); // Function BravoHotelGame.BravoHotelItemRecipeTreeWidget.SetTreeInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x16b4f10
};

// Class BravoHotelGame.BravoHotelItemSpawnBoxComponent
// Size: 0x650 (Inherited: 0x4d0)
struct UBravoHotelItemSpawnBoxComponent : UBoxComponent {
	int32_t BoxID; // 0x4c8(0x04)
	bool UsingRandomRotation; // 0x4cc(0x01)
	bool IsCompleteSpawn; // 0x4cd(0x01)
	char pad_4D6[0x9a]; // 0x4d6(0x9a)
	struct FDivisionItem NoneItem; // 0x570(0x18)
	char pad_588[0x30]; // 0x588(0x30)
	struct UBravoHotelItemStandardGroupBoxComponent* ParentsStandardGroupBoxComponent; // 0x5b8(0x08)
	struct TArray<struct UObject*> LoadedClasses; // 0x5c0(0x10)
	char pad_5D0[0x80]; // 0x5d0(0x80)

	void SetBoxComponentID(int32_t ID); // Function BravoHotelGame.BravoHotelItemSpawnBoxComponent.SetBoxComponentID // (Final|Native|Public|BlueprintCallable) // @ game+0x1f464e0
	void GetModifyMap(struct TMap<struct FString, float>& outInputModifiers); // Function BravoHotelGame.BravoHotelItemSpawnBoxComponent.GetModifyMap // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	int32_t GetBoxComponentID(); // Function BravoHotelGame.BravoHotelItemSpawnBoxComponent.GetBoxComponentID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f464c0
};

// Class BravoHotelGame.BravoHotelItemSpawnDebugWidget
// Size: 0x698 (Inherited: 0x248)
struct UBravoHotelItemSpawnDebugWidget : UUserWidget {
	struct FVector WorldCenter; // 0x248(0x0c)
	struct FVector2D WorldSize; // 0x254(0x08)
	struct FVector2D BaseMapSize; // 0x25c(0x08)
	char pad_264[0x4]; // 0x264(0x04)
	struct FDebugRecordInfo RecordInfo; // 0x268(0x188)
	struct FItemDataInfo ItemDataInfoData; // 0x3f0(0xe8)
	struct TArray<struct UUserWidget*> SlotList; // 0x4d8(0x10)
	struct TMap<struct FString, struct FBuildingData> BuildingData; // 0x4e8(0x50)
	struct TMap<struct FString, int32_t> ItemDivisionCnt; // 0x538(0x50)
	struct TMap<struct FString, int32_t> ItemSpawnCnt; // 0x588(0x50)
	struct TMap<struct FString, int32_t> ItemRateAddCnt; // 0x5d8(0x50)
	struct TMap<struct FString, int32_t> ItemRateRemoveCnt; // 0x628(0x50)
	struct FString SelectedBuildingName; // 0x678(0x10)
	struct FString SelectedStandardGroupName; // 0x688(0x10)

	void SetSpawnData(int32_t TotalSpawnCnt, int32_t TotalPickUpCount, int32_t TotalPickUpLimitCount); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.SetSpawnData // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetPositionSlot(struct UUserWidget* Widget, struct FVector2D& Pos); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.SetPositionSlot // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void SetOuterArea(float Radius, struct FVector2D& Center); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.SetOuterArea // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void SetItemSlotList(struct TArray<struct FItemWorldSpawnInfo>& ItemList, struct TMap<struct FString, int32_t>& DivisionCountList, struct TMap<struct FString, int32_t>& SpawnCountList, struct TMap<struct FString, int32_t>& RateAddCountList, struct TMap<struct FString, int32_t>& RateRemoveCountList); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.SetItemSlotList // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void SetFilter(struct TArray<struct FName>& Filter, bool DivisionInfo, bool ShowAllItem); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.SetFilter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f48800
	void SetData(struct FString Filename); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.SetData // (Final|Native|Public|BlueprintCallable) // @ game+0x1f48760
	void SelectStandardGroup(struct FString SelectStandardGroupName); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.SelectStandardGroup // (Final|Native|Public|BlueprintCallable) // @ game+0x1f486c0
	void SelectBuilding(struct FString SelectBuildingName); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.SelectBuilding // (Final|Native|Public|BlueprintCallable) // @ game+0x1f48620
	void PreStandardGroupInit(struct FString PreStandardGroupName); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.PreStandardGroupInit // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void PreBuildingInit(struct FString PreBuildingName); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.PreBuildingInit // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void InitStandardGroupData(struct TArray<struct FStandardGroupInfo_UI>& StandardGroupNameList); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.InitStandardGroupData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void InitItemSlot(); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.InitItemSlot // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void InitItemData(struct TArray<struct FString>& ItemNameList); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.InitItemData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void InitBuildingData(struct TArray<struct FBuildingInfo_UI>& BuildingInfoList); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.InitBuildingData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	struct UUserWidget* CreateSlotWidget(); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.CreateSlotWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	struct FVector2D ConvertPosWorldtoMap_Impl(struct FVector WorldPos); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.ConvertPosWorldtoMap_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f48580
	float ConvertDistWorldtoMap_Impl(float Distance); // Function BravoHotelGame.BravoHotelItemSpawnDebugWidget.ConvertDistWorldtoMap_Impl // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f484f0
};

// Class BravoHotelGame.BravoHotelItemSpawnRateWidget
// Size: 0x2d0 (Inherited: 0x248)
struct UBravoHotelItemSpawnRateWidget : UUserWidget {
	struct FName SelectAreaKey; // 0x248(0x08)
	bool IsBlueZoneSpawnRate; // 0x250(0x01)
	char pad_251[0x7]; // 0x251(0x07)
	struct TMap<struct FName, struct FLocalSpawnRate> AreaSpawnRateList; // 0x258(0x50)
	struct FLocalSpawnRate BlueZoneSpawnRate; // 0x2a8(0x28)

	void SetSetting(struct FLocalSpawnRate& Data); // Function BravoHotelGame.BravoHotelItemSpawnRateWidget.SetSetting // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void SetRateTableKey(struct FName& NewBlueZoneSpawnRateKey, struct TArray<struct FName>& NewAreaSpawnRateList, bool IsVehicleData); // Function BravoHotelGame.BravoHotelItemSpawnRateWidget.SetRateTableKey // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void SelectData(bool NewIsBlueZoneSpawnRate, struct FName& AreaKey); // Function BravoHotelGame.BravoHotelItemSpawnRateWidget.SelectData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f49130
	void InitRateTableKey(bool IsVehicleData); // Function BravoHotelGame.BravoHotelItemSpawnRateWidget.InitRateTableKey // (Final|Native|Public|BlueprintCallable) // @ game+0x1f490a0
	void GetRateList(struct TMap<struct FName, float>& outRateList); // Function BravoHotelGame.BravoHotelItemSpawnRateWidget.GetRateList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f48f10
	void ChangeRate(struct FName ItemName, float Rate); // Function BravoHotelGame.BravoHotelItemSpawnRateWidget.ChangeRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1f48e40
};

// Class BravoHotelGame.BravoHotelItemSpawnSimulationBox
// Size: 0x3c0 (Inherited: 0x320)
struct ABravoHotelItemSpawnSimulationBox : AActor {
	struct FSpawnPerkData SpawnPerkData; // 0x320(0x60)
	struct FMulticastInlineDelegate OnEndSimulationDelegate; // 0x380(0x10)
	struct FVector PreLocation; // 0x390(0x0c)
	int32_t CheckCount; // 0x39c(0x04)
	int32_t MaxCount; // 0x3a0(0x04)
	char pad_3A4[0x4]; // 0x3a4(0x04)
	struct UStaticMeshComponent* Box; // 0x3a8(0x08)
	char pad_3B0[0x10]; // 0x3b0(0x10)

	void EndSimulation(struct FVector& Location, struct FString Msg); // Function BravoHotelGame.BravoHotelItemSpawnSimulationBox.EndSimulation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f49400
	void CheckLocation(); // Function BravoHotelGame.BravoHotelItemSpawnSimulationBox.CheckLocation // (Final|Native|Public) // @ game+0x1f493e0
};

// Class BravoHotelGame.BravoHotelItemSpawnStatisticManager
// Size: 0x98 (Inherited: 0x28)
struct UBravoHotelItemSpawnStatisticManager : UObject {
	char pad_28[0x70]; // 0x28(0x70)
};

// Class BravoHotelGame.BravoHotelItemStandardGroupBoxComponent
// Size: 0x4f0 (Inherited: 0x4d0)
struct UBravoHotelItemStandardGroupBoxComponent : UBoxComponent {
	struct FDataTableRowHandle ItemStandardGroupInfo; // 0x4c8(0x10)
	struct FSpawnBoxList AllBoxInfos; // 0x4d8(0x10)
};

// Class BravoHotelGame.BravoHotelItemUseWidget
// Size: 0x268 (Inherited: 0x248)
struct UBravoHotelItemUseWidget : UUserWidget {
	char pad_248[0x20]; // 0x248(0x20)

	void SetUseItemVisibility(bool Visible, bool bUpdateRecovery, struct FDataTableRowHandle& DataTableRow); // Function BravoHotelGame.BravoHotelItemUseWidget.SetUseItemVisibility // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f4eeb0
	void SetUseItemInfo(struct FItemUse SetFItemUse); // Function BravoHotelGame.BravoHotelItemUseWidget.SetUseItemInfo // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	struct FText MakeMessageWithItemName(int32_t TableRowNum, struct FName& ItemRowName); // Function BravoHotelGame.BravoHotelItemUseWidget.MakeMessageWithItemName // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f4ed80
	struct FText GetMessageByType(enum class ECastingUIType CastingUIType, struct FName& SourceName); // Function BravoHotelGame.BravoHotelItemUseWidget.GetMessageByType // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f4ec50
	struct FColor GetCastingColor(); // Function BravoHotelGame.BravoHotelItemUseWidget.GetCastingColor // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f4ec10
};

// Class BravoHotelGame.BravoHotelJetpackWidget
// Size: 0x268 (Inherited: 0x248)
struct UBravoHotelJetpackWidget : UUserWidget {
	struct UProgressBar* GauageProgress; // 0x248(0x08)
	struct UTextBlock* GauageText; // 0x250(0x08)
	char pad_258[0x10]; // 0x258(0x10)
};

// Class BravoHotelGame.BravoHotelKillcamPlayback
// Size: 0x60 (Inherited: 0x28)
struct UBravoHotelKillcamPlayback : UObject {
	struct UWorld* KillcamWorld; // 0x28(0x08)
	struct UPackage* KillcamWorldPackage; // 0x30(0x08)
	char pad_38[0x28]; // 0x38(0x28)
};

// Class BravoHotelGame.BravoHotelKillInfoSlotWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelKillInfoSlotWidget : UUserWidget {
	float HideTime; // 0x248(0x04)
	int32_t ArrayIndex; // 0x24c(0x04)
	struct UBravoHotelKillInfoWidget* ParentWidget; // 0x250(0x08)

	void SetInfo_BP(int32_t NewArrayIndex, struct FKillBroadcastUIInfo& Info); // Function BravoHotelGame.BravoHotelKillInfoSlotWidget.SetInfo_BP // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelKillInfoWidget
// Size: 0x2c0 (Inherited: 0x248)
struct UBravoHotelKillInfoWidget : UUserWidget {
	struct UBravoHotelKillInfoSlotWidget* SlotWidgetClass; // 0x248(0x08)
	int32_t MaxSlotCount; // 0x250(0x04)
	int32_t MaxVisibleCount; // 0x254(0x04)
	struct TArray<struct UBravoHotelKillInfoSlotWidget*> SlotList; // 0x258(0x10)
	struct TMap<int32_t, struct FKillBroadcastUIInfo> KillDataList; // 0x268(0x50)
	int32_t AddIndex; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)

	void TimeOverSlot(int32_t ArrayIndex, struct UBravoHotelKillInfoSlotWidget* TargetSlotWidget); // Function BravoHotelGame.BravoHotelKillInfoWidget.TimeOverSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1f4f860
	void CreateSlot(int32_t CreateCout); // Function BravoHotelGame.BravoHotelKillInfoWidget.CreateSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1f4f7e0
	void AddUserKickedMessage(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelKillInfoWidget.AddUserKickedMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddKillMessage(struct FKillBroadcastUIInfo& BroadCastInfo); // Function BravoHotelGame.BravoHotelKillInfoWidget.AddKillMessage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddChildSlot(struct UBravoHotelKillInfoSlotWidget* NewSlotWidget); // Function BravoHotelGame.BravoHotelKillInfoWidget.AddChildSlot // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelLadder
// Size: 0x3d0 (Inherited: 0x320)
struct ABravoHotelLadder : AActor {
	struct USceneComponent* RootScene; // 0x320(0x08)
	struct UBoxComponent* InteractiveCheckBox; // 0x328(0x08)
	struct USceneComponent* UpStart; // 0x330(0x08)
	struct USceneComponent* UpEnd; // 0x338(0x08)
	struct USceneComponent* DownStart; // 0x340(0x08)
	struct USceneComponent* DownEnd; // 0x348(0x08)
	struct UArrowComponent* LadderPoint; // 0x350(0x08)
	int32_t StepMinCount; // 0x358(0x04)
	int32_t StepCount; // 0x35c(0x04)
	float StepHeight; // 0x360(0x04)
	float StepHalfWidth; // 0x364(0x04)
	float StepWidthScale; // 0x368(0x04)
	float StepWidthMargin; // 0x36c(0x04)
	struct UStaticMesh* StepMesh; // 0x370(0x08)
	bool OnlySnapToCenter; // 0x378(0x01)
	bool TestLadderHiddenInGame; // 0x379(0x01)
	bool DebugMode; // 0x37a(0x01)
	char pad_37B[0x1]; // 0x37b(0x01)
	float AvailableDistanceAtTop; // 0x37c(0x04)
	float AvailableDistanceAtBottom; // 0x380(0x04)
	float AvailableDistanceInAir; // 0x384(0x04)
	float AvailableMinYawAtTop; // 0x388(0x04)
	float AvailableMaxYawAtTop; // 0x38c(0x04)
	float AvailableMinYawAtBottom; // 0x390(0x04)
	float AvailableMaxYawAtBottom; // 0x394(0x04)
	float BottomAdjustedHeight; // 0x398(0x04)
	float TopRelativeX; // 0x39c(0x04)
	float BottomRelativeX; // 0x3a0(0x04)
	bool IsTopOccupied; // 0x3a4(0x01)
	bool IsBottomOccupied; // 0x3a5(0x01)
	char pad_3A6[0x1a]; // 0x3a6(0x1a)
	struct TArray<struct ABravoHotelCharacter*> UsingPlayers; // 0x3c0(0x10)

	void SetOccupyLadder(bool IsTop); // Function BravoHotelGame.BravoHotelLadder.SetOccupyLadder // (Final|Native|Public|BlueprintCallable) // @ game+0x1f50730
	void SetLadderToPlayerAtStreaming(); // Function BravoHotelGame.BravoHotelLadder.SetLadderToPlayerAtStreaming // (Final|Native|Public|BlueprintCallable) // @ game+0x1f50710
	void OnRep_UsingPlayers(); // Function BravoHotelGame.BravoHotelLadder.OnRep_UsingPlayers // (Final|Native|Public) // @ game+0x1f506f0
	float GetCurrentStepPoint(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelLadder.GetCurrentStepPoint // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f50650
	struct FVector GetCharacterNetSmoothLocation(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelLadder.GetCharacterNetSmoothLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f505b0
	struct FVector GetCharacterBottomLocation(struct ABravoHotelCharacter* Character, bool bIsNetSmoothLocation); // Function BravoHotelGame.BravoHotelLadder.GetCharacterBottomLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f504d0
	bool FindNearestPositionAtStart(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelLadder.FindNearestPositionAtStart // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f50440
	bool FindNearestPositionAtEnd(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelLadder.FindNearestPositionAtEnd // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f503b0
	struct FVector FindClosestLocation(struct ABravoHotelCharacter* Character, enum class ELadderInteractionType LadderInteractionType); // Function BravoHotelGame.BravoHotelLadder.FindClosestLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f502e0
	bool CheckTopEnd(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelLadder.CheckTopEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1f50250
	float CheckLadderPos(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelLadder.CheckLadderPos // (Final|Native|Public|BlueprintCallable) // @ game+0x1f501b0
	bool CheckCanUseLadder(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelLadder.CheckCanUseLadder // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f50120
	bool CheckCanAvailableDistance(struct ABravoHotelCharacter* Character, bool bIsInAir, float HitDistance); // Function BravoHotelGame.BravoHotelLadder.CheckCanAvailableDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f50010
	bool CheckCanAvailableAngle(struct ABravoHotelCharacter* Character, bool bIsInAir, float& OutRelativeYaw); // Function BravoHotelGame.BravoHotelLadder.CheckCanAvailableAngle // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f4fef0
	bool CheckBottomEnd(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelLadder.CheckBottomEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x1f4fe60
};

// Class BravoHotelGame.BravoHotelLightPropActor
// Size: 0x350 (Inherited: 0x320)
struct ABravoHotelLightPropActor : AActor {
	bool bLightOn; // 0x320(0x01)
	bool bLightFlicker; // 0x321(0x01)
	char pad_322[0x2]; // 0x322(0x02)
	float LightOnIntensity; // 0x324(0x04)
	float LightOnTemperture; // 0x328(0x04)
	float LightOnAttenuationRadius; // 0x32c(0x04)
	struct UMaterialInterface* LightOnMaterial; // 0x330(0x08)
	struct UMaterialInterface* LightOffMaterial; // 0x338(0x08)
	struct UMaterialInterface* LightFlickerFunctionMaterial; // 0x340(0x08)
	struct USceneComponent* SceneRootComponent; // 0x348(0x08)
};

// Class BravoHotelGame.BravoHotelLoadingHUD
// Size: 0x428 (Inherited: 0x428)
struct ABravoHotelLoadingHUD : ABravoHotelBaseHUD {
};

// Class BravoHotelGame.BravoHotelLoadingWidget
// Size: 0x2a0 (Inherited: 0x248)
struct UBravoHotelLoadingWidget : UUserWidget {
	int32_t LoadingScreenIndex; // 0x248(0x04)
	int32_t LoadingScreenCount; // 0x24c(0x04)
	struct FString FromLoading; // 0x250(0x10)
	char pad_260[0x10]; // 0x260(0x10)
	struct TArray<struct ABravoHotelCharacter*> MutableList; // 0x270(0x10)
	char pad_280[0x8]; // 0x280(0x08)
	struct APawn* TargetPawn; // 0x288(0x08)
	char pad_290[0x10]; // 0x290(0x10)

	void Update(struct FSelectLoadingScreenData& Data); // Function BravoHotelGame.BravoHotelLoadingWidget.Update // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void ShowDesc(float DelayTime); // Function BravoHotelGame.BravoHotelLoadingWidget.ShowDesc // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetInfo(enum class ELoadingScreenType Type, struct FSelectLoadingScreenData& OutData); // Function BravoHotelGame.BravoHotelLoadingWidget.SetInfo // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void ReceiveEndAfterLoading(); // Function BravoHotelGame.BravoHotelLoadingWidget.ReceiveEndAfterLoading // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnCharacterUpdateMutable(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelLoadingWidget.OnCharacterUpdateMutable // (Final|Native|Public) // @ game+0x1f51470
	void OnAEDLoadingStarted(struct UWorld* InWorld); // Function BravoHotelGame.BravoHotelLoadingWidget.OnAEDLoadingStarted // (Final|Native|Protected) // @ game+0x1f513f0
	void OnAEDLoadingCompleted(struct UWorld* InWorld); // Function BravoHotelGame.BravoHotelLoadingWidget.OnAEDLoadingCompleted // (Final|Native|Protected) // @ game+0x1f51370
	float GetTimeBeforeLoading(); // Function BravoHotelGame.BravoHotelLoadingWidget.GetTimeBeforeLoading // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f51340
};

// Class BravoHotelGame.BravoHotelLobbyCharacter
// Size: 0x3ad0 (Inherited: 0x3ac0)
struct ABravoHotelLobbyCharacter : ABravoHotelCharacter {
	char pad_3AC0[0x10]; // 0x3ac0(0x10)

	void OnUpdatedMutable_Lobby(); // Function BravoHotelGame.BravoHotelLobbyCharacter.OnUpdatedMutable_Lobby // (Final|Native|Protected) // @ game+0x1f51770
	void OnEnteredLobbyScene(); // Function BravoHotelGame.BravoHotelLobbyCharacter.OnEnteredLobbyScene // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f51750
};

// Class BravoHotelGame.BravoHotelLobbyPlayerController
// Size: 0x728 (Inherited: 0x6f8)
struct ABravoHotelLobbyPlayerController : APlayerController {
	char pad_6F8[0x8]; // 0x6f8(0x08)
	int32_t CurrentLobbyPawnIndex; // 0x700(0x04)
	char pad_704[0x4]; // 0x704(0x04)
	struct ABravoHotelOutGameParachuteActor* ParachuteActor; // 0x708(0x08)
	char pad_710[0x18]; // 0x710(0x18)

	void VoiceTalkState(bool bVoiceChat); // Function BravoHotelGame.BravoHotelLobbyPlayerController.VoiceTalkState // (Final|Native|Public) // @ game+0x1f51c90
	void OnMasterVolumeUp(); // Function BravoHotelGame.BravoHotelLobbyPlayerController.OnMasterVolumeUp // (Final|Native|Public) // @ game+0x1f51c70
	void OnMasterVolumeToggle(); // Function BravoHotelGame.BravoHotelLobbyPlayerController.OnMasterVolumeToggle // (Final|Native|Public) // @ game+0x1f51c50
	void OnMasterVolumeDown(); // Function BravoHotelGame.BravoHotelLobbyPlayerController.OnMasterVolumeDown // (Final|Native|Public) // @ game+0x1f51c30
	void OnChangeKeyOption(struct TArray<enum class EKeySettingType>& ChangeKeyList); // Function BravoHotelGame.BravoHotelLobbyPlayerController.OnChangeKeyOption // (Final|Native|Public|HasOutParms) // @ game+0x1f51b80
	void NotifyOperationMessage(struct FText& NotifyText); // Function BravoHotelGame.BravoHotelLobbyPlayerController.NotifyOperationMessage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void LoadKeyInput(); // Function BravoHotelGame.BravoHotelLobbyPlayerController.LoadKeyInput // (Final|Native|Public) // @ game+0x1f51b60
};

// Class BravoHotelGame.BravoHotelLobbyWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelLobbyWidget : UUserWidget {
	struct FBravoHotelLobbyMapSetting DefaultMapSetting; // 0x248(0x10)

	void Logout(); // Function BravoHotelGame.BravoHotelLobbyWidget.Logout // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1ed7720
};

// Class BravoHotelGame.BravoHotelLobbyWidget_Web
// Size: 0x4c8 (Inherited: 0x288)
struct UBravoHotelLobbyWidget_Web : UBravoHotelCoherentBaseWidget {
	char pad_288[0xdc]; // 0x288(0xdc)
	struct FVector2D MousePos; // 0x364(0x08)
	bool CheckPreLoad; // 0x36c(0x01)
	bool bShowReconnectAlarm; // 0x36d(0x01)
	char pad_36E[0x2]; // 0x36e(0x02)
	struct FMulticastInlineDelegate ExitDelegate; // 0x370(0x10)
	struct FMulticastInlineDelegate OptionDelegate; // 0x380(0x10)
	struct FMulticastInlineDelegate UIButtonOverSoundDelegate; // 0x390(0x10)
	struct FMulticastInlineDelegate UIButtonClickSoundDelegate; // 0x3a0(0x10)
	struct FMulticastInlineDelegate StoreDelegate; // 0x3b0(0x10)
	struct FMulticastInlineDelegate PartyInfoDelegate; // 0x3c0(0x10)
	struct FBravoHotelLobbyMapSetting DefaultMapSetting; // 0x3d0(0x10)
	struct FBravoHotelLobbyMapSetting DevMapSetting; // 0x3e0(0x10)
	struct FBravoHotelLobbyMapSetting MapSetting; // 0x3f0(0x10)
	struct UBravoHotelCustomizedCharacter* CustomizedCharacterComponent; // 0x400(0x08)
	struct UBravoHotelSupplyBox* SupplyBoxComponent; // 0x408(0x08)
	struct UBravoHotelArmory* ArmoryComponent; // 0x410(0x08)
	struct UBravoHotelSeason* SeasonComponent; // 0x418(0x08)
	struct FMulticastInlineDelegate TabDelegate; // 0x420(0x10)
	struct FMulticastInlineDelegate OnPrefetchingProgress; // 0x430(0x10)
	struct UParticleSystem* SupplyBoxSpawnEffect; // 0x440(0x08)
	struct UCameraPostProcessPreset* PP_Preset_PickupOutline; // 0x448(0x08)
	int32_t GamePlayTime_Hours; // 0x450(0x04)
	int32_t PrefetchingProgressPercentage; // 0x454(0x04)
	char pad_458[0x8]; // 0x458(0x08)
	struct TSoftClassPtr<UObject> SoftReplayWidgetClass; // 0x460(0x28)
	struct FTimerHandle ReMatchingByDS_TimerHandle; // 0x488(0x08)
	char pad_490[0x10]; // 0x490(0x10)
	int32_t Gold; // 0x4a0(0x04)
	char pad_4A4[0x4]; // 0x4a4(0x04)
	struct TArray<struct FResponse_Weapon_List_Data> WeaponList; // 0x4a8(0x10)
	struct TArray<struct FResponse_MaterialList_Data> MaterialList; // 0x4b8(0x10)

	void UIButtonOverSoundDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelLobbyWidget_Web.UIButtonOverSoundDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void UIButtonClickSoundDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelLobbyWidget_Web.UIButtonClickSoundDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void ToggleReadyForGame(bool Ready); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.ToggleReadyForGame // (Final|Native|Public) // @ game+0x1f55e70
	void StoreDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelLobbyWidget_Web.StoreDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void SetVisibleSelectGameMode(bool bState); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.SetVisibleSelectGameMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetMatchingSettings(struct FCoh_MatchingSettings& Settings); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.SetMatchingSettings // (Final|Native|Public|HasOutParms) // @ game+0x1f55dc0
	void SendPlayTimeMessage(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.SendPlayTimeMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void RequestWeaponList(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.RequestWeaponList // (Final|Native|Public|BlueprintCallable) // @ game+0x1f55da0
	void RequestMaterialList(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.RequestMaterialList // (Final|Native|Public|BlueprintCallable) // @ game+0x1f55d80
	void RequestCraftWeapon(int32_t CraftingID, int32_t TableBaseIndex, struct FString ItemId); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.RequestCraftWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x1f55c60
	void RequestCleanCampaignJoined(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.RequestCleanCampaignJoined // (Final|Native|Public|BlueprintCallable) // @ game+0x1f55c40
	void PartyLeave(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.PartyLeave // (Final|Native|Public) // @ game+0x1f55c20
	void PartyKickMember(struct FString MemberUID); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.PartyKickMember // (Final|Native|Public) // @ game+0x1f55b80
	void PartyInvite(struct FString UID, struct FString ReceiverName); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.PartyInvite // (Final|Native|Public) // @ game+0x1f55a80
	void PartyInfoDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelLobbyWidget_Web.PartyInfoDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void PartyAccept(struct FString PartyID); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.PartyAccept // (Final|Native|Public) // @ game+0x1f559e0
	void OptionDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelLobbyWidget_Web.OptionDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnVivoxVoiceStateChanged(struct FString VivoxID, bool bIsTalk); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnVivoxVoiceStateChanged // (Final|Native|Private) // @ game+0x1f558f0
	void OnTabDelegate__DelegateSignature(struct FString TabName); // DelegateFunction BravoHotelGame.BravoHotelLobbyWidget_Web.OnTabDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnSelectMaking(int32_t ItemId); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnSelectMaking // (Final|Native|Public|BlueprintCallable) // @ game+0x1f55870
	void OnPreViewVisible(bool bState); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnPreViewVisible // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnPreViewResize(int32_t X, int32_t Y, int32_t W, int32_t H); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnPreViewResize // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnPrefetchingProgressVisible(enum class ESlateVisibility InVisibility); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnPrefetchingProgressVisible // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnPrefetchingProgress__DelegateSignature(struct FString PrefetchingProgressString); // DelegateFunction BravoHotelGame.BravoHotelLobbyWidget_Web.OnPrefetchingProgress__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnLobbyEnterLog(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnLobbyEnterLog // (Final|Native|Private|BlueprintCallable) // @ game+0x1f55850
	void OnInputMoveTab(struct FString KeyName); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnInputMoveTab // (Final|Native|Private|BlueprintCallable) // @ game+0x1f557b0
	void OnInputEvent(struct FCoh_MouseEventData& MouseEventData); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnInputEvent // (Final|Native|Private|HasOutParms) // @ game+0x1f55700
	void OnInputEscape(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnInputEscape // (Final|Native|Private|BlueprintCallable) // @ game+0x1f556e0
	void OnClientGameLog(int32_t ErrorCode, struct FString Desc); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnClientGameLog // (Final|Native|Public) // @ game+0x1f55600
	void OnCleanCampaignJoined(bool bJoined); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnCleanCampaignJoined // (Final|Native|Public) // @ game+0x1f55570
	void OnCleanCampaignCompleteCoh(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnCleanCampaignCompleteCoh // (Final|Native|Public) // @ game+0x1f55550
	void OnChangedArmoryTab(struct FString TabName); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnChangedArmoryTab // (Final|Native|Public) // @ game+0x1f554b0
	void OnBackGroundVisible(bool bState); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.OnBackGroundVisible // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void NotifyCanCraft(bool bTrue); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.NotifyCanCraft // (Final|Native|Public|BlueprintCallable) // @ game+0x1f55420
	void K2_OnReceiveCraftWeapon(struct FResponse_CraftWeapon_Data& CraftWeapon); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.K2_OnReceiveCraftWeapon // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnCleanCampaignJoined(bool bJoined); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.K2_OnCleanCampaignJoined // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnChangedWeaponList(struct TArray<struct FResponse_Weapon_List_Data>& ReceiveWeaponList); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.K2_OnChangedWeaponList // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnChangedMaterialList(struct TArray<struct FResponse_MaterialList_Data>& ReceiveMaterialList); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.K2_OnChangedMaterialList // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnChangedGold(int32_t ReceiveGold); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.K2_OnChangedGold // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnChangedArmoryTab(struct FString TabName); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.K2_OnChangedArmoryTab // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_MoveToCraftWeapon(int32_t CraftingID); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.K2_MoveToCraftWeapon // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_Init(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.K2_Init // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ForceMatching(struct FCoh_ForceMatching& MatchSetting); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.ForceMatching // (Final|Native|Public|HasOutParms) // @ game+0x1f55300
	void ExitDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelLobbyWidget_Web.ExitDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void ChangeVoiceChatState(bool bVoiceChat); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.ChangeVoiceChatState // (Final|Native|Public) // @ game+0x1f55270
	void CancelMatching(); // Function BravoHotelGame.BravoHotelLobbyWidget_Web.CancelMatching // (Final|Native|Public) // @ game+0x1f55250
};

// Class BravoHotelGame.BravoHotelLocalAIController
// Size: 0x460 (Inherited: 0x448)
struct ABravoHotelLocalAIController : AAIController {
	char pad_448[0x18]; // 0x448(0x18)

	void StopPatrol(); // Function BravoHotelGame.BravoHotelLocalAIController.StopPatrol // (Final|Native|Public|BlueprintCallable) // @ game+0x1f56920
	void StartPatrol(struct TArray<struct FVector>& InPatrolPoints, enum class EPatrolDirection InPatrolDirection, bool bMoveToNearestPoint); // Function BravoHotelGame.BravoHotelLocalAIController.StartPatrol // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f567f0
	void OnInputStopSprinting(); // Function BravoHotelGame.BravoHotelLocalAIController.OnInputStopSprinting // (Final|Native|Public|BlueprintCallable) // @ game+0x1f567d0
	void OnInputStartSprinting(); // Function BravoHotelGame.BravoHotelLocalAIController.OnInputStartSprinting // (Final|Native|Public|BlueprintCallable) // @ game+0x1f567b0
	void OnInputStartInteraction(); // Function BravoHotelGame.BravoHotelLocalAIController.OnInputStartInteraction // (Final|Native|Public|BlueprintCallable) // @ game+0x1f56790
	void OnInputStartFire(); // Function BravoHotelGame.BravoHotelLocalAIController.OnInputStartFire // (Final|Native|Public|BlueprintCallable) // @ game+0x1f56770
	void OnInputMoveRight(float AxisValue); // Function BravoHotelGame.BravoHotelLocalAIController.OnInputMoveRight // (Final|Native|Public|BlueprintCallable) // @ game+0x1f566f0
	void OnInputMoveForward(float AxisValue); // Function BravoHotelGame.BravoHotelLocalAIController.OnInputMoveForward // (Final|Native|Public|BlueprintCallable) // @ game+0x1f56670
	void OnInputChangeWeaponWithSlot(int32_t WeaponSlot); // Function BravoHotelGame.BravoHotelLocalAIController.OnInputChangeWeaponWithSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x1f565f0
	void OnAddControllerYawInput(float Val); // Function BravoHotelGame.BravoHotelLocalAIController.OnAddControllerYawInput // (Final|Native|Public|BlueprintCallable) // @ game+0x1f56570
	void OnAddControllerPitchInput(float Val); // Function BravoHotelGame.BravoHotelLocalAIController.OnAddControllerPitchInput // (Final|Native|Public|BlueprintCallable) // @ game+0x1f564f0
	bool IsPatrolling(); // Function BravoHotelGame.BravoHotelLocalAIController.IsPatrolling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f564c0
	struct ABravoHotelPlayerController* GetLocalPlayerController(); // Function BravoHotelGame.BravoHotelLocalAIController.GetLocalPlayerController // (Final|Native|Public|BlueprintCallable) // @ game+0x1f56490
	float GetBlueZoneCircleRadius(); // Function BravoHotelGame.BravoHotelLocalAIController.GetBlueZoneCircleRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f56460
	struct FVector GetBlueZoneCirclePos(); // Function BravoHotelGame.BravoHotelLocalAIController.GetBlueZoneCirclePos // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f56420
};

// Class BravoHotelGame.BravoHotelLocalPlayer
// Size: 0x268 (Inherited: 0x258)
struct UBravoHotelLocalPlayer : ULocalPlayer {
	int32_t UniquePlayerId; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	struct UBravoHotelKillcamPlayback* KillcamPlayback; // 0x260(0x08)
};

// Class BravoHotelGame.BravoHotelLocalSaveBase
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelLocalSaveBase : USaveGame {

	bool Save(); // Function BravoHotelGame.BravoHotelLocalSaveBase.Save // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // @ game+0x1f56dc0
};

// Class BravoHotelGame.BravoHotelLocalSavedSettings
// Size: 0x120 (Inherited: 0x28)
struct UBravoHotelLocalSavedSettings : UBravoHotelLocalSaveBase {
	struct FName UserName; // 0x28(0x08)
	struct TMap<enum class EMouseSensitivityState, int32_t> MouseSensitivityStates; // 0x30(0x50)
	bool bRememberMe; // 0x80(0x01)
	char pad_81[0x7]; // 0x81(0x07)
	struct FBravoHotelMatchingSettings MatchingSettings; // 0x88(0x20)
	struct TMap<enum class EWeaponType, enum class EWeaponFireMode> FireModeSettings; // 0xa8(0x50)
	bool bAutoReload; // 0xf8(0x01)
	char pad_F9[0x3]; // 0xf9(0x03)
	struct FName OpeningMovieName; // 0xfc(0x08)
	bool bFirstRun; // 0x104(0x01)
	char pad_105[0x3]; // 0x105(0x03)
	struct FCoherentSavedSettings CoherentSettings; // 0x108(0x18)

	struct UBravoHotelLocalSavedSettings* Get(); // Function BravoHotelGame.BravoHotelLocalSavedSettings.Get // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f572f0
};

// Class BravoHotelGame.BravoHotelLoginWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelLoginWidget : UUserWidget {

	void TryPlayerInfoHttpService(); // Function BravoHotelGame.BravoHotelLoginWidget.TryPlayerInfoHttpService // (Final|Native|Public|BlueprintCallable) // @ game+0x1f57510
	void LoginRetry(); // Function BravoHotelGame.BravoHotelLoginWidget.LoginRetry // (Final|Native|Public|BlueprintCallable) // @ game+0x1f574f0
};

// Class BravoHotelGame.BravoHotelLogManager
// Size: 0x80 (Inherited: 0x28)
struct UBravoHotelLogManager : UObject {
	char pad_28[0x58]; // 0x28(0x58)
};

// Class BravoHotelGame.BravoHotelMagazineForDrop
// Size: 0x370 (Inherited: 0x320)
struct ABravoHotelMagazineForDrop : AActor {
	struct UStaticMeshComponent* MagazineMeshComponent; // 0x320(0x08)
	char pad_328[0x8]; // 0x328(0x08)
	struct FTransform SpawnedSocketTransform; // 0x330(0x30)
	struct ABravoHotelRangedWeapon* OwnerWeaponRef; // 0x360(0x08)
	char pad_368[0x8]; // 0x368(0x08)

	void OnCompleteAysnLoadItems(struct TSoftObjectPtr<UStaticMesh> StaticMeshPtr); // Function BravoHotelGame.BravoHotelMagazineForDrop.OnCompleteAysnLoadItems // (Final|Native|Protected) // @ game+0x1f5da90
	void InitUsableItem(struct TSoftObjectPtr<UStaticMesh> InStaticMeshPtr, struct FTransform& InSpawnedSocketTransform, struct ABravoHotelRangedWeapon* OwningWeapon); // Function BravoHotelGame.BravoHotelMagazineForDrop.InitUsableItem // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1f5d8a0
};

// Class BravoHotelGame.BravoHotelMainWidget
// Size: 0x450 (Inherited: 0x248)
struct UBravoHotelMainWidget : UUserWidget {
	char pad_248[0x18]; // 0x248(0x18)
	struct FVector WorldCenter; // 0x260(0x0c)
	struct FVector2D WorldSize; // 0x26c(0x08)
	struct FVector2D BaseMapSize; // 0x274(0x08)
	struct FVector2D ParentWidgetSize; // 0x27c(0x08)
	char pad_284[0x4]; // 0x284(0x04)
	struct ABravoHotelCharacter* TargetCharacterRef; // 0x288(0x08)
	struct ABravoHotelPlayerState* TargetPlayerStateRef; // 0x290(0x08)
	struct ABattleRoyaleGameState* BattleRoyaleGameStateRef; // 0x298(0x08)
	struct ABravoHotelPlayerHUD* PlayerHUDRef; // 0x2a0(0x08)
	struct APlayerController* PlayerControllerRef; // 0x2a8(0x08)
	struct TArray<struct ABravoHotelPlayerState*> TargetPawnTeamPlayers; // 0x2b0(0x10)
	char pad_2C0[0xc]; // 0x2c0(0x0c)
	struct FVector2D ViewportSize; // 0x2cc(0x08)
	float ViewportScale; // 0x2d4(0x04)
	struct UUserWidget* TopInfoWidgetClass; // 0x2d8(0x08)
	struct UUserWidget* SightInfoWidgetClass; // 0x2e0(0x08)
	struct TArray<struct UBravoHotelTeamPositionWidget*> TeamPositionWidgetArray; // 0x2e8(0x10)
	struct UUserWidget* TeamPositionWidgetClass; // 0x2f8(0x08)
	bool bWantShowTeamPositionWidget; // 0x300(0x01)
	char pad_301[0x3]; // 0x301(0x03)
	struct FVector2D MinViewportPosition; // 0x304(0x08)
	struct FVector2D MaxViewportPosition; // 0x30c(0x08)
	char pad_314[0x8]; // 0x314(0x08)
	bool RedCircleVisibility; // 0x31c(0x01)
	bool IsMouseCursorWidgetChanged; // 0x31d(0x01)
	char pad_31E[0x2]; // 0x31e(0x02)
	struct FVector2D SkillMapRadarPosition; // 0x320(0x08)
	float SkillMapRadarScaleRate; // 0x328(0x04)
	char pad_32C[0xc]; // 0x32c(0x0c)
	struct UAkAudioEvent* AudioEvent_FindLandingPositionStart; // 0x338(0x08)
	struct UAkAudioEvent* AudioEvent_FindLandingPositionEnd; // 0x340(0x08)
	char pad_348[0x20]; // 0x348(0x20)
	struct UAkAudioEvent* AudioEvent_SearchInstinctStart; // 0x368(0x08)
	struct UAkAudioEvent* AudioEvent_SearchInstinctEnd; // 0x370(0x08)
	float SearchInstinctAlpha; // 0x378(0x04)
	bool bIsSetSearchInstinctWidget; // 0x37c(0x01)
	bool bIsSetVehicleSearchWidget; // 0x37d(0x01)
	char pad_37E[0x2]; // 0x37e(0x02)
	struct TMap<int32_t, float> SpatialSenseUIInfoMap; // 0x380(0x50)
	float CarScanCurrentTime; // 0x3d0(0x04)
	char pad_3D4[0x4]; // 0x3d4(0x04)
	struct TArray<struct FAttackDamageWidgetInfo> AttackDamageInfoList; // 0x3d8(0x10)
	char pad_3E8[0x8]; // 0x3e8(0x08)
	struct UUserWidget* AttackDamageWidgetClass; // 0x3f0(0x08)
	struct UUserWidget* AttackUserWidgetClass; // 0x3f8(0x08)
	struct TArray<struct UUserWidget*> HitWidgetList; // 0x400(0x10)
	struct UBravoHotelTopInfoWidget* TopInfoWidget; // 0x410(0x08)
	struct UBravoHotelSightInfoWidget* SightInfoWidget; // 0x418(0x08)
	struct UBravoHotelAliveInfoWidget* AliveInfoWidget; // 0x420(0x08)
	struct UBravoHotelKillInfoWidget* KillInfoWidget; // 0x428(0x08)
	struct UBravoHotelCompassWidget* CompassWidget; // 0x430(0x08)
	struct UBravoHotelVehicleWidget* VehicleWidget; // 0x438(0x08)
	struct UBravoHotelTeamInfoWidget* TeamInfoWidget; // 0x440(0x08)
	struct UBravoHotelJetpackWidget* JetpackWidget; // 0x448(0x08)

	void UpdateNitroBoomWidget(struct FVector2D TargetPosition); // Function BravoHotelGame.BravoHotelMainWidget.UpdateNitroBoomWidget // (Event|Public|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void UpdateChargeGauge(float MaxChargeValue, float CurrentChargeValue); // Function BravoHotelGame.BravoHotelMainWidget.UpdateChargeGauge // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void TestLog(struct FString LogText); // Function BravoHotelGame.BravoHotelMainWidget.TestLog // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed32b0
	void StopChargeGauge(); // Function BravoHotelGame.BravoHotelMainWidget.StopChargeGauge // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ShowStatupAnim(struct FStatupAnimParameters& StatupParameters); // Function BravoHotelGame.BravoHotelMainWidget.ShowStatupAnim // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetTeamSize(int32_t Size); // Function BravoHotelGame.BravoHotelMainWidget.SetTeamSize // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetSkillMapWidget(bool bWantsToVisible); // Function BravoHotelGame.BravoHotelMainWidget.SetSkillMapWidget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f5f3c0
	void SetMouseCursorWidget(bool bWantsToChange, bool bForce); // Function BravoHotelGame.BravoHotelMainWidget.SetMouseCursorWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f5f2f0
	void ResetMouseCursorWidget(); // Function BravoHotelGame.BravoHotelMainWidget.ResetMouseCursorWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void RemoveChargeGauge(); // Function BravoHotelGame.BravoHotelMainWidget.RemoveChargeGauge // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void RemoveAllTeamPositionWidgets(); // Function BravoHotelGame.BravoHotelMainWidget.RemoveAllTeamPositionWidgets // (Final|Native|Public) // @ game+0x1f5f2d0
	void OnInit(); // Function BravoHotelGame.BravoHotelMainWidget.OnInit // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnDoSkillBySkillMap(); // Function BravoHotelGame.BravoHotelMainWidget.OnDoSkillBySkillMap // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnChangedPlayerInfos(); // Function BravoHotelGame.BravoHotelMainWidget.OnChangedPlayerInfos // (Native|Event|Public|BlueprintEvent) // @ game+0x1f5f2b0
	void OnChangedOptionGraphic(struct TArray<enum class ESettingType>& ChangeTypeList); // Function BravoHotelGame.BravoHotelMainWidget.OnChangedOptionGraphic // (Final|Native|Public|HasOutParms) // @ game+0x1f5f200
	void OnChangedOptionGamePlay(struct TArray<enum class ESettingType>& ChangeTypeList); // Function BravoHotelGame.BravoHotelMainWidget.OnChangedOptionGamePlay // (Final|Native|Public|HasOutParms) // @ game+0x1f5f150
	void OnAllLevelLoadedFirstTime(); // Function BravoHotelGame.BravoHotelMainWidget.OnAllLevelLoadedFirstTime // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_UpdateAllInvalidationbox(); // Function BravoHotelGame.BravoHotelMainWidget.K2_UpdateAllInvalidationbox // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool IsValidCurrentSpatialSense(struct AActor* OwnerPawn, float InLastDuration, float& OutCurrentDuration); // Function BravoHotelGame.BravoHotelMainWidget.IsValidCurrentSpatialSense // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f5f040
	void HideNitroBoomWidget(); // Function BravoHotelGame.BravoHotelMainWidget.HideNitroBoomWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool HasFoundCar(); // Function BravoHotelGame.BravoHotelMainWidget.HasFoundCar // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f5f010
	struct UBravoHotelSightInfoWidget* GetSightInfoWidget(bool bCreateIfNull); // Function BravoHotelGame.BravoHotelMainWidget.GetSightInfoWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f5ef70
	struct ABravoHotelPlayerHUD* GetPlayerHUD(); // Function BravoHotelGame.BravoHotelMainWidget.GetPlayerHUD // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f5ef40
	struct UUserWidget* GetMiniMapWidget(); // Function BravoHotelGame.BravoHotelMainWidget.GetMiniMapWidget // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1f5ef10
	struct UUserWidget* GetBottomInfoWidget(); // Function BravoHotelGame.BravoHotelMainWidget.GetBottomInfoWidget // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure) // @ game+0x1f5eee0
	void EnableMainWidgetInput(bool bTrue); // Function BravoHotelGame.BravoHotelMainWidget.EnableMainWidgetInput // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	struct UBravoHotelTopInfoWidget* CreateTopInfoWidget(); // Function BravoHotelGame.BravoHotelMainWidget.CreateTopInfoWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f5eeb0
	void CreateTeamPositionWidget(); // Function BravoHotelGame.BravoHotelMainWidget.CreateTeamPositionWidget // (Final|Native|Public) // @ game+0x1f5ee90
	struct UBravoHotelSightInfoWidget* CreateSightInfoWidget(); // Function BravoHotelGame.BravoHotelMainWidget.CreateSightInfoWidget // (Final|Native|Public) // @ game+0x1f5ee60
	void CheckVisiblilityPerkDeck_BP(); // Function BravoHotelGame.BravoHotelMainWidget.CheckVisiblilityPerkDeck_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ChangeMouseCursorWidget(); // Function BravoHotelGame.BravoHotelMainWidget.ChangeMouseCursorWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ChangeCoherentSkillMapRate(struct FVector2D TopLeft, struct FVector2D BottomRight, struct FVector2D RadarPosition, float RadarScaleRate); // Function BravoHotelGame.BravoHotelMainWidget.ChangeCoherentSkillMapRate // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f5ed20
	void BPOnViewportSized(); // Function BravoHotelGame.BravoHotelMainWidget.BPOnViewportSized // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelMapCompWidget
// Size: 0x500 (Inherited: 0x248)
struct UBravoHotelMapCompWidget : UUserWidget {
	struct ABattleRoyaleGameState* BattleRoyaleGameState; // 0x248(0x08)
	struct ABravoHotelGameState* BravoHotelGameState; // 0x250(0x08)
	int32_t TeamSize; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)
	bool bForceUpdateAllWidgets; // 0x260(0x01)
	char pad_261[0x7]; // 0x261(0x07)
	struct TArray<struct FMapPlayerInfo> MapPlayerInfos; // 0x268(0x10)
	struct FMapPlayerInfo LocalMapPlayerInfo; // 0x278(0x58)
	struct FPersonalSupplyBoxInfo PersonalSupplyBoxInfo; // 0x2d0(0x10)
	struct FVector WorldCenter; // 0x2e0(0x0c)
	struct FVector2D WorldSize; // 0x2ec(0x08)
	struct FVector2D BaseMapSize; // 0x2f4(0x08)
	struct FVector2D ParentWidgetSize; // 0x2fc(0x08)
	float ScaleFactor; // 0x304(0x04)
	float BaseScaleFactor; // 0x308(0x04)
	float TargetScaleFactor; // 0x30c(0x04)
	struct FVector2D TargetMapPos; // 0x310(0x08)
	struct FVector2D PivotPosOnViewport; // 0x318(0x08)
	bool bNeedToTranslateMapToPlayerPos; // 0x320(0x01)
	char pad_321[0x3]; // 0x321(0x03)
	int32_t GridLevel; // 0x324(0x04)
	int32_t CurrentGridLevel; // 0x328(0x04)
	char pad_32C[0x4]; // 0x32c(0x04)
	struct TArray<float> GridUnits; // 0x330(0x10)
	struct TArray<struct FLinearColor> GridColors; // 0x340(0x10)
	float LineP2CAngle; // 0x350(0x04)
	float LineP2CHeight; // 0x354(0x04)
	struct FVector2D LineP2CPosonMap; // 0x358(0x08)
	struct FMapCompBlueZoneInfo MapCompBlueZoneInfo; // 0x360(0x2c)
	bool IsUsingOuterAreaBlueZone; // 0x38c(0x01)
	bool UsingOuterAreaBlueZoneVisible; // 0x38d(0x01)
	char pad_38E[0x2]; // 0x38e(0x02)
	struct UBravoHotelAircraftRouteWidget* AircraftWidget; // 0x390(0x08)
	char pad_398[0x4]; // 0x398(0x04)
	struct FReplayCircleInfo ReplayCircleInfo; // 0x39c(0x10)
	bool bIsFreeCamVisible; // 0x3ac(0x01)
	char pad_3AD[0x3]; // 0x3ad(0x03)
	struct FVector2D FreeCamPosition; // 0x3b0(0x08)
	float FreeCamAngle; // 0x3b8(0x04)
	char pad_3BC[0x4]; // 0x3bc(0x04)
	struct TMap<int32_t, struct UUserWidget*> MaterialItemList; // 0x3c0(0x50)
	struct TMap<int32_t, struct UUserWidget*> LocalPingList; // 0x410(0x50)
	struct UUserWidget* ExpertWeaponItem; // 0x460(0x08)
	bool bShowWorldMap; // 0x468(0x01)
	char pad_469[0x7]; // 0x469(0x07)
	struct UUserWidget* ParentWidgetRef; // 0x470(0x08)
	struct TArray<struct UBravoHotelWorldMapAreaWidget*> AreaWidgetsRef; // 0x478(0x10)
	struct UBravoHotelMapDrawWidget* UW_MapDrawWidget_Circle; // 0x488(0x08)
	struct UBravoHotelMapDrawWidget* UW_MapDrawWidget_Grid; // 0x490(0x08)
	struct UImage* LinePlayerToCircle; // 0x498(0x08)
	struct UImage* LineRouteDefault; // 0x4a0(0x08)
	struct UImage* LineRouteDotline; // 0x4a8(0x08)
	struct UImage* DescentStartPoint; // 0x4b0(0x08)
	struct UImage* DescentEndPoint; // 0x4b8(0x08)
	struct UImage* CircleMask; // 0x4c0(0x08)
	struct UImage* ReplayCircleMask; // 0x4c8(0x08)
	int32_t MiniMapLevel; // 0x4d0(0x04)
	char pad_4D4[0x4]; // 0x4d4(0x04)
	struct UTexture* DefaultCircleTexture; // 0x4d8(0x08)
	struct UMaterialInstance* CircleMaskMaterial; // 0x4e0(0x08)
	struct UMaterialInstance* ReplayMaskMaterial; // 0x4e8(0x08)
	struct UMaterialInstanceDynamic* CircleMaterialInstance; // 0x4f0(0x08)
	struct UMaterialInstanceDynamic* ReplayMaterialInstance; // 0x4f8(0x08)

	void UpdateSupplyBoxInfo(); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateSupplyBoxInfo // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void UpdateRoutePing(struct UBravoHotelRoutePingWidget* IconWidget, bool bHasRoutePing, struct TArray<struct FVector2D>& Positions, bool bIsUpdate); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateRoutePing // (Final|Native|Public|HasOutParms) // @ game+0x1f62af0
	void UpdateReplayCircleInfos(); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateReplayCircleInfos // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool UpdatePosition_Impl(struct ABravoHotelPlayerState* PlayerState, struct FVector Location, struct FVector2D Position, struct FVector2D& OutPosition); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdatePosition_Impl // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f62980
	void UpdatePlayerMarker(struct UBravoHotelPlayerMarkerWidget* IconWidget, bool bHasMarker, struct FVector2D Position, struct ABravoHotelPlayerState* PlayerState, bool bIsUpdate); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdatePlayerMarker // (Final|Native|Public|HasDefaults) // @ game+0x1f627f0
	void UpdatePlayerIconPosition(struct UBravoHotelPlayerIconWidget* IconWidget, struct FVector2D Position); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdatePlayerIconPosition // (Final|Native|Public|HasDefaults) // @ game+0x1f62660
	void UpdatePlayerIconAngle(struct UBravoHotelPlayerIconWidget* IconWidget, float Angle); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdatePlayerIconAngle // (Final|Native|Public) // @ game+0x1f62720
	void UpdateLocalPlayerIconPosition(struct UBravoHotelPlayerIconWidget* IconWidget, struct FVector2D Position); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateLocalPlayerIconPosition // (Final|Native|Public|HasDefaults) // @ game+0x1f62660
	bool UpdateLinePlayertoCircle_Impl(); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateLinePlayertoCircle_Impl // (Final|Native|Public|BlueprintCallable) // @ game+0x1f62630
	void UpdateFreeCamPosition(); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateFreeCamPosition // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void UpdateFreeCamAngle(); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateFreeCamAngle // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool UpdateDirection_Impl(struct ABravoHotelPlayerState* PlayerState, struct FRotator Rotation, float DirectionAngle, float& OutDirectionAngle); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateDirection_Impl // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f624c0
	void UpdateCircleInfos(); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateCircleInfos // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void UpdateAircraftRoute(); // Function BravoHotelGame.BravoHotelMapCompWidget.UpdateAircraftRoute // (Final|Native|Public) // @ game+0x1f624a0
	void TranslateMaptoPlayerPos_Impl(struct FVector2D Viewport, bool WithoutBoundary); // Function BravoHotelGame.BravoHotelMapCompWidget.TranslateMaptoPlayerPos_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f623e0
	void TranslateMapOnViewport(struct FVector2D DisplacementOnViewport); // Function BravoHotelGame.BravoHotelMapCompWidget.TranslateMapOnViewport // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f62360
	void SetTranslateMapToPlayerPos(bool bSet, bool WithoutBoundary, bool ForceUpdate); // Function BravoHotelGame.BravoHotelMapCompWidget.SetTranslateMapToPlayerPos // (Final|Native|Public|BlueprintCallable) // @ game+0x1f62240
	void SetScaleFactor(float NewScaleFactor, struct FVector2D NewPivotPosOnViewport, bool bApplyImmediately); // Function BravoHotelGame.BravoHotelMapCompWidget.SetScaleFactor // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f62130
	void SetRoutePosition(struct UWidget* RouteWidget, struct FVector2D StartPos, struct FVector2D EndPos, float Angle); // Function BravoHotelGame.BravoHotelMapCompWidget.SetRoutePosition // (Final|Native|Public|HasDefaults) // @ game+0x1f61ff0
	void SetFreeCamEnable(bool bEnable); // Function BravoHotelGame.BravoHotelMapCompWidget.SetFreeCamEnable // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetAircraftVisibility(bool bVisible); // Function BravoHotelGame.BravoHotelMapCompWidget.SetAircraftVisibility // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ScaleMapOnViewport(float NewScaleFactor); // Function BravoHotelGame.BravoHotelMapCompWidget.ScaleMapOnViewport // (Final|Native|Public|BlueprintCallable) // @ game+0x1f61f70
	void ResetPlayers(); // Function BravoHotelGame.BravoHotelMapCompWidget.ResetPlayers // (Final|Native|Public|BlueprintCallable) // @ game+0x1f61f50
	void PreUpdateComponents(); // Function BravoHotelGame.BravoHotelMapCompWidget.PreUpdateComponents // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnViewportSized(struct FVector2D NewPosOnViewport, struct FVector2D NewParentSizeOnViewport); // Function BravoHotelGame.BravoHotelMapCompWidget.OnViewportSized // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f61ea0
	void OnBattleRoyalStateChanged(enum class EBattleRoyaleState PrevState, enum class EBattleRoyaleState CurrentState); // Function BravoHotelGame.BravoHotelMapCompWidget.OnBattleRoyalStateChanged // (Final|Native|Public) // @ game+0x1f61de0
	bool IsSkillMapWidget(); // Function BravoHotelGame.BravoHotelMapCompWidget.IsSkillMapWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61db0
	bool IsRoutePingUpdate(struct ABravoHotelPlayerState* PlayerState, bool HasRoutePing, struct TArray<struct FVector2D> RoutePositions, bool& OutHasRoutePing, struct TArray<struct FVector2D>& OutRoutePositions); // Function BravoHotelGame.BravoHotelMapCompWidget.IsRoutePingUpdate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f61b90
	bool IsMarkerUpdate_Impl(struct ABravoHotelPlayerState* Player, bool HasMarker, struct FVector2D MarkerPosition, struct FVector2D& OutMarkerPosition, bool& OutHasMarker); // Function BravoHotelGame.BravoHotelMapCompWidget.IsMarkerUpdate_Impl // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f619d0
	bool IsInBoundary(struct FVector2D& TargetPosition); // Function BravoHotelGame.BravoHotelMapCompWidget.IsInBoundary // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61930
	bool IsFreeCam(); // Function BravoHotelGame.BravoHotelMapCompWidget.IsFreeCam // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f61900
	void InitializeComponent(struct UUserWidget* InParentWidget, struct FVector2D PositionOnViewPort, struct FVector2D ParentSizeOnViewport, bool& bOutNeedToRetry); // Function BravoHotelGame.BravoHotelMapCompWidget.InitializeComponent // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f617b0
	struct FVector2D GetWorldSizeOnViewport_Impl(); // Function BravoHotelGame.BravoHotelMapCompWidget.GetWorldSizeOnViewport_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61770
	float GetGridUnitOnViewport_Impl(); // Function BravoHotelGame.BravoHotelMapCompWidget.GetGridUnitOnViewport_Impl // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61740
	struct FLinearColor GetGridColor_Impl(); // Function BravoHotelGame.BravoHotelMapCompWidget.GetGridColor_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61700
	struct FVector2D GetCenterPosOnViewport_Impl(); // Function BravoHotelGame.BravoHotelMapCompWidget.GetCenterPosOnViewport_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f616c0
	void ForceUpdateAllWidgets(); // Function BravoHotelGame.BravoHotelMapCompWidget.ForceUpdateAllWidgets // (Final|Native|Public) // @ game+0x1f616a0
	void DoTranslateMapToPlayerPos(); // Function BravoHotelGame.BravoHotelMapCompWidget.DoTranslateMapToPlayerPos // (Final|Native|Public|BlueprintCallable) // @ game+0x1f61680
	void CreateMapPlayerWidget(); // Function BravoHotelGame.BravoHotelMapCompWidget.CreateMapPlayerWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	struct FVector2D ConvertSizeWorldToMap_Impl(struct FVector2D Size); // Function BravoHotelGame.BravoHotelMapCompWidget.ConvertSizeWorldToMap_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f615f0
	struct FVector2D ConvertSizeViewportToMap_Impl(struct FVector2D SizeOnViewport); // Function BravoHotelGame.BravoHotelMapCompWidget.ConvertSizeViewportToMap_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61560
	struct FVector2D ConvertSizeMapToViewport_Impl(struct FVector2D SizeOnMap); // Function BravoHotelGame.BravoHotelMapCompWidget.ConvertSizeMapToViewport_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f614d0
	struct FVector2D ConvertPosWorldtoMap_Impl(struct FVector WorldPos); // Function BravoHotelGame.BravoHotelMapCompWidget.ConvertPosWorldtoMap_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61430
	struct FVector2D ConvertPosViewportToMap_Impl(struct FVector2D PosOnViewport); // Function BravoHotelGame.BravoHotelMapCompWidget.ConvertPosViewportToMap_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f613a0
	struct FVector ConvertPosMaptoWorld_Impl(struct FVector2D PosonMap); // Function BravoHotelGame.BravoHotelMapCompWidget.ConvertPosMaptoWorld_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61300
	float ConvertDistWorldtoMap_Impl(float Distance); // Function BravoHotelGame.BravoHotelMapCompWidget.ConvertDistWorldtoMap_Impl // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61270
	float ConvertDistMapToViewport_Impl(float DistOnMap); // Function BravoHotelGame.BravoHotelMapCompWidget.ConvertDistMapToViewport_Impl // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f611e0
	struct FVector2D CalcPosRelatedMapOnViewport_Impl(struct FVector2D PosOnViewport); // Function BravoHotelGame.BravoHotelMapCompWidget.CalcPosRelatedMapOnViewport_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61150
	struct TArray<struct FVector2D> CalcPointsonCircle_Impl(struct FVector2D Center, float Radius, int32_t SlicedCount); // Function BravoHotelGame.BravoHotelMapCompWidget.CalcPointsonCircle_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f61000
};

// Class BravoHotelGame.BravoHotelMapDrawWidget
// Size: 0x2d0 (Inherited: 0x248)
struct UBravoHotelMapDrawWidget : UUserWidget {
	struct UBravoHotelMapCompWidget* MapCompRef; // 0x248(0x08)
	int32_t CircleClicedCount; // 0x250(0x04)
	struct FLinearColor CurrentCircleColor; // 0x254(0x10)
	struct FLinearColor TargetCircleColor; // 0x264(0x10)
	struct FLinearColor ReplayCircleColor; // 0x274(0x10)
	char pad_284[0x4c]; // 0x284(0x4c)

	void UpdateReplayCircleInfos(); // Function BravoHotelGame.BravoHotelMapDrawWidget.UpdateReplayCircleInfos // (Final|Native|Public|BlueprintCallable) // @ game+0x1f63140
	void UpdateGridInfos(); // Function BravoHotelGame.BravoHotelMapDrawWidget.UpdateGridInfos // (Final|Native|Public|BlueprintCallable) // @ game+0x1f63120
	void UpdateCircleInfos(); // Function BravoHotelGame.BravoHotelMapDrawWidget.UpdateCircleInfos // (Final|Native|Public|BlueprintCallable) // @ game+0x1f63100
	bool DrawGrid(struct FPaintContext& Context); // Function BravoHotelGame.BravoHotelMapDrawWidget.DrawGrid // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f63050
	bool DrawCircle(struct FPaintContext& Context); // Function BravoHotelGame.BravoHotelMapDrawWidget.DrawCircle // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f62fa0
};

// Class BravoHotelGame.BravoHotelMaterialEffectActor
// Size: 0x470 (Inherited: 0x320)
struct ABravoHotelMaterialEffectActor : AActor {
	float DestructTime; // 0x320(0x04)
	char pad_324[0x4]; // 0x324(0x04)
	struct TMap<struct FName, struct FLinearColor> ColorValues; // 0x328(0x50)
	struct TMap<struct FName, float> FloatValues; // 0x378(0x50)
	struct TMap<struct FName, struct UCurveLinearColor*> ColorCurves; // 0x3c8(0x50)
	struct TMap<struct FName, struct UCurveFloat*> FloatCurves; // 0x418(0x50)
	char pad_468[0x8]; // 0x468(0x08)
};

// Class BravoHotelGame.BravoHotelMediaPlayerWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelMediaPlayerWidget : UUserWidget {
	struct FMulticastInlineDelegate DelegateMediaState; // 0x248(0x10)

	void ShowMovie(); // Function BravoHotelGame.BravoHotelMediaPlayerWidget.ShowMovie // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelMeleeWeapon
// Size: 0x1c30 (Inherited: 0x1bd0)
struct ABravoHotelMeleeWeapon : ABravoHotelWeaponBase {
	struct TArray<struct FAnimSlot> MeleeAttack_Stand; // 0x1bd0(0x10)
	struct TArray<struct FAnimSlot> MeleeAttack_Crouch; // 0x1be0(0x10)
	struct FAnimSlot MeleeAttach_Jump; // 0x1bf0(0x10)
	struct UAnimSequence* Locomotion_Stand_Idle_3P; // 0x1c00(0x08)
	struct UAnimSequence* Locomotion_Crouch_Idle_3P; // 0x1c08(0x08)
	struct UAnimSequence* Locomotion_Prone_Idle_3P; // 0x1c10(0x08)
	struct UAnimSequence* Locomotion_Stand_Idle_1P; // 0x1c18(0x08)
	struct UAnimSequence* Locomotion_Crouch_Idle_1P; // 0x1c20(0x08)
	struct UAnimSequence* Locomotion_Prone_Idle_1P; // 0x1c28(0x08)
};

// Class BravoHotelGame.BravoHotelMiniMapWidget
// Size: 0x260 (Inherited: 0x248)
struct UBravoHotelMiniMapWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	struct UTextBlock* RemaingTimeToActivate; // 0x250(0x08)
	char pad_258[0x8]; // 0x258(0x08)

	bool UpdatePlayerIcon_Impl(float DeltaSeconds, float MapWidth, struct UWidget* PlayerIconGroup); // Function BravoHotelGame.BravoHotelMiniMapWidget.UpdatePlayerIcon_Impl // (Final|Native|Public|BlueprintCallable) // @ game+0x1f63d30
	float UpdateOnShrinking_Impl(float DeltaSeconds, float CurPercent, float Speed); // Function BravoHotelGame.BravoHotelMiniMapWidget.UpdateOnShrinking_Impl // (Final|Native|Public|BlueprintCallable) // @ game+0x1f63c20
	void UpdateOnLulled(); // Function BravoHotelGame.BravoHotelMiniMapWidget.UpdateOnLulled // (Final|Native|Public|BlueprintCallable) // @ game+0x1f63c00
	struct FVector2D GetVectorCurrentTo_Impl(struct FVector Position); // Function BravoHotelGame.BravoHotelMiniMapWidget.GetVectorCurrentTo_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f63b60
	struct FVector2D GetTargettoPlayer_Impl(); // Function BravoHotelGame.BravoHotelMiniMapWidget.GetTargettoPlayer_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f63b20
	struct FVector2D GetTargetTo_Impl(struct FVector Position); // Function BravoHotelGame.BravoHotelMiniMapWidget.GetTargetTo_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f63a80
	float CalcLengthOnWave_Impl(float Distance); // Function BravoHotelGame.BravoHotelMiniMapWidget.CalcLengthOnWave_Impl // (Final|Native|Public|BlueprintCallable) // @ game+0x1f639f0
	float CalcDistanceRelatedtoTarget_Impl(struct FVector Vector, float Distance); // Function BravoHotelGame.BravoHotelMiniMapWidget.CalcDistanceRelatedtoTarget_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f63910
};

// Class BravoHotelGame.BravoHotelMK3DReplayController
// Size: 0xab0 (Inherited: 0x930)
struct ABravoHotelMK3DReplayController : AMK3DReplayController {
	char pad_930[0x8]; // 0x930(0x08)
	struct FVector2D MaxViewportSize; // 0x938(0x08)
	bool bIsShowingTimelineWidget; // 0x940(0x01)
	bool bIsShowingPlayerListWidget; // 0x941(0x01)
	bool bIsShowingItemListWidget; // 0x942(0x01)
	char pad_943[0x5]; // 0x943(0x05)
	struct UUserWidget* MainWidgetRef; // 0x948(0x08)
	struct UUserWidget* ReplayMainWidgetRef; // 0x950(0x08)
	float KillMessageAdditionalEffectiveTime; // 0x958(0x04)
	char pad_95C[0x4]; // 0x95c(0x04)
	struct AActor* LastViewTarget; // 0x960(0x08)
	char pad_968[0x8]; // 0x968(0x08)
	struct UUserWidget* GameOverlayWidget; // 0x970(0x08)
	struct UUserWidget* GameSettingWidget; // 0x978(0x08)
	struct UBravoHotelDebugInfo* DebugInfo; // 0x980(0x08)
	struct ABravoHotelReplayZone* ReplayZone; // 0x988(0x08)
	struct AActor* CurrentRecordingPawn; // 0x990(0x08)
	char pad_998[0xd8]; // 0x998(0xd8)
	struct ABravoHotelVehicle* TargetVehicle; // 0xa70(0x08)
	char pad_A78[0x8]; // 0xa78(0x08)
	struct AHUD* K2_AfterKillcamHUD; // 0xa80(0x08)
	struct ABravoHotelPlayerState* RecordingPlayerState; // 0xa88(0x08)
	char pad_A90[0x20]; // 0xa90(0x20)

	void ShowLevelName(); // Function BravoHotelGame.BravoHotelMK3DReplayController.ShowLevelName // (Final|Exec|Native|Public) // @ game+0x1f64d50
	void SetTargetVehicle(struct ABravoHotelVehicle* Vehicle, struct ABravoHotelCharacter* Driver); // Function BravoHotelGame.BravoHotelMK3DReplayController.SetTargetVehicle // (Final|Native|Private) // @ game+0x1f64c90
	void ResetTargetVehicle(); // Function BravoHotelGame.BravoHotelMK3DReplayController.ResetTargetVehicle // (Final|Native|Private) // @ game+0x1f64c70
	void OnViewportSizedBP(); // Function BravoHotelGame.BravoHotelMK3DReplayController.OnViewportSizedBP // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnPauseEvent(bool bPaused); // Function BravoHotelGame.BravoHotelMK3DReplayController.OnPauseEvent // (Final|Native|Public) // @ game+0x1f64be0
	void OnInputWorldMap(); // Function BravoHotelGame.BravoHotelMK3DReplayController.OnInputWorldMap // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnInputReplayTimelineWidget(); // Function BravoHotelGame.BravoHotelMK3DReplayController.OnInputReplayTimelineWidget // (Native|Event|Public|BlueprintEvent) // @ game+0x1f64bc0
	void OnInputPlayerListWidget(); // Function BravoHotelGame.BravoHotelMK3DReplayController.OnInputPlayerListWidget // (Native|Event|Public|BlueprintEvent) // @ game+0x1f64ba0
	void OnInputItemListWidget(); // Function BravoHotelGame.BravoHotelMK3DReplayController.OnInputItemListWidget // (Native|Event|Public|BlueprintEvent) // @ game+0x1eb4e90
	void OnInputCloseUI(); // Function BravoHotelGame.BravoHotelMK3DReplayController.OnInputCloseUI // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnChangeKeyOption(struct TArray<enum class EKeySettingType>& ChangeKeyList); // Function BravoHotelGame.BravoHotelMK3DReplayController.OnChangeKeyOption // (Final|Native|Public|HasOutParms) // @ game+0x1f64af0
	void LoadKeyInput(); // Function BravoHotelGame.BravoHotelMK3DReplayController.LoadKeyInput // (Final|Native|Public) // @ game+0x1f51b60
	void JumpStart(float TimeInSec); // Function BravoHotelGame.BravoHotelMK3DReplayController.JumpStart // (Final|Native|Protected) // @ game+0x1f64a70
	bool IsWithinRecordingPawnDistance(struct FVector& Location); // Function BravoHotelGame.BravoHotelMK3DReplayController.IsWithinRecordingPawnDistance // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f649d0
	bool IsShowingAnyWidget(); // Function BravoHotelGame.BravoHotelMK3DReplayController.IsShowingAnyWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f649a0
	struct ABravoHotelReplayZone* GetReplayZone(); // Function BravoHotelGame.BravoHotelMK3DReplayController.GetReplayZone // (Final|Native|Public|BlueprintCallable) // @ game+0x1f64980
	struct FString GetReplayOwnerNickName(); // Function BravoHotelGame.BravoHotelMK3DReplayController.GetReplayOwnerNickName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f64900
	struct UUserWidget* GetReplayMainWidget(); // Function BravoHotelGame.BravoHotelMK3DReplayController.GetReplayMainWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f648d0
	struct ABravoHotelPlayerState* GetRecordingPlayerState(); // Function BravoHotelGame.BravoHotelMK3DReplayController.GetRecordingPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f648a0
	struct UUserWidget* GetPlayerMainWidget(); // Function BravoHotelGame.BravoHotelMK3DReplayController.GetPlayerMainWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f64870
	bool GetFinishBeginPlay(); // Function BravoHotelGame.BravoHotelMK3DReplayController.GetFinishBeginPlay // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f64850
	struct UHUDInteractionComponent* GetCurrentHUDInteractionComponent(); // Function BravoHotelGame.BravoHotelMK3DReplayController.GetCurrentHUDInteractionComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f64820
	void ChangeCameraTypeByNetGuid(enum class ECameraType CameraType, struct FString TargetNetGUID); // Function BravoHotelGame.BravoHotelMK3DReplayController.ChangeCameraTypeByNetGuid // (Final|Native|Protected) // @ game+0x1f646f0
	void ChangeCameraType(enum class ECameraType CameraType, struct FString TargetPlayerName); // Function BravoHotelGame.BravoHotelMK3DReplayController.ChangeCameraType // (Final|Native|Protected) // @ game+0x1f645c0
};

// Class BravoHotelGame.BravoHotelMK3DSpectatorPawn
// Size: 0x3d0 (Inherited: 0x3b8)
struct ABravoHotelMK3DSpectatorPawn : AMK3DSpectatorPawn {
	struct ABravoHotelMK3DReplayController* ReplayController; // 0x3b8(0x08)
	float DefaultSpeed; // 0x3c0(0x04)
	float CurrentSpeedLevel; // 0x3c4(0x04)
	float MinSpeedLevel; // 0x3c8(0x04)
	float MaxSpeedLevel; // 0x3cc(0x04)

	void SetCameraMaxSpeed(float SpeedLevel); // Function BravoHotelGame.BravoHotelMK3DSpectatorPawn.SetCameraMaxSpeed // (Final|Native|Public|BlueprintCallable) // @ game+0x1f650e0
	void SetCameraCollision(struct FString strCollision); // Function BravoHotelGame.BravoHotelMK3DSpectatorPawn.SetCameraCollision // (Final|Native|Public|BlueprintCallable) // @ game+0x1f64ff0
	void OnChangedCurrentSpeedLevel(); // Function BravoHotelGame.BravoHotelMK3DSpectatorPawn.OnChangedCurrentSpeedLevel // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	float GetCurrentSpeedLevel(); // Function BravoHotelGame.BravoHotelMK3DSpectatorPawn.GetCurrentSpeedLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f64fd0
};

// Class BravoHotelGame.BravoHotelMoveElevator
// Size: 0x330 (Inherited: 0x320)
struct ABravoHotelMoveElevator : AActor {
	char pad_320[0x8]; // 0x320(0x08)
	enum class EMoveElevatorStateType CurrentStateType; // 0x328(0x01)
	char pad_329[0x3]; // 0x329(0x03)
	float CurrentMovingTime; // 0x32c(0x04)

	void OnRep_ChangeElevatorState(); // Function BravoHotelGame.BravoHotelMoveElevator.OnRep_ChangeElevatorState // (Final|Native|Public) // @ game+0x1f65780
	void OnChangeElevatorState(); // Function BravoHotelGame.BravoHotelMoveElevator.OnChangeElevatorState // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void InteractDoor(struct UPrimitiveComponent* ElevatorComponet); // Function BravoHotelGame.BravoHotelMoveElevator.InteractDoor // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void DetachCharacter(struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelMoveElevator.DetachCharacter // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void AttachItem(struct AActor* AttachActor); // Function BravoHotelGame.BravoHotelMoveElevator.AttachItem // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelMutiplayerPhysicsActor
// Size: 0x3b0 (Inherited: 0x320)
struct ABravoHotelMutiplayerPhysicsActor : AActor {
	struct USceneComponent* RootNode; // 0x320(0x08)
	struct APlayerController* SendController; // 0x328(0x08)
	char pad_330[0x40]; // 0x330(0x40)
	struct UStaticMeshComponent* BoxMesh; // 0x370(0x08)
	bool LoopAction; // 0x378(0x01)
	bool StartAction; // 0x379(0x01)
	char pad_37A[0x6]; // 0x37a(0x06)
	struct FTransform RepMoveTransform; // 0x380(0x30)

	void OpRep_StartAction(); // Function BravoHotelGame.BravoHotelMutiplayerPhysicsActor.OpRep_StartAction // (Final|Native|Private) // @ game+0x1f65d00
	void OpRep_RepMoveTransform(); // Function BravoHotelGame.BravoHotelMutiplayerPhysicsActor.OpRep_RepMoveTransform // (Final|Native|Private) // @ game+0x1f65ce0
	void OnWake(struct UPrimitiveComponent* WakingComponent, struct FName BoneName); // Function BravoHotelGame.BravoHotelMutiplayerPhysicsActor.OnWake // (Final|Native|Public) // @ game+0x1f65c20
	void OnSleep(struct UPrimitiveComponent* WakingComponent, struct FName BoneName); // Function BravoHotelGame.BravoHotelMutiplayerPhysicsActor.OnSleep // (Final|Native|Public) // @ game+0x1f65b60
};

// Class BravoHotelGame.BravoHotelMuzzleEffectComponent
// Size: 0x1a8 (Inherited: 0xb0)
struct UBravoHotelMuzzleEffectComponent : UActorComponent {
	struct FName MuzzleAttachPoint; // 0xb0(0x08)
	struct TArray<bool> ChancePool; // 0xb8(0x10)
	int32_t BulletCountToSpawnMultiFireEffect; // 0xc8(0x04)
	int32_t SpawnInterval; // 0xcc(0x04)
	char pad_D0[0x10]; // 0xd0(0x10)
	struct FName MuzzleAttachPoint_1P; // 0xe0(0x08)
	struct FName MuzzleAttachPoint_ADS; // 0xe8(0x08)
	struct TMap<enum class EWeaponAttachmentMuzzleDevice, struct FMuzzleEffect> MuzzleEffects; // 0xf0(0x50)
	struct UParticleSystem* ReadyEffect; // 0x140(0x08)
	struct UParticleSystem* WarmupEffect; // 0x148(0x08)
	struct FName WarmupAlphaParameter; // 0x150(0x08)
	float WarmupAlphaTime; // 0x158(0x04)
	char pad_15C[0x4]; // 0x15c(0x04)
	struct UCurveFloat* WarmupAlphaCurve; // 0x160(0x08)
	struct FTimerHandle TimerHandle_WarmupOff; // 0x168(0x08)
	struct FTimerHandle TimerHandle_WarmupUpdate; // 0x170(0x08)
	enum class EWeaponAttachmentMuzzleDevice CurrentMuzzleType; // 0x178(0x01)
	char pad_179[0x7]; // 0x179(0x07)
	struct UParticleSystemComponent* MuzzleFlashComponent; // 0x180(0x08)
	struct UParticleSystemComponent* MuzzleSmokeComponent; // 0x188(0x08)
	struct UParticleSystemComponent* ReadyEffectComponent; // 0x190(0x08)
	struct UParticleSystemComponent* WarmupEffectComponent; // 0x198(0x08)
	float PrevSpawnTime; // 0x1a0(0x04)
	bool bAttachSpawnedEffect; // 0x1a4(0x01)
	bool bUsePreShootRotationToFlash; // 0x1a5(0x01)
	char pad_1A6[0x2]; // 0x1a6(0x02)

	void TimerFunction_WarmupUpdate(); // Function BravoHotelGame.BravoHotelMuzzleEffectComponent.TimerFunction_WarmupUpdate // (Final|Native|Protected) // @ game+0x1f66230
	void TimerFunction_WarmupOff(); // Function BravoHotelGame.BravoHotelMuzzleEffectComponent.TimerFunction_WarmupOff // (Final|Native|Protected) // @ game+0x1f66210
	struct FName GetMuzzleSpawnSocketName(); // Function BravoHotelGame.BravoHotelMuzzleEffectComponent.GetMuzzleSpawnSocketName // (Final|Native|Private|Const) // @ game+0x1f661e0
};

// Class BravoHotelGame.BravoHotelNetClient
// Size: 0xe8 (Inherited: 0x28)
struct UBravoHotelNetClient : UObject {
	char pad_28[0xc0]; // 0x28(0xc0)

	bool IsSocketAlive(); // Function BravoHotelGame.BravoHotelNetClient.IsSocketAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f664e0
	bool ConnectGameServer(struct FString ip, int32_t& Port); // Function BravoHotelGame.BravoHotelNetClient.ConnectGameServer // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f663e0
};

// Class BravoHotelGame.BravohotelNetSyncComponent
// Size: 0x230 (Inherited: 0x220)
struct UBravohotelNetSyncComponent : USceneComponent {
	bool IsParentsSync; // 0x220(0x01)
	bool IsSimulatePhysics; // 0x221(0x01)
	bool IsCollisionEnabled; // 0x222(0x01)
	bool IsEverTick; // 0x223(0x01)
	char pad_224[0xc]; // 0x224(0x0c)
};

// Class BravoHotelGame.BravoHotelNetworkDelayWidget
// Size: 0x260 (Inherited: 0x248)
struct UBravoHotelNetworkDelayWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	int32_t DefaultTableIndex; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct UTextBlock* T_DelayMessage; // 0x258(0x08)
};

// Class BravoHotelGame.BravoHotelNetworkDelegates
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelNetworkDelegates : UObject {
};

// Class BravoHotelGame.BravoHotelNetworkManager
// Size: 0x4c8 (Inherited: 0x28)
struct UBravoHotelNetworkManager : UObject {
	struct FNetworkSocket NetworkSocket; // 0x28(0x10)
	struct FNetworkWebSocket NetworkWebSocket; // 0x38(0x20)
	struct UBravoHotelHttpClient* HttpService; // 0x58(0x08)
	bool bHttpServiceEnable; // 0x60(0x01)
	char pad_61[0x1b7]; // 0x61(0x1b7)
	struct FBravoHotelUserInfo UserInfo; // 0x218(0x90)
	struct TArray<struct FBravoHotelFriendInfo> FriendList; // 0x2a8(0x10)
	char pad_2B8[0x18]; // 0x2b8(0x18)
	struct FBravoHotelPartyInfo PartyInfo; // 0x2d0(0x28)
	struct FBravoHotelPartyInvitation PartyInvitaion; // 0x2f8(0x30)
	struct FOnlineSubsystemFriends OnlineSubsystemFriends; // 0x328(0x30)
	char pad_358[0x168]; // 0x358(0x168)
	struct UGameInstance* ParentGameInstance; // 0x4c0(0x08)

	bool IsSocketAlive(); // Function BravoHotelGame.BravoHotelNetworkManager.IsSocketAlive // (Final|Native|Public) // @ game+0x1f70060
	bool IsHttpServiceAlive(); // Function BravoHotelGame.BravoHotelNetworkManager.IsHttpServiceAlive // (Final|Native|Public) // @ game+0x1f70030
	bool InitClientHttpService(); // Function BravoHotelGame.BravoHotelNetworkManager.InitClientHttpService // (Final|Native|Public) // @ game+0x1f70000
	void DisconnectSocket(); // Function BravoHotelGame.BravoHotelNetworkManager.DisconnectSocket // (Final|Native|Public) // @ game+0x1f6ffe0
	int32_t ConnectToClientWebSocket(struct FString InSessionID, struct FString InAuthToken, struct FString matchMakingTag); // Function BravoHotelGame.BravoHotelNetworkManager.ConnectToClientWebSocket // (Final|Native|Public) // @ game+0x1f6fe80
	bool ConnectToClientSocket(); // Function BravoHotelGame.BravoHotelNetworkManager.ConnectToClientSocket // (Final|Native|Public) // @ game+0x1ebcdc0
};

// Class BravoHotelGame.BravoHotelNoticeLayer
// Size: 0x40 (Inherited: 0x40)
struct UBravoHotelNoticeLayer : UBravoHotelLayerBase {
};

// Class BravoHotelGame.BravoHotelNotifyWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelNotifyWidget : UUserWidget {
};

// Class BravoHotelGame.BravoHotelObjectSyncMannagerBase
// Size: 0x378 (Inherited: 0x320)
struct ABravoHotelObjectSyncMannagerBase : AActor {
	struct FSyncInfo SyncInfo; // 0x320(0x04)
	char pad_324[0x4]; // 0x324(0x04)
	struct TSet<struct TWeakObjectPtr<struct AActor>> MannagedPool; // 0x328(0x50)
};

// Class BravoHotelGame.BravoHotelOutGameDataManager
// Size: 0x58 (Inherited: 0x28)
struct UBravoHotelOutGameDataManager : UObject {
	char pad_28[0x30]; // 0x28(0x30)
};

// Class BravoHotelGame.BravoHotelOutGameParachuteActor
// Size: 0x320 (Inherited: 0x320)
struct ABravoHotelOutGameParachuteActor : AActor {

	void SetSkinMaterial(struct UMaterialInterface* Material); // Function BravoHotelGame.BravoHotelOutGameParachuteActor.SetSkinMaterial // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelOverlayInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelOverlayInterface : UInterface {
};

// Class BravoHotelGame.BravoHotelPainCausingComponent
// Size: 0xe8 (Inherited: 0xb0)
struct UBravoHotelPainCausingComponent : UActorComponent {
	float DamagePerSec; // 0xb0(0x04)
	char pad_B4[0x4]; // 0xb4(0x04)
	struct UDamageType* DamageType; // 0xb8(0x08)
	float PainInterval; // 0xc0(0x04)
	char bEntryPain : 1; // 0xc4(0x01)
	char pad_C4_1 : 7; // 0xc4(0x01)
	char pad_C5[0x3]; // 0xc5(0x03)
	struct AController* DamageInstigator; // 0xc8(0x08)
	char pad_D0[0x8]; // 0xd0(0x08)
	struct TArray<struct AActor*> DamagedActors; // 0xd8(0x10)

	void UnregisterActorOutOfCircle(struct AActor* Actor); // Function BravoHotelGame.BravoHotelPainCausingComponent.UnregisterActorOutOfCircle // (Final|Native|Public) // @ game+0x1f782a0
	void RegisterActorOutOfCircle(struct AActor* Actor); // Function BravoHotelGame.BravoHotelPainCausingComponent.RegisterActorOutOfCircle // (Final|Native|Public) // @ game+0x1f78220
	bool IsTimerActive(); // Function BravoHotelGame.BravoHotelPainCausingComponent.IsTimerActive // (Final|Native|Protected|Const) // @ game+0x1f781f0
	struct TArray<struct AActor*> GetTargetActors(); // Function BravoHotelGame.BravoHotelPainCausingComponent.GetTargetActors // (Final|Native|Protected|Const) // @ game+0x1f78170
	float GetFinalDamagePerSec(struct ABravoHotelCharacter* InTargetCharacter); // Function BravoHotelGame.BravoHotelPainCausingComponent.GetFinalDamagePerSec // (Final|Native|Protected|Const) // @ game+0x1f780d0
};

// Class BravoHotelGame.BravoHotelParachuteTriggerBox
// Size: 0x340 (Inherited: 0x320)
struct ABravoHotelParachuteTriggerBox : AActor {
	struct UBoxComponent* BoxComponent; // 0x320(0x08)
	struct UArrowComponent* ArrowComponent; // 0x328(0x08)
	bool bLaunch; // 0x330(0x01)
	char pad_331[0x3]; // 0x331(0x03)
	float LaunchForce; // 0x334(0x04)
	float ParachuteDelayTime; // 0x338(0x04)
	float ParachuteDelayTimeByFalling; // 0x33c(0x04)

	struct FVector GetLanuchForce(); // Function BravoHotelGame.BravoHotelParachuteTriggerBox.GetLanuchForce // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f78490
};

// Class BravoHotelGame.BravoHotelPerkComponent
// Size: 0x1e8 (Inherited: 0xb0)
struct UBravoHotelPerkComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct FPerkInfoArray RepPerkInfos; // 0xc0(0x118)
	struct FMulticastInlineDelegate OnPerkInfoChanged; // 0x1d8(0x10)

	void PerkInfoChanged__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelPerkComponent.PerkInfoChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnRep_CurrentPerkInfos(); // Function BravoHotelGame.BravoHotelPerkComponent.OnRep_CurrentPerkInfos // (Final|Native|Protected) // @ game+0x1f7a8a0
};

// Class BravoHotelGame.BravoHotelPerkDeckWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelPerkDeckWidget : UUserWidget {

	void SetPerkInfoImpl(bool bUseLocalPlayerInfo, struct FPerkDeckClassInfo& PerkDeckClassInfo); // Function BravoHotelGame.BravoHotelPerkDeckWidget.SetPerkInfoImpl // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnChangedTeamPlayerClass(); // Function BravoHotelGame.BravoHotelPerkDeckWidget.OnChangedTeamPlayerClass // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnChangedCurrentPerkDeckSelectInfo(); // Function BravoHotelGame.BravoHotelPerkDeckWidget.OnChangedCurrentPerkDeckSelectInfo // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelPersonalSupplyBoxSlotItemWidget
// Size: 0x3e8 (Inherited: 0x248)
struct UBravoHotelPersonalSupplyBoxSlotItemWidget : UUserWidget {
	bool IsWeaponData; // 0x248(0x01)
	bool IsConsumableItemData; // 0x249(0x01)
	char pad_24A[0x6]; // 0x24a(0x06)
	struct FInventoryItemInfo WeaponItemData; // 0x250(0x98)
	struct FSupplyItem ConsumableItemData; // 0x2e8(0x100)

	void SetWeaponInfo(struct FInventoryItemInfo& NewWeaponItemData); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxSlotItemWidget.SetWeaponInfo // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void SetEquipState(bool IsUnEquip); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxSlotItemWidget.SetEquipState // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetConsumableItemInfo(struct FSupplyItem& NewConsumableItemData); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxSlotItemWidget.SetConsumableItemInfo // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelPersonalSupplyBoxWidget
// Size: 0x3f8 (Inherited: 0x248)
struct UBravoHotelPersonalSupplyBoxWidget : UUserWidget {
	struct TArray<struct UBravoHotelPersonalSupplyBoxSlotItemWidget*> HaveWeaponList; // 0x248(0x10)
	struct TArray<struct UBravoHotelPersonalSupplyBoxSlotItemWidget*> ConsumableItemList; // 0x258(0x10)
	enum class EItemSortType CurSortType; // 0x268(0x01)
	char pad_269[0x7]; // 0x269(0x07)
	struct TMap<int32_t, struct FSupplyItem> CurConsumableItemDatas; // 0x270(0x50)
	struct FInventoryItemInfo CurWeapon; // 0x2c0(0x98)
	struct FInventoryItemInfo DefaultWeapon; // 0x358(0x98)
	bool IsFreeSupply; // 0x3f0(0x01)
	bool bIsDefaultWeapon; // 0x3f1(0x01)
	char pad_3F2[0x6]; // 0x3f2(0x06)

	void UpdateWeaponItemEquipState(struct FInventoryItemInfo& WeaponItem, bool IsUnEquip); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.UpdateWeaponItemEquipState // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f7c1a0
	void UpdateWeaponData(struct FInventoryItemInfo& WeaponItem, bool SetEmpty); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.UpdateWeaponData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f7c060
	void UpdatePrice(); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.UpdatePrice // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7c040
	void UpdateConsumableItemEquipState(int32_t SupplyID, bool IsUnEquip); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.UpdateConsumableItemEquipState // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7bf80
	void UpdateConsumableItemData(int32_t SlotIndex, struct FSupplyItem& ConsumableItem, bool SetEmpty); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.UpdateConsumableItemData // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f7be40
	void SortItems(bool ShowAll, struct FString NewSortType); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.SortItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7bd50
	void SetWeaponData(struct FInventoryItemInfo& WeaponItem, bool IsDefaultWeapon); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.SetWeaponData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void SetTotalPrice(int32_t Price); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.SetTotalPrice // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetOwnGold(int32_t OwnGold); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.SetOwnGold // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetFree(bool IsFree, int32_t FreeCount); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.SetFree // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetConsumableItemData(int32_t SlotIndex, struct FSupplyItem& ConsumableItem, bool SetEmpty); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.SetConsumableItemData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void InitSupplyItemList(); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.InitSupplyItemList // (Final|Native|Public) // @ game+0x1f7bd30
	void InitHaveWeaponList(); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.InitHaveWeaponList // (Final|Native|Public) // @ game+0x1f7bd10
	struct UBravoHotelPersonalSupplyBoxSlotItemWidget* CraeteWeaponItemSlots(); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.CraeteWeaponItemSlots // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	struct UBravoHotelPersonalSupplyBoxSlotItemWidget* CraeteConsumableItemSlots(); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.CraeteConsumableItemSlots // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ApplyList(); // Function BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.ApplyList // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7bcf0
};

// Class BravoHotelGame.BravoHotelPhysicalMaterial
// Size: 0x1e8 (Inherited: 0x80)
struct UBravoHotelPhysicalMaterial : UPhysicalMaterial {
	float Friction_OutBlueZone; // 0x80(0x04)
	bool AllowPenetration; // 0x84(0x01)
	bool bAllowPenetrationToThrowWeapon; // 0x85(0x01)
	char pad_86[0x2]; // 0x86(0x02)
	float Toughness; // 0x88(0x04)
	float RefrationOnPenetration; // 0x8c(0x04)
	bool bUseDefaultNoImpactEffect; // 0x90(0x01)
	char pad_91[0x7]; // 0x91(0x07)
	struct UParticleSystem* ImpactEffect; // 0x98(0x08)
	struct TArray<struct UMaterialInterface*> ImpactDecalMaterial; // 0xa0(0x10)
	struct UParticleSystem* ImpactEffect_OutBlueZone; // 0xb0(0x08)
	struct TArray<struct UMaterialInterface*> ImpactDecalMaterial_OutBlueZone; // 0xb8(0x10)
	float ImpactDecalSize; // 0xc8(0x04)
	struct FVector ImpactDecalScale; // 0xcc(0x0c)
	bool PlayFootstepEffectWhenMovementInteractionTriggered; // 0xd8(0x01)
	char pad_D9[0x7]; // 0xd9(0x07)
	struct TMap<struct FName, struct UParticleSystem*> OverrideFootstepEffects; // 0xe0(0x50)
	struct UParticleSystem* FootstepEffect; // 0x130(0x08)
	struct UParticleSystem* FootstepEffect_OutBlueZone; // 0x138(0x08)
	struct TArray<struct UMaterial*> FootstepDecalMaterial; // 0x140(0x10)
	struct TArray<struct UMaterial*> FootstepDecalMaterial_OutBlueZone; // 0x150(0x10)
	struct UParticleSystem* VehicleEffect; // 0x160(0x08)
	struct UParticleSystem* VehicleEffect_OutBlueZone; // 0x168(0x08)
	struct UParticleSystem* VehicleWreckEffect; // 0x170(0x08)
	struct UParticleSystem* VehicleWreckEffect_OutBlueZone; // 0x178(0x08)
	struct UAkAudioEvent* OverlapSound; // 0x180(0x08)
	bool bUseSurfaceAsSnowfield; // 0x188(0x01)
	bool bCanProne; // 0x189(0x01)
	char pad_18A[0x2]; // 0x18a(0x02)
	float SlopeSpeedModifier; // 0x18c(0x04)
	int32_t TerrainType; // 0x190(0x04)
	char pad_194[0x4]; // 0x194(0x04)
	struct TMap<struct UBravoHotelDamageType*, struct UAkAudioEvent*> ImpactAudioEvents; // 0x198(0x50)

	struct FName GetSurfaceName(); // Function BravoHotelGame.BravoHotelPhysicalMaterial.GetSurfaceName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f7c540
	struct UAkAudioEvent* GetImpactAudioEvent(struct UBravoHotelDamageType* ImpactDamageType); // Function BravoHotelGame.BravoHotelPhysicalMaterial.GetImpactAudioEvent // (Final|Native|Public) // @ game+0x1f7c4b0
};

// Class BravoHotelGame.BravoHotelPlayerCameraManager
// Size: 0x2b80 (Inherited: 0x2b40)
struct ABravoHotelPlayerCameraManager : APlayerCameraManager {
	float ServerUpdateCameraInterval; // 0x2b38(0x04)
	char pad_2B44[0x1c]; // 0x2b44(0x1c)
	struct TArray<struct FTimedCameraPostProcessData> TimedCameraPostProcessDatas; // 0x2b60(0x10)
	struct TArray<struct FTimedCameraEffectData> TimedCameraEffectDatas; // 0x2b70(0x10)

	void UpdateTimedCameraPostProcess(struct FTimedCameraPostProcessData& TargetData); // Function BravoHotelGame.BravoHotelPlayerCameraManager.UpdateTimedCameraPostProcess // (Final|Native|Public|HasOutParms) // @ game+0x1f7e6d0
	void UpdateTimedCameraEffect(struct FTimedCameraEffectData& TargetData); // Function BravoHotelGame.BravoHotelPlayerCameraManager.UpdateTimedCameraEffect // (Final|Native|Public|HasOutParms) // @ game+0x1f7e620
	bool UpdateBlendOutTimedCameraPostProcess(struct FTimedCameraPostProcessData& TargetData); // Function BravoHotelGame.BravoHotelPlayerCameraManager.UpdateBlendOutTimedCameraPostProcess // (Final|Native|Public|HasOutParms) // @ game+0x1f7e570
	void DeactivateTimedPostProcess(struct FName& TableRowName); // Function BravoHotelGame.BravoHotelPlayerCameraManager.DeactivateTimedPostProcess // (Final|Native|Public|HasOutParms) // @ game+0x1f7e4e0
	void DeactivateTimedCameraEffect(struct FName& TableRowName); // Function BravoHotelGame.BravoHotelPlayerCameraManager.DeactivateTimedCameraEffect // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f7e450
	void DeactivatePostProcessByInstance(struct UCameraPostProcessPreset* PresetInstance); // Function BravoHotelGame.BravoHotelPlayerCameraManager.DeactivatePostProcessByInstance // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7e3d0
	void DeactivatePostProcess(struct UCameraPostProcessPreset* PresetClass); // Function BravoHotelGame.BravoHotelPlayerCameraManager.DeactivatePostProcess // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7e350
	void DeactivateAllTimedCameraEffect(); // Function BravoHotelGame.BravoHotelPlayerCameraManager.DeactivateAllTimedCameraEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7e330
	void CameraFadeInAndOut(float FadeOutTime, float FadeInTime, struct FLinearColor Color); // Function BravoHotelGame.BravoHotelPlayerCameraManager.CameraFadeInAndOut // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f7e220
	void BlendOutTimedCameraPostProcess(struct FName& TableRowName); // Function BravoHotelGame.BravoHotelPlayerCameraManager.BlendOutTimedCameraPostProcess // (Final|Native|Public|HasOutParms) // @ game+0x1f7e190
	void ActivateTimedPostProcess(struct FName& TableRowName, float Duration, bool bFPPOnly); // Function BravoHotelGame.BravoHotelPlayerCameraManager.ActivateTimedPostProcess // (Final|Native|Public|HasOutParms) // @ game+0x1f7e070
	void ActivateTimedCameraEffect(struct FName& TableRowName, bool bUseDirectParticlePivot, struct FVector DirectParticlePivot); // Function BravoHotelGame.BravoHotelPlayerCameraManager.ActivateTimedCameraEffect // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f7df40
	struct UCameraPostProcessPreset* ActivatePostProcess(struct UCameraPostProcessPreset* PresetClass); // Function BravoHotelGame.BravoHotelPlayerCameraManager.ActivatePostProcess // (Final|Native|Public|BlueprintCallable) // @ game+0x1f7deb0
};

// Class BravoHotelGame.BravoHotelPlayerController
// Size: 0x13e8 (Inherited: 0x6f8)
struct ABravoHotelPlayerController : APlayerController {
	char pad_6F8[0x8]; // 0x6f8(0x08)
	struct UBravoHotelConversationComponent* ConversationComponent; // 0x700(0x08)
	struct UBravoHotelQuestComponent* QuestComponent; // 0x708(0x08)
	char pad_710[0xc40]; // 0x710(0xc40)
	struct ABravoHotelCharacter* SavedCharacterPawn; // 0x1350(0x08)
	struct UCameraShake* OnDamagedCameraShake; // 0xd00(0x08)
	struct UCameraShake* OnDamagedADSCameraShake; // 0xd70(0x08)
	struct UCameraShake* ThrowingWeaponExplosionCameraShake; // 0x1248(0x08)
	struct UCameraShake* RedZoneExplosionCameraShake; // 0xd30(0x08)
	float FragmentCloseExplosionCameraShakeScale; // 0xc1c(0x04)
	float FragmentMidExplosionCameraShakeScale; // 0x1158(0x04)
	float FragmentFarExplosionCameraShakeScale; // 0x122c(0x04)
	float FragmentCloseExplosionDistance; // 0xc18(0x04)
	float FragmentMidExplosionDistance; // 0xe94(0x04)
	float FragmentFarExplosionDistance; // 0xf00(0x04)
	float FragmentChangeStateDelayTime; // 0x1108(0x04)
	float FragmentCloseExplosionSoundDistance; // 0xbc4(0x04)
	float FragmentMidExplosionSoundDistance; // 0x1214(0x04)
	float FragmentFarExplosionSoundDistance; // 0xcf4(0x04)
	float FragmentCloseExplosionSoundTime; // 0x11e0(0x04)
	float FragmentMidExplosionSoundTime; // 0x1090(0x04)
	float FragmentFarExplosionSoundTime; // 0xd28(0x04)
	bool bIsTeamSpectator; // 0xe98(0x01)
	struct AHUD* SpectatorHUDClass; // 0x1208(0x08)
	float LoseWidgetShowDelay; // 0xe90(0x04)
	struct FMatchEndSimpleResult MatchEndSimpleResult; // 0x1258(0xa8)
	enum class ESpectatingMode CurrentSpectatingMode; // 0xe88(0x01)
	struct APawn* LastSpectatorTargetPawn; // 0x10d8(0x08)
	struct TArray<struct APlayerController*> WatchingPCs; // 0x1230(0x10)
	struct TArray<struct FRepRadialDamageInfo> RadialDamageInfos; // 0x1370(0x10)
	struct UUserWidget* ItemRecipeTreeWidgetClass; // 0x1380(0x08)
	struct FMulticastInlineDelegate Delegate_OnFinishMatchEndAnimation; // 0x710(0x10)
	struct ABravoHotelPlayerHUD* SpectatingPlayerHUD; // 0x1250(0x08)
	struct FTimerHandle TimerHandle_SetStateSpectator; // 0x1328(0x08)
	struct UBravoHotelPerkDeckWidget* PerkDeckPopup; // 0xd10(0x08)
	struct FMulticastInlineDelegate OnResetTeamPlayersInfo; // 0x728(0x10)
	bool ResetTeamPlayersInfo; // 0x135d(0x01)
	struct ABravoHotelBlueZone* ClientBlueZone; // 0x1330(0x08)
	struct UCameraPostProcessPreset* PP_BlueZone; // 0x1220(0x08)
	bool bInfiniteAmmo; // 0x135c(0x01)
	struct TArray<struct ABravoHotelPlayerState*> PlayerStateList; // 0xfe8(0x10)
	struct AActor* DeathCamFocus; // 0xea0(0x08)
	float DeathCamTime; // 0xf78(0x04)
	bool bEnableLevelStreamimngDistanceScaleByZ; // 0xf08(0x01)
	bool bUseLevelStreamimngPriorityByZ; // 0x110d(0x01)
	struct TArray<struct FLevelStreamimgPriorityByZ> LevelStreamingPrioritiesByZ; // 0xe48(0x10)
	struct TArray<struct FBravoHotelMovePoint> MovePointList; // 0xea8(0x10)
	struct TArray<struct FBravoHotelMovePoint> TeleportPointList; // 0xdd8(0x10)
	bool bEnableHideGun; // 0x1338(0x01)
	bool bEnableDestroyGun; // 0xc20(0x01)
	bool bHideActorMode; // 0x1140(0x01)
	struct UReplicationPingComponet* PingComponent; // 0xbc8(0x08)
	struct TMap<int32_t, struct FName> UseItemMenuList; // 0xc78(0x50)
	struct TArray<struct FHideObjectInfo> HideObjectStack; // 0xfa0(0x10)
	struct TArray<struct AActor*> AuthorizedRigidBodiesOnClient; // 0xc58(0x10)
	struct AActor* DeathCamClass; // 0xd60(0x08)
	struct AActor* SpawnedWinCam; // 0x1000(0x08)
	struct AActor* SpawnedDeathCam; // 0x1008(0x08)
	struct AActor* SpawnedFieldViewCam; // 0x11f8(0x08)
	struct AActor* SpawnedResusciatedCam; // 0xef8(0x08)
	struct FMulticastInlineDelegate DelegatePayGoldOnChangeDeck; // 0xed8(0x10)
	struct FMulticastInlineDelegate DelegatePayGoldOnSelectDeck; // 0x1060(0x10)
	struct FMulticastInlineDelegate DelegatePayGoldOnChangeDeckList; // 0xec0(0x10)
	struct FMulticastInlineDelegate DelegateChoosePerkDeck; // 0xc08(0x10)
	int32_t ChangeDeckBasePrice; // 0xed0(0x04)
	float ChangeDeckMultiflier; // 0x1078(0x04)
	int32_t MaxChangeDeckCount; // 0x10e0(0x04)
	int32_t SelectDeckPrice; // 0xbc0(0x04)
	int32_t MaxChangeDeckListCount; // 0x10c0(0x04)
	struct FMulticastInlineDelegate DelegateAddLog; // 0x740(0x10)
	uint32_t AccountGold; // 0xd5c(0x04)
	uint32_t PaidAccountGold; // 0xebc(0x04)
	struct UBravoHotelDebugInfo* DebugInfo; // 0x1178(0x08)
	struct FMulticastInlineDelegate DelegateDataEventCharacte; // 0x8d8(0x10)
	struct FMulticastInlineDelegate DelegateDataEventCharacteUidList; // 0x8e8(0x10)
	struct FMulticastInlineDelegate DelegateOnKillOtherPlayer; // 0x8f8(0x10)
	struct FMulticastInlineDelegate DelegateOnKnockDownOtherPlayer; // 0x908(0x10)
	struct FMulticastInlineDelegate DelegateOnWhoKilledMe; // 0x918(0x10)
	struct TSoftClassPtr<UObject> SoftCheatWidgetClass; // 0xfc0(0x28)
	struct UUserWidget* CheatWidget; // 0xef0(0x08)
	float SmartPingMenuDelayTime; // 0x10bc(0x04)
	bool HasSpawnBook; // 0x1141(0x01)
	struct FVector SpawnBookLocation; // 0xd38(0x0c)
	struct TArray<struct FName> NameTooltips; // 0x1080(0x10)
	float AutoNameTooltipDistance; // 0xd68(0x04)
	float AutoNameTooltipSecond; // 0x10e8(0x04)
	struct FTimerHandle TimeHandle_ScreenCapture; // 0x10b0(0x08)
	float RequestResuscitationTimeStamp; // 0x92c(0x04)
	bool bIsResuscitated; // 0x930(0x01)
	struct ABravoHotelCharacter* Resuscitater; // 0x1368(0x08)
	struct ABravoHotelCharacter* TempResuscitater; // 0xf80(0x08)
	struct ABravoHotelCharacter* TempResuscitatedTarget; // 0xc50(0x08)
	struct ABravoHotelPlayerState* CurrentVictimPlayerState; // 0x13e0(0x08)
	struct ABravoHotelPlayerController* SuspectController; // 0xce8(0x08)
	struct TMap<struct FName, struct FMaterialItemList> SpawnedItemList; // 0x1388(0x50)
	float MinMaterialItemSearchDistance; // 0x1110(0x04)
	float MaxMaterialItemSearchDistance; // 0x1360(0x04)
	float RemoveMaterialItemDistance; // 0xe5c(0x04)
	float MaterialItemSearchShowCount; // 0xfb0(0x04)
	float ReSearchWaitingTime; // 0x1100(0x04)
	float MaterialItemPingLifeTime; // 0x1240(0x04)
	bool ImmediatelyRemovePing; // 0x110c(0x01)
	float EquipItemMaterialItemAutorSearchTime; // 0xf20(0x04)
	float LastEquipItemLifeTime; // 0xfb4(0x04)
	bool IgnoreStartStateSearchMaterial; // 0xc30(0x01)
	float SearchDelayTime; // 0x1358(0x04)
	struct FTimerHandle TimeHandle_MaterialSearchDelay; // 0x11d8(0x08)
	struct FTimerHandle TimeHandle_RemoveMaterialPing; // 0xd50(0x08)
	struct FTimerHandle TimeHandle_SearchMaterialPing; // 0xe80(0x08)
	struct FTimerHandle TimeHandle_CheckEquipItemMaterialItemAutorSearch; // 0x1070(0x08)
	struct FTimerHandle TimeHandle_CheckLastEquipItemInit; // 0xbb8(0x08)
	struct FName LastEquipItem; // 0xcdc(0x08)
	struct FSelecteSearchMaterialItemInfo SelectRecipeItem; // 0xcc8(0x10)
	bool bForceCheckSearchMaterialItems; // 0x115c(0x01)
	struct FMulticastInlineDelegate DelegateSelectSearchMaterialItem; // 0x1118(0x10)
	struct FMulticastInlineDelegate DelegateEnableMaterialSearch; // 0x1148(0x10)
	struct FMulticastInlineDelegate DelegateEnableExpertWeaponMaterialSearch; // 0x1160(0x10)
	struct FMulticastInlineDelegate DelegateMaterialSearchNoti; // 0x1130(0x10)
	struct FMulticastInlineDelegate DelegateShowWeightMap; // 0xb80(0x10)
	struct FMulticastInlineDelegate DelegateInventoryState; // 0xb90(0x10)
	struct APawn* PreSpectatorTargetPawn; // 0x1200(0x08)
	struct UUserWidget* NoResponseNetworkClass; // 0xd48(0x08)
	struct TMap<int32_t, struct ABHPersonalSupplyBox*> SpawnedSupplyBoxList; // 0x1010(0x50)
	int32_t SelectedPersonalSupplyBoxOwnerID; // 0x1310(0x04)
	float ShowUseBoostItemMenuDelayTime; // 0xbb0(0x04)
	bool bIgnoreInputCloseUI; // 0xde8(0x01)

	void UpdateRegionPing(); // Function BravoHotelGame.BravoHotelPlayerController.UpdateRegionPing // (Final|Native|Protected) // @ game+0x1f903b0
	void UnEquipItem(struct FName& ItemKey); // Function BravoHotelGame.BravoHotelPlayerController.UnEquipItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f90320
	void UndoHide(); // Function BravoHotelGame.BravoHotelPlayerController.UndoHide // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void TimeOverSearchMaterialItems(); // Function BravoHotelGame.BravoHotelPlayerController.TimeOverSearchMaterialItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1f90300
	int32_t TestCallback(); // Function BravoHotelGame.BravoHotelPlayerController.TestCallback // (Final|Native|Public|BlueprintCallable) // @ game+0x1f902d0
	void SuspiciousUserScreenCapture(); // Function BravoHotelGame.BravoHotelPlayerController.SuspiciousUserScreenCapture // (Final|Native|Private) // @ game+0x1f902b0
	void StartKillcam(); // Function BravoHotelGame.BravoHotelPlayerController.StartKillcam // (Final|Native|Public|BlueprintCallable) // @ game+0x1f90290
	void SpawnFieldViewCam(struct AActor* FieldViewCamClass); // Function BravoHotelGame.BravoHotelPlayerController.SpawnFieldViewCam // (Final|Native|Public|BlueprintCallable) // @ game+0x1f90210
	void SpawnDeathCam(); // Function BravoHotelGame.BravoHotelPlayerController.SpawnDeathCam // (Final|Native|Public) // @ game+0x1f901f0
	void SmartPingReleased_BP(bool bIgnoreMenu); // Function BravoHotelGame.BravoHotelPlayerController.SmartPingReleased_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SmartPingPressed_BP(bool bIgnoreMenu); // Function BravoHotelGame.BravoHotelPlayerController.SmartPingPressed_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SmartPingHotKey_BP(int32_t Index); // Function BravoHotelGame.BravoHotelPlayerController.SmartPingHotKey_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SmartPingFastAgree(); // Function BravoHotelGame.BravoHotelPlayerController.SmartPingFastAgree // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SmartPingConfirmHoldUI_BP(); // Function BravoHotelGame.BravoHotelPlayerController.SmartPingConfirmHoldUI_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SmartPingCancelHoldUI_BP(); // Function BravoHotelGame.BravoHotelPlayerController.SmartPingCancelHoldUI_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SimulateVehicle(struct ABravoHotelVehicle* TmpVehicle, struct FRepVehicleMovement Movement); // Function BravoHotelGame.BravoHotelPlayerController.SimulateVehicle // (Final|Native|Public) // @ game+0x1f900e0
	void ShowWorldTeleportWidget(); // Function BravoHotelGame.BravoHotelPlayerController.ShowWorldTeleportWidget // (Final|Native|Public) // @ game+0x151b910
	void ShowWeightMap(bool IsShow); // Function BravoHotelGame.BravoHotelPlayerController.ShowWeightMap // (Final|Exec|Native|Public) // @ game+0x1f90050
	void ShowVehicleWidget(bool bNewShow, struct UBravoHotelVehicleSeatComponent* NewSeat); // Function BravoHotelGame.BravoHotelPlayerController.ShowVehicleWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8ff90
	void ShowPrePlayer(); // Function BravoHotelGame.BravoHotelPlayerController.ShowPrePlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8ff70
	void ShowNextPlayer(); // Function BravoHotelGame.BravoHotelPlayerController.ShowNextPlayer // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8ff50
	void ShowMatchEndSimpleResult(); // Function BravoHotelGame.BravoHotelPlayerController.ShowMatchEndSimpleResult // (Final|Native|Public) // @ game+0x1f8ff30
	void ShowMatchEndFinalResult(); // Function BravoHotelGame.BravoHotelPlayerController.ShowMatchEndFinalResult // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8ff10
	void ShowMatchEndAnimation(); // Function BravoHotelGame.BravoHotelPlayerController.ShowMatchEndAnimation // (Final|Native|Public) // @ game+0x1f8fef0
	void ShowLevelName(); // Function BravoHotelGame.BravoHotelPlayerController.ShowLevelName // (Final|Exec|Native|Public) // @ game+0x1f8fed0
	void ShowCloudEffect(bool IsShow, bool IsDestory); // Function BravoHotelGame.BravoHotelPlayerController.ShowCloudEffect // (Final|Native|Private|BlueprintCallable) // @ game+0x1f8fe00
	void SetVoiceTalkState(bool bSpeaking); // Function BravoHotelGame.BravoHotelPlayerController.SetVoiceTalkState // (Final|Native|Public) // @ game+0x1f8fd70
	void SetUseItemSelectMenu(bool bIsShow); // Function BravoHotelGame.BravoHotelPlayerController.SetUseItemSelectMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetThrowWeaponMenu(bool bIsShow); // Function BravoHotelGame.BravoHotelPlayerController.SetThrowWeaponMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetTeleportWidgetSaveScrollOffset(float NewOffset); // Function BravoHotelGame.BravoHotelPlayerController.SetTeleportWidgetSaveScrollOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8fcf0
	void SetTeamMemberInfoWidget(bool bShow, int32_t TeamIndex, struct FVector2D ScreenPosition, bool bNetCullDistance); // Function BravoHotelGame.BravoHotelPlayerController.SetTeamMemberInfoWidget // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetStateSpectator(bool bInIsTeamSpectator, enum class ESpectatingMode SpectatingMode); // Function BravoHotelGame.BravoHotelPlayerController.SetStateSpectator // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8fc30
	void SetPerkDeckPopup(struct UBravoHotelPerkDeckWidget* NewPerkDeckPopup); // Function BravoHotelGame.BravoHotelPlayerController.SetPerkDeckPopup // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8fbb0
	void SetInputModeWithOverayWidget(bool bUI); // Function BravoHotelGame.BravoHotelPlayerController.SetInputModeWithOverayWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetInputLock(bool IsLock); // Function BravoHotelGame.BravoHotelPlayerController.SetInputLock // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8fb20
	void SetIgnoreInputCloseUI(bool bIsLock); // Function BravoHotelGame.BravoHotelPlayerController.SetIgnoreInputCloseUI // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8faa0
	void SetHideHUDbySequence(bool Hide); // Function BravoHotelGame.BravoHotelPlayerController.SetHideHUDbySequence // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8fa10
	void SetBoostItemSelectMenu(bool bIsShow); // Function BravoHotelGame.BravoHotelPlayerController.SetBoostItemSelectMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetAccountGold(uint32_t NewGold); // Function BravoHotelGame.BravoHotelPlayerController.SetAccountGold // (Final|Native|Public) // @ game+0x1f8c040
	void ServerWeaponADSAOSAudio(struct UAkAudioEvent* Audio); // Function BravoHotelGame.BravoHotelPlayerController.ServerWeaponADSAOSAudio // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f950
	void ServerVoiceTalkState(bool bStart, bool bTeamChat); // Function BravoHotelGame.BravoHotelPlayerController.ServerVoiceTalkState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f850
	void ServerUpdateWCLevelsVisibility(struct TArray<struct FRepWCLevelVisibilityInfo> LevelVisibilities); // Function BravoHotelGame.BravoHotelPlayerController.ServerUpdateWCLevelsVisibility // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1f8f790
	void ServerThowingWeaponSetInWater(struct ABravoHotelProjectileGrenade* ProjectileGrenade, bool bSetInWater); // Function BravoHotelGame.BravoHotelPlayerController.ServerThowingWeaponSetInWater // (Net|Native|Event|Public|NetServer|NetValidate) // @ game+0x1f8f690
	void ServerTemporaryLogOut(); // Function BravoHotelGame.BravoHotelPlayerController.ServerTemporaryLogOut // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8f640
	void ServerTemporaryLogIn(); // Function BravoHotelGame.BravoHotelPlayerController.ServerTemporaryLogIn // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8f5f0
	void ServerTargetPawnSpectater(struct APawn* TargetPawn); // Function BravoHotelGame.BravoHotelPlayerController.ServerTargetPawnSpectater // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f530
	void ServerStartRocketLaunch(); // Function BravoHotelGame.BravoHotelPlayerController.ServerStartRocketLaunch // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f4e0
	void ServerStartMatch(); // Function BravoHotelGame.BravoHotelPlayerController.ServerStartMatch // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f490
	void ServerSpectateEnd(); // Function BravoHotelGame.BravoHotelPlayerController.ServerSpectateEnd // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f440
	void ServerSpawnSpectator(enum class ESpectatingMode SpectatingMode); // Function BravoHotelGame.BravoHotelPlayerController.ServerSpawnSpectator // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f390
	void ServerSimulateVehicle(struct ABravoHotelVehicle* TmpVehicle, struct FRepVehicleMovement Movement); // Function BravoHotelGame.BravoHotelPlayerController.ServerSimulateVehicle // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f240
	void ServerSetSpectatingMode(enum class ESpectatingMode NewSpectatingMode); // Function BravoHotelGame.BravoHotelPlayerController.ServerSetSpectatingMode // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f190
	void ServerSetGoldOnCheat(uint32_t Amount); // Function BravoHotelGame.BravoHotelPlayerController.ServerSetGoldOnCheat // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8f0d0
	void ServerSetCustomMatch(struct FBravoHotelBlueZoneInfo BlueZoneInfo); // Function BravoHotelGame.BravoHotelPlayerController.ServerSetCustomMatch // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8ef30
	void ServerSetAutoBotState(char State); // Function BravoHotelGame.BravoHotelPlayerController.ServerSetAutoBotState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1f8eeb0
	void ServerSelectNextBluZone(); // Function BravoHotelGame.BravoHotelPlayerController.ServerSelectNextBluZone // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8ee60
	void ServerSelectBluZone(int32_t Index); // Function BravoHotelGame.BravoHotelPlayerController.ServerSelectBluZone // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8eda0
	void ServerSaveCharacterPawn(struct ABravoHotelCharacter* NewPawn); // Function BravoHotelGame.BravoHotelPlayerController.ServerSaveCharacterPawn // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8ece0
	void ServerRequstLastSpectatorTargetPawn(); // Function BravoHotelGame.BravoHotelPlayerController.ServerRequstLastSpectatorTargetPawn // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8ec90
	void ServerRequestVictimAndSuspect(struct ABravoHotelPlayerState* InReporterPlayerState, struct APawn* InSpectator); // Function BravoHotelGame.BravoHotelPlayerController.ServerRequestVictimAndSuspect // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8eb90
	void ServerRequestResuscitation(); // Function BravoHotelGame.BravoHotelPlayerController.ServerRequestResuscitation // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8eb40
	void ServerRequestPlayerInfoToGame(struct FString GameServerUID); // Function BravoHotelGame.BravoHotelPlayerController.ServerRequestPlayerInfoToGame // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8ea70
	void ServerRequestLogout(bool isLogout); // Function BravoHotelGame.BravoHotelPlayerController.ServerRequestLogout // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8e9b0
	void ServerRequestCharacterDataUidList(); // Function BravoHotelGame.BravoHotelPlayerController.ServerRequestCharacterDataUidList // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e960
	void ServerRequestCharacterData(struct FString CharacterIndex); // Function BravoHotelGame.BravoHotelPlayerController.ServerRequestCharacterData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e890
	void ServerRemoveTargetSpectater(); // Function BravoHotelGame.BravoHotelPlayerController.ServerRemoveTargetSpectater // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e840
	void ServerRegionPing(int32_t Ping); // Function BravoHotelGame.BravoHotelPlayerController.ServerRegionPing // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e780
	void ServerReduceCharacterSpeedInGrenadeExplosionRange(); // Function BravoHotelGame.BravoHotelPlayerController.ServerReduceCharacterSpeedInGrenadeExplosionRange // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e730
	void ServerReceiveAutoBotInfo(); // Function BravoHotelGame.BravoHotelPlayerController.ServerReceiveAutoBotInfo // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1f64bc0
	void ServerPreChangeCQRKey(); // Function BravoHotelGame.BravoHotelPlayerController.ServerPreChangeCQRKey // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8e6e0
	void ServerPossess(struct APawn* NewPawn); // Function BravoHotelGame.BravoHotelPlayerController.ServerPossess // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e620
	void ServerPlayNoAmmoSound(); // Function BravoHotelGame.BravoHotelPlayerController.ServerPlayNoAmmoSound // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e5d0
	void ServerPayGoldOnSelectDeck(); // Function BravoHotelGame.BravoHotelPlayerController.ServerPayGoldOnSelectDeck // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8e580
	void ServerPayGoldOnChangeDeckList(); // Function BravoHotelGame.BravoHotelPlayerController.ServerPayGoldOnChangeDeckList // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8e530
	void ServerPayGoldOnChangeDeck(); // Function BravoHotelGame.BravoHotelPlayerController.ServerPayGoldOnChangeDeck // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8e4e0
	void ServerOnOverlapVehicleActivatingBox(struct ABravoHotelVehicleSpawner* Spawner); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnOverlapVehicleActivatingBox // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e420
	void ServerOnOverlapItemSpawnBox(struct ABravoHotelBuilding* Building, float ClientWorldTime, enum class EItemSpawnPriorityType ItemSpawnPriorityType); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnOverlapItemSpawnBox // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e2f0
	void ServerOnOverlapEndInPushBox(struct ABravoHotelDoor* Door); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnOverlapEndInPushBox // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e230
	void ServerOnOverlapBeginInPushBox(struct ABravoHotelDoor* Door); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnOverlapBeginInPushBox // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e170
	void ServerOnExplosionCameraShake(struct UCameraShake* CameraShake, float Scale); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnExplosionCameraShake // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8e070
	void ServerOnEscapeFromVehicle(struct ABravoHotelVehicle* TargetVehicle); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnEscapeFromVehicle // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8dfb0
	void ServerOnClientTakeRadialDamage(struct FRepRadialDamageInfo DamageInfos); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnClientTakeRadialDamage // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8ded0
	void ServerOnClientTakePointDamage(struct FRepPointDamageInfo DamageInfo); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnClientTakePointDamage // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8dde0
	void ServerOnClientEscapeInFlames(struct ABravoHotelCharacter* DamageCharacter, struct FMolotovFlameDotDamageInfo FlameDamageInfo); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnClientEscapeInFlames // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8dcc0
	void ServerOnClientDamageInFlames(struct ABravoHotelCharacter* DamageCharacter, struct FMolotovFlameDotDamageInfo FlameDamageInfo); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnClientDamageInFlames // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8dba0
	void ServerOnClientAddImpluse(struct UPrimitiveComponent* ImpulseComponent, struct FVector ImpactVelocity, struct FName BoneName); // Function BravoHotelGame.BravoHotelPlayerController.ServerOnClientAddImpluse // (Net|Native|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1f8da40
	void ServerNotifyUserKicked(); // Function BravoHotelGame.BravoHotelPlayerController.ServerNotifyUserKicked // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x1f8d9f0
	void ServerNextTargetSpectater(bool IsNext, int32_t DiedUID); // Function BravoHotelGame.BravoHotelPlayerController.ServerNextTargetSpectater // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d8f0
	void ServerNextChangeCQRKey(); // Function BravoHotelGame.BravoHotelPlayerController.ServerNextChangeCQRKey // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8d8a0
	void ServerMoveToPhase(int32_t Phase); // Function BravoHotelGame.BravoHotelPlayerController.ServerMoveToPhase // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d7e0
	void ServerLeaveGame(); // Function BravoHotelGame.BravoHotelPlayerController.ServerLeaveGame // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8d790
	void ServerKnockbackCharacter(struct ABravoHotelCharacter* TargetCharacter, struct FVector_NetQuantize TargetImpulse, bool bClearAccumulatedForces); // Function BravoHotelGame.BravoHotelPlayerController.ServerKnockbackCharacter // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d650
	void ServerIpAddress(struct FString InIpAddress); // Function BravoHotelGame.BravoHotelPlayerController.ServerIpAddress // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d580
	void ServerInBoundLevelsAreLoaded(); // Function BravoHotelGame.BravoHotelPlayerController.ServerInBoundLevelsAreLoaded // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1f8d560
	void ServerGainGoldOnCheat(uint32_t Amount); // Function BravoHotelGame.BravoHotelPlayerController.ServerGainGoldOnCheat // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d4a0
	void ServerForwardCheatCommand(struct FString CheatCommand); // Function BravoHotelGame.BravoHotelPlayerController.ServerForwardCheatCommand // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d3d0
	void ServerForceItemSpawn(); // Function BravoHotelGame.BravoHotelPlayerController.ServerForceItemSpawn // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d380
	void ServerEndSpectatedAndReturnPlay(); // Function BravoHotelGame.BravoHotelPlayerController.ServerEndSpectatedAndReturnPlay // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d330
	void ServerDoTargetResuscitater(); // Function BravoHotelGame.BravoHotelPlayerController.ServerDoTargetResuscitater // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d2e0
	void ServerDescentForTest(float SpawnHeight); // Function BravoHotelGame.BravoHotelPlayerController.ServerDescentForTest // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8d230
	void ServerDescent(); // Function BravoHotelGame.BravoHotelPlayerController.ServerDescent // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8d1e0
	void ServerCheckActorsInWorldBox(); // Function BravoHotelGame.BravoHotelPlayerController.ServerCheckActorsInWorldBox // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8d190
	void ServerCharacterTeleportRaycat(struct FVector Position, bool Force); // Function BravoHotelGame.BravoHotelPlayerController.ServerCharacterTeleportRaycat // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|BlueprintCallable|NetValidate) // @ game+0x1f8d070
	void ServerCharacterTeleportGoCheat(struct FVector Position, struct FRotator Rotation); // Function BravoHotelGame.BravoHotelPlayerController.ServerCharacterTeleportGoCheat // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults|NetValidate) // @ game+0x1f8cf80
	void ServerCharacterTeleport(struct FVector Position); // Function BravoHotelGame.BravoHotelPlayerController.ServerCharacterTeleport // (Net|NetReliableNative|Event|Protected|NetServer|HasDefaults|NetValidate) // @ game+0x1f8ceb0
	void ServerChangeUltimateLevel(int32_t Level); // Function BravoHotelGame.BravoHotelPlayerController.ServerChangeUltimateLevel // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8cdf0
	void ServerChangeSurvivalCirclePhase(int32_t PrevPhase, int32_t CurrentPhase); // Function BravoHotelGame.BravoHotelPlayerController.ServerChangeSurvivalCirclePhase // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8ccf0
	void ServerChangeSupplyItems(int32_t WeaponId, struct FString WeaponUID, struct TArray<struct FEquipmentInfo> EquipSupplyItems); // Function BravoHotelGame.BravoHotelPlayerController.ServerChangeSupplyItems // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8cb80
	void ServerChangeRandomPlayZone(); // Function BravoHotelGame.BravoHotelPlayerController.ServerChangeRandomPlayZone // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8cb30
	void ServerChangePCType(int32_t PCTypeID); // Function BravoHotelGame.BravoHotelPlayerController.ServerChangePCType // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1f8ca70
	void ServerAutoBotSpectate(int32_t ID); // Function BravoHotelGame.BravoHotelPlayerController.ServerAutoBotSpectate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1f8c9e0
	void ServerAutoBotEnterGame(); // Function BravoHotelGame.BravoHotelPlayerController.ServerAutoBotEnterGame // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1f8c9c0
	void ServerAutoBotConnectionTimeOut(); // Function BravoHotelGame.BravoHotelPlayerController.ServerAutoBotConnectionTimeOut // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1f8c9a0
	void ServerAutoBotChangeSpectate(); // Function BravoHotelGame.BravoHotelPlayerController.ServerAutoBotChangeSpectate // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1f8c980
	void ServerAllAutoBotState(); // Function BravoHotelGame.BravoHotelPlayerController.ServerAllAutoBotState // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x1eb4e90
	void ServerAIExitForceField(struct ABravoHotelCharacter* AICharacter); // Function BravoHotelGame.BravoHotelPlayerController.ServerAIExitForceField // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8c8c0
	void ServerAIEnterForceField(struct ABravoHotelCharacter* AICharacter); // Function BravoHotelGame.BravoHotelPlayerController.ServerAIEnterForceField // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f8c800
	void SendSuspiciousUserReport(); // Function BravoHotelGame.BravoHotelPlayerController.SendSuspiciousUserReport // (Final|Native|Private) // @ game+0x1f8c7e0
	void SendScreenCaptures(); // Function BravoHotelGame.BravoHotelPlayerController.SendScreenCaptures // (Final|Native|Private) // @ game+0x1f8c7c0
	void SendReplayFile(); // Function BravoHotelGame.BravoHotelPlayerController.SendReplayFile // (Final|Native|Private) // @ game+0x1f8c7a0
	void SearchMaterialItems(); // Function BravoHotelGame.BravoHotelPlayerController.SearchMaterialItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8c780
	void Response_PayGold(bool bSuccess, int32_t Amount, int32_t ActionCode); // Function BravoHotelGame.BravoHotelPlayerController.Response_PayGold // (Final|Native|Public) // @ game+0x1f8c680
	void Response_GainGoldOnCheat(bool bSuccess, int32_t Amount); // Function BravoHotelGame.BravoHotelPlayerController.Response_GainGoldOnCheat // (Final|Native|Public) // @ game+0x1f8c5c0
	void Respawn(); // Function BravoHotelGame.BravoHotelPlayerController.Respawn // (Native|Event|Public|BlueprintEvent) // @ game+0x1f8c5a0
	void ResetTeamPlayersInfo__DelegateSignature(int32_t TeamSize); // DelegateFunction BravoHotelGame.BravoHotelPlayerController.ResetTeamPlayersInfo__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void ResetSmartPing(); // Function BravoHotelGame.BravoHotelPlayerController.ResetSmartPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8c580
	void ResetRequestResuscitation(); // Function BravoHotelGame.BravoHotelPlayerController.ResetRequestResuscitation // (Final|Native|Public) // @ game+0x1f8c560
	void ResetHide(); // Function BravoHotelGame.BravoHotelPlayerController.ResetHide // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void RemoveSpawnBookPing(); // Function BravoHotelGame.BravoHotelPlayerController.RemoveSpawnBookPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8c540
	void RemoveAllPings(); // Function BravoHotelGame.BravoHotelPlayerController.RemoveAllPings // (Final|Native|Public) // @ game+0x1f8c520
	void RefreshTeamMemberInfo(); // Function BravoHotelGame.BravoHotelPlayerController.RefreshTeamMemberInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8c500
	void OpenPerkDeckPopup(); // Function BravoHotelGame.BravoHotelPlayerController.OpenPerkDeckPopup // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OpenBlackMarket(); // Function BravoHotelGame.BravoHotelPlayerController.OpenBlackMarket // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnWhoKilledMeDelegate__DelegateSignature(struct FMatchEndSimpleResult& SimpleResult); // DelegateFunction BravoHotelGame.BravoHotelPlayerController.OnWhoKilledMeDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void OnVivoxVoiceStateChanged(struct FString VivoxID, bool bIsTalk); // Function BravoHotelGame.BravoHotelPlayerController.OnVivoxVoiceStateChanged // (Final|Native|Public) // @ game+0x1f8c410
	void OnVivoxChannelStateChanged(bool bIsLeft); // Function BravoHotelGame.BravoHotelPlayerController.OnVivoxChannelStateChanged // (Final|Native|Public) // @ game+0x1f8c380
	void OnViewPointExitedBlueZone(); // Function BravoHotelGame.BravoHotelPlayerController.OnViewPointExitedBlueZone // (Final|Native|Protected) // @ game+0x1f8c360
	void OnViewPointEnteredBlueZone(); // Function BravoHotelGame.BravoHotelPlayerController.OnViewPointEnteredBlueZone // (Final|Native|Protected) // @ game+0x1f8c340
	void OnStartRocketLaunch(); // Function BravoHotelGame.BravoHotelPlayerController.OnStartRocketLaunch // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8c320
	void OnRep_Resuscitater(); // Function BravoHotelGame.BravoHotelPlayerController.OnRep_Resuscitater // (Final|Native|Public) // @ game+0x1f8c300
	void OnRep_LastSpectatorTargetPawn(); // Function BravoHotelGame.BravoHotelPlayerController.OnRep_LastSpectatorTargetPawn // (Final|Native|Public) // @ game+0x1f8c2e0
	void OnRep_AccountGold(); // Function BravoHotelGame.BravoHotelPlayerController.OnRep_AccountGold // (Final|Native|Public) // @ game+0x1f8c2c0
	void OnMasterVolumeUp(); // Function BravoHotelGame.BravoHotelPlayerController.OnMasterVolumeUp // (Final|Native|Public) // @ game+0x1f51c70
	void OnMasterVolumeToggle(); // Function BravoHotelGame.BravoHotelPlayerController.OnMasterVolumeToggle // (Final|Native|Public) // @ game+0x1f51c50
	void OnMasterVolumeDown(); // Function BravoHotelGame.BravoHotelPlayerController.OnMasterVolumeDown // (Final|Native|Public) // @ game+0x1f51c30
	void OnInputWorldMap(); // Function BravoHotelGame.BravoHotelPlayerController.OnInputWorldMap // (Final|Native|Public) // @ game+0x1f8c2a0
	void OnInputStartMatch(); // Function BravoHotelGame.BravoHotelPlayerController.OnInputStartMatch // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void OnInputInventory(); // Function BravoHotelGame.BravoHotelPlayerController.OnInputInventory // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f8c280
	void OnInputCheckActors(); // Function BravoHotelGame.BravoHotelPlayerController.OnInputCheckActors // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8c260
	void OnInOuterAreaState(bool IsInOuterArea); // Function BravoHotelGame.BravoHotelPlayerController.OnInOuterAreaState // (Final|Native|Public) // @ game+0x124d5e0
	void OnFinishMatchEndAnimation__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelPlayerController.OnFinishMatchEndAnimation__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnChangeTeamPlayers(); // Function BravoHotelGame.BravoHotelPlayerController.OnChangeTeamPlayers // (Final|Native|Public) // @ game+0x1f8c1e0
	void OnChangeOption(struct TArray<enum class ESettingType>& ChangeTypeList); // Function BravoHotelGame.BravoHotelPlayerController.OnChangeOption // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f8c130
	void OnChangeKeyOption(struct TArray<enum class EKeySettingType>& ChangeKeyList); // Function BravoHotelGame.BravoHotelPlayerController.OnChangeKeyOption // (Final|Native|Public|HasOutParms) // @ game+0x1f51b80
	void OnChangedTeamPlayerClass(); // Function BravoHotelGame.BravoHotelPlayerController.OnChangedTeamPlayerClass // (Final|Native|Public) // @ game+0x1f8c240
	void OnChangedState(); // Function BravoHotelGame.BravoHotelPlayerController.OnChangedState // (Final|Native|Private) // @ game+0x1f8c220
	void OnChangedCurrentPerkDeckSelectInfo(); // Function BravoHotelGame.BravoHotelPlayerController.OnChangedCurrentPerkDeckSelectInfo // (Final|Native|Public) // @ game+0x1f8c200
	void OnChangeCurrentPlayerCount(); // Function BravoHotelGame.BravoHotelPlayerController.OnChangeCurrentPlayerCount // (Final|Native|Public) // @ game+0x1f8c110
	void NotifyOperationMessage(struct FText& NotifyText); // Function BravoHotelGame.BravoHotelPlayerController.NotifyOperationMessage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void MulticastReduceCharacterSpeedInGrenadeExplosionRange(); // Function BravoHotelGame.BravoHotelPlayerController.MulticastReduceCharacterSpeedInGrenadeExplosionRange // (Net|Native|Event|NetMulticast|Public|NetValidate) // @ game+0x1f8c0c0
	void LoadKeyInput(); // Function BravoHotelGame.BravoHotelPlayerController.LoadKeyInput // (Final|Native|Public) // @ game+0x1f51b60
	void LoadInventoryData(); // Function BravoHotelGame.BravoHotelPlayerController.LoadInventoryData // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void K2_SetAccountGold(int32_t NewGold); // Function BravoHotelGame.BravoHotelPlayerController.K2_SetAccountGold // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8c040
	void K2_SaveInventoryData(); // Function BravoHotelGame.BravoHotelPlayerController.K2_SaveInventoryData // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_RemoveShowMouse(struct UObject* WorldContextObject, struct FName SourceKey); // Function BravoHotelGame.BravoHotelPlayerController.K2_RemoveShowMouse // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f8bf90
	void K2_RemoveInputLock(struct UObject* WorldContextObject, struct FName SourceKey); // Function BravoHotelGame.BravoHotelPlayerController.K2_RemoveInputLock // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f8bee0
	void K2_RemoveAllShowMouse(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelPlayerController.K2_RemoveAllShowMouse // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f8be70
	void K2_RemoveAllInputLock(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelPlayerController.K2_RemoveAllInputLock // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f8be00
	void K2_AddShowMouse(struct UObject* WorldContextObject, struct FName SourceKey); // Function BravoHotelGame.BravoHotelPlayerController.K2_AddShowMouse // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f8bd50
	void K2_AddInputLock(struct UObject* WorldContextObject, struct FName SourceKey); // Function BravoHotelGame.BravoHotelPlayerController.K2_AddInputLock // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1f8bca0
	bool IsViewPointInVolme(struct AVolume* Volume); // Function BravoHotelGame.BravoHotelPlayerController.IsViewPointInVolme // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8bc10
	bool IsViewPointInSphere(struct FVector Center, float Radius); // Function BravoHotelGame.BravoHotelPlayerController.IsViewPointInSphere // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8bb30
	bool IsViewPointInCircle(struct FVector2D Center, float Radius); // Function BravoHotelGame.BravoHotelPlayerController.IsViewPointInCircle // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8ba60
	bool IsSpectatedPawn(struct APawn* TargetPawn); // Function BravoHotelGame.BravoHotelPlayerController.IsSpectatedPawn // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8b9c0
	bool IsSpectate(); // Function BravoHotelGame.BravoHotelPlayerController.IsSpectate // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8b990
	bool IsShowingSystemPopup(); // Function BravoHotelGame.BravoHotelPlayerController.IsShowingSystemPopup // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool IsShowingReplicationMoveParameter(); // Function BravoHotelGame.BravoHotelPlayerController.IsShowingReplicationMoveParameter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8b960
	bool IsShowingInventory(); // Function BravoHotelGame.BravoHotelPlayerController.IsShowingInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8b930
	bool IsResuscitated(); // Function BravoHotelGame.BravoHotelPlayerController.IsResuscitated // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8b900
	bool IsGameInputAllowed(); // Function BravoHotelGame.BravoHotelPlayerController.IsGameInputAllowed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8b8d0
	bool IsEnemyFor(struct ABravoHotelPlayerController* PC); // Function BravoHotelGame.BravoHotelPlayerController.IsEnemyFor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8b840
	void InternalSendReplayFile(struct FString ReplayFileName, struct FString UID, struct FString NickName, struct FString MatchID, struct FString ReplayVersion, bool bSendReplay_Hitch, bool bSendReplay_Winning, bool bSendReplay_Suspicious, bool bSendReplay_OutOfPlayArea); // Function BravoHotelGame.BravoHotelPlayerController.InternalSendReplayFile // (Final|Native|Private) // @ game+0x1f8b390
	void InsertMarker(); // Function BravoHotelGame.BravoHotelPlayerController.InsertMarker // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void InputModeUI(struct UUserWidget* Widget); // Function BravoHotelGame.BravoHotelPlayerController.InputModeUI // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void InputModeGame(struct UUserWidget* Widget); // Function BravoHotelGame.BravoHotelPlayerController.InputModeGame // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void InitLastEquipItem(); // Function BravoHotelGame.BravoHotelPlayerController.InitLastEquipItem // (Final|Native|Public) // @ game+0x1f8b370
	void HideSubLevel(struct FString SubLevelName); // Function BravoHotelGame.BravoHotelPlayerController.HideSubLevel // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed3490
	void HideModeChange(); // Function BravoHotelGame.BravoHotelPlayerController.HideModeChange // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void HideMatchEndResult(); // Function BravoHotelGame.BravoHotelPlayerController.HideMatchEndResult // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8b350
	void HideComponent(); // Function BravoHotelGame.BravoHotelPlayerController.HideComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void HideAllPrefabByName(struct FString Name); // Function BravoHotelGame.BravoHotelPlayerController.HideAllPrefabByName // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed3490
	void HideAllObjectByTag(struct FString Tag, bool bActor, bool bComponent, bool bDestroy); // Function BravoHotelGame.BravoHotelPlayerController.HideAllObjectByTag // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed45c0
	void HideAllObjectByName(struct FString Name, bool bActor, bool bComponent, bool bDestroy); // Function BravoHotelGame.BravoHotelPlayerController.HideAllObjectByName // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed45c0
	void HideAllObjectByClass(struct FString ClassName, bool bDestroy); // Function BravoHotelGame.BravoHotelPlayerController.HideAllObjectByClass // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed3020
	void HideAllComponent(); // Function BravoHotelGame.BravoHotelPlayerController.HideAllComponent // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void GiveupGame(bool bExitGame); // Function BravoHotelGame.BravoHotelPlayerController.GiveupGame // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8b2c0
	float GetTeleportWidgetSaveScrollOffset(); // Function BravoHotelGame.BravoHotelPlayerController.GetTeleportWidgetSaveScrollOffset // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8b2a0
	struct TArray<struct FBravoHotelMovePoint> GetTeleportPointList(); // Function BravoHotelGame.BravoHotelPlayerController.GetTeleportPointList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8b210
	enum class EPlayerState GetState(); // Function BravoHotelGame.BravoHotelPlayerController.GetState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8b1e0
	struct APawn* GetSpectatorTargetPawn(); // Function BravoHotelGame.BravoHotelPlayerController.GetSpectatorTargetPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8b1b0
	struct UBravoHotelSmartPingSystem* GetSmartPingSystem(); // Function BravoHotelGame.BravoHotelPlayerController.GetSmartPingSystem // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	int32_t GetSelectDeckPrice(); // Function BravoHotelGame.BravoHotelPlayerController.GetSelectDeckPrice // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8b180
	struct FRotator GetRotation(); // Function BravoHotelGame.BravoHotelPlayerController.GetRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f8b140
	struct ABravoHotelCharacter* GetResuscitater(); // Function BravoHotelGame.BravoHotelPlayerController.GetResuscitater // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8b120
	float GetRequestResuscitationRemainCoolTime(); // Function BravoHotelGame.BravoHotelPlayerController.GetRequestResuscitationRemainCoolTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8b0f0
	int32_t GetRemainTeamMemberCount(); // Function BravoHotelGame.BravoHotelPlayerController.GetRemainTeamMemberCount // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8b0c0
	struct ABravoHotelCharacter* GetPlayingCharacter(bool bIncludeSpectedCharacter); // Function BravoHotelGame.BravoHotelPlayerController.GetPlayingCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8b020
	struct UBravoHotelPerkDeckWidget* GetPerkDeckPopup(); // Function BravoHotelGame.BravoHotelPlayerController.GetPerkDeckPopup // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8b000
	struct FVector GetLocation(); // Function BravoHotelGame.BravoHotelPlayerController.GetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f8afc0
	void GetKeysForAction(struct FName ActionName, struct TArray<struct FInputActionKeyMapping>& Bindings); // Function BravoHotelGame.BravoHotelPlayerController.GetKeysForAction // (Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f8ae90
	bool GetInputLock(); // Function BravoHotelGame.BravoHotelPlayerController.GetInputLock // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8ae60
	bool GetIgnoreInputCloseUI(); // Function BravoHotelGame.BravoHotelPlayerController.GetIgnoreInputCloseUI // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8ae40
	struct FString GetHideListString(); // Function BravoHotelGame.BravoHotelPlayerController.GetHideListString // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8adc0
	bool GetEnableMaterialSearch(); // Function BravoHotelGame.BravoHotelPlayerController.GetEnableMaterialSearch // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8ad90
	struct TArray<struct ABravoHotelPlayerState*> GetCurrentPawnTeamPlayers(); // Function BravoHotelGame.BravoHotelPlayerController.GetCurrentPawnTeamPlayers // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8ad10
	struct ABravoHotelPlayerState* GetCurrentPawnPlayerState(); // Function BravoHotelGame.BravoHotelPlayerController.GetCurrentPawnPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8ace0
	struct ABravoHotelCharacter* GetCurrentPawn(); // Function BravoHotelGame.BravoHotelPlayerController.GetCurrentPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8acb0
	struct UHUDInteractionComponent* GetCurrentHUDInteractionComponent(); // Function BravoHotelGame.BravoHotelPlayerController.GetCurrentHUDInteractionComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f64820
	struct FString GetCurrentGoldStr(); // Function BravoHotelGame.BravoHotelPlayerController.GetCurrentGoldStr // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8ac30
	int64_t GetCurrentGold(); // Function BravoHotelGame.BravoHotelPlayerController.GetCurrentGold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8ac00
	int32_t GetCurrentChangeDeckPrice(); // Function BravoHotelGame.BravoHotelPlayerController.GetCurrentChangeDeckPrice // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8abd0
	struct UUserWidget* GetCheatWidget(); // Function BravoHotelGame.BravoHotelPlayerController.GetCheatWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8aba0
	int32_t GetChangeDeckMaxCount(); // Function BravoHotelGame.BravoHotelPlayerController.GetChangeDeckMaxCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8ab70
	int32_t GetChangeDeckListPrice(int32_t ChangeCount); // Function BravoHotelGame.BravoHotelPlayerController.GetChangeDeckListPrice // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8aae0
	int32_t GetChangeDeckListMaxCount(); // Function BravoHotelGame.BravoHotelPlayerController.GetChangeDeckListMaxCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8aab0
	int32_t GetChangeDeckListCount(); // Function BravoHotelGame.BravoHotelPlayerController.GetChangeDeckListCount // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8aa80
	int32_t GetChangeDeckCount(); // Function BravoHotelGame.BravoHotelPlayerController.GetChangeDeckCount // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f8aa50
	struct FString GetAccountGoldStr(); // Function BravoHotelGame.BravoHotelPlayerController.GetAccountGoldStr // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8a9d0
	int64_t GetAccountGold(); // Function BravoHotelGame.BravoHotelPlayerController.GetAccountGold // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f8a9a0
	void ForceSpectateHUD(); // Function BravoHotelGame.BravoHotelPlayerController.ForceSpectateHUD // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8a980
	void ForceSpectate(bool bActive); // Function BravoHotelGame.BravoHotelPlayerController.ForceSpectate // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8a8f0
	bool FindMouseEventForActionName(struct FKey& InMouseKey, struct FName& ActionName); // Function BravoHotelGame.BravoHotelPlayerController.FindMouseEventForActionName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f8a7c0
	bool FindHitPointForWorldMapPing(struct FVector& StartPoint, struct FVector& EndPoint, struct FHitResult& OutHit); // Function BravoHotelGame.BravoHotelPlayerController.FindHitPointForWorldMapPing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f8a630
	void EquipItem(struct FName& ItemKey); // Function BravoHotelGame.BravoHotelPlayerController.EquipItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f8a5a0
	void EnterSpectatingState(); // Function BravoHotelGame.BravoHotelPlayerController.EnterSpectatingState // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8a580
	void EnterLobbyDuringGamePlay(); // Function BravoHotelGame.BravoHotelPlayerController.EnterLobbyDuringGamePlay // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8a560
	void DoSpectateToPlaying(struct APawn* TargetPawn); // Function BravoHotelGame.BravoHotelPlayerController.DoSpectateToPlaying // (Final|Native|Public) // @ game+0x1f8a4e0
	void DoShowShowResultUI(enum class EResultUIType ResultUIType); // Function BravoHotelGame.BravoHotelPlayerController.DoShowShowResultUI // (Final|Native|Public) // @ game+0x1f8a460
	void DoRequestVictimAndSuspect(struct ABravoHotelPlayerState* InReporterPlayerState); // Function BravoHotelGame.BravoHotelPlayerController.DoRequestVictimAndSuspect // (Final|Native|Public) // @ game+0x1f8a3e0
	void DoRequestResuscitation(); // Function BravoHotelGame.BravoHotelPlayerController.DoRequestResuscitation // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8a3c0
	bool DoPayGold(uint32_t PayAmmount, int32_t ActionCode); // Function BravoHotelGame.BravoHotelPlayerController.DoPayGold // (Final|Native|Public) // @ game+0x1f8a300
	void DoMoveToPhase(int32_t Phase); // Function BravoHotelGame.BravoHotelPlayerController.DoMoveToPhase // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8a280
	void DoDescentForTest(); // Function BravoHotelGame.BravoHotelPlayerController.DoDescentForTest // (Final|Native|Public|BlueprintCallable) // @ game+0x1f8a260
	void DoDescent(); // Function BravoHotelGame.BravoHotelPlayerController.DoDescent // (Final|Native|Public) // @ game+0x1f8a240
	void DestructModeChange(); // Function BravoHotelGame.BravoHotelPlayerController.DestructModeChange // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void DestroySpawnedCamera(); // Function BravoHotelGame.BravoHotelPlayerController.DestroySpawnedCamera // (Final|Native|Public) // @ game+0x1f8a220
	void DebugTraceObject(struct FHitResult& Hit, struct FVector& Start, struct FRotator& Direction); // Function BravoHotelGame.BravoHotelPlayerController.DebugTraceObject // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f8a0a0
	void CompleteEnterSpectatingState(); // Function BravoHotelGame.BravoHotelPlayerController.CompleteEnterSpectatingState // (Final|Native|Public) // @ game+0x1f8a080
	void CloseBlackMarket(); // Function BravoHotelGame.BravoHotelPlayerController.CloseBlackMarket // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ClientWeaponADSAOSAudio(struct UAkAudioEvent* Audio); // Function BravoHotelGame.BravoHotelPlayerController.ClientWeaponADSAOSAudio // (Net|NetReliableNative|Event|Public|NetClient|Const) // @ game+0x1f89ff0
	void ClientVehicleExplosion(struct ABravoHotelVehicle* Vehicle, struct AController* InstigatorPC); // Function BravoHotelGame.BravoHotelPlayerController.ClientVehicleExplosion // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f89ef0
	void ClientUpdateRequestResuscitation(bool bFlag); // Function BravoHotelGame.BravoHotelPlayerController.ClientUpdateRequestResuscitation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f89e60
	void ClientStopKillcam(); // Function BravoHotelGame.BravoHotelPlayerController.ClientStopKillcam // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f89e40
	void ClientStartWatchingSuspect(); // Function BravoHotelGame.BravoHotelPlayerController.ClientStartWatchingSuspect // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f89e20
	void ClientSpawnBlueZone(struct ABravoHotelBlueZone* BlueZoneClass); // Function BravoHotelGame.BravoHotelPlayerController.ClientSpawnBlueZone // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f89d60
	void ClientSimulatedHittedDamage(struct FRepSimulatedHittedDamage SimulatedInfo, struct ABravoHotelCharacter* HitTarget); // Function BravoHotelGame.BravoHotelPlayerController.ClientSimulatedHittedDamage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f89c80
	void ClientShowResultUI(enum class EResultUIType ResultUIType, struct FMatchResultUIInfo MatchResultUIInfo); // Function BravoHotelGame.BravoHotelPlayerController.ClientShowResultUI // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f89b60
	void ClientShowErrorPopup(struct FString ErrorMessage); // Function BravoHotelGame.BravoHotelPlayerController.ClientShowErrorPopup // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f89ab0
	void ClientShowAttackDamage(struct AActor* DamageCauser, struct AActor* TargetPawn, float DamageAmount, struct FString HitType); // Function BravoHotelGame.BravoHotelPlayerController.ClientShowAttackDamage // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f89920
	void ClientSetSpectaterTarget(struct APawn* TargetPawn, struct FVector TargetPosition); // Function BravoHotelGame.BravoHotelPlayerController.ClientSetSpectaterTarget // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x1f89840
	void ClientSetAutoBotState(int32_t ID, char State, struct FVector2D Location); // Function BravoHotelGame.BravoHotelPlayerController.ClientSetAutoBotState // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient) // @ game+0x1f89750
	void ClientSetAutoBotEnableCombat(bool bEnable); // Function BravoHotelGame.BravoHotelPlayerController.ClientSetAutoBotEnableCombat // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f896c0
	void ClientRequestMessage(struct FString Message, struct ABravoHotelPlayerState* TargetState); // Function BravoHotelGame.BravoHotelPlayerController.ClientRequestMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f895d0
	void ClientPlayVoiceSound(uint32_t UniqueID, struct FName SoundIdx); // Function BravoHotelGame.BravoHotelPlayerController.ClientPlayVoiceSound // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f89500
	void ClientPlayNoAmmoSound(); // Function BravoHotelGame.BravoHotelPlayerController.ClientPlayNoAmmoSound // (Net|NetReliableNative|Event|Public|NetClient|Const) // @ game+0x1f894e0
	void ClientPlayKillcam(struct AController* KillingController, struct APawn* PawnToFocus, struct FVector_NetQuantize FocusLoc, int32_t FocusYaw); // Function BravoHotelGame.BravoHotelPlayerController.ClientPlayKillcam // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f89390
	void ClientPayGoldOnSelectDeckMode(bool bSuccess, int32_t Gold); // Function BravoHotelGame.BravoHotelPlayerController.ClientPayGoldOnSelectDeckMode // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f892c0
	void ClientPayGoldOnChangeDeckListCB(bool bSuccess, int32_t Gold); // Function BravoHotelGame.BravoHotelPlayerController.ClientPayGoldOnChangeDeckListCB // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f891f0
	void ClientPayGoldOnChangeDeckCB(bool bSuccess, int32_t Gold); // Function BravoHotelGame.BravoHotelPlayerController.ClientPayGoldOnChangeDeckCB // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f89120
	void ClientOpenPersonalBox(); // Function BravoHotelGame.BravoHotelPlayerController.ClientOpenPersonalBox // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f890d0
	void ClientOnReporterUser(struct FDataEventClientGameIllegalUsers InEventData); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnReporterUser // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f88b90
	void ClientOnPlayerResuscitated(struct FRepDiedInfo Info); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnPlayerResuscitated // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f88aa0
	void ClientOnPlayerKnockDownOther(); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnPlayerKnockDownOther // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f88a50
	void ClientOnPlayerKnockDown(struct FRepDiedInfo Info); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnPlayerKnockDown // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f88960
	void ClientOnPlayerKill(); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnPlayerKill // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f88910
	void ClientOnPlayerDied(struct FRepDiedInfo Info, int32_t WeaponLevel); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnPlayerDied // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f887d0
	void ClientOnNotifyForWinnerCam(); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnNotifyForWinnerCam // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f88780
	void ClientOnImmediateSuspectData(struct ABravoHotelPlayerState* InSuspectState, struct ABravoHotelPlayerState* InVictimState, struct FReplayReportVictimAndSuspectLogData InReplayReportVictimAndSuspectLogData); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnImmediateSuspectData // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f88430
	void ClientOnExplosionCameraShake(struct UCameraShake* CameraShake, float Scale); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnExplosionCameraShake // (Net|NetReliableNative|Event|Public|NetClient|Const) // @ game+0x1f88360
	void ClientOnEscapeFromVehicle(); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnEscapeFromVehicle // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f88310
	void ClientOnAssistedKill(int32_t DamageAmount); // Function BravoHotelGame.BravoHotelPlayerController.ClientOnAssistedKill // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f88250
	void ClientNotifyUserKicked(struct ABravoHotelPlayerState* PS); // Function BravoHotelGame.BravoHotelPlayerController.ClientNotifyUserKicked // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f881c0
	void ClientNotifyRequestResuscitation(struct ABravoHotelPlayerState* RequestedPlayerState); // Function BravoHotelGame.BravoHotelPlayerController.ClientNotifyRequestResuscitation // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f88130
	void ClientNoticeMessage(struct FString Message); // Function BravoHotelGame.BravoHotelPlayerController.ClientNoticeMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f88080
	void ClientMoveFromResuscitatingOwnerActor(struct ABravoHotelCharacter* InResuscitater, struct ABravoHotelCharacter* ResuscitatedTarget); // Function BravoHotelGame.BravoHotelPlayerController.ClientMoveFromResuscitatingOwnerActor // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f87fb0
	void ClientLogMessage(struct FString LogMessage); // Function BravoHotelGame.BravoHotelPlayerController.ClientLogMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f87f00
	void ClientKickOutOfGame(struct FString reason); // Function BravoHotelGame.BravoHotelPlayerController.ClientKickOutOfGame // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f87e50
	void ClientJoinVoice(bool IsTeamMode, struct FString ChannelID, int32_t TeamNum, bool NeedLeave); // Function BravoHotelGame.BravoHotelPlayerController.ClientJoinVoice // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f87ce0
	void ClientIsNotDivisionActorList(struct TArray<struct FString> ActorList); // Function BravoHotelGame.BravoHotelPlayerController.ClientIsNotDivisionActorList // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f87bf0
	void ClientGetDataUidList(struct TArray<struct FString> List); // Function BravoHotelGame.BravoHotelPlayerController.ClientGetDataUidList // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f87b00
	void ClientGetData(struct FDediDataCharacterInfo CharacterData); // Function BravoHotelGame.BravoHotelPlayerController.ClientGetData // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f87a20
	void ClientForwardCheatResult(struct FName Command, bool bIsSucceeded); // Function BravoHotelGame.BravoHotelPlayerController.ClientForwardCheatResult // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f87950
	void ClientForceItemSpawnResult(struct TArray<struct FString> SpawnResultInfo, struct TArray<struct FSpawnItems_DEBUG> SpawnResultData, bool IsEmpty, bool IsEnd); // Function BravoHotelGame.BravoHotelPlayerController.ClientForceItemSpawnResult // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f87710
	void ClientEnableVoice(bool bState); // Function BravoHotelGame.BravoHotelPlayerController.ClientEnableVoice // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f87680
	void ClientDrawDebugSphere(struct FVector Center, float Radius); // Function BravoHotelGame.BravoHotelPlayerController.ClientDrawDebugSphere // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient|BlueprintCallable) // @ game+0x1f875c0
	void ClientDrawDebugBox(struct FVector Center, struct FVector Extent); // Function BravoHotelGame.BravoHotelPlayerController.ClientDrawDebugBox // (Net|NetReliableNative|Event|Public|HasDefaults|NetClient|BlueprintCallable) // @ game+0x1f87510
	void ClientDisconnectFromDedicatedServer(); // Function BravoHotelGame.BravoHotelPlayerController.ClientDisconnectFromDedicatedServer // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f874f0
	void ClientCompleteCheckPoint(struct FTestPoint TestPoint); // Function BravoHotelGame.BravoHotelPlayerController.ClientCompleteCheckPoint // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x1f87410
	void ClientChangeHUD(struct AHUD* HUDClass, bool bMouseEnabled); // Function BravoHotelGame.BravoHotelPlayerController.ClientChangeHUD // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f87340
	void ClientAddSmartPing(struct ABravoHotelPlayerState* OwnerState, struct FBravoHotelPingInfo NewPingInfo); // Function BravoHotelGame.BravoHotelPlayerController.ClientAddSmartPing // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f87220
	void ClientAddPerkUIEvent(struct ABravoHotelCharacter* TargetCharacter, struct FPerkInfo PerkInfo, struct FDisplayAbility CurrentDisplayAbility, int32_t LastLevel, int32_t ClassLevel, enum class EPerkLevelUpType LevelUpType); // Function BravoHotelGame.BravoHotelPlayerController.ClientAddPerkUIEvent // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f87040
	void ClearSearchMaterialItems(); // Function BravoHotelGame.BravoHotelPlayerController.ClearSearchMaterialItems // (Final|Native|Public) // @ game+0x1f87020
	void CheckSearchMaterialItems(); // Function BravoHotelGame.BravoHotelPlayerController.CheckSearchMaterialItems // (Final|Native|Public|BlueprintCallable) // @ game+0x1f87000
	void CheckNameTooltip(); // Function BravoHotelGame.BravoHotelPlayerController.CheckNameTooltip // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void CheckEquipItemMaterialItemAutorSearch(struct FName& ItemKey); // Function BravoHotelGame.BravoHotelPlayerController.CheckEquipItemMaterialItemAutorSearch // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f86f70
	void Cheat_SlomoUp(); // Function BravoHotelGame.BravoHotelPlayerController.Cheat_SlomoUp // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void Cheat_SlomoDown(); // Function BravoHotelGame.BravoHotelPlayerController.Cheat_SlomoDown // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void Cheat_GiveEquipment(); // Function BravoHotelGame.BravoHotelPlayerController.Cheat_GiveEquipment // (Final|Native|Public) // @ game+0x151b910
	void Cheat_ForceSpectatePreTarget(); // Function BravoHotelGame.BravoHotelPlayerController.Cheat_ForceSpectatePreTarget // (Final|Native|Public) // @ game+0x151b910
	void Cheat_ForceSpectateNextTarget(); // Function BravoHotelGame.BravoHotelPlayerController.Cheat_ForceSpectateNextTarget // (Final|Native|Public) // @ game+0x151b910
	void Cheat_ChangeUltimateLevelUp(); // Function BravoHotelGame.BravoHotelPlayerController.Cheat_ChangeUltimateLevelUp // (Final|Native|Public) // @ game+0x151b910
	void Cheat_ChangeUltimateLevelDown(); // Function BravoHotelGame.BravoHotelPlayerController.Cheat_ChangeUltimateLevelDown // (Final|Native|Public) // @ game+0x151b910
	bool CharacterTeleportFromTeleportPoint(struct FName& AreaName); // Function BravoHotelGame.BravoHotelPlayerController.CharacterTeleportFromTeleportPoint // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f86ed0
	bool CharacterTeleport(bool UsingConfigData, struct FName AreaName, bool EnableRotate, bool UsingTeleportPointList, bool MoveZCheck); // Function BravoHotelGame.BravoHotelPlayerController.CharacterTeleport // (Final|Native|Public|BlueprintCallable) // @ game+0x1f86d10
	bool CharacterMoveTeleport(struct FVector Pos, struct FRotator Rot); // Function BravoHotelGame.BravoHotelPlayerController.CharacterMoveTeleport // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f86c20
	void ChangeShowPersonalSupplyBox(int32_t PlayerId); // Function BravoHotelGame.BravoHotelPlayerController.ChangeShowPersonalSupplyBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1f86ba0
	void ChangeBattleRoyaleState(enum class EBattleRoyaleState PrevState, enum class EBattleRoyaleState CurrentState); // Function BravoHotelGame.BravoHotelPlayerController.ChangeBattleRoyaleState // (Final|Native|Public) // @ game+0x1f86ae0
	bool CanRequestResuscitation(); // Function BravoHotelGame.BravoHotelPlayerController.CanRequestResuscitation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f86ab0
	bool CanOpenOptionMenu(); // Function BravoHotelGame.BravoHotelPlayerController.CanOpenOptionMenu // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f86a80
	void AutoBotCommand(struct FString Command); // Function BravoHotelGame.BravoHotelPlayerController.AutoBotCommand // (Final|Exec|Native|Public) // @ game+0x1ed3490
	void AddSpawnBookPing(struct FVector& Location); // Function BravoHotelGame.BravoHotelPlayerController.AddSpawnBookPing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f869f0
};

// Class BravoHotelGame.BravoHotelPlayerControllerInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelPlayerControllerInterface : UInterface {

	void OnChangedReplayViewMode(bool IsPlayer); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.OnChangedReplayViewMode // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f91070
	bool HasPerkDeckWidget(); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.HasPerkDeckWidget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1cdd0
	struct TArray<struct ABravoHotelPlayerState*> GetTargetPawnTeamPlayers(); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.GetTargetPawnTeamPlayers // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1f90f60
	struct FRotator GetTargetPawnRotation(); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.GetTargetPawnRotation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1f90f20
	struct ABravoHotelPlayerState* GetTargetPawnPlayerState(); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.GetTargetPawnPlayerState // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1f90ef0
	struct FVector GetTargetPawnLocation(); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.GetTargetPawnLocation // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x1f90eb0
	struct ABravoHotelCharacter* GetTargetPawn(); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.GetTargetPawn // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1f90e80
	struct ABravoHotelCharacter* GetPlayingTargetCharacter(bool bIncludeSpectedCharacter); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.GetPlayingTargetCharacter // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1f90de0
	struct UHUDInteractionComponent* GetHUDInteractionComponent(); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.GetHUDInteractionComponent // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1f90db0
	struct UBravoHotelDebugInfo* GetDebugInfo(); // Function BravoHotelGame.BravoHotelPlayerControllerInterface.GetDebugInfo // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f90d80
};

// Class BravoHotelGame.BravoHotelPlayerControllerStatics
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelPlayerControllerStatics : UBlueprintFunctionLibrary {

	struct FVector GetViewPoint(struct UObject* InWorldContextObject); // Function BravoHotelGame.BravoHotelPlayerControllerStatics.GetViewPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f90fe0
};

// Class BravoHotelGame.BravoHotelPlayerHUD
// Size: 0x868 (Inherited: 0x428)
struct ABravoHotelPlayerHUD : ABravoHotelBaseHUD {
	struct UBravoHotelCrosshairManager* CrosshairMgr; // 0x428(0x08)
	struct ABravoHotelCharacter* LastTargetPawn; // 0x430(0x08)
	struct TArray<struct ABravoHotelPlayerState*> PlayerInfos; // 0x438(0x10)
	struct ABattleRoyaleGameState* BattleRoyaleGameState; // 0x448(0x08)
	struct ABravoHotelGameState* BravoHotelGameState; // 0x450(0x08)
	char pad_458[0x8]; // 0x458(0x08)
	struct FMulticastInlineDelegate OnChangedPlayerInfosDelegate; // 0x460(0x10)
	char pad_470[0xc]; // 0x470(0x0c)
	float CurrentSkillRadius; // 0x47c(0x04)
	bool bReplayOptionFireDirection; // 0x480(0x01)
	bool bReplayOptionHitted; // 0x481(0x01)
	bool bReplayOptionDeathPosition; // 0x482(0x01)
	bool bReplayOptionPersonalSupplyBox; // 0x483(0x01)
	bool bReplayOptionTransportDropBox; // 0x484(0x01)
	char pad_485[0x3]; // 0x485(0x03)
	struct FMulticastInlineDelegate OnToggleWidgetDelegate; // 0x488(0x10)
	char pad_498[0x8]; // 0x498(0x08)
	struct UAkAudioEvent* FireModeSound; // 0x4a0(0x08)
	struct UAkAudioEvent* PlayerKillSound; // 0x4a8(0x08)
	struct UAkAudioEvent* PlayerDuoKillSound; // 0x4b0(0x08)
	struct UAkAudioEvent* LastPlayerInSquardKillSound; // 0x4b8(0x08)
	struct UAkAudioEvent* LastPlayerInDuoKillSound; // 0x4c0(0x08)
	struct UAkAudioEvent* PlayerAssistSound; // 0x4c8(0x08)
	struct UAkAudioEvent* PlayerDiedSound; // 0x4d0(0x08)
	struct UAkAudioEvent* RequestResuscitationEvent; // 0x4d8(0x08)
	struct UUserWidget* InventoryWidgetClass; // 0x4e0(0x08)
	struct UUserWidget* InventoryWidget; // 0x4e8(0x08)
	struct TSoftClassPtr<UObject> SoftInventoryInfoWidgetClass; // 0x4f0(0x28)
	struct UUserWidget* InventoryWidget_Ori; // 0x518(0x08)
	struct UUserWidget* InventoryWidget_Web; // 0x520(0x08)
	struct UBravoHotelMainWidget* BravoHotelMainWidget; // 0x528(0x08)
	struct TSoftClassPtr<UObject> SoftMainWidgetClass; // 0x530(0x28)
	struct UUserWidget* CustomMatchWidget; // 0x558(0x08)
	struct UUserWidget* MainWidgetEx; // 0x560(0x08)
	struct UUserWidget* MainWidgetExClass; // 0x568(0x08)
	struct TSoftClassPtr<UObject> SoftMainWidgetExClass; // 0x570(0x28)
	struct UUserWidget* SpectatorWidget; // 0x598(0x08)
	struct UUserWidget* SpectatorWidgetClass; // 0x5a0(0x08)
	struct TSoftClassPtr<UObject> SoftSpectatorWidgetClass; // 0x5a8(0x28)
	struct UUserWidget* ReplayWidget; // 0x5d0(0x08)
	struct UUserWidget* ReplayWidgetClass; // 0x5d8(0x08)
	struct TSoftClassPtr<UObject> SoftReplayWidgetClass; // 0x5e0(0x28)
	struct UUserWidget* WorldMapWidget; // 0x608(0x08)
	struct UUserWidget* WorldMapWidgetClass; // 0x610(0x08)
	struct TSoftClassPtr<UObject> SoftWorldMapWidgetClass; // 0x618(0x28)
	struct UUserWidget* SkillMapWidget; // 0x640(0x08)
	struct UUserWidget* SkillMapWidgetClass; // 0x648(0x08)
	struct TSoftClassPtr<UObject> SoftSkillMapWidgetClass; // 0x650(0x28)
	struct UUserWidget* BlackMarketWidget; // 0x678(0x08)
	struct UUserWidget* MatchEndWidget; // 0x680(0x08)
	struct UUserWidget* MatchEndWidgetClass; // 0x688(0x08)
	struct TSoftClassPtr<UObject> SoftMatchEndWidgetClass; // 0x690(0x28)
	char pad_6B8[0x48]; // 0x6b8(0x48)
	bool bEnableWorldmap; // 0x700(0x01)
	bool bEnableMinimap; // 0x701(0x01)
	char pad_702[0x6]; // 0x702(0x06)
	struct TSoftClassPtr<UObject> SoftTestWidgetClass; // 0x708(0x28)
	struct TSoftClassPtr<UObject> SoftWorldTeleportWidgetClass; // 0x730(0x28)
	struct TSoftClassPtr<UObject> SoftReplayZoneClass; // 0x758(0x28)
	struct TSoftClassPtr<UObject> SoftItemSpawnDebugWidgetClass; // 0x780(0x28)
	struct TSoftClassPtr<UObject> SoftItemSpawnRateWidgetClass; // 0x7a8(0x28)
	struct UUserWidget* TestWidget; // 0x7d0(0x08)
	struct TSoftClassPtr<UObject> SoftCustomMatchWidgetClass; // 0x7d8(0x28)
	struct UUserWidget* CinematicWidget; // 0x800(0x08)
	struct TSoftClassPtr<UObject> CinematicWidgetClass; // 0x808(0x28)
	struct UUserWidget* MediaPlayerWidget; // 0x830(0x08)
	struct TSoftClassPtr<UObject> MediaPlayerWidgetClass; // 0x838(0x28)
	char pad_860[0x8]; // 0x860(0x08)

	void UpdateKillCount(); // Function BravoHotelGame.BravoHotelPlayerHUD.UpdateKillCount // (Final|Native|Public) // @ game+0x1f950b0
	void UpdateAssistCount(); // Function BravoHotelGame.BravoHotelPlayerHUD.UpdateAssistCount // (Final|Native|Public) // @ game+0x1f95090
	void ShowWorldMapWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowWorldMapWidget // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f95070
	void ShowStatupAnimInInventory(struct FStatupAnimParameters& StatupParams, enum class EStatupAnimType& StatupAnimType); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowStatupAnimInInventory // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f94f70
	void ShowStatupAnimByItem(struct FStatupAnimData& NewStatupAnimData); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowStatupAnimByItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f94eb0
	void ShowStatupAnimAtCharacter(struct FStatupAnimParameters& StatupParams); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowStatupAnimAtCharacter // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f94e00
	struct UUserWidget* ShowSpectatorWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowSpectatorWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94dd0
	void ShowSkillWidget(float Radius); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowSkillWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94d50
	void ShowSkillMapWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowSkillMapWidget // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f94d30
	struct UUserWidget* ShowReplayWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowReplayWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94d00
	void ShowPlayerActionMessage(struct FText& Message, bool Warning); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowPlayerActionMessage // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1f94bd0
	void ShowNotRecorverHPMessage(bool bFullHP, int32_t ItemId); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowNotRecorverHPMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f94b00
	void ShowMyKillCountMessage(bool bIsKill, struct FText& Message); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowMyKillCountMessage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f949e0
	void ShowMinimapWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowMinimapWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f949c0
	void ShowMatchEndWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowMatchEndWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f949a0
	struct UUserWidget* ShowMainWidgetEx(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowMainWidgetEx // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94970
	struct UUserWidget* ShowMainWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowMainWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94940
	void ShowInventoryWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowInventoryWidget // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f94920
	void ShowHudMessageAt(int32_t MessageTypeNum); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowHudMessageAt // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ShowHudMessageAll(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowHudMessageAll // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ShowHUDMessage(struct FBravoHotelHUDMessageRow MessageRow); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowHUDMessage // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ShowGuideWidget(enum class EGuideWidgetType GuideType); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowGuideWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ShowEnergyItemUse(int32_t Type); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowEnergyItemUse // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f94890
	void ShowCrossHair(); // Function BravoHotelGame.BravoHotelPlayerHUD.ShowCrossHair // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94870
	void SetToggleWorldMap(bool bToggle); // Function BravoHotelGame.BravoHotelPlayerHUD.SetToggleWorldMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1f947e0
	void SetToggleWidgetMode(enum class EToggleWidgetModeType ToggleType); // Function BravoHotelGame.BravoHotelPlayerHUD.SetToggleWidgetMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94760
	void SetToggleSkillMap(bool bToggle); // Function BravoHotelGame.BravoHotelPlayerHUD.SetToggleSkillMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1f946d0
	void SetToggleMinimap(bool bToggle); // Function BravoHotelGame.BravoHotelPlayerHUD.SetToggleMinimap // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94640
	void SetToggleInventory(bool bToggle); // Function BravoHotelGame.BravoHotelPlayerHUD.SetToggleInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x1f945b0
	void SetToggleBlackMarket(bool bToggle); // Function BravoHotelGame.BravoHotelPlayerHUD.SetToggleBlackMarket // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94520
	void SetReplayOptionTransportDropBox(bool bSet); // Function BravoHotelGame.BravoHotelPlayerHUD.SetReplayOptionTransportDropBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94490
	void SetReplayOptionPersonalSupplyBox(bool bSet); // Function BravoHotelGame.BravoHotelPlayerHUD.SetReplayOptionPersonalSupplyBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94400
	void SetReplayOptionHitted(bool bSet); // Function BravoHotelGame.BravoHotelPlayerHUD.SetReplayOptionHitted // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94370
	void SetReplayOptionFireDirection(bool bSet); // Function BravoHotelGame.BravoHotelPlayerHUD.SetReplayOptionFireDirection // (Final|Native|Public|BlueprintCallable) // @ game+0x1f942e0
	void SetReplayOptionDeathPosition(bool bSet); // Function BravoHotelGame.BravoHotelPlayerHUD.SetReplayOptionDeathPosition // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94250
	void SetCurrentShowingWidgetType(enum class EToggleWidgetModeType ToggleWidgetModeType); // Function BravoHotelGame.BravoHotelPlayerHUD.SetCurrentShowingWidgetType // (Final|Native|Public|BlueprintCallable) // @ game+0x1f941d0
	void ResetMapPlayers(); // Function BravoHotelGame.BravoHotelPlayerHUD.ResetMapPlayers // (Final|Native|Public|BlueprintCallable) // @ game+0x1f941b0
	void RemoveAreaWidgetToMap(enum class EWorldMapAreaWidgetType WorldMapAreaWidgetType, struct FAreaWidgetInfo& AreaWidgetInfo); // Function BravoHotelGame.BravoHotelPlayerHUD.RemoveAreaWidgetToMap // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f94060
	void RemoveAllAreaWidgets(); // Function BravoHotelGame.BravoHotelPlayerHUD.RemoveAllAreaWidgets // (Final|Native|Public|BlueprintCallable) // @ game+0x1f94040
	void RecreateWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.RecreateWidget // (Final|Native|Public) // @ game+0x1f94020
	void OnToggleWidgetDelegate__DelegateSignature(enum class EToggleWidgetModeType& ToggleType); // DelegateFunction BravoHotelGame.BravoHotelPlayerHUD.OnToggleWidgetDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void OnFireWidget(int32_t UniquePlayerId, struct FRotator Rotation, float Length); // Function BravoHotelGame.BravoHotelPlayerHUD.OnFireWidget // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f93f10
	void OnDoSkillBySkillMap(); // Function BravoHotelGame.BravoHotelPlayerHUD.OnDoSkillBySkillMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1f93ef0
	void OnChangedPlayerInfosDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelPlayerHUD.OnChangedPlayerInfosDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnAttackedWidget(int32_t UniquePlayerId); // Function BravoHotelGame.BravoHotelPlayerHUD.OnAttackedWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f93e70
	void OnAddKillMessageAll(); // Function BravoHotelGame.BravoHotelPlayerHUD.OnAddKillMessageAll // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnAddKillMessage(struct FKillBroadcastUIInfo& BroadCastInfo); // Function BravoHotelGame.BravoHotelPlayerHUD.OnAddKillMessage // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1f93d10
	void NotifyTargetPawnPosOnWorldMap(); // Function BravoHotelGame.BravoHotelPlayerHUD.NotifyTargetPawnPosOnWorldMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1f93cf0
	void NotifyNeedRefreshToMap(); // Function BravoHotelGame.BravoHotelPlayerHUD.NotifyNeedRefreshToMap // (Final|Native|Public|BlueprintCallable) // @ game+0x1f93cd0
	void K2_SetMainAndSpectatorWidgetVisiblility(bool bIsVisible, bool bMainWidget, bool bSpectatorWidget); // Function BravoHotelGame.BravoHotelPlayerHUD.K2_SetMainAndSpectatorWidgetVisiblility // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool IsShowingWorldMap(); // Function BravoHotelGame.BravoHotelPlayerHUD.IsShowingWorldMap // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93ca0
	bool IsShowingSkillMap(); // Function BravoHotelGame.BravoHotelPlayerHUD.IsShowingSkillMap // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93c70
	bool IsShowingMiniMap(); // Function BravoHotelGame.BravoHotelPlayerHUD.IsShowingMiniMap // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93c40
	bool IsShowingInventory(); // Function BravoHotelGame.BravoHotelPlayerHUD.IsShowingInventory // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93c10
	bool IsShowingBlackMarket(); // Function BravoHotelGame.BravoHotelPlayerHUD.IsShowingBlackMarket // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93be0
	bool IsNeedToDrawCrosshair(); // Function BravoHotelGame.BravoHotelPlayerHUD.IsNeedToDrawCrosshair // (Final|Native|Public) // @ game+0x1f93bb0
	void HideWorldMapWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.HideWorldMapWidget // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f93b90
	void HideSkillWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.HideSkillWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f93b70
	void HideSkillMapWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.HideSkillMapWidget // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f93b50
	void HideMinimapWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.HideMinimapWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f93b30
	void HideMatchEndWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.HideMatchEndWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f93b10
	void HideInventoryWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.HideInventoryWidget // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f93af0
	void HideHUDMessage(enum class EHUDMessageType MessageType); // Function BravoHotelGame.BravoHotelPlayerHUD.HideHUDMessage // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void HideGuideWidget(enum class EGuideWidgetType GuideType); // Function BravoHotelGame.BravoHotelPlayerHUD.HideGuideWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void HideCurrentToggleWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.HideCurrentToggleWidget // (Final|Native|Public|BlueprintCallable) // @ game+0x1f93ad0
	void HideCrossHair(); // Function BravoHotelGame.BravoHotelPlayerHUD.HideCrossHair // (Final|Native|Public|BlueprintCallable) // @ game+0x1f93ab0
	int32_t GetZOrderTopInfoWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetZOrderTopInfoWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93a90
	struct UUserWidget* GetWorldMapWidget(bool bWantsToCreateIfNull); // Function BravoHotelGame.BravoHotelPlayerHUD.GetWorldMapWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f939f0
	struct UUserWidget* GetTopInfoWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetTopInfoWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f939c0
	struct UUserWidget* GetTestWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetTestWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93990
	struct UUserWidget* GetSpectatorWidget(bool bWantsToCreateIfNull); // Function BravoHotelGame.BravoHotelPlayerHUD.GetSpectatorWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f938f0
	struct UUserWidget* GetSkillMapWidget(bool bWantsToCreateIfNull); // Function BravoHotelGame.BravoHotelPlayerHUD.GetSkillMapWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93850
	struct UUserWidget* GetReplayWidget(bool bWantsToCreateIfNull); // Function BravoHotelGame.BravoHotelPlayerHUD.GetReplayWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f937b0
	enum class EToggleWidgetModeType GetPreShowingWidgetType(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetPreShowingWidgetType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93790
	struct TArray<struct ABravoHotelPlayerState*> GetPlayerInfos(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetPlayerInfos // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f936e0
	struct UUserWidget* GetMiniMapWidget(bool bWantsToCreateIfNull); // Function BravoHotelGame.BravoHotelPlayerHUD.GetMiniMapWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93640
	struct UUserWidget* GetMediaPlayerWidget(bool bWantsToCreateIfNull); // Function BravoHotelGame.BravoHotelPlayerHUD.GetMediaPlayerWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f935a0
	enum class EBroadCastTeamType GetKillBroadcastTeamType(struct ABravoHotelPlayerState* TargetPlayer); // Function BravoHotelGame.BravoHotelPlayerHUD.GetKillBroadcastTeamType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93510
	void GetKillBroadcastDamageInfo(struct FKillBroadcastKillerInfo& Info, struct FText& OutCauserName, struct TSoftObjectPtr<UPaperSprite>& OutDamageIcon); // Function BravoHotelGame.BravoHotelPlayerHUD.GetKillBroadcastDamageInfo // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f93300
	struct UUserWidget* GetInventoryWidget(bool bWantsToCreateIfNull); // Function BravoHotelGame.BravoHotelPlayerHUD.GetInventoryWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93260
	struct UBravoHotelInteractionWidget* GetInteractiveWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetInteractiveWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93230
	struct UUserWidget* GetCustomMatchWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetCustomMatchWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93200
	enum class EToggleWidgetModeType GetCurrentShowingWidgetType(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetCurrentShowingWidgetType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f931e0
	struct UBravoHotelCrosshair* GetCrossHair(struct FName& CrosshairRowName); // Function BravoHotelGame.BravoHotelPlayerHUD.GetCrossHair // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1f93140
	struct UUserWidget* GetCinematicWidget(bool bWantsToCreateIfNull); // Function BravoHotelGame.BravoHotelPlayerHUD.GetCinematicWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f930a0
	struct UBravoHotelMainWidget* GetBravoHotelMainWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetBravoHotelMainWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93070
	struct UUserWidget* GetBottomInfoWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetBottomInfoWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93040
	struct UUserWidget* GetBlackMarketWidget(); // Function BravoHotelGame.BravoHotelPlayerHUD.GetBlackMarketWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f93010
	void DropItemInventory(struct FGeometry MyGeometry, struct FPointerEvent PointerEvent, struct UDragDropOperation* Operation); // Function BravoHotelGame.BravoHotelPlayerHUD.DropItemInventory // (Final|Native|Public|BlueprintCallable) // @ game+0x1f92d60
	void ChangeInputMode(struct UUserWidget* InputWidget, bool bEnable); // Function BravoHotelGame.BravoHotelPlayerHUD.ChangeInputMode // (Final|Native|Public) // @ game+0x1f92c90
	void AddRequestMessage(struct ABravoHotelPlayerState* PlayerState, struct FString Message); // Function BravoHotelGame.BravoHotelPlayerHUD.AddRequestMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1f92bb0
	void AddCoreInfoSmartping(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelPlayerHUD.AddCoreInfoSmartping // (Final|Native|Public|BlueprintCallable) // @ game+0x1f92b30
	void AddCoreInfoRouteping(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelPlayerHUD.AddCoreInfoRouteping // (Final|Native|Public|BlueprintCallable) // @ game+0x1f92ab0
	void AddCoreInfoRequestResuscitation(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelPlayerHUD.AddCoreInfoRequestResuscitation // (Final|Native|Public|BlueprintCallable) // @ game+0x1f92a30
	void AddAreaWidgetToMap(enum class EWorldMapAreaWidgetType WorldMapAreaWidgetType, struct FAreaWidgetInfo& AreaWidgetInfo); // Function BravoHotelGame.BravoHotelPlayerHUD.AddAreaWidgetToMap // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f928e0
};

// Class BravoHotelGame.BravoHotelPlayerIconWidget
// Size: 0x318 (Inherited: 0x248)
struct UBravoHotelPlayerIconWidget : UUserWidget {
	struct UCanvasPanel* Canvas_Main; // 0x248(0x08)
	struct UCanvasPanel* RotationGroup; // 0x250(0x08)
	struct UCanvasPanel* Canvas_Replay; // 0x258(0x08)
	struct UWidgetSwitcher* IconSwitcher; // 0x260(0x08)
	struct UTextBlock* Text_PlayerNum; // 0x268(0x08)
	struct UTextBlock* Text_PlayerName; // 0x270(0x08)
	struct UImage* Img_Disconnect; // 0x278(0x08)
	struct UImage* Img_KnockDown; // 0x280(0x08)
	struct UImage* Img_Alive; // 0x288(0x08)
	struct UImage* Img_Death; // 0x290(0x08)
	struct UImage* Img_Vehicle; // 0x298(0x08)
	struct UImage* Img_Parachute; // 0x2a0(0x08)
	struct UImage* Img_Critical; // 0x2a8(0x08)
	struct UImage* Img_Sight; // 0x2b0(0x08)
	struct UImage* Img_Arrow; // 0x2b8(0x08)
	struct UImage* Img_BackRound; // 0x2c0(0x08)
	struct UImage* Img_TargetCam; // 0x2c8(0x08)
	struct UImage* Img_TargetCamDummy; // 0x2d0(0x08)
	struct USizeBox* SizeBox_RequestResuscitation; // 0x2d8(0x08)
	struct UButton* BT_UserName; // 0x2e0(0x08)
	struct UWidgetAnimation* Anim_Bouncing; // 0x2e8(0x08)
	struct ABravoHotelPlayerState* PlayerStateRef; // 0x2f0(0x08)
	struct UDataTable* TeamColorTableRef; // 0x2f8(0x08)
	bool bIsFreeCam; // 0x300(0x01)
	bool bIsReplaying; // 0x301(0x01)
	bool bIsKillCam; // 0x302(0x01)
	bool bIsInNetCullDistance; // 0x303(0x01)
	bool bIsRequestResuscitation; // 0x304(0x01)
	char pad_305[0x13]; // 0x305(0x13)

	void UpdateInfo(); // Function BravoHotelGame.BravoHotelPlayerIconWidget.UpdateInfo // (Final|Native|Protected) // @ game+0x1f95650
	void SetRotationGroup(); // Function BravoHotelGame.BravoHotelPlayerIconWidget.SetRotationGroup // (Final|Native|Protected) // @ game+0x1f95630
	void SetReplayInfo(); // Function BravoHotelGame.BravoHotelPlayerIconWidget.SetReplayInfo // (Final|Native|Protected) // @ game+0x1f95610
	void SetPlayerColor(); // Function BravoHotelGame.BravoHotelPlayerIconWidget.SetPlayerColor // (Final|Native|Protected) // @ game+0x1f955f0
	void SetIconState(); // Function BravoHotelGame.BravoHotelPlayerIconWidget.SetIconState // (Final|Native|Protected) // @ game+0x1f955d0
	void Rotate(float Angle); // Function BravoHotelGame.BravoHotelPlayerIconWidget.Rotate // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void PlayTargetPosAnim(); // Function BravoHotelGame.BravoHotelPlayerIconWidget.PlayTargetPosAnim // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool IsTargetPawnPlayerState(); // Function BravoHotelGame.BravoHotelPlayerIconWidget.IsTargetPawnPlayerState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f955a0
	void CheckRequestResuscitation(); // Function BravoHotelGame.BravoHotelPlayerIconWidget.CheckRequestResuscitation // (Final|Native|Protected) // @ game+0x1f95580
};

// Class BravoHotelGame.BravoHotelPlayerInfoProgressSlotWidget
// Size: 0x2b8 (Inherited: 0x248)
struct UBravoHotelPlayerInfoProgressSlotWidget : UUserWidget {
	struct USizeBox* SizeBox_main; // 0x248(0x08)
	struct UImage* Image_bg; // 0x250(0x08)
	struct UProgressBar* MainProgressBar; // 0x258(0x08)
	struct UProgressBar* CureLimitProgressBar; // 0x260(0x08)
	struct UProgressBar* TargetProgressBar; // 0x268(0x08)
	struct UProgressBar* BeforeProgressBar; // 0x270(0x08)
	struct UProgressBar* ShortTimeProgressBar; // 0x278(0x08)
	struct UWidgetAnimation* DangerHp; // 0x280(0x08)
	struct UWidgetAnimation* Anim_Increase; // 0x288(0x08)
	struct UWidgetAnimation* Anim_AdditionalHP; // 0x290(0x08)
	struct UObject* DefaultSlotSprite; // 0x298(0x08)
	struct UObject* FirstSlotSprite; // 0x2a0(0x08)
	struct UObject* LastSlotSprite; // 0x2a8(0x08)
	int32_t MaxHealth; // 0x2b0(0x04)
	bool bIsKnockOutMode; // 0x2b4(0x01)
	char pad_2B5[0x3]; // 0x2b5(0x03)

	void SetProgressPercent(struct UProgressBar* InProgressBar, int32_t InHealth); // Function BravoHotelGame.BravoHotelPlayerInfoProgressSlotWidget.SetProgressPercent // (Final|Native|Public) // @ game+0x1f95c00
	void SetMaxHealth(int32_t InMaxHealth, bool bIsFirst, bool bIsLast); // Function BravoHotelGame.BravoHotelPlayerInfoProgressSlotWidget.SetMaxHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1f95b00
	void PlayIncreaseAnim(); // Function BravoHotelGame.BravoHotelPlayerInfoProgressSlotWidget.PlayIncreaseAnim // (Final|Native|Public) // @ game+0x1f95ae0
	void PlayAdditionalHPAnim(); // Function BravoHotelGame.BravoHotelPlayerInfoProgressSlotWidget.PlayAdditionalHPAnim // (Final|Native|Public) // @ game+0x1f95ac0
	void KnockViewEvent(bool bIsKnockOut); // Function BravoHotelGame.BravoHotelPlayerInfoProgressSlotWidget.KnockViewEvent // (Final|Native|Public) // @ game+0x1f95a30
	void DangerHPEvent(bool bIsShow); // Function BravoHotelGame.BravoHotelPlayerInfoProgressSlotWidget.DangerHPEvent // (Final|Native|Public) // @ game+0x1f959a0
};

// Class BravoHotelGame.BravoHotelPlayerInfoProgressWidget
// Size: 0x2e8 (Inherited: 0x248)
struct UBravoHotelPlayerInfoProgressWidget : UUserWidget {
	struct ABravoHotelCharacter* TargetPawn; // 0x248(0x08)
	float CurrentHealthIncreaseSpeed; // 0x250(0x04)
	float CurrentHealthDecreaseSpeed; // 0x254(0x04)
	float BeforeHealthInterpSpeedRate; // 0x258(0x04)
	float BeforeHealthTimerDelayRate; // 0x25c(0x04)
	char pad_260[0x40]; // 0x260(0x40)
	struct UHorizontalBox* HorizontalBox_Main; // 0x2a0(0x08)
	struct UTextBlock* T_CurrentHealth; // 0x2a8(0x08)
	struct UTextBlock* T_MaxHealth; // 0x2b0(0x08)
	int32_t LastMaxHealth; // 0x2b8(0x04)
	int32_t HealthPerSlot; // 0x2bc(0x04)
	float CureLimitPercent; // 0x2c0(0x04)
	int32_t AnimAdditionalHealth; // 0x2c4(0x04)
	bool bIsDangerHP; // 0x2c8(0x01)
	char pad_2C9[0x7]; // 0x2c9(0x07)
	struct UUserWidget* PlayerInfoProgressSlotWidgetClass; // 0x2d0(0x08)
	struct FMulticastInlineDelegate Delegate_OnPlayerInfoSlotSizeChanged; // 0x2d8(0x10)

	void UpdateOverHealing(int32_t InNewHealth, bool bFlag); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.UpdateOverHealing // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	void ShowDecreaseCurrentHealthAnim(int32_t InNewHealth); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.ShowDecreaseCurrentHealthAnim // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	void SetTargetHealth(int32_t InNewHealth); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.SetTargetHealth // (Final|Native|Protected) // @ game+0x1f968c0
	void SetSlotWidgets(int32_t InNewMaxHealth); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.SetSlotWidgets // (Native|Event|Protected|BlueprintEvent) // @ game+0x1f96830
	void SetSlotPercent(int32_t InNewHealth, int32_t ProgressBarTypeIndex); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.SetSlotPercent // (Final|Native|Protected) // @ game+0x1f96770
	void SetShortTimeHealth(int32_t InNewHealth); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.SetShortTimeHealth // (Final|Native|Protected) // @ game+0x1f966f0
	void SetProgressSlot(int32_t InLastHealth, int32_t InNewHealth, bool bPlayAnim); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.SetProgressSlot // (Final|Native|Protected|BlueprintCallable) // @ game+0x1f965f0
	void SetKnockoutMode(bool bFlag); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.SetKnockoutMode // (Final|Native|Protected) // @ game+0x1f96560
	void SetDangerHPEvent(int32_t InNewHealth, bool bForceUpdate); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.SetDangerHPEvent // (Final|Native|Protected) // @ game+0x1f964a0
	void SetCurrentHealth(int32_t InNewHealth, bool bForceUpdate); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.SetCurrentHealth // (Final|Native|Protected) // @ game+0x1f963e0
	void SetBeforeHealth(int32_t InNewHealth); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.SetBeforeHealth // (Final|Native|Protected) // @ game+0x1f96360
	void PlayIncreaseMaxHealthAnim(int32_t InLastHealth, int32_t InNewHealth); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.PlayIncreaseMaxHealthAnim // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	float GetSlotPos(int32_t InHealth); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.GetSlotPos // (Final|Native|Protected) // @ game+0x1f962d0
	struct TArray<struct UBravoHotelPlayerInfoProgressSlotWidget*> GetNewSlotWidgetsFromLast(int32_t InAdditionalHealth); // Function BravoHotelGame.BravoHotelPlayerInfoProgressWidget.GetNewSlotWidgetsFromLast // (Final|Native|Protected) // @ game+0x1f961f0
};

// Class BravoHotelGame.BravoHotelPlayerInfoWidget
// Size: 0x2c0 (Inherited: 0x248)
struct UBravoHotelPlayerInfoWidget : UUserWidget {
	struct UWidgetSwitcher* WidgetSwitcher_Lung; // 0x248(0x08)
	struct UProgressBar* ProgressBar_Lung; // 0x250(0x08)
	char pad_258[0x58]; // 0x258(0x58)
	struct UUniformGridPanel* BuffListPanel; // 0x2b0(0x08)
	struct UBravoHotelGameBuffSlot* GameBuffSlot_Boost; // 0x2b8(0x08)

	void UpdateWidgetBuff(int32_t KeyIndex, float Timer, float MaxTime); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.UpdateWidgetBuff // (Final|Native|Public|BlueprintCallable) // @ game+0x1f98060
	void SetWeaponBulletCount(int32_t CurrentAmmo, int32_t TotalAmmo); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.SetWeaponBulletCount // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetStance(bool bIsFirstPerson, int32_t Stance, bool bIsHeadbanging); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.SetStance // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetRedLungAnim(bool bIsRed); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.SetRedLungAnim // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetPlayerInfo(struct FMyInfo SetMyInfo); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.SetPlayerInfo // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetHealths(int32_t CurrentHealth, int32_t MaxHealth, int32_t ShortTimeHealth, int32_t TargetHealth, enum class ECharacterState CurrentCharacterState); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.SetHealths // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetFireMode(enum class EWeaponFireMode SetFireMode); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.SetFireMode // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetCurrentWeaponInfo(struct FWeaponWidgetInfo SetWeaponInfo); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.SetCurrentWeaponInfo // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetBackpackPercent(float Percent); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.SetBackpackPercent // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ResetCurrentWeaponInfo(int32_t SlotIndex); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.ResetCurrentWeaponInfo // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnChangeWearableItem(); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.OnChangeWearableItem // (Final|Native|Public) // @ game+0x1f98020
	void OnChangeWeaponAttachments(); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.OnChangeWeaponAttachments // (Final|Native|Public) // @ game+0x151b910
	void OnChangePawnResetEvent(); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.OnChangePawnResetEvent // (Final|Native|Public|BlueprintCallable) // @ game+0x1f98040
	void OnChangeCurrentWeapon(); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.OnChangeCurrentWeapon // (Final|Native|Public) // @ game+0x1f98020
	void OnChangeBackpackItem(); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.OnChangeBackpackItem // (Final|Native|Public) // @ game+0x151b910
	void AddBuff(struct FBuffSlot AddBuffs); // Function BravoHotelGame.BravoHotelPlayerInfoWidget.AddBuff // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelPlayerMarkerWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelPlayerMarkerWidget : UUserWidget {

	void ResetMarkerInfo(bool IsUpdate); // Function BravoHotelGame.BravoHotelPlayerMarkerWidget.ResetMarkerInfo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BHReplicatedPlayerInfo
// Size: 0x200 (Inherited: 0xb0)
struct UBHReplicatedPlayerInfo : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct FName UID; // 0xc0(0x08)
	int32_t UniquePlayerId; // 0xc8(0x04)
	struct FPlayerSeasonInfo SeasonInfo; // 0xcc(0x18)
	int32_t CurrentPCTypeID; // 0xe4(0x04)
	char TeamIndex; // 0xe8(0x01)
	char TeamSize; // 0xe9(0x01)
	char pad_EA[0x2]; // 0xea(0x02)
	int32_t TeamPlayerIconIndex; // 0xec(0x04)
	struct FPerkDeckInfo CurrentPerkDeckInfo; // 0xf0(0x70)
	struct FSupplyBoxInfo SupplyInfoFromServer; // 0x160(0x48)
	struct FWeaponInfo SupplyWeaponInfo; // 0x1a8(0x30)
	bool bIsSuspiciousUser; // 0x1d8(0x01)
	char pad_1D9[0x7]; // 0x1d9(0x07)
	struct FRepNewbieData NewbieData; // 0x1e0(0x20)

	void OnRep_TeamIndex(); // Function BravoHotelGame.BHReplicatedPlayerInfo.OnRep_TeamIndex // (Final|Native|Protected) // @ game+0x1f9bcd0
	void OnRep_SuspiciousUser(); // Function BravoHotelGame.BHReplicatedPlayerInfo.OnRep_SuspiciousUser // (Final|Native|Protected) // @ game+0x1f9bcb0
	void OnRep_SupplyInfo(); // Function BravoHotelGame.BHReplicatedPlayerInfo.OnRep_SupplyInfo // (Final|Native|Protected) // @ game+0x1f9bc90
	void OnRep_NewbieData(); // Function BravoHotelGame.BHReplicatedPlayerInfo.OnRep_NewbieData // (Final|Native|Protected) // @ game+0x1f9bc50
	void OnRep_CurrentPerkDeckInfo(); // Function BravoHotelGame.BHReplicatedPlayerInfo.OnRep_CurrentPerkDeckInfo // (Final|Native|Protected) // @ game+0x1f9bb70
};

// Class BravoHotelGame.BHReplicatedPlayStat
// Size: 0xd8 (Inherited: 0xb0)
struct UBHReplicatedPlayStat : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	bool bAlive; // 0xc0(0x01)
	bool InOuterArea; // 0xc1(0x01)
	uint16_t kills; // 0xc2(0x02)
	uint16_t assists; // 0xc4(0x02)
	uint16_t Deaths; // 0xc6(0x02)
	uint16_t Revives; // 0xc8(0x02)
	uint16_t Resuscitates; // 0xca(0x02)
	int32_t CurrentPerkClassLevel; // 0xcc(0x04)
	char WatchedCount; // 0xd0(0x01)
	char pad_D1[0x7]; // 0xd1(0x07)

	void OnRep_Kills(); // Function BravoHotelGame.BHReplicatedPlayStat.OnRep_Kills // (Final|Native|Protected) // @ game+0x1f9bc30
	void OnRep_InOuterArea(); // Function BravoHotelGame.BHReplicatedPlayStat.OnRep_InOuterArea // (Final|Native|Protected) // @ game+0x1f9bc10
	void OnRep_Assists(); // Function BravoHotelGame.BHReplicatedPlayStat.OnRep_Assists // (Final|Native|Protected) // @ game+0x1f9bb30
	void OnRep_Alive(); // Function BravoHotelGame.BHReplicatedPlayStat.OnRep_Alive // (Final|Native|Protected) // @ game+0x1f9bb10
};

// Class BravoHotelGame.BHReplicatedAppearanceInfo
// Size: 0xe0 (Inherited: 0xb0)
struct UBHReplicatedAppearanceInfo : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct FRepCharacterAppearanceInfo AppearanceInfo; // 0xc0(0x14)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct FTimerHandle TimerHandle_ReplicatedAppearanceInfo; // 0xd8(0x08)

	void OnRep_ReplicatedAppearanceInfo(); // Function BravoHotelGame.BHReplicatedAppearanceInfo.OnRep_ReplicatedAppearanceInfo // (Final|Native|Protected) // @ game+0x1f9bc70
};

// Class BravoHotelGame.BravoHotelPlayerState
// Size: 0x890 (Inherited: 0x428)
struct ABravoHotelPlayerState : APlayerState {
	bool bCriticalTime; // 0x428(0x01)
	char pad_429[0x7]; // 0x429(0x07)
	struct FString MatchingTeamID; // 0x430(0x10)
	uint32_t MatchingTeamIdHash; // 0x440(0x04)
	char MatchableCountByDS; // 0x444(0x01)
	char pad_445[0x3]; // 0x445(0x03)
	struct FString PlayerSessionId; // 0x448(0x10)
	char pad_458[0x10]; // 0x458(0x10)
	int32_t LoginMemberIndex; // 0x468(0x04)
	char pad_46C[0x4]; // 0x46c(0x04)
	struct TArray<struct ABravoHotelPlayerState*> TeamPlayers; // 0x470(0x10)
	char pad_480[0x128]; // 0x480(0x128)
	struct UBHReplicatedPlayerInfo* ReplicatedPlayerInfo; // 0x5a8(0x08)
	struct UBHReplicatedPlayStat* ReplicatedPlayStat; // 0x5b0(0x08)
	struct UBHReplicatedAppearanceInfo* ReplicatedAppearanceInfo; // 0x5b8(0x08)
	struct FMulticastInlineDelegate OnChangePlayerState; // 0x5c0(0x10)
	char pad_5D0[0x8]; // 0x5d0(0x08)
	struct ABravoHotelCharacter* OwnerCharacter; // 0x5d8(0x08)
	struct FPerkVechicleInfo InNmPerkVechicleInfo; // 0x5e0(0x28)
	struct ABravoHotelPlayerSubState* SubState; // 0x608(0x08)
	struct FDummyInfo DummyInfo; // 0x610(0x60)
	struct UBravoHotelGamePlayStatistics* GamePlayStatistics; // 0x670(0x08)
	char pad_678[0x1]; // 0x678(0x01)
	enum class EPlayerState CurrentState; // 0x679(0x01)
	char pad_67A[0x18]; // 0x67a(0x18)
	bool bIsTalking; // 0x692(0x01)
	char pad_693[0x5]; // 0x693(0x05)
	struct TArray<struct FInventoryItemInfo> PersonalSupplyBoxAdditionalItemList; // 0x698(0x10)
	char pad_6A8[0xbc]; // 0x6a8(0xbc)
	int32_t MaterialItemPingIndex; // 0x764(0x04)
	struct TMap<int32_t, struct FMaterialItemPingInfo> MaterialPingList; // 0x768(0x50)
	int32_t LocalPingIndex; // 0x7b8(0x04)
	char pad_7BC[0x4]; // 0x7bc(0x04)
	struct TMap<int32_t, struct FBravoHotelLocalPingInfo> LocalPingList; // 0x7c0(0x50)
	struct FExpertWeaponPingInfo ExpertWeaponPing; // 0x810(0x28)
	char pad_838[0x58]; // 0x838(0x58)

	bool TryGetMarker(struct FVector& OutMarkerPosition); // Function BravoHotelGame.BravoHotelPlayerState.TryGetMarker // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x1f9c470
	void SetRoutePingInfo(struct TArray<struct FVector>& InRouteInfo); // Function BravoHotelGame.BravoHotelPlayerState.SetRoutePingInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f9c3c0
	void SetRotation(struct FRotator& InRotation); // Function BravoHotelGame.BravoHotelPlayerState.SetRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f9c330
	void SetRequestResuscitation(bool bFlag); // Function BravoHotelGame.BravoHotelPlayerState.SetRequestResuscitation // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9c2a0
	void SetPingLocalLocation(struct FVector& InPingLocalLocation); // Function BravoHotelGame.BravoHotelPlayerState.SetPingLocalLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f9c210
	void SetMaxHealth(int32_t InMaxHealth); // Function BravoHotelGame.BravoHotelPlayerState.SetMaxHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9c190
	void SetMarker(struct FBravoHotelPingInfo& NewPingInfo); // Function BravoHotelGame.BravoHotelPlayerState.SetMarker // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1f9c0e0
	void SetLocation(struct FVector& InLocation); // Function BravoHotelGame.BravoHotelPlayerState.SetLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f9c050
	void SetHealth(int32_t InHealth); // Function BravoHotelGame.BravoHotelPlayerState.SetHealth // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9bfd0
	void SetCurrentState(enum class EPlayerState NewState); // Function BravoHotelGame.BravoHotelPlayerState.SetCurrentState // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9bf50
	void ServerSetRoutePingInfo(struct TArray<struct FVector> InRouteInfo); // Function BravoHotelGame.BravoHotelPlayerState.ServerSetRoutePingInfo // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f9be90
	void ServerSetCurrentState(enum class EPlayerState NewState); // Function BravoHotelGame.BravoHotelPlayerState.ServerSetCurrentState // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1f9bde0
	void ServerSetCurrentRotation(struct FRotator NewRotation); // Function BravoHotelGame.BravoHotelPlayerState.ServerSetCurrentRotation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x1f9bd10
	void ResetRoutePingInfo(); // Function BravoHotelGame.BravoHotelPlayerState.ResetRoutePingInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9bcf0
	void OnRep_SetSubState(); // Function BravoHotelGame.BravoHotelPlayerState.OnRep_SetSubState // (Final|Native|Private) // @ game+0x151b910
	void OnRep_CurrentState(enum class EPlayerState OldCurrentState); // Function BravoHotelGame.BravoHotelPlayerState.OnRep_CurrentState // (Final|Native|Protected) // @ game+0x1f9bb90
	void OnRep_ChangeTeamPlayers(); // Function BravoHotelGame.BravoHotelPlayerState.OnRep_ChangeTeamPlayers // (Final|Native|Public) // @ game+0x1f9bb50
	void OnChangePlayerState__DelegateSignature(enum class EPlayerState PlayerState); // DelegateFunction BravoHotelGame.BravoHotelPlayerState.OnChangePlayerState__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	bool IsSpectatorMode(); // Function BravoHotelGame.BravoHotelPlayerState.IsSpectatorMode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9bae0
	bool IsRequestResuscitation(); // Function BravoHotelGame.BravoHotelPlayerState.IsRequestResuscitation // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9bab0
	bool IsFreeSupply(); // Function BravoHotelGame.BravoHotelPlayerState.IsFreeSupply // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9ba80
	bool IsEnemyFor(struct ABravoHotelPlayerState* OtherPlayer); // Function BravoHotelGame.BravoHotelPlayerState.IsEnemyFor // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b9f0
	bool IsAlive(); // Function BravoHotelGame.BravoHotelPlayerState.IsAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b9c0
	char GetWatchedCount(); // Function BravoHotelGame.BravoHotelPlayerState.GetWatchedCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b990
	int32_t GetUniquePlayerId(); // Function BravoHotelGame.BravoHotelPlayerState.GetUniquePlayerId // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b960
	struct FName GetUID(); // Function BravoHotelGame.BravoHotelPlayerState.GetUID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b930
	struct FSeasonTierUpElement GetTierUpElement(int32_t TierID); // Function BravoHotelGame.BravoHotelPlayerState.GetTierUpElement // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f9b6b0
	char GetTeamSize(); // Function BravoHotelGame.BravoHotelPlayerState.GetTeamSize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b680
	int32_t GetTeamPlayerIconIndex(); // Function BravoHotelGame.BravoHotelPlayerState.GetTeamPlayerIconIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b650
	char GetTeamIndex(); // Function BravoHotelGame.BravoHotelPlayerState.GetTeamIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b620
	int32_t GetSeasonTierID(); // Function BravoHotelGame.BravoHotelPlayerState.GetSeasonTierID // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b5f0
	int32_t GetSeasonRP(); // Function BravoHotelGame.BravoHotelPlayerState.GetSeasonRP // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b5c0
	int32_t GetSeasonLevel(); // Function BravoHotelGame.BravoHotelPlayerState.GetSeasonLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b590
	struct TArray<struct FVector> GetRoutePingInfo(); // Function BravoHotelGame.BravoHotelPlayerState.GetRoutePingInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b510
	struct FRotator GetRotation(); // Function BravoHotelGame.BravoHotelPlayerState.GetRotation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b4d0
	int32_t GetRevives(); // Function BravoHotelGame.BravoHotelPlayerState.GetRevives // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b4a0
	int32_t GetResuscitates(); // Function BravoHotelGame.BravoHotelPlayerState.GetResuscitates // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b470
	int32_t GetRemainTeamMemberCount(bool bIgnoreSelf); // Function BravoHotelGame.BravoHotelPlayerState.GetRemainTeamMemberCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b3e0
	int32_t GetRegionPing(); // Function BravoHotelGame.BravoHotelPlayerState.GetRegionPing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b3b0
	struct FVector GetPingLocalLocation(); // Function BravoHotelGame.BravoHotelPlayerState.GetPingLocalLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b370
	struct FBravoHotelPingInfo GetPingInfo(); // Function BravoHotelGame.BravoHotelPlayerState.GetPingInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b320
	struct ABravoHotelCharacter* GetOwnerCharacter(); // Function BravoHotelGame.BravoHotelPlayerState.GetOwnerCharacter // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b2f0
	int32_t GetMaxHealth(); // Function BravoHotelGame.BravoHotelPlayerState.GetMaxHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b2c0
	struct FVector GetLocation(); // Function BravoHotelGame.BravoHotelPlayerState.GetLocation // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b280
	enum class EPlayerState GetLastState(); // Function BravoHotelGame.BravoHotelPlayerState.GetLastState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b260
	int32_t GetKills(); // Function BravoHotelGame.BravoHotelPlayerState.GetKills // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b230
	int32_t GetHealth(); // Function BravoHotelGame.BravoHotelPlayerState.GetHealth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b200
	float GetGoldenTimePercent(); // Function BravoHotelGame.BravoHotelPlayerState.GetGoldenTimePercent // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f9b1d0
	struct UBravoHotelGamePlayStatistics* GetGamePlayStatistics(); // Function BravoHotelGame.BravoHotelPlayerState.GetGamePlayStatistics // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b1a0
	int32_t GetFreeSupplyCount(); // Function BravoHotelGame.BravoHotelPlayerState.GetFreeSupplyCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b170
	bool GetDisconnect(); // Function BravoHotelGame.BravoHotelPlayerState.GetDisconnect // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b140
	int32_t GetDeaths(); // Function BravoHotelGame.BravoHotelPlayerState.GetDeaths // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b110
	enum class EPlayerState GetCurrentState(); // Function BravoHotelGame.BravoHotelPlayerState.GetCurrentState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b0e0
	int32_t GetCurrentPerkLevel(); // Function BravoHotelGame.BravoHotelPlayerState.GetCurrentPerkLevel // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f9b0b0
	struct FName GetCurrentPerkDeck(); // Function BravoHotelGame.BravoHotelPlayerState.GetCurrentPerkDeck // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b080
	enum class ECharacterState GetCharacterState(); // Function BravoHotelGame.BravoHotelPlayerState.GetCharacterState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b050
	enum class EPlayerBehavior GetBehavior(); // Function BravoHotelGame.BravoHotelPlayerState.GetBehavior // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9b020
	int32_t GetAssists(); // Function BravoHotelGame.BravoHotelPlayerState.GetAssists // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f9aff0
	struct FText ExpertWeaponName(int32_t Index); // Function BravoHotelGame.BravoHotelPlayerState.ExpertWeaponName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f9af00
	struct FName ExpertWeaponKey(int32_t Index); // Function BravoHotelGame.BravoHotelPlayerState.ExpertWeaponKey // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1f9ae70
	void ClientRoutePingMessage(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelPlayerState.ClientRoutePingMessage // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1f9ade0
	void ClientDummyInfo(struct FDummyInfo InDummyInfo); // Function BravoHotelGame.BravoHotelPlayerState.ClientDummyInfo // (Final|Net|NetReliableNative|Event|Private|NetClient) // @ game+0x1f9ad20
	void AddRoutePingInfo(struct FVector& RoutePoint); // Function BravoHotelGame.BravoHotelPlayerState.AddRoutePingInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1f9ac90
};

// Class BravoHotelGame.BravoHotelPlayerSubState
// Size: 0x3d0 (Inherited: 0x320)
struct ABravoHotelPlayerSubState : AActor {
	struct FBravoHotelPingInfo PingInfo; // 0x320(0x38)
	struct FVector PingLocalLocation; // 0x358(0x0c)
	char pad_364[0x4]; // 0x364(0x04)
	struct TArray<struct FVector> RoutePingInfo; // 0x368(0x10)
	char pad_378[0x18]; // 0x378(0x18)
	struct FVector_NetQuantize Location; // 0x390(0x0c)
	uint16_t RotationYaw; // 0x39c(0x02)
	char pad_39E[0x2]; // 0x39e(0x02)
	int32_t Health; // 0x3a0(0x04)
	bool bIsDisconnect; // 0x3a4(0x01)
	bool bIsRetired; // 0x3a5(0x01)
	char pad_3A6[0x2]; // 0x3a6(0x02)
	int32_t MaxHealth; // 0x3a8(0x04)
	enum class EPlayerState CurrentState; // 0x3ac(0x01)
	enum class ECharacterState CharacterState; // 0x3ad(0x01)
	char pad_3AE[0x2]; // 0x3ae(0x02)
	int32_t FireCount; // 0x3b0(0x04)
	int32_t CurrentEquipWeaponID; // 0x3b4(0x04)
	bool bIsFireWeapon; // 0x3b8(0x01)
	char pad_3B9[0x3]; // 0x3b9(0x03)
	int32_t RemainGoldentime; // 0x3bc(0x04)
	int32_t MaxGoldentime; // 0x3c0(0x04)
	bool bRequestResuscitation; // 0x3c4(0x01)
	bool VoiceTeamTalk; // 0x3c5(0x01)
	bool VoiceAreaTalk; // 0x3c6(0x01)
	char pad_3C7[0x1]; // 0x3c7(0x01)
	int32_t RegionPing; // 0x3c8(0x04)
	char pad_3CC[0x4]; // 0x3cc(0x04)

	void OnRep_RequestResuscitation(); // Function BravoHotelGame.BravoHotelPlayerSubState.OnRep_RequestResuscitation // (Final|Native|Protected) // @ game+0x1f9d3b0
	void OnRep_ChangePingInfo(); // Function BravoHotelGame.BravoHotelPlayerSubState.OnRep_ChangePingInfo // (Final|Native|Protected) // @ game+0x1f9d390
	void OnRep_ChangeEquipWeapon(); // Function BravoHotelGame.BravoHotelPlayerSubState.OnRep_ChangeEquipWeapon // (Final|Native|Protected) // @ game+0x151b910
};

// Class BravoHotelGame.BravoHotelPoolingActorInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelPoolingActorInterface : UInterface {
};

// Class BravoHotelGame.BravoHotelPoolingActorComponent
// Size: 0x150 (Inherited: 0xb0)
struct UBravoHotelPoolingActorComponent : UActorComponent {
	struct TMap<struct AActor*, int32_t> DefaultPoolingActor; // 0xb0(0x50)
	struct TMap<struct UObject*, struct FActorPoolInfo> ActorPoolInfos; // 0x100(0x50)
};

// Class BravoHotelGame.BravoHotelPopupManager
// Size: 0x48 (Inherited: 0x28)
struct UBravoHotelPopupManager : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TArray<struct UBravoHotelLayerBase*> WidgetLayer; // 0x30(0x10)
	struct UUserWidget* NetworkDelayPopupWidgetRef; // 0x40(0x08)
};

// Class BravoHotelGame.BravoHotelPopupWidget
// Size: 0x268 (Inherited: 0x248)
struct UBravoHotelPopupWidget : UUserWidget {
	char pad_248[0x20]; // 0x248(0x20)

	void SetMessageEx(int32_t ErrorIdx, struct FString ErrorID, struct FString Parameter, bool bConfirm, bool bCancel, bool bWaiting, struct FWaitingEvent& evt); // Function BravoHotelGame.BravoHotelPopupWidget.SetMessageEx // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void Confirm(); // Function BravoHotelGame.BravoHotelPopupWidget.Confirm // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9e100
	void Cancel(); // Function BravoHotelGame.BravoHotelPopupWidget.Cancel // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9e0e0
};

// Class BravoHotelGame.BravoHotelPrefab
// Size: 0x320 (Inherited: 0x320)
struct ABravoHotelPrefab : AActor {
};

// Class BravoHotelGame.BravoHotelProgressInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelProgressInterface : UInterface {
};

// Class BravoHotelGame.BravoHotelProjectileBase
// Size: 0x320 (Inherited: 0x320)
struct ABravoHotelProjectileBase : AActor {
};

// Class BravoHotelGame.BravoHotelProjectile
// Size: 0x4b8 (Inherited: 0x320)
struct ABravoHotelProjectile : ABravoHotelProjectileBase {
	struct USphereComponent* SphereCollision; // 0x320(0x08)
	struct UStaticMeshComponent* Projectile; // 0x328(0x08)
	struct URealisticProjectileComponent* RealisticProjectile; // 0x330(0x08)
	struct UParticleSystemComponent* BulletEffect; // 0x338(0x08)
	struct UParticleSystemComponent* TrailEffectInWater; // 0x340(0x08)
	float Damage; // 0x348(0x04)
	struct FVector StartLocation; // 0x34c(0x0c)
	bool bInWater; // 0x358(0x01)
	char pad_359[0x7]; // 0x359(0x07)
	struct TMap<struct FString, struct UParticleSystem*> TrailEffectsList; // 0x360(0x50)
	struct TMap<struct FString, struct UParticleSystem*> BulletEffectsList; // 0x3b0(0x50)
	struct TMap<struct FString, struct UParticleSystem*> StopEffectsList; // 0x400(0x50)
	bool bSpawnTrailEffect; // 0x450(0x01)
	char pad_451[0x7]; // 0x451(0x07)
	struct TArray<struct FString> TrailNames; // 0x458(0x10)
	struct FVector TrailLocation; // 0x468(0x0c)
	struct FRotator TrailRotation; // 0x474(0x0c)
	bool bChangeBulletEffect; // 0x480(0x01)
	char pad_481[0x7]; // 0x481(0x07)
	struct FString BulletEffectName; // 0x488(0x10)
	struct TArray<struct FString> StopEffectNames; // 0x498(0x10)
	struct ABravoHotelPlayerController* AuthorityController; // 0x4a8(0x08)
	char pad_4B0[0x8]; // 0x4b0(0x08)

	void SpawnTrailEffect(); // Function BravoHotelGame.BravoHotelProjectile.SpawnTrailEffect // (Final|Native|Protected) // @ game+0x1f9f380
	void SetStopEffect(struct FString Name); // Function BravoHotelGame.BravoHotelProjectile.SetStopEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9f290
	void SetSpawnTrailEffect(struct FString Name, struct FVector Location, struct FRotator Rotation); // Function BravoHotelGame.BravoHotelProjectile.SetSpawnTrailEffect // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1f9f110
	void SetInWater(bool bNewInWater); // Function BravoHotelGame.BravoHotelProjectile.SetInWater // (Final|Native|Public) // @ game+0x1f9f080
	void SetChangeBulletEffect(struct FString Name); // Function BravoHotelGame.BravoHotelProjectile.SetChangeBulletEffect // (Final|Native|Public|BlueprintCallable) // @ game+0x1f9ef90
	void ProjectileExitInDoorVolume(struct UInDoorVolumeComponent* InDoorVolume); // Function BravoHotelGame.BravoHotelProjectile.ProjectileExitInDoorVolume // (Native|Public) // @ game+0x1f9ef00
	void ProjectileEnterInDoorVolume(struct UInDoorVolumeComponent* InDoorVolume); // Function BravoHotelGame.BravoHotelProjectile.ProjectileEnterInDoorVolume // (Native|Public) // @ game+0x1f9ee70
	void OnProjectileStop(struct FHitResult& ImpactResult); // Function BravoHotelGame.BravoHotelProjectile.OnProjectileStop // (Native|Protected|HasOutParms) // @ game+0x1f9ed90
	void OnProjectilePenetrate(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity); // Function BravoHotelGame.BravoHotelProjectile.OnProjectilePenetrate // (Native|Protected|HasOutParms|HasDefaults) // @ game+0x1f9ec60
	void OnProjectileBounce(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity); // Function BravoHotelGame.BravoHotelProjectile.OnProjectileBounce // (Native|Protected|HasOutParms|HasDefaults) // @ game+0x1f9eb30
	void OnProjectileBeginOverlap(struct FHitResult& HitResult, int32_t TrajectoryNum, float StartTime, float EndTime); // Function BravoHotelGame.BravoHotelProjectile.OnProjectileBeginOverlap // (Native|Protected|HasOutParms) // @ game+0x1f9e9b0
	void OnProjectileAnyHit(struct FHitResult& HitDetails, struct FVector& ImpactVelocity); // Function BravoHotelGame.BravoHotelProjectile.OnProjectileAnyHit // (Native|Protected|HasOutParms|HasDefaults) // @ game+0x1f9e880
	void OnPenetrationExit(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity); // Function BravoHotelGame.BravoHotelProjectile.OnPenetrationExit // (Native|Protected|HasOutParms|HasDefaults) // @ game+0x1f9e750
	void ChangeBulletEffect(); // Function BravoHotelGame.BravoHotelProjectile.ChangeBulletEffect // (Final|Native|Protected) // @ game+0x1f9e730
};

// Class BravoHotelGame.BravoHotelProjectileBullet
// Size: 0x530 (Inherited: 0x4b8)
struct ABravoHotelProjectileBullet : ABravoHotelProjectile {
	struct TArray<struct FHitResult> BeginOverlapHitResults; // 0x4b8(0x10)
	char pad_4C8[0x8]; // 0x4c8(0x08)
	struct TArray<struct AActor*> HitActors; // 0x4d0(0x10)
	float ImpulsePowerRate; // 0x4e0(0x04)
	char pad_4E4[0x4]; // 0x4e4(0x04)
	struct UBravoHotelDamageType* ProjectileDamageType; // 0x4e8(0x08)
	struct UAkAudioEvent* FlybyAudioEvent; // 0x4f0(0x08)
	struct FVector BulletSpawnLocation; // 0x4f8(0x0c)
	char pad_504[0x4]; // 0x504(0x04)
	struct AActor* FlybyTargetActor; // 0x508(0x08)
	bool bStopUpdateFlyby; // 0x510(0x01)
	char pad_511[0x7]; // 0x511(0x07)
	struct FTimerHandle TimerHandle_UpdateFlyby; // 0x518(0x08)
	char pad_520[0x8]; // 0x520(0x08)
	struct ABravoHotelCharacter* TargetPawn; // 0x528(0x08)

	void UpdateFlyby(); // Function BravoHotelGame.BravoHotelProjectileBullet.UpdateFlyby // (Final|Native|Protected) // @ game+0x1f9f7d0
	void StopUpdateFlyby(); // Function BravoHotelGame.BravoHotelProjectileBullet.StopUpdateFlyby // (Final|Native|Protected) // @ game+0x1f9f7b0
	void SpawnFlybySound(); // Function BravoHotelGame.BravoHotelProjectileBullet.SpawnFlybySound // (Final|Native|Protected) // @ game+0x1f9f790
	bool IsNeedToUpdateFlyby(); // Function BravoHotelGame.BravoHotelProjectileBullet.IsNeedToUpdateFlyby // (Final|Native|Protected|Const) // @ game+0x1f9f760
	void CheckIsValid(); // Function BravoHotelGame.BravoHotelProjectileBullet.CheckIsValid // (Final|Native|Protected) // @ game+0x1f9f740
	void CheckCanUpdateFlyby(); // Function BravoHotelGame.BravoHotelProjectileBullet.CheckCanUpdateFlyby // (Final|Native|Protected) // @ game+0x1f9f720
};

// Class BravoHotelGame.BravoHotelProjectileGrenade
// Size: 0x648 (Inherited: 0x320)
struct ABravoHotelProjectileGrenade : ABravoHotelProjectileBase {
	bool bIgnoreOwner; // 0x320(0x01)
	char pad_321[0x3]; // 0x321(0x03)
	float Damage; // 0x324(0x04)
	float MinimumDamage; // 0x328(0x04)
	float DamageFalloff; // 0x32c(0x04)
	float ImpulseStrength; // 0x330(0x04)
	bool bCanApplyImpulseByBounce; // 0x334(0x01)
	bool bOverrideDropSpeed; // 0x335(0x01)
	char pad_336[0x2]; // 0x336(0x02)
	float DropSpeed; // 0x338(0x04)
	char pad_33C[0x4]; // 0x33c(0x04)
	struct UDamageType* HitDamageTypeClass; // 0x340(0x08)
	struct UDamageType* DamageTypeClass; // 0x348(0x08)
	struct USphereComponent* SphereCollision; // 0x350(0x08)
	struct UStaticMeshComponent* Projectile; // 0x358(0x08)
	struct UParticleSystemComponent* TrailParticleComponent; // 0x360(0x08)
	struct UBravoHotelThrowingWeaponMovementComponent* ProjectileMovement; // 0x368(0x08)
	struct FTimerHandle TimerHandle_GrenadeExplosion; // 0x370(0x08)
	struct FVector GrenadeExplosionEffectScale; // 0x378(0x0c)
	bool bUseActorRotationGrenadeExplosionEffect; // 0x384(0x01)
	char pad_385[0x3]; // 0x385(0x03)
	struct UParticleSystem* GrenadeExplosionEffect; // 0x388(0x08)
	struct UParticleSystem* GrenadeExplosionEffectInWater; // 0x390(0x08)
	struct UParticleSystem* TrailEffectInWater; // 0x398(0x08)
	struct UParticleSystem* SuperTrailEffect; // 0x3a0(0x08)
	struct UParticleSystem* NormalTrailEffect; // 0x3a8(0x08)
	bool bNeedToDeactiveTrailParticle; // 0x3b0(0x01)
	char pad_3B1[0x3]; // 0x3b1(0x03)
	float SuperTrailViewDistance; // 0x3b4(0x04)
	struct UParticleSystemComponent* ShiningEffectComponent; // 0x3b8(0x08)
	struct UParticleSystem* ShiningEffect; // 0x3c0(0x08)
	float ShiningEffectViewDistance; // 0x3c8(0x04)
	char pad_3CC[0x4]; // 0x3cc(0x04)
	struct UParticleSystemComponent* GrenadeTrailEffectInWater; // 0x3d0(0x08)
	struct UAkComponent* AkAudioComponent; // 0x3d8(0x08)
	struct UAkAudioEvent* ExplodeEvent; // 0x3e0(0x08)
	struct UAkAudioEvent* ExplodeEventInWater; // 0x3e8(0x08)
	struct UAkAudioEvent* BoundEvent; // 0x3f0(0x08)
	float RemainExplodeTime; // 0x3f8(0x04)
	float InsideEffectRange; // 0x3fc(0x04)
	float EffectRange; // 0x400(0x04)
	float TriggerRange; // 0x404(0x04)
	struct FAudioPlayingHandle LoopSoundHandle; // 0x408(0x04)
	bool bEnableActiveGrenade; // 0x40c(0x01)
	bool bLocalSameTeam; // 0x40d(0x01)
	char pad_40E[0x2]; // 0x40e(0x02)
	struct TArray<struct ABravoHotelCharacter*> OverlapCharacters; // 0x410(0x10)
	struct TArray<struct AActor*> DotDamagedActors; // 0x420(0x10)
	struct FName GrenadeWeaponName; // 0x430(0x08)
	float HitDamage; // 0x438(0x04)
	float HitDamageToCharacter; // 0x43c(0x04)
	float PenetrateDamage; // 0x440(0x04)
	bool bInWater; // 0x444(0x01)
	char pad_445[0x3]; // 0x445(0x03)
	int32_t BounceCount; // 0x448(0x04)
	bool bUseCookingTime; // 0x44c(0x01)
	bool bUseBoobyTrap; // 0x44d(0x01)
	bool bActiveByHit; // 0x44e(0x01)
	bool bNeedServerDamage; // 0x44f(0x01)
	float BoobyTrapDelayTime; // 0x450(0x04)
	float InitialSpeed; // 0x454(0x04)
	struct FVector InitialVelocity; // 0x458(0x0c)
	bool bUseRotaionProjectileMesh; // 0x464(0x01)
	char pad_465[0x3]; // 0x465(0x03)
	struct FRotator RotationSpeed; // 0x468(0x0c)
	bool bIsStopSimulate; // 0x474(0x01)
	char pad_475[0x3]; // 0x475(0x03)
	struct FVector GuidedLocation; // 0x478(0x0c)
	char pad_484[0x4]; // 0x484(0x04)
	struct FTimerHandle TimerHandle_BoobyTrap; // 0x488(0x08)
	enum class EProjectileGrenadeState ProjectileGrenadeState; // 0x490(0x01)
	bool bUseActiveTriggerActorLocation; // 0x491(0x01)
	char pad_492[0x6]; // 0x492(0x06)
	struct AActor* TriggerActor; // 0x498(0x08)
	char pad_4A0[0x18]; // 0x4a0(0x18)
	bool bApplyShortRangeHitDamage; // 0x4b8(0x01)
	char pad_4B9[0x3]; // 0x4b9(0x03)
	float ShortRangeHitDamageDistance; // 0x4bc(0x04)
	float ShortRangeHitDamageMultiply; // 0x4c0(0x04)
	char pad_4C4[0x4]; // 0x4c4(0x04)
	struct FName WeaponId; // 0x4c8(0x08)
	struct FName ItemId; // 0x4d0(0x08)
	bool bMarkActiveGrenade; // 0x4d8(0x01)
	char pad_4D9[0xaf]; // 0x4d9(0xaf)
	bool DamageAffectedByObstacle; // 0x588(0x01)
	char pad_589[0x3]; // 0x589(0x03)
	float ExplosionEffectRange; // 0x58c(0x04)
	float ExplosionCameraShakeScaleMin; // 0x590(0x04)
	float ExplosionCameraShakeScaleMax; // 0x594(0x04)
	float ExplosionDeafenDurationMin; // 0x598(0x04)
	float ExplosionDeafenDutationMax; // 0x59c(0x04)
	float ExplosionDeafenDistanceLevelClose; // 0x5a0(0x04)
	float ExplosionDeafenDistanceLevelMid; // 0x5a4(0x04)
	struct UCameraShake* ExplosionCameraShake; // 0x5a8(0x08)
	struct FConditionedWeaponInfo ConditionedWeaponInfo; // 0x5b0(0x20)
	struct FRotator DecalRotation; // 0x5d0(0x0c)
	char pad_5DC[0x14]; // 0x5dc(0x14)
	struct TArray<struct UBravoHotelDamageType*> AllowedDamageType; // 0x5f0(0x10)
	float Health; // 0x600(0x04)
	char pad_604[0x4]; // 0x604(0x04)
	struct FMulticastInlineDelegate OnExplosion; // 0x608(0x10)
	struct FMulticastInlineDelegate OnActiveBoobyTrapDelegate; // 0x618(0x10)
	struct FTimerHandle TimerHandle_CheckWarningVoiceEvent; // 0x628(0x08)
	struct FVector ExplosionOriginDeltaLocation; // 0x630(0x0c)
	char pad_63C[0xc]; // 0x63c(0x0c)

	void UpdateTrailParticle(); // Function BravoHotelGame.BravoHotelProjectileGrenade.UpdateTrailParticle // (Final|Native|Protected) // @ game+0x1fa1600
	void UpdateShiningEffect(); // Function BravoHotelGame.BravoHotelProjectileGrenade.UpdateShiningEffect // (Final|Native|Protected) // @ game+0x1fa15e0
	void UpdateCheckCharacterTrigger(); // Function BravoHotelGame.BravoHotelProjectileGrenade.UpdateCheckCharacterTrigger // (Final|Native|Protected) // @ game+0x1fa15c0
	void SetInWater(bool bNewInWater); // Function BravoHotelGame.BravoHotelProjectileGrenade.SetInWater // (Final|Native|Public) // @ game+0x1fa1530
	void ServerMarkActiveGrenade(); // Function BravoHotelGame.BravoHotelProjectileGrenade.ServerMarkActiveGrenade // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1fa14e0
	void ServerDestroyWithoutActive(); // Function BravoHotelGame.BravoHotelProjectileGrenade.ServerDestroyWithoutActive // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1fa1490
	void ServerActiveGrenade(); // Function BravoHotelGame.BravoHotelProjectileGrenade.ServerActiveGrenade // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1fa1440
	struct FAudioPlayingHandle PlayProjectileSound(struct UAkAudioEvent* AudioEvent, struct FString Surface); // Function BravoHotelGame.BravoHotelProjectileGrenade.PlayProjectileSound // (Native|Protected) // @ game+0x1fa1300
	void OnRep_SetTriggerActor(); // Function BravoHotelGame.BravoHotelProjectileGrenade.OnRep_SetTriggerActor // (Native|Protected) // @ game+0x1f143b0
	void OnRep_SetGuidedLocation(); // Function BravoHotelGame.BravoHotelProjectileGrenade.OnRep_SetGuidedLocation // (Final|Native|Protected) // @ game+0x1fa12e0
	void OnRep_ChangeProjectileGrenadeState(); // Function BravoHotelGame.BravoHotelProjectileGrenade.OnRep_ChangeProjectileGrenadeState // (Final|Native|Protected) // @ game+0x1fa12c0
	void OnProjectileMovementStop(struct FHitResult& HitResult); // Function BravoHotelGame.BravoHotelProjectileGrenade.OnProjectileMovementStop // (Native|Protected|HasOutParms) // @ game+0x1fa11e0
	void OnProjectileMovementPenetrate(struct FHitResult& HitResult, struct FVector& ImpactVelocity); // Function BravoHotelGame.BravoHotelProjectileGrenade.OnProjectileMovementPenetrate // (Native|Protected|HasOutParms|HasDefaults) // @ game+0x1fa10b0
	void OnProjectileMovementBounce(struct FHitResult& HitResult, struct FVector& ImpactVelocity); // Function BravoHotelGame.BravoHotelProjectileGrenade.OnProjectileMovementBounce // (Native|Protected|HasOutParms|HasDefaults) // @ game+0x1fa0f80
	void OnExplosion__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelProjectileGrenade.OnExplosion__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnActiveBoobyTrapDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelProjectileGrenade.OnActiveBoobyTrapDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void MulticastDestroyWithoutActive(); // Function BravoHotelGame.BravoHotelProjectileGrenade.MulticastDestroyWithoutActive // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1f10660
	void MulticastActiveGrenade(); // Function BravoHotelGame.BravoHotelProjectileGrenade.MulticastActiveGrenade // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1e477f0
	void GrenadeExplosion(); // Function BravoHotelGame.BravoHotelProjectileGrenade.GrenadeExplosion // (Final|Native|Protected) // @ game+0x1fa0f60
	float GetDistanceToViewTarget(); // Function BravoHotelGame.BravoHotelProjectileGrenade.GetDistanceToViewTarget // (Final|Native|Public|Const) // @ game+0x1fa0f30
	void DoSetProjectileGrenadeState(enum class EProjectileGrenadeState NewState, struct AActor* NewTriggerActor); // Function BravoHotelGame.BravoHotelProjectileGrenade.DoSetProjectileGrenadeState // (Final|Native|Public) // @ game+0x1fa0e70
	void DestroyWithoutActive(); // Function BravoHotelGame.BravoHotelProjectileGrenade.DestroyWithoutActive // (Native|Public) // @ game+0x1fa0e50
	void ClientSetProjectileGrenadeState(enum class EProjectileGrenadeState NewState, struct AActor* NewTriggerActor); // Function BravoHotelGame.BravoHotelProjectileGrenade.ClientSetProjectileGrenadeState // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x1fa0d80
	void CheckWarningVoiceEvent(); // Function BravoHotelGame.BravoHotelProjectileGrenade.CheckWarningVoiceEvent // (Final|Native|Private) // @ game+0x1fa0d60
	void ActiveThrowingProjectileMainEffect(); // Function BravoHotelGame.BravoHotelProjectileGrenade.ActiveThrowingProjectileMainEffect // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool ActiveGrenade(); // Function BravoHotelGame.BravoHotelProjectileGrenade.ActiveGrenade // (Native|Public|BlueprintCallable) // @ game+0x1fa0d30
	void ActivateSuperTrail(float TargetViewDistance); // Function BravoHotelGame.BravoHotelProjectileGrenade.ActivateSuperTrail // (Final|Native|Public) // @ game+0x1fa0cb0
	void ActivateShiningEffect(float TargetViewDistance); // Function BravoHotelGame.BravoHotelProjectileGrenade.ActivateShiningEffect // (Final|Native|Public) // @ game+0x1fa0c30
};

// Class BravoHotelGame.BravoHotelProjectileFireAx
// Size: 0x668 (Inherited: 0x648)
struct ABravoHotelProjectileFireAx : ABravoHotelProjectileGrenade {
	struct ABravoHotelSimulationActor* SimulationActorClass; // 0x648(0x08)
	bool bAttachAbsolutely; // 0x650(0x01)
	char pad_651[0x7]; // 0x651(0x07)
	struct UAkAudioEvent* FlybyEvent; // 0x658(0x08)
	struct FAudioPlayingHandle FlybySoundHandle; // 0x660(0x04)
	char pad_664[0x4]; // 0x664(0x04)

	void OnAudioEmitterUnregistered(); // Function BravoHotelGame.BravoHotelProjectileFireAx.OnAudioEmitterUnregistered // (Final|Native|Private) // @ game+0x1f9f9d0
	void OnAudioEmitterRegistered(); // Function BravoHotelGame.BravoHotelProjectileFireAx.OnAudioEmitterRegistered // (Final|Native|Private) // @ game+0x1f9f9b0
};

// Class BravoHotelGame.BravoHotelProjectileFlame
// Size: 0x598 (Inherited: 0x4b8)
struct ABravoHotelProjectileFlame : ABravoHotelProjectile {
	struct TSet<struct TWeakObjectPtr<struct AActor>> OverlappedVehicles; // 0x4b8(0x50)
	struct UParticleSystemComponent* FlameParticle; // 0x508(0x08)
	struct UParticleSystemComponent* FlameEndParticle; // 0x510(0x08)
	struct UAkComponent* AkAudioComponent; // 0x518(0x08)
	struct AActor* FireCellClass; // 0x520(0x08)
	float LifeTime; // 0x528(0x04)
	float DamageTime; // 0x52c(0x04)
	float FireDamage; // 0x530(0x04)
	float FireShrinkTime; // 0x534(0x04)
	float FireCellSpawnTime; // 0x538(0x04)
	float FirePropagationRange; // 0x53c(0x04)
	int32_t FirePropagationLevelMax; // 0x540(0x04)
	float FirePropagationLevelWidth; // 0x544(0x04)
	struct TArray<float> FirePropagationDivideAnglePerLevel; // 0x548(0x10)
	struct UAkAudioEvent* FlybyEvent; // 0x558(0x08)
	struct FAudioPlayingHandle FlybySoundHandle; // 0x560(0x04)
	struct FName WeaponName; // 0x564(0x08)
	char pad_56C[0x4]; // 0x56c(0x04)
	struct FString NewWeaponName; // 0x570(0x10)
	char pad_580[0x18]; // 0x580(0x18)
};

// Class BravoHotelGame.BravoHotelProjectileGrenadeBomb
// Size: 0x688 (Inherited: 0x648)
struct ABravoHotelProjectileGrenadeBomb : ABravoHotelProjectileGrenade {
	float LandHeight; // 0x648(0x04)
	bool bUsingActiveGrenadeByTick; // 0x64c(0x01)
	enum class ECollisionChannel DamageCollisionType; // 0x64d(0x01)
	bool bIgnoreCollision; // 0x64e(0x01)
	char pad_64F[0x11]; // 0x64f(0x11)
	struct UMaterialInterface* ExplosionGroundDecalMaterial; // 0x660(0x08)
	struct FVector ExplosionGroundDecalSize; // 0x668(0x0c)
	char pad_674[0x4]; // 0x674(0x04)
	struct UDecalComponent* ExplosionGroundDecalComponent; // 0x678(0x08)
	struct APlayerController* AuthorController; // 0x680(0x08)

	void AddExplosionDecalEffect(); // Function BravoHotelGame.BravoHotelProjectileGrenadeBomb.AddExplosionDecalEffect // (Final|Native|Protected) // @ game+0x1fa1970
};

// Class BravoHotelGame.BravoHotelProjectileGrenadeC4
// Size: 0x6d0 (Inherited: 0x648)
struct ABravoHotelProjectileGrenadeC4 : ABravoHotelProjectileGrenade {
	struct UMaterialInterface* ExplosionGroundDecalMaterial; // 0x648(0x08)
	struct FVector ExplosionGroundDecalSize; // 0x650(0x0c)
	char pad_65C[0x4]; // 0x65c(0x04)
	struct UDecalComponent* ExplosionGroundDecalComponent; // 0x660(0x08)
	char pad_668[0x8]; // 0x668(0x08)
	float ActiveDelayTime; // 0x670(0x04)
	char pad_674[0x4]; // 0x674(0x04)
	struct UParticleSystemComponent* TrapEffect; // 0x678(0x08)
	struct UParticleSystem* TrapTriggerEffect; // 0x680(0x08)
	struct UParticleSystem* TrapDestoryEffect; // 0x688(0x08)
	struct UAkAudioEvent* TrapLoopStartEvent; // 0x690(0x08)
	struct UAkAudioEvent* TrapLoopStopEvent; // 0x698(0x08)
	struct UAkAudioEvent* TrapTriggerEvent; // 0x6a0(0x08)
	struct UAkAudioEvent* AttachEvent; // 0x6a8(0x08)
	struct FAudioPlayingHandle TrapLoopSoundHandle; // 0x6b0(0x04)
	char pad_6B4[0x4]; // 0x6b4(0x04)
	struct TWeakObjectPtr<struct UPrimitiveComponent> AttachedComponent; // 0x6b8(0x08)
	struct FTimerHandle TimerHandle_CheckAttachedComponent; // 0x6c0(0x08)
	int32_t HitItem; // 0x6c8(0x04)
	float ExplosionOriginDeltaLocationUp; // 0x6cc(0x04)

	void OnAudioEmitterUnregistered(); // Function BravoHotelGame.BravoHotelProjectileGrenadeC4.OnAudioEmitterUnregistered // (Final|Native|Protected) // @ game+0x1fa1bf0
	void OnAudioEmitterRegistered(); // Function BravoHotelGame.BravoHotelProjectileGrenadeC4.OnAudioEmitterRegistered // (Final|Native|Protected) // @ game+0x1fa1bd0
	void CheckAttachedComponent(); // Function BravoHotelGame.BravoHotelProjectileGrenadeC4.CheckAttachedComponent // (Final|Native|Protected) // @ game+0x1fa1bb0
	void AddExplosionDecalEffect(); // Function BravoHotelGame.BravoHotelProjectileGrenadeC4.AddExplosionDecalEffect // (Final|Native|Protected) // @ game+0x1fa1b90
};

// Class BravoHotelGame.BravoHotelProjectileGrenadeDynamite
// Size: 0x668 (Inherited: 0x648)
struct ABravoHotelProjectileGrenadeDynamite : ABravoHotelProjectileGrenade {
	struct UMaterialInterface* ExplosionGroundDecalMaterial; // 0x648(0x08)
	struct FVector ExplosionGroundDecalSize; // 0x650(0x0c)
	char pad_65C[0x4]; // 0x65c(0x04)
	struct UDecalComponent* ExplosionGroundDecalComponent; // 0x660(0x08)

	void AddExplosionDecalEffect(); // Function BravoHotelGame.BravoHotelProjectileGrenadeDynamite.AddExplosionDecalEffect // (Final|Native|Protected) // @ game+0x1fa1d80
};

// Class BravoHotelGame.BravoHotelProjectileGrenadeFlashbang
// Size: 0x6c8 (Inherited: 0x648)
struct ABravoHotelProjectileGrenadeFlashbang : ABravoHotelProjectileGrenade {
	struct UCurveFloat* AngleCurve; // 0x648(0x08)
	struct UCurveFloat* TimeCurve; // 0x650(0x08)
	struct UCameraPostProcessPreset* PostProcessFlashBangClass; // 0x658(0x08)
	float PostProcessDurationTime; // 0x660(0x04)
	float PostProcessRateTime; // 0x664(0x04)
	struct TArray<struct FBlindCharacter> BlindCharacters; // 0x668(0x10)
	struct FTimerHandle TimeHandler_ActiveFlashBang; // 0x678(0x08)
	char pad_680[0x10]; // 0x680(0x10)
	struct UParticleSystemComponent* BoobyTrapEffect; // 0x690(0x08)
	struct UParticleSystem* BoobyTrapTriggerEffect; // 0x698(0x08)
	struct UParticleSystem* BoobyTrapDestoryEffect; // 0x6a0(0x08)
	struct UAkAudioEvent* BoobyTrapLoopStartEvent; // 0x6a8(0x08)
	struct UAkAudioEvent* BoobyTrapLoopStopEvent; // 0x6b0(0x08)
	struct UAkAudioEvent* BoobyTrapTriggerEvent; // 0x6b8(0x08)
	struct FAudioPlayingHandle BoobyTrapLoopSoundHandle; // 0x6c0(0x04)
	char pad_6C4[0x4]; // 0x6c4(0x04)

	void PlayFlashbangGrenade(); // Function BravoHotelGame.BravoHotelProjectileGrenadeFlashbang.PlayFlashbangGrenade // (Final|Native|Protected) // @ game+0x1fa2240
	void OnAudioEmitterUnregistered(); // Function BravoHotelGame.BravoHotelProjectileGrenadeFlashbang.OnAudioEmitterUnregistered // (Final|Native|Protected) // @ game+0x1fa2220
	void OnAudioEmitterRegistered(); // Function BravoHotelGame.BravoHotelProjectileGrenadeFlashbang.OnAudioEmitterRegistered // (Final|Native|Protected) // @ game+0x1fa2200
};

// Class BravoHotelGame.BravoHotelProjectileGrenadeFragment
// Size: 0x688 (Inherited: 0x648)
struct ABravoHotelProjectileGrenadeFragment : ABravoHotelProjectileGrenade {
	struct UMaterialInterface* ExplosionGroundDecalMaterial; // 0x648(0x08)
	struct FVector ExplosionGroundDecalSize; // 0x650(0x0c)
	char pad_65C[0x4]; // 0x65c(0x04)
	struct UDecalComponent* ExplosionGroundDecalComponent; // 0x660(0x08)
	struct UMaterialInstanceDynamic* GroundDecalDynamicMaterial; // 0x668(0x08)
	char pad_670[0x8]; // 0x670(0x08)
	struct UAkAudioEvent* FlybyEvent; // 0x678(0x08)
	struct FAudioPlayingHandle FlybySoundHandle; // 0x680(0x04)
	char pad_684[0x4]; // 0x684(0x04)

	void AddExplosionDecalEffect(); // Function BravoHotelGame.BravoHotelProjectileGrenadeFragment.AddExplosionDecalEffect // (Final|Native|Protected) // @ game+0x1fa23d0
};

// Class BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail
// Size: 0x7f8 (Inherited: 0x648)
struct ABravoHotelProjectileGrenadeMolotovCocktail : ABravoHotelProjectileGrenade {
	struct UAkAudioEvent* FireStartSound; // 0x648(0x08)
	struct UAkAudioEvent* FireEndSound; // 0x650(0x08)
	struct FTimerHandle TimeHandle_EndFirewallSound; // 0x658(0x08)
	struct UParticleSystemComponent* MolotovFireTrailParticle; // 0x660(0x08)
	struct UParticleSystemComponent* BoobyTrapEffect; // 0x668(0x08)
	struct UParticleSystem* BoobyTrapTriggerEffect; // 0x670(0x08)
	struct UParticleSystem* BoobyTrapDestoryEffect; // 0x678(0x08)
	struct UAkAudioEvent* BoobyTrapLoopStartEvent; // 0x680(0x08)
	struct UAkAudioEvent* BoobyTrapLoopStopEvent; // 0x688(0x08)
	struct UAkAudioEvent* BoobyTrapTriggerEvent; // 0x690(0x08)
	struct FAudioPlayingHandle BoobyTrapLoopSoundHandle; // 0x698(0x04)
	char pad_69C[0x4]; // 0x69c(0x04)
	struct FTimerHandle TimeHandler_ActiveMolotovCocktail; // 0x6a0(0x08)
	char pad_6A8[0x8]; // 0x6a8(0x08)
	struct ABravoHotelProjectileMolotovFireCell* FireCellClass; // 0x6b0(0x08)
	struct TArray<struct ABravoHotelProjectileMolotovFireCell*> MolotovFireCells; // 0x6b8(0x10)
	char pad_6C8[0x8]; // 0x6c8(0x08)
	struct FTimerHandle TimeHandle_SpreadingMolotov; // 0x6d0(0x08)
	struct FTimerHandle TimeHandle_ShrinkingMolotov; // 0x6d8(0x08)
	struct TArray<struct FVector> FireLocations; // 0x6e0(0x10)
	struct TArray<struct UParticleSystemComponent*> FirePropagations; // 0x6f0(0x10)
	char pad_700[0x80]; // 0x700(0x80)
	float FireSpreadFirstDelayTime; // 0x780(0x04)
	float FireSpreadTime; // 0x784(0x04)
	float FireShrinkTime; // 0x788(0x04)
	char pad_78C[0x44]; // 0x78c(0x44)
	bool bEnableFireWall; // 0x7d0(0x01)
	char pad_7D1[0x3]; // 0x7d1(0x03)
	int32_t FireWallCellCount; // 0x7d4(0x04)
	float FireWallCellWidth; // 0x7d8(0x04)
	int32_t FirePropagationLevelMax; // 0x7dc(0x04)
	float FirePropagationLevelWidth; // 0x7e0(0x04)
	char pad_7E4[0x4]; // 0x7e4(0x04)
	struct TArray<float> FirePropagationDivideAnglePerLevel; // 0x7e8(0x10)

	void SpreadingFirePropagation(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.SpreadingFirePropagation // (Final|Native|Protected) // @ game+0x1fa2b20
	void SpawnFireCells(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.SpawnFireCells // (Final|Native|Protected) // @ game+0x1fa2b00
	void ShrinkingFirePropagation(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.ShrinkingFirePropagation // (Final|Native|Protected) // @ game+0x1fa2ae0
	void ShrinkFireCells(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.ShrinkFireCells // (Final|Native|Protected) // @ game+0x1fa2ac0
	void SetTimerSpreadingFirePropagation(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.SetTimerSpreadingFirePropagation // (Final|Native|Protected) // @ game+0x1fa2aa0
	void SetTimerSpreadingFireCell(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.SetTimerSpreadingFireCell // (Final|Native|Protected) // @ game+0x1fa2a80
	void SetTimerShrinkingFirePropagation(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.SetTimerShrinkingFirePropagation // (Final|Native|Protected) // @ game+0x1fa2a60
	void SetTimerShrinkingFireCell(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.SetTimerShrinkingFireCell // (Final|Native|Protected) // @ game+0x1fa2a40
	void SetEightDirectionValue(int32_t DirNum, float& DirX, float& DirY); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.SetEightDirectionValue // (Final|Native|Protected|HasOutParms) // @ game+0x1fa2920
	void ScatteringFireCellLocation(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.ScatteringFireCellLocation // (Final|Native|Protected) // @ game+0x1fa2900
	void PlayMolotovGrenade(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.PlayMolotovGrenade // (Final|Native|Protected) // @ game+0x1fa28c0
	void PlayMolotoveGrenade_SpawnFireCell(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.PlayMolotoveGrenade_SpawnFireCell // (Final|Native|Protected) // @ game+0x1fa28e0
	void OnAudioEmitterUnregistered(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.OnAudioEmitterUnregistered // (Final|Native|Private) // @ game+0x1fa28a0
	void OnAudioEmitterRegistered(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.OnAudioEmitterRegistered // (Final|Native|Private) // @ game+0x1fa2880
	void GenerateFireCell(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.GenerateFireCell // (Final|Native|Protected) // @ game+0x1fa2860
	void EndFirewallLoopSound(); // Function BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.EndFirewallLoopSound // (Final|Native|Protected) // @ game+0x1fa2840
};

// Class BravoHotelGame.BravoHotelProjectileGrenadeNuclear
// Size: 0x6a0 (Inherited: 0x648)
struct ABravoHotelProjectileGrenadeNuclear : ABravoHotelProjectileGrenade {
	struct UMaterialInterface* ExplosionGroundDecalMaterial; // 0x648(0x08)
	struct FVector ExplosionGroundDecalSize; // 0x650(0x0c)
	char pad_65C[0x4]; // 0x65c(0x04)
	struct UAkAudioEvent* FallingEvent; // 0x660(0x08)
	float FallingSoundDelayTime; // 0x668(0x04)
	char pad_66C[0x4]; // 0x66c(0x04)
	struct UDecalComponent* ExplosionGroundDecalComponent; // 0x670(0x08)
	char pad_678[0x18]; // 0x678(0x18)
	float LandHeight; // 0x690(0x04)
	char pad_694[0x4]; // 0x694(0x04)
	struct APlayerController* AuthorController; // 0x698(0x08)
};

// Class BravoHotelGame.BravoHotelProjectileGrenadeSmoke
// Size: 0x7e0 (Inherited: 0x648)
struct ABravoHotelProjectileGrenadeSmoke : ABravoHotelProjectileGrenade {
	struct UParticleSystemComponent* SmokeTrailEffectComponent; // 0x648(0x08)
	struct UParticleSystemComponent* SpawnedSmokeFxComponent; // 0x650(0x08)
	float SmokeLifeTime; // 0x658(0x04)
	int32_t SmokeTranslucencySortPriority; // 0x65c(0x04)
	struct UAkAudioEvent* SmokeStartEvent; // 0x660(0x08)
	struct UAkAudioEvent* SmokeEndEvent; // 0x668(0x08)
	float SeeThroughSmokeOpacity; // 0x670(0x04)
	float OpacityInSpeed; // 0x674(0x04)
	float OpacityOutSpeed; // 0x678(0x04)
	float SmokeCheckTime; // 0x67c(0x04)
	float PoisonCheckTime; // 0x680(0x04)
	float PoisonCheckRange; // 0x684(0x04)
	struct TArray<struct FName> SmokeDebuffs; // 0x688(0x10)
	bool bActiveSmokeGrenade; // 0x698(0x01)
	bool bActiveSmokeEffect; // 0x699(0x01)
	char pad_69A[0x6]; // 0x69a(0x06)
	struct TArray<struct FVector> SpawnLocations; // 0x6a0(0x10)
	char pad_6B0[0x108]; // 0x6b0(0x108)
	struct TArray<struct ABravoHotelCharacter*> AICharacters; // 0x7b8(0x10)
	char pad_7C8[0x18]; // 0x7c8(0x18)

	void SmokeEffectFinished(struct UParticleSystemComponent* PSystem); // Function BravoHotelGame.BravoHotelProjectileGrenadeSmoke.SmokeEffectFinished // (Final|Native|Public) // @ game+0x1fa3520
	void PlaySmokeGrenadeEffect(); // Function BravoHotelGame.BravoHotelProjectileGrenadeSmoke.PlaySmokeGrenadeEffect // (Final|Native|Protected) // @ game+0x1fa3500
	void OnSmokeParticleCollide(struct FName EventName, float EmitterTime, int32_t ParticleTime, struct FVector Location, struct FVector Velocity, struct FVector Direction, struct FVector Normal, struct FName BoneName, struct UPhysicalMaterial* PhysMat); // Function BravoHotelGame.BravoHotelProjectileGrenadeSmoke.OnSmokeParticleCollide // (Final|Native|Public|HasDefaults) // @ game+0x1fa3250
	void OnAudioEmitterUnregistered(); // Function BravoHotelGame.BravoHotelProjectileGrenadeSmoke.OnAudioEmitterUnregistered // (Final|Native|Public) // @ game+0x1fa3230
	void OnAudioEmitterRegistered(); // Function BravoHotelGame.BravoHotelProjectileGrenadeSmoke.OnAudioEmitterRegistered // (Final|Native|Public) // @ game+0x1fa3210
	void FinishSmokeEffectByTimer(); // Function BravoHotelGame.BravoHotelProjectileGrenadeSmoke.FinishSmokeEffectByTimer // (Final|Native|Public) // @ game+0x1fa31f0
	void CheckInSmoke(float CheckDelta); // Function BravoHotelGame.BravoHotelProjectileGrenadeSmoke.CheckInSmoke // (Native|Protected) // @ game+0x1fa3170
	void CheckApplyDamageInSmoke(float DeltaSeconds); // Function BravoHotelGame.BravoHotelProjectileGrenadeSmoke.CheckApplyDamageInSmoke // (Final|Native|Protected) // @ game+0x1fa30f0
};

// Class BravoHotelGame.BravoHotelProjectileMolotovFireCell
// Size: 0x3a8 (Inherited: 0x320)
struct ABravoHotelProjectileMolotovFireCell : AActor {
	struct UBoxComponent* FireRoot; // 0x320(0x08)
	struct UParticleSystemComponent* FireEffect; // 0x328(0x08)
	float LifeTime; // 0x330(0x04)
	char pad_334[0x4]; // 0x334(0x04)
	struct TArray<struct ABravoHotelCharacter*> DamagedCharacters; // 0x338(0x10)
	struct ABravoHotelCharacter* Attacker; // 0x348(0x08)
	struct ABravoHotelProjectileGrenadeMolotovCocktail* OwnerProjectileGrenade; // 0x350(0x08)
	int32_t DamageTime; // 0x358(0x04)
	float FireDamage; // 0x35c(0x04)
	float LimitRange; // 0x360(0x04)
	bool bIgnoreAttacker; // 0x364(0x01)
	char pad_365[0x3]; // 0x365(0x03)
	struct TWeakObjectPtr<struct UPrimitiveComponent> HitComponent; // 0x368(0x08)
	struct FTimerHandle TimerHandle_CheckHitComponent; // 0x370(0x08)
	struct FTimerHandle TimeHandle_LifeTime; // 0x378(0x08)
	struct FTimerHandle TimeHandle_CheckDistanceToPlayer; // 0x380(0x08)
	struct UDamageType* DamageTypeClass; // 0x388(0x08)
	char pad_390[0x4]; // 0x390(0x04)
	struct TWeakObjectPtr<struct ABravoHotelCharacter> LocalPlayingCharacter; // 0x394(0x08)
	char pad_39C[0xc]; // 0x39c(0x0c)

	void OnOverlapEnd(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BravoHotelGame.BravoHotelProjectileMolotovFireCell.OnOverlapEnd // (Final|Native|Protected) // @ game+0x1fa3a90
	void OnOverlapBegin(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.BravoHotelProjectileMolotovFireCell.OnOverlapBegin // (Final|Native|Protected|HasOutParms) // @ game+0x1fa3880
	struct ABravoHotelProjectileGrenadeMolotovCocktail* GetOwnerProjectileGrenade(); // Function BravoHotelGame.BravoHotelProjectileMolotovFireCell.GetOwnerProjectileGrenade // (Final|Native|Public|Const) // @ game+0x1fa3860
	void EndFireEffect(); // Function BravoHotelGame.BravoHotelProjectileMolotovFireCell.EndFireEffect // (Final|Native|Protected) // @ game+0x1fa3840
	void CheckHitComponent(); // Function BravoHotelGame.BravoHotelProjectileMolotovFireCell.CheckHitComponent // (Final|Native|Protected) // @ game+0x1fa3820
	void CheckDistanceToLocalPlayer(); // Function BravoHotelGame.BravoHotelProjectileMolotovFireCell.CheckDistanceToLocalPlayer // (Final|Native|Protected) // @ game+0x1fa3800
};

// Class BravoHotelGame.BravoHotelQuestComponent
// Size: 0x150 (Inherited: 0xb0)
struct UBravoHotelQuestComponent : UActorComponent {
	struct TArray<struct FSeasonQuestInfo> SeasonQuestInfos; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnScenarioQuestStartDelegate; // 0xc0(0x10)
	struct FMulticastInlineDelegate OnScenarioQuestUpdateDelegate; // 0xd0(0x10)
	struct FMulticastInlineDelegate OnScenarioQuestStopDelegate; // 0xe0(0x10)
	struct FQuestInfo ScenarioQuestInfo; // 0xf0(0x30)
	char pad_120[0x18]; // 0x120(0x18)
	struct UBravoHotelScenarioWidget* ScenarioWidgetClass; // 0x138(0x08)
	struct UBravoHotelScenarioWidget* CurrentScenarioWidget; // 0x140(0x08)
	char pad_148[0x8]; // 0x148(0x08)

	void StopScenarioQuest(); // Function BravoHotelGame.BravoHotelQuestComponent.StopScenarioQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1fa4cc0
	void StartScenarioQuest(struct FName ScenarioKey); // Function BravoHotelGame.BravoHotelQuestComponent.StartScenarioQuest // (Final|Native|Public|BlueprintCallable) // @ game+0x1fa4c40
	void OnRep_SeasonQuestInfos(); // Function BravoHotelGame.BravoHotelQuestComponent.OnRep_SeasonQuestInfos // (Final|Native|Protected) // @ game+0x1fa4c20
	void OnQuestInfoEvent__DelegateSignature(struct UBravoHotelQuestComponent* QuestComponent); // DelegateFunction BravoHotelGame.BravoHotelQuestComponent.OnQuestInfoEvent__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnQuestEvent(struct FQuestEventInfo& QuestEventInfo); // Function BravoHotelGame.BravoHotelQuestComponent.OnQuestEvent // (Final|Native|Public|HasOutParms) // @ game+0x1fa4a40
	void K2_TutorialPlayExitLog(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelQuestComponent.K2_TutorialPlayExitLog // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fa49d0
	void K2_CompleteScenarioQuest(struct UObject* WorldContextObject); // Function BravoHotelGame.BravoHotelQuestComponent.K2_CompleteScenarioQuest // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fa4960
	void K2_AddScenarioQuestEvent(struct UObject* WorldContextObject, int32_t TaskIndex, int32_t Count); // Function BravoHotelGame.BravoHotelQuestComponent.K2_AddScenarioQuestEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fa4870
	struct UBravoHotelScenarioWidget* GetScenarioWidget(); // Function BravoHotelGame.BravoHotelQuestComponent.GetScenarioWidget // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1fa4840
	struct FQuestTaskElement GetQuestTaskData(struct FQuestTaskInfo& QuestTaskInfo); // Function BravoHotelGame.BravoHotelQuestComponent.GetQuestTaskData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1fa4700
	struct FQuestData GetQuestData(struct FQuestInfo& QuestInfo); // Function BravoHotelGame.BravoHotelQuestComponent.GetQuestData // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x1fa4620
	void EndScenario(); // Function BravoHotelGame.BravoHotelQuestComponent.EndScenario // (Final|Native|Public|BlueprintCallable) // @ game+0x1fa4600
};

// Class BravoHotelGame.BravoHotelQuestManager
// Size: 0xf8 (Inherited: 0x28)
struct UBravoHotelQuestManager : UObject {
	char pad_28[0x80]; // 0x28(0x80)
	struct TMap<struct FString, struct FMulticastInlineDelegate> AddQuestEventDelegates; // 0xa8(0x50)
};

// Class BravoHotelGame.BravoHotelRangedWeapon
// Size: 0x22a0 (Inherited: 0x1bd0)
struct ABravoHotelRangedWeapon : ABravoHotelWeaponBase {
	char pad_1BD0[0x330]; // 0x1bd0(0x330)
	struct UWeaponAttachmentComponent* AttachmentComponent; // 0x1f00(0x08)
	char pad_1F08[0x60]; // 0x1f08(0x60)
	struct UBravoHotelMainWidget* MainWidgetRef; // 0x1f68(0x08)
	char pad_1F70[0x2dc]; // 0x1f70(0x2dc)
	char bLoopedFireAnim : 1; // 0x224c(0x01)
	struct FAnimSlot FireAnim; // 0x1be0(0x10)
	struct FAnimSlot FireWeaponAnim; // 0x1e08(0x10)
	struct FAnimSlot BoltActionPlayerAnim; // 0x1cd0(0x10)
	struct FAnimSlot BoltActionWeaponAnim; // 0x2260(0x10)
	struct FAnimSlot BoltActionPronePlayerAnim; // 0x1c08(0x10)
	struct FAnimSlot BoltActionProneWeaponAnim; // 0x2208(0x10)
	bool bIsEquippingVerticalgrip; // 0x2288(0x01)
	struct FVector JointTargetLocationL; // 0x20bc(0x0c)
	struct FVector JointTargetLocationR; // 0x1c94(0x0c)
	struct FVector EffectorLocationR; // 0x1ed8(0x0c)
	float DeltaCollideHandIKDistance; // 0x1c50(0x04)
	bool bAttachToCamera; // 0x1e38(0x01)
	int32_t FiringCountToLoop; // 0x1f60(0x04)
	struct FRangedWeaponFireSound FireSounds1P; // 0x1fd0(0x20)
	struct FRangedWeaponFireSound FireSounds3P; // 0x2220(0x20)
	struct UAkAudioEvent* NoAmmoEvent; // 0x1e58(0x08)
	bool bIsADS; // 0x1eb8(0x01)
	bool bIsKeepingADS_WhileBoltAction; // 0x1ce4(0x01)
	bool bIsGatlingWeapon; // 0x2058(0x01)
	struct UCurveFloat* DamgeCorrectCurveByVelocity; // 0x1f20(0x08)
	struct UBravoHotelMuzzleEffectComponent* MuzzleEffectComponent; // 0x1f30(0x08)
	struct TMap<struct FName, struct UParticleSystem*> OverrideMuzzleFlashList; // 0x1d50(0x50)
	struct TMap<struct FName, struct UParticleSystem*> OverrideMuzzleSmokeList; // 0x1ce8(0x50)
	struct UParticleSystem* CurrentOverrideMuzzleFlash_NoAttach; // 0x1e48(0x08)
	struct UParticleSystem* CurrentOverrideMuzzleSmoke_NoAttach; // 0x1e40(0x08)
	struct TArray<struct UBravoHotelShellCasingArrowComponent*> ShellCasingArrows; // 0x1e88(0x10)
	struct FAudioPlayingHandle FireLoopSoundHandle; // 0x2250(0x04)
	struct FAudioPlayingHandle WarmupPlayingHandle; // 0x1f08(0x04)
	struct UBravoHotelShellCasingArrowComponent* BulletParticleSpawnArrow; // 0x21f8(0x08)
	bool bSpawnBulletParticleOnFire; // 0x1bf0(0x01)
	struct UBravoHotelRecoilComponent* RecoilComponent; // 0x1bf8(0x08)
	struct ABravoHotelProjectileBase* ProjectileClass; // 0x2258(0x08)
	bool bServerShot; // 0x2200(0x01)
	struct UCurveVector* RecoilCurve; // 0x20b0(0x08)
	struct UCurveFloat* DamageDistanceCurve; // 0x2100(0x08)
	struct TArray<float> SpreadScaleFactorsOnDefault; // 0x1f48(0x10)
	struct TArray<float> SpreadScaleFactorsOnFiring; // 0x21e8(0x10)
	struct FName FireSocketName; // 0x1e78(0x08)
	enum class EWeaponRecoilType WeaponRecoilType; // 0x2248(0x01)
	struct TArray<struct FZeroPoint> ZeroPointAngles; // 0x1e18(0x10)
	struct TArray<int32_t> DefaultZeroingDistance; // 0x2040(0x10)
	int32_t ProjectileRandomSeed; // 0x1fcc(0x04)
	struct FIncendiaryInfo IncendiaryInfo; // 0x1ec4(0x14)
	struct TArray<struct ABravoHotelProjectileMolotovFireCell*> SpawnedFireCells; // 0x1cb8(0x10)
	struct FExplosionInfo ExplosionInfo; // 0x1ca4(0x10)
	bool bCanSkipSpawnProjectile; // 0x1ea0(0x01)
	int32_t CurrentZeroPointIndex; // 0x1e98(0x04)
	bool bIsColliding; // 0x2201(0x01)
	bool bIsADSColliding; // 0x1c04(0x01)
	bool bIsAimingDownside; // 0x2240(0x01)
	float CollideAlpha; // 0x1e28(0x04)
	float CollideTraceLength; // 0x1ec0(0x04)
	struct FVector CollideTraceStartDelta; // 0x1c84(0x0c)
	struct FVector CrouchCollideTraceStartDelta; // 0x1df8(0x0c)
	struct FVector ProneCollideTraceStartDelta; // 0x1fc0(0x0c)
	bool bDrawCollideTraceSphereForDebug; // 0x1eb9(0x01)
	struct UConditionedAbilityGetter* HorizontalRecoilGetter; // 0x1f58(0x08)
	struct UConditionedAbilityGetter* VerticalRecoilGetter; // 0x1c78(0x08)
	struct UConditionedAbilityGetter* SwayGetter; // 0x2118(0x08)
	struct UConditionedAbilityGetter* AccuracyGetter; // 0x1e50(0x08)
	struct TMap<enum class EWeaponFireMode, struct FAnimSlot> FireModePlayerAnim; // 0x2138(0x50)
	struct TMap<enum class EWeaponFireMode, struct FAnimSlot> FireModeWeaponAnim; // 0x2198(0x50)
	char bWantsToFire : 1; // 0x1ef0(0x01)
	char bIsFiring : 1; // 0x1ea8(0x01)
	char bPendingReload : 1; // 0x1ca0(0x01)
	char bPendingBoltAction : 1; // 0x2188(0x01)
	char bPendingBurstFire : 1; // 0x1ef0(0x01)
	enum class EWeaponState CurrentState; // 0x1ea3(0x01)
	enum class EWeaponFireMode FireMode; // 0x1ea1(0x01)
	bool bSpawnTrailEffect; // 0x20c8(0x01)
	struct FString TrailEffectName; // 0x1c38(0x10)
	bool bSpawnAutoAimTrailEffect; // 0x1e85(0x01)
	bool bAutoAim; // 0x2189(0x01)
	char bIsNeedBoltAction : 1; // 0x2270(0x01)
	float BoltActionDelayTime; // 0x1c90(0x04)
	float AutoReloadTimeStamp; // 0x2110(0x04)
	bool bIsOneByOneReloading; // 0x1c4c(0x01)
	struct FVector FPSK_DeltaSocketLocation; // 0x1f38(0x0c)
	struct FRotator FPSK_DeltaSocketRotation; // 0x1ee4(0x0c)
	struct FMulticastInlineDelegate OnAmmoReloadedDelegate; // 0x1c58(0x10)
	struct FMulticastInlineDelegate OnReloadDelegate; // 0x2278(0x10)
	struct FMulticastInlineDelegate OnFinishSimulateReload; // 0x2128(0x10)
	struct FMulticastInlineDelegate OnFinishSimulateBoltAction; // 0x1d40(0x10)
	struct FMulticastInlineDelegate OnStartSimulateFire; // 0x2290(0x10)
	struct FMulticastInlineDelegate OnEndSimulateFire; // 0x1c18(0x10)
	bool bUseOverrideReloadMessage; // 0x1f18(0x01)
	int32_t OverrideReloadSuccessMessageTableIndex; // 0x1ce0(0x04)
	int32_t OverrideReloadFailMessageTableIndex; // 0x1f0c(0x04)
	float WarmupTime; // 0x1ebc(0x04)
	bool bIsHeatScanActive; // 0x20c9(0x01)
	bool bWarmingUp; // 0x1da5(0x01)
	bool bReady; // 0x2218(0x01)

	void UpdateOneByOneReload(float Delay); // Function BravoHotelGame.BravoHotelRangedWeapon.UpdateOneByOneReload // (Final|Native|Protected) // @ game+0x1fabf30
	void UpdateCollideState(); // Function BravoHotelGame.BravoHotelRangedWeapon.UpdateCollideState // (Final|Native|Protected) // @ game+0x1fabf10
	void UpdateBulletCount(); // Function BravoHotelGame.BravoHotelRangedWeapon.UpdateBulletCount // (Final|Native|Public) // @ game+0x1fabef0
	void UpdateAutoReload(); // Function BravoHotelGame.BravoHotelRangedWeapon.UpdateAutoReload // (Final|Native|Protected) // @ game+0x1fabed0
	void UpdateAutoBoltAction(); // Function BravoHotelGame.BravoHotelRangedWeapon.UpdateAutoBoltAction // (Final|Native|Public) // @ game+0x1fabeb0
	float StartOneByOneReload(float OverrideTimerDelay); // Function BravoHotelGame.BravoHotelRangedWeapon.StartOneByOneReload // (Final|Native|Protected) // @ game+0x1fabe20
	void SpawnBulletParticle(); // Function BravoHotelGame.BravoHotelRangedWeapon.SpawnBulletParticle // (Final|Native|Public) // @ game+0x1fabe00
	bool ShouldTacticalReload(); // Function BravoHotelGame.BravoHotelRangedWeapon.ShouldTacticalReload // (Native|Event|Protected|BlueprintEvent|Const) // @ game+0x1fabdd0
	void SetZeroPointTempAngle(float Angle, int32_t Index); // Function BravoHotelGame.BravoHotelRangedWeapon.SetZeroPointTempAngle // (Final|Native|Public|BlueprintCallable) // @ game+0x1fabd00
	void SetZeroPointIndex(int32_t Index); // Function BravoHotelGame.BravoHotelRangedWeapon.SetZeroPointIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1fabc80
	void SetNextZeroPoint(bool Next); // Function BravoHotelGame.BravoHotelRangedWeapon.SetNextZeroPoint // (Final|Native|Public|BlueprintCallable) // @ game+0x1fabbf0
	void SetMuzzleEffect_NoAttach(); // Function BravoHotelGame.BravoHotelRangedWeapon.SetMuzzleEffect_NoAttach // (Final|Native|Public) // @ game+0x1fabbd0
	void SetMuzzleEffect_HeatScan(); // Function BravoHotelGame.BravoHotelRangedWeapon.SetMuzzleEffect_HeatScan // (Final|Native|Public) // @ game+0x1fabbb0
	void SetMuzzleEffect(); // Function BravoHotelGame.BravoHotelRangedWeapon.SetMuzzleEffect // (Final|Native|Public) // @ game+0x1fabb90
	void SetMagazineType(enum class EWeaponAttachmentMagazineType AttachmentMagazineType); // Function BravoHotelGame.BravoHotelRangedWeapon.SetMagazineType // (Final|Native|Protected|BlueprintCallable) // @ game+0x1fabb10
	void SetBulletCount(int32_t NewBulletCount); // Function BravoHotelGame.BravoHotelRangedWeapon.SetBulletCount // (Final|Native|Public) // @ game+0x1faba90
	void ServerUpdateReloadWhileProning(float InRate_EndReloadTime); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerUpdateReloadWhileProning // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1fab9e0
	void ServerStopReload(); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerStopReload // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1fab990
	void ServerStopBoltAction(); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerStopBoltAction // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1fab940
	void ServerStartReload(float InReloadTime); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerStartReload // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1fab890
	void ServerStartBoltAction(float InBoltActionTime); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerStartBoltAction // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1fab7e0
	void ServerSetZeroPointIndex(int32_t Index); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerSetZeroPointIndex // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1fab720
	void ServerReloadWeapon(int32_t RequestQuantity); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerReloadWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1fab660
	void ServerHandleFiring(); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerHandleFiring // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1fab610
	void ServerFireProjectile(struct FRepProjectileInfo RepProjectileInfo); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerFireProjectile // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x1fab4c0
	void ServerFire(bool bIsNewFiring); // Function BravoHotelGame.BravoHotelRangedWeapon.ServerFire // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1fab400
	void ResetZeroingDistance(); // Function BravoHotelGame.BravoHotelRangedWeapon.ResetZeroingDistance // (Final|Native|Public) // @ game+0x1fab3e0
	void OnStartSimulateFireDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelRangedWeapon.OnStartSimulateFireDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnRep_WarmingUp(); // Function BravoHotelGame.BravoHotelRangedWeapon.OnRep_WarmingUp // (Final|Native|Public) // @ game+0x1fab3a0
	void OnRep_Reload(); // Function BravoHotelGame.BravoHotelRangedWeapon.OnRep_Reload // (Final|Native|Public) // @ game+0x1fab380
	void OnRep_Ready(); // Function BravoHotelGame.BravoHotelRangedWeapon.OnRep_Ready // (Final|Native|Public) // @ game+0x1fab360
	void OnRep_FireMode(); // Function BravoHotelGame.BravoHotelRangedWeapon.OnRep_FireMode // (Final|Native|Public) // @ game+0x1fab340
	void OnRep_CurrentZeroPointIndex(); // Function BravoHotelGame.BravoHotelRangedWeapon.OnRep_CurrentZeroPointIndex // (Final|Native|Public) // @ game+0x1fab320
	void OnRep_BoltAction(); // Function BravoHotelGame.BravoHotelRangedWeapon.OnRep_BoltAction // (Final|Native|Public) // @ game+0x1fab300
	void OnRep_bIsFiring(); // Function BravoHotelGame.BravoHotelRangedWeapon.OnRep_bIsFiring // (Final|Native|Public) // @ game+0x1fab3c0
	void OnReload__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelRangedWeapon.OnReload__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnFinishSimulateReload__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelRangedWeapon.OnFinishSimulateReload__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnFinishSimulateBoltAction__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelRangedWeapon.OnFinishSimulateBoltAction__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnEndSimulateFireDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.BravoHotelRangedWeapon.OnEndSimulateFireDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void MulticastStopSimulatingReload(bool bSkipOwner); // Function BravoHotelGame.BravoHotelRangedWeapon.MulticastStopSimulatingReload // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1fab270
	void MulticastStopSimulatingBoltAction(bool bSkipOwner); // Function BravoHotelGame.BravoHotelRangedWeapon.MulticastStopSimulatingBoltAction // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1fab1e0
	void MulticastSimulateFireProjectile(); // Function BravoHotelGame.BravoHotelRangedWeapon.MulticastSimulateFireProjectile // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1fab1c0
	void MulticastMontageSetNextSection(struct FName SectionNameToChange, struct FName NextSection, bool bSkipOwner); // Function BravoHotelGame.BravoHotelRangedWeapon.MulticastMontageSetNextSection // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1fab0c0
	void MulticastFireProjectile(struct FRepProjectileInfo RepProjectileInfo); // Function BravoHotelGame.BravoHotelRangedWeapon.MulticastFireProjectile // (Net|NetReliableNative|Event|NetMulticast|Protected) // @ game+0x1faaf90
	void K2_SimulateBoltAction(); // Function BravoHotelGame.BravoHotelRangedWeapon.K2_SimulateBoltAction // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnFinishSimulateBoltAction(); // Function BravoHotelGame.BravoHotelRangedWeapon.K2_OnFinishSimulateBoltAction // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	bool IsPlayingReloadMontage(); // Function BravoHotelGame.BravoHotelRangedWeapon.IsPlayingReloadMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1faaf60
	bool IsPlayingBoltActionMontage(); // Function BravoHotelGame.BravoHotelRangedWeapon.IsPlayingBoltActionMontage // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1faaf30
	int32_t GetZeroPointDistance(int32_t Index); // Function BravoHotelGame.BravoHotelRangedWeapon.GetZeroPointDistance // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1faaea0
	float GetZeroPointAngle(int32_t Index); // Function BravoHotelGame.BravoHotelRangedWeapon.GetZeroPointAngle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1faae10
	float GetViewPitch(); // Function BravoHotelGame.BravoHotelRangedWeapon.GetViewPitch // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1faade0
	float GetRecoiledSpread(enum class EFireType& InFireType); // Function BravoHotelGame.BravoHotelRangedWeapon.GetRecoiledSpread // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1faad40
	float GetLeanRotationAngle(); // Function BravoHotelGame.BravoHotelRangedWeapon.GetLeanRotationAngle // (Final|Native|Public|Const) // @ game+0x1faad10
	struct FVector GetLeanLocation(struct FVector& InLocation); // Function BravoHotelGame.BravoHotelRangedWeapon.GetLeanLocation // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1faac60
	bool GetIsFiringUI(); // Function BravoHotelGame.BravoHotelRangedWeapon.GetIsFiringUI // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1faac40
	struct FString GetDebugText(); // Function BravoHotelGame.BravoHotelRangedWeapon.GetDebugText // (Final|Native|Public|Const) // @ game+0x1faabc0
	struct TArray<struct FZeroPoint> GetCurrentZeroingAngles(); // Function BravoHotelGame.BravoHotelRangedWeapon.GetCurrentZeroingAngles // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1faab30
	struct ABravoHotelSightAttachment* GetCurrentSight(); // Function BravoHotelGame.BravoHotelRangedWeapon.GetCurrentSight // (Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1faab00
	int32_t GetBulletsPerShot(); // Function BravoHotelGame.BravoHotelRangedWeapon.GetBulletsPerShot // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1faaad0
	int32_t GetBulletCount(); // Function BravoHotelGame.BravoHotelRangedWeapon.GetBulletCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1faaaa0
	void GetAttachmentInfoModifier(struct FBravoHotelAttachmentInfo& OutAttachmentModifier); // Function BravoHotelGame.BravoHotelRangedWeapon.GetAttachmentInfoModifier // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x1faa9d0
	struct UWeaponAttachmentComponent* GetAttachmentComponent(); // Function BravoHotelGame.BravoHotelRangedWeapon.GetAttachmentComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1faa9a0
	void FPSK_UpdateRelativeTransform(); // Function BravoHotelGame.BravoHotelRangedWeapon.FPSK_UpdateRelativeTransform // (Final|Native|Public|BlueprintCallable) // @ game+0x1faa800
	void FireProjectile(struct FVector ProjectileLocation, struct FRotator ProjectileRotation, struct FVector TrailLocation, struct FRotator TrailRotation); // Function BravoHotelGame.BravoHotelRangedWeapon.FireProjectile // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x1faa820
	void DetachFromCamera(); // Function BravoHotelGame.BravoHotelRangedWeapon.DetachFromCamera // (Final|Native|Public) // @ game+0x1faa7e0
	void CheckAimingDownside(); // Function BravoHotelGame.BravoHotelRangedWeapon.CheckAimingDownside // (Final|Native|Protected) // @ game+0x1faa7c0
	bool CanSkipSpawnProjectile(struct FTransform& TargetSpawnTransform, uint16_t UniqueID, float LevelVisibleRate); // Function BravoHotelGame.BravoHotelRangedWeapon.CanSkipSpawnProjectile // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x1faa660
	bool CanAutoReload(); // Function BravoHotelGame.BravoHotelRangedWeapon.CanAutoReload // (Final|Native|Public) // @ game+0x1faa630
	void CalculateShootInformationsADS(struct UCameraComponent* Camera, float FireToCameraLocationCorrection, struct FTransform& ProjectileTransform); // Function BravoHotelGame.BravoHotelRangedWeapon.CalculateShootInformationsADS // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1faa4d0
	void CalculateShootInformations(struct UCameraComponent* Camera, struct USkeletalMeshComponent* WeaponMesh, struct FName WeaponFireSocketName, struct TArray<struct AActor*>& InIgnoreActors, float SpreadCurrent, struct FTransform& ProjectileTransform, struct FHitResult& HitResult, struct FVector& EndLocation); // Function BravoHotelGame.BravoHotelRangedWeapon.CalculateShootInformations // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1faa1a0
	bool CalculatePreShootInformations(struct UCameraComponent* Camera, struct TArray<struct AActor*>& InIgnoreActors, float MaxRange, struct FVector& EndLocation); // Function BravoHotelGame.BravoHotelRangedWeapon.CalculatePreShootInformations // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1faa010
	bool CalculateAutoInformationsADS(struct UCameraComponent* Camera, float Radius, float Distance, struct FTransform& ProjectileTransform, struct FTransform& TrailEffectTransform); // Function BravoHotelGame.BravoHotelRangedWeapon.CalculateAutoInformationsADS // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1fa9df0
	bool CalculateAutoInformations(struct UCameraComponent* Camera, float Radius, float Distance, struct FTransform& ProjectileTransform); // Function BravoHotelGame.BravoHotelRangedWeapon.CalculateAutoInformations // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1fa9c50
	void AttachToCamera(); // Function BravoHotelGame.BravoHotelRangedWeapon.AttachToCamera // (Final|Native|Public) // @ game+0x1fa9c30
	void AmmoReloadedDelegate__DelegateSignature(int32_t& ReloadedAmmoCount); // DelegateFunction BravoHotelGame.BravoHotelRangedWeapon.AmmoReloadedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void AIEndReload(); // Function BravoHotelGame.BravoHotelRangedWeapon.AIEndReload // (Final|Native|Public) // @ game+0x1fa9bf0
	void ActiveChargingGauge(); // Function BravoHotelGame.BravoHotelRangedWeapon.ActiveChargingGauge // (Final|Native|Private) // @ game+0x1fa9c10
};

// Class BravoHotelGame.BravoHotelRecoilComponent
// Size: 0x408 (Inherited: 0xb0)
struct UBravoHotelRecoilComponent : UActorComponent {
	struct ABravoHotelRangedWeapon* OwningWeaponRef; // 0xb0(0x08)
	struct ABravoHotelCharacter* CharacterRef; // 0xb8(0x08)
	struct ABravoHotelGameState* GameStateRef; // 0xc0(0x08)
	float DeltaTime; // 0xc8(0x04)
	struct FVector RecoilLocation; // 0xcc(0x0c)
	struct FRotator RecoilRotation; // 0xd8(0x0c)
	float BackRecoilLocation; // 0xe4(0x04)
	float VerticalRecoilLocation; // 0xe8(0x04)
	float HorizonRecoilLocation; // 0xec(0x04)
	float VerticalRecoilRotation; // 0xf0(0x04)
	float HorizonRecoilRotation; // 0xf4(0x04)
	bool bIsOnHold; // 0xf8(0x01)
	bool bNeedToInterp_BackRecoilLocation; // 0xf9(0x01)
	char pad_FA[0x6]; // 0xfa(0x06)
	struct FTimeline Timeline_BackRecoilLocation; // 0x100(0x98)
	bool bNeedToInterp_VerticalRecoilLocation; // 0x198(0x01)
	bool bNeedToInterp_VerticalRecoilRotation; // 0x199(0x01)
	char pad_19A[0x6]; // 0x19a(0x06)
	struct FTimeline Timeline_VerticalRecoilLocation; // 0x1a0(0x98)
	struct FTimeline Timeline_VerticalRecoilRotation; // 0x238(0x98)
	bool bIsLeftSideRecoil; // 0x2d0(0x01)
	bool bNeedToInterp_HorizonRecoilLocation; // 0x2d1(0x01)
	bool bNeedToInterp_HorizonRecoilRotation; // 0x2d2(0x01)
	char pad_2D3[0x5]; // 0x2d3(0x05)
	struct FTimeline Timeline_HorizonRecoilLocation; // 0x2d8(0x98)
	struct FTimeline Timeline_HorizonRecoilRotation; // 0x370(0x98)

	void UpdateVerticalRecoilRotation(float Value); // Function BravoHotelGame.BravoHotelRecoilComponent.UpdateVerticalRecoilRotation // (Final|Native|Protected) // @ game+0x1fac890
	void UpdateVerticalRecoilLocation(float Value); // Function BravoHotelGame.BravoHotelRecoilComponent.UpdateVerticalRecoilLocation // (Final|Native|Protected) // @ game+0x1fac810
	void UpdateTimeline(); // Function BravoHotelGame.BravoHotelRecoilComponent.UpdateTimeline // (Final|Native|Protected) // @ game+0x1fac7f0
	void UpdateHorizonRecoilRotation(float Value); // Function BravoHotelGame.BravoHotelRecoilComponent.UpdateHorizonRecoilRotation // (Final|Native|Protected) // @ game+0x1fac770
	void UpdateHorizonRecoilLocation(float Value); // Function BravoHotelGame.BravoHotelRecoilComponent.UpdateHorizonRecoilLocation // (Final|Native|Protected) // @ game+0x1fac6f0
	void UpdateBackRecoilLocation(float Value); // Function BravoHotelGame.BravoHotelRecoilComponent.UpdateBackRecoilLocation // (Final|Native|Protected) // @ game+0x1fac670
	void StopRecoil(); // Function BravoHotelGame.BravoHotelRecoilComponent.StopRecoil // (Final|Native|Public) // @ game+0x1fac650
	void StartRecoil(); // Function BravoHotelGame.BravoHotelRecoilComponent.StartRecoil // (Final|Native|Public) // @ game+0x1fac630
	void ReleaseRecoil(); // Function BravoHotelGame.BravoHotelRecoilComponent.ReleaseRecoil // (Final|Native|Protected|BlueprintCallable) // @ game+0x1fac610
	void InitTimeline(); // Function BravoHotelGame.BravoHotelRecoilComponent.InitTimeline // (Final|Native|Protected) // @ game+0x1fac5f0
	void HoldRecoil(float HoldTime); // Function BravoHotelGame.BravoHotelRecoilComponent.HoldRecoil // (Final|Native|Protected|BlueprintCallable) // @ game+0x1fac570
	float GetTimeForCurveValue(struct UCurveFloat* TargetCurve, float TargetValue, float Tolerance); // Function BravoHotelGame.BravoHotelRecoilComponent.GetTimeForCurveValue // (Final|Native|Protected) // @ game+0x1fac470
	struct FRotator GetRecoilRotation(); // Function BravoHotelGame.BravoHotelRecoilComponent.GetRecoilRotation // (Final|Native|Public|HasDefaults) // @ game+0x1fac430
	struct FVector GetRecoilLocation(); // Function BravoHotelGame.BravoHotelRecoilComponent.GetRecoilLocation // (Final|Native|Public|HasDefaults) // @ game+0x1fac3f0
};

// Class BravoHotelGame.BravoHotelRedZone
// Size: 0x3a8 (Inherited: 0x320)
struct ABravoHotelRedZone : AActor {
	struct FRedZoneBombData BombData; // 0x320(0x40)
	bool ResetAndStart; // 0x360(0x01)
	char pad_361[0x3]; // 0x361(0x03)
	float RemainingWarningTime; // 0x364(0x04)
	float CurrentRange; // 0x368(0x04)
	int32_t RemainingBombing; // 0x36c(0x04)
	char pad_370[0x10]; // 0x370(0x10)
	struct UAkComponent* AkAudioComponent; // 0x380(0x08)
	struct UAkAudioEvent* StartAudioEvent; // 0x388(0x08)
	struct UAkAudioEvent* EndAudioEvent; // 0x390(0x08)
	struct UUserWidget* pBottonInfoWidget; // 0x398(0x08)
	struct UUserWidget* pTopInfoWidget; // 0x3a0(0x08)

	void OnRep_RemainingBombingCount(); // Function BravoHotelGame.BravoHotelRedZone.OnRep_RemainingBombingCount // (Final|Native|Protected) // @ game+0x1facdc0
	void Init(struct FRedZoneBombData& RedZoneBombData); // Function BravoHotelGame.BravoHotelRedZone.Init // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1faccd0
	float GetRedZoneSize(); // Function BravoHotelGame.BravoHotelRedZone.GetRedZoneSize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1facca0
};

// Class BravoHotelGame.BravoHotelRedZoneManager
// Size: 0x408 (Inherited: 0x320)
struct ABravoHotelRedZoneManager : AActor {
	bool Usable; // 0x320(0x01)
	char pad_321[0x3]; // 0x321(0x03)
	struct FName TableRedZoneID; // 0x324(0x08)
	char pad_32C[0x4]; // 0x32c(0x04)
	struct FRedZoneData DefaultRedZoneData; // 0x330(0x58)
	struct TArray<struct FRedZoneData> ArrayRedZoneData; // 0x388(0x10)
	int32_t BeginPhase; // 0x398(0x04)
	int32_t EndPhase; // 0x39c(0x04)
	char pad_3A0[0x60]; // 0x3a0(0x60)
	struct ABravoHotelRedZone* CurrentRedZone; // 0x400(0x08)

	void Run(int32_t CheckPhase); // Function BravoHotelGame.BravoHotelRedZoneManager.Run // (Final|Native|Public|BlueprintCallable) // @ game+0x1facf50
};

// Class BravoHotelGame.BravoHotelReplayData
// Size: 0x30 (Inherited: 0x30)
struct UBravoHotelReplayData : UMK3DReplayData {
};

// Class BravoHotelGame.BravoHotelReplayEventFunction
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelReplayEventFunction : UMK3DEventFunction {
};

// Class BravoHotelGame.BravoHotelReplayListWidget
// Size: 0x260 (Inherited: 0x248)
struct UBravoHotelReplayListWidget : UUserWidget {
	int32_t TotalPages; // 0x248(0x04)
	int32_t CurrentPage; // 0x24c(0x04)
	int32_t PageSize; // 0x250(0x04)
	int32_t TotalReplays; // 0x254(0x04)
	int32_t ReplaysToKeep; // 0x258(0x04)
	char pad_25C[0x4]; // 0x25c(0x04)

	bool UpdateShouldKeep(struct FString ReplayName, bool bShouldKeep); // Function BravoHotelGame.BravoHotelReplayListWidget.UpdateShouldKeep // (Final|Native|Public|BlueprintCallable) // @ game+0x1fae2d0
	void UpdateReplayListItems(); // Function BravoHotelGame.BravoHotelReplayListWidget.UpdateReplayListItems // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void PlayReplay(struct FString ReplayFileName, struct FString TargetPawnName, float JumpTimeInSeconds); // Function BravoHotelGame.BravoHotelReplayListWidget.PlayReplay // (Final|Native|Public|BlueprintCallable) // @ game+0x1fae190
	void OnKeepAndDeleteOldVersionReplaysComplete(); // Function BravoHotelGame.BravoHotelReplayListWidget.OnKeepAndDeleteOldVersionReplaysComplete // (Final|Native|Private) // @ game+0x1fae170
	void OnEnumerateReplayListComplete(int32_t RetPageIndex, int32_t RetPageSize); // Function BravoHotelGame.BravoHotelReplayListWidget.OnEnumerateReplayListComplete // (Final|Native|Private) // @ game+0x1fae0b0
	void OnDeleteReplayComplete(struct FString ReplayName, bool bSuccess); // Function BravoHotelGame.BravoHotelReplayListWidget.OnDeleteReplayComplete // (Final|Native|Private) // @ game+0x1fadf70
	bool IsSupportedReplayVersion(int32_t Version); // Function BravoHotelGame.BravoHotelReplayListWidget.IsSupportedReplayVersion // (Final|Native|Public|BlueprintCallable) // @ game+0x1fadee0
	bool IsLatestVersion(int32_t Version); // Function BravoHotelGame.BravoHotelReplayListWidget.IsLatestVersion // (Final|Native|Public|BlueprintCallable) // @ game+0x1fade50
	void GetReplayList(); // Function BravoHotelGame.BravoHotelReplayListWidget.GetReplayList // (Final|Native|Public|BlueprintCallable) // @ game+0x1fade30
	int32_t GetKeepFileCount(); // Function BravoHotelGame.BravoHotelReplayListWidget.GetKeepFileCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1fade00
	void DeleteOldVersionReplay(); // Function BravoHotelGame.BravoHotelReplayListWidget.DeleteOldVersionReplay // (Final|Native|Public|BlueprintCallable) // @ game+0x1faddc0
	void DeleteOldestReplay(); // Function BravoHotelGame.BravoHotelReplayListWidget.DeleteOldestReplay // (Final|Native|Public|BlueprintCallable) // @ game+0x1fadde0
};

// Class BravoHotelGame.BravoHotelReplayMainWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelReplayMainWidget : UUserWidget {
};

// Class BravoHotelGame.BravoHotelReplayPlayerListGroup
// Size: 0x260 (Inherited: 0x248)
struct UBravoHotelReplayPlayerListGroup : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	struct ABravoHotelPlayerState* PlayerState; // 0x250(0x08)
	struct UVerticalBox* VBPlayerList; // 0x258(0x08)
};

// Class BravoHotelGame.BravoHotelReplayPlayerListInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelReplayPlayerListInterface : UInterface {

	void UpdatePlayerInfo(enum class EPlayerListSortType PlayerListSortType); // Function BravoHotelGame.BravoHotelReplayPlayerListInterface.UpdatePlayerInfo // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1faec20
	int32_t GetTeamSize(); // Function BravoHotelGame.BravoHotelReplayPlayerListInterface.GetTeamSize // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1faebf0
	int32_t GetTeamNum(); // Function BravoHotelGame.BravoHotelReplayPlayerListInterface.GetTeamNum // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1faebc0
	struct ABravoHotelPlayerState* GetPlayerState(); // Function BravoHotelGame.BravoHotelReplayPlayerListInterface.GetPlayerState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1faeb90
	int32_t GetKillCount(); // Function BravoHotelGame.BravoHotelReplayPlayerListInterface.GetKillCount // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1faeb60
	float GetDistanceTo(); // Function BravoHotelGame.BravoHotelReplayPlayerListInterface.GetDistanceTo // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1faeb30
};

// Class BravoHotelGame.BravoHotelReplayPlayerListItem
// Size: 0x270 (Inherited: 0x248)
struct UBravoHotelReplayPlayerListItem : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	struct ABravoHotelMK3DReplayController* ReplayController; // 0x250(0x08)
	struct ABravoHotelPlayerState* PlayerState; // 0x258(0x08)
	struct FString playerName; // 0x260(0x10)

	void SetPlayerInfo(); // Function BravoHotelGame.BravoHotelReplayPlayerListItem.SetPlayerInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1faef20
	void OnClickPlayerNameButton(); // Function BravoHotelGame.BravoHotelReplayPlayerListItem.OnClickPlayerNameButton // (Final|Native|Public|BlueprintCallable) // @ game+0x1faef00
};

// Class BravoHotelGame.BravoHotelReplayPlayerListWidget
// Size: 0x2e0 (Inherited: 0x248)
struct UBravoHotelReplayPlayerListWidget : UUserWidget {
	struct ABravoHotelMK3DReplayController* ReplayController; // 0x248(0x08)
	struct UScrollBox* SB_PlayerList; // 0x250(0x08)
	enum class EPlayerListSortType PlayerListSortType; // 0x258(0x01)
	char pad_259[0x7]; // 0x259(0x07)
	struct TArray<struct UUserWidget*> PlayerListItemArray; // 0x260(0x10)
	struct TMap<int32_t, struct UUserWidget*> PlayerListGroupMap; // 0x270(0x50)
	struct TArray<struct UUserWidget*> PlayerListGroupArrayForSort; // 0x2c0(0x10)
	char pad_2D0[0x10]; // 0x2d0(0x10)

	void ShowPlayerList(); // Function BravoHotelGame.BravoHotelReplayPlayerListWidget.ShowPlayerList // (Final|Native|Public|BlueprintCallable) // @ game+0x1faf420
	void RemovePlayerButtons(); // Function BravoHotelGame.BravoHotelReplayPlayerListWidget.RemovePlayerButtons // (Final|Native|Public|BlueprintCallable) // @ game+0x1faf400
	void OnClickPlayerListPrevButton(); // Function BravoHotelGame.BravoHotelReplayPlayerListWidget.OnClickPlayerListPrevButton // (Final|Native|Public|BlueprintCallable) // @ game+0x1faf3e0
	void OnClickPlayerListNextButton(); // Function BravoHotelGame.BravoHotelReplayPlayerListWidget.OnClickPlayerListNextButton // (Final|Native|Public|BlueprintCallable) // @ game+0x1faf3c0
	void HidePlayerList(); // Function BravoHotelGame.BravoHotelReplayPlayerListWidget.HidePlayerList // (Final|Native|Public|BlueprintCallable) // @ game+0x1faf3a0
	struct UUserWidget* CreatePlayerListGroup(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelReplayPlayerListWidget.CreatePlayerListGroup // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	struct UUserWidget* CreatePlayerButton(struct ABravoHotelPlayerState* PlayerState); // Function BravoHotelGame.BravoHotelReplayPlayerListWidget.CreatePlayerButton // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelReplayTimelineEventMarker
// Size: 0x290 (Inherited: 0x248)
struct UBravoHotelReplayTimelineEventMarker : UUserWidget {
	struct ABravoHotelMK3DReplayController* ReplayController; // 0x248(0x08)
	struct FMK3DHighlightKillEvent KillEvent; // 0x250(0x30)
	char pad_280[0x10]; // 0x280(0x10)

	void SetKillEvent(struct FMK3DHighlightKillEvent& InKillEvent, bool IsMyInfo); // Function BravoHotelGame.BravoHotelReplayTimelineEventMarker.SetKillEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fafbd0
	void OnReplayJumpComplete(bool bSuccess); // Function BravoHotelGame.BravoHotelReplayTimelineEventMarker.OnReplayJumpComplete // (Final|Native|Public) // @ game+0x1fafb40
	void OnMouseEnterEventBorder(struct FGeometry MyGeometry, struct FPointerEvent& MouseEvent); // Function BravoHotelGame.BravoHotelReplayTimelineEventMarker.OnMouseEnterEventBorder // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1faf990
	void OnMouseButtonDownEventBorder(struct FGeometry MyGeometry, struct FPointerEvent& MouseEvent); // Function BravoHotelGame.BravoHotelReplayTimelineEventMarker.OnMouseButtonDownEventBorder // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1faf7e0
	void K2_SetKillEvent(bool IsMyInfo); // Function BravoHotelGame.BravoHotelReplayTimelineEventMarker.K2_SetKillEvent // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	int32_t GetEventTime(); // Function BravoHotelGame.BravoHotelReplayTimelineEventMarker.GetEventTime // (Final|Native|Public|BlueprintCallable) // @ game+0x1faf7b0
};

// Class BravoHotelGame.BravoHotelReplayTimelineWidget
// Size: 0x360 (Inherited: 0x248)
struct UBravoHotelReplayTimelineWidget : UUserWidget {
	int32_t CurrentTimeMS; // 0x248(0x04)
	int32_t TotalTimeMS; // 0x24c(0x04)
	float SliderValue; // 0x250(0x04)
	bool bIsCapturedSlider; // 0x254(0x01)
	char pad_255[0x3]; // 0x255(0x03)
	float NormalizedMousePosInX; // 0x258(0x04)
	struct FVector2D ToolTipDefaultPosition; // 0x25c(0x08)
	char pad_264[0x4]; // 0x264(0x04)
	struct ABravoHotelMK3DReplayController* ReplayController; // 0x268(0x08)
	struct FText TextReplaySpeed; // 0x270(0x18)
	float TimelineScaleDelta; // 0x288(0x04)
	float TimelineMaxScale; // 0x28c(0x04)
	float TimelineScale; // 0x290(0x04)
	char pad_294[0x4]; // 0x294(0x04)
	struct TArray<struct UBravoHotelReplayTimelineEventMarker*> KillEventMarkers; // 0x298(0x10)
	struct TArray<struct UBravoHotelReplayTimelineEventMarker*> KnockoutEventMarkers; // 0x2a8(0x10)
	struct TArray<struct UBravoHotelReplayTimelineEventMarker*> ResuscitatedEventMarkers; // 0x2b8(0x10)
	struct TArray<struct UBravoHotelReplayTimelineEventMarker*> ReportedEventMarkers; // 0x2c8(0x10)
	bool bShowKillChkBox; // 0x2d8(0x01)
	bool bShowMyKillChkBox; // 0x2d9(0x01)
	bool bShowKnockChkBox; // 0x2da(0x01)
	bool bShowMyKnockChkBox; // 0x2db(0x01)
	bool bShowResusChkBox; // 0x2dc(0x01)
	bool bShowMyResusChkBox; // 0x2dd(0x01)
	char pad_2DE[0x2]; // 0x2de(0x02)
	struct TArray<struct FMK3DHighlightKillEvent> MK3DKillEvents; // 0x2e0(0x10)
	struct TArray<struct FMK3DHighlightKillEvent> MK3DKnockoutEvents; // 0x2f0(0x10)
	struct TArray<struct FMK3DHighlightKillEvent> MK3DResuscitatedEvents; // 0x300(0x10)
	struct TArray<struct FMK3DHighlightKillEvent> MK3DReportedEvents; // 0x310(0x10)
	char pad_320[0x40]; // 0x320(0x40)

	void UpdateTimelineScale(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.UpdateTimelineScale // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0c90
	void UpdateAllKillEventMarkersPos(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.UpdateAllKillEventMarkersPos // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0c70
	struct FString TimeToStringMMSS(float InTime); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.TimeToStringMMSS // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0b30
	void Timer_EnumerateMK3DResuscitatedEvents(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.Timer_EnumerateMK3DResuscitatedEvents // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0c50
	void Timer_EnumerateMK3DKnockoutEvents(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.Timer_EnumerateMK3DKnockoutEvents // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0c30
	void Timer_EnumerateMK3DKillEvents(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.Timer_EnumerateMK3DKillEvents // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0c10
	struct FString TimeMSToStringMMSS(int32_t InTimeMS); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.TimeMSToStringMMSS // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0a50
	void RemoveAllResuscitatedEventMarkers(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.RemoveAllResuscitatedEventMarkers // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0a30
	void RemoveAllReportedEventMarkers(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.RemoveAllReportedEventMarkers // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0a10
	void RemoveAllKnockoutEventMarkers(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.RemoveAllKnockoutEventMarkers // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb09f0
	void RemoveAllKillEventMarkers(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.RemoveAllKillEventMarkers // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb09d0
	void RefreshAllKillEventMarkers(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.RefreshAllKillEventMarkers // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb09b0
	void OnValueChangedTimeSlider(float InValue); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.OnValueChangedTimeSlider // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0930
	void OnReplayTargetChanged(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.OnReplayTargetChanged // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnReplayControllerFinishBeginPlay(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.OnReplayControllerFinishBeginPlay // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnRefreshMarkersIfWidgetReady(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.OnRefreshMarkersIfWidgetReady // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0910
	void OnCheckStateChangedShowResuscitated(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.OnCheckStateChangedShowResuscitated // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb08f0
	void OnCheckStateChangedShowKnockout(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.OnCheckStateChangedShowKnockout // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb08d0
	void OnCheckStateChangedShowKill(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.OnCheckStateChangedShowKill // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb08b0
	struct FVector2D GetTimelineToolTipPosition(struct FString& ToolTipTime); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.GetTimelineToolTipPosition // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1fb07e0
	void EnumerateMK3DKillEvents(enum class EKillType killType); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.EnumerateMK3DKillEvents // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0760
	struct UBravoHotelReplayTimelineEventMarker* CreateEventMarker(enum class EKillType killType); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.CreateEventMarker // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void CalcurateNormalizedMousePos(float SlierThumbImageWidth, struct FGeometry SliderGeom); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.CalcurateNormalizedMousePos // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb0640
	void BPUpdateTimelineScale(); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.BPUpdateTimelineScale // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void BPUpdateKillEventMarkersPos(enum class EKillType killType, float TotalTime); // Function BravoHotelGame.BravoHotelReplayTimelineWidget.BPUpdateKillEventMarkersPos // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelReplayZone
// Size: 0x488 (Inherited: 0x320)
struct ABravoHotelReplayZone : AActor {
	char pad_320[0x168]; // 0x320(0x168)

	void UpdateCameraState(bool Inside); // Function BravoHotelGame.BravoHotelReplayZone.UpdateCameraState // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void GetCircleInfo(struct FVector& OutPos, float& OutRadius); // Function BravoHotelGame.BravoHotelReplayZone.GetCircleInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1fb0e90
};

// Class BravoHotelGame.BravoHotelReportDataManager
// Size: 0x3a0 (Inherited: 0x28)
struct UBravoHotelReportDataManager : UObject {
	char pad_28[0x340]; // 0x28(0x340)
	struct UObject* CurrWorldContext; // 0x368(0x08)
	char pad_370[0x30]; // 0x370(0x30)
};

// Class BravoHotelGame.BravoHotelReportUserCompletedWidget
// Size: 0x250 (Inherited: 0x248)
struct UBravoHotelReportUserCompletedWidget : UUserWidget {
	struct UButton* ConfirmButton; // 0x248(0x08)

	void OnClickedConfirm(); // Function BravoHotelGame.BravoHotelReportUserCompletedWidget.OnClickedConfirm // (Final|Native|Public) // @ game+0x1fb1650
};

// Class BravoHotelGame.BravoHotelReportUserConfirmWidget
// Size: 0x268 (Inherited: 0x248)
struct UBravoHotelReportUserConfirmWidget : UUserWidget {
	struct UButton* ConfirmButton; // 0x248(0x08)
	struct UButton* CancelButton; // 0x250(0x08)
	struct FString UserNickName; // 0x258(0x10)

	void OnReportSended(enum class EBeginReportWidgetType InWidgetType); // Function BravoHotelGame.BravoHotelReportUserConfirmWidget.OnReportSended // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnClickedConfirm(); // Function BravoHotelGame.BravoHotelReportUserConfirmWidget.OnClickedConfirm // (Final|Native|Public) // @ game+0x1fb18c0
	void OnClickedCancel(); // Function BravoHotelGame.BravoHotelReportUserConfirmWidget.OnClickedCancel // (Final|Native|Public) // @ game+0x1fb1650
};

// Class BravoHotelGame.BravoHotelReportUserProgramWidget
// Size: 0x278 (Inherited: 0x248)
struct UBravoHotelReportUserProgramWidget : UUserWidget {
	struct UButton* ReportButton; // 0x248(0x08)
	struct UButton* CancelButton; // 0x250(0x08)
	struct UTextBlock* SelectedUserNickName; // 0x258(0x08)
	char pad_260[0x18]; // 0x260(0x18)

	void SetReportIndex(int32_t InIndex); // Function BravoHotelGame.BravoHotelReportUserProgramWidget.SetReportIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb1da0
	void SetProgramIndex(int32_t InProgramIndex, bool bInIsChecked); // Function BravoHotelGame.BravoHotelReportUserProgramWidget.SetProgramIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb1ce0
	void OnReportConfirm(struct FString InUserNickName); // Function BravoHotelGame.BravoHotelReportUserProgramWidget.OnReportConfirm // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnClickedReport(); // Function BravoHotelGame.BravoHotelReportUserProgramWidget.OnClickedReport // (Final|Native|Public) // @ game+0x1fb1cc0
	void OnClickedCancel(); // Function BravoHotelGame.BravoHotelReportUserProgramWidget.OnClickedCancel // (Final|Native|Public) // @ game+0x1fb1650
	bool IsProgramIndex(); // Function BravoHotelGame.BravoHotelReportUserProgramWidget.IsProgramIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1fb1c90
};

// Class BravoHotelGame.BravoHotelReportUserWidget
// Size: 0x278 (Inherited: 0x248)
struct UBravoHotelReportUserWidget : UUserWidget {
	struct UButton* ReportButton; // 0x248(0x08)
	struct UButton* CancelButton; // 0x250(0x08)
	struct UTextBlock* SelectedUserNickName; // 0x258(0x08)
	char pad_260[0x18]; // 0x260(0x18)

	void SetReportIndex(int32_t InIndex); // Function BravoHotelGame.BravoHotelReportUserWidget.SetReportIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb1da0
	void OnReportConfirm(struct FString InUserNickName); // Function BravoHotelGame.BravoHotelReportUserWidget.OnReportConfirm // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnClickedReport(); // Function BravoHotelGame.BravoHotelReportUserWidget.OnClickedReport // (Final|Native|Public) // @ game+0x1fb1cc0
	void OnClickedCancel(); // Function BravoHotelGame.BravoHotelReportUserWidget.OnClickedCancel // (Final|Native|Public) // @ game+0x1fb1650
};

// Class BravoHotelGame.BravoHotelRotorRunner
// Size: 0x338 (Inherited: 0x320)
struct ABravoHotelRotorRunner : ABravoHotelActor {
	struct AActor* RotorActor; // 0x320(0x08)
	float RotorSpeed; // 0x328(0x04)
	float TickEnableDistance; // 0x32c(0x04)
	char pad_330[0x8]; // 0x330(0x08)
};

// Class BravoHotelGame.BravoHotelRoutePingWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelRoutePingWidget : UUserWidget {

	void UpdateRoutePing(struct UBravoHotelMapCompWidget* MapCompWidget, struct TArray<struct FVector2D>& Positions, bool IsUpdate); // Function BravoHotelGame.BravoHotelRoutePingWidget.UpdateRoutePing // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelScenarioBase
// Size: 0x38 (Inherited: 0x28)
struct UBravoHotelScenarioBase : UObject {
	struct AActor* OwnerActor; // 0x28(0x08)
	char pad_30[0x8]; // 0x30(0x08)

	void K2_StopScenario(); // Function BravoHotelGame.BravoHotelScenarioBase.K2_StopScenario // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_StartScenario(); // Function BravoHotelGame.BravoHotelScenarioBase.K2_StartScenario // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelScenarioActor
// Size: 0x350 (Inherited: 0x320)
struct ABravoHotelScenarioActor : AActor {
	char pad_320[0x28]; // 0x320(0x28)
	bool bActiveOnStart; // 0x348(0x01)
	char pad_349[0x7]; // 0x349(0x07)

	void OnActorActived__DelegateSignature(struct AActor* ChangedActor); // DelegateFunction BravoHotelGame.BravoHotelScenarioActor.OnActorActived__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void DestroyScenarioActorsByTag(struct UObject* WorldContextObject, struct FName TagName); // Function BravoHotelGame.BravoHotelScenarioActor.DestroyScenarioActorsByTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb2a90
	void DeactiveScenarioActorsByTag(struct UObject* WorldContextObject, struct FName TagName); // Function BravoHotelGame.BravoHotelScenarioActor.DeactiveScenarioActorsByTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb29e0
	void ActiveScenarioActorsByTag(struct UObject* WorldContextObject, struct FName TagName); // Function BravoHotelGame.BravoHotelScenarioActor.ActiveScenarioActorsByTag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb2930
};

// Class BravoHotelGame.BravoHotelScenarioActorInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelScenarioActorInterface : UInterface {

	void DoDeactive(); // Function BravoHotelGame.BravoHotelScenarioActorInterface.DoDeactive // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e86180
	void DoActive(); // Function BravoHotelGame.BravoHotelScenarioActorInterface.DoActive // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e86160
};

// Class BravoHotelGame.BravoHotelScenarioCallbackProxy
// Size: 0x60 (Inherited: 0x28)
struct UBravoHotelScenarioCallbackProxy : UObject {
	struct FMulticastInlineDelegate Finished; // 0x28(0x10)
	char pad_38[0x28]; // 0x38(0x28)

	void OnTriggerFinished(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.BravoHotelScenarioCallbackProxy.OnTriggerFinished // (Final|Native|Private|HasOutParms) // @ game+0x1fb34d0
	void OnScenarioQuestFinished(struct UBravoHotelQuestComponent* QuestComponent); // Function BravoHotelGame.BravoHotelScenarioCallbackProxy.OnScenarioQuestFinished // (Final|Native|Private) // @ game+0x1fb3450
	void OnScenarioEventCallback(struct UBravoHotelScenarioComponent* ScenarioComponent); // Function BravoHotelGame.BravoHotelScenarioCallbackProxy.OnScenarioEventCallback // (Final|Native|Private) // @ game+0x1fb33d0
	struct UBravoHotelScenarioCallbackProxy* CreateTriggerProxyObject(struct UObject* WorldContextObject, struct FName TagName); // Function BravoHotelGame.BravoHotelScenarioCallbackProxy.CreateTriggerProxyObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb3310
	struct UBravoHotelScenarioCallbackProxy* CreateScenarioQuestProxyObject(struct UObject* WorldContextObject, struct FName ScenarioQuestName); // Function BravoHotelGame.BravoHotelScenarioCallbackProxy.CreateScenarioQuestProxyObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb3250
	struct UBravoHotelScenarioCallbackProxy* CreateScenarioEventProxyObject(struct UObject* WorldContextObject, struct FName ScenarioEventName, int32_t LimitCount, bool& bConnected); // Function BravoHotelGame.BravoHotelScenarioCallbackProxy.CreateScenarioEventProxyObject // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // @ game+0x1fb3110
	struct UBravoHotelScenarioCallbackProxy* CreateConversationProxyObject(struct UObject* WorldContextObject, struct FName ConversationKey); // Function BravoHotelGame.BravoHotelScenarioCallbackProxy.CreateConversationProxyObject // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb3050
};

// Class BravoHotelGame.BravoHotelScenarioComponent
// Size: 0x180 (Inherited: 0xb0)
struct UBravoHotelScenarioComponent : UActorComponent {
	struct UBravoHotelScenarioBase* StartScenarioClass; // 0xb0(0x08)
	struct UBravoHotelScenarioBase* CurrentScenario; // 0xb8(0x08)
	char pad_C0[0x58]; // 0xc0(0x58)
	struct FTimerHandle TimeHandle_ForceStart; // 0x118(0x08)
	char pad_120[0x60]; // 0x120(0x60)

	void StopScenario(); // Function BravoHotelGame.BravoHotelScenarioComponent.StopScenario // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb4000
	void StartScenario(struct UBravoHotelScenarioBase* ScenarioClass); // Function BravoHotelGame.BravoHotelScenarioComponent.StartScenario // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb3f80
	void ScenarioEventDelegate__DelegateSignature(struct UBravoHotelScenarioComponent* ScenarioComponent); // DelegateFunction BravoHotelGame.BravoHotelScenarioComponent.ScenarioEventDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnAllLevelsLoadedFirstTime(); // Function BravoHotelGame.BravoHotelScenarioComponent.OnAllLevelsLoadedFirstTime // (Final|Native|Protected) // @ game+0x1fb3f60
	void K2_TriggerScenarioEvent(struct UObject* WorldContextObject, struct FName EventName); // Function BravoHotelGame.BravoHotelScenarioComponent.K2_TriggerScenarioEvent // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb3eb0
	void K2_SetScenarioCounter(struct UObject* WorldContextObject, struct FName FlagName, int32_t NewCount); // Function BravoHotelGame.BravoHotelScenarioComponent.K2_SetScenarioCounter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb3dc0
	void K2_RemoveScenarioFlag(struct UObject* WorldContextObject, struct FName FlagName); // Function BravoHotelGame.BravoHotelScenarioComponent.K2_RemoveScenarioFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb3d10
	bool K2_IsScenarioFlag(struct UObject* WorldContextObject, struct FName FlagName); // Function BravoHotelGame.BravoHotelScenarioComponent.K2_IsScenarioFlag // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1fb3c50
	int32_t K2_GetScenarioCounter(struct UObject* WorldContextObject, struct FName FlagName); // Function BravoHotelGame.BravoHotelScenarioComponent.K2_GetScenarioCounter // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x1fb3b90
	void K2_AddScenarioFlag(struct UObject* WorldContextObject, struct FName FlagName); // Function BravoHotelGame.BravoHotelScenarioComponent.K2_AddScenarioFlag // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb3ae0
	void K2_AddScenarioCounter(struct UObject* WorldContextObject, struct FName FlagName); // Function BravoHotelGame.BravoHotelScenarioComponent.K2_AddScenarioCounter // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x1fb3a30
};

// Class BravoHotelGame.BravoHotelScenarioWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelScenarioWidget : UUserWidget {

	void OnUpdateScenarioQuest(struct FQuestInfo& QuestInfo); // Function BravoHotelGame.BravoHotelScenarioWidget.OnUpdateScenarioQuest // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnStopScenarioQuest(struct FQuestInfo& QuestInfo); // Function BravoHotelGame.BravoHotelScenarioWidget.OnStopScenarioQuest // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnStartScenarioQuest(struct FQuestInfo& QuestInfo); // Function BravoHotelGame.BravoHotelScenarioWidget.OnStartScenarioQuest // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnEndScenario(); // Function BravoHotelGame.BravoHotelScenarioWidget.OnEndScenario // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelSceneCaptureComponent2D
// Size: 0x930 (Inherited: 0x930)
struct UBravoHotelSceneCaptureComponent2D : USceneCaptureComponent2D {
	float TickRate; // 0x928(0x04)

	void ResizeTextureTarget(int32_t InSizeX, int32_t InSizeY); // Function BravoHotelGame.BravoHotelSceneCaptureComponent2D.ResizeTextureTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb5360
};

// Class BravoHotelGame.SightInfoData
// Size: 0x70 (Inherited: 0x30)
struct USightInfoData : UDataAsset {
	struct FVector2D DefaultSightViewRatio; // 0x30(0x08)
	struct FVector2D HoloSightViewRatio; // 0x38(0x08)
	struct FVector2D ReddotViewRatio; // 0x40(0x08)
	struct FVector2D DigitalViewRatio; // 0x48(0x08)
	struct FVector2D X2ViewRatio; // 0x50(0x08)
	struct FVector2D X4ViewRatio; // 0x58(0x08)
	struct FVector2D X8ViewRatio; // 0x60(0x08)
	struct FVector2D X15ViewRatio; // 0x68(0x08)
};

// Class BravoHotelGame.BravoHotelScopeWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelScopeWidget : UUserWidget {

	void K2_OnSetAllowdAmmo(enum class EWeaponType WeaponType, struct FName& AllowdAmmoName); // Function BravoHotelGame.BravoHotelScopeWidget.K2_OnSetAllowdAmmo // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnExitADS(); // Function BravoHotelGame.BravoHotelScopeWidget.K2_OnExitADS // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnEnterADS(); // Function BravoHotelGame.BravoHotelScopeWidget.K2_OnEnterADS // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	int32_t GetDistanceToCenter(); // Function BravoHotelGame.BravoHotelScopeWidget.GetDistanceToCenter // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1fb5810
};

// Class BravoHotelGame.BravoHotelSeason
// Size: 0x40 (Inherited: 0x30)
struct UBravoHotelSeason : UBravoHotelCoherentObject {
	struct FMulticastInlineDelegate OnSeasonChangedSubTabDelegate; // 0x30(0x10)
};

// Class BravoHotelGame.BravoHotelSettingBaseWidget
// Size: 0x298 (Inherited: 0x248)
struct UBravoHotelSettingBaseWidget : UUserWidget {
	struct FMulticastInlineDelegate DelegateShowInfo; // 0x248(0x10)
	struct FMulticastInlineDelegate DelegateChangeValue; // 0x258(0x10)
	struct FMulticastInlineDelegate DelegateChangeValueDirect; // 0x268(0x10)
	struct FMulticastInlineDelegate DelegateChangeKeyValue; // 0x278(0x10)
	struct FMulticastInlineDelegate DelegateButtonClick; // 0x288(0x10)

	void Broadcast_DelegateShowInfo(struct UBravoHotelSettingSlotWidget* TargetSlot); // Function BravoHotelGame.BravoHotelSettingBaseWidget.Broadcast_DelegateShowInfo // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb62b0
	void Broadcast_DelegateChangeValueDirect(enum class ESettingType Type, float Value); // Function BravoHotelGame.BravoHotelSettingBaseWidget.Broadcast_DelegateChangeValueDirect // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb61f0
	void Broadcast_DelegateChangeValue(struct UBravoHotelSettingSlotWidget* Value); // Function BravoHotelGame.BravoHotelSettingBaseWidget.Broadcast_DelegateChangeValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb6170
	void Broadcast_DelegateChangeKeyValue(struct UBravoHotelSettingSlotWidget* Value, bool IsSubKey); // Function BravoHotelGame.BravoHotelSettingBaseWidget.Broadcast_DelegateChangeKeyValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb60a0
	void Broadcast_DelegateButtonClick(enum class ESettingType Type); // Function BravoHotelGame.BravoHotelSettingBaseWidget.Broadcast_DelegateButtonClick // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb6020
};

// Class BravoHotelGame.BravoHotelSettingSlotWidget
// Size: 0x4e8 (Inherited: 0x298)
struct UBravoHotelSettingSlotWidget : UBravoHotelSettingBaseWidget {
	struct UBravoHotelSettingSubWidget* ParentWidget; // 0x298(0x08)
	struct FName ActionName; // 0x2a0(0x08)
	struct FName AxisActionName; // 0x2a8(0x08)
	float AxisScale; // 0x2b0(0x04)
	char pad_2B4[0x4]; // 0x2b4(0x04)
	struct FSettingInfo SettingData; // 0x2b8(0x88)
	struct FDataTableRowHandle SettingType; // 0x340(0x10)
	float CurValue; // 0x350(0x04)
	float OrgValue; // 0x354(0x04)
	struct FInputActionKeyMapping OrgKeyInfo; // 0x358(0x28)
	struct FInputActionKeyMapping CurKeyInfo; // 0x380(0x28)
	struct FInputActionKeyMapping SubOrgKeyInfo; // 0x3a8(0x28)
	struct FInputActionKeyMapping SubCurKeyInfo; // 0x3d0(0x28)
	struct FInputAxisKeyMapping OrgAxisKeyInfo; // 0x3f8(0x30)
	struct FInputAxisKeyMapping CurAxisKeyInfo; // 0x428(0x30)
	struct FInputAxisKeyMapping SubOrgAxisKeyInfo; // 0x458(0x30)
	struct FInputAxisKeyMapping SubCurAxisKeyInfo; // 0x488(0x30)
	struct UBravoHotelSettingWidget* SettingWidget; // 0x4b8(0x08)
	int32_t EnableKeyInputState; // 0x4c0(0x04)
	char pad_4C4[0x4]; // 0x4c4(0x04)
	struct FMulticastInlineDelegate DelegateKeyChangedNotiMessage; // 0x4c8(0x10)
	struct FMulticastInlineDelegate DelegateChangeInput; // 0x4d8(0x10)

	float ValueToPercent(float InValue); // Function BravoHotelGame.BravoHotelSettingSlotWidget.ValueToPercent // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb80f0
	int32_t ValueToIndex(float InValue1, float InValue2); // Function BravoHotelGame.BravoHotelSettingSlotWidget.ValueToIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb8020
	void SubSelectingKeyChanged(bool IsSelectingKey); // Function BravoHotelGame.BravoHotelSettingSlotWidget.SubSelectingKeyChanged // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SubOnKeySelected(struct FInputChord& SelectedKey); // Function BravoHotelGame.BravoHotelSettingSlotWidget.SubOnKeySelected // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetSelectIndexSelectBox(int32_t Index, bool BroadcastChange); // Function BravoHotelGame.BravoHotelSettingSlotWidget.SetSelectIndexSelectBox // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetSelectIndexComboBox(int32_t Index, bool BroadcastChange); // Function BravoHotelGame.BravoHotelSettingSlotWidget.SetSelectIndexComboBox // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPercentValue(float Value); // Function BravoHotelGame.BravoHotelSettingSlotWidget.SetPercentValue // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetDisplayMode(enum class EWindowMode WindowMode); // Function BravoHotelGame.BravoHotelSettingSlotWidget.SetDisplayMode // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void RollBackSetting(); // Function BravoHotelGame.BravoHotelSettingSlotWidget.RollBackSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb8000
	void ResolutionSelected(int32_t Index, int32_t ResolutionX, int32_t ResolutionY); // Function BravoHotelGame.BravoHotelSettingSlotWidget.ResolutionSelected // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	float PercentToValue(float InPercent); // Function BravoHotelGame.BravoHotelSettingSlotWidget.PercentToValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb7f70
	void OnKeySelectedFromInput(bool bIsSubType, struct FInputChord SelectedInKey); // Function BravoHotelGame.BravoHotelSettingSlotWidget.OnKeySelectedFromInput // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb7e10
	void MainSelectingKeyChanged(bool IsSelectingKey); // Function BravoHotelGame.BravoHotelSettingSlotWidget.MainSelectingKeyChanged // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void MainOnKeySelected(struct FInputChord& SelectedKey); // Function BravoHotelGame.BravoHotelSettingSlotWidget.MainOnKeySelected // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool IsSameCurKey(bool IsSubType, struct FInputChord InKey); // Function BravoHotelGame.BravoHotelSettingSlotWidget.IsSameCurKey // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb7ca0
	bool IsEmptyCurKey(bool IsSubType); // Function BravoHotelGame.BravoHotelSettingSlotWidget.IsEmptyCurKey // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb7c10
	void InitSetData(float InitValue, float InitValue2, bool BroadcastChange); // Function BravoHotelGame.BravoHotelSettingSlotWidget.InitSetData // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb7b00
	void InitDataByKeyInfo(bool IsSub, struct FInputActionKeyMapping& Index, bool IsInit); // Function BravoHotelGame.BravoHotelSettingSlotWidget.InitDataByKeyInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void InitDataByAxisKeyInfo(bool IsSub, struct FInputAxisKeyMapping& Index, bool IsInit); // Function BravoHotelGame.BravoHotelSettingSlotWidget.InitDataByAxisKeyInfo // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	struct FInputChord GetCurrentKey(bool bIsSubType); // Function BravoHotelGame.BravoHotelSettingSlotWidget.GetCurrentKey // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb79f0
	void DefaultSetting(bool IsInit); // Function BravoHotelGame.BravoHotelSettingSlotWidget.DefaultSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb7960
	void CheckFindOtherSameKey(enum class EKeySettingSubType SubCategoryType, bool IsSubType, struct FInputChord InKey, bool FromSelfKey); // Function BravoHotelGame.BravoHotelSettingSlotWidget.CheckFindOtherSameKey // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb7780
	void ChangeKey(struct FInputChord& KeyInput, bool IsSubKey); // Function BravoHotelGame.BravoHotelSettingSlotWidget.ChangeKey // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fb7640
	void Apply(); // Function BravoHotelGame.BravoHotelSettingSlotWidget.Apply // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb7620
};

// Class BravoHotelGame.BravoHotelSettingSubWidget
// Size: 0x298 (Inherited: 0x298)
struct UBravoHotelSettingSubWidget : UBravoHotelSettingBaseWidget {

	void SetScrollLock(bool Lock); // Function BravoHotelGame.BravoHotelSettingSubWidget.SetScrollLock // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool IsReflexSupported(); // Function BravoHotelGame.BravoHotelSettingSubWidget.IsReflexSupported // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1fb8f20
	void GetSlotWidgetList(struct TArray<struct UBravoHotelSettingSlotWidget*>& outList); // Function BravoHotelGame.BravoHotelSettingSubWidget.GetSlotWidgetList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fb8e70
	void GetSlotList(struct TArray<struct UBravoHotelSettingSlotWidget*>& outList); // Function BravoHotelGame.BravoHotelSettingSubWidget.GetSlotList // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void GetKeyList(struct TMap<enum class EKeySettingSubType, struct FSettingInfoList>& OutData, enum class EKeySettingType BeginType, enum class EKeySettingType EndType); // Function BravoHotelGame.BravoHotelSettingSubWidget.GetKeyList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fb8cc0
	void CreateSlotList(); // Function BravoHotelGame.BravoHotelSettingSubWidget.CreateSlotList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void Binding(); // Function BravoHotelGame.BravoHotelSettingSubWidget.Binding // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb8ca0
};

// Class BravoHotelGame.BravoHotelSettingWidget
// Size: 0x3d8 (Inherited: 0x298)
struct UBravoHotelSettingWidget : UBravoHotelSettingBaseWidget {
	struct TArray<struct FBackupSlotData> BackupSlots; // 0x298(0x10)
	char pad_2A8[0x8]; // 0x2a8(0x08)
	struct TMap<struct FName, struct FString> SettingList; // 0x2b0(0x50)
	struct TMap<struct FName, struct UBravoHotelSettingSlotWidget*> ChangeSettingList; // 0x300(0x50)
	struct TMap<struct FName, struct FChangeKeySlotInfo> ChangeSettingKeyList; // 0x350(0x50)
	struct TArray<struct UBravoHotelSettingSubWidget*> SubList; // 0x3a0(0x10)
	struct TArray<struct UBravoHotelSettingSlotWidget*> SlotList; // 0x3b0(0x10)
	bool ChangingTotalGraphic; // 0x3c0(0x01)
	bool IsInitState; // 0x3c1(0x01)
	enum class ESettingBigType SelectedTyp; // 0x3c2(0x01)
	char pad_3C3[0x15]; // 0x3c3(0x15)

	void UpdateVideoMemoryUsageGraph(int32_t UsedVideoMemory, int32_t TotalVideoMemory, int32_t CurrentProcessUsage, int32_t OtherProcessUsage); // Function BravoHotelGame.BravoHotelSettingWidget.UpdateVideoMemoryUsageGraph // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void UpdateTotalGraphics(); // Function BravoHotelGame.BravoHotelSettingWidget.UpdateTotalGraphics // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9f80
	void RefreshDisplayResolution(); // Function BravoHotelGame.BravoHotelSettingWidget.RefreshDisplayResolution // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9f60
	void RefreshDeve(); // Function BravoHotelGame.BravoHotelSettingWidget.RefreshDeve // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void LoadDataSetting(struct UBravoHotelSettingSlotWidget* SlotWidget); // Function BravoHotelGame.BravoHotelSettingWidget.LoadDataSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9ee0
	bool IsHaveChangeValue(); // Function BravoHotelGame.BravoHotelSettingWidget.IsHaveChangeValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9eb0
	void GoBack(); // Function BravoHotelGame.BravoHotelSettingWidget.GoBack // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9e90
	struct TArray<struct UBravoHotelSettingSubWidget*> GetSubList(); // Function BravoHotelGame.BravoHotelSettingWidget.GetSubList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void Default(enum class ESettingBigType Type); // Function BravoHotelGame.BravoHotelSettingWidget.Default // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9e10
	void CreateConfirmWidget(int32_t TabIdx, enum class ESettingBigType SelectTabType, int32_t PopupType); // Function BravoHotelGame.BravoHotelSettingWidget.CreateConfirmWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void CheckHaveApplyList(enum class ESettingBigType Type); // Function BravoHotelGame.BravoHotelSettingWidget.CheckHaveApplyList // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ChangeValueDirect(enum class ESettingType& Type, float& Value); // Function BravoHotelGame.BravoHotelSettingWidget.ChangeValueDirect // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fb9cb0
	void ChangeValue(struct UBravoHotelSettingSlotWidget* Value); // Function BravoHotelGame.BravoHotelSettingWidget.ChangeValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9c30
	void ChangeKeyValue(struct UBravoHotelSettingSlotWidget* Value, bool IsSubKey); // Function BravoHotelGame.BravoHotelSettingWidget.ChangeKeyValue // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9b60
	void ChangedTab(enum class ESettingBigType InTabType); // Function BravoHotelGame.BravoHotelSettingWidget.ChangedTab // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9d90
	void Apply(enum class ESettingBigType Type, bool UseConfirmPopup); // Function BravoHotelGame.BravoHotelSettingWidget.Apply // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9a90
	void AllLoadDataSetting(); // Function BravoHotelGame.BravoHotelSettingWidget.AllLoadDataSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x1fb9a70
};

// Class BravoHotelGame.ClientArrowComponent
// Size: 0x4b0 (Inherited: 0x4b0)
struct UClientArrowComponent : UArrowComponent {
};

// Class BravoHotelGame.BravoHotelShellCasingArrowComponent
// Size: 0x4e0 (Inherited: 0x4b0)
struct UBravoHotelShellCasingArrowComponent : UClientArrowComponent {
	struct ABravoHotelShellCasing* ShellCasingClass; // 0x4b0(0x08)
	float SpawnPowerMin; // 0x4b8(0x04)
	float SpawnPowerMax; // 0x4bc(0x04)
	float EjectAngleMin; // 0x4c0(0x04)
	float EjectAngleMax; // 0x4c4(0x04)
	float SpinAngleMin; // 0x4c8(0x04)
	float SpinAngleMax; // 0x4cc(0x04)
	bool bSpawnLastShotOnly; // 0x4d0(0x01)
	char pad_4D1[0xf]; // 0x4d1(0x0f)

	void SpawnShellCasing(struct FTransform& TargetSpawnTransform); // Function BravoHotelGame.BravoHotelShellCasingArrowComponent.SpawnShellCasing // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x1fba560
};

// Class BravoHotelGame.BravoHotelSightAttachment
// Size: 0x430 (Inherited: 0x320)
struct ABravoHotelSightAttachment : AActor {
	struct UStaticMeshComponent* WeaponSight; // 0x320(0x08)
	bool bUpdateScopeWidgetScaling; // 0x328(0x01)
	enum class EWeaponAttachmentItem SightType; // 0x329(0x01)
	char pad_32A[0x6]; // 0x32a(0x06)
	struct UMaterialInterface* LensMaterial_1P; // 0x330(0x08)
	struct UMaterialInterface* LensMaterial_3P; // 0x338(0x08)
	struct UWidgetComponent* ScopeWidget; // 0x340(0x08)
	float InitialScopeWidgetDistance; // 0x348(0x04)
	char pad_34C[0x4]; // 0x34c(0x04)
	struct TArray<struct UWidgetComponent*> BP_ScopeWidgets; // 0x350(0x10)
	struct TArray<struct UPrimitiveComponent*> ChildPrimitiveComponents; // 0x360(0x10)
	struct UUserWidget* WidgetClass; // 0x370(0x08)
	struct FVector2D WidgetDrawSize; // 0x378(0x08)
	struct FVector DefaultWidgetComponentLocation; // 0x380(0x0c)
	bool bUseHighMagnificationMesh; // 0x38c(0x01)
	char pad_38D[0x3]; // 0x38d(0x03)
	struct TSoftObjectPtr<UStaticMesh> HighMagnificationSightMesh; // 0x390(0x28)
	struct TSoftObjectPtr<UStaticMesh> DefaultSightMesh; // 0x3b8(0x28)
	struct UStaticMesh* LoadedHighMagnificationSightMesh; // 0x3e0(0x08)
	struct UStaticMesh* LoadedDefaultSightMesh; // 0x3e8(0x08)
	struct FTimerHandle TimerHandle_ScopeVisible; // 0x3f0(0x08)
	float VisibleDelayTime; // 0x3f8(0x04)
	float ViewportRatioMax; // 0x3fc(0x04)
	float ViewportSizeMax; // 0x400(0x04)
	bool bIsADSMode; // 0x404(0x01)
	char pad_405[0x3]; // 0x405(0x03)
	float ScaleMultiplier_ZoomInOut; // 0x408(0x04)
	bool bKeepMagnifierIndex; // 0x40c(0x01)
	char pad_40D[0x3]; // 0x40d(0x03)
	struct TArray<float> MagnifierList; // 0x410(0x10)
	float CurrentMagnifier; // 0x420(0x04)
	int16_t InitialMagnifierIndex; // 0x424(0x02)
	char pad_426[0x2]; // 0x426(0x02)
	struct FVector2D ScopeWidgetDefaultSize; // 0x428(0x08)

	float ZoomOut(); // Function BravoHotelGame.BravoHotelSightAttachment.ZoomOut // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbb170
	float ZoomIn(); // Function BravoHotelGame.BravoHotelSightAttachment.ZoomIn // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbb140
	void UpdateScale(); // Function BravoHotelGame.BravoHotelSightAttachment.UpdateScale // (Final|Native|Public) // @ game+0x1fbb120
	void SetScopeVisible(bool bNewVisible); // Function BravoHotelGame.BravoHotelSightAttachment.SetScopeVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbb090
	void SetScopeAngle(float NewAngle); // Function BravoHotelGame.BravoHotelSightAttachment.SetScopeAngle // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbb010
	void SetScaleMultiplierForZoomInOut(float NewScaleMultiplier); // Function BravoHotelGame.BravoHotelSightAttachment.SetScaleMultiplierForZoomInOut // (Final|Native|Public) // @ game+0x1fbaf90
	void SetADSMode(bool bIsADS, bool bImmediately); // Function BravoHotelGame.BravoHotelSightAttachment.SetADSMode // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbaec0
	void ResetMagnifier(bool bForce); // Function BravoHotelGame.BravoHotelSightAttachment.ResetMagnifier // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbae30
	void InternalSetScopeVisible(bool bNewVisible); // Function BravoHotelGame.BravoHotelSightAttachment.InternalSetScopeVisible // (Final|Native|Private) // @ game+0x1fbada0
	struct UStaticMesh* GetStaticMesh(); // Function BravoHotelGame.BravoHotelSightAttachment.GetStaticMesh // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1fbad70
	enum class EWeaponAttachmentItem GetSightType(); // Function BravoHotelGame.BravoHotelSightAttachment.GetSightType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1fbad40
	struct UStaticMeshComponent* GetSightMeshComponent(); // Function BravoHotelGame.BravoHotelSightAttachment.GetSightMeshComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x16d2670
	float GetSightMagnification(); // Function BravoHotelGame.BravoHotelSightAttachment.GetSightMagnification // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1fbad10
	struct UBravoHotelScopeWidget* GetScopeWidget(); // Function BravoHotelGame.BravoHotelSightAttachment.GetScopeWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1fbace0
	int32_t GetMagnifierListCount(); // Function BravoHotelGame.BravoHotelSightAttachment.GetMagnifierListCount // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1fbacb0
	float GetDefaultMagnifier(); // Function BravoHotelGame.BravoHotelSightAttachment.GetDefaultMagnifier // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbac80
	void FPSK_UpdateADSMode(); // Function BravoHotelGame.BravoHotelSightAttachment.FPSK_UpdateADSMode // (Final|Native|Public) // @ game+0x1fbac60
	void Deactivate(); // Function BravoHotelGame.BravoHotelSightAttachment.Deactivate // (Final|Native|Public) // @ game+0x1fbac40
	void ApplyAsyncLoadedData(); // Function BravoHotelGame.BravoHotelSightAttachment.ApplyAsyncLoadedData // (Final|Native|Protected) // @ game+0x1fbac20
	void Activate(struct USkinnedMeshComponent* NewParentComponent, struct FName& AttachSocketName); // Function BravoHotelGame.BravoHotelSightAttachment.Activate // (Final|Native|Public|HasOutParms) // @ game+0x1fbab50
};

// Class BravoHotelGame.BravoHotelSightInfoWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelSightInfoWidget : UUserWidget {
};

// Class BravoHotelGame.BravoHotelSignificanceManager
// Size: 0x1a8 (Inherited: 0x170)
struct UBravoHotelSignificanceManager : USignificanceManager {
	struct FSignificanceCriteriaSetup DefaultCriteriaSetup; // 0x170(0x28)
	bool bIsEnabled; // 0x198(0x01)
	char pad_199[0x7]; // 0x199(0x07)
	struct APlayerCameraManager* CachedCameraManager; // 0x1a0(0x08)
};

// Class BravoHotelGame.BravoHotelSimulationActor
// Size: 0x340 (Inherited: 0x320)
struct ABravoHotelSimulationActor : ABravoHotelActor {
	struct USceneComponent* Root; // 0x320(0x08)
	struct UStaticMeshComponent* SimulationStaticMesh; // 0x328(0x08)
	float LifeTime; // 0x330(0x04)
	char pad_334[0xc]; // 0x334(0x0c)
};

// Class BravoHotelGame.BravoHotelSkillMapWidget
// Size: 0x250 (Inherited: 0x248)
struct UBravoHotelSkillMapWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
};

// Class BravoHotelGame.BravoHotelSkillTargetingBase
// Size: 0x340 (Inherited: 0x320)
struct ABravoHotelSkillTargetingBase : AActor {
	struct UParticleSystemComponent* MissileLineParticle; // 0x320(0x08)
	struct UParticleSystemComponent* MissileParticle; // 0x328(0x08)
	struct UDecalComponent* TargetDecal; // 0x330(0x08)
	float TargetRadius; // 0x338(0x04)
	char pad_33C[0x4]; // 0x33c(0x04)

	void UpdateTargetSize(); // Function BravoHotelGame.BravoHotelSkillTargetingBase.UpdateTargetSize // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e477f0
	void SetTargetRadius(float Radius); // Function BravoHotelGame.BravoHotelSkillTargetingBase.SetTargetRadius // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbbd50
	void OnRep_TargetRadius(); // Function BravoHotelGame.BravoHotelSkillTargetingBase.OnRep_TargetRadius // (Final|Native|Public) // @ game+0x1fbbd30
	float GetTargetRadius(); // Function BravoHotelGame.BravoHotelSkillTargetingBase.GetTargetRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1fbbd10
};

// Class BravoHotelGame.BravoHotelSkillTargetingBombing
// Size: 0x378 (Inherited: 0x340)
struct ABravoHotelSkillTargetingBombing : ABravoHotelSkillTargetingBase {
	struct UAkAudioEvent* BombingSound; // 0x340(0x08)
	char pad_348[0x30]; // 0x348(0x30)
};

// Class BravoHotelGame.BravoHotelSkillTargetingNuclear
// Size: 0x368 (Inherited: 0x340)
struct ABravoHotelSkillTargetingNuclear : ABravoHotelSkillTargetingBase {
	struct FNuclearInfo NuclearInfo; // 0x340(0x0c)
	char pad_34C[0x4]; // 0x34c(0x04)
	struct UAkAudioEvent* NuclearWarningEvent; // 0x350(0x08)
	float BroadcastDelayTime; // 0x358(0x04)
	float NuclearDelayTime; // 0x35c(0x04)
	float NuclearHeight; // 0x360(0x04)
	bool bBroadcastNuclear; // 0x364(0x01)
	char pad_365[0x3]; // 0x365(0x03)

	void OnRep_BroadcastNuclear(); // Function BravoHotelGame.BravoHotelSkillTargetingNuclear.OnRep_BroadcastNuclear // (Final|Native|Public) // @ game+0x1fbc320
};

// Class BravoHotelGame.BravoHotelSmartPingActor
// Size: 0x5c8 (Inherited: 0x320)
struct ABravoHotelSmartPingActor : AActor {
	struct AActor* LocationActor; // 0x320(0x08)
	struct UStaticMeshComponent* LightPoleMesh; // 0x328(0x08)
	bool IsBook; // 0x330(0x01)
	bool IsTempActor; // 0x331(0x01)
	bool IsPersonalSupplyBoxActor; // 0x332(0x01)
	bool IsMaterialItemActor; // 0x333(0x01)
	bool bIsExpertWeaponItemActor; // 0x334(0x01)
	bool bIsLocalActor; // 0x335(0x01)
	char pad_336[0x2]; // 0x336(0x02)
	struct FMaterialItemPingInfo MaterialPingInfo; // 0x338(0x30)
	struct FExpertWeaponPingInfo ExpertWeaponPingInfo; // 0x368(0x28)
	struct FBravoHotelLocalPingInfo LocalPingInfo; // 0x390(0x30)
	struct ABravoHotelPlayerState* OwnerState; // 0x3c0(0x08)
	struct FBravoHotelPingInfo PingInfo; // 0x3c8(0x38)
	struct ABravoHotelPlayerController* PlayerController; // 0x400(0x08)
	struct FBravoHotelSmartPingIconSettings PingSettings; // 0x408(0xb8)
	float ScreenRot; // 0x4c0(0x04)
	char pad_4C4[0x4]; // 0x4c4(0x04)
	struct FVector TargetPingLocation; // 0x4c8(0x0c)
	bool Active; // 0x4d4(0x01)
	char pad_4D5[0x3]; // 0x4d5(0x03)
	struct UBravoHotelSmartPingIconWidget* PingWidget; // 0x4d8(0x08)
	float WidgetSize; // 0x4e0(0x04)
	bool ShowLine; // 0x4e4(0x01)
	bool InNm; // 0x4e5(0x01)
	enum class EWidgetSpace CurrentWidgetSpace; // 0x4e6(0x01)
	char pad_4E7[0x1]; // 0x4e7(0x01)
	struct UWidgetComponent* PingWidgetCompentSapceWorld; // 0x4e8(0x08)
	struct UWidgetComponent* PingWidgetCompentSapceScreen; // 0x4f0(0x08)
	struct UBravoHotelSmartPingIconWidget* PingIconWidgetWorld; // 0x4f8(0x08)
	struct UBravoHotelSmartPingIconWidget* PingIconWidgetScreen; // 0x500(0x08)
	struct UCurveFloat* SmartPingLineScale; // 0x508(0x08)
	float CheckHieght; // 0x510(0x04)
	float CheckDistance; // 0x514(0x04)
	struct UBravoHotelSmartPingSystem* SmartPingSystem; // 0x518(0x08)
	char pad_520[0x6a]; // 0x520(0x6a)
	bool CompleteBindingOptin; // 0x58a(0x01)
	char pad_58B[0x5]; // 0x58b(0x05)
	struct UCurveFloat* PingAlphaCurve; // 0x590(0x08)
	struct UCurveFloat* PingLightAimPoleAlphaCurve; // 0x598(0x08)
	struct UCurveFloat* PingLightPoleDistanceAlphaCurve; // 0x5a0(0x08)
	struct UCurveFloat* PingLightPoleDistanceRadiusCurve; // 0x5a8(0x08)
	struct UCurveFloat* PingLightPoleFovRadiusCurve; // 0x5b0(0x08)
	float ForceOpacity1DurationTime; // 0x5b8(0x04)
	struct FVector2D AddCenterPoint; // 0x5bc(0x08)
	char pad_5C4[0x4]; // 0x5c4(0x04)

	void UpdateRotation(float NewLineRate); // Function BravoHotelGame.BravoHotelSmartPingActor.UpdateRotation // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void TestLocation2D(struct FVector2D& Location); // Function BravoHotelGame.BravoHotelSmartPingActor.TestLocation2D // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void TestLocation(struct FVector& Location); // Function BravoHotelGame.BravoHotelSmartPingActor.TestLocation // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent) // @ game+0x23a3b60
	void StartUsingOpacity(); // Function BravoHotelGame.BravoHotelSmartPingActor.StartUsingOpacity // (Final|Native|Public) // @ game+0x1fbd9e0
	void StartRemoveMaterialPing(); // Function BravoHotelGame.BravoHotelSmartPingActor.StartRemoveMaterialPing // (Final|Native|Public) // @ game+0x1fbd9c0
	void StartRemoveExpertWeaponPing(); // Function BravoHotelGame.BravoHotelSmartPingActor.StartRemoveExpertWeaponPing // (Final|Native|Public) // @ game+0x1fbd9a0
	void SetShowDebugLightPole(bool IsShow); // Function BravoHotelGame.BravoHotelSmartPingActor.SetShowDebugLightPole // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbd910
	void SetRemoveMaterialPing(); // Function BravoHotelGame.BravoHotelSmartPingActor.SetRemoveMaterialPing // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetRemoveExpertWeaponPing(); // Function BravoHotelGame.BravoHotelSmartPingActor.SetRemoveExpertWeaponPing // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetPersonalSupplyBoxPingType(enum class EPersonalSupplyBoxPingType NewState); // Function BravoHotelGame.BravoHotelSmartPingActor.SetPersonalSupplyBoxPingType // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetInNm(bool IsIn); // Function BravoHotelGame.BravoHotelSmartPingActor.SetInNm // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void RemoveMaterialPing(); // Function BravoHotelGame.BravoHotelSmartPingActor.RemoveMaterialPing // (Final|Native|Public) // @ game+0x1fbd8f0
	void RemoveExpertWeaponPing(); // Function BravoHotelGame.BravoHotelSmartPingActor.RemoveExpertWeaponPing // (Final|Native|Public) // @ game+0x1fbd8d0
	void OnPersonalBoxActivate(struct FVector& Location, struct FBravoHotelSmartPingIconSettings& Settings, struct ABravoHotelPlayerState* NewOwnerState); // Function BravoHotelGame.BravoHotelSmartPingActor.OnPersonalBoxActivate // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1fbd6b0
	struct AActor* OnMaterialItemActivate(struct FMaterialItemPingInfo& NewMaterialPingInfo); // Function BravoHotelGame.BravoHotelSmartPingActor.OnMaterialItemActivate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbd600
	void OnLocalPingActivate(struct FBravoHotelLocalPingInfo& NewLocalPingInfo); // Function BravoHotelGame.BravoHotelSmartPingActor.OnLocalPingActivate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbd560
	struct AActor* OnExpertWeaponItemActivate(struct FExpertWeaponPingInfo& NewExpertWeaponPingInfo); // Function BravoHotelGame.BravoHotelSmartPingActor.OnExpertWeaponItemActivate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbd4a0
	void OnExitState(); // Function BravoHotelGame.BravoHotelSmartPingActor.OnExitState // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbd480
	void OnEnterState(); // Function BravoHotelGame.BravoHotelSmartPingActor.OnEnterState // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbd460
	void OnDeactivate(); // Function BravoHotelGame.BravoHotelSmartPingActor.OnDeactivate // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbd440
	void OnChangeOption(struct TArray<enum class ESettingType>& ChangeTypeList); // Function BravoHotelGame.BravoHotelSmartPingActor.OnChangeOption // (Final|Native|Public|HasOutParms) // @ game+0x1fbd390
	void OnBookActivate(struct FVector& Location, struct FBravoHotelSmartPingIconSettings& Settings, struct ABravoHotelPlayerState* NewOwnerState); // Function BravoHotelGame.BravoHotelSmartPingActor.OnBookActivate // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1fbd170
	void OnActivate(struct FBravoHotelSmartPingIconSettings& Settings, struct ABravoHotelPlayerState* NewOwnerState, bool GuideActor, struct FBravoHotelPingInfo& GuidPingInfo); // Function BravoHotelGame.BravoHotelSmartPingActor.OnActivate // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbcf00
	void GetTeamColor(int32_t TeamIndex, struct FLinearColor& OutColor); // Function BravoHotelGame.BravoHotelSmartPingActor.GetTeamColor // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void GetLightPoleValue(float& OutHeight, float& OutRadiusCurve, float& OutDiameter, float& OutAlpha, float& OutADSFOV); // Function BravoHotelGame.BravoHotelSmartPingActor.GetLightPoleValue // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbcd00
	struct UStaticMeshComponent* GetLightPoleMesh(); // Function BravoHotelGame.BravoHotelSmartPingActor.GetLightPoleMesh // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbccd0
	struct AActor* CreateLocationActor(struct FVector& SpawnLocation); // Function BravoHotelGame.BravoHotelSmartPingActor.CreateLocationActor // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void CheckRemoveMaterialPing(); // Function BravoHotelGame.BravoHotelSmartPingActor.CheckRemoveMaterialPing // (Final|Native|Public) // @ game+0x1fbccb0
	void CheckRemoveExpertWeaponPing(); // Function BravoHotelGame.BravoHotelSmartPingActor.CheckRemoveExpertWeaponPing // (Final|Native|Public) // @ game+0x1fbcc90
	bool CheckEnableShow(); // Function BravoHotelGame.BravoHotelSmartPingActor.CheckEnableShow // (Final|Native|Public) // @ game+0x1fbcc60
};

// Class BravoHotelGame.BravoHotelSmartPingIconWidget
// Size: 0x440 (Inherited: 0x248)
struct UBravoHotelSmartPingIconWidget : UUserWidget {
	enum class EWidgetSpace WidgetSpace; // 0x248(0x01)
	char pad_249[0x7]; // 0x249(0x07)
	struct UCurveFloat* SmartPingScaleWorld; // 0x250(0x08)
	struct UCurveFloat* SmartPingScale; // 0x258(0x08)
	struct UCurveFloat* Exit_Slide; // 0x260(0x08)
	struct UCurveFloat* Exit_Bounce; // 0x268(0x08)
	struct UCurveFloat* Exit_Scale; // 0x270(0x08)
	struct UCurveFloat* Enter_Slide; // 0x278(0x08)
	struct UCurveFloat* Enter_Bounce; // 0x280(0x08)
	struct UCurveFloat* Enter_Scale; // 0x288(0x08)
	struct UCurveFloat* SmartPingLineScale; // 0x290(0x08)
	struct UImage* IconImage; // 0x298(0x08)
	struct UUserWidget* IconBgImage; // 0x2a0(0x08)
	struct UImage* IconIndicator; // 0x2a8(0x08)
	struct ABravoHotelSmartPingActor* ParentPingActor; // 0x2b0(0x08)
	float PingDistance; // 0x2b8(0x04)
	char pad_2BC[0x4]; // 0x2bc(0x04)
	struct FTimerHandle TimerHandle_Update; // 0x2c0(0x08)
	struct FTimerHandle TimerHandle_OnActive; // 0x2c8(0x08)
	struct FBravoHotelSmartPingIconSettings PingIconSettings; // 0x2d0(0xb8)
	struct FMaterialItemPingInfo MaterialItemPingInfo; // 0x388(0x30)
	struct FExpertWeaponPingInfo ExpertWeaponItemPingInfo; // 0x3b8(0x28)
	struct FBravoHotelLocalPingInfo LocalPingInfo; // 0x3e0(0x30)
	enum class EPingIconAnimationStateType AnimationType; // 0x410(0x01)
	char pad_411[0x3]; // 0x411(0x03)
	float StartTime; // 0x414(0x04)
	float TimeSinceStart; // 0x418(0x04)
	float TransitionState; // 0x41c(0x04)
	float PingOpacity; // 0x420(0x04)
	float DefaultScale; // 0x424(0x04)
	float Seed; // 0x428(0x04)
	float PreDistance; // 0x42c(0x04)
	struct UTextBlock* DistanceText; // 0x430(0x08)
	bool EnableAnimation; // 0x438(0x01)
	bool IgnoreScale; // 0x439(0x01)
	bool bEnableShowDebugLightPole; // 0x43a(0x01)
	char pad_43B[0x5]; // 0x43b(0x05)

	void SetWidgetComponentsRenderScale(float ScaleRate); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetWidgetComponentsRenderScale // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetTimer(float Time); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetTimer // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbe9a0
	void SetShowDebugLightPole(bool IsShow); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetShowDebugLightPole // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool SetMaterialPing(struct FMaterialItemPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetMaterialPing // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool SetLocalPing(struct FBravoHotelLocalPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetLocalPing // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetLightPoleValue(float Height, float RadiusCurve, float Diameter, float AlphaCurve, float ADSFOV); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetLightPoleValue // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetIconSize(float Size); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetIconSize // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbe920
	void SetIconAlpha(float NewAlpha); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetIconAlpha // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetIcon(int32_t TeamPlayerIndex, enum class EItemPingIconType ItemPingIconType, bool IgnoreTeamIndex); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetIcon // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool SetExpertWeaponPing(struct FExpertWeaponPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.SetExpertWeaponPing // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnMaterialPingActive(struct FMaterialItemPingInfo& PingInfo, struct FBravoHotelSmartPingIconSettings& Settings); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.OnMaterialPingActive // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbe720
	void OnLocalPingActive(struct FBravoHotelLocalPingInfo& PingInfo, struct FBravoHotelSmartPingIconSettings& Settings); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.OnLocalPingActive // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbe520
	void OnExpertWeaponPingActive(struct FExpertWeaponPingInfo& PingInfo, struct FBravoHotelSmartPingIconSettings& Settings); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.OnExpertWeaponPingActive // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbe320
	void OnDeActive(); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.OnDeActive // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbe300
	void OnActive(struct FBravoHotelSmartPingIconSettings& Settings, int32_t TeamPlayerIndex, enum class EItemPingIconType ItemPingIconType); // Function BravoHotelGame.BravoHotelSmartPingIconWidget.OnActive // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbe100
};

// Class BravoHotelGame.BravoHotelSmartPingSystem
// Size: 0x128 (Inherited: 0xb0)
struct UBravoHotelSmartPingSystem : UActorComponent {
	struct TArray<struct ABravoHotelSmartPingActor*> PingActorList; // 0xb0(0x10)
	struct ABravoHotelSmartPingActor* PersonalSupplyBoxActor; // 0xc0(0x08)
	struct ABravoHotelSmartPingActor* GuideActor; // 0xc8(0x08)
	struct ABravoHotelSmartPingActor* BookActor; // 0xd0(0x08)
	struct ABravoHotelSmartPingActor* ExpertWeaponActor; // 0xd8(0x08)
	struct TArray<struct ABravoHotelSmartPingActor*> MaterialActors; // 0xe0(0x10)
	struct TArray<struct ABravoHotelSmartPingActor*> LocalPingActors; // 0xf0(0x10)
	struct TArray<struct AActor*> DetectedInteractionCancleActors; // 0x100(0x10)
	float LightPoleHeight; // 0x110(0x04)
	float LightPoleRadius; // 0x114(0x04)
	float DelayAfterLanding; // 0x118(0x04)
	char pad_11C[0x4]; // 0x11c(0x04)
	struct UParticleSystem* LightPoleEffect; // 0x120(0x08)

	bool TraceInteractionableActor(struct FVector& EndLocation, struct FHitResult& OutFindActor, struct TArray<struct FVector2D>& outList); // Function BravoHotelGame.BravoHotelSmartPingSystem.TraceInteractionableActor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x1fc0d00
	void SpawnSmartPing(struct ABravoHotelPlayerState* OwnerState); // Function BravoHotelGame.BravoHotelSmartPingSystem.SpawnSmartPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc0c80
	void ShowSmartPingMunu(bool bIsVisible, bool bIsOnMap, bool bIsEnableRequestMessage); // Function BravoHotelGame.BravoHotelSmartPingSystem.ShowSmartPingMunu // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowSmartPingMessage(struct FString Message, struct FString Color, struct FString UserName, struct FString ImagePath, struct FString TierIcon); // Function BravoHotelGame.BravoHotelSmartPingSystem.ShowSmartPingMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowSmartPing(struct ABravoHotelSmartPingActor* TargetActor); // Function BravoHotelGame.BravoHotelSmartPingSystem.ShowSmartPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc0c00
	void SetSmartPingMessage(struct ABravoHotelPlayerState* TargetState); // Function BravoHotelGame.BravoHotelSmartPingSystem.SetSmartPingMessage // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc0b80
	void SetPersonalSupplyBoxPingType(enum class EPersonalSupplyBoxPingType NewType); // Function BravoHotelGame.BravoHotelSmartPingSystem.SetPersonalSupplyBoxPingType // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc0b00
	void SetLightPoleHeight(float NewHeight); // Function BravoHotelGame.BravoHotelSmartPingSystem.SetLightPoleHeight // (Final|Native|Public) // @ game+0x1fc0a80
	void SetDebugLightPole(bool bIsDebug); // Function BravoHotelGame.BravoHotelSmartPingSystem.SetDebugLightPole // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc09f0
	void ServerRequestMessage(struct ABravoHotelPlayerState* TargetState, struct FString Message); // Function BravoHotelGame.BravoHotelSmartPingSystem.ServerRequestMessage // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable|NetValidate) // @ game+0x1fc08e0
	void ServerAddSmartPing(struct FBravoHotelPingInfo NewPingInfo, struct ABravoHotelPlayerController* OwnerController); // Function BravoHotelGame.BravoHotelSmartPingSystem.ServerAddSmartPing // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x1fc0780
	void ResetSmartPing(struct TArray<struct ABravoHotelPlayerState*>& TeamStateList); // Function BravoHotelGame.BravoHotelSmartPingSystem.ResetSmartPing // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void RequestResurrectionSmartPing(); // Function BravoHotelGame.BravoHotelSmartPingSystem.RequestResurrectionSmartPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc0760
	void RequestRequestMessage(struct ABravoHotelPlayerState* TargetState, struct FName& MessageKey); // Function BravoHotelGame.BravoHotelSmartPingSystem.RequestRequestMessage // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fc0690
	void RequestAddSmartPing(struct FBravoHotelPingInfo NewPingInfo, struct ABravoHotelPlayerController* OwnerController); // Function BravoHotelGame.BravoHotelSmartPingSystem.RequestAddSmartPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc0560
	void RemovePing(struct ABravoHotelCharacter* OwnerCharacter); // Function BravoHotelGame.BravoHotelSmartPingSystem.RemovePing // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void RemovePersonalSupplyBoxPing(); // Function BravoHotelGame.BravoHotelSmartPingSystem.RemovePersonalSupplyBoxPing // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void RemoveMaterialPing_BP(struct ABravoHotelPickup* NewMaterialItem); // Function BravoHotelGame.BravoHotelSmartPingSystem.RemoveMaterialPing_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void RemoveBookPing(); // Function BravoHotelGame.BravoHotelSmartPingSystem.RemoveBookPing // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnEnterPlayingState(); // Function BravoHotelGame.BravoHotelSmartPingSystem.OnEnterPlayingState // (Final|Native|Public) // @ game+0x1fc0540
	void InitWidgetPool(int32_t MaxCount); // Function BravoHotelGame.BravoHotelSmartPingSystem.InitWidgetPool // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc04c0
	void HideSmartPing(struct ABravoHotelSmartPingActor* TargetActor); // Function BravoHotelGame.BravoHotelSmartPingSystem.HideSmartPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc0440
	struct ABravoHotelSmartPingActor* GetUnusedWidgetFromPool(struct ABravoHotelPlayerState* NewState, bool& Result); // Function BravoHotelGame.BravoHotelSmartPingSystem.GetUnusedWidgetFromPool // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fc0370
	int32_t GetTableKeyToTableIndex(struct FName KeyName); // Function BravoHotelGame.BravoHotelSmartPingSystem.GetTableKeyToTableIndex // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc02e0
	struct FString GetSmartPingTypeName(struct FBravoHotelPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelSmartPingSystem.GetSmartPingTypeName // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fc01e0
	struct ABravoHotelSmartPingActor* GetRemainMaterialPingActor(); // Function BravoHotelGame.BravoHotelSmartPingSystem.GetRemainMaterialPingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc01b0
	struct ABravoHotelSmartPingActor* GetRemainLocalPingActor(); // Function BravoHotelGame.BravoHotelSmartPingSystem.GetRemainLocalPingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc0180
	struct ABravoHotelSmartPingActor* GetRemainExpertWeaponPingActor(); // Function BravoHotelGame.BravoHotelSmartPingSystem.GetRemainExpertWeaponPingActor // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc0150
	struct FString GetPingTypeName(struct FBravoHotelPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelSmartPingSystem.GetPingTypeName // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool GetIconFromTableIndex(int32_t Index, struct FBravoHotelSmartPingIconSettings& OutData); // Function BravoHotelGame.BravoHotelSmartPingSystem.GetIconFromTableIndex // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbff80
	void DeleteSmartPing(struct AActor* Owner); // Function BravoHotelGame.BravoHotelSmartPingSystem.DeleteSmartPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbff00
	struct ABravoHotelSmartPingActor* CreateSmartPingWidget(); // Function BravoHotelGame.BravoHotelSmartPingSystem.CreateSmartPingWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void CheckRemoveMaterialPingFromKey(struct FName& MaterialItemKey); // Function BravoHotelGame.BravoHotelSmartPingSystem.CheckRemoveMaterialPingFromKey // (Final|Native|Public|HasOutParms) // @ game+0x1fbfe70
	void CheckRemoveMaterialPing(struct ABravoHotelPickup* MaterialItem); // Function BravoHotelGame.BravoHotelSmartPingSystem.CheckRemoveMaterialPing // (Final|Native|Public) // @ game+0x1fbfdf0
	void CheckRemoveExpertWeaponPing(struct ABravoHotelPickup* ExpertWeaponItem); // Function BravoHotelGame.BravoHotelSmartPingSystem.CheckRemoveExpertWeaponPing // (Final|Native|Public) // @ game+0x1fbfd70
	bool CheckItemInteraction(struct FHitResult& OutFindActor); // Function BravoHotelGame.BravoHotelSmartPingSystem.CheckItemInteraction // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbfc90
	void AllShowSmartPing(); // Function BravoHotelGame.BravoHotelSmartPingSystem.AllShowSmartPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbfc70
	void AllRemoveLightPoleEffect(); // Function BravoHotelGame.BravoHotelSmartPingSystem.AllRemoveLightPoleEffect // (Final|Native|Public) // @ game+0x1fbfc50
	void AllHideSmartPing(); // Function BravoHotelGame.BravoHotelSmartPingSystem.AllHideSmartPing // (Final|Native|Public|BlueprintCallable) // @ game+0x1fbfc30
	void AllAddLightPoleEffect(); // Function BravoHotelGame.BravoHotelSmartPingSystem.AllAddLightPoleEffect // (Final|Native|Public) // @ game+0x1fbfc10
	void AddPersonalSupplyBoxPing(struct FVector NewPersonalSupplyBoxPosition); // Function BravoHotelGame.BravoHotelSmartPingSystem.AddPersonalSupplyBoxPing // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddMaterialPing_BP(struct ABravoHotelPickup* NewMaterialItem); // Function BravoHotelGame.BravoHotelSmartPingSystem.AddMaterialPing_BP // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AddMaterialPing(struct FMaterialItemPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelSmartPingSystem.AddMaterialPing // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbfb60
	void AddMaterialItemPing(struct ABravoHotelPickup* MaterialItem); // Function BravoHotelGame.BravoHotelSmartPingSystem.AddMaterialItemPing // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	int32_t AddLocalPing(struct FBravoHotelLocalPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelSmartPingSystem.AddLocalPing // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbfab0
	void AddExpertWeaponPing(struct FExpertWeaponPingInfo& PingInfo); // Function BravoHotelGame.BravoHotelSmartPingSystem.AddExpertWeaponPing // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fbfa00
	void AddBookPing(struct FVector NewPersonalSupplyBoxPosition); // Function BravoHotelGame.BravoHotelSmartPingSystem.AddBookPing // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelSpectatorController
// Size: 0x1400 (Inherited: 0x13e8)
struct ABravoHotelSpectatorController : ABravoHotelPlayerController {
	char pad_13E8[0x18]; // 0x13e8(0x18)

	void SetCurrentReplayTimeToSeconds(int32_t Seconds); // Function BravoHotelGame.BravoHotelSpectatorController.SetCurrentReplayTimeToSeconds // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc1440
	void SetCurrentReplayPlayRate(float PlayRate); // Function BravoHotelGame.BravoHotelSpectatorController.SetCurrentReplayPlayRate // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc13c0
	bool SetCurrentReplayPausedState(bool bDoPause); // Function BravoHotelGame.BravoHotelSpectatorController.SetCurrentReplayPausedState // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc1330
	void ReplayLastKillCam(); // Function BravoHotelGame.BravoHotelSpectatorController.ReplayLastKillCam // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc1310
	void OnKillcamGoToTimeComplete(bool bWasSuccessful); // Function BravoHotelGame.BravoHotelSpectatorController.OnKillcamGoToTimeComplete // (Final|Native|Public) // @ game+0x1fc1280
	void OnKillcamFinish(); // Function BravoHotelGame.BravoHotelSpectatorController.OnKillcamFinish // (Native|Event|Public|BlueprintEvent) // @ game+0x1fc1260
	void OnAllLevelLoadedFirstTime(); // Function BravoHotelGame.BravoHotelSpectatorController.OnAllLevelLoadedFirstTime // (Final|Native|Public) // @ game+0x1fc1240
	int32_t GetCurrentReplayTotalTimeInSeconds(); // Function BravoHotelGame.BravoHotelSpectatorController.GetCurrentReplayTotalTimeInSeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1fc1210
	int32_t GetCurrentReplayCurrentTimeInSeconds(); // Function BravoHotelGame.BravoHotelSpectatorController.GetCurrentReplayCurrentTimeInSeconds // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1fc11e0
};

// Class BravoHotelGame.BravoHotelSpectatorHUD
// Size: 0x868 (Inherited: 0x868)
struct ABravoHotelSpectatorHUD : ABravoHotelPlayerHUD {
};

// Class BravoHotelGame.BravoHotelSpectatorPawn
// Size: 0x3e0 (Inherited: 0x3b8)
struct ABravoHotelSpectatorPawn : ASpectatorPawn {
	struct APawn* TargetPawn; // 0x3b8(0x08)
	char pad_3C0[0x20]; // 0x3c0(0x20)

	void SetTargetVehicle(struct ABravoHotelVehicle* Vehicle, bool bDrive); // Function BravoHotelGame.BravoHotelSpectatorPawn.SetTargetVehicle // (Final|Native|Public) // @ game+0x1fc1a30
	void SetTarget(struct APawn* SelectedPawn); // Function BravoHotelGame.BravoHotelSpectatorPawn.SetTarget // (Final|Native|Public) // @ game+0x1fc19b0
	void ResetTargetVehicle(); // Function BravoHotelGame.BravoHotelSpectatorPawn.ResetTargetVehicle // (Final|Native|Public) // @ game+0x1fc1990
	void OnSetTarget(); // Function BravoHotelGame.BravoHotelSpectatorPawn.OnSetTarget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void DoNextTarget(bool Next); // Function BravoHotelGame.BravoHotelSpectatorPawn.DoNextTarget // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc1900
};

// Class BravoHotelGame.BravoHotelSTMComponent
// Size: 0x110 (Inherited: 0xb0)
struct UBravoHotelSTMComponent : UActorComponent {
	char pad_B0[0x60]; // 0xb0(0x60)
};

// Class BravoHotelGame.BravoHotelSuperBarrier
// Size: 0x398 (Inherited: 0x320)
struct ABravoHotelSuperBarrier : AActor {
	struct UStaticMeshComponent* StaticMeshComponent; // 0x320(0x08)
	struct UStaticMeshComponent* CreationEffectMeshComponent; // 0x328(0x08)
	bool bIsLifeSpanExpired; // 0x330(0x01)
	char pad_331[0x7]; // 0x331(0x07)
	struct UDestructibleComponent* DestructibleMeshComponent; // 0x338(0x08)
	struct UDestructibleMesh* DestructibleMeshRef; // 0x340(0x08)
	float MaxHp; // 0x348(0x04)
	float CurrentHP; // 0x34c(0x04)
	struct FVector_NetQuantize ImpactPointOnDestruct; // 0x350(0x0c)
	char pad_35C[0xc]; // 0x35c(0x0c)
	float BarrierDissolveValue; // 0x368(0x04)
	char pad_36C[0x4]; // 0x36c(0x04)
	struct UParticleSystem* ParticleSystem_OnSpawn; // 0x370(0x08)
	struct UAkAudioEvent* AkSound_OnSpawn; // 0x378(0x08)
	struct UAkAudioEvent* AKSound_Destructed; // 0x380(0x08)
	struct UAkAudioEvent* AkSound_Melee; // 0x388(0x08)
	struct UParticleSystemComponent* ParticleSystemComponent_OnSpawn; // 0x390(0x08)

	void OnRep_ImpactPointOnDestruct(); // Function BravoHotelGame.BravoHotelSuperBarrier.OnRep_ImpactPointOnDestruct // (Final|Native|Protected) // @ game+0x1fc21d0
	void OnRep_bIsLifeSpanExpired(); // Function BravoHotelGame.BravoHotelSuperBarrier.OnRep_bIsLifeSpanExpired // (Final|Native|Protected) // @ game+0x1fc21f0
	void DestroyActor(); // Function BravoHotelGame.BravoHotelSuperBarrier.DestroyActor // (Final|Native|Public) // @ game+0x1fc21b0
	void CreateDestructibleMesh(); // Function BravoHotelGame.BravoHotelSuperBarrier.CreateDestructibleMesh // (Final|Native|Public) // @ game+0x1fc2190
};

// Class BravoHotelGame.BravoHotelSupplyBox
// Size: 0xf0 (Inherited: 0x30)
struct UBravoHotelSupplyBox : UBravoHotelCoherentObject {
	char pad_30[0x8]; // 0x30(0x08)
	struct UParticleSystem* SupplyBoxSpawnEffect; // 0x38(0x08)
	struct UCameraPostProcessPreset* PP_Preset_PickupOutline; // 0x40(0x08)
	struct FMulticastInlineDelegate EffectEquipmentTransitionDelegate; // 0x48(0x10)
	struct FMulticastInlineDelegate EquipmentSounedDelegate; // 0x58(0x10)
	struct FMulticastInlineDelegate SlotHoverSounedDelegate; // 0x68(0x10)
	struct TArray<struct FSupplyBoxItemInfo> SupplyItemList; // 0x78(0x10)
	struct TArray<struct AActor*> TargetPointList; // 0x88(0x10)
	struct UCameraPostProcessPreset* PP_PickupOutlineRef; // 0x98(0x08)
	struct FSupplyBoxItemInfo CurrentActor; // 0xa0(0x30)
	struct FSupplySlotInfo CurrentSlot; // 0xd0(0x10)
	struct TArray<struct FEffectTransitionInfo> TransitionList; // 0xe0(0x10)
};

// Class BravoHotelGame.BravoHotelSupplyBoxSpawnComponent
// Size: 0x4e0 (Inherited: 0x4d0)
struct UBravoHotelSupplyBoxSpawnComponent : UBoxComponent {
	bool TraceLand; // 0x4c8(0x01)
	int32_t CustomIndex; // 0x4d0(0x04)
	char pad_4D5[0xb]; // 0x4d5(0x0b)

	void AddSupplyBox(struct UWorld* World); // Function BravoHotelGame.BravoHotelSupplyBoxSpawnComponent.AddSupplyBox // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc2f70
};

// Class BravoHotelGame.BravoHotelSystemLayer
// Size: 0x40 (Inherited: 0x40)
struct UBravoHotelSystemLayer : UBravoHotelLayerBase {
};

// Class BravoHotelGame.BravoHotelTeamInfoSlotWidget
// Size: 0x308 (Inherited: 0x248)
struct UBravoHotelTeamInfoSlotWidget : UUserWidget {
	struct FTimerHandle TimerHandle_CheckValue; // 0x248(0x08)
	char pad_250[0x8c]; // 0x250(0x8c)
	int32_t SlotIndex; // 0x2dc(0x04)
	struct ABravoHotelPlayerState* PlayerState; // 0x2e0(0x08)
	int32_t PlayedFireAnimationCnt; // 0x2e8(0x04)
	bool bPlayingFireAnimation; // 0x2ec(0x01)
	char pad_2ED[0x3]; // 0x2ed(0x03)
	int32_t FireCnt; // 0x2f0(0x04)
	float StartDownTime; // 0x2f4(0x04)
	float TotalDownTime; // 0x2f8(0x04)
	float DownTickTime; // 0x2fc(0x04)
	enum class ECharacterState CurrentState; // 0x300(0x01)
	bool bIsLocalState; // 0x301(0x01)
	char pad_302[0x6]; // 0x302(0x06)

	void UpdateInvalidationbox(); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.UpdateInvalidationbox // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetTalking(bool NewTalking, bool bIsMute); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetTalking // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetResuscitating(bool bNewFlag); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetResuscitating // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetRequestResuscitation(bool bNewFlag); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetRequestResuscitation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPlayFireAnimation(); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetPlayFireAnimation // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPing(struct FBravoHotelPingInfo& NewPingInfo); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetPing // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPerkName(struct FName& NewPerkName); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetPerkName // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPerkLevel(int32_t NewPerkLevel); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetPerkLevel // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPerkImg(struct TSoftObjectPtr<UPaperSprite>& NewPerkImg); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetPerkImg // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetNickName(struct FString NewNickName); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetNickName // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetKillCount(int32_t NewKillCount); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetKillCount // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetIndex(int32_t NewIndex); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetIndex // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetHp(int32_t NewCur, int32_t NewMax); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetHp // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetGoldenTime(struct FTimespan NewRemainTime, float NewPercent); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetGoldenTime // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetFiring(bool NewIsFiring); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetFiring // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetExpertWeaponName(struct FText& NewWeaponName); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetExpertWeaponName // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetCurHp(int32_t NewCurHP); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetCurHp // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetCharacterState(enum class ECharacterState NewState, bool IsDisconnect); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.SetCharacterState // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void CheckValue(); // Function BravoHotelGame.BravoHotelTeamInfoSlotWidget.CheckValue // (Final|Native|Public) // @ game+0x1fc3cd0
};

// Class BravoHotelGame.BravoHotelTeamInfoWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelTeamInfoWidget : UUserWidget {
	struct TArray<struct UBravoHotelTeamInfoSlotWidget*> SlotList; // 0x248(0x10)

	void Init(); // Function BravoHotelGame.BravoHotelTeamInfoWidget.Init // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc3ed0
	struct UBravoHotelTeamInfoSlotWidget* CreateSlot(); // Function BravoHotelGame.BravoHotelTeamInfoWidget.CreateSlot // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelTeamPlayerStart
// Size: 0x3c0 (Inherited: 0x350)
struct ABravoHotelTeamPlayerStart : APlayerStart {
	struct UBoxComponent* SpawnLocationBoxComponent; // 0x350(0x08)
	float CharacterHalfHeight; // 0x358(0x04)
	bool bUseAreaSystem; // 0x35c(0x01)
	char pad_35D[0xb]; // 0x35d(0x0b)
	struct FString AreaName; // 0x368(0x10)
	char pad_378[0x10]; // 0x378(0x10)
	int32_t MaxPlayerCountInArea; // 0x388(0x04)
	char pad_38C[0x4]; // 0x38c(0x04)
	struct FString PlayerStartName; // 0x390(0x10)
	int32_t MaxPlayerCount; // 0x3a0(0x04)
	bool bUseSpawnBound; // 0x3a4(0x01)
	char pad_3A5[0x3]; // 0x3a5(0x03)
	float SpawnBoundScale; // 0x3a8(0x04)
	int32_t AreaWeight; // 0x3ac(0x04)
	char pad_3B0[0x10]; // 0x3b0(0x10)

	bool GetUseSpawnBound(); // Function BravoHotelGame.BravoHotelTeamPlayerStart.GetUseSpawnBound // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc4270
	struct FVector GetSpawnLocation(struct AController* Player); // Function BravoHotelGame.BravoHotelTeamPlayerStart.GetSpawnLocation // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1fc41d0
	int32_t GetMaxPlayerCount(); // Function BravoHotelGame.BravoHotelTeamPlayerStart.GetMaxPlayerCount // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc41a0
	struct FString GetAreaName(); // Function BravoHotelGame.BravoHotelTeamPlayerStart.GetAreaName // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc4110
};

// Class BravoHotelGame.BravoHotelTeamPositionWidget
// Size: 0x290 (Inherited: 0x248)
struct UBravoHotelTeamPositionWidget : UUserWidget {
	struct ABravoHotelPlayerState* PlayerState; // 0x248(0x08)
	struct UCanvasPanel* Canvas_Main; // 0x250(0x08)
	struct UCanvasPanel* Canvas_Rot; // 0x258(0x08)
	char pad_260[0x28]; // 0x260(0x28)
	bool bIsLocalPlayer; // 0x288(0x01)
	bool bIsInViewport; // 0x289(0x01)
	bool IsDisconnected; // 0x28a(0x01)
	enum class EPlayerBehavior PlayerBehavior; // 0x28b(0x01)
	int32_t LastIconIndex; // 0x28c(0x04)

	void K2_OnChangedPlayerState(); // Function BravoHotelGame.BravoHotelTeamPositionWidget.K2_OnChangedPlayerState // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnChangedIsInViewport(); // Function BravoHotelGame.BravoHotelTeamPositionWidget.K2_OnChangedIsInViewport // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnChangedIconIndex(); // Function BravoHotelGame.BravoHotelTeamPositionWidget.K2_OnChangedIconIndex // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnChangedDisconnect(); // Function BravoHotelGame.BravoHotelTeamPositionWidget.K2_OnChangedDisconnect // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnChangedBehavior(); // Function BravoHotelGame.BravoHotelTeamPositionWidget.K2_OnChangedBehavior // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelTestCheatWidget
// Size: 0x258 (Inherited: 0x248)
struct UBravoHotelTestCheatWidget : UUserWidget {
	char pad_248[0x10]; // 0x248(0x10)

	void ResetFilterLevels(); // Function BravoHotelGame.BravoHotelTestCheatWidget.ResetFilterLevels // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc5230
	void LoadLevelsList(int32_t SelectStatus, bool bAllFilter, bool bLandmarkFilter, bool bHighFilterIn, bool bLowFilterIn, bool bLandscapeFilterIn, struct FString StrX, struct FString StrY, int32_t& HighCount, int32_t& LowCount, int32_t& Visible, int32_t& MakingVisible, int32_t& Loading, int32_t& Loaded, int32_t& UnloadedButStill, int32_t& Unloaded, int32_t& PreLoading, struct TArray<struct FString>& AddLevelNameLIst, struct TArray<struct FString>& AddLevels, struct TArray<int32_t>& RowList, struct TArray<int32_t>& ColumnList, struct TArray<struct FColor>& LevelColor); // Function BravoHotelGame.BravoHotelTestCheatWidget.LoadLevelsList // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fc4970
	void HideFilterLevels(); // Function BravoHotelGame.BravoHotelTestCheatWidget.HideFilterLevels // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc4950
	void Close(); // Function BravoHotelGame.BravoHotelTestCheatWidget.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed6060
};

// Class BravoHotelGame.BravoHotelTestWidget
// Size: 0x308 (Inherited: 0x248)
struct UBravoHotelTestWidget : UUserWidget {
	struct TArray<struct FString> SpawnResultInfo; // 0x248(0x10)
	struct TArray<struct FSpawnItems_DEBUG> SpawnResultData; // 0x258(0x10)
	struct TArray<struct FString> SpawnActorInfos; // 0x268(0x10)
	struct TMap<struct FString, struct FSpawnActors_DEBUG> SpawnActors; // 0x278(0x50)
	struct TArray<struct FSpawnActors_DEBUG> SpawnActorList; // 0x2c8(0x10)
	struct TArray<struct FString> SpawnBuildingList; // 0x2d8(0x10)
	struct TArray<struct FBuildingItemSpawnLog> SpawnBuildingList2; // 0x2e8(0x10)
	int32_t TotalLogCnt; // 0x2f8(0x04)
	float CurPercent; // 0x2fc(0x04)
	float CurCount; // 0x300(0x04)
	char pad_304[0x4]; // 0x304(0x04)

	void TestLog(struct FString Log, int32_t Index); // Function BravoHotelGame.BravoHotelTestWidget.TestLog // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void Teleport(struct FVector Location); // Function BravoHotelGame.BravoHotelTestWidget.Teleport // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x1fc6af0
	void SetSpawnResult(struct TArray<struct FString>& NewSpawnResultInfo, struct TArray<struct FSpawnItems_DEBUG>& NewSpawnResultData, bool IsEnd); // Function BravoHotelGame.BravoHotelTestWidget.SetSpawnResult // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fc6900
	void SetItemSpawnDataStrings(struct TArray<struct FString>& BuildingItemSpawnLogs, bool bStart, bool bEnd, int32_t TotalCnt); // Function BravoHotelGame.BravoHotelTestWidget.SetItemSpawnDataStrings // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fc6740
	void SetItemSpawnDataString(struct FString BuildingItemSpawnLog); // Function BravoHotelGame.BravoHotelTestWidget.SetItemSpawnDataString // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetItemSpawnDataComplete(); // Function BravoHotelGame.BravoHotelTestWidget.SetItemSpawnDataComplete // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetData(struct TArray<struct FString>& Results, struct TArray<struct FSpawnItems_DEBUG>& NewSpawnResultData); // Function BravoHotelGame.BravoHotelTestWidget.SetData // (Event|Public|HasOutParms|BlueprintEvent) // @ game+0x23a3b60
	void SaveFile(struct FString Filename); // Function BravoHotelGame.BravoHotelTestWidget.SaveFile // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc66a0
	void SaveActorListFile(struct FString Filename); // Function BravoHotelGame.BravoHotelTestWidget.SaveActorListFile // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc6600
	void RequestState(int32_t TotalCnt, int32_t CurCnt); // Function BravoHotelGame.BravoHotelTestWidget.RequestState // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void RequestPercent(float Percent); // Function BravoHotelGame.BravoHotelTestWidget.RequestPercent // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void RequestBuildingCount(struct FLogBuildCountData DivisionBuilding, struct FLogBuildCountData CurBuilding); // Function BravoHotelGame.BravoHotelTestWidget.RequestBuildingCount // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void Ok(); // Function BravoHotelGame.BravoHotelTestWidget.Ok // (Final|Native|Public|BlueprintCallable) // @ game+0x151b910
	void ForceAllSpawnItem(); // Function BravoHotelGame.BravoHotelTestWidget.ForceAllSpawnItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc65e0
	void FindActor(struct TArray<struct FString>& outActorInfos); // Function BravoHotelGame.BravoHotelTestWidget.FindActor // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fc6510
	void EmptySpawnItem(); // Function BravoHotelGame.BravoHotelTestWidget.EmptySpawnItem // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc64f0
	struct FBuildingItemSpawnLog Convert(struct FString JsonString); // Function BravoHotelGame.BravoHotelTestWidget.Convert // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc63a0
	void Close(); // Function BravoHotelGame.BravoHotelTestWidget.Close // (Final|Native|Public|BlueprintCallable) // @ game+0x1ed6060
};

// Class BravoHotelGame.BravoHotelThrowingWeaponMovementComponent
// Size: 0x200 (Inherited: 0x1d0)
struct UBravoHotelThrowingWeaponMovementComponent : UProjectileMovementComponent {
	struct FMulticastInlineDelegate OnProjectilePenetrate; // 0x1d0(0x10)
	bool bIsFluidFriction; // 0x1e0(0x01)
	bool bInFluid; // 0x1e1(0x01)
	char pad_1E2[0x2]; // 0x1e2(0x02)
	float FluidFriction; // 0x1e4(0x04)
	float BuoyancyZ; // 0x1e8(0x04)
	bool bEnableGuidedForce; // 0x1ec(0x01)
	char pad_1ED[0x3]; // 0x1ed(0x03)
	float GuidedForce; // 0x1f0(0x04)
	struct FVector GuidedLocation; // 0x1f4(0x0c)
};

// Class BravoHotelGame.BravoHotelTimeOfDay
// Size: 0x518 (Inherited: 0x320)
struct ABravoHotelTimeOfDay : AActor {
	enum class ETimeOfDayType CurrentTimeOfDayType; // 0x320(0x01)
	bool bUseClearFog; // 0x321(0x01)
	char pad_322[0x2]; // 0x322(0x02)
	float PostSimulationAlpha; // 0x324(0x04)
	struct TMap<enum class ETimeOfDayType, struct FBravoHotelTimeOfDaySettings> TimeOfDaySettings; // 0x328(0x50)
	struct ADirectionalLight* DirectionalLightRef; // 0x378(0x08)
	struct ASkyLight* SkyLightRef; // 0x380(0x08)
	struct AExponentialHeightFog* ExponentialHeightFogRef; // 0x388(0x08)
	struct AAtmosphericFog* AtmosphericFogRef; // 0x390(0x08)
	struct APostProcessVolume* PostProcessVolumeRef; // 0x398(0x08)
	struct TArray<struct FBravoHotelTimeOfDaySimulateInformation> SimulateInformations; // 0x3a0(0x10)
	float SimulationStartTime; // 0x3b0(0x04)
	bool bIsSimulating; // 0x3b4(0x01)
	char pad_3B5[0x3]; // 0x3b5(0x03)
	struct FBravoHotelTimeOfDaySettings CurrentSimulationTOD; // 0x3b8(0x98)
	struct FBravoHotelTimeOfDaySettings TargetSimulationTOD; // 0x450(0x98)
	enum class ETimeOfDayType TargetSimulateTimeOfDay; // 0x4e8(0x01)
	char pad_4E9[0x3]; // 0x4e9(0x03)
	float DL_RotationTransitionTime; // 0x4ec(0x04)
	float PostTransitionDelayTime; // 0x4f0(0x04)
	float PostTransitionTime; // 0x4f4(0x04)
	char pad_4F8[0x18]; // 0x4f8(0x18)
	enum class ETimeOfDayType StartTimeOfDayType; // 0x510(0x01)
	char pad_511[0x7]; // 0x511(0x07)

	void UpdateSimulation(); // Function BravoHotelGame.BravoHotelTimeOfDay.UpdateSimulation // (Final|Native|Protected) // @ game+0x1fc7440
	void UpdateRenderState(); // Function BravoHotelGame.BravoHotelTimeOfDay.UpdateRenderState // (Final|Native|Protected) // @ game+0x1fc7420
	void ChangeTimeOfDaySettings(struct FBravoHotelTimeOfDaySettings& TargetSetting, bool bResetUnchecked); // Function BravoHotelGame.BravoHotelTimeOfDay.ChangeTimeOfDaySettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x1fc7060
	void ChangeTimeOfDay_Simulate(enum class ETimeOfDayType Begin, enum class ETimeOfDayType End, float RotationTransition, float PostTransitionDelay, float PostTransition); // Function BravoHotelGame.BravoHotelTimeOfDay.ChangeTimeOfDay_Simulate // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc7290
	void ChangeTimeOfDay_InterpTo(enum class ETimeOfDayType TOD_Begin, enum class ETimeOfDayType TOD_End); // Function BravoHotelGame.BravoHotelTimeOfDay.ChangeTimeOfDay_InterpTo // (Final|Native|Public) // @ game+0x1fc71d0
	void ChangeTimeOfDay_Immediately(enum class ETimeOfDayType TimeOfDayType); // Function BravoHotelGame.BravoHotelTimeOfDay.ChangeTimeOfDay_Immediately // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc7150
};

// Class BravoHotelGame.BravoHotelTitleHUD
// Size: 0x4c0 (Inherited: 0x428)
struct ABravoHotelTitleHUD : ABravoHotelBaseHUD {
	char pad_428[0x8]; // 0x428(0x08)
	struct UUserWidget* LobbyWidgetClass; // 0x430(0x08)
	struct UUserWidget* CreateCharacterWidgetClass; // 0x438(0x08)
	struct UUserWidget* LobbyWidget; // 0x440(0x08)
	struct UUserWidget* CreateCharacterWidget; // 0x448(0x08)
	struct FMulticastInlineDelegate ChangedSceneDelegate; // 0x450(0x10)
	struct FMulticastInlineDelegate ChangedLoginDelegate; // 0x460(0x10)
	struct FMulticastInlineDelegate WaitingUserDelegate; // 0x470(0x10)
	char pad_480[0x40]; // 0x480(0x40)

	void UpdateUserCount(); // Function BravoHotelGame.BravoHotelTitleHUD.UpdateUserCount // (Final|Native|Public) // @ game+0x1fc7c40
	void RequestWaitingUser(); // Function BravoHotelGame.BravoHotelTitleHUD.RequestWaitingUser // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc7c20
	void RequestWaitingTicket(); // Function BravoHotelGame.BravoHotelTitleHUD.RequestWaitingTicket // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc7c00
	void OnWaitingUserDelegate__DelegateSignature(int32_t WaitingUserCount, int32_t WaitingTime); // DelegateFunction BravoHotelGame.BravoHotelTitleHUD.OnWaitingUserDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnHttpWaitingUser(uint32_t CurrentWaitingUserCount); // Function BravoHotelGame.BravoHotelTitleHUD.OnHttpWaitingUser // (Final|Native|Public) // @ game+0x1fc7b80
	void OnHttpWaitingTicket(bool Ticket); // Function BravoHotelGame.BravoHotelTitleHUD.OnHttpWaitingTicket // (Final|Native|Public) // @ game+0x1fc7af0
	void OnChangedSceneDelegate__DelegateSignature(enum class ESceneType SceneType); // DelegateFunction BravoHotelGame.BravoHotelTitleHUD.OnChangedSceneDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void OnChangedLoginDelegate__DelegateSignature(enum class ELoginFlow LoginFlow); // DelegateFunction BravoHotelGame.BravoHotelTitleHUD.OnChangedLoginDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void MoveNextScene(); // Function BravoHotelGame.BravoHotelTitleHUD.MoveNextScene // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc7ad0
	void MoveNextLoginFlow(); // Function BravoHotelGame.BravoHotelTitleHUD.MoveNextLoginFlow // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc7ab0
	struct UUserWidget* GetCreateCharacterWidget(); // Function BravoHotelGame.BravoHotelTitleHUD.GetCreateCharacterWidget // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1fc7a80
	void ForceMoveScene(enum class ESceneType SceneType); // Function BravoHotelGame.BravoHotelTitleHUD.ForceMoveScene // (Final|Native|Public|BlueprintCallable) // @ game+0x1fc7a00
};

// Class BravoHotelGame.BravoHotelTopInfoInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelTopInfoInterface : UInterface {

	void SlashLogMessage(struct FString Message, bool Warning); // Function BravoHotelGame.BravoHotelTopInfoInterface.SlashLogMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowRequestResusInfo(struct FText& Victim); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowRequestResusInfo // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1fca260
	void ShowRedZoneStartMessage(); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowRedZoneStartMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fca240
	void ShowRedZoneBombMessage(); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowRedZoneBombMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fca220
	void ShowRecoveryItemUse(struct FText& ItemName, bool Recovery); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowRecoveryItemUse // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1fca0f0
	void ShowPlayerActionMessage(struct FText& Message, bool Warning); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowPlayerActionMessage // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9fc0
	void ShowPerkDeck(); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowPerkDeck // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowNuclearMessage(int32_t Count); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowNuclearMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9f40
	void ShowNotRecorverHPMessage(bool Type, int32_t ItemId); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowNotRecorverHPMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9e70
	void ShowMyKnockOutInfo(struct FText& WeaponName, struct FText& Victim, bool bHeadShot, bool bTeamKill); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowMyKnockOutInfo // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9c60
	void ShowMyKillCountMessage(bool bIsKill, struct FText& Message); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowMyKillCountMessage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowInventoryNotEnoughSpaceMessage(); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowInventoryNotEnoughSpaceMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9c40
	void ShowHUDMessage(struct FBravoHotelHUDMessageRow MessageRow); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowHUDMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9b20
	void ShowHitDamageLog(struct FHitDamageLogInfo& HitDamageLogInfo); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowHitDamageLog // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ShowHealthRecovery(); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowHealthRecovery // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9c20
	void ShowEnergyRecovery(); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowEnergyRecovery // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9b00
	void ShowCommonMessage(struct FCommonMessageInfo& MessageInfo); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowCommonMessage // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1e863f0
	void ShowCastingUI(struct FCastingInfo& CastingInfo); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowCastingUI // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9a50
	void ShowBlueZoneNotiMessage(struct FString Title, struct FString Desc); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowBlueZoneNotiMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9950
	void ShowAmplifier(struct FString InText); // Function BravoHotelGame.BravoHotelTopInfoInterface.ShowAmplifier // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e861a0
	void SetReviveInfoSubInfo(bool bValue); // Function BravoHotelGame.BravoHotelTopInfoInterface.SetReviveInfoSubInfo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetKnockOut(bool State, float Percent); // Function BravoHotelGame.BravoHotelTopInfoInterface.SetKnockOut // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetKillCount(int32_t KillCount); // Function BravoHotelGame.BravoHotelTopInfoInterface.SetKillCount // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetEnergy(float energy); // Function BravoHotelGame.BravoHotelTopInfoInterface.SetEnergy // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc98d0
	void SetCurrentWeaponFireMode(enum class EWeaponFireMode FireMode); // Function BravoHotelGame.BravoHotelTopInfoInterface.SetCurrentWeaponFireMode // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9850
	void SetArmorInfo(bool bHasHelmet, float HelmetGauge, bool bHasChest, float ChestGauge, bool bHasBackpack, float BackpackGauge); // Function BravoHotelGame.BravoHotelTopInfoInterface.SetArmorInfo // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9680
	void ResetPerkDeck(); // Function BravoHotelGame.BravoHotelTopInfoInterface.ResetPerkDeck // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ResetMyInfo(); // Function BravoHotelGame.BravoHotelTopInfoInterface.ResetMyInfo // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9660
	void PlaySupplyBoxMessage(struct FString Message); // Function BravoHotelGame.BravoHotelTopInfoInterface.PlaySupplyBoxMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc95c0
	void PlayReadyGivePerk(); // Function BravoHotelGame.BravoHotelTopInfoInterface.PlayReadyGivePerk // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void PlayKillGivePerk(int32_t KillCount); // Function BravoHotelGame.BravoHotelTopInfoInterface.PlayKillGivePerk // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ParachuteVisibility(bool bState); // Function BravoHotelGame.BravoHotelTopInfoInterface.ParachuteVisibility // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9530
	void OnChangedToggleType(enum class EToggleWidgetModeType PreType, enum class EToggleWidgetModeType CurrentType); // Function BravoHotelGame.BravoHotelTopInfoInterface.OnChangedToggleType // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9470
	void MyInfoVisibility(bool bState); // Function BravoHotelGame.BravoHotelTopInfoInterface.MyInfoVisibility // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc93e0
	void HidePerkDeck(); // Function BravoHotelGame.BravoHotelTopInfoInterface.HidePerkDeck // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void HideNuclearMessage(); // Function BravoHotelGame.BravoHotelTopInfoInterface.HideNuclearMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc93c0
	void HideHUDMessage(enum class EHUDMessageType MessageType); // Function BravoHotelGame.BravoHotelTopInfoInterface.HideHUDMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9320
	void HideHealthRecovery(); // Function BravoHotelGame.BravoHotelTopInfoInterface.HideHealthRecovery // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc93a0
	void HideEnergyRecovery(); // Function BravoHotelGame.BravoHotelTopInfoInterface.HideEnergyRecovery // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9300
	void HideCastingUI(); // Function BravoHotelGame.BravoHotelTopInfoInterface.HideCastingUI // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1fc92e0
	void HideBlueZoneNotiMessage(); // Function BravoHotelGame.BravoHotelTopInfoInterface.HideBlueZoneNotiMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e869a0
	void HideAmplifier(); // Function BravoHotelGame.BravoHotelTopInfoInterface.HideAmplifier // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e85c90
	struct UUserWidget* GetSlotHoverWidget(); // Function BravoHotelGame.BravoHotelTopInfoInterface.GetSlotHoverWidget // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	bool GetReviveInfoSubInfo(); // Function BravoHotelGame.BravoHotelTopInfoInterface.GetReviveInfoSubInfo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	float GetReviveInfoPercent(); // Function BravoHotelGame.BravoHotelTopInfoInterface.GetReviveInfoPercent // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void AnybodySupplyBoxMessage(); // Function BravoHotelGame.BravoHotelTopInfoInterface.AnybodySupplyBoxMessage // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f41ec0
	void AddKillMessage(struct FKillBroadcastUIInfo& Info); // Function BravoHotelGame.BravoHotelTopInfoInterface.AddKillMessage // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x1fc9190
};

// Class BravoHotelGame.BravoHotelTopInfoWidget
// Size: 0x278 (Inherited: 0x248)
struct UBravoHotelTopInfoWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	enum class ECharacterState CharacterState; // 0x250(0x01)
	enum class ECharacterState PreCharacterState; // 0x251(0x01)
	char pad_252[0x6]; // 0x252(0x06)
	struct UUserWidget* FallingWidget; // 0x258(0x08)
	struct UBravoHotelAliveInfoWidget* UW_AliveInfoWidget; // 0x260(0x08)
	struct UUserWidget* DamageLogWidgetRef; // 0x268(0x08)
	bool bPerkDeckInitialized; // 0x270(0x01)
	char pad_271[0x7]; // 0x271(0x07)

	void UpdateDamageLogVisibility(); // Function BravoHotelGame.BravoHotelTopInfoWidget.UpdateDamageLogVisibility // (Final|Native|Public) // @ game+0x1fca6a0
	void OnChangedOptionGamePlay(struct TArray<enum class ESettingType>& ChangeTypeList); // Function BravoHotelGame.BravoHotelTopInfoWidget.OnChangedOptionGamePlay // (Final|Native|Public|HasOutParms) // @ game+0x1fca5f0
	void K2_SetPerkInfo(); // Function BravoHotelGame.BravoHotelTopInfoWidget.K2_SetPerkInfo // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelTrajectoryComponent
// Size: 0x148 (Inherited: 0xb0)
struct UBravoHotelTrajectoryComponent : UActorComponent {
	bool bCanDrawTrajectory; // 0xb0(0x01)
	bool bUseDebugLine; // 0xb1(0x01)
	bool bIsTrajectorySegmentsCreated; // 0xb2(0x01)
	char pad_B3[0x1]; // 0xb3(0x01)
	struct FVector DesiredStartLocation; // 0xb4(0x0c)
	struct FVector Gravity; // 0xc0(0x0c)
	struct FVector InitialVelocity; // 0xcc(0x0c)
	float TrajectorySegmentCount; // 0xd8(0x04)
	float TrajectorySegmentLength; // 0xdc(0x04)
	int32_t HitSegmentIndex; // 0xe0(0x04)
	struct FLinearColor ParticleColor; // 0xe4(0x10)
	float ParticleColorMultiplier; // 0xf4(0x04)
	struct UMaterialParameterCollection* MPC_Trajectory; // 0xf8(0x08)
	struct UParticleSystem* TrajectoryParticleSystem; // 0x100(0x08)
	struct TArray<struct UParticleSystemComponent*> SpawnedParticleArray; // 0x108(0x10)
	struct UDecalComponent* DecalComponent; // 0x118(0x08)
	struct FVector DecalScale; // 0x120(0x0c)
	struct FLinearColor DecalColor; // 0x12c(0x10)
	char pad_13C[0x4]; // 0x13c(0x04)
	struct UMaterialInterface* DecalMaterial; // 0x140(0x08)

	void StopDraw(); // Function BravoHotelGame.BravoHotelTrajectoryComponent.StopDraw // (Final|Native|Protected|BlueprintCallable) // @ game+0x1fcacb0
	void StartDraw(struct FVector InDesiredStartLocation, struct FVector InGravity, struct FVector InInitialVelocity, float InTrajectorySegmentCount, float InTrajectorySegmentLength, bool bInUseDebugLine); // Function BravoHotelGame.BravoHotelTrajectoryComponent.StartDraw // (Final|Native|Protected|HasDefaults|BlueprintCallable) // @ game+0x1fcaac0
	void SetParticleColor(); // Function BravoHotelGame.BravoHotelTrajectoryComponent.SetParticleColor // (Final|Native|Protected) // @ game+0x1fcaaa0
	void SetDecalColor(); // Function BravoHotelGame.BravoHotelTrajectoryComponent.SetDecalColor // (Final|Native|Protected) // @ game+0x1fcaa80
	void DrawTrajectory(); // Function BravoHotelGame.BravoHotelTrajectoryComponent.DrawTrajectory // (Final|Native|Protected) // @ game+0x1fcaa60
	void ClearSpawnedParticle(); // Function BravoHotelGame.BravoHotelTrajectoryComponent.ClearSpawnedParticle // (Final|Native|Protected) // @ game+0x1fcaa40
	void CalculateTrajectoryLocationAndVeloctiy(struct FVector& OutStartLocation, struct FVector& OutInitialVelocity); // Function BravoHotelGame.BravoHotelTrajectoryComponent.CalculateTrajectoryLocationAndVeloctiy // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x1fca960
};

// Class BravoHotelGame.BravoHotelTransportDropBoxActor
// Size: 0x4b0 (Inherited: 0x3a0)
struct ABravoHotelTransportDropBoxActor : ABravoHotelDropBoxActor {
	enum class EDropBoxState PrevDropBoxState; // 0x3a0(0x01)
	enum class EDropBoxState CurrentDropBoxState; // 0x3a1(0x01)
	bool bLandedOnWater; // 0x3a2(0x01)
	char pad_3A3[0x11]; // 0x3a3(0x11)
	float LandingSeconds; // 0x3b4(0x04)
	char pad_3B8[0x18]; // 0x3b8(0x18)
	struct UStaticMeshComponent* DropBoxMesh; // 0x3d0(0x08)
	struct UStaticMeshComponent* ParachuteMesh; // 0x3d8(0x08)
	struct UAkComponent* DropBoxAudioComponent; // 0x3e0(0x08)
	struct UParticleSystemComponent* BoxSmokeParticleFX; // 0x3e8(0x08)
	struct UParticleSystemComponent* WaterParticleFX; // 0x3f0(0x08)
	struct UParticleSystem* BoxSmokeParticle; // 0x3f8(0x08)
	struct UParticleSystem* WaterParticle; // 0x400(0x08)
	struct TSoftObjectPtr<UAkAudioEvent> SmokeStartSound; // 0x408(0x28)
	struct TSoftObjectPtr<UAkAudioEvent> SmokeStopSound; // 0x430(0x28)
	struct TSoftObjectPtr<UAkAudioEvent> LandOnGroundSound; // 0x458(0x28)
	struct TSoftObjectPtr<UAkAudioEvent> LandOnWaterSound; // 0x480(0x28)
	float SmokeRemainTime; // 0x4a8(0x04)
	float SmokeEeffectDuration; // 0x4ac(0x04)

	void SetDropBoxState(enum class EDropBoxState NewState); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.SetDropBoxState // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // @ game+0x1fcb8f0
	void OpenDropBoxEvent(); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.OpenDropBoxEvent // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	void OnRep_LandedOnWater(); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.OnRep_LandedOnWater // (Final|Native|Protected) // @ game+0x1fcb8d0
	void OnRep_ChangeDropState(); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.OnRep_ChangeDropState // (Final|Native|Protected) // @ game+0x1fcb8b0
	void OnLandedFX(bool bActive); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.OnLandedFX // (Final|Native|Protected) // @ game+0x1fcb820
	void OnLanded(); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.OnLanded // (Final|Native|Public|BlueprintCallable) // @ game+0x1fcb800
	void OnHit(struct UPrimitiveComponent* HitComp, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, struct FVector NormalImpulse, struct FHitResult& Hit); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.OnHit // (Final|Native|Protected|HasOutParms|HasDefaults) // @ game+0x1fcb630
	void LandedOnWaterEvent(); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.LandedOnWaterEvent // (Event|Protected|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void LandedDropBoxState(); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.LandedDropBoxState // (Final|Native|Protected) // @ game+0x1fcb610
	bool IsOnCompareState(enum class EDropBoxState CompareState); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.IsOnCompareState // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x1fcb580
	float GetSmokeRemainingTime(); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.GetSmokeRemainingTime // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x1fcb550
	void CutOffParachuteEvent(); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.CutOffParachuteEvent // (Final|Native|Protected) // @ game+0x1fcb530
	void CallEventByBoxState(enum class EDropBoxState DropBoxState); // Function BravoHotelGame.BravoHotelTransportDropBoxActor.CallEventByBoxState // (Final|Native|Protected) // @ game+0x1fcb4b0
};

// Class BravoHotelGame.ArmoryDataAsset
// Size: 0x80 (Inherited: 0x30)
struct UArmoryDataAsset : UDataAsset {
	struct TSoftObjectPtr<UStaticMesh> StaticMesh; // 0x30(0x28)
	struct FVector LocationOffset; // 0x58(0x0c)
	struct FRotator RotationOffset; // 0x64(0x0c)
	struct FVector ScaleOffset; // 0x70(0x0c)
	char pad_7C[0x4]; // 0x7c(0x04)
};

// Class BravoHotelGame.LoadTableAsset
// Size: 0x50 (Inherited: 0x30)
struct ULoadTableAsset : UPrimaryDataAsset {
	struct TArray<struct TSoftObjectPtr<UDataTable>> ItemTables; // 0x30(0x10)
	struct TArray<struct TSoftObjectPtr<UDataTable>> ItemValueTables; // 0x40(0x10)
};

// Class BravoHotelGame.BravoHotelUIWeaponInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelUIWeaponInterface : UInterface {

	int32_t GetDisplayRateofFire(); // Function BravoHotelGame.BravoHotelUIWeaponInterface.GetDisplayRateofFire // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2015120
	int32_t GetDisplayMagSize(); // Function BravoHotelGame.BravoHotelUIWeaponInterface.GetDisplayMagSize // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x20150f0
	int32_t GetDisplayLevel(); // Function BravoHotelGame.BravoHotelUIWeaponInterface.GetDisplayLevel // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x20150c0
	int32_t GetDisplayEffectiveRange(); // Function BravoHotelGame.BravoHotelUIWeaponInterface.GetDisplayEffectiveRange // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x1faebf0
	float GetDisplayDamage(); // Function BravoHotelGame.BravoHotelUIWeaponInterface.GetDisplayDamage // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2015090
	float GetDisplayAccuracy(); // Function BravoHotelGame.BravoHotelUIWeaponInterface.GetDisplayAccuracy // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x2015060
};

// Class BravoHotelGame.BravoHotelUserSettings
// Size: 0x520 (Inherited: 0x150)
struct UBravoHotelUserSettings : UGameUserSettings {
	char pad_150[0x4]; // 0x150(0x04)
	int32_t TotalGraphicQuality; // 0x154(0x04)
	bool MasterVolumeOnOff; // 0x158(0x01)
	char pad_159[0x3]; // 0x159(0x03)
	int32_t PreMasterVolume; // 0x15c(0x04)
	int32_t MasterVolume; // 0x160(0x04)
	int32_t EffectVolume; // 0x164(0x04)
	int32_t UIVolume; // 0x168(0x04)
	int32_t MusicVolume; // 0x16c(0x04)
	int32_t VoiceInputVolume; // 0x170(0x04)
	int32_t VoiceOutputVolume; // 0x174(0x04)
	int32_t VoiceInputMode; // 0x178(0x04)
	int32_t VoiceChanel; // 0x17c(0x04)
	int32_t VerticalSensitivity; // 0x180(0x04)
	int32_t GeneralSensitivity; // 0x184(0x04)
	int32_t VehicleDriverSensitivity; // 0x188(0x04)
	int32_t AOSSensitivity; // 0x18c(0x04)
	int32_t TotalSensitivity; // 0x190(0x04)
	bool bUsingDetailSensitivity; // 0x194(0x01)
	char pad_195[0x3]; // 0x195(0x03)
	int32_t ADSSensitivity; // 0x198(0x04)
	int32_t ADS2xSensitivity; // 0x19c(0x04)
	int32_t ADS4xSensitivity; // 0x1a0(0x04)
	int32_t ADS6xSensitivity; // 0x1a4(0x04)
	int32_t ADS8xSensitivity; // 0x1a8(0x04)
	int32_t ADS15xSensitivity; // 0x1ac(0x04)
	bool bReverseLeftAndRight; // 0x1b0(0x01)
	bool bReverseUpAndDown; // 0x1b1(0x01)
	char pad_1B2[0x2]; // 0x1b2(0x02)
	int32_t CrossHairIndex; // 0x1b4(0x04)
	struct TMap<enum class EWeaponType, enum class EWeaponFireMode> FireModeSettings; // 0x1b8(0x50)
	bool autoReload; // 0x208(0x01)
	bool ImmediateAttachment; // 0x209(0x01)
	bool InheritAttachment; // 0x20a(0x01)
	bool ShowPerkSlot; // 0x20b(0x01)
	bool ShowSmartPing; // 0x20c(0x01)
	bool ShowSmartPingSupplyBox; // 0x20d(0x01)
	char pad_20E[0x2]; // 0x20e(0x02)
	int32_t ShowSmartPingLightPole; // 0x210(0x04)
	bool NetworkDebugStatistics; // 0x214(0x01)
	bool bShowUseaableItemEffect; // 0x215(0x01)
	char pad_216[0x2]; // 0x216(0x02)
	int32_t AmmoEffect; // 0x218(0x04)
	int32_t MedicalLv3Effect; // 0x21c(0x04)
	int32_t MedicalLv2Effect; // 0x220(0x04)
	int32_t MedicalLv1Effect; // 0x224(0x04)
	int32_t RedBoostEffect; // 0x228(0x04)
	int32_t GreenBoostEffect; // 0x22c(0x04)
	int32_t BlueBoostEffect; // 0x230(0x04)
	bool AutoUseItem_MedicalLv1; // 0x234(0x01)
	bool AutoUseItem_MedicalLv2; // 0x235(0x01)
	bool AutoUseItem_MedicalLv3; // 0x236(0x01)
	bool AutoLadder; // 0x237(0x01)
	bool ShowGuideWidget; // 0x238(0x01)
	bool SearchMaterialItem; // 0x239(0x01)
	bool SearchExpertWeaponItem; // 0x23a(0x01)
	bool ShowDamageLog; // 0x23b(0x01)
	int32_t CustomUseItem1; // 0x23c(0x04)
	int32_t CustomUseItem2; // 0x240(0x04)
	int32_t CustomUseItem3; // 0x244(0x04)
	int32_t CustomUseItem4; // 0x248(0x04)
	int32_t CustomUseItem5; // 0x24c(0x04)
	int32_t CustomUseItem6; // 0x250(0x04)
	int32_t CustomUseItem7; // 0x254(0x04)
	int32_t CustomUseItem8; // 0x258(0x04)
	bool ToggleCrouch; // 0x25c(0x01)
	bool ToggleWalk; // 0x25d(0x01)
	bool ToggleSprint; // 0x25e(0x01)
	bool ToggleFreeLook; // 0x25f(0x01)
	bool ToggleSteadyAim; // 0x260(0x01)
	char pad_261[0x3]; // 0x261(0x03)
	int32_t ToggleExLean; // 0x264(0x04)
	bool ToggleAOS; // 0x268(0x01)
	bool ToggleADS; // 0x269(0x01)
	char pad_26A[0x2]; // 0x26a(0x02)
	uint32_t GraphicsVersion; // 0x26c(0x04)
	char pad_270[0x4]; // 0x270(0x04)
	float DefaultLanguageType; // 0x274(0x04)
	float LanguageType; // 0x278(0x04)
	float Gamma; // 0x27c(0x04)
	float Sharpen; // 0x280(0x04)
	bool ShowInventoryCharacter; // 0x284(0x01)
	char pad_285[0xb]; // 0x285(0x0b)
	int32_t FieldOfView; // 0x290(0x04)
	int32_t ReflexQuality; // 0x294(0x04)
	int32_t DLSSQuality; // 0x298(0x04)
	bool bUseDepthOfField; // 0x29c(0x01)
	char pad_29D[0x3]; // 0x29d(0x03)
	int32_t FSRQuality; // 0x2a0(0x04)
	char pad_2A4[0x4]; // 0x2a4(0x04)
	struct TMap<enum class EKeySettingType, struct FInputActionKeyMapping> KeySettings; // 0x2a8(0x50)
	struct TMap<enum class EKeySettingType, struct FInputActionKeyMapping> SubKeySettings; // 0x2f8(0x50)
	struct TMap<enum class EKeySettingType, struct FInputAxisKeyMapping> AxisKeySettings; // 0x348(0x50)
	struct TMap<enum class EKeySettingType, struct FInputAxisKeyMapping> AxisSubKeySettings; // 0x398(0x50)
	struct TMap<enum class ESettingType, struct FSettingInfo> SettingDataFromTable; // 0x3e8(0x50)
	struct FMulticastInlineDelegate OnGameUserSettingsApply_Audio; // 0x438(0x10)
	struct FMulticastInlineDelegate OnGameUserSettingsApply_Controll; // 0x448(0x10)
	struct FMulticastInlineDelegate OnGameUserSettingsApply_Graphic; // 0x458(0x10)
	struct FMulticastInlineDelegate OnGameUserSettingsApply_GamePlay; // 0x468(0x10)
	struct FMulticastInlineDelegate OnGameUserSettingsApply_Key; // 0x478(0x10)
	struct FMulticastInlineDelegate OnChangedDediSettings; // 0x488(0x10)
	char pad_498[0x60]; // 0x498(0x60)
	struct FMulticastInlineDelegate OnChangeVolumeState; // 0x4f8(0x10)
	bool bCheckValidSettingDataFromTable; // 0x508(0x01)
	bool bNeedDefaultSettingWithTabelData; // 0x509(0x01)
	bool bCheckLoadComplete; // 0x50a(0x01)
	char pad_50B[0x15]; // 0x50b(0x15)

	void SetToDefaultSettingsWithTabelData(); // Function BravoHotelGame.BravoHotelUserSettings.SetToDefaultSettingsWithTabelData // (Final|Native|Public|BlueprintCallable) // @ game+0x2015970
	void SetSetting(bool bIsChangeData, enum class ESettingBigType BigType, enum class ESettingType SettingType, float Value1, float Value2); // Function BravoHotelGame.BravoHotelUserSettings.SetSetting // (Final|Native|Public|BlueprintCallable) // @ game+0x20157e0
	bool IsOptionChangedFromBenchmark(); // Function BravoHotelGame.BravoHotelUserSettings.IsOptionChangedFromBenchmark // (Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x20157b0
	int32_t GetPreMasterVolume(); // Function BravoHotelGame.BravoHotelUserSettings.GetPreMasterVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2015790
	int32_t GetMasterVolume(); // Function BravoHotelGame.BravoHotelUserSettings.GetMasterVolume // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2015770
	int32_t GetLanguage(); // Function BravoHotelGame.BravoHotelUserSettings.GetLanguage // (Final|Native|Public|BlueprintCallable) // @ game+0x2015740
	void CheckLoadSettings(); // Function BravoHotelGame.BravoHotelUserSettings.CheckLoadSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x2015720
	void CheckDefaultSettingsWithTabelData(bool CheckLoadTable); // Function BravoHotelGame.BravoHotelUserSettings.CheckDefaultSettingsWithTabelData // (Final|Native|Public|BlueprintCallable) // @ game+0x2015690
	void ApplyGampPlaySettings(); // Function BravoHotelGame.BravoHotelUserSettings.ApplyGampPlaySettings // (Final|Native|Public|BlueprintCallable) // @ game+0x2015670
	void AllApplyLoadSettings(); // Function BravoHotelGame.BravoHotelUserSettings.AllApplyLoadSettings // (Final|Native|Public|BlueprintCallable) // @ game+0x2015650
};

// Class BravoHotelGame.BravoHotelUtil
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelUtil : UObject {
};

// Class BravoHotelGame.BravoHotelVehicle
// Size: 0xce0 (Inherited: 0x3a0)
struct ABravoHotelVehicle : AWheeledVehicle {
	char pad_3A0[0x10]; // 0x3a0(0x10)
	struct UTeamInfoUpdaterComponent* TeamInfoUpdaterComponentRef; // 0x3b0(0x08)
	struct USpringArmComponent* SpringArm; // 0x3b8(0x08)
	struct UCameraComponent* RearCamera; // 0x3c0(0x08)
	struct USceneComponent* VehicleSeats; // 0x3c8(0x08)
	struct UStaticMeshComponent* WreckedMeshComponent; // 0x3d0(0x08)
	struct USceneComponent* AppearComponent; // 0x3d8(0x08)
	struct TArray<struct FRepVehicleSeatInfo> SeatInfos; // 0x3e0(0x10)
	struct UBravoHotelVehicleSeatComponent* DriverSeatComponent; // 0x3f0(0x08)
	struct UParticleSystemComponent* DamagedEffectComponent; // 0x3f8(0x08)
	struct UAkComponent* AkComponent; // 0x400(0x08)
	struct TArray<struct UBravoHotelVehicleSeatComponent*> CachedVehicleSeats; // 0x408(0x10)
	char bFreecam : 1; // 0x418(0x01)
	char pad_418_1 : 7; // 0x418(0x01)
	char pad_419[0x3]; // 0x419(0x03)
	float SaveYawValue; // 0x41c(0x04)
	char bWannaFreecamInterpToOrigin : 1; // 0x420(0x01)
	char pad_420_1 : 7; // 0x420(0x01)
	char pad_421[0x3]; // 0x421(0x03)
	float StartReplaceFreeLookTime; // 0x424(0x04)
	float ReplaceFreeLookDurationTime; // 0x428(0x04)
	bool bWannaInterpCam; // 0x42c(0x01)
	char pad_42D[0x3]; // 0x42d(0x03)
	float SavedArmLength; // 0x430(0x04)
	float InterpTargetArmLength; // 0x434(0x04)
	float BoosterCameraInterpSpeed; // 0x438(0x04)
	float BoosterTargetArmLength; // 0x43c(0x04)
	struct TArray<struct UParticleSystemComponent*> AdditionalFxs; // 0x440(0x10)
	struct UParticleSystemComponent* WaterPlaneFx; // 0x450(0x08)
	float WaterSurfaceOffsetZ; // 0x458(0x04)
	float FrontLightValue; // 0x45c(0x04)
	float RearLightValue; // 0x460(0x04)
	float BrakeLightValue; // 0x464(0x04)
	float LightTurnOnSpeed; // 0x468(0x04)
	char pad_46C[0x14]; // 0x46c(0x14)
	struct UBravoHotelDamageType_Impulse* ImpulseDamageType; // 0x480(0x08)
	struct UNetDormantComponent* NetDormantComponent; // 0x488(0x08)
	struct TArray<struct FRepVehicleSeatInfo> PreSeatInfos; // 0x490(0x10)
	char pad_4A0[0x74]; // 0x4a0(0x74)
	bool bIsFlameDamaged; // 0x514(0x01)
	char pad_515[0x3]; // 0x515(0x03)
	struct TArray<struct FMolotovFlameDotDamageInfo> FlameDamageInfos; // 0x518(0x10)
	struct FVehiclePostPhysicsTickFunction PostPhysicsTick; // 0x528(0x30)
	char pad_558[0xc]; // 0x558(0x0c)
	struct FRotator ReplicatedBaseAimRotation; // 0x564(0x0c)
	char pad_570[0x8]; // 0x570(0x08)
	bool bUseInterpCameraRot; // 0x578(0x01)
	bool bUseInterpCameraRot_Pitch; // 0x579(0x01)
	char pad_57A[0x26]; // 0x57a(0x26)
	struct ABravoHotelCharacter* OccupiedLocalPawn; // 0x5a0(0x08)
	char pad_5A8[0x8]; // 0x5a8(0x08)
	bool bOverridePhysicsErrorCorrection; // 0x5b0(0x01)
	char pad_5B1[0x3]; // 0x5b1(0x03)
	struct FRigidBodyErrorCorrection VehicleErrorCorrection; // 0x5b4(0x34)
	bool bIsFPPMode; // 0x5e8(0x01)
	char pad_5E9[0x3]; // 0x5e9(0x03)
	float CurrentInputMoveRight; // 0x5ec(0x04)
	char pad_5F0[0x8]; // 0x5f0(0x08)
	struct TMap<int32_t, int32_t> AnimRate_LODToFrameSkipMap; // 0x5f8(0x50)
	int32_t AnimRate_BaseNonRenderedUpdateRate; // 0x648(0x04)
	char pad_64C[0xd]; // 0x64c(0x0d)
	bool bResetPhysicsOnWater; // 0x659(0x01)
	bool bIsOnTheWater; // 0x65a(0x01)
	bool bAllOfWheelsInTheWater; // 0x65b(0x01)
	char pad_65C[0x14]; // 0x65c(0x14)
	float ModeChangingTime; // 0x670(0x04)
	char pad_674[0x1]; // 0x674(0x01)
	bool bIsAmphibiousMode; // 0x675(0x01)
	char pad_676[0x12]; // 0x676(0x12)
	float HealthPoint; // 0x688(0x04)
	bool IsHandlebar; // 0x68c(0x01)
	char pad_68D[0x3]; // 0x68d(0x03)
	struct UParticleSystem* OnEnterToWaterParticle; // 0x690(0x08)
	struct UParticleSystem* OnExitFromWaterParticle; // 0x698(0x08)
	struct UParticleSystem* WaterPlaneParticle; // 0x6a0(0x08)
	struct TMap<struct FName, struct UParticleSystem*> AdditionalWaterParticle; // 0x6a8(0x50)
	struct TArray<struct UParticleSystem*> BeforeExplosionEffects; // 0x6f8(0x10)
	struct TArray<struct UParticleSystem*> AfterExplosionEffects; // 0x708(0x10)
	struct TArray<float> AfterExplosionEffectLifeTimes; // 0x718(0x10)
	struct TArray<struct UParticleSystem*> DamagedEffects; // 0x728(0x10)
	struct FName DamagedEffectSocketName; // 0x738(0x08)
	struct UParticleSystem* ExplosionEffect; // 0x740(0x08)
	struct FName ExplosionEffectSocketName; // 0x748(0x08)
	struct UAkAudioEvent* ExplosionSound; // 0x750(0x08)
	struct TArray<struct UAkAudioEvent*> DamagedSounds; // 0x758(0x10)
	struct UAkAudioEvent* DamagedStopSound; // 0x768(0x08)
	struct UAkAudioEvent* EngineStartEvent; // 0x770(0x08)
	struct UAkAudioEvent* EngineStopEvent; // 0x778(0x08)
	struct UAkAudioEvent* TiringPauseAudioEvent; // 0x780(0x08)
	struct UAkAudioEvent* TiringResumeAudioEvent; // 0x788(0x08)
	struct UAkAudioEvent* VehicleHorn; // 0x790(0x08)
	struct UAkAudioEvent* VehicleHornStop; // 0x798(0x08)
	struct UAkAudioEvent* VehicleHornMute; // 0x7a0(0x08)
	struct UAkAudioEvent* OnEnterToWaterSound; // 0x7a8(0x08)
	struct UAkAudioEvent* OnExitFromWaterSound; // 0x7b0(0x08)
	struct UCameraShake* CrashCameraShake; // 0x7b8(0x08)
	float CameraShakeScale; // 0x7c0(0x04)
	char pad_7C4[0x1c]; // 0x7c4(0x1c)
	struct TArray<struct ABravoHotelCharacter*> NearbyCharacaters; // 0x7e0(0x10)
	char pad_7F0[0x54]; // 0x7f0(0x54)
	float ExplosionUpwardSpeed; // 0x844(0x04)
	struct UAkAudioEvent* CrashAudioEvent; // 0x848(0x08)
	struct UAkAudioEvent* LandingAudioEvent; // 0x850(0x08)
	struct UAkAudioEvent* HandbrakeAudioEvent; // 0x858(0x08)
	struct UAkAudioEvent* HandbrakeStopAudioEvent; // 0x860(0x08)
	float MinCrashSoundImpulse; // 0x868(0x04)
	float MaxCrashSoundImpulse; // 0x86c(0x04)
	struct UCurveFloat* HandbrakeSoundVolumeCurve; // 0x870(0x08)
	struct UCurveFloat* SuspensionSoundVolumeCurve; // 0x878(0x08)
	char pad_880[0x50]; // 0x880(0x50)
	float FuelAmount; // 0x8d0(0x04)
	char pad_8D4[0xc]; // 0x8d4(0x0c)
	struct TArray<struct UParticleSystemComponent*> BoosterParticleComponents; // 0x8e0(0x10)
	char pad_8F0[0x8]; // 0x8f0(0x08)
	struct FMulticastInlineDelegate OnBoosterChangedDelegate; // 0x8f8(0x10)
	struct TArray<int16_t> TireHealthPoints; // 0x908(0x10)
	struct TArray<struct UBravoHotelVehicleTireComponent*> CachedTireComponents; // 0x918(0x10)
	struct FMulticastInlineDelegate OnWheelWrecked; // 0x928(0x10)
	float LongSlipThreshold; // 0x938(0x04)
	float LatSlipThreshold; // 0x93c(0x04)
	struct UBravoHotelVehicleMovementComponent* BravoHotelWheeledVehicleMovementComponent; // 0x940(0x08)
	char pad_948[0x8]; // 0x948(0x08)
	struct UBravoHotelVehicleData* VehicleData; // 0x950(0x08)
	char pad_958[0x10]; // 0x958(0x10)
	struct FTimerHandle TimerHandle_TurnOnFrontBackLight; // 0x968(0x08)
	float WaterLevelZ; // 0x970(0x04)
	char pad_974[0xc]; // 0x974(0x0c)
	struct TArray<struct UBravoHotelPhysicalMaterial*> WheelPhysicalMaterials; // 0x980(0x10)
	struct UBravoHotelPhysicalMaterial* LastPhysicalMaterial; // 0x990(0x08)
	char pad_998[0x28]; // 0x998(0x28)
	float ExplosionImpulseStrength; // 0x9c0(0x04)
	char pad_9C4[0x4]; // 0x9c4(0x04)
	struct AController* LastDamageInstigator; // 0x9c8(0x08)
	struct UParticleSystem* NitroJumpEndParticle; // 0x9d0(0x08)
	float NitroJumpImpulseModifier; // 0x9d8(0x04)
	float NitroJumpMaxSpeedKmH; // 0x9dc(0x04)
	float NitroJumpRotationInterpSpeed; // 0x9e0(0x04)
	bool bIsNitroJumping; // 0x9e4(0x01)
	char pad_9E5[0x3]; // 0x9e5(0x03)
	struct FRotator NitroJumpStartRotationCache; // 0x9e8(0x0c)
	char pad_9F4[0x4]; // 0x9f4(0x04)
	struct FTimerHandle TimerHandle_NitroBoom; // 0x9f8(0x08)
	char pad_A00[0x10]; // 0xa00(0x10)
	struct UAkAudioEvent* NitroBoomAlarmSound; // 0xa10(0x08)
	struct UParticleSystem* NitroBoomParticle; // 0xa18(0x08)
	struct FVector NitroBoomTargetUiOffset; // 0xa20(0x0c)
	char pad_A2C[0x4]; // 0xa2c(0x04)
	struct FTimerHandle TimerHandle_FlashingLights; // 0xa30(0x08)
	struct FTimeline Timeline_FlashingLights; // 0xa38(0x98)
	struct UCurveFloat* Curve_FlashingLights; // 0xad0(0x08)
	struct FTimerHandle TimerHandle_UpdateFrontBackLight; // 0xad8(0x08)
	float AppearTime; // 0xae0(0x04)
	char pad_AE4[0x4]; // 0xae4(0x04)
	struct ABravoHotelMaterialEffectActor* AppearEffectActorClass; // 0xae8(0x08)
	struct ABravoHotelMaterialEffectActor* DisappearEffectActorClass; // 0xaf0(0x08)
	char pad_AF8[0x8]; // 0xaf8(0x08)
	struct UParticleSystem* OnAppearLanding; // 0xb00(0x08)
	struct UAkAudioEvent* OnAppearLandingSound; // 0xb08(0x08)
	char pad_B10[0x10]; // 0xb10(0x10)
	struct UBravoHotelSTMComponent* STMComponent; // 0xb20(0x08)
	enum class EVehicleState ReplicatedVehicleState; // 0xb28(0x01)
	char pad_B29[0xf7]; // 0xb29(0xf7)
	struct TArray<struct FName> FloodedCheckSocketNames; // 0xc20(0x10)
	char pad_C30[0x4]; // 0xc30(0x04)
	float FloodedTimeForBreakDown; // 0xc34(0x04)
	char pad_C38[0x30]; // 0xc38(0x30)
	struct AController* CurInstigator; // 0xc68(0x08)
	char pad_C70[0x8]; // 0xc70(0x08)
	struct FLinearColor CurrentDirtColor; // 0xc78(0x10)
	float UpdateDirtMatTargetSeconds; // 0xc88(0x04)
	struct FLinearColor InBlueZoneDirtColor; // 0xc8c(0x10)
	struct FLinearColor OutBlueZoneDirtColor; // 0xc9c(0x10)
	char pad_CAC[0x34]; // 0xcac(0x34)

	void WheelWrecked__DelegateSignature(int32_t WheelIndex); // DelegateFunction BravoHotelGame.BravoHotelVehicle.WheelWrecked__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void UpdateInterpCam(float DeltaTime); // Function BravoHotelGame.BravoHotelVehicle.UpdateInterpCam // (Final|Native|Public) // @ game+0x201b640
	void UpdateFlashingLights(float Value); // Function BravoHotelGame.BravoHotelVehicle.UpdateFlashingLights // (Final|Native|Public) // @ game+0x201b5c0
	void UndoDisabled(); // Function BravoHotelGame.BravoHotelVehicle.UndoDisabled // (Native|Event|Protected|BlueprintEvent) // @ game+0x201b5a0
	void TurnOnFrontBackLight(float Duration); // Function BravoHotelGame.BravoHotelVehicle.TurnOnFrontBackLight // (Final|Native|Public) // @ game+0x201b520
	void TurnOnFlashingLights(float TargetRepeatTime, float Duration); // Function BravoHotelGame.BravoHotelVehicle.TurnOnFlashingLights // (Final|Native|Public) // @ game+0x201b460
	void TurnOnAlarmSound(); // Function BravoHotelGame.BravoHotelVehicle.TurnOnAlarmSound // (Final|Native|Public) // @ game+0x201b440
	void TurnOffFlashingLights(); // Function BravoHotelGame.BravoHotelVehicle.TurnOffFlashingLights // (Final|Native|Public) // @ game+0x201b420
	void TryChangeSeat(int32_t SeatIndex); // Function BravoHotelGame.BravoHotelVehicle.TryChangeSeat // (Final|Native|Protected) // @ game+0x201b3a0
	void TimerUpdateFrontBackLight(); // Function BravoHotelGame.BravoHotelVehicle.TimerUpdateFrontBackLight // (Final|Native|Public) // @ game+0x201b380
	void TickFreecamInterpToOriginCamera(float DeltaTime); // Function BravoHotelGame.BravoHotelVehicle.TickFreecamInterpToOriginCamera // (Final|Native|Public) // @ game+0x201b300
	void TickForDedicatedServer(); // Function BravoHotelGame.BravoHotelVehicle.TickForDedicatedServer // (Native|Public) // @ game+0x201b2e0
	void StartNitroJump(struct FVector JumpImpulse, float SteeringCorrection, float ImpulseCondition_MaxSpeedKmH); // Function BravoHotelGame.BravoHotelVehicle.StartNitroJump // (Final|Native|Public|HasDefaults) // @ game+0x201b1d0
	void SpawnDisappearingActor(struct UObject* WorldContextObject, struct FTransform TargetTransform); // Function BravoHotelGame.BravoHotelVehicle.SpawnDisappearingActor // (Final|Native|Public|HasDefaults|Const) // @ game+0x201b090
	void SpawnAppearingActor(struct UObject* WorldContextObject, struct FTransform TargetTransform); // Function BravoHotelGame.BravoHotelVehicle.SpawnAppearingActor // (Final|Native|Public|HasDefaults|Const) // @ game+0x201af50
	bool ShouldMakeSkid(); // Function BravoHotelGame.BravoHotelVehicle.ShouldMakeSkid // (Final|Native|Protected|BlueprintCallable|BlueprintPure) // @ game+0x201af20
	void SetWheelOffset(int32_t Index, struct FVector Offset); // Function BravoHotelGame.BravoHotelVehicle.SetWheelOffset // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x201ae30
	void SetWaterLevelZ(); // Function BravoHotelGame.BravoHotelVehicle.SetWaterLevelZ // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetupVehicleComponentsRelationship(); // Function BravoHotelGame.BravoHotelVehicle.SetupVehicleComponentsRelationship // (Final|Native|Protected) // @ game+0x201af00
	void SetOccupantCollision(struct UBravoHotelVehicleSeatComponent* Seat, bool bEnable); // Function BravoHotelGame.BravoHotelVehicle.SetOccupantCollision // (Final|Native|Protected) // @ game+0x201ad60
	void SetDamagedLevel(int32_t NewDamagedLevel); // Function BravoHotelGame.BravoHotelVehicle.SetDamagedLevel // (Final|Native|Protected) // @ game+0x201ace0
	void ServerStopHorn(); // Function BravoHotelGame.BravoHotelVehicle.ServerStopHorn // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x201ac90
	void ServerStartNitroJump(); // Function BravoHotelGame.BravoHotelVehicle.ServerStartNitroJump // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x201ac40
	void ServerStartHorn(); // Function BravoHotelGame.BravoHotelVehicle.ServerStartHorn // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x201abf0
	void ServerSetVehicleState(enum class EVehicleState NewVehicleState); // Function BravoHotelGame.BravoHotelVehicle.ServerSetVehicleState // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x201ab40
	void ServerSetBaseAimRotation(struct FRotator Rot); // Function BravoHotelGame.BravoHotelVehicle.ServerSetBaseAimRotation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x201aa70
	void ServerHandleCollisions(struct TArray<struct FRepVehicleCollisionEvent> InCollisionEvents); // Function BravoHotelGame.BravoHotelVehicle.ServerHandleCollisions // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x201a9b0
	void ServerEscapeTheFlames(struct FMolotovFlameDotDamageInfo InDotDamageInfo); // Function BravoHotelGame.BravoHotelVehicle.ServerEscapeTheFlames // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x201a8e0
	void ServerChangedAmphibiousMode(bool bTrue); // Function BravoHotelGame.BravoHotelVehicle.ServerChangedAmphibiousMode // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x201a820
	void ServerBroadcastBuffEventDelegate(enum class EBuffEventType NewBuffEvent); // Function BravoHotelGame.BravoHotelVehicle.ServerBroadcastBuffEventDelegate // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x201a770
	void ServerBeInFlames(struct FMolotovFlameDotDamageInfo InDotDamageInfo); // Function BravoHotelGame.BravoHotelVehicle.ServerBeInFlames // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x201a6a0
	void ServerAddImpulseToCharacter(struct FVector Impulse, struct ABravoHotelCharacter* Character); // Function BravoHotelGame.BravoHotelVehicle.ServerAddImpulseToCharacter // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x201a5a0
	void ServerAddConditionDriver(enum class ECharacterConditionType ConditionType, int32_t Key); // Function BravoHotelGame.BravoHotelVehicle.ServerAddConditionDriver // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x201a4a0
	void ResetDamagedLevel(); // Function BravoHotelGame.BravoHotelVehicle.ResetDamagedLevel // (Final|Native|Protected) // @ game+0x201a480
	void ReceiveHandbrakePressed(bool bIsBoosted); // Function BravoHotelGame.BravoHotelVehicle.ReceiveHandbrakePressed // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	void PlayVehicleCrashCameraShake(struct ABravoHotelPlayerController* PlayerController, float RawImpulse); // Function BravoHotelGame.BravoHotelVehicle.PlayVehicleCrashCameraShake // (Final|Native|Protected) // @ game+0x201a3b0
	void PlaySplashParticle(bool IsToWater); // Function BravoHotelGame.BravoHotelVehicle.PlaySplashParticle // (Final|Native|Public|BlueprintCallable) // @ game+0x201a320
	void OnWheelLanded(int32_t WheelIndex, float MaxHeightInAir); // Function BravoHotelGame.BravoHotelVehicle.OnWheelLanded // (Final|Native|Protected) // @ game+0x201a250
	void OnUpdateState(float DeltaTime); // Function BravoHotelGame.BravoHotelVehicle.OnUpdateState // (Final|Native|Protected) // @ game+0x201a1d0
	void OnRep_VehicleState(); // Function BravoHotelGame.BravoHotelVehicle.OnRep_VehicleState // (Final|Native|Protected) // @ game+0x201a1b0
	void OnRep_TireHealthPoints(); // Function BravoHotelGame.BravoHotelVehicle.OnRep_TireHealthPoints // (Final|Native|Protected) // @ game+0x201a190
	void OnRep_SeatInfos(); // Function BravoHotelGame.BravoHotelVehicle.OnRep_SeatInfos // (Final|Native|Protected) // @ game+0x201a170
	void OnRep_HealthPoint(float PreviousHealthPoint); // Function BravoHotelGame.BravoHotelVehicle.OnRep_HealthPoint // (Final|Native|Protected) // @ game+0x201a0f0
	void OnRep_FuelAmount(float PreviousFuelAmount); // Function BravoHotelGame.BravoHotelVehicle.OnRep_FuelAmount // (Final|Native|Protected) // @ game+0x201a070
	void OnRep_FlameDamaged(); // Function BravoHotelGame.BravoHotelVehicle.OnRep_FlameDamaged // (Final|Native|Protected) // @ game+0x151b910
	void OnPlaySplashParticle(bool IsToWater); // Function BravoHotelGame.BravoHotelVehicle.OnPlaySplashParticle // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnOccupantExited(struct UBravoHotelVehicleSeatComponent* Seat, struct ABravoHotelCharacter* ExitedOccupant); // Function BravoHotelGame.BravoHotelVehicle.OnOccupantExited // (Final|Native|Protected) // @ game+0x2019fb0
	void OnOccupantEntered(struct UBravoHotelVehicleSeatComponent* Seat, struct ABravoHotelCharacter* EnteredOccupant); // Function BravoHotelGame.BravoHotelVehicle.OnOccupantEntered // (Final|Native|Protected) // @ game+0x2019ef0
	void OnNitroBoostStateChanged(bool bIsNitroBoostOn); // Function BravoHotelGame.BravoHotelVehicle.OnNitroBoostStateChanged // (Final|Native|Public) // @ game+0x2019e60
	void OnInputStopFreeLook(); // Function BravoHotelGame.BravoHotelVehicle.OnInputStopFreeLook // (Final|Native|Public) // @ game+0x20187e0
	void OnInputStartFreeLook(); // Function BravoHotelGame.BravoHotelVehicle.OnInputStartFreeLook // (Final|Native|Public) // @ game+0x2019e40
	void OnFloatingInAirChanged(bool bIsFloatingInAir); // Function BravoHotelGame.BravoHotelVehicle.OnFloatingInAirChanged // (Final|Native|Protected) // @ game+0x2019db0
	void OnExitState(char NextStateID); // Function BravoHotelGame.BravoHotelVehicle.OnExitState // (Final|Native|Protected) // @ game+0x2019d30
	void OnEscapeAllPassengers(); // Function BravoHotelGame.BravoHotelVehicle.OnEscapeAllPassengers // (Final|Native|Public) // @ game+0x2019d10
	void OnDriverUnoccupied(); // Function BravoHotelGame.BravoHotelVehicle.OnDriverUnoccupied // (Native|Event|Public|BlueprintEvent) // @ game+0x2019cf0
	void OnDriverOccupied(); // Function BravoHotelGame.BravoHotelVehicle.OnDriverOccupied // (Native|Event|Public|BlueprintEvent) // @ game+0x2019cd0
	void OnChangedAmphibiousMode(bool bTrue); // Function BravoHotelGame.BravoHotelVehicle.OnChangedAmphibiousMode // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnBoosterChanged(bool bWantsBoost); // Function BravoHotelGame.BravoHotelVehicle.OnBoosterChanged // (Final|Native|Protected) // @ game+0x2019c40
	void OnBeginState(); // Function BravoHotelGame.BravoHotelVehicle.OnBeginState // (Final|Native|Protected) // @ game+0x2019c20
	void OnAudioEmitterRegistered(); // Function BravoHotelGame.BravoHotelVehicle.OnAudioEmitterRegistered // (Final|Native|Public) // @ game+0x2019c00
	void OnAfterExplosionFxFinished(); // Function BravoHotelGame.BravoHotelVehicle.OnAfterExplosionFxFinished // (Final|Native|Protected) // @ game+0x2019be0
	void NitroBoom(float BoomDelay, float DamageAmount, struct FDamageEvent& DamageEvent, struct AController* EventInstigator, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelVehicle.NitroBoom // (Final|Native|Public|HasOutParms) // @ game+0x2019a20
	void NetMulticastStopHorn(); // Function BravoHotelGame.BravoHotelVehicle.NetMulticastStopHorn // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2019a00
	void NetMulticastStartHorn(); // Function BravoHotelGame.BravoHotelVehicle.NetMulticastStartHorn // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x20199e0
	void MultiForceSyncReplicatedMovement(struct FRepVehicleMovement RepMovement); // Function BravoHotelGame.BravoHotelVehicle.MultiForceSyncReplicatedMovement // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2019750
	void MultiChangedAmphibiousMode(bool bTrue); // Function BravoHotelGame.BravoHotelVehicle.MultiChangedAmphibiousMode // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x20196c0
	void MulticastDrawExitSweepBox(struct FVector Start, struct FVector End, struct FVector Extent, struct FRotator Rotation, bool bHit, struct FHitResult OutHit); // Function BravoHotelGame.BravoHotelVehicle.MulticastDrawExitSweepBox // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x20197e0
	void MoveForward(float Value); // Function BravoHotelGame.BravoHotelVehicle.MoveForward // (Final|Native|Public|BlueprintCallable) // @ game+0x2019640
	void MakeDisabled(); // Function BravoHotelGame.BravoHotelVehicle.MakeDisabled // (Native|Event|Protected|BlueprintEvent) // @ game+0x2019620
	void K2_OnNitroJumpEnd(); // Function BravoHotelGame.BravoHotelVehicle.K2_OnNitroJumpEnd // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_OnBoosterChanged(bool bIsBoosted); // Function BravoHotelGame.BravoHotelVehicle.K2_OnBoosterChanged // (Event|Protected|BlueprintEvent) // @ game+0x23a3b60
	bool IsSomeoneInThis(); // Function BravoHotelGame.BravoHotelVehicle.IsSomeoneInThis // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x20195f0
	bool IsPendingNitroBoom(); // Function BravoHotelGame.BravoHotelVehicle.IsPendingNitroBoom // (Final|Native|Public|Const) // @ game+0x20195c0
	bool IsOnTheWater(); // Function BravoHotelGame.BravoHotelVehicle.IsOnTheWater // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x20195a0
	bool IsNitroBoost(); // Function BravoHotelGame.BravoHotelVehicle.IsNitroBoost // (Final|Native|Public) // @ game+0x2019570
	bool IsInAir(); // Function BravoHotelGame.BravoHotelVehicle.IsInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2019550
	bool IsFlooded(); // Function BravoHotelGame.BravoHotelVehicle.IsFlooded // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2019520
	bool IsDriverOccupied(); // Function BravoHotelGame.BravoHotelVehicle.IsDriverOccupied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x20194f0
	bool IsDisabled(); // Function BravoHotelGame.BravoHotelVehicle.IsDisabled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x20194c0
	bool IsChangingMode(); // Function BravoHotelGame.BravoHotelVehicle.IsChangingMode // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x20194a0
	bool IsAllOfWheelsInTheWater(); // Function BravoHotelGame.BravoHotelVehicle.IsAllOfWheelsInTheWater // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2019480
	void InitTimeline(); // Function BravoHotelGame.BravoHotelVehicle.InitTimeline // (Final|Native|Public) // @ game+0x2019460
	bool HasPxAuthority(); // Function BravoHotelGame.BravoHotelVehicle.HasPxAuthority // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2019430
	struct FVector GetVehicleVelocity(); // Function BravoHotelGame.BravoHotelVehicle.GetVehicleVelocity // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x20193f0
	struct UBravoHotelVehicleSeatComponent* GetVacantSeat(); // Function BravoHotelGame.BravoHotelVehicle.GetVacantSeat // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x20193c0
	int32_t GetTireHealthPoint(int32_t TireIndex); // Function BravoHotelGame.BravoHotelVehicle.GetTireHealthPoint // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2019330
	struct FName GetTireBoneNameByWheelIndex(int32_t WheelIndex); // Function BravoHotelGame.BravoHotelVehicle.GetTireBoneNameByWheelIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x20192a0
	struct FName GetTireBoneNameByComponent(struct USceneComponent* TireComponent); // Function BravoHotelGame.BravoHotelVehicle.GetTireBoneNameByComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2019210
	float GetThrottleInputValue(); // Function BravoHotelGame.BravoHotelVehicle.GetThrottleInputValue // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x20191e0
	struct USkeletalMeshComponent* GetTargetVehicleMesh(); // Function BravoHotelGame.BravoHotelVehicle.GetTargetVehicleMesh // (Native|Event|Public|BlueprintEvent) // @ game+0x20191b0
	struct UBravoHotelVehicleSeatComponent* GetSeatByIndex(int32_t Index); // Function BravoHotelGame.BravoHotelVehicle.GetSeatByIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2019120
	struct ABravoHotelWaterPhysicsVolume* GetOverlappingWaterVolume(); // Function BravoHotelGame.BravoHotelVehicle.GetOverlappingWaterVolume // (Final|Native|Public|Const) // @ game+0x20190f0
	struct UBravoHotelVehicleSeatCollisionComponent* GetOccupantCollision(struct UBravoHotelVehicleSeatComponent* Seat); // Function BravoHotelGame.BravoHotelVehicle.GetOccupantCollision // (Final|Native|Protected) // @ game+0x2019060
	struct ABravoHotelCharacter* GetOccupant(int32_t Index); // Function BravoHotelGame.BravoHotelVehicle.GetOccupant // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2018fd0
	int32_t GetNumWheels(); // Function BravoHotelGame.BravoHotelVehicle.GetNumWheels // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018fa0
	float GetMaxSpringForce(); // Function BravoHotelGame.BravoHotelVehicle.GetMaxSpringForce // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018f70
	bool GetIsHandbrakePressed(); // Function BravoHotelGame.BravoHotelVehicle.GetIsHandbrakePressed // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2018f50
	float GetHealthPoint(); // Function BravoHotelGame.BravoHotelVehicle.GetHealthPoint // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018f00
	float GetFuelAmount(); // Function BravoHotelGame.BravoHotelVehicle.GetFuelAmount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018ed0
	float GetForwardSpeedKmH(bool bOnPrePhysics); // Function BravoHotelGame.BravoHotelVehicle.GetForwardSpeedKmH // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018e30
	struct UBravoHotelVehicleData* GetData(); // Function BravoHotelGame.BravoHotelVehicle.GetData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018e10
	struct UPhysicalMaterial* GetContactPhysicalMaterial(struct UVehicleWheel* ContactWheel); // Function BravoHotelGame.BravoHotelVehicle.GetContactPhysicalMaterial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018d80
	float GetCameraTargetArmLength(); // Function BravoHotelGame.BravoHotelVehicle.GetCameraTargetArmLength // (Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // @ game+0x23a3b60
	struct UBravoHotelVehicleMovementComponent* GetBravoHotelVehicleMovement(); // Function BravoHotelGame.BravoHotelVehicle.GetBravoHotelVehicleMovement // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2018d50
	struct UBravoHotelVehicleTireComponent* FindTireByWheelIndex(int32_t WheelIndex); // Function BravoHotelGame.BravoHotelVehicle.FindTireByWheelIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018cc0
	void EndFreecamInterpToOrigin(); // Function BravoHotelGame.BravoHotelVehicle.EndFreecamInterpToOrigin // (Final|Native|Public) // @ game+0x2018ca0
	void DestroyWithDamageProcess(float DamageAmount, struct FDamageEvent& DamageEvent, struct AController* EventInstigator, struct AActor* DamageCauser); // Function BravoHotelGame.BravoHotelVehicle.DestroyWithDamageProcess // (Final|Native|Public|HasOutParms) // @ game+0x2018b30
	void ClientSetAutoCamera(bool bAuto); // Function BravoHotelGame.BravoHotelVehicle.ClientSetAutoCamera // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2018aa0
	void ClientForceSyncReplicatedMovement(struct FRepVehicleMovement RepMovement); // Function BravoHotelGame.BravoHotelVehicle.ClientForceSyncReplicatedMovement // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2018a10
	void ChangeDamagedEffect(int32_t FxIndex); // Function BravoHotelGame.BravoHotelVehicle.ChangeDamagedEffect // (Final|Native|Protected) // @ game+0x2018990
	bool CanTryDetectedSeat(struct UBravoHotelVehicleSeatComponent* Seat, struct FVector& TryerUpDirection); // Function BravoHotelGame.BravoHotelVehicle.CanTryDetectedSeat // (Final|Native|Public|HasOutParms|HasDefaults) // @ game+0x20188b0
	bool CanNitroJump(); // Function BravoHotelGame.BravoHotelVehicle.CanNitroJump // (Final|Native|Public) // @ game+0x2018880
	bool CanMove(); // Function BravoHotelGame.BravoHotelVehicle.CanMove // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018850
	bool CanAddFuel(); // Function BravoHotelGame.BravoHotelVehicle.CanAddFuel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2018820
	void CameraShakeExplosionByFragment(); // Function BravoHotelGame.BravoHotelVehicle.CameraShakeExplosionByFragment // (Final|Native|Public) // @ game+0x2018800
	void BoosterChanged__DelegateSignature(bool bWantsBoost); // DelegateFunction BravoHotelGame.BravoHotelVehicle.BoosterChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void BeginFreecamInterpToOrigin(); // Function BravoHotelGame.BravoHotelVehicle.BeginFreecamInterpToOrigin // (Final|Native|Public) // @ game+0x20187e0
	void AutoDestroyParticle(struct UParticleSystemComponent* ParticleToDestroy); // Function BravoHotelGame.BravoHotelVehicle.AutoDestroyParticle // (Final|Native|Public|BlueprintCallable) // @ game+0x2018760
	void AddFuel(float FuelAmountToAdd); // Function BravoHotelGame.BravoHotelVehicle.AddFuel // (Final|Native|Public|BlueprintCallable) // @ game+0x20186e0
};

// Class BravoHotelGame.BravoHotelVehicleAnimInstance
// Size: 0xa20 (Inherited: 0x980)
struct UBravoHotelVehicleAnimInstance : UVehicleAnimInstance {
	struct ABravoHotelVehicle* Vehicle; // 0x978(0x08)
	struct UBravoHotelVehicleMovementComponent* VehicleMovementComponent; // 0x980(0x08)
	float DeltaTime; // 0x988(0x04)
	float SteeringModifier; // 0x994(0x04)
	struct FRotator SteeringWheelRotation; // 0x998(0x0c)
	bool bIsMoving; // 0x9a4(0x01)
	char pad_9A5[0x3]; // 0x9a5(0x03)
	struct FRotator TwoWheelVehicleWheelRotation_Front; // 0x9a8(0x0c)
	struct FRotator TwoWheelVehicleWheelRotation_Rear; // 0x9b4(0x0c)
	struct FVector TwoWheelVehicleWheelLocation_Front; // 0x9c0(0x0c)
	struct FVector TwoWheelVehicleWheelLocation_Rear; // 0x9cc(0x0c)
	struct FVector TwoWheelVehicleSuspension_Front; // 0x9d8(0x0c)
	struct FVector TwoWheelVehicleSuspension_Rear; // 0x9e4(0x0c)
	struct FName FrontWheelSocketName; // 0x9f0(0x08)
	struct FName RearWheelSocketName; // 0x9f8(0x08)
	struct FName FrontSuspensionSocketName; // 0xa00(0x08)
	struct FName RearSuspensionSocketName; // 0xa08(0x08)
	bool bIsFPPMode; // 0xa10(0x01)
	bool bIsLeftSteering; // 0xa11(0x01)
	bool bIsRightSteering; // 0xa12(0x01)
	char pad_A13[0x1]; // 0xa13(0x01)
	float LeftSteeringPlayRate; // 0xa14(0x04)
	float RightSteeringPlayRate; // 0xa18(0x04)
	bool bIsIdleSteering; // 0xa1c(0x01)
	bool bHoldUpdateTransition; // 0xa1d(0x01)
	char pad_A1E[0x2]; // 0xa1e(0x02)

	bool Transition_RightSteering_ToLeftSteering(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelVehicleAnimInstance.Transition_RightSteering_ToLeftSteering // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x201bdd0
	bool Transition_RightSteering_ToIdle(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelVehicleAnimInstance.Transition_RightSteering_ToIdle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x201bd10
	bool Transition_LeftSteering_ToRightSteering(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelVehicleAnimInstance.Transition_LeftSteering_ToRightSteering // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x201bc50
	bool Transition_LeftSteering_ToIdle(int32_t MachineIndex, int32_t StateIndex); // Function BravoHotelGame.BravoHotelVehicleAnimInstance.Transition_LeftSteering_ToIdle // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x201bb90
	void SetSteeringWheelRotation(bool isFrontDrive, bool IsHandlebar); // Function BravoHotelGame.BravoHotelVehicleAnimInstance.SetSteeringWheelRotation // (Final|Native|Public|BlueprintCallable) // @ game+0x201bac0
};

// Class BravoHotelGame.BravoHotelVehicleData
// Size: 0x220 (Inherited: 0x30)
struct UBravoHotelVehicleData : UDataAsset {
	struct FText DisplayName; // 0x30(0x18)
	float MaxHealthPoint; // 0x48(0x04)
	char pad_4C[0x4]; // 0x4c(0x04)
	struct TArray<enum class EWeaponType> AllowedWeaponTypes; // 0x50(0x10)
	struct TArray<struct FDamageModifierByWeapon> TakenWeaponDamageModifiers; // 0x60(0x10)
	float DefaultFuelAmountMin; // 0x70(0x04)
	float DefaultFuelAmountMax; // 0x74(0x04)
	float MaxFuelAmount; // 0x78(0x04)
	float FuelConsumptionSpeed; // 0x7c(0x04)
	float BoostFuelConsumptionSpeed; // 0x80(0x04)
	char pad_84[0x4]; // 0x84(0x04)
	struct TArray<float> FuelConsumptionRatioByGear; // 0x88(0x10)
	float MaxTireHealthPoint; // 0x98(0x04)
	float ItemUseMaxSpeed; // 0x9c(0x04)
	float ItemUseMinCrashSpeed; // 0xa0(0x04)
	bool bCanDriverUseWeapon; // 0xa4(0x01)
	char pad_A5[0x3]; // 0xa5(0x03)
	struct TMap<struct FName, struct UParticleSystem*> BoosterParticlesOnGround; // 0xa8(0x50)
	struct TMap<struct FName, struct UParticleSystem*> BoosterParticleOnWater; // 0xf8(0x50)
	struct TMap<struct FName, struct UParticleSystem*> NitroBoostParticle; // 0x148(0x50)
	struct UAkAudioEvent* StartBoostSound; // 0x198(0x08)
	struct UAkAudioEvent* StopBoostSound; // 0x1a0(0x08)
	struct UAkAudioEvent* NitroBoostStartSound; // 0x1a8(0x08)
	struct UAkAudioEvent* NitroBoostStopSound; // 0x1b0(0x08)
	struct TArray<struct FVehicleCrashDamage> CrashDamages; // 0x1b8(0x10)
	float ExplosionDamageToCharacter; // 0x1c8(0x04)
	float ExplosionDamageToDriver; // 0x1cc(0x04)
	float ExplosionDamageToPassenger; // 0x1d0(0x04)
	float ExplosionDamageToRigidBody; // 0x1d4(0x04)
	float ExplosionDamageMin; // 0x1d8(0x04)
	float ExplosionDamageFalloff; // 0x1dc(0x04)
	float ExplosionInnerRadius; // 0x1e0(0x04)
	float ExplosionDamageRadius; // 0x1e4(0x04)
	float NitroBoomExplosionMultiplyRate; // 0x1e8(0x04)
	char pad_1EC[0x4]; // 0x1ec(0x04)
	struct UCurveFloat* CollisionDeltaSpeedForCharacter; // 0x1f0(0x08)
	struct UCurveFloat* CollisionDeltaSpeedForDestructible; // 0x1f8(0x08)
	float BaseMassForDestructible; // 0x200(0x04)
	bool bUseAutoEscape; // 0x204(0x01)
	char pad_205[0x3]; // 0x205(0x03)
	float EscapePitch; // 0x208(0x04)
	float EscapeRoll; // 0x20c(0x04)
	struct UCurveFloat* EscapeDamageBySpeed; // 0x210(0x08)
	struct UUserWidget* SubInfoWidget; // 0x218(0x08)

	float GetRandomDefaultFuel(); // Function BravoHotelGame.BravoHotelVehicleData.GetRandomDefaultFuel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201c490
	float GetFuelConsumption(int32_t GearIndex, bool bInIsBoosting); // Function BravoHotelGame.BravoHotelVehicleData.GetFuelConsumption // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201c3d0
	struct TArray<enum class EWeaponType> GetAllowedWeaponType(); // Function BravoHotelGame.BravoHotelVehicleData.GetAllowedWeaponType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201c340
};

// Class BravoHotelGame.BravoHotelVehicleMovementComponent
// Size: 0x620 (Inherited: 0x3e8)
struct UBravoHotelVehicleMovementComponent : UWheeledVehicleMovementComponentMotor {
	char pad_3E8[0x10]; // 0x3e8(0x10)
	struct FMulticastInlineDelegate OnWheelFloated; // 0x3f8(0x10)
	struct FMulticastInlineDelegate OnWheelLanded; // 0x408(0x10)
	struct FMulticastInlineDelegate OnFloatingInAirChanged; // 0x418(0x10)
	struct FMulticastInlineDelegate OnWheelTypeChanged; // 0x428(0x10)
	struct FMulticastInlineDelegate OnSteeringInputChanged; // 0x438(0x10)
	char pad_448[0x38]; // 0x448(0x38)
	struct FRepVehicleControlStates RepControlStates; // 0x480(0x07)
	char pad_487[0x9]; // 0x487(0x09)
	struct ABravoHotelPlayerController* PxAuthority; // 0x490(0x08)
	struct TArray<struct UVehicleWheel*> GroundWheelClasses; // 0x498(0x10)
	struct TArray<struct UVehicleWheel*> InwaterWheelClasses; // 0x4a8(0x10)
	struct TArray<struct UVehicleWheel*> WreckedWheelClasses; // 0x4b8(0x10)
	enum class EVehicleWheelType DefaultWheelType; // 0x4c8(0x01)
	char pad_4C9[0x7]; // 0x4c9(0x07)
	struct UParticleSystem* ParticleIntoWater; // 0x4d0(0x08)
	float DefaultDamping; // 0x4d8(0x04)
	float DefaultAngularDamping; // 0x4dc(0x04)
	float DefaultDampSpeed; // 0x4e0(0x04)
	float WaterDamping; // 0x4e4(0x04)
	float WaterDampSpeed; // 0x4e8(0x04)
	float WaterFloodedDamping; // 0x4ec(0x04)
	float ChangingModeDamping; // 0x4f0(0x04)
	float ChangingModeDampSpeed; // 0x4f4(0x04)
	float StuntDamping; // 0x4f8(0x04)
	float StuntDampSpeed; // 0x4fc(0x04)
	bool bUseAirControl; // 0x500(0x01)
	char pad_501[0x3]; // 0x501(0x03)
	float InAirRollForce; // 0x504(0x04)
	float InAirPitchForce; // 0x508(0x04)
	char pad_50C[0x16]; // 0x50c(0x16)
	bool bIsInWater; // 0x522(0x01)
	bool bOverridesPhysicsNetCorrection; // 0x523(0x01)
	struct FVehicleErrorCorrection NetErrorCorrection; // 0x524(0x34)
	char pad_558[0x18]; // 0x558(0x18)
	char AliveWheelMask; // 0x570(0x01)
	char pad_571[0x3]; // 0x571(0x03)
	float ParkingBrakeInput; // 0x574(0x04)
	float SideBrakeInput; // 0x578(0x04)
	char pad_57C[0x4]; // 0x57c(0x04)
	struct TArray<struct TWeakObjectPtr<struct UBravoHotelVehicleWheelProxy>> WheelProxies; // 0x580(0x10)
	char pad_590[0x50]; // 0x590(0x50)
	bool bUseBooster; // 0x5e0(0x01)
	char pad_5E1[0x7]; // 0x5e1(0x07)
	struct UCurveFloat* MinNormalizedTireloadFilteredCurveOnBoosting; // 0x5e8(0x08)
	struct UCurveFloat* MaxNormalizedTireloadFilteredCurveOnBoosting; // 0x5f0(0x08)
	float TorqueScaleOnBoosting; // 0x5f8(0x04)
	float MaxRPMOnBoosting; // 0x5fc(0x04)
	bool bIsBoosting; // 0x600(0x01)
	char pad_601[0x7]; // 0x601(0x07)
	struct AController* LastOverrideController; // 0x608(0x08)
	char pad_610[0x10]; // 0x610(0x10)

	void WheelTypeChanged__DelegateSignature(int32_t WheelIndex, enum class EVehicleWheelType PreviousWheel, enum class EVehicleWheelType CurrentWheel); // DelegateFunction BravoHotelGame.BravoHotelVehicleMovementComponent.WheelTypeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void WheelLanded__DelegateSignature(int32_t WheelIndex, float MaxHeight); // DelegateFunction BravoHotelGame.BravoHotelVehicleMovementComponent.WheelLanded__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void WheelFloated__DelegateSignature(int32_t WheelIndex); // DelegateFunction BravoHotelGame.BravoHotelVehicleMovementComponent.WheelFloated__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void UpdateAllWheelsCollisionChannel(enum class ECollisionChannel CollisionChannel); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.UpdateAllWheelsCollisionChannel // (Final|Native|Public|BlueprintCallable) // @ game+0x201dc30
	void StopMovementSmoothly(bool SetStop); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.StopMovementSmoothly // (Final|Native|Public|BlueprintCallable) // @ game+0x201dba0
	void SteeringInputChanged__DelegateSignature(float PreviousInput, float CurrentInput); // DelegateFunction BravoHotelGame.BravoHotelVehicleMovementComponent.SteeringInputChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void SetSideBrake(bool SetSide); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.SetSideBrake // (Final|Native|Public|BlueprintCallable) // @ game+0x201db10
	void SetInwaterState(bool bSetInWater, bool bResetPhysics); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.SetInwaterState // (Final|Native|Public|BlueprintCallable) // @ game+0x201da40
	void ServerUpdateRigidBodyReplicated(struct FRepVehicleMovement Movement); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.ServerUpdateRigidBodyReplicated // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x201d980
	void ServerUpdateControlStates(struct FRepVehicleControlStates InRepControlState); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.ServerUpdateControlStates // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // @ game+0x201d8c0
	void ServerEnableBooster(bool bEnable); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.ServerEnableBooster // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // @ game+0x201d800
	void OnRep_IsBoosting(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.OnRep_IsBoosting // (Final|Native|Private) // @ game+0x201d7e0
	bool IsWheelWrecked(int32_t WheelIndex); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.IsWheelWrecked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d750
	bool IsSuspensionStable(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.IsSuspensionStable // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x201d720
	bool IsStopping(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.IsStopping // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d6f0
	bool IsMoving(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.IsMoving // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d6c0
	bool IsInAir(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.IsInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d6a0
	bool IsHandbrakePressed(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.IsHandbrakePressed // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d670
	bool IsEngineIdling(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.IsEngineIdling // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d650
	bool HasPxAuthority(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.HasPxAuthority // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d620
	float GetWheelRadius(int32_t WheelIndex); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetWheelRadius // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d590
	float GetThrottle(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetThrottle // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d560
	float GetSuspensionSpringForce(int32_t WheelIndex); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetSuspensionSpringForce // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x201d4d0
	float GetSteering(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetSteering // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d4a0
	struct ABravoHotelPlayerController* GetPxSimulOwner(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetPxSimulOwner // (Final|Native|Public|BlueprintCallable) // @ game+0x201d480
	float GetNormalizedRPM(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetNormalizedRPM // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d450
	float GetHandBrake(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetHandBrake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d420
	float GetCurrentMomentum(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetCurrentMomentum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d3f0
	int32_t GetCurrentDriveGear(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetCurrentDriveGear // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d3c0
	struct UPhysicalMaterial* GetContactPhysicalMaterial(int32_t WheelIndex); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetContactPhysicalMaterial // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x201d330
	float GetBrake(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.GetBrake // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d300
	void FloatingInAirChanged__DelegateSignature(bool bIsFloatingInAir); // DelegateFunction BravoHotelGame.BravoHotelVehicleMovementComponent.FloatingInAirChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void EngineIdling(bool SetIdle); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.EngineIdling // (Final|Native|Public|BlueprintCallable) // @ game+0x201d270
	bool CanRideOnWater(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.CanRideOnWater // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d240
	bool CanRideOnGround(); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.CanRideOnGround // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201d210
	void AddImpulseAtLocation(struct FVector& Impulse, struct FVector& Location); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.AddImpulseAtLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x201d130
	void AddImpulse(struct FVector& Impulse); // Function BravoHotelGame.BravoHotelVehicleMovementComponent.AddImpulse // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x201d0a0
};

// Class BravoHotelGame.BravoHotelVehicleMovementComponent4W
// Size: 0x670 (Inherited: 0x620)
struct UBravoHotelVehicleMovementComponent4W : UBravoHotelVehicleMovementComponent {
	struct FVehicleDifferential4WData DifferentialSetup; // 0x618(0x1c)
	struct TArray<float> WreckedDifferentialLateralWeights; // 0x638(0x10)
	float AckermannAccuracy; // 0x648(0x04)
	char pad_650[0x20]; // 0x650(0x20)
};

// Class BravoHotelGame.BravoHotelVehicleSeatCollisionComponent
// Size: 0x4d0 (Inherited: 0x4c0)
struct UBravoHotelVehicleSeatCollisionComponent : UCapsuleComponent {
	int32_t SeatNum; // 0x4c0(0x04)
	char pad_4C4[0xc]; // 0x4c4(0x0c)

	int32_t GetSeatNum(); // Function BravoHotelGame.BravoHotelVehicleSeatCollisionComponent.GetSeatNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201df40
};

// Class BravoHotelGame.VehicleSeatData
// Size: 0x178 (Inherited: 0x30)
struct UVehicleSeatData : UDataAsset {
	bool bShouldUseTwoHandIK; // 0x30(0x01)
	char pad_31[0x7]; // 0x31(0x07)
	struct UBlendSpaceBase* IdleAimOffset; // 0x38(0x08)
	struct UAnimSequence* UnarmedIdleAnim; // 0x40(0x08)
	struct UAnimSequence* UnarmedStandAnim; // 0x48(0x08)
	struct UAnimSequence* RifleIdleAnim; // 0x50(0x08)
	struct UAnimSequence* RifleAimingAOSAnim; // 0x58(0x08)
	struct UBlendSpaceBase* RifleAimOffset; // 0x60(0x08)
	struct UBlendSpaceBase* RifleAOSBlendingAnim; // 0x68(0x08)
	struct UAnimSequence* PistolIdleAnim; // 0x70(0x08)
	struct UAnimSequence* PistolAimingAOSAnim; // 0x78(0x08)
	struct UBlendSpaceBase* PistolAimOffset; // 0x80(0x08)
	struct UBlendSpaceBase* PistolAOSBlendingAnim; // 0x88(0x08)
	struct UAnimSequence* ThrowingWeaponIdleAnim; // 0x90(0x08)
	struct UAnimSequence* ThrowingWeaponAimingAOSAnim; // 0x98(0x08)
	struct UBlendSpaceBase* OverThrow_ThrowingWeaponAimOffset; // 0xa0(0x08)
	struct UBlendSpaceBase* UnderThrow_ThrowingWeaponAimOffset; // 0xa8(0x08)
	struct UBlendSpaceBase* ThrowingWeaponOverThrowBlendingAnim; // 0xb0(0x08)
	struct UBlendSpaceBase* ThrowingWeaponUnderThrowBlendingAnim; // 0xb8(0x08)
	struct FAnimSlot OverThrowAnim; // 0xc0(0x10)
	struct FAnimSlot UnderThrowAnim; // 0xd0(0x10)
	struct UAnimSequence* RPGIdleAnim; // 0xe0(0x08)
	struct UCurveVector* OccupantAOSBlendingCurve; // 0xe8(0x08)
	struct FVector AimingCameraTargetLocation; // 0xf0(0x0c)
	char pad_FC[0x4]; // 0xfc(0x04)
	struct UCurveFloat* MinimumCameraPitchCurve; // 0x100(0x08)
	float MinimumCameraYaw; // 0x108(0x04)
	float MaximumCameraYaw; // 0x10c(0x04)
	float IdleViewPitchMin; // 0x110(0x04)
	float IdleViewPitchMax; // 0x114(0x04)
	float IdleViewYawMin; // 0x118(0x04)
	float IdleViewYawMax; // 0x11c(0x04)
	struct UBlendSpaceBase* BS_DriverHandlebar_1P; // 0x120(0x08)
	struct UBlendSpaceBase* BS_DriverHandlebar_3P; // 0x128(0x08)
	struct UAnimSequence* DriverHandlingIdleAnim_1P; // 0x130(0x08)
	struct UAnimSequence* DriverHandlingIdleAnim_3P; // 0x138(0x08)
	struct UAnimSequence* DriverHandlingLeftAnim_1P; // 0x140(0x08)
	struct UAnimSequence* DriverHandlingLeftAnim_3P; // 0x148(0x08)
	struct UAnimSequence* DriverHandlingRightAnim_1P; // 0x150(0x08)
	struct UAnimSequence* DriverHandlingRightAnim_3P; // 0x158(0x08)
	bool bCheckRightHandAimOffset; // 0x160(0x01)
	char pad_161[0x7]; // 0x161(0x07)
	struct UAnimSequence* DriverAimOffsetBasePose_1P; // 0x168(0x08)
	struct UBlendSpaceBase* DriverAimOffset_1P; // 0x170(0x08)
};

// Class BravoHotelGame.BravoHotelVehicleSeatComponent
// Size: 0x530 (Inherited: 0x4d0)
struct UBravoHotelVehicleSeatComponent : UBoxComponent {
	struct FName SeatSocketName; // 0x4c8(0x08)
	bool bIsForDriver; // 0x4d0(0x01)
	int32_t Index; // 0x4d4(0x04)
	struct ABravoHotelCharacter* Occupant; // 0x4d8(0x08)
	struct TArray<struct UBravoHotelVehicleSeatComponent*> SortedSeats; // 0x4e0(0x10)
	struct UBravoHotelVehicleSeatCollisionComponent* OccupantCollision; // 0x4f0(0x08)
	struct FMulticastInlineDelegate OnOccupantEntered; // 0x4f8(0x10)
	struct FMulticastInlineDelegate OnOccupantExited; // 0x508(0x10)
	struct UVehicleSeatData* Data; // 0x518(0x08)
	float ExitSideWeight; // 0x524(0x04)
	float ExitDistanceFromSeatBound; // 0x528(0x04)
	char pad_52D[0x3]; // 0x52d(0x03)

	void SetSeatSocketName(struct FName NewSocketName); // Function BravoHotelGame.BravoHotelVehicleSeatComponent.SetSeatSocketName // (Final|Native|Public|BlueprintCallable) // @ game+0x201e620
	void SetOccupantCollision(struct UBravoHotelVehicleSeatCollisionComponent* InOccupantCollision); // Function BravoHotelGame.BravoHotelVehicleSeatComponent.SetOccupantCollision // (Final|Native|Public) // @ game+0x201e5a0
	void ReserveForDriver(); // Function BravoHotelGame.BravoHotelVehicleSeatComponent.ReserveForDriver // (Final|Native|Public) // @ game+0x201e580
	void OccupantChanged__DelegateSignature(struct UBravoHotelVehicleSeatComponent* SeatComponent, struct ABravoHotelCharacter* Occupant); // DelegateFunction BravoHotelGame.BravoHotelVehicleSeatComponent.OccupantChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	bool IsOccupied(); // Function BravoHotelGame.BravoHotelVehicleSeatComponent.IsOccupied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201e550
	bool IsDriverSeat(); // Function BravoHotelGame.BravoHotelVehicleSeatComponent.IsDriverSeat // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201e520
	struct FName GetSeatSocketName(); // Function BravoHotelGame.BravoHotelVehicleSeatComponent.GetSeatSocketName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201e4e0
	struct UBravoHotelVehicleSeatCollisionComponent* GetOccupantCollision(); // Function BravoHotelGame.BravoHotelVehicleSeatComponent.GetOccupantCollision // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201e4c0
	struct ABravoHotelCharacter* GetOccupant(); // Function BravoHotelGame.BravoHotelVehicleSeatComponent.GetOccupant // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201e490
	int32_t GetIndex(); // Function BravoHotelGame.BravoHotelVehicleSeatComponent.GetIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x201e460
};

// Class BravoHotelGame.BravoHotelVehicleSpawnActor
// Size: 0x330 (Inherited: 0x320)
struct ABravoHotelVehicleSpawnActor : AActor {
	float CheckVehicleSpawnDistance; // 0x320(0x04)
	struct FName VehicleAreaSpawnRateTableKey; // 0x324(0x08)
	char pad_32C[0x4]; // 0x32c(0x04)
};

// Class BravoHotelGame.BravoHotelVehicleSpawnBoxComponent
// Size: 0x500 (Inherited: 0x4d0)
struct UBravoHotelVehicleSpawnBoxComponent : UBoxComponent {
	float SpawnProbability; // 0x4c8(0x04)
	struct TArray<struct FSpawnVehicleInfo> SpawnVehiclesInBoxList; // 0x4d0(0x10)
	struct FName StandardGroupName; // 0x4e0(0x08)
	struct UBravoHotelVehicleStandardGroupBoxComponent* ParentsStandardGroupBoxComponent; // 0x4e8(0x08)
	struct FName DivisionVehicleKey; // 0x4f0(0x08)
	char pad_4FC[0x4]; // 0x4fc(0x04)

	void SpawnVehicle(struct ABravoHotelPlayerController* SpawnInstigator, struct FString ParentActorName); // Function BravoHotelGame.BravoHotelVehicleSpawnBoxComponent.SpawnVehicle // (Final|Native|Public) // @ game+0x201efc0
	void SetDivisionVehicle(struct FName& VehicleKey); // Function BravoHotelGame.BravoHotelVehicleSpawnBoxComponent.SetDivisionVehicle // (Final|Native|Public|HasOutParms) // @ game+0x201ef30
	struct TArray<struct FSpawnVehicleInfo> GetSpawnVehicleInfoList(); // Function BravoHotelGame.BravoHotelVehicleSpawnBoxComponent.GetSpawnVehicleInfoList // (Final|Native|Public) // @ game+0x201eea0
	float GetSpawnProbability(); // Function BravoHotelGame.BravoHotelVehicleSpawnBoxComponent.GetSpawnProbability // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f464c0
	struct UBravoHotelVehicleStandardGroupBoxComponent* GetParentsStandardGroupBoxComponent(); // Function BravoHotelGame.BravoHotelVehicleSpawnBoxComponent.GetParentsStandardGroupBoxComponent // (Final|Native|Public) // @ game+0x201ee80
};

// Class BravoHotelGame.BravoHotelVehicleSpawner
// Size: 0x330 (Inherited: 0x320)
struct ABravoHotelVehicleSpawner : AActor {
	struct ABravoHotelVehicle* SpawnedVehicle; // 0x320(0x08)
	bool bActivated; // 0x328(0x01)
	char pad_329[0x7]; // 0x329(0x07)

	struct ABravoHotelVehicle* SpawnVehicles(); // Function BravoHotelGame.BravoHotelVehicleSpawner.SpawnVehicles // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void ServerActivateVehicle(); // Function BravoHotelGame.BravoHotelVehicleSpawner.ServerActivateVehicle // (Final|Native|Protected|BlueprintCallable) // @ game+0x201f340
};

// Class BravoHotelGame.BravoHotelVehicleSpawnParentBoxComponent
// Size: 0x4e0 (Inherited: 0x4d0)
struct UBravoHotelVehicleSpawnParentBoxComponent : UBoxComponent {
	char pad_4D0[0x10]; // 0x4d0(0x10)
};

// Class BravoHotelGame.BravoHotelVehicleStandardGroupBoxComponent
// Size: 0x510 (Inherited: 0x4d0)
struct UBravoHotelVehicleStandardGroupBoxComponent : UBoxComponent {
	struct FDataTableRowHandle VehicleStandardGroupInfo; // 0x4c8(0x10)
	struct FVehicleSpawnBoxList EmptyBoxInfos; // 0x4d8(0x10)
	struct FVehicleSpawnBoxList DivisionBoxInfos; // 0x4e8(0x10)
	struct FVehicleSpawnBoxList AllBoxInfos; // 0x4f8(0x10)
};

// Class BravoHotelGame.BravoHotelVehicleTireComponent
// Size: 0x590 (Inherited: 0x540)
struct UBravoHotelVehicleTireComponent : UStaticMeshComponent {
	struct TArray<int32_t> ConnectedWheelIndices; // 0x538(0x10)
	struct FName OriginalAttachBoneName; // 0x548(0x08)
	struct FName SurfaceFxBoneName; // 0x550(0x08)
	struct FVector SurfaceFxScale; // 0x558(0x0c)
	float SurfaceFxMaxDrawDistance; // 0x564(0x04)
	struct UParticleSystemComponent* SurfaceFxComponent; // 0x568(0x08)
	struct UParticleSystem* WreckedEffect; // 0x570(0x08)
	struct UAkAudioEvent* WreckedSound; // 0x578(0x08)
	struct ABravoHotelVehicle* OwnerVehicle; // 0x588(0x08)
};

// Class BravoHotelGame.BravoHotelVehicleWheel
// Size: 0x140 (Inherited: 0xf0)
struct UBravoHotelVehicleWheel : UVehicleWheel {
	struct UCurveFloat* DriftingLatStiffMaxLoadCurve; // 0xf0(0x08)
	struct UCurveFloat* DriftingLatStiffValueCurve; // 0xf8(0x08)
	struct UCurveFloat* DriftingLongStiffValueCurve; // 0x100(0x08)
	bool bUseDriftingLifeTime; // 0x108(0x01)
	char pad_109[0x3]; // 0x109(0x03)
	float DriftingLifeTime; // 0x10c(0x04)
	char pad_110[0x10]; // 0x110(0x10)
	struct UBravoHotelVehicleMovementComponent* VehicleMovement; // 0x120(0x08)
	char pad_128[0x18]; // 0x128(0x18)
};

// Class BravoHotelGame.BravoHotelVehicleWheelProxy
// Size: 0x158 (Inherited: 0x140)
struct UBravoHotelVehicleWheelProxy : UBravoHotelVehicleWheel {
	char pad_140[0x18]; // 0x140(0x18)
};

// Class BravoHotelGame.BravoHotelVehicleWidget
// Size: 0x2a8 (Inherited: 0x248)
struct UBravoHotelVehicleWidget : UUserWidget {
	bool IsShow; // 0x248(0x01)
	char pad_249[0x3]; // 0x249(0x03)
	float Fuel; // 0x24c(0x04)
	float hp; // 0x250(0x04)
	char pad_254[0x4]; // 0x254(0x04)
	struct FString Speed; // 0x258(0x10)
	struct FString Name; // 0x268(0x10)
	struct TArray<struct FSeatInfo> SeatInfoList; // 0x278(0x10)
	struct TArray<struct FWheelInfo> WheelInfoList; // 0x288(0x10)
	struct ABravoHotelVehicle* Vehicle; // 0x298(0x08)
	char pad_2A0[0x8]; // 0x2a0(0x08)

	void ShowVehicle(); // Function BravoHotelGame.BravoHotelVehicleWidget.ShowVehicle // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetName(struct FString VehicleName); // Function BravoHotelGame.BravoHotelVehicleWidget.SetName // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void SetInfo(float CurFuel, float CurHp, struct FString CurSpeed); // Function BravoHotelGame.BravoHotelVehicleWidget.SetInfo // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void HideVehicle(); // Function BravoHotelGame.BravoHotelVehicleWidget.HideVehicle // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
};

// Class BravoHotelGame.BravoHotelViewportClient
// Size: 0x350 (Inherited: 0x330)
struct UBravoHotelViewportClient : UGameViewportClient {
	char pad_330[0x20]; // 0x330(0x20)
};

// Class BravoHotelGame.BravoHotelVoiceComponent
// Size: 0x1b8 (Inherited: 0xb0)
struct UBravoHotelVoiceComponent : UActorComponent {
	char pad_B0[0xf0]; // 0xb0(0xf0)
	struct UDataTable* Table; // 0x1a0(0x08)
	char pad_1A8[0x10]; // 0x1a8(0x10)

	void ServerTeamPlayerVoice(struct ABravoHotelPlayerController* pController, struct FName Idx); // Function BravoHotelGame.BravoHotelVoiceComponent.ServerTeamPlayerVoice // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x20209e0
	void ServerAllPlayerVoice(struct FName Idx); // Function BravoHotelGame.BravoHotelVoiceComponent.ServerAllPlayerVoice // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2020920
	void MulticastAllPlayerVoice(struct FName Idx); // Function BravoHotelGame.BravoHotelVoiceComponent.MulticastAllPlayerVoice // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2020890
};

// Class BravoHotelGame.BravoHotelVoiceTalkWidget
// Size: 0x248 (Inherited: 0x248)
struct UBravoHotelVoiceTalkWidget : UUserWidget {
};

// Class BravoHotelGame.BravoHotelWall
// Size: 0x320 (Inherited: 0x320)
struct ABravoHotelWall : AActor {
};

// Class BravoHotelGame.BravoHotelWaterActor
// Size: 0x340 (Inherited: 0x320)
struct ABravoHotelWaterActor : AActor {
	char pad_320[0x20]; // 0x320(0x20)

	void OnViewCameraOutWater(); // Function BravoHotelGame.BravoHotelWaterActor.OnViewCameraOutWater // (Final|Native|Public) // @ game+0x2020ef0
	void OnViewCameraInWater(); // Function BravoHotelGame.BravoHotelWaterActor.OnViewCameraInWater // (Final|Native|Public) // @ game+0x2020ed0
};

// Class BravoHotelGame.BravoHotelWaterPhysicsVolume
// Size: 0x370 (Inherited: 0x368)
struct ABravoHotelWaterPhysicsVolume : APhysicsVolume {
	struct UParticleSystem* InWaterParticle; // 0x368(0x08)
};

// Class BravoHotelGame.BravoHotelWeaponFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelWeaponFunctionLibrary : UBlueprintFunctionLibrary {

	void NativeGetWeaponDetailsByItemInfo(struct FInventoryItemInfo& InInventoryItemInfo, bool& ReturnValue, struct FBravoHotelWeaponInfo& WeaponInfoOut); // Function BravoHotelGame.BravoHotelWeaponFunctionLibrary.NativeGetWeaponDetailsByItemInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x2023700
	void NativeGetWeaponDetails(struct FDataTableRowHandle& InWeaponDataTable, bool& ReturnValue, struct FBravoHotelWeaponInfo& WeaponInfoOut); // Function BravoHotelGame.BravoHotelWeaponFunctionLibrary.NativeGetWeaponDetails // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x2023580
	struct TArray<struct FName> GetBuffsByString(struct FString inString); // Function BravoHotelGame.BravoHotelWeaponFunctionLibrary.GetBuffsByString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022cb0
	enum class EWeaponAttachmentType GetAttachmentSlotByString(struct FString inString); // Function BravoHotelGame.BravoHotelWeaponFunctionLibrary.GetAttachmentSlotByString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022b30
	struct TArray<enum class EWeaponAttachmentItem> GetAttachmentItemsByString(struct FString inString); // Function BravoHotelGame.BravoHotelWeaponFunctionLibrary.GetAttachmentItemsByString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022a00
	enum class EWeaponAttachmentItem GetAttachmentItemByString(struct FString inString); // Function BravoHotelGame.BravoHotelWeaponFunctionLibrary.GetAttachmentItemByString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x2022910
};

// Class BravoHotelGame.BravoHotelWeaponPickup
// Size: 0x938 (Inherited: 0x938)
struct ABravoHotelWeaponPickup : ABravoHotelPickup {
};

// Class BravoHotelGame.BravoHotelWeightMapData
// Size: 0x60 (Inherited: 0x30)
struct UBravoHotelWeightMapData : UDataAsset {
	struct TArray<char> BitDataArray; // 0x30(0x10)
	struct FVector2D WorldSize; // 0x40(0x08)
	struct FVector2D WorldCenter; // 0x48(0x08)
	struct FVector2D BaseMapSize; // 0x50(0x08)
	int32_t WeightMapRadiusCheckCount; // 0x58(0x04)
	char pad_5C[0x4]; // 0x5c(0x04)

	bool IsEnablePersonalBoxSpawn(struct FVector2D& WolrdCurPos, struct FString& outErrorMessage); // Function BravoHotelGame.BravoHotelWeightMapData.IsEnablePersonalBoxSpawn // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x203ad00
	struct FVector2D ConvertPosWorldtoMap(struct FVector2D WorldPos); // Function BravoHotelGame.BravoHotelWeightMapData.ConvertPosWorldtoMap // (Final|Native|Public|HasDefaults|BlueprintCallable) // @ game+0x203ac70
	bool CheckData(float& CurMapSize, struct FVector2D& CurPos, bool& outCheckLand, bool& outCheckDescent, bool& outCheckPersonalSupplyBox, struct FString& outErrorMessage); // Function BravoHotelGame.BravoHotelWeightMapData.CheckData // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x203aa20
};

// Class BravoHotelGame.BravoHotelWindow
// Size: 0x368 (Inherited: 0x330)
struct ABravoHotelWindow : ABravoHotelDestructibleEx {
	struct TArray<struct UBravoHotelHIDestructibleComponent*> HIWindowComponents; // 0x330(0x10)
	struct TArray<struct UBravoHotelDestructibleComponent*> WindowComponents; // 0x340(0x10)
	bool bCreateAudioPortal; // 0x350(0x01)
	char pad_351[0x7]; // 0x351(0x07)
	struct TArray<struct UBravoHotelAudioPortalComponent*> SpawnedAudioPortalsOnClient; // 0x358(0x10)
};

// Class BravoHotelGame.BravoHotelWorldMapAreaWidget
// Size: 0x510 (Inherited: 0x248)
struct UBravoHotelWorldMapAreaWidget : UUserWidget {
	struct UCanvasPanel* redzone; // 0x248(0x08)
	struct UCanvasPanel* Nuclear; // 0x250(0x08)
	struct UCanvasPanel* FindLandingPosition; // 0x258(0x08)
	struct UCanvasPanel* FindLandingPositionTry; // 0x260(0x08)
	struct UCanvasPanel* SearchInstinct; // 0x268(0x08)
	struct UCanvasPanel* SpatialSense; // 0x270(0x08)
	struct UCanvasPanel* CarScan; // 0x278(0x08)
	struct UCanvasPanel* CarScanTry; // 0x280(0x08)
	struct UCanvasPanel* UltimateVehicle; // 0x288(0x08)
	struct UCanvasPanel* NitroBoom; // 0x290(0x08)
	struct UCanvasPanel* TransportAircraft; // 0x298(0x08)
	struct UCanvasPanel* TransportDropBox; // 0x2a0(0x08)
	struct UCanvasPanel* MaterialItem; // 0x2a8(0x08)
	struct UCanvasPanel* Amplifier; // 0x2b0(0x08)
	struct UCanvasPanel* HeartBeatSensor; // 0x2b8(0x08)
	struct UCanvasPanel* Trap; // 0x2c0(0x08)
	struct UOverlay* Driver_Sounds; // 0x2c8(0x08)
	struct UCanvasPanel* LocalPing; // 0x2d0(0x08)
	struct UCanvasPanel* ExpertWeaponItem; // 0x2d8(0x08)
	struct UImage* Img_RedZone; // 0x2e0(0x08)
	struct UImage* Img_Nuclear; // 0x2e8(0x08)
	struct UImage* Img_FindLandingPosition; // 0x2f0(0x08)
	struct UImage* Img_FindLandingPositionTry; // 0x2f8(0x08)
	struct UImage* Img_FindLandingPositionAnim; // 0x300(0x08)
	struct UImage* Img_SearchInstinct; // 0x308(0x08)
	struct UImage* Img_SpatialSense; // 0x310(0x08)
	struct UImage* Img_CarScan; // 0x318(0x08)
	struct UImage* Img_CarScanTry; // 0x320(0x08)
	struct UImage* Img_UltimateVehicle; // 0x328(0x08)
	struct UImage* Img_NitroBoom; // 0x330(0x08)
	struct UImage* Img_Amplifier; // 0x338(0x08)
	struct UImage* Img_HeartBeatSensor; // 0x340(0x08)
	struct UImage* Img_DropBoxCap_Open; // 0x348(0x08)
	struct UImage* Img_DropBoxCap_Close; // 0x350(0x08)
	struct UImage* LocalPingImg; // 0x358(0x08)
	struct UImage* Img_DropBoxChute; // 0x360(0x08)
	struct UBravoHotelIconImageWidget* IconImage; // 0x368(0x08)
	struct UBravoHotelIconImageWidget* IconImage_2; // 0x370(0x08)
	struct UOverlay* Overlay_TransportAircraft; // 0x378(0x08)
	struct UWidgetSwitcher* WidgetType; // 0x380(0x08)
	struct UWidgetSwitcher* WidgetSwitcher_TrapState; // 0x388(0x08)
	struct UWidgetSwitcher* WidgetSwitcher_Icon; // 0x390(0x08)
	struct UWidgetSwitcher* WidgetSwitcher_Icon2; // 0x398(0x08)
	struct UWidgetSwitcher* WidgetSwitcher_DropBoxCap; // 0x3a0(0x08)
	struct UWidgetSwitcher* WidgetSwitcher_Icon2_2; // 0x3a8(0x08)
	struct UWidgetAnimation* Anim_RedZone; // 0x3b0(0x08)
	struct UWidgetAnimation* Anim_Nuclear; // 0x3b8(0x08)
	struct UWidgetAnimation* Anim_FindLandingPosition; // 0x3c0(0x08)
	struct UWidgetAnimation* Anim_SearchInstinct; // 0x3c8(0x08)
	struct UWidgetAnimation* Anim_SpatialSense; // 0x3d0(0x08)
	struct UWidgetAnimation* Anim_Propeller; // 0x3d8(0x08)
	struct UWidgetAnimation* Anim_TrapStick; // 0x3e0(0x08)
	struct UWidgetAnimation* Anim_Trapped; // 0x3e8(0x08)
	struct UWidgetAnimation* Anim_DriverSounds; // 0x3f0(0x08)
	struct UAkAudioEvent* AudioEvent_ActiveTrap; // 0x3f8(0x08)
	struct FTimerHandle TimerHandle_UpdateLocation; // 0x400(0x08)
	char pad_408[0x10]; // 0x408(0x10)
	struct FTimerHandle TimerHandle_CheckValid; // 0x418(0x08)
	char pad_420[0x10]; // 0x420(0x10)
	struct FTimerHandle TimerHandle_OnAnimationFinished; // 0x430(0x08)
	struct FTimerHandle TimerHandle_OnAutoRemove; // 0x438(0x08)
	float SpatialSenseDuration; // 0x440(0x04)
	char pad_444[0x4]; // 0x444(0x04)
	struct UWidget* CurrentWidget; // 0x448(0x08)
	struct UWidget* CurrentImg; // 0x450(0x08)
	struct UWidgetAnimation* CurrentAnim; // 0x458(0x08)
	enum class EWorldMapAreaWidgetType AreaWidgetType; // 0x460(0x01)
	char pad_461[0x7]; // 0x461(0x07)
	struct FAreaWidgetInfo AreaWidgetInfo; // 0x468(0x88)
	struct UBravoHotelMapCompWidget* MapCompWidgetRef; // 0x4f0(0x08)
	struct UBravoHotelMainWidget* MainWidgetRef; // 0x4f8(0x08)
	struct ABravoHotelPlayerHUD* PlayerHUDRef; // 0x500(0x08)
	float CarScanTime; // 0x508(0x04)
	char pad_50C[0x4]; // 0x50c(0x04)

	void UpdateLocation(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.UpdateLocation // (Final|Native|Public) // @ game+0x203bd20
	void StopCheckValid(float RemoveDelay); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.StopCheckValid // (Final|Native|Public) // @ game+0x203bca0
	void SetAutoRemove(float RemoveDelay); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.SetAutoRemove // (Final|Native|Public) // @ game+0x203bc20
	void RefreshWidget(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.RefreshWidget // (Final|Native|Public) // @ game+0x203bc00
	bool IsValidWidget(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.IsValidWidget // (Final|Native|Public) // @ game+0x203bbd0
	void InitializeWidget(enum class EWorldMapAreaWidgetType InAreaWidgetType, struct FAreaWidgetInfo& InAreaWidgetInfo, struct UBravoHotelMapCompWidget* InMapcompWidget); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.InitializeWidget // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x203ba50
	void DoAutoRemove(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.DoAutoRemove // (Final|Native|Public) // @ game+0x203ba30
	void CheckVehicleSearch(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckVehicleSearch // (Final|Native|Public) // @ game+0x203ba10
	void CheckValid(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckValid // (Final|Native|Public) // @ game+0x203b9f0
	void CheckUltimateVehicle(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckUltimateVehicle // (Final|Native|Public) // @ game+0x203b9d0
	void CheckTrap(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckTrap // (Final|Native|Public) // @ game+0x203b9b0
	void CheckTransportDropBox(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckTransportDropBox // (Final|Native|Public) // @ game+0x203b990
	void CheckTransportAircraft(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckTransportAircraft // (Final|Native|Public) // @ game+0x203b970
	void CheckSpatialSense(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckSpatialSense // (Final|Native|Public) // @ game+0x203b950
	void CheckSearchInstinct(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckSearchInstinct // (Final|Native|Public) // @ game+0x203b930
	void CheckRedZone(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckRedZone // (Final|Native|Public) // @ game+0x203b910
	void CheckNuclear(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckNuclear // (Final|Native|Public) // @ game+0x203b8f0
	void CheckNitroBoom(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckNitroBoom // (Final|Native|Public) // @ game+0x203b8d0
	void CheckHeartBeatSensor(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckHeartBeatSensor // (Final|Native|Public) // @ game+0x203b8b0
	void CheckFindLandingPositionTry(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckFindLandingPositionTry // (Final|Native|Public) // @ game+0x203b890
	void CheckFindLandingPosition(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckFindLandingPosition // (Final|Native|Public) // @ game+0x203b870
	void CheckCarScan(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckCarScan // (Final|Native|Public) // @ game+0x203b850
	void CheckAmplifier(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.CheckAmplifier // (Final|Native|Public) // @ game+0x203b830
	void ActiveTrap(); // Function BravoHotelGame.BravoHotelWorldMapAreaWidget.ActiveTrap // (Final|Native|Public) // @ game+0x203b810
};

// Class BravoHotelGame.BravoHotelWorldMapInterface
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelWorldMapInterface : UInterface {

	void UpdateWorldMapClassInfo(); // Function BravoHotelGame.BravoHotelWorldMapInterface.UpdateWorldMapClassInfo // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetToggleMinimap(bool bToggle); // Function BravoHotelGame.BravoHotelWorldMapInterface.SetToggleMinimap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void ResetMapPlayers(); // Function BravoHotelGame.BravoHotelWorldMapInterface.ResetMapPlayers // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1cdb0
	void RemoveAreaWidget(enum class EWorldMapAreaWidgetType WorldMapAreaWidgetType, struct FAreaWidgetInfo& AreaWidgetInfo); // Function BravoHotelGame.BravoHotelWorldMapInterface.RemoveAreaWidget // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x203c890
	void OnSkillMapStart(); // Function BravoHotelGame.BravoHotelWorldMapInterface.OnSkillMapStart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e85c70
	void OnFireWidget(int32_t UniquePlayerId, struct FRotator Rotation, float Length); // Function BravoHotelGame.BravoHotelWorldMapInterface.OnFireWidget // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x203c770
	void OnAttackedWidget(int32_t UniquePlayerId); // Function BravoHotelGame.BravoHotelWorldMapInterface.OnAttackedWidget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1ce60
	void NotifyTargetPawnPos(); // Function BravoHotelGame.BravoHotelWorldMapInterface.NotifyTargetPawnPos // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1e85c90
	void NotifyNeedRefreshToMap(); // Function BravoHotelGame.BravoHotelWorldMapInterface.NotifyNeedRefreshToMap // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x1f1cd90
	void AddPersonalSupplyWidget(struct FPersonalSupplyBoxPingInfo PersonalSupplyBoxPingInfo); // Function BravoHotelGame.BravoHotelWorldMapInterface.AddPersonalSupplyWidget // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x203c6d0
	void AddAreaWidget(enum class EWorldMapAreaWidgetType WorldMapAreaWidgetType, struct FAreaWidgetInfo& AreaWidgetInfo); // Function BravoHotelGame.BravoHotelWorldMapInterface.AddAreaWidget // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x203c580
};

// Class BravoHotelGame.BravoHotelWorldMapWidget
// Size: 0x2b8 (Inherited: 0x248)
struct UBravoHotelWorldMapWidget : UUserWidget {
	char pad_248[0x8]; // 0x248(0x08)
	struct FMulticastInlineDelegate OnChangeWorldMapZoomLevelDelegate; // 0x250(0x10)
	struct FTestPoint ServerTestPoint; // 0x260(0x58)

	void SetWorldPos(struct FVector& StartPos, struct FVector& EndPos); // Function BravoHotelGame.BravoHotelWorldMapWidget.SetWorldPos // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void SetPos(struct FTestPoint& TestPoint); // Function BravoHotelGame.BravoHotelWorldMapWidget.SetPos // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnInputStopSmartPingWorldMap(); // Function BravoHotelGame.BravoHotelWorldMapWidget.OnInputStopSmartPingWorldMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnInputSmartPingWorldMap(); // Function BravoHotelGame.BravoHotelWorldMapWidget.OnInputSmartPingWorldMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnInputSmartPingMenuWorldMap(); // Function BravoHotelGame.BravoHotelWorldMapWidget.OnInputSmartPingMenuWorldMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnInputSmartPingAgreeWorldMap(); // Function BravoHotelGame.BravoHotelWorldMapWidget.OnInputSmartPingAgreeWorldMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnInputInsertMarkerWorldMap(); // Function BravoHotelGame.BravoHotelWorldMapWidget.OnInputInsertMarkerWorldMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnInputDeleteMarkerWorldMap(); // Function BravoHotelGame.BravoHotelWorldMapWidget.OnInputDeleteMarkerWorldMap // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void OnChangeWorldMapZoomLevelDelegate__DelegateSignature(int32_t PreZoomLevel, int32_t NewZoomLevel); // DelegateFunction BravoHotelGame.BravoHotelWorldMapWidget.OnChangeWorldMapZoomLevelDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void CheckSmartPingMouseEvent(struct FKey& InMouseKey, enum class EInputEvent InputEvent); // Function BravoHotelGame.BravoHotelWorldMapWidget.CheckSmartPingMouseEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x203cff0
};

// Class BravoHotelGame.BravoHotelLevelSetup
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelLevelSetup : UObject {
};

// Class BravoHotelGame.BravoHotelWorldSettings
// Size: 0x4c8 (Inherited: 0x4a8)
struct ABravoHotelWorldSettings : AWorldSettings {
	bool bUseRedZone; // 0x4a8(0x01)
	char pad_4A9[0x3]; // 0x4a9(0x03)
	float SeaLevelZ; // 0x4ac(0x04)
	float ProjectileHeightLimit; // 0x4b0(0x04)
	bool bUseMatchEndSequence; // 0x4b4(0x01)
	char pad_4B5[0x3]; // 0x4b5(0x03)
	struct ALevelSequenceActor* MatchEndSequenceRef; // 0x4b8(0x08)
	struct UBravoHotelAudioEventDescription* AudioEventDescription; // 0x4c0(0x08)
};

// Class BravoHotelGame.BravoHotelWorldTeleportWidget
// Size: 0x268 (Inherited: 0x248)
struct UBravoHotelWorldTeleportWidget : UUserWidget {
	struct FVector WorldCenter; // 0x248(0x0c)
	struct FVector2D WorldSize; // 0x254(0x08)
	struct FVector2D BaseMapSize; // 0x25c(0x08)
	char pad_264[0x4]; // 0x264(0x04)

	struct FVector2D ConvertPosWorldtoMap_Impl(struct FVector WorldPos); // Function BravoHotelGame.BravoHotelWorldTeleportWidget.ConvertPosWorldtoMap_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f48580
	float ConvertDistWorldtoMap_Impl(float Distance); // Function BravoHotelGame.BravoHotelWorldTeleportWidget.ConvertDistWorldtoMap_Impl // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x1f484f0
};

// Class BravoHotelGame.CameraModifier_PostProcess
// Size: 0x58 (Inherited: 0x48)
struct UCameraModifier_PostProcess : UCameraModifier {
	struct TArray<struct UCameraPostProcessPreset*> PresetInstances; // 0x48(0x10)
};

// Class BravoHotelGame.CameraPostProcessPreset
// Size: 0x620 (Inherited: 0x28)
struct UCameraPostProcessPreset : UObject {
	struct TArray<struct UMaterialInterface*> Materials; // 0x28(0x10)
	char pad_38[0x8]; // 0x38(0x08)
	struct FPostProcessSettings Settings; // 0x40(0x5c0)
	struct TArray<struct UMaterialController*> MaterialControllers; // 0x600(0x10)
	char pad_610[0x10]; // 0x610(0x10)

	int32_t GetMaterialCount(); // Function BravoHotelGame.CameraPostProcessPreset.GetMaterialCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x203e470
	struct TScriptInterface<IMaterialControllableInterface> GetMaterialController(int32_t Index); // Function BravoHotelGame.CameraPostProcessPreset.GetMaterialController // (Final|Native|Public|BlueprintCallable) // @ game+0x203e3d0
};

// Class BravoHotelGame.ClientSkeletalMeshComponent
// Size: 0xb70 (Inherited: 0xb70)
struct UClientSkeletalMeshComponent : USkeletalMeshComponent {
};

// Class BravoHotelGame.InventoryComponent
// Size: 0x2b0 (Inherited: 0xb0)
struct UInventoryComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	bool bBindItem; // 0xc0(0x01)
	bool bKeepItem; // 0xc1(0x01)
	char pad_C2[0x2]; // 0xc2(0x02)
	int32_t NumInventorySlots; // 0xc4(0x04)
	struct TArray<struct FInventoryItemInfo> BackPackItems; // 0xc8(0x10)
	struct AActor* BootyBoxClass; // 0xd8(0x08)
	int32_t CurrentlyHealthItemCount; // 0xe0(0x04)
	char pad_E4[0x4]; // 0xe4(0x04)
	struct TMap<struct FName, struct FName> OverrideItems; // 0xe8(0x50)
	float MaxLoad; // 0x138(0x04)
	char pad_13C[0x54]; // 0x13c(0x54)
	struct TArray<struct FInventoryItemInfo> ReplicationBackPackItems; // 0x190(0x10)
	float CurrentlyLoaded; // 0x1a0(0x04)
	int32_t SortType; // 0x1a4(0x04)
	bool bNoDropItem; // 0x1a8(0x01)
	bool bNoDropYesBox; // 0x1a9(0x01)
	char pad_1AA[0x6]; // 0x1aa(0x06)
	struct FMulticastInlineDelegate LoadInventoryFromServer; // 0x1b0(0x10)
	struct FMulticastInlineDelegate ChangeRepBackpackItemDelegate; // 0x1c0(0x10)
	struct FMulticastInlineDelegate ChangeBackpackItemDelegate; // 0x1d0(0x10)
	struct FMulticastInlineDelegate NotEnoughSpaceDelegate; // 0x1e0(0x10)
	char pad_1F0[0x40]; // 0x1f0(0x40)
	struct UItemSortOrder* InventoryItemSortOrder; // 0x230(0x08)
	struct TSoftObjectPtr<UDataAsset> InventoryItemSortOrderSoftAsset; // 0x238(0x28)
	struct UItemSortOrder* PickupItemSortOrder; // 0x260(0x08)
	struct TSoftObjectPtr<UDataAsset> PickupItemSortOrderSoftAsset; // 0x268(0x28)
	char pad_290[0x8]; // 0x290(0x08)
	struct TArray<struct ABravoHotelCharacter*> Watchers; // 0x298(0x10)
	char pad_2A8[0x8]; // 0x2a8(0x08)

	void SetReplicationItems(enum class EReplicationItemListType ItemListType, struct TArray<struct FInventoryItemInfo>& ItemList); // Function BravoHotelGame.InventoryComponent.SetReplicationItems // (Final|Native|Public|HasOutParms) // @ game+0x20431f0
	void ServerSetMaxLoad(float NewMaxLoad); // Function BravoHotelGame.InventoryComponent.ServerSetMaxLoad // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2043140
	void ServerRemoveWatchingInventory(struct UInventoryComponent* TargetInventory); // Function BravoHotelGame.InventoryComponent.ServerRemoveWatchingInventory // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2043080
	void ServerRemoveAllBackPackItems(); // Function BravoHotelGame.InventoryComponent.ServerRemoveAllBackPackItems // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2043030
	void ServerDropBackPackItem(int32_t Index, int32_t RemoveQuantity); // Function BravoHotelGame.InventoryComponent.ServerDropBackPackItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2042f30
	void ServerDropAllBackPackItems(); // Function BravoHotelGame.InventoryComponent.ServerDropAllBackPackItems // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2042ee0
	void ServerAddWatchingInventory(struct UInventoryComponent* TargetInventory); // Function BravoHotelGame.InventoryComponent.ServerAddWatchingInventory // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2042e20
	void ServerAddBackPackItem(struct ABravoHotelPickup* NewItem); // Function BravoHotelGame.InventoryComponent.ServerAddBackPackItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2042d60
	void ResynchReplicationBackPackItems(); // Function BravoHotelGame.InventoryComponent.ResynchReplicationBackPackItems // (Native|Public) // @ game+0x1f1aca0
	void RemoveReplicationItems(enum class EReplicationItemListType ItemListType, struct FInventoryItemInfo& NewItem, bool bChangingAction); // Function BravoHotelGame.InventoryComponent.RemoveReplicationItems // (Final|Native|Public|HasOutParms) // @ game+0x2042be0
	void RemoveAllReplicationItems(bool bChangingAction); // Function BravoHotelGame.InventoryComponent.RemoveAllReplicationItems // (Final|Native|Public) // @ game+0x2042b50
	void PrintBackPackSlots(); // Function BravoHotelGame.InventoryComponent.PrintBackPackSlots // (Final|Native|Public|BlueprintCallable) // @ game+0x2042b30
	void OnRep_ChangeBackpackItems(); // Function BravoHotelGame.InventoryComponent.OnRep_ChangeBackpackItems // (Native|Public) // @ game+0x2042b10
	void OnChangeBackpackItems(); // Function BravoHotelGame.InventoryComponent.OnChangeBackpackItems // (Native|Public) // @ game+0x2042af0
	void NotEnoughSpaceDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.InventoryComponent.NotEnoughSpaceDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	void ModifyReplicationItems(enum class EReplicationItemListType ItemListType, struct FInventoryItemInfo& NewItem, bool bChangingAction); // Function BravoHotelGame.InventoryComponent.ModifyReplicationItems // (Final|Native|Public|HasOutParms) // @ game+0x2042970
	void LoadInventoryFromServerDelegate__DelegateSignature(); // DelegateFunction BravoHotelGame.InventoryComponent.LoadInventoryFromServerDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // @ game+0x23a3b60
	struct FInventoryItemInfo K2_GetBackpackItemInfo(int32_t ItemIndex); // Function BravoHotelGame.InventoryComponent.K2_GetBackpackItemInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2042880
	bool IsHaveItem(struct FName& ItemKey, int32_t& OutBackpackIndex); // Function BravoHotelGame.InventoryComponent.IsHaveItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2042790
	struct ACharacter* GetOwningPawn(); // Function BravoHotelGame.InventoryComponent.GetOwningPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2042760
	struct FName GetOverridedBackPackItemName(struct FName ItemId); // Function BravoHotelGame.InventoryComponent.GetOverridedBackPackItemName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x20426d0
	void GetOverridedBackPackItemList(struct TArray<struct FInventoryItemInfo>& BackPackItemList); // Function BravoHotelGame.InventoryComponent.GetOverridedBackPackItemList // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x20425d0
	float GetMaxLoad(); // Function BravoHotelGame.InventoryComponent.GetMaxLoad // (Final|Native|Public) // @ game+0x20425a0
	float GetCurrentlyLoaded(); // Function BravoHotelGame.InventoryComponent.GetCurrentlyLoaded // (Final|Native|Public) // @ game+0x2042570
	int32_t GetCurBackPackLimitedCollectionCount(struct FName& Type); // Function BravoHotelGame.InventoryComponent.GetCurBackPackLimitedCollectionCount // (Final|Native|Private|HasOutParms|BlueprintCallable) // @ game+0x20424d0
	void GetAllStealableItemInfo(struct TArray<struct FInventoryItemInfo>& OutInfo); // Function BravoHotelGame.InventoryComponent.GetAllStealableItemInfo // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x20423c0
	void GetAllItemInfo(struct TArray<struct FInventoryItemInfo>& OutInfo); // Function BravoHotelGame.InventoryComponent.GetAllItemInfo // (Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x20422b0
	void DoSortBackPack(int32_t NewSortType); // Function BravoHotelGame.InventoryComponent.DoSortBackPack // (Final|Native|Public|BlueprintCallable) // @ game+0x2042230
	void DoSetMaxLoad(float NewMaxLoad); // Function BravoHotelGame.InventoryComponent.DoSetMaxLoad // (Final|Native|Public|BlueprintCallable) // @ game+0x20421b0
	void DoRemoveAllBackPackItems(); // Function BravoHotelGame.InventoryComponent.DoRemoveAllBackPackItems // (Final|Native|Public) // @ game+0x2042190
	void DoDropBackPackItem(int32_t Index, int32_t RemoveQuantity); // Function BravoHotelGame.InventoryComponent.DoDropBackPackItem // (Final|Native|Public|BlueprintCallable) // @ game+0x20420d0
	void DoDropAllBackPackItems(); // Function BravoHotelGame.InventoryComponent.DoDropAllBackPackItems // (Final|Native|Public) // @ game+0x20420b0
	void DoAddBackPackItem(struct ABravoHotelPickup* NewItem); // Function BravoHotelGame.InventoryComponent.DoAddBackPackItem // (Final|Native|Public|BlueprintCallable) // @ game+0x2042030
	void ClientSyncInventoryItem(struct UInventoryComponent* TargetInventory, enum class EReplicationItemListType ItemListType, struct TArray<struct FInventoryItemInfo> ItemList); // Function BravoHotelGame.InventoryComponent.ClientSyncInventoryItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2041eb0
	void ClientRemoveInventoryItem(struct UInventoryComponent* TargetInventory, enum class EReplicationItemListType ItemListType, struct FInventoryItemInfo NewItem); // Function BravoHotelGame.InventoryComponent.ClientRemoveInventoryItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2041d40
	void ClientModifyInventoryItem(struct UInventoryComponent* TargetInventory, enum class EReplicationItemListType ItemListType, struct FInventoryItemInfo NewItem); // Function BravoHotelGame.InventoryComponent.ClientModifyInventoryItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2041bd0
	void ClientAddInventoryItem(struct UInventoryComponent* TargetInventory, enum class EReplicationItemListType ItemListType, struct FInventoryItemInfo NewItem, enum class EPickupRoot PickupRoot); // Function BravoHotelGame.InventoryComponent.ClientAddInventoryItem // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x2041a20
	void CalCurrentlyLoaded(); // Function BravoHotelGame.InventoryComponent.CalCurrentlyLoaded // (Final|Native|Public) // @ game+0x2041a00
	void AddReplicationItems(enum class EReplicationItemListType ItemListType, struct FInventoryItemInfo& NewItem, bool bChangingAction); // Function BravoHotelGame.InventoryComponent.AddReplicationItems // (Final|Native|Public|HasOutParms) // @ game+0x2041880
};

// Class BravoHotelGame.DropBoxInventoryComponent
// Size: 0x2c8 (Inherited: 0x2b0)
struct UDropBoxInventoryComponent : UInventoryComponent {
	char pad_2B0[0x18]; // 0x2b0(0x18)

	void AddItemsToBox(struct TArray<struct FSpawnItemResult>& ItemsToSpawn); // Function BravoHotelGame.DropBoxInventoryComponent.AddItemsToBox // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x203e8c0
};

// Class BravoHotelGame.EquippableComponent
// Size: 0x170 (Inherited: 0xb0)
struct UEquippableComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct ACharacter* OwningPawn; // 0xc0(0x08)
	struct FInventoryItemInfo ItemInfo; // 0xc8(0x98)
	uint16_t OriginItemIndex; // 0x160(0x02)
	char pad_162[0x2]; // 0x162(0x02)
	int32_t EquippedSlotIndex; // 0x164(0x04)
	int32_t AttachedSlotIndex; // 0x168(0x04)
	char pad_16C[0x4]; // 0x16c(0x04)

	void OnRep_OwningPawn(); // Function BravoHotelGame.EquippableComponent.OnRep_OwningPawn // (Final|Native|Private) // @ game+0x203ef30
	void OnRep_OriginItemIndex(); // Function BravoHotelGame.EquippableComponent.OnRep_OriginItemIndex // (Final|Native|Private) // @ game+0x1e48b70
	void OnRep_ItemInfo(); // Function BravoHotelGame.EquippableComponent.OnRep_ItemInfo // (Final|Native|Private) // @ game+0x120dbb0
};

// Class BravoHotelGame.HUDInteractionComponent
// Size: 0xf0 (Inherited: 0xb0)
struct UHUDInteractionComponent : UActorComponent {
	struct UBravoHotelPopupManager* PopupManager; // 0xb0(0x08)
	bool MoveWorldMapToPlayer; // 0xb8(0x01)
	char pad_B9[0x7]; // 0xb9(0x07)
	struct TArray<struct UUserWidget*> SaveIgnoredWidgets; // 0xc0(0x10)
	char pad_D0[0x10]; // 0xd0(0x10)
	struct TArray<struct UUserWidget*> IgnoredWidgets; // 0xe0(0x10)

	void StopListeningForAllInputActions(struct UUserWidget* Widget); // Function BravoHotelGame.HUDInteractionComponent.StopListeningForAllInputActions // (Final|Native|Public|BlueprintCallable) // @ game+0x203f810
	void SetInGameHUDVisible(bool bState); // Function BravoHotelGame.HUDInteractionComponent.SetInGameHUDVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x203f780
	void SetInGameHUDOpacity(float StartOpacity, float EndOpacity, float Speed); // Function BravoHotelGame.HUDInteractionComponent.SetInGameHUDOpacity // (Final|Native|Public|BlueprintCallable) // @ game+0x203f670
	void ResetInGameHUDVisible(); // Function BravoHotelGame.HUDInteractionComponent.ResetInGameHUDVisible // (Final|Native|Public|BlueprintCallable) // @ game+0x203f650
	void ListenForInputAction(struct UUserWidget* Widget, struct FName ActionName, enum class EInputEvent EventType, bool bConsume, struct FDelegate Callback); // Function BravoHotelGame.HUDInteractionComponent.ListenForInputAction // (Final|Native|Public|BlueprintCallable) // @ game+0x203f4b0
	void InputModeUI(struct UUserWidget* Widget); // Function BravoHotelGame.HUDInteractionComponent.InputModeUI // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	void InputModeGame(struct UUserWidget* Widget); // Function BravoHotelGame.HUDInteractionComponent.InputModeGame // (Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x23a3b60
	struct UUserWidget* GetSightInfoWidget(); // Function BravoHotelGame.HUDInteractionComponent.GetSightInfoWidget // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	int32_t GetPopupWidgetCount(); // Function BravoHotelGame.HUDInteractionComponent.GetPopupWidgetCount // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x203f480
	struct UBravoHotelPopupManager* GetPopupManager(); // Function BravoHotelGame.HUDInteractionComponent.GetPopupManager // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x203f450
};

// Class BravoHotelGame.BravoHotelAudioConditionProvider
// Size: 0x28 (Inherited: 0x28)
struct UBravoHotelAudioConditionProvider : UInterface {

	void OnAnimNotifyTriggered(struct UAkAudioEvent* InAudioEvent, struct TArray<struct FAudioCondition>& InConditions); // Function BravoHotelGame.BravoHotelAudioConditionProvider.OnAnimNotifyTriggered // (Native|Public|HasOutParms) // @ game+0x203fb30
	struct FString GetAudioConditionState(struct FConditionGroup& Group); // Function BravoHotelGame.BravoHotelAudioConditionProvider.GetAudioConditionState // (Native|Public|HasOutParms) // @ game+0x203fa20
};

// Class BravoHotelGame.ClientPhysicsAuthorized
// Size: 0x28 (Inherited: 0x28)
struct UClientPhysicsAuthorized : UInterface {
};

// Class BravoHotelGame.InDoorVolumeComponent
// Size: 0x4d0 (Inherited: 0x4d0)
struct UInDoorVolumeComponent : UBoxComponent {
	char AdjustmentTargets; // 0x4c8(0x01)

	void EndInDoorVolume(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // Function BravoHotelGame.InDoorVolumeComponent.EndInDoorVolume // (Final|Native|Public) // @ game+0x2040110
	void BeginInDoorVolume(struct UPrimitiveComponent* OverlappedComponent, struct AActor* OtherActor, struct UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult); // Function BravoHotelGame.InDoorVolumeComponent.BeginInDoorVolume // (Final|Native|Public|HasOutParms) // @ game+0x203ff00
};

// Class BravoHotelGame.SavedInventorySettings
// Size: 0x30 (Inherited: 0x28)
struct USavedInventorySettings : UBravoHotelLocalSaveBase {
	struct FSettingData Data; // 0x28(0x05)
	char pad_2D[0x3]; // 0x2d(0x03)
};

// Class BravoHotelGame.ItemSortOrder
// Size: 0x80 (Inherited: 0x30)
struct UItemSortOrder : UDataAsset {
	struct TMap<struct FName, int32_t> SortOrder; // 0x30(0x50)
};

// Class BravoHotelGame.LadderComponent
// Size: 0x210 (Inherited: 0xb0)
struct ULadderComponent : UActorComponent {
	char pad_B0[0x10]; // 0xb0(0x10)
	struct ABravoHotelCharacter* OwnerPawn; // 0xc0(0x08)
	enum class ELadderState LadderState; // 0xc8(0x01)
	char pad_C9[0x7]; // 0xc9(0x07)
	struct ABravoHotelLadder* UsingLadder; // 0xd0(0x08)
	bool IsPawnOnLadder; // 0xd8(0x01)
	bool IsTopStart; // 0xd9(0x01)
	char pad_DA[0x2]; // 0xda(0x02)
	float LadderPos; // 0xdc(0x04)
	enum class ELadderInteractionType LadderInteractionType; // 0xe0(0x01)
	char pad_E1[0x7]; // 0xe1(0x07)
	struct UAkAudioEvent* LadderSlideLoopEvent; // 0xe8(0x08)
	struct UAkAudioEvent* LadderSlideStopEvent; // 0xf0(0x08)
	char pad_F8[0x8]; // 0xf8(0x08)
	float PreMaxFlySpeed; // 0x100(0x04)
	float PreBrakingDecelerationFlying; // 0x104(0x04)
	float DefaultMaxFlySpeed; // 0x108(0x04)
	float SpeedScaleByBuff; // 0x10c(0x04)
	float WantedBrakingDecelerationFlying; // 0x110(0x04)
	float SprintingSpeedScale; // 0x114(0x04)
	float SlidingSpeedScale; // 0x118(0x04)
	bool IsSnapping; // 0x11c(0x01)
	bool IsDirectSnap; // 0x11d(0x01)
	char pad_11E[0x2]; // 0x11e(0x02)
	float SnappingSpeed; // 0x120(0x04)
	float SnappingTime; // 0x124(0x04)
	float MinSnappingTime; // 0x128(0x04)
	float CrntSnappingTime; // 0x12c(0x04)
	struct FVector OriginLocation; // 0x130(0x0c)
	struct FVector TargetLocation; // 0x13c(0x0c)
	struct FRotator OriginRotation; // 0x148(0x0c)
	struct FRotator TargetRotation; // 0x154(0x0c)
	bool IsMoveInMotion; // 0x160(0x01)
	char pad_161[0x3]; // 0x161(0x03)
	float AnimBlendTime; // 0x164(0x04)
	struct UAnimMontage* AM_DownIn; // 0x168(0x08)
	struct UAnimMontage* AM_UpIn; // 0x170(0x08)
	struct UAnimMontage* AM_DownOut; // 0x178(0x08)
	struct UAnimMontage* AM_DownOut_R; // 0x180(0x08)
	struct UAnimMontage* AM_UpOut; // 0x188(0x08)
	struct UAnimMontage* AM_UpOut_R; // 0x190(0x08)
	struct UAnimMontage* AM_SlideOut; // 0x198(0x08)
	struct UAnimMontage* CrntMontage; // 0x1a0(0x08)
	struct UCurveVector* CurveVector_DownIn; // 0x1a8(0x08)
	struct UCurveVector* CurveVector_UpIn; // 0x1b0(0x08)
	struct UCurveVector* CurveVector_DownOut; // 0x1b8(0x08)
	struct UCurveVector* CurveVector_DownOut_R; // 0x1c0(0x08)
	struct UCurveVector* CurveVector_UpOut; // 0x1c8(0x08)
	struct UCurveVector* CurveVector_UpOut_R; // 0x1d0(0x08)
	struct UCurveVector* CurveVector_SlideOut; // 0x1d8(0x08)
	struct UCurveVector* CrntCurveVector; // 0x1e0(0x08)
	struct UCurveFloat* Curve_CameraIn; // 0x1e8(0x08)
	struct UCurveFloat* Curve_CameraInHeight; // 0x1f0(0x08)
	struct UCurveFloat* Curve_CameraSecond; // 0x1f8(0x08)
	struct UCurveFloat* Curve_CameraSecondHeight; // 0x200(0x08)
	struct UCurveFloat* Curve_CameraOut; // 0x208(0x08)

	void SyncActorLocation(); // Function BravoHotelGame.LadderComponent.SyncActorLocation // (Final|Native|Public|BlueprintCallable) // @ game+0x2044680
	void SetUsingLadder(struct ABravoHotelLadder* DetectedLadder); // Function BravoHotelGame.LadderComponent.SetUsingLadder // (Final|Native|Public|BlueprintCallable) // @ game+0x2044600
	void SetOwnerCameraAssistant(float MoveTime, float ReturnTime, float SecondTime, struct FVector TargetFirstLocation, struct FVector TargetSecondLocation); // Function BravoHotelGame.LadderComponent.SetOwnerCameraAssistant // (Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // @ game+0x2044460
	void SetLadderState(enum class ELadderState NextLadderState, bool bActiveEvent); // Function BravoHotelGame.LadderComponent.SetLadderState // (Final|Native|Public|BlueprintCallable) // @ game+0x2044390
	void SetLadderInteractionType(enum class ELadderInteractionType InLadderInteractionType); // Function BravoHotelGame.LadderComponent.SetLadderInteractionType // (Final|Native|Public|BlueprintCallable) // @ game+0x2044310
	void ServerSyncActorLocation(struct FVector ActorLocation, bool SyncVelocity, struct FVector ActorVelocity, enum class EMovementMode ClientMovementMode); // Function BravoHotelGame.LadderComponent.ServerSyncActorLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x2044150
	void ServerSetSliding(bool bSet); // Function BravoHotelGame.LadderComponent.ServerSetSliding // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2044090
	void OnRep_UsingLadder(); // Function BravoHotelGame.LadderComponent.OnRep_UsingLadder // (Final|Native|Public) // @ game+0x2044070
	void OnRep_LadderState(); // Function BravoHotelGame.LadderComponent.OnRep_LadderState // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // @ game+0x2044050
	void LadderStateEvent(); // Function BravoHotelGame.LadderComponent.LadderStateEvent // (Native|Event|Public|BlueprintEvent) // @ game+0x2044030
	void K2_StopUseLadder(); // Function BravoHotelGame.LadderComponent.K2_StopUseLadder // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_StartUseladder(); // Function BravoHotelGame.LadderComponent.K2_StartUseladder // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_MoveRightOnLadder(float AxisValue); // Function BravoHotelGame.LadderComponent.K2_MoveRightOnLadder // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void K2_MoveForwardOnLadder(float AxisValue); // Function BravoHotelGame.LadderComponent.K2_MoveForwardOnLadder // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	bool IsSliding(); // Function BravoHotelGame.LadderComponent.IsSliding // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2044000
	bool IsOwnerAuthority(); // Function BravoHotelGame.LadderComponent.IsOwnerAuthority // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2043fd0
	bool IsMoveFinished(); // Function BravoHotelGame.LadderComponent.IsMoveFinished // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2043fa0
	bool IsLocallyOwner(); // Function BravoHotelGame.LadderComponent.IsLocallyOwner // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2043f70
	struct ABravoHotelLadder* GetUsingLadder(); // Function BravoHotelGame.LadderComponent.GetUsingLadder // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2043f40
	enum class ELadderState GetPreLadderState(); // Function BravoHotelGame.LadderComponent.GetPreLadderState // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2043f20
	struct ABravoHotelCharacter* GetOwnerPawn(); // Function BravoHotelGame.LadderComponent.GetOwnerPawn // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2043ef0
	float GetMoveSpeed(); // Function BravoHotelGame.LadderComponent.GetMoveSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2043ec0
	enum class ELadderState GetLadderState(); // Function BravoHotelGame.LadderComponent.GetLadderState // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2043ea0
	float GetDefaultMoveSpeed(); // Function BravoHotelGame.LadderComponent.GetDefaultMoveSpeed // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2043e70
	bool CanMoveInput(); // Function BravoHotelGame.LadderComponent.CanMoveInput // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2043e40
};

// Class BravoHotelGame.MaterialControllableInterface
// Size: 0x28 (Inherited: 0x28)
struct UMaterialControllableInterface : UInterface {

	void SetVectorParameter(struct FName Name, struct FVector Value); // Function BravoHotelGame.MaterialControllableInterface.SetVectorParameter // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x2044da0
	void SetScalarParameter(struct FName Name, float Value); // Function BravoHotelGame.MaterialControllableInterface.SetScalarParameter // (Native|Public|BlueprintCallable) // @ game+0x2044cd0
	void SetColorParameter(struct FName Name, struct FLinearColor Value); // Function BravoHotelGame.MaterialControllableInterface.SetColorParameter // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x2044c00
	bool GetScalarParameter(struct FName Name, float& OutValue); // Function BravoHotelGame.MaterialControllableInterface.GetScalarParameter // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2044b20
	void AnimateScalarParameterFromCurrent(struct FName Name, float TargetValue, float Speed); // Function BravoHotelGame.MaterialControllableInterface.AnimateScalarParameterFromCurrent // (Native|Public|BlueprintCallable) // @ game+0x2044a30
	void AnimateScalarParameter(struct FName Name, float StartValue, float EndValue, float Duration); // Function BravoHotelGame.MaterialControllableInterface.AnimateScalarParameter // (Native|Public|BlueprintCallable) // @ game+0x20448f0
};

// Class BravoHotelGame.MaterialController
// Size: 0x88 (Inherited: 0x28)
struct UMaterialController : UObject {
	char pad_28[0x8]; // 0x28(0x08)
	struct TWeakObjectPtr<struct UMaterialInstanceDynamic> RelatedMID; // 0x30(0x08)
	char pad_38[0x50]; // 0x38(0x50)

	void SetVectorParameter(struct FName Name, struct FVector Value); // Function BravoHotelGame.MaterialController.SetVectorParameter // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x20455f0
	void SetScalarParameter(struct FName Name, float Value); // Function BravoHotelGame.MaterialController.SetScalarParameter // (Native|Public|BlueprintCallable) // @ game+0x2045520
	void SetColorParameter(struct FName Name, struct FLinearColor Value); // Function BravoHotelGame.MaterialController.SetColorParameter // (Native|Public|HasDefaults|BlueprintCallable) // @ game+0x2045450
	bool HasAnyAnimatingParameter(); // Function BravoHotelGame.MaterialController.HasAnyAnimatingParameter // (Final|Native|Public|Const) // @ game+0x2045420
	bool GetScalarParameter(struct FName Name, float& OutValue); // Function BravoHotelGame.MaterialController.GetScalarParameter // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2045340
	void AnimateScalarParameterFromCurrent(struct FName Name, float TargetValue, float Speed); // Function BravoHotelGame.MaterialController.AnimateScalarParameterFromCurrent // (Native|Public|BlueprintCallable) // @ game+0x2045240
	void AnimateScalarParameter(struct FName Name, float StartValue, float EndValue, float Duration); // Function BravoHotelGame.MaterialController.AnimateScalarParameter // (Native|Public|BlueprintCallable) // @ game+0x2045100
};

// Class BravoHotelGame.NetDormantComponent
// Size: 0xc8 (Inherited: 0xb0)
struct UNetDormantComponent : UActorComponent {
	float DelayTimeToSleep; // 0xb0(0x04)
	char pad_B4[0x14]; // 0xb4(0x14)
};

// Class BravoHotelGame.ParkourComponent
// Size: 0x5d8 (Inherited: 0xb0)
struct UParkourComponent : UActorComponent {
	char pad_B0[0x1]; // 0xb0(0x01)
	bool DrawDebugTrace; // 0xb1(0x01)
	bool ShowLog; // 0xb2(0x01)
	char ParkourDebugTypes; // 0xb3(0x01)
	bool bNoCameraMove; // 0xb4(0x01)
	char pad_B5[0x3]; // 0xb5(0x03)
	struct UParkourWindowComponent* DefaultParkourWindowComponent; // 0xb8(0x08)
	bool bOffReplicateMovement; // 0xc0(0x01)
	bool bEnableMidJump; // 0xc1(0x01)
	bool bNoInputMove; // 0xc2(0x01)
	char pad_C3[0x5]; // 0xc3(0x05)
	struct TArray<struct FName> ParkourSocketNames; // 0xc8(0x10)
	struct TArray<enum class EObjectTypeQuery> TraceObjectTypes; // 0xd8(0x10)
	float CheckWide; // 0xe8(0x04)
	float WindowCheckWide; // 0xec(0x04)
	float LimiteNormalAngle; // 0xf0(0x04)
	float DetectNormalAngle; // 0xf4(0x04)
	float BottomCheckPlus; // 0xf8(0x04)
	float ThicknessCheckPlus; // 0xfc(0x04)
	float WindowBreakRange; // 0x100(0x04)
	float SprintSpeed; // 0x104(0x04)
	float BaseTraceLength; // 0x108(0x04)
	float SprintTraceLength; // 0x10c(0x04)
	float CheckHoldRadius; // 0x110(0x04)
	float CheckHoldDepth; // 0x114(0x04)
	float BaseJumpOverThickness; // 0x118(0x04)
	float SprintJumpOverThickness; // 0x11c(0x04)
	float JumpOverPlaceDepth; // 0x120(0x04)
	float ClimbUpHighHeight; // 0x124(0x04)
	float ClimbUpBaseHeight; // 0x128(0x04)
	float ClimbUpFallingHeight; // 0x12c(0x04)
	float SlideSpeed; // 0x130(0x04)
	float LedgeGrabTranceLength; // 0x134(0x04)
	float LedgeGrabMinHeight; // 0x138(0x04)
	float LedgeGrabMinAttachTime; // 0x13c(0x04)
	float BackDistance; // 0x140(0x04)
	float DisableCollisionTime; // 0x144(0x04)
	struct FVector SkipJumpVector; // 0x148(0x0c)
	float InnerEdgeRange; // 0x154(0x04)
	struct FVector ArmIKPosition; // 0x158(0x0c)
	char pad_164[0x4]; // 0x164(0x04)
	struct UCurveFloat* Curve_SlideSpeed; // 0x168(0x08)
	struct UCurveFloat* Curve_CameraIn; // 0x170(0x08)
	struct UCurveFloat* Curve_CameraInHeight; // 0x178(0x08)
	struct UCurveFloat* Curve_CameraSecond; // 0x180(0x08)
	struct UCurveFloat* Curve_CameraSecondHeight; // 0x188(0x08)
	struct UCurveFloat* Curve_CameraOut; // 0x190(0x08)
	struct FVector ClimbTargetPosition; // 0x198(0x0c)
	struct FVector ClimbWallNormal; // 0x1a4(0x0c)
	float LastWallThickness; // 0x1b0(0x04)
	bool bClimbing; // 0x1b4(0x01)
	bool bRevertingClimb; // 0x1b5(0x01)
	bool bCanRevertClimb; // 0x1b6(0x01)
	bool bBreakWindow; // 0x1b7(0x01)
	bool bCanJump; // 0x1b8(0x01)
	bool bArmIK; // 0x1b9(0x01)
	char pad_1BA[0x6]; // 0x1ba(0x06)
	struct TArray<struct FClimbData> ClimbOverDatas; // 0x1c0(0x10)
	struct TArray<struct FClimbData> ClimbUpDatas; // 0x1d0(0x10)
	struct TArray<struct FClimbData> SprintOverDatas; // 0x1e0(0x10)
	struct TArray<struct FClimbData> SprintUpDatas; // 0x1f0(0x10)
	struct TArray<struct FClimbData> LedgeGrabClimbOverDatas; // 0x200(0x10)
	struct TArray<struct FClimbData> LedgeGrabClimbUpDatas; // 0x210(0x10)
	struct TArray<struct FClimbData> LedgeGrabBlockedClimbOverDatas; // 0x220(0x10)
	struct TArray<struct FClimbData> LedgeGrabBlockedClimbUpDatas; // 0x230(0x10)
	struct TArray<struct FClimbData> GroundingDatas; // 0x240(0x10)
	struct FClimbData SlideData; // 0x250(0x98)
	struct TMap<struct FName, struct FClimbData> OverrideDatas; // 0x2e8(0x50)
	char pad_338[0x50]; // 0x338(0x50)
	bool bUseFootInParkour; // 0x388(0x01)
	bool bUseDummyInParkour; // 0x389(0x01)
	bool bIsSlideOn; // 0x38a(0x01)
	char pad_38B[0x235]; // 0x38b(0x235)
	struct TArray<struct FParkourEvent> ParkourEvents; // 0x5c0(0x10)
	char pad_5D0[0x8]; // 0x5d0(0x08)

	void SetAttachTime(float AttachTime); // Function BravoHotelGame.ParkourComponent.SetAttachTime // (Final|Native|Public|BlueprintCallable) // @ game+0x2047760
	void ServerSyncActorLocation(struct FVector ActorLocation, bool SyncVelocity, struct FVector ActorVelocity, enum class EMovementMode ClientMovementMode); // Function BravoHotelGame.ParkourComponent.ServerSyncActorLocation // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x20475a0
	void ServerRewindClimb(); // Function BravoHotelGame.ParkourComponent.ServerRewindClimb // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2047550
	void ServerLaunchActor(struct FVector LaunchVelocity, bool bToFalling); // Function BravoHotelGame.ParkourComponent.ServerLaunchActor // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // @ game+0x2047430
	void ServerDisableCollision(); // Function BravoHotelGame.ParkourComponent.ServerDisableCollision // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x20473e0
	void ServerClimbStart(struct FRepClimbInfo ClimbInfo); // Function BravoHotelGame.ParkourComponent.ServerClimbStart // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2047310
	void ServerClimbEnd(bool bMulti); // Function BravoHotelGame.ParkourComponent.ServerClimbEnd // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2047250
	void ServerApplyDamageToGlass(struct FRepPointDamageInfo RepDamageInfo); // Function BravoHotelGame.ParkourComponent.ServerApplyDamageToGlass // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x2047160
	void OnOriginRebasing(struct UWorld* World, struct FIntVector PreviosWorldOriginLocation, struct FIntVector OriginLocation); // Function BravoHotelGame.ParkourComponent.OnOriginRebasing // (Native|Public|HasDefaults) // @ game+0x2047030
	void MultiRewindClimb(); // Function BravoHotelGame.ParkourComponent.MultiRewindClimb // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2047010
	void MultiDisableCollision(); // Function BravoHotelGame.ParkourComponent.MultiDisableCollision // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2046ff0
	void MultiClimbStart(struct FRepClimbInfo ClimbInfo); // Function BravoHotelGame.ParkourComponent.MultiClimbStart // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2046eb0
	void MultiClimbEnd(bool bAutonomus); // Function BravoHotelGame.ParkourComponent.MultiClimbEnd // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2046e20
	void MultiApplyDamageToGlass(struct FRepPointDamageInfo RepDamageInfo); // Function BravoHotelGame.ParkourComponent.MultiApplyDamageToGlass // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2046d50
	struct FRepClimbInfo GetLastClimbInfo(); // Function BravoHotelGame.ParkourComponent.GetLastClimbInfo // (Final|Native|Public|Const) // @ game+0x2046ca0
	bool GetIsLedgeGrab(); // Function BravoHotelGame.ParkourComponent.GetIsLedgeGrab // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2046c80
	void DoRewindClimb(); // Function BravoHotelGame.ParkourComponent.DoRewindClimb // (Final|Native|Public|BlueprintCallable) // @ game+0x2046c60
	void DoClimbEnd(bool bDoInternalLogic); // Function BravoHotelGame.ParkourComponent.DoClimbEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x2046bd0
	void CheckClimbEnd(); // Function BravoHotelGame.ParkourComponent.CheckClimbEnd // (Final|Native|Public|BlueprintCallable) // @ game+0x2046bb0
};

// Class BravoHotelGame.ParkourWindowComponent
// Size: 0x270 (Inherited: 0x220)
struct UParkourWindowComponent : USceneComponent {
	struct TArray<struct FClimbData> ClimbOverDatas; // 0x220(0x10)
	struct TArray<struct FClimbData> ClimbUpDatas; // 0x230(0x10)
	struct TArray<struct FClimbData> SprintOverDatas; // 0x240(0x10)
	struct TArray<struct FClimbData> SprintUpDatas; // 0x250(0x10)
	struct TArray<struct FClimbData> GroundingDatas; // 0x260(0x10)
};

// Class BravoHotelGame.PlayerInventoryComponent
// Size: 0x730 (Inherited: 0x2b0)
struct UPlayerInventoryComponent : UInventoryComponent {
	struct FMulticastInlineDelegate OnChangeCurrentWeaponDelegate; // 0x2b0(0x10)
	struct FMulticastInlineDelegate OnChangeWeaponAttachmentsDelgate; // 0x2c0(0x10)
	struct FMulticastInlineDelegate OnChangeWeaponsDelegate; // 0x2d0(0x10)
	struct FMulticastInlineDelegate OnChangeWearableItemDelegate; // 0x2e0(0x10)
	struct FMulticastInlineDelegate OnChangeMaterialDelegate; // 0x2f0(0x10)
	char pad_300[0x20]; // 0x300(0x20)
	struct TArray<struct FWeaponSlot> DefaultWeaponSlots; // 0x320(0x10)
	struct TArray<struct FWeaponSlot> AllowedWeaponSlots; // 0x330(0x10)
	struct TArray<struct FInventoryItemInfo> WearableItemSlots; // 0x340(0x10)
	struct TArray<struct FKeepedItemInfo> KeepedItemSlots; // 0x350(0x10)
	int32_t DefualtKeepedItemSlotCount; // 0x360(0x04)
	char pad_364[0x4]; // 0x364(0x04)
	struct TArray<struct FInventoryItemInfo> MaterialItemSlots; // 0x368(0x10)
	int32_t DefaultMaterialItemSlotCount; // 0x378(0x04)
	struct FName TopArmorName; // 0x37c(0x08)
	struct FName TopHelmetName; // 0x384(0x08)
	struct FName TopBagName; // 0x38c(0x08)
	char pad_394[0x4]; // 0x394(0x04)
	struct TArray<struct FName> CombinableRecipeList; // 0x398(0x10)
	struct TArray<struct FName> PrimaryRecipeList; // 0x3a8(0x10)
	struct TMap<struct FName, int32_t> PrimaryMaterialList; // 0x3b8(0x50)
	struct TMap<struct FName, struct FText> PrimaryMaterialTargetTextList; // 0x408(0x50)
	char pad_458[0xa0]; // 0x458(0xa0)
	float PickupTraceDistance; // 0x4f8(0x04)
	char pad_4FC[0x34]; // 0x4fc(0x34)
	struct TMap<enum class EWearableItemType, struct FName> CurrentWearableKeys; // 0x530(0x50)
	struct TArray<struct FName> CompleteCombineItemList; // 0x580(0x10)
	struct TArray<struct ABravoHotelWeaponBase*> WeaponActorSlots; // 0x590(0x10)
	struct ABravoHotelWeaponBase* CurrentWeapon; // 0x5a0(0x08)
	struct ABravoHotelWeaponBase* PendingWeapon; // 0x5a8(0x08)
	struct ABravoHotelWeaponBase* CurrentAbilityWeapon; // 0x5b0(0x08)
	bool bPendingEquipWeapon; // 0x5b8(0x01)
	bool bPendingUnEquipWeapon; // 0x5b9(0x01)
	bool bEquippingWeapon; // 0x5ba(0x01)
	char pad_5BB[0x5]; // 0x5bb(0x05)
	struct UAkAudioEvent* DropToFloorSound; // 0x5c0(0x08)
	struct TArray<int32_t> NewWeaponSlotArray; // 0x5c8(0x10)
	char pad_5D8[0x10]; // 0x5d8(0x10)
	struct FStatupAnimData StatupAnimData; // 0x5e8(0x14)
	char pad_5FC[0x4]; // 0x5fc(0x04)
	struct FAnimSlot CurrentEquipAnimSlot; // 0x600(0x10)
	bool bIsPlayingEquipAnimMontage; // 0x610(0x01)
	struct FSettingData InventorySettingData; // 0x611(0x05)
	char pad_616[0x2]; // 0x616(0x02)
	struct TArray<struct UObject*> LoadedClasses; // 0x618(0x10)
	struct TArray<struct FBravoHotelThrowingWeaponItemInfo> BravoHotelThrowingWeaponItemInfoList; // 0x628(0x10)
	char pad_638[0x60]; // 0x638(0x60)
	struct FName TryPickUpMaterialItemKey; // 0x698(0x08)
	struct TArray<struct FChangeEquipResult> ChangeEquipResultList; // 0x6a0(0x10)
	int32_t PaidGold; // 0x6b0(0x04)
	int32_t CurrentGold; // 0x6b4(0x04)
	struct FFloatInterval DefaultItemDropRateRange; // 0x6b8(0x08)
	struct TMap<int32_t, struct FFloatInterval> ItemDropRateRangeByRank; // 0x6c0(0x50)
	struct UCurveFloat* ItemDropRateByRank; // 0x710(0x08)
	struct UCurveFloat* ItemDropRateByTime; // 0x718(0x08)
	struct FFloatInterval ItemDropDistance; // 0x720(0x08)
	bool bDropWeaponWithAttachment; // 0x728(0x01)
	bool bDropAttachmentToGroundWhenDropWeapon; // 0x729(0x01)
	char pad_72A[0x6]; // 0x72a(0x06)

	void UseThrowingWeapon(int32_t WeaponSlotIndex, float DestroyDelay); // Function BravoHotelGame.PlayerInventoryComponent.UseThrowingWeapon // (Final|Native|Public) // @ game+0x204f320
	void ServerUnEquipWeaponAttachment(int32_t WeaponSlotIndex, enum class EWeaponAttachmentType AttachmentType); // Function BravoHotelGame.PlayerInventoryComponent.ServerUnEquipWeaponAttachment // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204f220
	void ServerSetLastEquippedWeaponSlotIndex(int32_t NewIndex); // Function BravoHotelGame.PlayerInventoryComponent.ServerSetLastEquippedWeaponSlotIndex // (Net|NetReliableNative|Event|Public|NetServer) // @ game+0x204f190
	void ServerSetInventorySettingData(struct FSettingData SettingData); // Function BravoHotelGame.PlayerInventoryComponent.ServerSetInventorySettingData // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204f0e0
	void ServerSetCurrentAbilityWeapon(struct ABravoHotelWeaponBase* BravoHotelWeaponBase); // Function BravoHotelGame.PlayerInventoryComponent.ServerSetCurrentAbilityWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204f020
	void ServerRemoveWearableItem(enum class EWearableItemType RemoveWearableItemType); // Function BravoHotelGame.PlayerInventoryComponent.ServerRemoveWearableItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204ef70
	void ServerRemoveKeepedItem(int32_t KeepedSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.ServerRemoveKeepedItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204eeb0
	void ServerRemoveAllWearableItems(); // Function BravoHotelGame.PlayerInventoryComponent.ServerRemoveAllWearableItems // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204ee60
	void ServerPickupWeaponByWeapon(int32_t WeaponSlotIndex, struct ABravoHotelWeaponBase* NewWeapon); // Function BravoHotelGame.PlayerInventoryComponent.ServerPickupWeaponByWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204ed60
	void ServerPickupWeaponByInfo(char WeaponSlotIndex, int32_t BackPackIndex); // Function BravoHotelGame.PlayerInventoryComponent.ServerPickupWeaponByInfo // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204ec60
	void ServerPickupWeapon(int32_t WeaponSlotIndex, struct ABravoHotelPickup* NewWeapon); // Function BravoHotelGame.PlayerInventoryComponent.ServerPickupWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204eb60
	void ServerPickUpMaterialItemByPickUp(int32_t MaterialSlotIndex, struct ABravoHotelPickup* NewPickup); // Function BravoHotelGame.PlayerInventoryComponent.ServerPickUpMaterialItemByPickUp // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204ea60
	void ServerKeepItemByWeaponSlot(int32_t KeepedSlotIndex, int32_t WeaponSlotIndex, bool bFromWeapon); // Function BravoHotelGame.PlayerInventoryComponent.ServerKeepItemByWeaponSlot // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204e920
	void ServerKeepItemByPickUp(int32_t KeepedSlotIndex, struct ABravoHotelPickup* NewPickup); // Function BravoHotelGame.PlayerInventoryComponent.ServerKeepItemByPickUp // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204e820
	void ServerEquipWeaponAttachmentFromBackpack(int32_t WeaponSlotIndex, int32_t BackpackItemIndex); // Function BravoHotelGame.PlayerInventoryComponent.ServerEquipWeaponAttachmentFromBackpack // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204e720
	void ServerEquipWeaponAttachmentByInfo(int32_t WeaponSlotIndex, struct AActor* Owner, struct FInventoryItemInfo RepItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.ServerEquipWeaponAttachmentByInfo // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204e580
	void ServerEquipWeaponAttachmentByDropBox(struct ABravoHotelDropBoxActor* DropBoxActor, int32_t WeaponSlotIndex, char SlotIndex, struct FInventoryItemInfo RepItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.ServerEquipWeaponAttachmentByDropBox // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204e3c0
	void ServerEquipWeaponAttachment(int32_t WeaponSlotIndex, struct ABravoHotelPickup* NewAttachmentItem); // Function BravoHotelGame.PlayerInventoryComponent.ServerEquipWeaponAttachment // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204e2c0
	void ServerDropWeaponAttachment(int32_t WeaponSlotIndex, enum class EWeaponAttachmentType AttachmentType); // Function BravoHotelGame.PlayerInventoryComponent.ServerDropWeaponAttachment // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204e1c0
	void ServerDropWeapon(int32_t WeaponSlotIndex, bool bForceDropWorld); // Function BravoHotelGame.PlayerInventoryComponent.ServerDropWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204e0c0
	void ServerDropMaterialItem(int32_t MaterialSlotIndex, int32_t Quantity); // Function BravoHotelGame.PlayerInventoryComponent.ServerDropMaterialItem // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204dfc0
	void ServerDropAllWeapons(); // Function BravoHotelGame.PlayerInventoryComponent.ServerDropAllWeapons // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204df70
	void ServerCombineItemRecipe(struct FName RecipeKey); // Function BravoHotelGame.PlayerInventoryComponent.ServerCombineItemRecipe // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204deb0
	void ServerChangeWeapon(char WeaponSlotIndex, bool bEquip, float DelayTime, bool bPlayUnequipAnim); // Function BravoHotelGame.PlayerInventoryComponent.ServerChangeWeapon // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // @ game+0x204dd10
	void RemoveWearbleItemInStore(enum class EWearableItemType RemoveWearableItemType); // Function BravoHotelGame.PlayerInventoryComponent.RemoveWearbleItemInStore // (Final|Native|Public|BlueprintCallable) // @ game+0x204dc90
	void RemoveLockWeaponSlot(int32_t WeaponSlotIndex, int32_t LockReason); // Function BravoHotelGame.PlayerInventoryComponent.RemoveLockWeaponSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x204dbd0
	void PostUnEquipWeaponTimerProc(bool bSaveLastSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.PostUnEquipWeaponTimerProc // (Final|Native|Public) // @ game+0x204db40
	void PostEquipWeaponTimerProc(); // Function BravoHotelGame.PlayerInventoryComponent.PostEquipWeaponTimerProc // (Final|Native|Public) // @ game+0x204db20
	void PopAllWeaponSlotByBuff(struct TArray<int32_t>& OutSlotArray); // Function BravoHotelGame.PlayerInventoryComponent.PopAllWeaponSlotByBuff // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204da70
	void PlayUnequipAnimationOnAll(int32_t WeaponSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.PlayUnequipAnimationOnAll // (Net|Native|Event|NetMulticast|Protected) // @ game+0x204d9e0
	void PlayUnequipAnimation(int32_t WeaponSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.PlayUnequipAnimation // (Final|Native|Protected) // @ game+0x204d960
	void PlayEquipAnimationOnAll(int32_t WeaponSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.PlayEquipAnimationOnAll // (Net|Native|Event|NetMulticast|Protected) // @ game+0x204d8d0
	void PlayEquipAnimation(int32_t WeaponSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.PlayEquipAnimation // (Final|Native|Protected) // @ game+0x204d850
	bool PickupWeaponSlots(int32_t WeaponIndex, struct ABravoHotelWeaponBase* EquipWeapon); // Function BravoHotelGame.PlayerInventoryComponent.PickupWeaponSlots // (Final|Native|Public) // @ game+0x204d790
	void OnRep_StatupAnimData(); // Function BravoHotelGame.PlayerInventoryComponent.OnRep_StatupAnimData // (Final|Native|Protected) // @ game+0x204d770
	void OnRep_PendingUnEquipWeapon(); // Function BravoHotelGame.PlayerInventoryComponent.OnRep_PendingUnEquipWeapon // (Final|Native|Public) // @ game+0x204d750
	void OnRep_PendingEquipWeapon(); // Function BravoHotelGame.PlayerInventoryComponent.OnRep_PendingEquipWeapon // (Final|Native|Public) // @ game+0x151b910
	void OnRep_EquipWeaponAnimation(); // Function BravoHotelGame.PlayerInventoryComponent.OnRep_EquipWeaponAnimation // (Final|Native|Public) // @ game+0x204d730
	void OnRep_ChangeWearableItemSlots(); // Function BravoHotelGame.PlayerInventoryComponent.OnRep_ChangeWearableItemSlots // (Native|Public) // @ game+0x204d710
	void OnRep_ChangeWeaponSlots(struct TArray<struct ABravoHotelWeaponBase*> PreWeaponActorSlots); // Function BravoHotelGame.PlayerInventoryComponent.OnRep_ChangeWeaponSlots // (Native|Public) // @ game+0x204d610
	void OnRep_ChangeMaterialItemSlots(); // Function BravoHotelGame.PlayerInventoryComponent.OnRep_ChangeMaterialItemSlots // (Native|Public) // @ game+0x1e477f0
	void OnRep_ChangeKeepedItemSlots(); // Function BravoHotelGame.PlayerInventoryComponent.OnRep_ChangeKeepedItemSlots // (Native|Public) // @ game+0x204d5f0
	void OnRep_ChangeCurrentWeapon(struct ABravoHotelWeaponBase* PrevCurrentWeapon); // Function BravoHotelGame.PlayerInventoryComponent.OnRep_ChangeCurrentWeapon // (Native|Public) // @ game+0x204d560
	void OnEquipAnimMontageEnded(struct UAnimMontage* Montage, bool bInterrupted); // Function BravoHotelGame.PlayerInventoryComponent.OnEquipAnimMontageEnded // (Final|Native|Protected) // @ game+0x204d490
	void OnChangeWeapons(); // Function BravoHotelGame.PlayerInventoryComponent.OnChangeWeapons // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x204d470
	void OnChangeWeaponAttachment(); // Function BravoHotelGame.PlayerInventoryComponent.OnChangeWeaponAttachment // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x204d450
	void MultiPlayDropToFloorSound(struct FVector TargetLocation); // Function BravoHotelGame.PlayerInventoryComponent.MultiPlayDropToFloorSound // (Net|NetReliableNative|Event|NetMulticast|Public|HasDefaults) // @ game+0x204d3d0
	bool IsPendingUnEquipWeapon(); // Function BravoHotelGame.PlayerInventoryComponent.IsPendingUnEquipWeapon // (Final|Native|Public|Const) // @ game+0x204d3b0
	bool IsPendingEquipWeapon(); // Function BravoHotelGame.PlayerInventoryComponent.IsPendingEquipWeapon // (Final|Native|Public|Const) // @ game+0x204d390
	bool IsNeededMaterialOnItem(struct FName BaseItemKey, struct FName MaterialItemKey); // Function BravoHotelGame.PlayerInventoryComponent.IsNeededMaterialOnItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204d2d0
	bool IsLockedWeaponSlot(int32_t WeaponSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.IsLockedWeaponSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204d240
	int32_t IsImmediateAttachmentItem(struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.IsImmediateAttachmentItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204d140
	bool IsHavingItem(struct FName ItemKey, int32_t Count); // Function BravoHotelGame.PlayerInventoryComponent.IsHavingItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204d080
	bool IsHaveWeapon(struct FName& CheckKey, struct FInventoryItemInfo& OutInventoryItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.IsHaveWeapon // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204cf30
	bool IsEquippableWearableItem(struct FText& ItemName); // Function BravoHotelGame.PlayerInventoryComponent.IsEquippableWearableItem // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x204ce50
	bool IsEnableWeaponSlot(enum class EWeaponType& WeaponType, int32_t WeaponSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.IsEnableWeaponSlot // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x204cd70
	bool IsCombinableRecipe(struct FName RecipeKey); // Function BravoHotelGame.PlayerInventoryComponent.IsCombinableRecipe // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204cce0
	bool IsChangingWeapon(); // Function BravoHotelGame.PlayerInventoryComponent.IsChangingWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204ccb0
	bool IsCanUpgradeItem(struct FInventoryItemInfo& ItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.IsCanUpgradeItem // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x204cbb0
	void InternalServerChangeWeapon(uint32_t WeaponSlotIndex, bool bEquip, float DelayTime, bool bPlayUnequipAnim); // Function BravoHotelGame.PlayerInventoryComponent.InternalServerChangeWeapon // (Final|Native|Public) // @ game+0x204ca60
	bool InternalChangeWeapon(uint32_t WeaponSlotIndex, bool bPlayUnequipAnim, float DelayTime, bool bSaveLastSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.InternalChangeWeapon // (Final|Native|Public) // @ game+0x204c900
	bool HasWearableItemInSlot(enum class EWearableItemType FindType); // Function BravoHotelGame.PlayerInventoryComponent.HasWearableItemInSlot // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c870
	struct FName GetRecipeKeyByIndex(int32_t SlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.GetRecipeKeyByIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c7e0
	struct ABravoHotelWeaponBase* GetPendingWeapon(); // Function BravoHotelGame.PlayerInventoryComponent.GetPendingWeapon // (Final|Native|Public|Const) // @ game+0x204c7b0
	struct TMap<struct FName, int32_t> GetNeededMaterialOnItem(struct FName BaseItemKey); // Function BravoHotelGame.PlayerInventoryComponent.GetNeededMaterialOnItem // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c650
	int32_t GetNeededItemCount(struct FName ItemKey); // Function BravoHotelGame.PlayerInventoryComponent.GetNeededItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c5c0
	struct FText GetMaterialTargetText(struct FName ItemKey); // Function BravoHotelGame.PlayerInventoryComponent.GetMaterialTargetText // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c4d0
	void GetMainMeterialList(struct FName ItemKey, struct TArray<struct FName>& outList); // Function BravoHotelGame.PlayerInventoryComponent.GetMainMeterialList // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c3e0
	struct FName GetMainMeterial(struct FName ItemKey); // Function BravoHotelGame.PlayerInventoryComponent.GetMainMeterial // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c350
	int32_t GetItemCount(struct FName ItemKey); // Function BravoHotelGame.PlayerInventoryComponent.GetItemCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c2c0
	struct TArray<struct FName> GetEquipWeaponsAmmoList(); // Function BravoHotelGame.PlayerInventoryComponent.GetEquipWeaponsAmmoList // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c1b0
	struct ABravoHotelWeaponBase* GetEquippedWeapon(int32_t WeaponIndex); // Function BravoHotelGame.PlayerInventoryComponent.GetEquippedWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c230
	struct ABravoHotelWeaponBase* GetCurrentWeapon(); // Function BravoHotelGame.PlayerInventoryComponent.GetCurrentWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c180
	struct ABravoHotelWeaponBase* GetCurrentAbilityWeapon(); // Function BravoHotelGame.PlayerInventoryComponent.GetCurrentAbilityWeapon // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c150
	struct TArray<struct FName> GetCombinableRecipesByPickUp(struct FName ItemKey); // Function BravoHotelGame.PlayerInventoryComponent.GetCombinableRecipesByPickUp // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204c070
	int32_t FindWeaponSlot(enum class EWeaponType& WeaponType); // Function BravoHotelGame.PlayerInventoryComponent.FindWeaponSlot // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x204bfd0
	int32_t FindExistedWeaponSlot(enum class EWeaponType& WeaponType); // Function BravoHotelGame.PlayerInventoryComponent.FindExistedWeaponSlot // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x204bf30
	int32_t FindEquippableWeaponFromAllWeapons(enum class EWeaponAttachmentType AttachmentType, enum class EWeaponAttachmentItem AttachmentItem); // Function BravoHotelGame.PlayerInventoryComponent.FindEquippableWeaponFromAllWeapons // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x204be60
	int32_t FindEmptyWeaponSlot(enum class EWeaponType& WeaponType); // Function BravoHotelGame.PlayerInventoryComponent.FindEmptyWeaponSlot // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x204bdc0
	int32_t FindCloseWeaponSlot(enum class EWeaponType& WeaponType, bool bIsAscendingly); // Function BravoHotelGame.PlayerInventoryComponent.FindCloseWeaponSlot // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // @ game+0x204bce0
	struct ABravoHotelWeaponBase* DropWeaponSlots(int32_t WeaponIndex, bool ThrowItem); // Function BravoHotelGame.PlayerInventoryComponent.DropWeaponSlots // (Final|Native|Public) // @ game+0x204bc20
	void DoUnEquipWeaponAttachmentByInfo(int32_t WeaponSlotIndex, struct FInventoryItemInfo& AttachmentInfo); // Function BravoHotelGame.PlayerInventoryComponent.DoUnEquipWeaponAttachmentByInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204baf0
	void DoUnEquipWeaponAttachment(int32_t WeaponSlotIndex, enum class EWeaponAttachmentType AttachmentType); // Function BravoHotelGame.PlayerInventoryComponent.DoUnEquipWeaponAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x204ba30
	void DoSetInventorySettingData(struct FSettingData& SettingData); // Function BravoHotelGame.PlayerInventoryComponent.DoSetInventorySettingData // (Final|Native|Public|HasOutParms) // @ game+0x204b990
	void DoRemoveWearableItme(enum class EWearableItemType RemoveWearableItemType); // Function BravoHotelGame.PlayerInventoryComponent.DoRemoveWearableItme // (Final|Native|Public|BlueprintCallable) // @ game+0x204b910
	void DoRemoveKeepedItem(int32_t KeepedSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.DoRemoveKeepedItem // (Final|Native|Public|BlueprintCallable) // @ game+0x204b890
	void DoRemoveAllWearableItems(); // Function BravoHotelGame.PlayerInventoryComponent.DoRemoveAllWearableItems // (Final|Native|Public|BlueprintCallable) // @ game+0x204b870
	void DoPickupWeaponByWeapon(int32_t WeaponSlotIndex, struct ABravoHotelWeaponBase* NewWeapon); // Function BravoHotelGame.PlayerInventoryComponent.DoPickupWeaponByWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x204b7b0
	void DoPickupWeaponByInfo(int32_t WeaponSlotIndex, struct FInventoryItemInfo& NewWeaponInfo, bool bForcePickUp); // Function BravoHotelGame.PlayerInventoryComponent.DoPickupWeaponByInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204b630
	void DoPickUpWeapon(int32_t WeaponSlotIndex, struct ABravoHotelPickup* NewWeapon); // Function BravoHotelGame.PlayerInventoryComponent.DoPickUpWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x204b570
	void DoPickUpMaterialItemByPickUp(int32_t MaterialSlotIndex, struct ABravoHotelPickup* NewPickup); // Function BravoHotelGame.PlayerInventoryComponent.DoPickUpMaterialItemByPickUp // (Final|Native|Public|BlueprintCallable) // @ game+0x204b4b0
	void DoKeepItemByWeaponSlot(int32_t KeepedSlotIndex, int32_t WeaponSlotIndex, bool bFromWeapon); // Function BravoHotelGame.PlayerInventoryComponent.DoKeepItemByWeaponSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x204b3b0
	void DoKeepItemByPickUp(int32_t KeepedSlotIndex, struct ABravoHotelPickup* NewPickup); // Function BravoHotelGame.PlayerInventoryComponent.DoKeepItemByPickUp // (Final|Native|Public|BlueprintCallable) // @ game+0x204b2f0
	void DoEquipWearableInStore(struct FInventoryItemInfo& WearableItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.DoEquipWearableInStore // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204b200
	void DoEquipWearable(struct FInventoryItemInfo& WearableItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.DoEquipWearable // (Final|Native|Protected|HasOutParms|BlueprintCallable) // @ game+0x204b110
	void DoEquipWeaponAttachmentFromBackpack(int32_t WeaponSlotIndex, int32_t& BackpackItemIndex); // Function BravoHotelGame.PlayerInventoryComponent.DoEquipWeaponAttachmentFromBackpack // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204b040
	void DoEquipWeaponAttachmentByInfo(int32_t WeaponSlotIndex, struct FInventoryItemInfo& NewAttachmentItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.DoEquipWeaponAttachmentByInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204af10
	void DoEquipWeaponAttachmentByDropBox(struct ABravoHotelDropBoxActor* DropBoxActor, int32_t WeaponSlotIndex, struct FInventoryItemInfo& NewAttachmentItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.DoEquipWeaponAttachmentByDropBox // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204ad90
	void DoEquipWeaponAttachment(int32_t WeaponSlotIndex, struct ABravoHotelPickup* NewAttachmentItem); // Function BravoHotelGame.PlayerInventoryComponent.DoEquipWeaponAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x204acd0
	void DoDropWeaponAttachmentByInfo(int32_t WeaponSlotIndex, struct FInventoryItemInfo& AttachmentInfo); // Function BravoHotelGame.PlayerInventoryComponent.DoDropWeaponAttachmentByInfo // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x204aba0
	void DoDropWeaponAttachment(int32_t WeaponSlotIndex, enum class EWeaponAttachmentType AttachmentType); // Function BravoHotelGame.PlayerInventoryComponent.DoDropWeaponAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x204aae0
	void DoDropWeapon(int32_t WeaponSlotIndex, bool bForceDropWorld); // Function BravoHotelGame.PlayerInventoryComponent.DoDropWeapon // (Final|Native|Public|BlueprintCallable) // @ game+0x204aa20
	void DoDropMaterialItem(int32_t MaterialSlotIndex, int32_t Quantity); // Function BravoHotelGame.PlayerInventoryComponent.DoDropMaterialItem // (Final|Native|Public|BlueprintCallable) // @ game+0x204a960
	void DoDropAllWeapons(); // Function BravoHotelGame.PlayerInventoryComponent.DoDropAllWeapons // (Final|Native|Public|BlueprintCallable) // @ game+0x204a940
	bool DoDisArm(bool bPlayUnequipAnimation, bool bSaveLastSlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.DoDisArm // (Final|Native|Public|BlueprintCallable) // @ game+0x204a860
	void DoCombineItemRecipe(struct FName RecipeKey); // Function BravoHotelGame.PlayerInventoryComponent.DoCombineItemRecipe // (Final|Native|Public|BlueprintCallable) // @ game+0x204a7e0
	bool DoChangeWeapon(int32_t WeaponSlotIndex, struct TArray<enum class EWeaponType> AllowedWeaponTypes, bool bPlayUnequipAnimaion); // Function BravoHotelGame.PlayerInventoryComponent.DoChangeWeapon // (Final|Native|Public) // @ game+0x204a680
	void ClientPushWeaponSlotByBuff(int32_t SlotIndex); // Function BravoHotelGame.PlayerInventoryComponent.ClientPushWeaponSlotByBuff // (Net|NetReliableNative|Event|Public|NetClient) // @ game+0x204a5f0
	void ClientCombineItemRecipe(struct TArray<struct FCombineSourceItem> InSourceItems, struct FInventoryItemInfo InResultItem); // Function BravoHotelGame.PlayerInventoryComponent.ClientCombineItemRecipe // (Net|NetReliableNative|Event|Public|NetClient|NetValidate) // @ game+0x204a470
	bool CanEquipWeapon(struct FInventoryItemDetailInfo& DetailItemInfo); // Function BravoHotelGame.PlayerInventoryComponent.CanEquipWeapon // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x204a3a0
	void AddLockWeaponSlot(int32_t WeaponSlotIndex, int32_t LockReason); // Function BravoHotelGame.PlayerInventoryComponent.AddLockWeaponSlot // (Final|Native|Public|BlueprintCallable) // @ game+0x204a2e0
};

// Class BravoHotelGame.RealisticProjectileComponent
// Size: 0x2f0 (Inherited: 0xf0)
struct URealisticProjectileComponent : UMovementComponent {
	struct TSoftObjectPtr<UDataTable> MaterialPropertiesTable; // 0xf0(0x28)
	struct FTrajectoryInitialConditions InitialConditions; // 0x118(0x4c)
	char pad_164[0x4]; // 0x164(0x04)
	struct TArray<struct FTrajectoryInitialConditions> InitialConditionHistory; // 0x168(0x10)
	int32_t TrajectoryNumber; // 0x178(0x04)
	float CurrentPenetrationDeceleration; // 0x17c(0x04)
	struct FRotator AngularVelocity; // 0x180(0x0c)
	char pad_18C[0x4]; // 0x18c(0x04)
	struct TArray<struct FHitResult> ObjectsPenetrated; // 0x190(0x10)
	struct TArray<struct AActor*> IgnoreActors; // 0x1a0(0x10)
	float TerminalVelocity; // 0x1b0(0x04)
	float CurrentGravity; // 0x1b4(0x04)
	char bUseEmbed : 1; // 0x1b8(0x01)
	char pad_1B8_1 : 7; // 0x1b8(0x01)
	char pad_1B9[0x3]; // 0x1b9(0x03)
	float EmbedDepth; // 0x1bc(0x04)
	float ImpulseScale; // 0x1c0(0x04)
	float InitialSpeed; // 0x1c4(0x04)
	float MaxSpeed; // 0x1c8(0x04)
	float PenetrationModifier; // 0x1cc(0x04)
	char bRotationFollowsVelocity : 1; // 0x1d0(0x01)
	char pad_1D0_1 : 7; // 0x1d0(0x01)
	char pad_1D1[0x3]; // 0x1d1(0x03)
	struct FRotator AngularVelocityMin; // 0x1d4(0x0c)
	struct FRotator AngularVelocityMax; // 0x1e0(0x0c)
	enum class EProjectileBehavior ProjectileBehavior; // 0x1ec(0x01)
	char pad_1ED[0x3]; // 0x1ed(0x03)
	char bInitialVelocityInLocalSpace : 1; // 0x1f0(0x01)
	char bForceSubStepping : 1; // 0x1f0(0x01)
	char bDrawDebugLine : 1; // 0x1f0(0x01)
	char bDebugLineColorFromVelocity : 1; // 0x1f0(0x01)
	char pad_1F0_4 : 4; // 0x1f0(0x01)
	char pad_1F1[0x3]; // 0x1f1(0x03)
	float DebugLineThickness; // 0x1f4(0x04)
	float DebugLineDuration; // 0x1f8(0x04)
	struct FColor DebugLineAuxiliaryColor; // 0x1fc(0x04)
	float Bounciness; // 0x200(0x04)
	char bUseFriction : 1; // 0x204(0x01)
	char pad_204_1 : 7; // 0x204(0x01)
	char pad_205[0x3]; // 0x205(0x03)
	float Friction; // 0x208(0x04)
	float FrictionVelocityLimit; // 0x20c(0x04)
	float BounceVelocityMin; // 0x210(0x04)
	char pad_214[0x4]; // 0x214(0x04)
	struct FMulticastInlineDelegate OnProjectileAnyHit; // 0x218(0x10)
	struct FMulticastInlineDelegate OnProjectileBounce; // 0x228(0x10)
	struct FMulticastInlineDelegate OnProjectilePenetrate; // 0x238(0x10)
	struct FMulticastInlineDelegate OnPenetrationExit; // 0x248(0x10)
	struct FMulticastInlineDelegate OnProjectileStop; // 0x258(0x10)
	struct FMulticastInlineDelegate OnProjectileEmbed; // 0x268(0x10)
	struct FMulticastInlineDelegate OnComponentBeginOverlap; // 0x278(0x10)
	struct FRandomStream RandStream; // 0x288(0x08)
	bool bIsFluidFriction; // 0x290(0x01)
	bool bInFluid; // 0x291(0x01)
	char pad_292[0x2]; // 0x292(0x02)
	float FluidFriction; // 0x294(0x04)
	float MaxSimulationTimeStep; // 0x298(0x04)
	char pad_29C[0x54]; // 0x29c(0x54)

	void StopSimulating(struct FHitResult& HitResult); // Function BravoHotelGame.RealisticProjectileComponent.StopSimulating // (Native|Public|HasOutParms|BlueprintCallable) // @ game+0x20505b0
	void SetVelocityInLocalSpace(struct FVector& NewVelocity); // Function BravoHotelGame.RealisticProjectileComponent.SetVelocityInLocalSpace // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2050520
	void OnProjectileStopDelegate__DelegateSignature(struct FHitResult& ImpactResult); // DelegateFunction BravoHotelGame.RealisticProjectileComponent.OnProjectileStopDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void OnProjectilePenetrateDelegate__DelegateSignature(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity); // DelegateFunction BravoHotelGame.RealisticProjectileComponent.OnProjectilePenetrateDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults) // @ game+0x23a3b60
	void OnProjectileEmbedDelegate__DelegateSignature(struct FHitResult& HitResult, float ImpactVelocity); // DelegateFunction BravoHotelGame.RealisticProjectileComponent.OnProjectileEmbedDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	void OnProjectileBounceDelegate__DelegateSignature(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity); // DelegateFunction BravoHotelGame.RealisticProjectileComponent.OnProjectileBounceDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults) // @ game+0x23a3b60
	void OnProjectileAnyHitDelegate__DelegateSignature(struct FHitResult& HitDetails, struct FVector& ImpactVelocity); // DelegateFunction BravoHotelGame.RealisticProjectileComponent.OnProjectileAnyHitDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults) // @ game+0x23a3b60
	void OnPenetrationExitDelegate__DelegateSignature(struct FHitResult& ExitHit, struct FVector& ExitVelocity); // DelegateFunction BravoHotelGame.RealisticProjectileComponent.OnPenetrationExitDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms|HasDefaults) // @ game+0x23a3b60
	void OnComponentBeginOverlapDelegate__DelegateSignature(struct FHitResult& HitResult, int32_t TrajectoryNum, float StartTime, float EndTime); // DelegateFunction BravoHotelGame.RealisticProjectileComponent.OnComponentBeginOverlapDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // @ game+0x23a3b60
	struct FVector LimitVelocity(struct FVector& NewVelocity); // Function BravoHotelGame.RealisticProjectileComponent.LimitVelocity // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2050470
	float DistPointToLine(struct FVector& l1, struct FVector& l2, struct FVector& P); // Function BravoHotelGame.RealisticProjectileComponent.DistPointToLine // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2050330
	struct FVector ComputeNewLocation(struct FTrajectoryInitialConditions& TIC, float DeltaTime); // Function BravoHotelGame.RealisticProjectileComponent.ComputeNewLocation // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x2050220
	void ApplyImpulse(struct FHitResult& Hit, struct FVector& ImpactVelocity); // Function BravoHotelGame.RealisticProjectileComponent.ApplyImpulse // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // @ game+0x20500f0
};

// Class BravoHotelGame.ScenarioGameMode
// Size: 0x598 (Inherited: 0x588)
struct AScenarioGameMode : ABravoHotelGameMode {
	struct UBravoHotelScenarioComponent* ScenarioComponent; // 0x588(0x08)
	struct FName DefaultCharacterDeck; // 0x590(0x08)
};

// Class BravoHotelGame.STypeBlueprintFunctionLibrary
// Size: 0x28 (Inherited: 0x28)
struct USTypeBlueprintFunctionLibrary : UBlueprintFunctionLibrary {

	struct FString Conv_STIntToString(struct FSTInt& Obj); // Function BravoHotelGame.STypeBlueprintFunctionLibrary.Conv_STIntToString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x20516c0
	int32_t Conv_STIntToInt(struct FSTInt& Obj); // Function BravoHotelGame.STypeBlueprintFunctionLibrary.Conv_STIntToInt // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x20515f0
	float Conv_STIntToFloat(struct FSTInt& Obj); // Function BravoHotelGame.STypeBlueprintFunctionLibrary.Conv_STIntToFloat // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x2051520
	struct FString Conv_STFloatToString(struct FSTFloat& Obj); // Function BravoHotelGame.STypeBlueprintFunctionLibrary.Conv_STFloatToString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x2051410
	float Conv_STFloatToFloat(struct FSTFloat& Obj); // Function BravoHotelGame.STypeBlueprintFunctionLibrary.Conv_STFloatToFloat // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // @ game+0x2051340
	struct FSTInt Conv_IntToSTInt(int32_t Value); // Function BravoHotelGame.STypeBlueprintFunctionLibrary.Conv_IntToSTInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x2051290
	struct FSTFloat Conv_FloatToSTFloat(float Value); // Function BravoHotelGame.STypeBlueprintFunctionLibrary.Conv_FloatToSTFloat // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // @ game+0x20511e0
};

// Class BravoHotelGame.SteamGetFriendsCallbackProxy
// Size: 0x70 (Inherited: 0x30)
struct USteamGetFriendsCallbackProxy : UOnlineBlueprintCallProxyBase {
	struct FMulticastInlineDelegate OnSuccess; // 0x30(0x10)
	struct FMulticastInlineDelegate OnFailure; // 0x40(0x10)
	char pad_50[0x20]; // 0x50(0x20)

	struct USteamGetFriendsCallbackProxy* RequestSteamFriendsList(struct UObject* WorldContextObject, struct APlayerController* PlayerController); // Function BravoHotelGame.SteamGetFriendsCallbackProxy.RequestSteamFriendsList // (Final|Native|Static|Public|BlueprintCallable) // @ game+0x2051980
};

// Class BravoHotelGame.StorageInventoryComponent
// Size: 0x2b0 (Inherited: 0x2b0)
struct UStorageInventoryComponent : UInventoryComponent {
};

// Class BravoHotelGame.TeamInfoUpdaterComponent
// Size: 0xf8 (Inherited: 0xb0)
struct UTeamInfoUpdaterComponent : UActorComponent {
	struct FMulticastInlineDelegate OnTeamPlayerIndexChanged; // 0xb0(0x10)
	struct FMulticastInlineDelegate OnWidgetUpdateDelegate; // 0xc0(0x10)
	int32_t TeamPlayerIndex; // 0xd0(0x04)
	char pad_D4[0x4]; // 0xd4(0x04)
	struct ABravoHotelPlayerState* OldTargetPlayerState; // 0xd8(0x08)
	char pad_E0[0x18]; // 0xe0(0x18)
};

// Class BravoHotelGame.TransportAircraftPawn
// Size: 0x6e0 (Inherited: 0x5f0)
struct ATransportAircraftPawn : ACharacter {
	float HealthPoint; // 0x5e8(0x04)
	float MaxHealthPoint; // 0x5ec(0x04)
	struct ABravoHotelDropBoxActor* DropBoxActorClass; // 0x5f0(0x08)
	float FlightSpeed; // 0x5f8(0x04)
	float HeightSpeed; // 0x5fc(0x04)
	float FlightHeight; // 0x600(0x04)
	float SpawnDistance; // 0x604(0x04)
	struct UParticleSystemComponent* DamagedEffectComponent; // 0x610(0x08)
	struct UBravoHotelAudioEmitterComponent* AudioComponent; // 0x618(0x08)
	struct TArray<float> DamagedLevelRatios; // 0x620(0x10)
	struct TArray<struct UParticleSystem*> DamagedEffects; // 0x630(0x10)
	struct TArray<struct UAkAudioEvent*> DamagedSounds; // 0x640(0x10)
	struct FName DamagedEffectSocketName; // 0x650(0x08)
	struct UParticleSystem* ExplosionEffect; // 0x658(0x08)
	struct UAkAudioEvent* ExplosionSound; // 0x660(0x08)
	struct FName ExplosionEffectSocketName; // 0x668(0x08)
	struct FAudioPlayingHandle FlyingSoundHandle; // 0x670(0x04)
	char pad_674[0x4c]; // 0x674(0x4c)
	struct TArray<float> DropDistances; // 0x6c0(0x10)
	struct TArray<struct ABravoHotelDropBoxActor*> DropBoxes; // 0x6d0(0x10)

	void OnRep_HealthPoint(float PreviousHealthPoint); // Function BravoHotelGame.TransportAircraftPawn.OnRep_HealthPoint // (Final|Native|Public) // @ game+0x2051ff0
	void OnDestroyTransport(); // Function BravoHotelGame.TransportAircraftPawn.OnDestroyTransport // (Event|Public|BlueprintEvent) // @ game+0x23a3b60
	void OnAudioEmitterRegistered(); // Function BravoHotelGame.TransportAircraftPawn.OnAudioEmitterRegistered // (Final|Native|Private) // @ game+0x2051fd0
};

// Class BravoHotelGame.AsyncStaticMeshComponent
// Size: 0x570 (Inherited: 0x540)
struct UAsyncStaticMeshComponent : UStaticMeshComponent {
	struct TSoftObjectPtr<UStaticMesh> SoftMeshPtr; // 0x538(0x28)
	char pad_568[0x8]; // 0x568(0x08)

	void OnCompleteAsyncLoad(); // Function BravoHotelGame.AsyncStaticMeshComponent.OnCompleteAsyncLoad // (Final|Native|Protected) // @ game+0x2053300
	bool IsPendingSetStaticMesh(); // Function BravoHotelGame.AsyncStaticMeshComponent.IsPendingSetStaticMesh // (Final|Native|Public) // @ game+0x20532b0
};

// Class BravoHotelGame.AsyncSkeletalMeshComponent
// Size: 0xba0 (Inherited: 0xb70)
struct UAsyncSkeletalMeshComponent : USkeletalMeshComponent {
	struct TSoftObjectPtr<USkeletalMesh> SoftMeshPtr; // 0xb70(0x28)
	char pad_B98[0x8]; // 0xb98(0x08)

	void OnCompleteAsyncLoad(); // Function BravoHotelGame.AsyncSkeletalMeshComponent.OnCompleteAsyncLoad // (Final|Native|Protected) // @ game+0x20532e0
	bool IsPendingSetSkeletalMesh(); // Function BravoHotelGame.AsyncSkeletalMeshComponent.IsPendingSetSkeletalMesh // (Final|Native|Public) // @ game+0x2053280
};

// Class BravoHotelGame.WeaponAttachmentComponent
// Size: 0x340 (Inherited: 0xb0)
struct UWeaponAttachmentComponent : UActorComponent {
	struct ABravoHotelRangedWeapon* OwningWeapon; // 0xb0(0x08)
	struct UAsyncStaticMeshComponent* FrontSight; // 0xb8(0x08)
	struct UAsyncStaticMeshComponent* Rail; // 0xc0(0x08)
	struct UAsyncStaticMeshComponent* grip; // 0xc8(0x08)
	struct UAsyncStaticMeshComponent* magazine; // 0xd0(0x08)
	struct UAsyncStaticMeshComponent* ButtStock; // 0xd8(0x08)
	struct UAsyncStaticMeshComponent* Tactical; // 0xe0(0x08)
	struct UAsyncSkeletalMeshComponent* muzzledevice; // 0xe8(0x08)
	struct UAsyncSkeletalMeshComponent* Barrel; // 0xf0(0x08)
	char pad_F8[0x160]; // 0xf8(0x160)
	bool bIsInitialized; // 0x258(0x01)
	enum class EWeaponAttachmentGrip GripType; // 0x259(0x01)
	enum class EWeaponAttachmentItem MagazineType; // 0x25a(0x01)
	enum class EWeaponAttachmentItem StockType; // 0x25b(0x01)
	enum class EWeaponAttachmentItem MuzzleType; // 0x25c(0x01)
	enum class EWeaponAttachmentItem BarrelType; // 0x25d(0x01)
	char pad_25E[0x42]; // 0x25e(0x42)
	struct TMap<enum class EWeaponAttachmentItem, struct ABravoHotelSightAttachment*> FPSK_SightAttachmentList; // 0x2a0(0x50)
	struct TMap<enum class EWeaponAttachmentItem, struct ABravoHotelSightAttachment*> FPSK_SightClassList; // 0x2f0(0x50)

	void UnequipAttachment_Multicast(enum class EWeaponAttachmentType AttachmentType); // Function BravoHotelGame.WeaponAttachmentComponent.UnequipAttachment_Multicast // (Net|NetReliableNative|Event|NetMulticast|Public) // @ game+0x2053560
	void UnequipAttachment(enum class EWeaponAttachmentType& AttachmentType); // Function BravoHotelGame.WeaponAttachmentComponent.UnequipAttachment // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x20534d0
	void SetSightScale(struct FVector& Scale); // Function BravoHotelGame.WeaponAttachmentComponent.SetSightScale // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // @ game+0x2053440
	void SetScalarParameterOnAttachments(struct FName& ParameterNamem, float ParameterValue, bool bIncludeWeaponSight); // Function BravoHotelGame.WeaponAttachmentComponent.SetScalarParameterOnAttachments // (Final|Native|Public|HasOutParms) // @ game+0x2053320
	bool IsHighMagnificationSight(); // Function BravoHotelGame.WeaponAttachmentComponent.IsHighMagnificationSight // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2053250
	void InitAttachment(); // Function BravoHotelGame.WeaponAttachmentComponent.InitAttachment // (Final|Native|Public|BlueprintCallable) // @ game+0x2053230
	void GetStaticMeshAttachmentComponents(struct TArray<struct UStaticMeshComponent*>& inArray, bool bIncludeWeaponSight); // Function BravoHotelGame.WeaponAttachmentComponent.GetStaticMeshAttachmentComponents // (Final|Native|Public|HasOutParms) // @ game+0x2053130
	void GetSkeletalMeshAttachmentComponents(struct TArray<struct USkeletalMeshComponent*>& inArray); // Function BravoHotelGame.WeaponAttachmentComponent.GetSkeletalMeshAttachmentComponents // (Final|Native|Public|HasOutParms) // @ game+0x2053080
	struct FVector GetSightScale(); // Function BravoHotelGame.WeaponAttachmentComponent.GetSightScale // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x2053040
	float GetSightFOV(); // Function BravoHotelGame.WeaponAttachmentComponent.GetSightFOV // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2053010
	struct FVector GetRelativeFireSocketLocation(struct FName& FireSocketName); // Function BravoHotelGame.WeaponAttachmentComponent.GetRelativeFireSocketLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x2052f60
	struct ABravoHotelSightAttachment* GetFPSKWeaponSight(enum class EWeaponAttachmentItem AttachmentType); // Function BravoHotelGame.WeaponAttachmentComponent.GetFPSKWeaponSight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2052d70
	struct FRotator GetFireSocketRotation(struct FName& FireSocketName); // Function BravoHotelGame.WeaponAttachmentComponent.GetFireSocketRotation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x2052eb0
	struct FVector GetFireSocketLocation(struct FName& FireSocketName); // Function BravoHotelGame.WeaponAttachmentComponent.GetFireSocketLocation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // @ game+0x2052e00
	float GetDefaultSightFOV(); // Function BravoHotelGame.WeaponAttachmentComponent.GetDefaultSightFOV // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2052d40
	struct ABravoHotelSightAttachment* GetCurrentWeaponSight(); // Function BravoHotelGame.WeaponAttachmentComponent.GetCurrentWeaponSight // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2052d10
	enum class EWeaponAttachmentItem GetCurrentSightType(); // Function BravoHotelGame.WeaponAttachmentComponent.GetCurrentSightType // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // @ game+0x2052ce0
	struct USkeletalMeshComponent* GetCurrentMuzzleComponent(); // Function BravoHotelGame.WeaponAttachmentComponent.GetCurrentMuzzleComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure) // @ game+0x2052cb0
	void GetAllAttachmentComponents(struct TArray<struct UMeshComponent*>& inArray, bool bIncludeWeaponSight); // Function BravoHotelGame.WeaponAttachmentComponent.GetAllAttachmentComponents // (Final|Native|Public|HasOutParms) // @ game+0x2052bb0
	void EquipAttachment(struct FInventoryItemDetailInfo& ItemDetailInfo); // Function BravoHotelGame.WeaponAttachmentComponent.EquipAttachment // (Final|Native|Public|HasOutParms|BlueprintCallable) // @ game+0x2052ae0
};

// Class BravoHotelGame.WeaponReplicatedComponent
// Size: 0x180 (Inherited: 0x170)
struct UWeaponReplicatedComponent : UEquippableComponent {
	struct TArray<uint16_t> AttachmentIndices; // 0x170(0x10)

	void OnRep_ChangeAttachments(); // Function BravoHotelGame.WeaponReplicatedComponent.OnRep_ChangeAttachments // (Final|Native|Private) // @ game+0x11f82b0
};

