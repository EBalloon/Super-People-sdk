// NavAreaBase Engine.NavAreaBase
 struct UNavAreaBase : Object {
	Unknown UberGraphFrame; // 0x368(0x08)
	char bUseComplexAsSimpleCollision; // 0x4f0(0x01)
	char bUseAsyncCooking; // 0x4f1(0x01)
	Unknown ProcMeshBodySetup; // 0x4f8(0x08)
	Unknown ProcMeshSections; // 0x500(0x10)
	Unknown CollisionConvexElems; // 0x510(0x10)
	Unknown LocalBounds; // 0x520(0x1c)
	Unknown AsyncBodySetupQueue; // 0x540(0x10)
	Unknown RenderingLogSeverity; // 0x28(0x01)
	char ShowWarningsOnScreen; // 0x29(0x01)
	struct FString DeveloperOptions; // 0x30(0x10)
	Unknown Texture; // 0x70(0x08)
	Unknown GeneratedMaterials; // 0x30(0x10)
	Unknown GeneratedMeshes; // 0x40(0x10)
	Unknown GeneratedTextures; // 0x50(0x10)
	Unknown ParameterDecorations; // 0xe8(0x10)
	Unknown TextureReuseCache; // 0x108(0x50)
	Unknown ReferencedMaterials; // 0x320(0x10)
	Unknown PhysicsAssetsToMerge; // 0x3d0(0x10)
	Unknown Materials; // 0x28(0x50)
	Unknown Textures; // 0x78(0x50)
	Unknown ReferenceSkeletalMesh; // 0x28(0x08)
	Unknown ReferenceStaticMesh; // 0x30(0x08)
	Unknown Relevancy; // 0x38(0x01)
	char bDisableTextureLayoutManagement; // 0x39(0x01)
	Unknown ReferencedMaterials; // 0x40(0x10)
	Unknown ImageProperties; // 0x50(0x10)
	Unknown GroupNodeMap; // 0x60(0x50)
	Unknown ContributingMorphTargets; // 0xb0(0x10)
	Unknown MorphTargetReconstructionInfo; // 0xc0(0x10)
	Unknown VersionId; // 0xd0(0x10)
	Unknown ParameterProperties; // 0xe0(0x10)
	Unknown ParameterUIDataMap; // 0x140(0x50)
	Unknown StateUIDataMap; // 0x190(0x50)
	Unknown PhysicsAssetsMap; // 0x1e0(0x50)
	Unknown MaskOutCache; // 0x230(0x28)
	char bIsChildObject; // 0x258(0x01)
	Unknown MaskOutCache_HardRef; // 0x260(0x08)
	Unknown CustomizableObject; // 0x28(0x08)
	Unknown SkeletalMesh; // 0x30(0x08)
	Unknown BoolParameters; // 0x38(0x10)
	Unknown IntParameters; // 0x48(0x10)
	Unknown FloatParameters; // 0x58(0x10)
	Unknown TextureParameters; // 0x68(0x10)
	Unknown VectorParameters; // 0x78(0x10)
	Unknown ProjectorParameters; // 0x88(0x10)
	char bBuildParameterDecorations; // 0x98(0x01)
	struct FMulticastInlineDelegate UpdatedDelegate; // 0xa0(0x10)
	struct FString SkeletalMeshStatus; // 0x110(0x10)
	Unknown MaterialTags; // 0x140(0x10)
	Unknown PrivateData; // 0x1d0(0x08)
	Unknown Textures; // 0x28(0x10)
	Unknown PendingReleaseSkeletalMesh; // 0x28(0x10)
	Unknown PreviewExternalImageProvider; // 0x48(0x08)
	Unknown ProtectedCachedTextures; // 0x150(0x10)
	Unknown DefaultInstanceLODManagement; // 0x170(0x08)
	Unknown CurrentInstanceLODManagement; // 0x178(0x08)
	float SkippedLastRenderTime; // 0x23c(0x04)
	Unknown CustomizableObjectInstance; // 0x240(0x08)
	Unknown CustomizableSkeletalComponent; // 0x398(0x08)
	Unknown DataSources; // 0x28(0x50)
	Unknown Components; // 0x28(0x10)
	Unknown UberGraphFrame; // 0x298(0x08)
	Unknown 15XSensitivity; // 0x2a0(0x08)
	Unknown 2XSensitivity; // 0x2a8(0x08)
	Unknown 4XSensitivity; // 0x2b0(0x08)
	Unknown 6XSensitivity; // 0x2b8(0x08)
	Unknown 8XSensitivity; // 0x2c0(0x08)
	Unknown ADSSensitivity; // 0x2c8(0x08)
	Unknown GeneralSensitivity; // 0x2d0(0x08)
	Unknown ReverseLeftAndRight; // 0x2d8(0x08)
	Unknown ReverseUpAndDown; // 0x2e0(0x08)
	Unknown ScrollBox_55; // 0x2e8(0x08)
	Unknown TargetingSensitivity; // 0x2f0(0x08)
	Unknown ToggleADS; // 0x2f8(0x08)
	Unknown ToggleAOS; // 0x300(0x08)
	Unknown ToggleCrouch; // 0x308(0x08)
	Unknown ToggleExLean; // 0x310(0x08)
	Unknown ToggleFreeLook; // 0x318(0x08)
	Unknown ToggleSprint; // 0x320(0x08)
	Unknown ToggleSteadyAim; // 0x328(0x08)
	Unknown ToggleWalk; // 0x330(0x08)
	Unknown TotalSensitivity; // 0x338(0x08)
	Unknown UsingDetailSensitivity; // 0x340(0x08)
	Unknown VehicleDriverSensitivity; // 0x348(0x08)
	Unknown VerticalBox_1; // 0x350(0x08)
	Unknown VerticlaModifier; // 0x358(0x08)
	Unknown ; // 0x360(0x08)
	Unknown ; // 0x368(0x08)
	Unknown ; // 0x370(0x08)
	Unknown ScrollBarTimer; // 0x378(0x08)
	char EnableTransport; // 0x28(0x01)
	struct FString ListenEndpoint; // 0x30(0x10)
	Unknown ConnectToEndpoints; // 0x40(0x10)
	int32_t ConnectionRetryDelay; // 0x50(0x04)
	char bStopServiceWhenAppDeactivates; // 0x54(0x01)
	Unknown PrimaryComponentTick; // 0x30(0x30)
	Unknown ComponentTags; // 0x60(0x10)
	Unknown AssetUserData; // 0x70(0x10)
	int32_t UCSSerializationIndex; // 0x84(0x04)
	char bNetAddressable; // 0x88(0x01)
	char bReplicates; // 0x88(0x01)
	char bAutoActivate; // 0x89(0x01)
	char bIsActive; // 0x8a(0x01)
	char bEditableWhenInherited; // 0x8a(0x01)
	char bCanEverAffectNavigation; // 0x8a(0x01)
	char bIsEditorOnly; // 0x8a(0x01)
	Unknown CreationMethod; // 0x8c(0x01)
	struct FMulticastSparseDelegate OnComponentActivated; // 0x8d(0x01)
	struct FMulticastSparseDelegate OnComponentDeactivated; // 0x8e(0x01)
	Unknown UCSModifiedProperties; // 0x90(0x10)
	Unknown PhysicsVolume; // 0x144(0x08)
	Unknown AttachParent; // 0x1d0(0x08)
	struct FName AttachSocketName; // 0x1dc(0x08)
	Unknown AttachChildren; // 0xb8(0x10)
	Unknown ClientAttachedChildren; // 0x190(0x10)
	Unknown RelativeLocation; // 0x224(0x0c)
	Unknown RelativeRotation; // 0x1b4(0x0c)
	Unknown RelativeScale3D; // 0x1c4(0x0c)
	Unknown ComponentVelocity; // 0x164(0x0c)
	char bComponentToWorldUpdated; // 0x140(0x01)
	char bAbsoluteLocation; // 0x220(0x01)
	char bAbsoluteRotation; // 0x1d8(0x01)
	char bAbsoluteScale; // 0x188(0x01)
	char bVisible; // 0xc8(0x01)
	char bShouldBeAttached; // 0x220(0x01)
	char bShouldSnapLocationWhenAttached; // 0x1b0(0x01)
	char bShouldSnapRotationWhenAttached; // 0x188(0x01)
	char bShouldUpdatePhysicsVolume; // 0x1a0(0x01)
	char bHiddenInGame; // 0x220(0x01)
	char bBoundsChangeTriggersStreamingDataRebuild; // 0xc8(0x01)
	char bUseAttachParentBound; // 0x1d8(0x01)
	Unknown Mobility; // 0x221(0x01)
	Unknown DetailMode; // 0x160(0x01)
	struct FMulticastSparseDelegate PhysicsVolumeChangedDelegate; // 0xb0(0x01)
	Unknown ReplaySamplable; // 0x28(0x01)
	Unknown ReplaySampleClass; // 0x30(0x08)
	float ReplaySamplingFrequency; // 0x38(0x04)
	uint32_t ClientReplaySamplingGUID; // 0x3c(0x04)
	char bReplayLevelAttached; // 0x44(0x01)
	Unknown ReplaySamplesForPlayback; // 0x68(0x10)
	Unknown SelfActor; // 0x88(0x08)
	Unknown PrimaryActorTick; // 0x1d8(0x30)
	char bNetTemporary; // 0x284(0x01)
	char bNetStartup; // 0x248(0x01)
	char bOnlyRelevantToOwner; // 0x1c4(0x01)
	char bAlwaysRelevant; // 0xa1(0x01)
	char bReplicateMovement; // 0x260(0x01)
	char bHidden; // 0x222(0x01)
	char bTearOff; // 0x284(0x01)
	char bExchangedRoles; // 0x120(0x01)
	char bNetLoadOnClient; // 0x138(0x01)
	char bNetUseOwnerRelevancy; // 0xe8(0x01)
	char bRelevantForNetworkReplays; // 0x170(0x01)
	char bRelevantForLevelBounds; // 0x138(0x01)
	char bReplayRewindable; // 0x9f(0x01)
	char bAllowTickBeforeBeginPlay; // 0x1c4(0x01)
	char bAutoDestroyWhenFinished; // 0x1c4(0x01)
	char bCanBeDamaged; // 0x1a0(0x01)
	char bBlockInput; // 0x303(0x01)
	char bCollideWhenPlacing; // 0x301(0x01)
	char bFindCameraComponentWhenViewTarget; // 0x251(0x01)
	char bGenerateOverlapEventsDuringLevelStreaming; // 0x30e(0x01)
	char bIgnoresOriginShifting; // 0x155(0x01)
	char bEnableAutoLODGeneration; // 0x251(0x01)
	char bIsEditorOnlyActor; // 0x120(0x01)
	char bActorSeamlessTraveled; // 0xea(0x01)
	char bReplicates; // 0x9d(0x01)
	char bCanBeInCluster; // 0x90(0x01)
	char bAllowReceiveTickEventOnDedicatedServer; // 0x198(0x01)
	char bActorEnableCollision; // 0x1b8(0x01)
	char bActorIsBeingDestroyed; // 0x30e(0x01)
	Unknown UpdateOverlapsMethodDuringLevelStreaming; // 0x154(0x01)
	Unknown DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0xa3(0x01)
	Unknown RemoteRole; // 0x279(0x01)
	Unknown ReplicatedMovement; // 0xec(0x34)
	float InitialLifeSpan; // 0x2e0(0x04)
	float CustomTimeDilation; // 0x308(0x04)
	Unknown AttachmentReplication; // 0xa8(0x40)
	Unknown Owner; // 0x178(0x08)
	struct FName NetDriverName; // 0x94(0x08)
	Unknown Role; // 0x9e(0x01)
	Unknown NetDormancy; // 0x238(0x01)
	Unknown SpawnCollisionHandlingMethod; // 0x304(0x01)
	Unknown AutoReceiveInput; // 0x302(0x01)
	int32_t InputPriority; // 0x150(0x04)
	Unknown InputComponent; // 0x2f8(0x08)
	float NetCullDistanceSquared; // 0x280(0x04)
	int32_t NetTag; // 0x24c(0x04)
	float NetUpdateFrequency; // 0x27c(0x04)
	float MinNetUpdateFrequency; // 0x288(0x04)
	float NetPriority; // 0x21c(0x04)
	Unknown Instigator; // 0x258(0x08)
	Unknown Children; // 0x268(0x10)
	Unknown RootComponent; // 0x158(0x08)
	Unknown ControllingMatineeActors; // 0x208(0x10)
	Unknown Layers; // 0x188(0x10)
	Unknown ParentComponent; // 0x1bc(0x08)
	char bEnableRerunConstructionScript; // 0x30c(0x01)
	Unknown Tags; // 0x140(0x10)
	struct FMulticastSparseDelegate OnTakeAnyDamage; // 0x218(0x01)
	struct FMulticastSparseDelegate OnTakePointDamage; // 0x27a(0x01)
	struct FMulticastSparseDelegate OnTakeRadialDamage; // 0x9c(0x01)
	struct FMulticastSparseDelegate OnActorBeginOverlap; // 0x27b(0x01)
	struct FMulticastSparseDelegate OnActorEndOverlap; // 0xa0(0x01)
	struct FMulticastSparseDelegate OnBeginCursorOver; // 0x221(0x01)
	struct FMulticastSparseDelegate OnEndCursorOver; // 0xe9(0x01)
	struct FMulticastSparseDelegate OnClicked; // 0x278(0x01)
	struct FMulticastSparseDelegate OnReleased; // 0x2e4(0x01)
	struct FMulticastSparseDelegate OnInputTouchBegin; // 0x300(0x01)
	struct FMulticastSparseDelegate OnInputTouchEnd; // 0x285(0x01)
	struct FMulticastSparseDelegate OnInputTouchEnter; // 0xa2(0x01)
	struct FMulticastSparseDelegate OnInputTouchLeave; // 0x250(0x01)
	struct FMulticastSparseDelegate OnActorHit; // 0x180(0x01)
	struct FMulticastSparseDelegate OnDestroyed; // 0x220(0x01)
	struct FMulticastSparseDelegate OnEndPlay; // 0x30d(0x01)
	Unknown InstanceComponents; // 0x128(0x10)
	Unknown BlueprintCreatedComponents; // 0x1a8(0x10)
	Unknown LoadedObjects; // 0x1c8(0x10)
	char bShouldDoAnimNotifies; // 0x318(0x01)
	char bWakeOnLevelStart; // 0x318(0x01)
	Unknown SkeletalMeshComponent; // 0x320(0x08)
	Unknown ReplicatedMesh; // 0x328(0x08)
	Unknown ReplicatedPhysAsset; // 0x330(0x08)
	Unknown ReplicatedMaterial0; // 0x338(0x08)
	Unknown ReplicatedMaterial1; // 0x340(0x08)
	float MinDrawDistance; // 0x240(0x04)
	float LDMaxDrawDistance; // 0x244(0x04)
	float CachedMaxDrawDistance; // 0x248(0x04)
	Unknown DepthPriorityGroup; // 0x24c(0x01)
	Unknown ViewOwnerDepthPriorityGroup; // 0x24d(0x01)
	Unknown IndirectLightingCacheQuality; // 0x24e(0x01)
	Unknown LightmapType; // 0x24f(0x01)
	char bUseMaxLODAsImposter; // 0x250(0x01)
	char bBatchImpostersAsInstances; // 0x250(0x01)
	char bNeverDistanceCull; // 0x250(0x01)
	char bAlwaysCreatePhysicsState; // 0x250(0x01)
	char bGenerateOverlapEvents; // 0x251(0x01)
	char bMultiBodyOverlap; // 0x251(0x01)
	char bTraceComplexOnMove; // 0x251(0x01)
	char bReturnMaterialOnMove; // 0x251(0x01)
	char bUseViewOwnerDepthPriorityGroup; // 0x251(0x01)
	char bAllowCullDistanceVolume; // 0x251(0x01)
	char bHasMotionBlurVelocityMeshes; // 0x251(0x01)
	char bVisibleInReflectionCaptures; // 0x251(0x01)
	char bVisibleInRayTracing; // 0x252(0x01)
	char bRenderInMainPass; // 0x252(0x01)
	char bRenderInDepthPass; // 0x252(0x01)
	char bReceivesDecals; // 0x252(0x01)
	char bOwnerNoSee; // 0x252(0x01)
	char bOnlyOwnerSee; // 0x252(0x01)
	char bIgnoreNearClippingForOcclusion; // 0x252(0x01)
	char bTreatAsBackgroundForOcclusion; // 0x252(0x01)
	char bUseAsOccluder; // 0x253(0x01)
	char bSelectable; // 0x253(0x01)
	char bForceMipStreaming; // 0x253(0x01)
	char bHasPerInstanceHitProxies; // 0x253(0x01)
	char CastShadow; // 0x253(0x01)
	char bAffectDynamicIndirectLighting; // 0x253(0x01)
	char bAffectDistanceFieldLighting; // 0x253(0x01)
	char bCastDynamicShadow; // 0x253(0x01)
	char bCastStaticShadow; // 0x254(0x01)
	char bCastDirectionalShadow; // 0x254(0x01)
	char bCastVolumetricTranslucentShadow; // 0x254(0x01)
	char bSelfShadowOnly; // 0x254(0x01)
	char bCastFarShadow; // 0x254(0x01)
	char bCastInsetShadow; // 0x254(0x01)
	char bCastCinematicShadow; // 0x254(0x01)
	char bCastHiddenShadow; // 0x254(0x01)
	char bCastShadowAsTwoSided; // 0x255(0x01)
	char bLightAsIfStatic; // 0x255(0x01)
	char bLightAttachmentsAsGroup; // 0x255(0x01)
	char bExcludeFromLightAttachmentGroup; // 0x255(0x01)
	char bReceiveMobileCSMShadows; // 0x255(0x01)
	char bSingleSampleShadowFromStationaryLights; // 0x255(0x01)
	char bIgnoreRadialImpulse; // 0x255(0x01)
	char bIgnoreRadialForce; // 0x255(0x01)
	char bApplyImpulseOnDamage; // 0x256(0x01)
	char bReplicatePhysicsToAutonomousProxy; // 0x256(0x01)
	char bFillCollisionUnderneathForNavmesh; // 0x256(0x01)
	char AlwaysLoadOnClient; // 0x256(0x01)
	char AlwaysLoadOnServer; // 0x256(0x01)
	char bUseEditorCompositing; // 0x256(0x01)
	char bRenderCustomDepth; // 0x256(0x01)
	char bHasNoStreamableTextures; // 0x257(0x01)
	Unknown bHasCustomNavigableGeometry; // 0x258(0x01)
	Unknown CanCharacterStepUpOn; // 0x25a(0x01)
	Unknown LightingChannels; // 0x25b(0x01)
	Unknown CustomDepthStencilWriteMask; // 0x25c(0x01)
	int32_t CustomDepthStencilValue; // 0x260(0x04)
	Unknown CustomPrimitiveData; // 0x268(0x10)
	Unknown CustomPrimitiveDataInternal; // 0x278(0x10)
	int32_t TranslucencySortPriority; // 0x288(0x04)
	int32_t VisibilityId; // 0x28c(0x04)
	Unknown RuntimeVirtualTextures; // 0x290(0x10)
	int8_t VirtualTextureLodBias; // 0x2a0(0x01)
	int8_t VirtualTextureCullMips; // 0x2a1(0x01)
	int8_t VirtualTextureMinCoverage; // 0x2a2(0x01)
	Unknown VirtualTextureRenderPassType; // 0x2a3(0x01)
	float LpvBiasMultiplier; // 0x2a8(0x04)
	float BoundsScale; // 0x2b4(0x04)
	Unknown MoveIgnoreActors; // 0x2c8(0x10)
	Unknown MoveIgnoreComponents; // 0x2d8(0x10)
	Unknown BodyInstance; // 0x2f8(0x190)
	struct FMulticastSparseDelegate OnComponentHit; // 0x488(0x01)
	struct FMulticastSparseDelegate OnComponentBeginOverlap; // 0x489(0x01)
	struct FMulticastSparseDelegate OnComponentEndOverlap; // 0x48a(0x01)
	struct FMulticastSparseDelegate OnComponentWake; // 0x48b(0x01)
	struct FMulticastSparseDelegate OnComponentSleep; // 0x48c(0x01)
	struct FMulticastSparseDelegate OnBeginCursorOver; // 0x48e(0x01)
	struct FMulticastSparseDelegate OnEndCursorOver; // 0x48f(0x01)
	struct FMulticastSparseDelegate OnClicked; // 0x490(0x01)
	struct FMulticastSparseDelegate OnReleased; // 0x491(0x01)
	struct FMulticastSparseDelegate OnInputTouchBegin; // 0x492(0x01)
	struct FMulticastSparseDelegate OnInputTouchEnd; // 0x493(0x01)
	struct FMulticastSparseDelegate OnInputTouchEnter; // 0x494(0x01)
	struct FMulticastSparseDelegate OnInputTouchLeave; // 0x495(0x01)
	Unknown LODParentPrimitive; // 0x4b0(0x08)
	float MipStreamingScale; // 0x4b8(0x04)
	Unknown OverrideMaterials; // 0x4c0(0x10)
	char bEnableMaterialParameterCaching; // 0x4e0(0x01)
	Unknown SkeletalMesh; // 0x4e8(0x08)
	Unknown MasterPoseComponent; // 0x4f0(0x08)
	Unknown SkinCacheUsage; // 0x4f8(0x10)
	Unknown PhysicsAssetOverride; // 0x600(0x08)
	int32_t ForcedLodModel; // 0x608(0x04)
	int32_t MinLodModel; // 0x60c(0x04)
	float StreamingDistanceMultiplier; // 0x618(0x04)
	Unknown LODInfo; // 0x628(0x10)
	Unknown VisibilityBasedAnimTickOption; // 0x65c(0x01)
	char bOverrideMinLod; // 0x65e(0x01)
	char bUseBoundsFromMasterPoseComponent; // 0x65e(0x01)
	char bForceWireframe; // 0x65e(0x01)
	char bDisplayBones; // 0x65e(0x01)
	char bDisableMorphTarget; // 0x65e(0x01)
	char bHideSkin; // 0x65e(0x01)
	char bPerBoneMotionBlur; // 0x65f(0x01)
	char bComponentUseFixedSkelBounds; // 0x65f(0x01)
	char bConsiderAllBodiesForBounds; // 0x65f(0x01)
	char bSyncAttachParentLOD; // 0x65f(0x01)
	char bCanHighlightSelectedSections; // 0x65f(0x01)
	char bRecentlyRendered; // 0x65f(0x01)
	char bCastCapsuleDirectShadow; // 0x65f(0x01)
	char bCastCapsuleIndirectShadow; // 0x65f(0x01)
	char bCPUSkinning; // 0x660(0x01)
	char bEnableUpdateRateOptimizations; // 0x660(0x01)
	char bDisplayDebugUpdateRateOptimizations; // 0x660(0x01)
	char bRenderStatic; // 0x660(0x01)
	char bIgnoreMasterPoseComponentLOD; // 0x660(0x01)
	char bCachedLocalBoundsUpToDate; // 0x660(0x01)
	char bForceMeshObjectUpdate; // 0x661(0x01)
	float CapsuleIndirectShadowMinVisibility; // 0x664(0x04)
	Unknown CachedWorldSpaceBounds; // 0x678(0x1c)
	Unknown CachedWorldToLocalTransform; // 0x6a0(0x40)
	double ForceMipLevelsToBeResidentTimestamp; // 0x28(0x08)
	int32_t NumCinematicMipLevels; // 0x30(0x04)
	int32_t StreamingIndex; // 0x34(0x04)
	int32_t CachedCombinedLODBias; // 0x38(0x04)
	Unknown CachedNumResidentLODs; // 0x3c(0x01)
	char bCachedReadyForStreaming; // 0x3d(0x01)
	char NeverStream; // 0x3d(0x01)
	char bGlobalForceMipLevelsToBeResident; // 0x3d(0x01)
	char bIsStreamable; // 0x3d(0x01)
	char bHasStreamingUpdatePending; // 0x3d(0x01)
	char bForceMiplevelsToBeResident; // 0x3d(0x01)
	char bIgnoreStreamingMipBias; // 0x3d(0x01)
	char bUseCinematicMipLevels; // 0x3d(0x01)
	Unknown Skeleton; // 0x60(0x08)
	Unknown ImportedBounds; // 0x68(0x1c)
	Unknown ExtendedBounds; // 0x84(0x1c)
	Unknown PositiveBoundsExtension; // 0xa0(0x0c)
	Unknown NegativeBoundsExtension; // 0xac(0x0c)
	Unknown Materials; // 0xb8(0x10)
	Unknown SkelMirrorTable; // 0xc8(0x10)
	Unknown LODInfo; // 0xd8(0x10)
	Unknown MinLOD; // 0x138(0x04)
	Unknown DisableBelowMinLodStripping; // 0x13c(0x01)
	Unknown SkelMirrorAxis; // 0x13d(0x01)
	Unknown SkelMirrorFlipAxis; // 0x13e(0x01)
	char bUseFullPrecisionUVs; // 0x13f(0x01)
	char bUseHighPrecisionTangentBasis; // 0x13f(0x01)
	char bHasBeenSimplified; // 0x13f(0x01)
	char bHasVertexColors; // 0x13f(0x01)
	char bEnablePerPolyCollision; // 0x13f(0x01)
	Unknown BodySetup; // 0x140(0x08)
	Unknown PhysicsAsset; // 0x148(0x08)
	Unknown ShadowPhysicsAsset; // 0x150(0x08)
	Unknown NodeMappingData; // 0x158(0x10)
	Unknown MorphTargets; // 0x168(0x10)
	Unknown PostProcessAnimBlueprint; // 0x2f0(0x08)
	Unknown MeshClothingAssets; // 0x2f8(0x10)
	Unknown SamplingInfo; // 0x308(0x30)
	Unknown AssetUserData; // 0x338(0x10)
	Unknown Sockets; // 0x350(0x10)
	Unknown SkinWeightProfiles; // 0x370(0x10)
	Unknown StaticMeshComponent; // 0x310(0x08)
	char bStaticMeshReplicateMovement; // 0x318(0x01)
	Unknown NavigationGeometryGatheringMode; // 0x319(0x01)
	Unknown LightingGuid; // 0x48(0x10)
	int32_t LODBias; // 0x58(0x04)
	Unknown CompressionSettings; // 0x5c(0x01)
	Unknown Filter; // 0x5d(0x01)
	Unknown MipLoadOptions; // 0x5e(0x01)
	Unknown LODGroup; // 0x5f(0x01)
	char SRGB; // 0x60(0x01)
	char bNoTiling; // 0x60(0x01)
	char VirtualTextureStreaming; // 0x60(0x01)
	char CompressionYCoCg; // 0x60(0x01)
	char bAsyncResourceReleaseHasBeenStarted; // 0x60(0x01)
	Unknown AssetUserData; // 0x68(0x10)
	Unknown Format; // 0xc0(0x01)
	Unknown PlayerOwner; // 0x310(0x08)
	char bLostFocusPaused; // 0x318(0x01)
	char bShowHUD; // 0x318(0x01)
	char bShowDebugInfo; // 0x318(0x01)
	int32_t CurrentTargetIndex; // 0x31c(0x04)
	char bShowHitBoxDebugInfo; // 0x320(0x01)
	char bShowOverlays; // 0x320(0x01)
	char bEnableDebugTextShadow; // 0x320(0x01)
	Unknown PostRenderedActors; // 0x328(0x10)
	Unknown DebugDisplay; // 0x340(0x10)
	Unknown ToggledDebugCategories; // 0x350(0x10)
	Unknown Canvas; // 0x360(0x08)
	Unknown DebugCanvas; // 0x368(0x08)
	Unknown DebugTextList; // 0x370(0x10)
	Unknown ShowDebugTargetDesiredClass; // 0x380(0x08)
	Unknown ShowDebugTargetActor; // 0x388(0x08)
	Unknown PlayerController; // 0x30(0x08)
	int32_t CurrentNetSpeed; // 0x38(0x04)
	int32_t ConfiguredInternetSpeed; // 0x3c(0x04)
	int32_t ConfiguredLanSpeed; // 0x40(0x04)
	Unknown SelfNetConnection; // 0xb0(0x08)
	Unknown Children; // 0xb8(0x10)
	Unknown Driver; // 0xc8(0x08)
	Unknown PackageMapClass; // 0xd0(0x08)
	Unknown PackageMap; // 0xd8(0x08)
	Unknown OpenChannels; // 0xe0(0x10)
	Unknown SentTemporaries; // 0xf0(0x10)
	Unknown ViewTarget; // 0x100(0x08)
	Unknown OwningActor; // 0x108(0x08)
	int32_t MaxPacket; // 0x110(0x04)
	char InternalAck; // 0x114(0x01)
	Unknown PlayerId; // 0x1d0(0x28)
	double LastReceiveTime; // 0x240(0x08)
	Unknown ChannelsToTick; // 0x1580(0x10)
	struct FString NetConnectionClassName; // 0x30(0x10)
	struct FString ReplicationDriverClassName; // 0x40(0x10)
	int32_t MaxDownloadSize; // 0x50(0x04)
	char bClampListenServerTickRate; // 0x54(0x01)
	int32_t NetServerMaxTickRate; // 0x58(0x04)
	int32_t MaxNetTickRate; // 0x5c(0x04)
	int32_t MaxInternetClientRate; // 0x60(0x04)
	int32_t MaxClientRate; // 0x64(0x04)
	float ServerTravelPause; // 0x68(0x04)
	float SpawnPrioritySeconds; // 0x6c(0x04)
	float RelevantTimeout; // 0x70(0x04)
	float KeepAliveTime; // 0x74(0x04)
	float InitialConnectTimeout; // 0x78(0x04)
	float ConnectionTimeout; // 0x7c(0x04)
	float TimeoutMultiplierForUnoptimizedBuilds; // 0x80(0x04)
	char bNoTimeouts; // 0x84(0x01)
	char bNeverApplyNetworkEmulationSettings; // 0x85(0x01)
	Unknown ServerConnection; // 0x88(0x08)
	Unknown ClientConnections; // 0x90(0x10)
	int32_t RecentlyDisconnectedTrackingTime; // 0x100(0x04)
	Unknown World; // 0x140(0x08)
	Unknown WorldPackage; // 0x148(0x08)
	Unknown NetConnectionClass; // 0x170(0x08)
	Unknown ReplicationDriverClass; // 0x178(0x08)
	struct FName NetDriverName; // 0x190(0x08)
	Unknown ChannelDefinitions; // 0x198(0x10)
	Unknown ChannelDefinitionMap; // 0x1a8(0x50)
	Unknown ActorChannelPool; // 0x1f8(0x10)
	float Time; // 0x210(0x04)
	Unknown ReplicationDriver; // 0x6e8(0x08)
	Unknown TinyFont; // 0x30(0x08)
	Unknown TinyFontName; // 0x38(0x18)
	Unknown SmallFont; // 0x50(0x08)
	Unknown SmallFontName; // 0x58(0x18)
	Unknown MediumFont; // 0x70(0x08)
	Unknown MediumFontName; // 0x78(0x18)
	Unknown LargeFont; // 0x90(0x08)
	Unknown LargeFontName; // 0x98(0x18)
	Unknown SubtitleFont; // 0xb0(0x08)
	Unknown SubtitleFontName; // 0xb8(0x18)
	Unknown AdditionalFonts; // 0xd0(0x10)
	Unknown AdditionalFontNames; // 0xe8(0x10)
	Unknown ConsoleClass; // 0xf8(0x08)
	Unknown ConsoleClassName; // 0x100(0x18)
	Unknown GameViewportClientClass; // 0x118(0x08)
	Unknown GameViewportClientClassName; // 0x120(0x18)
	Unknown LocalPlayerClass; // 0x138(0x08)
	Unknown LocalPlayerClassName; // 0x140(0x18)
	Unknown WorldSettingsClass; // 0x158(0x08)
	Unknown WorldSettingsClassName; // 0x160(0x18)
	Unknown NavigationSystemClassName; // 0x178(0x18)
	Unknown NavigationSystemClass; // 0x190(0x08)
	Unknown NavigationSystemConfigClassName; // 0x198(0x18)
	Unknown NavigationSystemConfigClass; // 0x1b0(0x08)
	Unknown AvoidanceManagerClassName; // 0x1b8(0x18)
	Unknown AvoidanceManagerClass; // 0x1d0(0x08)
	Unknown PhysicsCollisionHandlerClass; // 0x1d8(0x08)
	Unknown PhysicsCollisionHandlerClassName; // 0x1e0(0x18)
	Unknown GameUserSettingsClassName; // 0x1f8(0x18)
	Unknown GameUserSettingsClass; // 0x210(0x08)
	Unknown AIControllerClassName; // 0x218(0x18)
	Unknown GameUserSettings; // 0x230(0x08)
	Unknown LevelScriptActorClass; // 0x238(0x08)
	Unknown LevelScriptActorClassName; // 0x240(0x18)
	Unknown DefaultBlueprintBaseClassName; // 0x258(0x18)
	Unknown GameSingletonClassName; // 0x270(0x18)
	Unknown GameSingleton; // 0x288(0x08)
	Unknown AssetManagerClassName; // 0x290(0x18)
	Unknown AssetManager; // 0x2a8(0x08)
	Unknown DefaultTexture; // 0x2b0(0x08)
	Unknown DefaultTextureName; // 0x2b8(0x18)
	Unknown DefaultDiffuseTexture; // 0x2d0(0x08)
	Unknown DefaultDiffuseTextureName; // 0x2d8(0x18)
	Unknown DefaultBSPVertexTexture; // 0x2f0(0x08)
	Unknown DefaultBSPVertexTextureName; // 0x2f8(0x18)
	Unknown HighFrequencyNoiseTexture; // 0x310(0x08)
	Unknown HighFrequencyNoiseTextureName; // 0x318(0x18)
	Unknown DefaultBokehTexture; // 0x330(0x08)
	Unknown DefaultBokehTextureName; // 0x338(0x18)
	Unknown DefaultBloomKernelTexture; // 0x350(0x08)
	Unknown DefaultBloomKernelTextureName; // 0x358(0x18)
	Unknown WireframeMaterial; // 0x370(0x08)
	struct FString WireframeMaterialName; // 0x378(0x10)
	Unknown DebugMeshMaterial; // 0x388(0x08)
	Unknown DebugMeshMaterialName; // 0x390(0x18)
	Unknown EmissiveMeshMaterial; // 0x3a8(0x08)
	Unknown EmissiveMeshMaterialName; // 0x3b0(0x18)
	Unknown LevelColorationLitMaterial; // 0x3c8(0x08)
	struct FString LevelColorationLitMaterialName; // 0x3d0(0x10)
	Unknown LevelColorationUnlitMaterial; // 0x3e0(0x08)
	struct FString LevelColorationUnlitMaterialName; // 0x3e8(0x10)
	Unknown LightingTexelDensityMaterial; // 0x3f8(0x08)
	struct FString LightingTexelDensityName; // 0x400(0x10)
	Unknown ShadedLevelColorationLitMaterial; // 0x410(0x08)
	struct FString ShadedLevelColorationLitMaterialName; // 0x418(0x10)
	Unknown ShadedLevelColorationUnlitMaterial; // 0x428(0x08)
	struct FString ShadedLevelColorationUnlitMaterialName; // 0x430(0x10)
	Unknown RemoveSurfaceMaterial; // 0x440(0x08)
	Unknown RemoveSurfaceMaterialName; // 0x448(0x18)
	Unknown VertexColorMaterial; // 0x460(0x08)
	struct FString VertexColorMaterialName; // 0x468(0x10)
	Unknown VertexColorViewModeMaterial_ColorOnly; // 0x478(0x08)
	struct FString VertexColorViewModeMaterialName_ColorOnly; // 0x480(0x10)
	Unknown VertexColorViewModeMaterial_AlphaAsColor; // 0x490(0x08)
	struct FString VertexColorViewModeMaterialName_AlphaAsColor; // 0x498(0x10)
	Unknown VertexColorViewModeMaterial_RedOnly; // 0x4a8(0x08)
	struct FString VertexColorViewModeMaterialName_RedOnly; // 0x4b0(0x10)
	Unknown VertexColorViewModeMaterial_GreenOnly; // 0x4c0(0x08)
	struct FString VertexColorViewModeMaterialName_GreenOnly; // 0x4c8(0x10)
	Unknown VertexColorViewModeMaterial_BlueOnly; // 0x4d8(0x08)
	struct FString VertexColorViewModeMaterialName_BlueOnly; // 0x4e0(0x10)
	Unknown DebugEditorMaterialName; // 0x4f0(0x18)
	Unknown ConstraintLimitMaterial; // 0x508(0x08)
	Unknown ConstraintLimitMaterialX; // 0x510(0x08)
	Unknown ConstraintLimitMaterialXAxis; // 0x518(0x08)
	Unknown ConstraintLimitMaterialY; // 0x520(0x08)
	Unknown ConstraintLimitMaterialYAxis; // 0x528(0x08)
	Unknown ConstraintLimitMaterialZ; // 0x530(0x08)
	Unknown ConstraintLimitMaterialZAxis; // 0x538(0x08)
	Unknown ConstraintLimitMaterialPrismatic; // 0x540(0x08)
	Unknown InvalidLightmapSettingsMaterial; // 0x548(0x08)
	Unknown InvalidLightmapSettingsMaterialName; // 0x550(0x18)
	Unknown PreviewShadowsIndicatorMaterial; // 0x568(0x08)
	Unknown PreviewShadowsIndicatorMaterialName; // 0x570(0x18)
	Unknown ArrowMaterial; // 0x588(0x08)
	Unknown ArrowMaterialYellow; // 0x590(0x08)
	Unknown ArrowMaterialName; // 0x598(0x18)
	Unknown LightingOnlyBrightness; // 0x5b0(0x10)
	Unknown ShaderComplexityColors; // 0x5c0(0x10)
	Unknown QuadComplexityColors; // 0x5d0(0x10)
	Unknown LightComplexityColors; // 0x5e0(0x10)
	Unknown StationaryLightOverlapColors; // 0x5f0(0x10)
	Unknown LODColorationColors; // 0x600(0x10)
	Unknown HLODColorationColors; // 0x610(0x10)
	Unknown StreamingAccuracyColors; // 0x620(0x10)
	float MaxPixelShaderAdditiveComplexityCount; // 0x630(0x04)
	float MaxES3PixelShaderAdditiveComplexityCount; // 0x634(0x04)
	float MinLightMapDensity; // 0x638(0x04)
	float IdealLightMapDensity; // 0x63c(0x04)
	float MaxLightMapDensity; // 0x640(0x04)
	char bRenderLightMapDensityGrayscale; // 0x644(0x01)
	float RenderLightMapDensityGrayscaleScale; // 0x648(0x04)
	float RenderLightMapDensityColorScale; // 0x64c(0x04)
	Unknown LightMapDensityVertexMappedColor; // 0x650(0x10)
	Unknown LightMapDensitySelectedColor; // 0x660(0x10)
	Unknown StatColorMappings; // 0x670(0x10)
	Unknown DefaultPhysMaterial; // 0x680(0x08)
	Unknown DefaultPhysMaterialName; // 0x688(0x18)
	Unknown ActiveGameNameRedirects; // 0x6a0(0x10)
	Unknown ActiveClassRedirects; // 0x6b0(0x10)
	Unknown ActivePluginRedirects; // 0x6c0(0x10)
	Unknown ActiveStructRedirects; // 0x6d0(0x10)
	Unknown PreIntegratedSkinBRDFTexture; // 0x6e0(0x08)
	Unknown PreIntegratedSkinBRDFTextureName; // 0x6e8(0x18)
	Unknown BlueNoiseTexture; // 0x700(0x08)
	Unknown BlueNoiseTextureName; // 0x708(0x18)
	Unknown MiniFontTexture; // 0x720(0x08)
	Unknown MiniFontTextureName; // 0x728(0x18)
	Unknown WeightMapPlaceholderTexture; // 0x740(0x08)
	Unknown WeightMapPlaceholderTextureName; // 0x748(0x18)
	Unknown LightMapDensityTexture; // 0x760(0x08)
	Unknown LightMapDensityTextureName; // 0x768(0x18)
	Unknown GameViewport; // 0x788(0x08)
	Unknown DeferredCommands; // 0x790(0x10)
	int32_t TickCycles; // 0x7a0(0x04)
	int32_t GameCycles; // 0x7a4(0x04)
	int32_t ClientCycles; // 0x7a8(0x04)
	float NearClipPlane; // 0x7ac(0x04)
	float EditorNearClipPlane; // 0x7b0(0x04)
	char bUseCustomAudioModule; // 0x7b4(0x01)
	char bHardwareSurveyEnabled; // 0x7b8(0x01)
	char bSubtitlesEnabled; // 0x7b8(0x01)
	char bSubtitlesForcedOff; // 0x7b8(0x01)
	int32_t MaximumLoopIterationCount; // 0x7bc(0x04)
	char bCanBlueprintsTickByDefault; // 0x7c0(0x01)
	char bOptimizeAnimBlueprintMemberVariableAccess; // 0x7c0(0x01)
	char bAllowMultiThreadedAnimationUpdate; // 0x7c0(0x01)
	char bEnableEditorPSysRealtimeLOD; // 0x7c0(0x01)
	char bSmoothFrameRate; // 0x7c0(0x01)
	char bUseFixedFrameRate; // 0x7c0(0x01)
	float FixedFrameRate; // 0x7c4(0x04)
	Unknown SmoothedFrameRateRange; // 0x7c8(0x10)
	Unknown CustomTimeStep; // 0x7d8(0x08)
	Unknown CustomTimeStepClassName; // 0x800(0x18)
	Unknown TimecodeProvider; // 0x818(0x08)
	Unknown TimecodeProviderClassName; // 0x840(0x18)
	char bGenerateDefaultTimecode; // 0x858(0x01)
	Unknown GenerateDefaultTimecodeFrameRate; // 0x85c(0x08)
	float GenerateDefaultTimecodeFrameDelay; // 0x864(0x04)
	char bCheckForMultiplePawnsSpawnedInAFrame; // 0x868(0x01)
	int32_t NumPawnsAllowedToBeSpawnedInAFrame; // 0x86c(0x04)
	char bShouldGenerateLowQualityLightmaps; // 0x870(0x01)
	Unknown C_WorldBox; // 0x874(0x04)
	Unknown C_BrushWire; // 0x878(0x04)
	Unknown C_AddWire; // 0x87c(0x04)
	Unknown C_SubtractWire; // 0x880(0x04)
	Unknown C_SemiSolidWire; // 0x884(0x04)
	Unknown C_NonSolidWire; // 0x888(0x04)
	Unknown C_WireBackground; // 0x88c(0x04)
	Unknown C_ScaleBoxHi; // 0x890(0x04)
	Unknown C_VolumeCollision; // 0x894(0x04)
	Unknown C_BSPCollision; // 0x898(0x04)
	Unknown C_OrthoBackground; // 0x89c(0x04)
	Unknown C_Volume; // 0x8a0(0x04)
	Unknown C_BrushShape; // 0x8a4(0x04)
	float StreamingDistanceFactor; // 0x8a8(0x04)
	Unknown GameScreenshotSaveDirectory; // 0x8b0(0x10)
	Unknown TransitionType; // 0x8c0(0x01)
	struct FString TransitionDescription; // 0x8c8(0x10)
	struct FString TransitionGameMode; // 0x8d8(0x10)
	float MeshLODRange; // 0x8e8(0x04)
	char bAllowMatureLanguage; // 0x8ec(0x01)
	float CameraRotationThreshold; // 0x8f0(0x04)
	float CameraTranslationThreshold; // 0x8f4(0x04)
	float PrimitiveProbablyVisibleTime; // 0x8f8(0x04)
	float MaxOcclusionPixelsFraction; // 0x8fc(0x04)
	char bPauseOnLossOfFocus; // 0x900(0x01)
	int32_t MaxParticleResize; // 0x904(0x04)
	int32_t MaxParticleResizeWarn; // 0x908(0x04)
	Unknown PendingDroppedNotes; // 0x910(0x10)
	float NetClientTicksPerSecond; // 0x920(0x04)
	float DisplayGamma; // 0x924(0x04)
	float MinDesiredFrameRate; // 0x928(0x04)
	Unknown DefaultSelectedMaterialColor; // 0x92c(0x10)
	Unknown SelectedMaterialColor; // 0x93c(0x10)
	Unknown SelectionOutlineColor; // 0x94c(0x10)
	Unknown SubduedSelectionOutlineColor; // 0x95c(0x10)
	Unknown SelectedMaterialColorOverride; // 0x96c(0x10)
	char bIsOverridingSelectedColor; // 0x97c(0x01)
	char bEnableOnScreenDebugMessages; // 0x980(0x01)
	char bEnableOnScreenDebugMessagesDisplay; // 0x980(0x01)
	char bSuppressMapWarnings; // 0x980(0x01)
	char bDisableAILogging; // 0x980(0x01)
	uint32_t bEnableVisualLogRecordingOnStart; // 0x984(0x04)
	int32_t ScreenSaverInhibitorSemaphore; // 0x98c(0x04)
	char bLockReadOnlyLevels; // 0x990(0x01)
	struct FString ParticleEventManagerClassPath; // 0x998(0x10)
	float SelectionHighlightIntensity; // 0x9a8(0x04)
	float BSPSelectionHighlightIntensity; // 0x9ac(0x04)
	float SelectionHighlightIntensityBillboards; // 0x9b0(0x04)
	Unknown NetDriverDefinitions; // 0xc00(0x10)
	Unknown ServerActors; // 0xc10(0x10)
	Unknown RuntimeServerActors; // 0xc20(0x10)
	float NetErrorLogInterval; // 0xc30(0x04)
	char bStartedLoadMapMovie; // 0xc34(0x01)
	int32_t NextWorldContextHandle; // 0xc50(0x04)
	Unknown ViewportClient; // 0x70(0x08)
	Unknown AspectRatioAxisConstraint; // 0x94(0x01)
	Unknown PendingLevelPlayerControllerClass; // 0x98(0x08)
	char bSentSplitJoin; // 0xa0(0x01)
	int32_t ControllerId; // 0xb8(0x04)
	Unknown AnimBlueprintGeneratedClass; // 0x700(0x08)
	Unknown AnimClass; // 0x708(0x08)
	Unknown AnimScriptInstance; // 0x710(0x08)
	Unknown PostprocessAnimInstance; // 0x718(0x08)
	Unknown AnimationData; // 0x720(0x18)
	Unknown RootBoneTranslation; // 0x748(0x0c)
	Unknown LineCheckBoundsScale; // 0x754(0x0c)
	Unknown LinkedInstances; // 0x780(0x10)
	Unknown CachedBoneSpaceTransforms; // 0x790(0x10)
	Unknown CachedComponentSpaceTransforms; // 0x7a0(0x10)
	float GlobalAnimRateScale; // 0x7d0(0x04)
	Unknown KinematicBonesUpdateType; // 0x7d4(0x01)
	Unknown PhysicsTransformUpdateMode; // 0x7d5(0x01)
	Unknown AnimationMode; // 0x7dd(0x01)
	char bDisablePostProcessBlueprint; // 0x7df(0x01)
	char bUpdateOverlapsOnAnimationFinalize; // 0x7df(0x01)
	char bHasValidBodies; // 0x7df(0x01)
	char bBlendPhysics; // 0x7df(0x01)
	char bEnablePhysicsOnDedicatedServer; // 0x7df(0x01)
	char bUpdateJointsFromAnimation; // 0x7e0(0x01)
	char bDisableClothSimulation; // 0x7e0(0x01)
	char bDisableRigidBodyAnimNode; // 0x7e0(0x01)
	char bAllowAnimCurveEvaluation; // 0x7e0(0x01)
	char bDisableAnimCurves; // 0x7e0(0x01)
	char bCollideWithEnvironment; // 0x7e1(0x01)
	char bCollideWithAttachedChildren; // 0x7e1(0x01)
	char bLocalSpaceSimulation; // 0x7e1(0x01)
	char bResetAfterTeleport; // 0x7e1(0x01)
	char bDeferKinematicBoneUpdate; // 0x7e1(0x01)
	char bNoSkeletonUpdate; // 0x7e1(0x01)
	char bPauseAnims; // 0x7e1(0x01)
	char bUseRefPoseOnInitAnim; // 0x7e2(0x01)
	char bEnablePerPolyCollision; // 0x7e2(0x01)
	char bForceRefpose; // 0x7e2(0x01)
	char bOnlyAllowAutonomousTickPose; // 0x7e2(0x01)
	char bIsAutonomousTickPose; // 0x7e2(0x01)
	char bOldForceRefPose; // 0x7e2(0x01)
	char bShowPrePhysBones; // 0x7e2(0x01)
	char bRequiredBonesUpToDate; // 0x7e2(0x01)
	char bAnimTreeInitialised; // 0x7e3(0x01)
	char bIncludeComponentLocationIntoBounds; // 0x7e3(0x01)
	char bEnableLineCheckWithBounds; // 0x7e3(0x01)
	char bUseBendingElements; // 0x7e3(0x01)
	char bUseTetrahedralConstraints; // 0x7e3(0x01)
	char bUseThinShellVolumeConstraints; // 0x7e3(0x01)
	char bUseSelfCollisions; // 0x7e3(0x01)
	char bUseContinuousCollisionDetection; // 0x7e3(0x01)
	char bPropagateCurvesToSlaves; // 0x7e4(0x01)
	char bSkipKinematicUpdateWhenInterpolating; // 0x7e4(0x01)
	char bSkipBoundsUpdateWhenInterpolating; // 0x7e4(0x01)
	char bNeedsQueuedAnimEventsDispatched; // 0x7e4(0x01)
	uint16_t CachedAnimCurveUidVersion; // 0x7e6(0x02)
	Unknown MassMode; // 0x7e8(0x01)
	float UniformMass; // 0x7ec(0x04)
	float TotalMass; // 0x7f0(0x04)
	float Density; // 0x7f4(0x04)
	float MinPerParticleMass; // 0x7f8(0x04)
	float ClothBlendWeight; // 0x7fc(0x04)
	float EdgeStiffness; // 0x800(0x04)
	float BendingStiffness; // 0x804(0x04)
	float AreaStiffness; // 0x808(0x04)
	float VolumeStiffness; // 0x80c(0x04)
	float StrainLimitingStiffness; // 0x810(0x04)
	float ShapeTargetStiffness; // 0x814(0x04)
	Unknown DisallowedAnimCurves; // 0x818(0x10)
	Unknown BodySetup; // 0x828(0x08)
	struct FMulticastInlineDelegate OnConstraintBroken; // 0x838(0x10)
	Unknown ClothingSimulationFactory; // 0x848(0x08)
	float TeleportDistanceThreshold; // 0x918(0x04)
	float TeleportRotationThreshold; // 0x91c(0x04)
	uint32_t LastPoseTickFrame; // 0x928(0x04)
	Unknown ClothingInteractor; // 0x980(0x08)
	struct FMulticastInlineDelegate OnAnimInitialized; // 0xa50(0x10)
	Unknown CurrentSkeleton; // 0x28(0x08)
	Unknown RootMotionMode; // 0x30(0x01)
	char bUseMultiThreadedAnimationUpdate; // 0x31(0x01)
	char bUsingCopyPoseFromMesh; // 0x31(0x01)
	char bReceiveNotifiesFromLinkedInstances; // 0x31(0x01)
	char bPropagateNotifiesToLinkedInstances; // 0x31(0x01)
	char bQueueMontageEvents; // 0x31(0x01)
	struct FMulticastInlineDelegate OnMontageBlendingOut; // 0x38(0x10)
	struct FMulticastInlineDelegate OnMontageStarted; // 0x48(0x10)
	struct FMulticastInlineDelegate OnMontageEnded; // 0x58(0x10)
	struct FMulticastInlineDelegate OnAllMontageInstancesEnded; // 0x68(0x10)
	Unknown NotifyQueue; // 0x100(0x70)
	Unknown ActiveAnimNotifyState; // 0x170(0x10)
	Unknown SupportedClass; // 0x28(0x08)
	Unknown ExportRootScope; // 0x30(0x08)
	Unknown FormatExtension; // 0x38(0x10)
	Unknown FormatDescription; // 0x48(0x10)
	int32_t PreferredFormatIndex; // 0x58(0x04)
	int32_t TextIndent; // 0x5c(0x04)
	char bText; // 0x60(0x01)
	char bSelectedOnly; // 0x60(0x01)
	char bForceFileOperations; // 0x60(0x01)
	Unknown ExportTask; // 0x68(0x08)
	char bInputEnabled; // 0x310(0x01)
	uint32_t MaxPoolSize; // 0x28(0x04)
	Unknown BrushType; // 0x310(0x01)
	Unknown BrushColor; // 0x314(0x04)
	int32_t PolyFlags; // 0x318(0x04)
	char bColored; // 0x31c(0x01)
	char bSolidWhenSelected; // 0x31c(0x01)
	char bPlaceableFromClassBrowser; // 0x31c(0x01)
	char bNotForClientOrServer; // 0x31c(0x01)
	Unknown Brush; // 0x320(0x08)
	Unknown BrushComponent; // 0x328(0x08)
	char bInManipulation; // 0x330(0x01)
	Unknown SavedSelections; // 0x338(0x10)
	Unknown SelfWorld; // 0x38(0x08)
	Unknown PersistentLevel; // 0x48(0x08)
	Unknown NetDriver; // 0x50(0x08)
	Unknown LineBatcher; // 0x58(0x08)
	Unknown PersistentLineBatcher; // 0x60(0x08)
	Unknown ForegroundLineBatcher; // 0x68(0x08)
	Unknown NetworkManager; // 0x70(0x08)
	Unknown PhysicsCollisionHandler; // 0x78(0x08)
	Unknown ExtraReferencedObjects; // 0x80(0x10)
	Unknown PerModuleDataObjects; // 0x90(0x10)
	Unknown LevelSequenceActors; // 0xa0(0x10)
	Unknown StreamingLevels; // 0xb0(0x10)
	Unknown StreamingLevelsToConsider; // 0xc0(0x48)
	struct FString StreamingLevelsPrefix; // 0x120(0x10)
	Unknown CurrentLevelPendingVisibility; // 0x130(0x08)
	Unknown CurrentLevelPendingInvisibility; // 0x138(0x08)
	Unknown DemoNetDriver; // 0x140(0x08)
	Unknown MyParticleEventManager; // 0x148(0x08)
	Unknown DefaultPhysicsVolume; // 0x150(0x08)
	char bAreConstraintsDirty; // 0x16e(0x01)
	Unknown NavigationSystem; // 0x170(0x08)
	Unknown AuthorityGameMode; // 0x178(0x08)
	Unknown GameState; // 0x180(0x08)
	Unknown AISystem; // 0x188(0x08)
	Unknown AvoidanceManager; // 0x190(0x08)
	Unknown Levels; // 0x198(0x10)
	Unknown LevelCollections; // 0x1a8(0x10)
	Unknown OwningGameInstance; // 0x1d8(0x08)
	Unknown ParameterCollectionInstances; // 0x1e0(0x10)
	Unknown CanvasForRenderingToTarget; // 0x1f0(0x08)
	Unknown CanvasForDrawMaterialToRenderTarget; // 0x1f8(0x08)
	Unknown ComponentsThatNeedEndOfFrameUpdate; // 0x250(0x10)
	Unknown ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x260(0x10)
	Unknown WorldComposition; // 0x5b0(0x08)
	Unknown PSCPool; // 0x650(0x58)
	Unknown SubTracks; // 0x38(0x10)
	Unknown TrackInstClass; // 0x48(0x08)
	Unknown ActiveCondition; // 0x50(0x01)
	struct FString TrackTitle; // 0x58(0x10)
	char bOnePerGroup; // 0x68(0x01)
	char bDirGroupOnly; // 0x68(0x01)
	char bDisableTrack; // 0x68(0x01)
	char bIsSelected; // 0x68(0x01)
	char bIsAnimControlTrack; // 0x68(0x01)
	char bSubTrackOnly; // 0x68(0x01)
	char bVisible; // 0x68(0x01)
	char bIsRecording; // 0x68(0x01)
	Unknown VectorTrack; // 0x70(0x18)
	float CurveTension; // 0x88(0x04)
	Unknown FloatTrack; // 0x70(0x18)
	float CurveTension; // 0x88(0x04)
	Unknown NativeClass; // 0x28(0x08)
	Unknown Material; // 0x28(0x08)
	Unknown Function; // 0x30(0x08)
	char bIsParameterExpression; // 0x38(0x01)
	Unknown Texture; // 0x40(0x08)
	Unknown SamplerType; // 0x48(0x01)
	char IsDefaultMeshpaintTexture; // 0x49(0x01)
	Unknown Coordinates; // 0x50(0x0c)
	Unknown TextureObject; // 0x64(0x0c)
	Unknown MipValue; // 0x78(0x0c)
	Unknown CoordinatesDX; // 0x8c(0x0c)
	Unknown CoordinatesDY; // 0xa0(0x0c)
	Unknown AutomaticViewMipBiasValue; // 0xb4(0x0c)
	Unknown MipValueMode; // 0xc8(0x01)
	Unknown SamplerSource; // 0xc9(0x01)
	char AutomaticViewMipBias; // 0xca(0x01)
	Unknown ConstCoordinate; // 0xcb(0x01)
	int32_t ConstMipValue; // 0xcc(0x04)
	struct FName ParameterName; // 0xd0(0x08)
	Unknown ExpressionGUID; // 0xd8(0x10)
	struct FName Group; // 0xe8(0x08)
	Unknown SelfPawn; // 0x318(0x08)
	char bUseControllerRotationPitch; // 0x328(0x01)
	char bUseControllerRotationYaw; // 0x328(0x01)
	char bUseControllerRotationRoll; // 0x328(0x01)
	char bCanAffectNavigationGeneration; // 0x328(0x01)
	float BaseEyeHeight; // 0x32c(0x04)
	Unknown AutoPossessPlayer; // 0x330(0x01)
	Unknown AutoPossessAI; // 0x331(0x01)
	uint16_t RemoteViewPitch; // 0x332(0x02)
	uint16_t RemoteViewYaw; // 0x334(0x02)
	Unknown AIControllerClass; // 0x338(0x08)
	Unknown PlayerState; // 0x340(0x08)
	Unknown LastHitBy; // 0x350(0x08)
	Unknown Controller; // 0x358(0x08)
	Unknown ControlInputVector; // 0x364(0x0c)
	Unknown LastControlInputVector; // 0x370(0x0c)
	Unknown SelfCharacter; // 0x388(0x08)
	Unknown Mesh; // 0x398(0x08)
	Unknown CharacterMovement; // 0x3a0(0x08)
	Unknown CapsuleComponent; // 0x3a8(0x08)
	Unknown BasedMovement; // 0x3b8(0x30)
	Unknown ReplicatedBasedMovement; // 0x3e8(0x30)
	float AnimRootMotionTranslationScale; // 0x418(0x04)
	Unknown BaseTranslationOffset; // 0x41c(0x0c)
	Unknown BaseRotationOffset; // 0x430(0x10)
	float ReplicatedServerLastTransformUpdateTimeStamp; // 0x440(0x04)
	float ReplayLastTransformUpdateTimeStamp; // 0x444(0x04)
	Unknown ReplicatedMovementMode; // 0x448(0x01)
	char bInBaseReplication; // 0x449(0x01)
	float CrouchedEyeHeight; // 0x44c(0x04)
	char bIsCrouched; // 0x450(0x01)
	char bProxyIsJumpForceApplied; // 0x450(0x01)
	char bPressedJump; // 0x450(0x01)
	char bClientUpdating; // 0x450(0x01)
	char bClientWasFalling; // 0x450(0x01)
	char bClientResimulateRootMotion; // 0x450(0x01)
	char bClientResimulateRootMotionSources; // 0x450(0x01)
	char bSimGravityDisabled; // 0x450(0x01)
	char bClientCheckEncroachmentOnNetUpdate; // 0x451(0x01)
	char bServerMoveIgnoreRootMotion; // 0x451(0x01)
	char bWasJumping; // 0x451(0x01)
	float JumpKeyHoldTime; // 0x454(0x04)
	float JumpForceTimeRemaining; // 0x458(0x04)
	float ProxyJumpForceStartedTime; // 0x45c(0x04)
	float JumpMaxHoldTime; // 0x460(0x04)
	int32_t JumpMaxCount; // 0x464(0x04)
	int32_t JumpCurrentCount; // 0x468(0x04)
	struct FMulticastInlineDelegate OnReachedJumpApex; // 0x470(0x10)
	struct FMulticastInlineDelegate MovementModeChangedDelegate; // 0x490(0x10)
	struct FMulticastInlineDelegate OnCharacterMovementUpdated; // 0x4a0(0x10)
	Unknown SavedRootMotion; // 0x4b0(0x38)
	Unknown ClientRootMotionParams; // 0x4f0(0x40)
	Unknown RootMotionRepMoves; // 0x530(0x10)
	Unknown RepRootMotion; // 0x540(0x98)
	Unknown SplineCurves; // 0x4b8(0x68)
	Unknown SplineInfo; // 0x520(0x18)
	Unknown SplineRotInfo; // 0x538(0x18)
	Unknown SplineScaleInfo; // 0x550(0x18)
	Unknown SplineReparamTable; // 0x568(0x18)
	char bAllowSplineEditingPerInstance; // 0x580(0x01)
	int32_t ReparamStepsPerSegment; // 0x584(0x04)
	float Duration; // 0x588(0x04)
	char bStationaryEndpoints; // 0x58c(0x01)
	char bSplineHasBeenEdited; // 0x58d(0x01)
	char bModifiedByConstructionScript; // 0x58e(0x01)
	char bInputSplinePointsToConstructionScript; // 0x58f(0x01)
	char bDrawDebug; // 0x590(0x01)
	char bClosedLoop; // 0x591(0x01)
	char bLoopPositionOverride; // 0x592(0x01)
	float LoopPosition; // 0x594(0x04)
	Unknown DefaultUpVector; // 0x598(0x0c)
	struct FString HelpDescription; // 0x28(0x10)
	struct FString HelpUsage; // 0x38(0x10)
	struct FString HelpWebLink; // 0x48(0x10)
	Unknown HelpParamNames; // 0x58(0x10)
	Unknown HelpParamDescriptions; // 0x68(0x10)
	char IsServer; // 0x78(0x01)
	char IsClient; // 0x78(0x01)
	char IsEditor; // 0x78(0x01)
	char LogToConsole; // 0x78(0x01)
	char ShowErrorCount; // 0x78(0x01)
	char ShowProgress; // 0x78(0x01)
	Unknown Sound; // 0x238(0x08)
	Unknown InstanceParameters; // 0x240(0x10)
	Unknown SoundClassOverride; // 0x250(0x08)
	char bAutoDestroy; // 0x258(0x01)
	char bStopWhenOwnerDestroyed; // 0x258(0x01)
	char bShouldRemainActiveIfDropped; // 0x258(0x01)
	char bAllowSpatialization; // 0x258(0x01)
	char bOverrideAttenuation; // 0x258(0x01)
	char bOverrideSubtitlePriority; // 0x258(0x01)
	char bIsUISound; // 0x258(0x01)
	char bEnableLowPassFilter; // 0x258(0x01)
	char bOverridePriority; // 0x259(0x01)
	char bSuppressSubtitles; // 0x259(0x01)
	char bAutoManageAttachment; // 0x25a(0x01)
	struct FName AudioComponentUserID; // 0x260(0x08)
	float PitchModulationMin; // 0x268(0x04)
	float PitchModulationMax; // 0x26c(0x04)
	float VolumeModulationMin; // 0x270(0x04)
	float VolumeModulationMax; // 0x274(0x04)
	float VolumeMultiplier; // 0x278(0x04)
	int32_t EnvelopeFollowerAttackTime; // 0x27c(0x04)
	int32_t EnvelopeFollowerReleaseTime; // 0x280(0x04)
	float Priority; // 0x284(0x04)
	float SubtitlePriority; // 0x288(0x04)
	Unknown SourceEffectChain; // 0x290(0x08)
	float PitchMultiplier; // 0x298(0x04)
	float LowPassFilterFrequency; // 0x29c(0x04)
	Unknown AttenuationSettings; // 0x2a8(0x08)
	Unknown AttenuationOverrides; // 0x2b0(0x3a0)
	Unknown ConcurrencySettings; // 0x650(0x08)
	Unknown ConcurrencySet; // 0x658(0x50)
	Unknown AutoAttachLocationRule; // 0x6b4(0x01)
	Unknown AutoAttachRotationRule; // 0x6b5(0x01)
	Unknown AutoAttachScaleRule; // 0x6b6(0x01)
	struct FMulticastInlineDelegate OnAudioFinished; // 0x6b8(0x10)
	struct FMulticastInlineDelegate OnAudioPlaybackPercent; // 0x6e0(0x10)
	struct FMulticastInlineDelegate OnAudioSingleEnvelopeValue; // 0x708(0x10)
	struct FMulticastInlineDelegate OnAudioMultiEnvelopeValue; // 0x730(0x10)
	Unknown Modulation; // 0x758(0x10)
	struct FDelegate OnQueueSubtitles; // 0x768(0x10)
	Unknown AutoAttachParent; // 0x778(0x08)
	struct FName AutoAttachSocketName; // 0x780(0x08)
	struct FString OptionsString; // 0x310(0x10)
	Unknown GameSessionClass; // 0x320(0x08)
	Unknown GameStateClass; // 0x328(0x08)
	Unknown PlayerControllerClass; // 0x330(0x08)
	Unknown PlayerStateClass; // 0x338(0x08)
	Unknown HUDClass; // 0x340(0x08)
	Unknown DefaultPawnClass; // 0x348(0x08)
	Unknown SpectatorClass; // 0x350(0x08)
	Unknown ReplaySpectatorPlayerControllerClass; // 0x358(0x08)
	Unknown ServerStatReplicatorClass; // 0x360(0x08)
	Unknown GameSession; // 0x368(0x08)
	Unknown GameState; // 0x370(0x08)
	Unknown ServerStatReplicator; // 0x378(0x08)
	struct FText DefaultPlayerName; // 0x380(0x18)
	char bUseSeamlessTravel; // 0x398(0x01)
	char bStartPlayersAsSpectators; // 0x398(0x01)
	char bPauseable; // 0x398(0x01)
	struct FName MatchState; // 0x3b0(0x08)
	char bDelayedStart; // 0x3b8(0x01)
	int32_t NumSpectators; // 0x3bc(0x04)
	int32_t NumPlayers; // 0x3c0(0x04)
	int32_t NumBots; // 0x3c4(0x04)
	float MinRespawnDelay; // 0x3c8(0x04)
	int32_t NumTravellingPlayers; // 0x3cc(0x04)
	Unknown EngineMessageClass; // 0x3d0(0x08)
	Unknown InactivePlayerArray; // 0x3d8(0x10)
	float InactivePlayerStateLifeSpan; // 0x3e8(0x04)
	int32_t MaxInactivePlayers; // 0x3ec(0x04)
	char bHandleDedicatedServerReplays; // 0x3f0(0x01)
	Unknown GameModeClass; // 0x310(0x08)
	Unknown AuthorityGameMode; // 0x318(0x08)
	Unknown SpectatorClass; // 0x320(0x08)
	Unknown PlayerArray; // 0x328(0x10)
	char bReplicatedHasBegunPlay; // 0x338(0x01)
	float ReplicatedWorldTimeSeconds; // 0x33c(0x04)
	float ServerWorldTimeSecondsDelta; // 0x340(0x04)
	float ServerWorldTimeSecondsUpdateFrequency; // 0x344(0x04)
	struct FName MatchState; // 0x360(0x08)
	struct FName PreviousMatchState; // 0x368(0x08)
	int32_t ElapsedTime; // 0x370(0x04)
	Unknown PlayerState; // 0x348(0x08)
	struct FMulticastInlineDelegate OnInstigatedAnyDamage; // 0x388(0x10)
	struct FName StateName; // 0x324(0x08)
	Unknown Pawn; // 0x378(0x08)
	Unknown Character; // 0x338(0x08)
	Unknown TransformComponent; // 0x330(0x08)
	Unknown ControlRotation; // 0x39c(0x0c)
	char bAttachToPawn; // 0x32c(0x01)
	Unknown SelfPlayerController; // 0x3b0(0x08)
	Unknown Player; // 0x510(0x08)
	Unknown AcknowledgedPawn; // 0x428(0x08)
	Unknown ControllingDirTrackInst; // 0x4f8(0x08)
	Unknown MyHUD; // 0x5e8(0x08)
	Unknown PlayerCameraManager; // 0x438(0x08)
	Unknown PlayerCameraManagerClass; // 0x480(0x08)
	char bAutoManageActiveCameraTarget; // 0x6e4(0x01)
	Unknown TargetViewRotation; // 0x664(0x0c)
	float SmoothTargetViewRotationSpeed; // 0x640(0x04)
	Unknown HiddenActors; // 0x5b8(0x10)
	Unknown HiddenPrimitiveComponents; // 0x4d0(0x10)
	float LastSpectatorStateSynchTime; // 0x674(0x04)
	Unknown LastSpectatorSyncLocation; // 0x558(0x0c)
	Unknown LastSpectatorSyncRotation; // 0x45c(0x0c)
	int32_t ClientCap; // 0x478(0x04)
	Unknown CheatManager; // 0x568(0x08)
	Unknown CheatClass; // 0x590(0x08)
	Unknown PlayerInput; // 0x518(0x08)
	Unknown ActiveForceFeedbackEffects; // 0x580(0x10)
	char bPlayerIsWaiting; // 0x498(0x01)
	Unknown NetPlayerIndex; // 0x4bc(0x01)
	Unknown PendingSwapConnection; // 0x468(0x08)
	Unknown NetConnection; // 0x3e0(0x08)
	float InputYawScale; // 0x5e0(0x04)
	float InputPitchScale; // 0x5a8(0x04)
	float InputRollScale; // 0x578(0x04)
	char bShowMouseCursor; // 0x670(0x01)
	char bEnableClickEvents; // 0x5b4(0x01)
	char bEnableTouchEvents; // 0x4e0(0x01)
	char bEnableMouseOverEvents; // 0x670(0x01)
	char bEnableTouchOverEvents; // 0x670(0x01)
	char bForceFeedbackEnabled; // 0x57c(0x01)
	float ForceFeedbackScale; // 0x488(0x04)
	Unknown ClickEventKeys; // 0x4a0(0x10)
	Unknown DefaultMouseCursor; // 0x618(0x01)
	Unknown CurrentMouseCursor; // 0x5e4(0x01)
	Unknown DefaultClickTraceChannel; // 0x47c(0x01)
	Unknown CurrentClickTraceChannel; // 0x48c(0x01)
	float HitResultTraceDistance; // 0x3ec(0x04)
	uint16_t SeamlessTravelCount; // 0x5ac(0x02)
	uint16_t LastCompletedSeamlessTravelCount; // 0x540(0x02)
	Unknown InactiveStateInputComponent; // 0x490(0x08)
	char bShouldPerformFullTickWhenPaused; // 0x570(0x01)
	Unknown CurrentTouchInterface; // 0x550(0x08)
	Unknown SpectatorPawn; // 0x470(0x08)
	char bIsLocalPlayerController; // 0x5c8(0x01)
	Unknown SpawnLocation; // 0x61c(0x0c)
	struct FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0xb0(0x10)
	struct FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0xc0(0x10)
	struct FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0xd0(0x10)
	struct FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0xe0(0x10)
	struct FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0xf0(0x10)
	struct FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x100(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x110(0x10)
	struct FMulticastInlineDelegate OnTemperatureChangeDelegate; // 0x120(0x10)
	struct FMulticastInlineDelegate OnLowPowerModeDelegate; // 0x130(0x10)
	Unknown UpdatedComponent; // 0xb0(0x08)
	Unknown UpdatedPrimitive; // 0xb8(0x08)
	Unknown Velocity; // 0xc4(0x0c)
	Unknown PlaneConstraintNormal; // 0xd0(0x0c)
	Unknown PlaneConstraintOrigin; // 0xdc(0x0c)
	char bUpdateOnlyIfRendered; // 0xe8(0x01)
	char bAutoUpdateTickRegistration; // 0xe8(0x01)
	char bTickBeforeOwner; // 0xe8(0x01)
	char bAutoRegisterUpdatedComponent; // 0xe8(0x01)
	char bConstrainToPlane; // 0xe8(0x01)
	char bSnapToPlaneAtStart; // 0xe8(0x01)
	char bAutoRegisterPhysicsVolumeUpdates; // 0xe8(0x01)
	char bComponentShouldUpdatePhysicsVolume; // 0xe8(0x01)
	Unknown PlaneConstraintAxisSetting; // 0xeb(0x01)
	Unknown NavAgentProps; // 0xf0(0x30)
	float FixedPathBrakingDistance; // 0x120(0x04)
	char bUpdateNavAgentWithOwnersCollision; // 0x124(0x01)
	char bUseAccelerationForPaths; // 0x124(0x01)
	char bUseFixedBrakingDistanceForPaths; // 0x124(0x01)
	Unknown MovementState; // 0x125(0x01)
	Unknown PathFollowingComp; // 0x128(0x08)
	Unknown PawnOwner; // 0x130(0x08)
	Unknown CharacterOwner; // 0x2b0(0x08)
	float GravityScale; // 0x2ec(0x04)
	float MaxStepHeight; // 0x468(0x04)
	float JumpZVelocity; // 0x474(0x04)
	float JumpOffJumpZFactor; // 0x6c8(0x04)
	float WalkableFloorAngle; // 0x4f8(0x04)
	float WalkableFloorZ; // 0x488(0x04)
	Unknown MovementMode; // 0x438(0x01)
	Unknown CustomMovementMode; // 0x56c(0x01)
	Unknown NetworkSmoothingMode; // 0x280(0x01)
	float GroundFriction; // 0x470(0x04)
	float MaxWalkSpeed; // 0x300(0x04)
	float MaxWalkSpeedCrouched; // 0x6e0(0x04)
	float MaxSwimSpeed; // 0x548(0x04)
	float MaxFlySpeed; // 0x4e8(0x04)
	float MaxCustomMovementSpeed; // 0x460(0x04)
	float MaxAcceleration; // 0x484(0x04)
	float MinAnalogWalkSpeed; // 0x4e0(0x04)
	float BrakingFrictionFactor; // 0x2a0(0x04)
	float BrakingFriction; // 0x54c(0x04)
	float BrakingSubStepTime; // 0x6bc(0x04)
	float BrakingDecelerationWalking; // 0x554(0x04)
	float BrakingDecelerationFalling; // 0x51c(0x04)
	float BrakingDecelerationSwimming; // 0x414(0x04)
	float BrakingDecelerationFlying; // 0x568(0x04)
	float AirControl; // 0x544(0x04)
	float AirControlBoostMultiplier; // 0x308(0x04)
	float AirControlBoostVelocityThreshold; // 0x3f4(0x04)
	float FallingLateralFriction; // 0x3f0(0x04)
	float CrouchedHalfHeight; // 0x264(0x04)
	float Buoyancy; // 0x40c(0x04)
	float PerchRadiusThreshold; // 0x244(0x04)
	float PerchAdditionalHeight; // 0x248(0x04)
	Unknown RotationRate; // 0x520(0x0c)
	char bUseSeparateBrakingFriction; // 0x298(0x01)
	char bApplyGravityWhileJumping; // 0x2d4(0x01)
	char bUseControllerDesiredRotation; // 0x2e4(0x01)
	char bOrientRotationToMovement; // 0x550(0x01)
	char bSweepWhileNavWalking; // 0x620(0x01)
	char bMovementInProgress; // 0x3c0(0x01)
	char bEnableScopedMovementUpdates; // 0x5d0(0x01)
	char bEnableServerDualMoveScopedMovementUpdates; // 0x4e4(0x01)
	char bForceMaxAccel; // 0x4b8(0x01)
	char bRunPhysicsWithNoController; // 0x2f3(0x01)
	char bForceNextFloorCheck; // 0x490(0x01)
	char bShrinkProxyCapsule; // 0x2fc(0x01)
	char bCanWalkOffLedges; // 0x2e4(0x01)
	char bCanWalkOffLedgesWhenCrouching; // 0x44c(0x01)
	char bNetworkSkipProxyPredictionOnNetUpdate; // 0x490(0x01)
	char bNetworkAlwaysReplicateTransformUpdateTimestamp; // 0x490(0x01)
	char bDeferUpdateMoveComponent; // 0x510(0x01)
	char bEnablePhysicsInteraction; // 0x4dc(0x01)
	char bTouchForceScaledToMass; // 0x304(0x01)
	char bPushForceScaledToMass; // 0x540(0x01)
	char bPushForceUsingZOffset; // 0x5ac(0x01)
	char bScalePushForceToVelocity; // 0x6dc(0x01)
	Unknown DeferredUpdatedMoveComponent; // 0x3e8(0x08)
	float MaxOutOfWaterStepHeight; // 0x240(0x04)
	float OutofWaterZ; // 0x22c(0x04)
	float Mass; // 0x23c(0x04)
	float StandingDownwardForceScale; // 0x4c8(0x04)
	float InitialPushForceFactor; // 0x294(0x04)
	float PushForceFactor; // 0x2c0(0x04)
	float PushForcePointZOffsetFactor; // 0x2d0(0x04)
	float TouchForceFactor; // 0x434(0x04)
	float MinTouchForce; // 0x3a8(0x04)
	float MaxTouchForce; // 0x5a8(0x04)
	float RepulsionForce; // 0x3ac(0x04)
	Unknown Acceleration; // 0x6d0(0x0c)
	Unknown LastUpdateRotation; // 0x270(0x10)
	Unknown LastUpdateLocation; // 0x288(0x0c)
	Unknown LastUpdateVelocity; // 0x2d8(0x0c)
	float ServerLastTransformUpdateTimeStamp; // 0x310(0x04)
	float ServerLastClientGoodMoveAckTime; // 0x50c(0x04)
	float ServerLastClientAdjustmentTime; // 0x4bc(0x04)
	Unknown PendingImpulseToApply; // 0x21c(0x0c)
	Unknown PendingForceToApply; // 0x5c4(0x0c)
	float AnalogInputModifier; // 0x4d4(0x04)
	float MaxSimulationTimeStep; // 0x2f4(0x04)
	int32_t MaxSimulationIterations; // 0x444(0x04)
	int32_t MaxJumpApexAttemptsPerSimulation; // 0x47c(0x04)
	float MaxDepenetrationWithGeometry; // 0x4ac(0x04)
	float MaxDepenetrationWithGeometryAsProxy; // 0x494(0x04)
	float MaxDepenetrationWithPawn; // 0x25c(0x04)
	float MaxDepenetrationWithPawnAsProxy; // 0x564(0x04)
	float NetworkSimulatedSmoothLocationTime; // 0x3f8(0x04)
	float NetworkSimulatedSmoothRotationTime; // 0x6cc(0x04)
	float ListenServerNetworkSimulatedSmoothLocationTime; // 0x62c(0x04)
	float ListenServerNetworkSimulatedSmoothRotationTime; // 0x3e4(0x04)
	float NetProxyShrinkRadius; // 0x6c4(0x04)
	float NetProxyShrinkHalfHeight; // 0x440(0x04)
	float NetworkMaxSmoothUpdateDistance; // 0x258(0x04)
	float NetworkNoSmoothUpdateDistance; // 0x4d8(0x04)
	float NetworkMinTimeBetweenClientAckGoodMoves; // 0x530(0x04)
	float NetworkMinTimeBetweenClientAdjustments; // 0x284(0x04)
	float NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x2e8(0x04)
	float NetworkLargeClientCorrectionDistance; // 0x410(0x04)
	float LedgeCheckThreshold; // 0x514(0x04)
	float JumpOutOfWaterPitch; // 0x4cc(0x04)
	Unknown CurrentFloor; // 0x314(0x94)
	Unknown DefaultLandMovementMode; // 0x3fc(0x01)
	Unknown DefaultWaterMovementMode; // 0x2f2(0x01)
	Unknown GroundMovementMode; // 0x305(0x01)
	char bMaintainHorizontalGroundVelocity; // 0x518(0x01)
	char bImpartBaseVelocityX; // 0x5c0(0x01)
	char bImpartBaseVelocityY; // 0x2fc(0x01)
	char bImpartBaseVelocityZ; // 0x4c0(0x01)
	char bImpartBaseAngularVelocity; // 0x518(0x01)
	char bJustTeleported; // 0x44c(0x01)
	char bNetworkUpdateReceived; // 0x2fc(0x01)
	char bNetworkMovementModeChanged; // 0x230(0x01)
	char bIgnoreClientMovementErrorChecksAndCorrection; // 0x6c0(0x01)
	char bServerAcceptClientAuthoritativePosition; // 0x480(0x01)
	char bNotifyApex; // 0x464(0x01)
	char bCheatFlying; // 0x24c(0x01)
	char bWantsToCrouch; // 0x4b8(0x01)
	char bCrouchMaintainsBaseLocation; // 0x2b8(0x01)
	char bIgnoreBaseRotation; // 0x538(0x01)
	char bFastAttachedMove; // 0x218(0x01)
	char bAlwaysCheckFloor; // 0x430(0x01)
	char bUseFlatBaseForFloorChecks; // 0x238(0x01)
	char bPerformingJumpOff; // 0x2f1(0x01)
	char bWantsToLeaveNavWalking; // 0x46c(0x01)
	char bUseRVOAvoidance; // 0x6c0(0x01)
	char bRequestedMoveUseAcceleration; // 0x498(0x01)
	char bWasSimulatingRootMotion; // 0x478(0x01)
	char bAllowPhysicsRotationDuringAnimRootMotion; // 0x44c(0x01)
	char bHasRequestedVelocity; // 0x304(0x01)
	char bRequestedMoveWithMaxSpeed; // 0x52c(0x01)
	char bWasAvoidanceUpdated; // 0x2fc(0x01)
	char bProjectNavMeshWalking; // 0x508(0x01)
	char bProjectNavMeshOnBothWorldChannels; // 0x228(0x01)
	float AvoidanceConsiderationRadius; // 0x448(0x04)
	Unknown RequestedVelocity; // 0x4a0(0x0c)
	int32_t AvoidanceUID; // 0x250(0x04)
	Unknown AvoidanceGroup; // 0x48c(0x04)
	Unknown GroupsToAvoid; // 0x2bc(0x04)
	Unknown GroupsToIgnore; // 0x4c4(0x04)
	float AvoidanceWeight; // 0x2a8(0x04)
	Unknown PendingLaunchVelocity; // 0x558(0x0c)
	float NavMeshProjectionInterval; // 0x2a4(0x04)
	float NavMeshProjectionTimer; // 0x30c(0x04)
	float NavMeshProjectionInterpSpeed; // 0x254(0x04)
	float NavMeshProjectionHeightScaleUp; // 0x234(0x04)
	float NavMeshProjectionHeightScaleDown; // 0x408(0x04)
	float NavWalkingFloorDistTolerance; // 0x2f8(0x04)
	Unknown PostPhysicsTickFunction; // 0x148(0x30)
	float MinTimeBetweenTimeStampResets; // 0x5b0(0x04)
	Unknown ClientAutonomuousBase; // 0x4f0(0x08)
	Unknown CurrentRootMotion; // 0x570(0x38)
	Unknown RootMotionParams; // 0x5e0(0x40)
	Unknown AnimRootMotionVelocity; // 0x2c4(0x0c)
	float BlockingHit_SlideAccelerator; // 0x628(0x04)
	Unknown BlockingPhysMaterial; // 0x4b0(0x08)
	Unknown MeshComp; // 0x310(0x08)
	Unknown SceneComponent; // 0x318(0x08)
	Unknown CaptureComponent2D; // 0x320(0x08)
	Unknown ObjectReferenceList; // 0x2c0(0x10)
	char bIsGlobalAsyncScanEnvironment; // 0x2d0(0x01)
	char bShouldGuessTypeAndName; // 0x2d1(0x01)
	char bShouldUseSynchronousLoad; // 0x2d2(0x01)
	char bIsLoadingFromPakFiles; // 0x2d3(0x01)
	char bShouldAcquireMissingChunksOnLoad; // 0x2d4(0x01)
	char bOnlyCookProductionAssets; // 0x2d5(0x01)
	char bIsBulkScanning; // 0x2d6(0x01)
	char bIsPrimaryAssetDirectoryCurrent; // 0x2d7(0x01)
	char bIsManagementDatabaseCurrent; // 0x2d8(0x01)
	char bUpdateManagementDatabaseAfterScan; // 0x2d9(0x01)
	char bIncludeOnlyOnDiskAssets; // 0x2da(0x01)
	int32_t NumberOfSpawnedNotifications; // 0x2dc(0x04)
	Unknown ShapeBodySetup; // 0x4b8(0x08)
	Unknown AreaClass; // 0x4c0(0x08)
	Unknown ShapeColor; // 0x4c8(0x04)
	char bDrawOnlyIfSelected; // 0x4cc(0x01)
	char bShouldCollideWhenPlacing; // 0x4cc(0x01)
	char bDynamicObstacle; // 0x4cc(0x01)
	Unknown BoxExtent; // 0x4d0(0x0c)
	float LineThickness; // 0x4dc(0x04)
	float FieldOfView; // 0x238(0x04)
	float OrthoWidth; // 0x23c(0x04)
	float OrthoNearClipPlane; // 0x240(0x04)
	float OrthoFarClipPlane; // 0x244(0x04)
	float AspectRatio; // 0x248(0x04)
	char bConstrainAspectRatio; // 0x24c(0x01)
	char bUseFieldOfViewForLOD; // 0x24c(0x01)
	char bLockToHmd; // 0x254(0x01)
	char bUsePawnControlRotation; // 0x254(0x01)
	Unknown ProjectionMode; // 0x255(0x01)
	float PostProcessBlendWeight; // 0x290(0x04)
	Unknown PostProcessSettings; // 0x2c0(0x5c0)
	Unknown DebugCameraControllerRef; // 0x28(0x08)
	Unknown DebugCameraControllerClass; // 0x30(0x08)
	char bCausedByWorld; // 0x28(0x01)
	char bScaleMomentumByMass; // 0x28(0x01)
	char bRadialDamageVelChange; // 0x28(0x01)
	float DamageImpulse; // 0x2c(0x04)
	float DestructibleImpulse; // 0x30(0x04)
	float DestructibleDamageSpreadScale; // 0x34(0x04)
	float DamageFalloff; // 0x38(0x04)
	Unknown SpectatorControllerClass; // 0x928(0x08)
	Unknown SelfDemoNetDriver; // 0x930(0x08)
	Unknown RollbackNetStartupActors; // 0xa50(0x50)
	float CheckpointSaveMaxMSPerFrame; // 0xecc(0x04)
	Unknown MulticastRecordOptions; // 0xf00(0x10)
	char bIsLocalReplay; // 0xf60(0x01)
	Unknown SpectatorControllers; // 0xf68(0x10)
	int32_t ForcedLodModel; // 0x4e8(0x04)
	int32_t PreviousLODLevel; // 0x4ec(0x04)
	int32_t MinLOD; // 0x4f0(0x04)
	int32_t SubDivisionStepSize; // 0x4f4(0x04)
	Unknown StaticMesh; // 0x4f8(0x08)
	Unknown WireframeColorOverride; // 0x500(0x04)
	char bEvaluateWorldPositionOffset; // 0x504(0x01)
	char bOverrideWireframeColor; // 0x504(0x01)
	char bOverrideMinLod; // 0x504(0x01)
	char bOverrideNavigationExport; // 0x504(0x01)
	char bForceNavigationObstacle; // 0x504(0x01)
	char bDisallowMeshPaintPerInstance; // 0x504(0x01)
	char bIgnoreInstanceForTextureStreaming; // 0x504(0x01)
	char bOverrideLightMapRes; // 0x504(0x01)
	char bCastDistanceFieldIndirectShadow; // 0x505(0x01)
	char bOverrideDistanceFieldSelfShadowBias; // 0x505(0x01)
	char bUseSubDivisions; // 0x505(0x01)
	char bUseDefaultCollision; // 0x505(0x01)
	char bReverseCulling; // 0x505(0x01)
	int32_t OverriddenLightMapRes; // 0x508(0x04)
	float DistanceFieldIndirectShadowMinVisibility; // 0x50c(0x04)
	float DistanceFieldSelfShadowBias; // 0x510(0x04)
	float StreamingDistanceMultiplier; // 0x514(0x04)
	Unknown LODData; // 0x518(0x10)
	Unknown StreamingTextureData; // 0x528(0x10)
	Unknown LightmassSettings; // 0x538(0x18)
	float MaxDeltaTime; // 0xde8(0x04)
	float ServerFlushLogInterval; // 0xdec(0x04)
	Unknown GameInstance; // 0xdf0(0x08)
	Unknown ReplayListItemInfos; // 0x28(0x10)
	struct FMulticastInlineDelegate OnEnumerateReplayListCompleteEvent; // 0x38(0x10)
	struct FMulticastInlineDelegate OnDeleteReplayCompleteEvent; // 0x48(0x10)
	struct FMulticastInlineDelegate OnKeepAndDeleteOldetsReplaysCompleteEvent; // 0x58(0x10)
	struct FMulticastInlineDelegate OnKeepAndDeleteOldVersionReplaysCompleteEvent; // 0x68(0x10)
	Unknown SelfGameInstance; // 0x80(0x08)
	char bLoadingWidgetVisible; // 0x88(0x01)
	Unknown LocalPlayers; // 0xb8(0x10)
	Unknown OnlineSession; // 0xc8(0x08)
	Unknown ReferencedObjects; // 0xd0(0x10)
	int32_t MaxSpectators; // 0x310(0x04)
	int32_t MaxPlayers; // 0x314(0x04)
	int32_t MaxPartySize; // 0x318(0x04)
	Unknown MaxSplitscreensPerConnection; // 0x31c(0x01)
	char bRequiresPushToTalk; // 0x31d(0x01)
	struct FName SessionName; // 0x320(0x08)
	Unknown PerInstanceSMData; // 0x550(0x10)
	int32_t NumCustomDataFloats; // 0x560(0x04)
	Unknown PerInstanceSMCustomData; // 0x568(0x10)
	char bMergeCollision; // 0x578(0x01)
	int32_t InstancingRandomSeed; // 0x57c(0x04)
	int32_t InstanceStartCullDistance; // 0x580(0x04)
	int32_t InstanceEndCullDistance; // 0x584(0x04)
	int8_t CulldistanceType; // 0x588(0x01)
	float MinScreenSizeScale; // 0x58c(0x04)
	Unknown InstanceBodiesSplitRatio; // 0x590(0x01)
	Unknown InstanceReorderTable; // 0x598(0x10)
	int32_t NumPendingLightmaps; // 0x604(0x04)
	Unknown CachedMappings; // 0x608(0x10)
	Unknown SortedInstances; // 0x628(0x10)
	int32_t NumBuiltInstances; // 0x638(0x04)
	Unknown BuiltInstanceBounds; // 0x640(0x1c)
	Unknown UnbuiltInstanceBounds; // 0x65c(0x1c)
	Unknown UnbuiltInstanceBoundsList; // 0x678(0x10)
	char bEnableDensityScaling; // 0x688(0x01)
	int32_t OcclusionLayerNumNodes; // 0x690(0x04)
	Unknown CacheMeshExtendedBounds; // 0x694(0x1c)
	char bDisableCollision; // 0x6b0(0x01)
	int32_t InstanceCountToRender; // 0x6b4(0x04)
	struct FMulticastInlineDelegate OnReplayPauseEvent; // 0x6f0(0x10)
	struct FMulticastInlineDelegate OnReplayJumpEvent; // 0x700(0x10)
	struct FMulticastInlineDelegate OnReplayJumpCompleteEvent; // 0x710(0x10)
	struct FString PlayerCameraManagerClassName; // 0x7a8(0x10)
	struct FString SpectatorPawnClassName; // 0x7b8(0x10)
	struct FMulticastInlineDelegate ChangeViewModeDelegate; // 0x7c8(0x10)
	struct FMulticastInlineDelegate ChangeCameraTypeDelegate; // 0x7d8(0x10)
	struct FMulticastInlineDelegate ChangeCameraTypeByNetGuidDelegate; // 0x7e8(0x10)
	Unknown WidgetInfoArray; // 0x800(0x10)
	Unknown ReplayWidgetMap; // 0x810(0x50)
	Unknown KillcamComponent; // 0x8c0(0x08)
	Unknown TargetcamComponent; // 0x8c8(0x08)
	Unknown pTargetPlayerInRecording; // 0x8e0(0x08)
	struct FString AfterKillcamHUDClassName; // 0x8e8(0x10)
	Unknown AfterKillcamHUDClass; // 0x8f8(0x08)
	struct FString ReplayHUDClassName; // 0x910(0x10)
	Unknown ReplayHUDClass; // 0x920(0x08)
	float BaseTurnRate; // 0x380(0x04)
	float BaseLookUpRate; // 0x384(0x04)
	Unknown MovementComponent; // 0x388(0x08)
	Unknown CollisionComponent; // 0x390(0x08)
	Unknown MeshComponent; // 0x398(0x08)
	char bAddDefaultMovementBindings; // 0x3a0(0x01)
	float Friction; // 0x28(0x04)
	Unknown FrictionCombineMode; // 0x2c(0x01)
	char bOverrideFrictionCombineMode; // 0x2d(0x01)
	float Restitution; // 0x30(0x04)
	Unknown RestitutionCombineMode; // 0x34(0x01)
	char bOverrideRestitutionCombineMode; // 0x35(0x01)
	float Density; // 0x38(0x04)
	float RaiseMassToPower; // 0x3c(0x04)
	float DestructibleDamageThresholdScale; // 0x40(0x04)
	Unknown PhysicalMaterialProperty; // 0x48(0x08)
	Unknown SurfaceType; // 0x50(0x01)
	float TireFrictionScale; // 0x54(0x04)
	Unknown TireFrictionScales; // 0x58(0x10)
	Unknown PCOwner; // 0x310(0x08)
	Unknown TransformComponent; // 0x318(0x08)
	float DefaultFOV; // 0x328(0x04)
	float DefaultOrthoWidth; // 0x330(0x04)
	float DefaultAspectRatio; // 0x338(0x04)
	Unknown CameraCache; // 0x380(0x660)
	Unknown LastFrameCameraCache; // 0x9e0(0x660)
	Unknown ViewTarget; // 0x1040(0x670)
	Unknown PendingViewTarget; // 0x16b0(0x670)
	Unknown CameraCachePrivate; // 0x1d50(0x660)
	Unknown LastFrameCameraCachePrivate; // 0x23b0(0x660)
	Unknown ModifierList; // 0x2a10(0x10)
	Unknown DefaultModifiers; // 0x2a20(0x10)
	float FreeCamDistance; // 0x2a30(0x04)
	Unknown FreeCamOffset; // 0x2a34(0x0c)
	Unknown ViewTargetOffset; // 0x2a40(0x0c)
	Unknown CameraLensEffects; // 0x2a60(0x10)
	Unknown CachedCameraShakeMod; // 0x2a70(0x08)
	Unknown AnimInstPool; // 0x2a78(0x40)
	Unknown PostProcessBlendCache; // 0x2ab8(0x10)
	Unknown ActiveAnims; // 0x2ad8(0x10)
	Unknown FreeAnims; // 0x2ae8(0x10)
	Unknown AnimCameraActor; // 0x2af8(0x08)
	char bIsOrthographic; // 0x2b00(0x01)
	char bDefaultConstrainAspectRatio; // 0x2b00(0x01)
	char bClientSimulatingViewTarget; // 0x2b00(0x01)
	char bUseClientSideCameraUpdates; // 0x2b00(0x01)
	char bGameCameraCutThisFrame; // 0x2b01(0x01)
	float ViewPitchMin; // 0x2b04(0x04)
	float ViewPitchMax; // 0x2b08(0x04)
	float ViewYawMin; // 0x2b0c(0x04)
	float ViewYawMax; // 0x2b10(0x04)
	float ViewRollMin; // 0x2b14(0x04)
	float ViewRollMax; // 0x2b18(0x04)
	float ServerUpdateCameraTimeout; // 0x2b20(0x04)
	Unknown SelfPlayerState; // 0x310(0x08)
	float Score; // 0x318(0x04)
	int32_t PlayerId; // 0x31c(0x04)
	Unknown Ping; // 0x320(0x01)
	char bShouldUpdateReplicatedPing; // 0x322(0x01)
	char bIsSpectator; // 0x322(0x01)
	char bOnlySpectator; // 0x322(0x01)
	char bIsABot; // 0x322(0x01)
	char bIsInactive; // 0x322(0x01)
	char bFromPreviousLevel; // 0x322(0x01)
	int32_t StartTime; // 0x324(0x04)
	Unknown EngineMessageClass; // 0x328(0x08)
	struct FString SavedNetworkAddress; // 0x338(0x10)
	Unknown UniqueID; // 0x348(0x28)
	Unknown PawnPrivate; // 0x378(0x08)
	struct FString PlayerNamePrivate; // 0x3f8(0x10)
	Unknown PrimitiveRenderMode; // 0x238(0x01)
	char bTonemapPropagateAlpha; // 0x239(0x01)
	char bUsePostProcessMaterial; // 0x239(0x01)
	char bUseDirectionalLights; // 0x239(0x01)
	Unknown CaptureSource; // 0x23a(0x01)
	char bCaptureEveryFrame; // 0x23b(0x01)
	char bCaptureOnMovement; // 0x23b(0x01)
	char bAlwaysPersistRenderingState; // 0x23c(0x01)
	Unknown HiddenComponents; // 0x240(0x10)
	Unknown HiddenActors; // 0x250(0x10)
	Unknown ShowOnlyComponents; // 0x260(0x10)
	Unknown ShowOnlyActors; // 0x270(0x10)
	float LODDistanceFactor; // 0x280(0x04)
	float MaxViewDistanceOverride; // 0x284(0x04)
	int32_t CaptureSortPriority; // 0x288(0x04)
	char bUseRayTracingIfEnabled; // 0x28c(0x01)
	Unknown ShowFlagSettings; // 0x290(0x10)
	struct FString ProfilingEventName; // 0x2b0(0x10)
	Unknown ProjectionType; // 0x2d0(0x01)
	float FOVAngle; // 0x2d4(0x04)
	float OrthoWidth; // 0x2d8(0x04)
	Unknown TextureTarget; // 0x2e0(0x08)
	Unknown CompositeMode; // 0x2e8(0x01)
	Unknown PostProcessSettings; // 0x2f0(0x5c0)
	float PostProcessBlendWeight; // 0x8b0(0x04)
	char bOverride_CustomNearClippingPlane; // 0x8b4(0x01)
	float CustomNearClippingPlane; // 0x8b8(0x04)
	char bUseCustomProjectionMatrix; // 0x8bc(0x01)
	Unknown CustomProjectionMatrix; // 0x8c0(0x40)
	char bEnableClipPlane; // 0x900(0x01)
	Unknown ClipPlaneBase; // 0x904(0x0c)
	Unknown ClipPlaneNormal; // 0x910(0x0c)
	char bCameraCutThisFrame; // 0x91c(0x01)
	char bConsiderUnrenderedOpaquePixelAsFullyTranslucent; // 0x91c(0x01)
	char bDisableFlipCopyGLES; // 0x920(0x01)
	Unknown ArrowColor; // 0x4b8(0x04)
	float ArrowSize; // 0x4bc(0x04)
	float ScreenSize; // 0x4c0(0x04)
	char bIsScreenSizeScaled; // 0x4c4(0x01)
	char bTreatAsASprite; // 0x4c4(0x01)
	Unknown CapsuleComponent; // 0x318(0x08)
	Unknown GoodSprite; // 0x320(0x08)
	Unknown BadSprite; // 0x328(0x08)
	char bIsPIEPlayerStart; // 0x330(0x01)
	struct FName PlayerStartTag; // 0x338(0x08)
	float InitialSpeed; // 0xf0(0x04)
	float MaxSpeed; // 0xf4(0x04)
	char bRotationFollowsVelocity; // 0xf8(0x01)
	char bRotationRemainsVertical; // 0xf8(0x01)
	char bShouldBounce; // 0xf8(0x01)
	char bInitialVelocityInLocalSpace; // 0xf8(0x01)
	char bForceSubStepping; // 0xf8(0x01)
	char bSimulationEnabled; // 0xf8(0x01)
	char bSweepCollision; // 0xf8(0x01)
	char bIsHomingProjectile; // 0xf8(0x01)
	char bBounceAngleAffectsFriction; // 0xf9(0x01)
	char bIsSliding; // 0xf9(0x01)
	char bInterpMovement; // 0xf9(0x01)
	char bInterpRotation; // 0xf9(0x01)
	float PreviousHitTime; // 0xfc(0x04)
	Unknown PreviousHitNormal; // 0x100(0x0c)
	float ProjectileGravityScale; // 0x10c(0x04)
	float Buoyancy; // 0x110(0x04)
	float Bounciness; // 0x114(0x04)
	float Friction; // 0x118(0x04)
	float BounceVelocityStopSimulatingThreshold; // 0x11c(0x04)
	float MinFrictionFraction; // 0x120(0x04)
	struct FMulticastInlineDelegate OnProjectileBounce; // 0x128(0x10)
	struct FMulticastInlineDelegate OnProjectileStop; // 0x138(0x10)
	float HomingAccelerationMagnitude; // 0x148(0x04)
	Unknown HomingTargetComponent; // 0x14c(0x08)
	float MaxSimulationTimeStep; // 0x154(0x04)
	int32_t MaxSimulationIterations; // 0x158(0x04)
	int32_t BounceAdditionalIterations; // 0x15c(0x04)
	float InterpLocationTime; // 0x160(0x04)
	float InterpRotationTime; // 0x164(0x04)
	float InterpLocationMaxLagDistance; // 0x168(0x04)
	float InterpLocationSnapToTargetDistance; // 0x16c(0x04)
	char bUseVSync; // 0x28(0x01)
	char bIsSmoothFrameRate; // 0x29(0x01)
	char bUseDynamicResolution; // 0x2a(0x01)
	uint32_t ResolutionSizeX; // 0x80(0x04)
	uint32_t ResolutionSizeY; // 0x84(0x04)
	uint32_t LastUserConfirmedResolutionSizeX; // 0x88(0x04)
	uint32_t LastUserConfirmedResolutionSizeY; // 0x8c(0x04)
	int32_t WindowPosX; // 0x90(0x04)
	int32_t WindowPosY; // 0x94(0x04)
	int32_t FullscreenMode; // 0x98(0x04)
	int32_t LastConfirmedFullscreenMode; // 0x9c(0x04)
	int32_t PreferredFullscreenMode; // 0xa0(0x04)
	uint32_t Version; // 0xa4(0x04)
	int32_t AudioQualityLevel; // 0xa8(0x04)
	int32_t LastConfirmedAudioQualityLevel; // 0xac(0x04)
	float FrameRateLimit; // 0xb0(0x04)
	float LobbyFrameRateLimit; // 0xb4(0x04)
	int32_t DesiredScreenWidth; // 0xbc(0x04)
	char bUseDesiredScreenHeight; // 0xc0(0x01)
	int32_t DesiredScreenHeight; // 0xc4(0x04)
	int32_t LastUserConfirmedDesiredScreenWidth; // 0xc8(0x04)
	int32_t LastUserConfirmedDesiredScreenHeight; // 0xcc(0x04)
	float LastRecommendedScreenWidth; // 0xd0(0x04)
	float LastRecommendedScreenHeight; // 0xd4(0x04)
	float LastCPUBenchmarkResult; // 0xd8(0x04)
	float LastGPUBenchmarkResult; // 0xdc(0x04)
	Unknown LastCPUBenchmarkSteps; // 0xe0(0x10)
	Unknown LastGPUBenchmarkSteps; // 0xf0(0x10)
	struct FString LastCPUBrand; // 0x100(0x10)
	struct FString LastGPUBrand; // 0x110(0x10)
	int32_t LastInstallStorageType; // 0x120(0x04)
	int64_t LastTotalGraphicsMemory; // 0x128(0x08)
	float LastGPUBenchmarkMultiplier; // 0x130(0x04)
	char bUseHDRDisplayOutput; // 0x134(0x01)
	int32_t HDRDisplayOutputNits; // 0x138(0x04)
	char ShowHUD; // 0x13c(0x01)
	struct FMulticastInlineDelegate OnGameUserSettingsUINeedsUpdate; // 0x140(0x10)
	float CapsuleHalfHeight; // 0x4d0(0x04)
	float CapsuleRadius; // 0x4d4(0x04)
	Unknown ViewportConsole; // 0x40(0x08)
	Unknown DebugProperties; // 0x48(0x10)
	int32_t MaxSplitscreenPlayers; // 0x68(0x04)
	Unknown World; // 0x78(0x08)
	Unknown GameInstance; // 0x80(0x08)
	float TerminalVelocity; // 0x348(0x04)
	int32_t Priority; // 0x34c(0x04)
	float FluidFriction; // 0x350(0x04)
	char bWaterVolume; // 0x354(0x01)
	char bPhysicsOnContact; // 0x354(0x01)
	int32_t VisibilityCellSize; // 0x318(0x04)
	Unknown VisibilityAggressiveness; // 0x31c(0x01)
	char bPrecomputeVisibility; // 0x31d(0x01)
	char bPlaceCellsOnlyAlongCameraTracks; // 0x31d(0x01)
	char bEnableWorldBoundsChecks; // 0x31d(0x01)
	char bEnableNavigationSystem; // 0x31d(0x01)
	char bEnableAISystem; // 0x31d(0x01)
	char bEnableWorldComposition; // 0x31d(0x01)
	char bUseClientSideLevelStreamingVolumes; // 0x31d(0x01)
	char bEnableWorldOriginRebasing; // 0x31d(0x01)
	char bWorldGravitySet; // 0x31e(0x01)
	char bGlobalGravitySet; // 0x31e(0x01)
	char bMinimizeBSPSections; // 0x31e(0x01)
	char bForceNoPrecomputedLighting; // 0x31e(0x01)
	char bHighPriorityLoading; // 0x31e(0x01)
	char bHighPriorityLoadingLocal; // 0x31e(0x01)
	char bOverrideDefaultBroadphaseSettings; // 0x31e(0x01)
	Unknown NavigationSystemConfig; // 0x320(0x08)
	Unknown NavigationSystemConfigOverride; // 0x328(0x08)
	float WorldToMeters; // 0x330(0x04)
	float KillZ; // 0x334(0x04)
	Unknown KillZDamageType; // 0x338(0x08)
	float WorldGravityZ; // 0x340(0x04)
	float GlobalGravityZ; // 0x344(0x04)
	Unknown DefaultPhysicsVolumeClass; // 0x348(0x08)
	Unknown PhysicsCollisionHandlerClass; // 0x350(0x08)
	Unknown DefaultGameMode; // 0x358(0x08)
	Unknown GameNetworkManagerClass; // 0x360(0x08)
	int32_t PackedLightAndShadowMapTextureSize; // 0x368(0x04)
	Unknown DefaultColorScale; // 0x36c(0x0c)
	float DefaultMaxDistanceFieldOcclusionDistance; // 0x378(0x04)
	float GlobalDistanceFieldViewDistance; // 0x37c(0x04)
	float DynamicIndirectShadowsSelfShadowingIntensity; // 0x380(0x04)
	Unknown DefaultReverbSettings; // 0x388(0x20)
	Unknown DefaultAmbientZoneSettings; // 0x3a8(0x24)
	float MonoCullingDistance; // 0x3cc(0x04)
	Unknown DefaultBaseSoundMix; // 0x3d0(0x08)
	float TimeDilation; // 0x3d8(0x04)
	float MatineeTimeDilation; // 0x3dc(0x04)
	float DemoPlayTimeDilation; // 0x3e0(0x04)
	float MinGlobalTimeDilation; // 0x3e4(0x04)
	float MaxGlobalTimeDilation; // 0x3e8(0x04)
	float MinUndilatedFrameTime; // 0x3ec(0x04)
	float MaxUndilatedFrameTime; // 0x3f0(0x04)
	Unknown BroadphaseSettings; // 0x3f4(0x40)
	Unknown Pauser; // 0x438(0x08)
	Unknown ReplicationViewers; // 0x440(0x10)
	Unknown AssetUserData; // 0x450(0x10)
	Unknown PauserPlayerState; // 0x460(0x08)
	int32_t MaxNumberOfBookmarks; // 0x468(0x04)
	Unknown DefaultBookmarkClass; // 0x470(0x08)
	Unknown BookmarkArray; // 0x478(0x10)
	Unknown LastBookmarkClass; // 0x488(0x08)
	char bUseInstancedStaticCollision; // 0x490(0x01)
	char bDebug; // 0x28(0x01)
	char bExclusive; // 0x28(0x01)
	Unknown Priority; // 0x2c(0x01)
	Unknown CameraOwner; // 0x30(0x08)
	float AlphaInTime; // 0x38(0x04)
	float AlphaOutTime; // 0x3c(0x04)
	float ALPHA; // 0x40(0x04)
	Unknown LightComponent; // 0x310(0x08)
	char bEnabled; // 0x318(0x01)
	Unknown SubsurfaceProfile; // 0x38(0x08)
	Unknown LightmassSettings; // 0x50(0x10)
	Unknown TextureStreamingData; // 0x60(0x10)
	Unknown AssetUserData; // 0x70(0x10)
	Unknown PhysMaterial; // 0x88(0x08)
	Unknown PhysicalMaterialMap; // 0x90(0x40)
	Unknown Parent; // 0xd0(0x08)
	char bHasStaticPermutationResource; // 0xd8(0x01)
	char bOverrideSubsurfaceProfile; // 0xd8(0x01)
	Unknown ScalarParameterValues; // 0xe0(0x10)
	Unknown VectorParameterValues; // 0xf0(0x10)
	Unknown TextureParameterValues; // 0x100(0x10)
	Unknown RuntimeVirtualTextureParameterValues; // 0x110(0x10)
	Unknown FontParameterValues; // 0x120(0x10)
	Unknown BasePropertyOverrides; // 0x130(0x08)
	Unknown StaticParameters; // 0x148(0x40)
	Unknown CachedLayerParameters; // 0x188(0x1a0)
	Unknown CachedReferencedTextures; // 0x328(0x10)
	Unknown PhysMaterialMask; // 0x408(0x08)
	int32_t NumReplicatedProperties; // 0x2d0(0x04)
	char bHasNativizedParent; // 0x2d4(0x01)
	char bHasCookedComponentInstancingData; // 0x2d4(0x01)
	Unknown DynamicBindingObjects; // 0x2d8(0x10)
	Unknown ComponentTemplates; // 0x2e8(0x10)
	Unknown Timelines; // 0x2f8(0x10)
	Unknown ComponentClassOverrides; // 0x308(0x10)
	Unknown SimpleConstructionScript; // 0x318(0x08)
	Unknown InheritableComponentHandler; // 0x320(0x08)
	Unknown UberGraphFramePointerProperty; // 0x328(0x08)
	Unknown UberGraphFunction; // 0x338(0x08)
	Unknown CookedComponentInstancingData; // 0x340(0x50)
	Unknown AutoActivateForPlayer; // 0x310(0x01)
	Unknown CameraComponent; // 0x318(0x08)
	Unknown SceneComponent; // 0x320(0x08)
	char bConstrainAspectRatio; // 0x330(0x01)
	float AspectRatio; // 0x334(0x04)
	float FOVAngle; // 0x338(0x04)
	float PostProcessBlendWeight; // 0x33c(0x04)
	Unknown PostProcessSettings; // 0x340(0x5c0)
	Unknown SoundClassObject; // 0x28(0x08)
	char bDebug; // 0x30(0x01)
	char bOverrideConcurrency; // 0x30(0x01)
	char bOutputToBusOnly; // 0x30(0x01)
	char bHasDelayNode; // 0x30(0x01)
	char bHasConcatenatorNode; // 0x30(0x01)
	char bBypassVolumeScaleForPriority; // 0x30(0x01)
	Unknown VirtualizationMode; // 0x31(0x01)
	Unknown ConcurrencySet; // 0x88(0x50)
	Unknown ConcurrencyOverrides; // 0xd8(0x20)
	float Duration; // 0xf8(0x04)
	float MaxDistance; // 0xfc(0x04)
	float TotalSamples; // 0x100(0x04)
	float Priority; // 0x104(0x04)
	Unknown AttenuationSettings; // 0x108(0x08)
	Unknown Modulation; // 0x110(0x10)
	Unknown SoundSubmixObject; // 0x120(0x08)
	Unknown SoundSubmixSends; // 0x128(0x10)
	Unknown SourceEffectChain; // 0x138(0x08)
	Unknown BusSends; // 0x140(0x10)
	Unknown PreEffectBusSends; // 0x150(0x10)
	int32_t CompressionQuality; // 0x160(0x04)
	int32_t StreamingPriority; // 0x164(0x04)
	Unknown SampleRateQuality; // 0x168(0x01)
	Unknown SoundGroup; // 0x16a(0x01)
	char bLooping; // 0x16b(0x01)
	char bStreaming; // 0x16b(0x01)
	char bSeekableStreaming; // 0x16b(0x01)
	Unknown LoadingBehavior; // 0x16c(0x01)
	char bMature; // 0x16d(0x01)
	char bManualWordWrap; // 0x16d(0x01)
	char bSingleLine; // 0x16d(0x01)
	char bIsAmbisonics; // 0x16e(0x01)
	Unknown FrequenciesToAnalyze; // 0x170(0x10)
	Unknown CookedSpectralTimeData; // 0x180(0x10)
	Unknown CookedEnvelopeTimeData; // 0x190(0x10)
	int32_t InitialChunkSize; // 0x1a0(0x04)
	struct FString SpokenText; // 0x1e8(0x10)
	float SubtitlePriority; // 0x1f8(0x04)
	float Volume; // 0x1fc(0x04)
	float Pitch; // 0x200(0x04)
	int32_t NumChannels; // 0x204(0x04)
	int32_t SampleRate; // 0x208(0x04)
	Unknown Subtitles; // 0x218(0x10)
	Unknown Curves; // 0x228(0x08)
	Unknown InternalCurves; // 0x230(0x08)
	Unknown SkeletonGeneratedClass; // 0x28(0x08)
	Unknown GeneratedClass; // 0x30(0x08)
	char bLegacyNeedToPurgeSkelRefs; // 0x38(0x01)
	Unknown BlueprintGuid; // 0x3c(0x10)
	Unknown ParentClass; // 0x50(0x08)
	Unknown BlueprintType; // 0x58(0x01)
	char bRecompileOnLoad; // 0x59(0x01)
	char bHasBeenRegenerated; // 0x59(0x01)
	char bIsRegeneratingOnLoad; // 0x59(0x01)
	int32_t BlueprintSystemVersion; // 0x5c(0x04)
	Unknown SimpleConstructionScript; // 0x60(0x08)
	Unknown ComponentTemplates; // 0x68(0x10)
	Unknown Timelines; // 0x78(0x10)
	Unknown ComponentClassOverrides; // 0x88(0x10)
	Unknown InheritableComponentHandler; // 0x98(0x08)
	Unknown SelfChannel; // 0x30(0x08)
	Unknown Connection; // 0x38(0x08)
	Unknown SelfActorChannel; // 0xa0(0x08)
	Unknown Actor; // 0xa8(0x08)
	Unknown CreateSubObjects; // 0x198(0x10)
	Unknown Skeleton; // 0x38(0x08)
	Unknown MetaData; // 0x60(0x10)
	Unknown AssetUserData; // 0x70(0x10)
	char bRotationBlendInMeshSpace; // 0x88(0x01)
	float AnimLength; // 0x8c(0x04)
	Unknown InterpolationParam; // 0x90(0x18)
	float TargetWeightInterpolationSpeedPerSec; // 0xa8(0x04)
	Unknown NotifyTriggerMode; // 0xac(0x01)
	Unknown PerBoneBlend; // 0xb0(0x10)
	int32_t SampleIndexWithMarkers; // 0xc0(0x04)
	Unknown SampleData; // 0xc8(0x10)
	Unknown GridSamples; // 0xd8(0x10)
	Unknown BlendParameters; // 0xe8(0x60)
	Unknown AxisToScaleAnimation; // 0x148(0x01)
	char bScaleAnimation; // 0x148(0x01)
	Unknown AISystemClassName; // 0x28(0x18)
	struct FName AISystemModuleName; // 0x40(0x08)
	char bInstantiateAISystemOnClient; // 0x50(0x01)
	Unknown AudioComponent; // 0x310(0x08)
	int32_t CompressCommandletVersion; // 0x38(0x04)
	Unknown KeyEndEffectorsMatchNameArray; // 0x40(0x10)
	char ForceRecompression; // 0x50(0x01)
	char bOnlyCheckForMissingSkeletalMeshes; // 0x51(0x01)
	char bForceBelowThreshold; // 0x52(0x01)
	char bFirstRecompressUsingCurrentOrDefault; // 0x53(0x01)
	char bRaiseMaxErrorToExisting; // 0x54(0x01)
	char bEnablePerformanceLog; // 0x55(0x01)
	char bStripAnimationDataOnDedicatedServer; // 0x56(0x01)
	char bTickAnimationOnSkeletalMeshInit; // 0x57(0x01)
	Unknown TargetSkeleton; // 0xa8(0x08)
	Unknown Groups; // 0xb0(0x10)
	char bUseMultiThreadedAnimationUpdate; // 0xc0(0x01)
	char bWarnAboutBlueprintUsage; // 0xc1(0x01)
	Unknown BakedStateMachines; // 0x3d0(0x10)
	Unknown TargetSkeleton; // 0x3e0(0x08)
	Unknown AnimNotifies; // 0x3e8(0x10)
	Unknown OrderedSavedPoseIndicesMap; // 0x3f8(0x50)
	Unknown SyncGroupNames; // 0x4c8(0x10)
	Unknown EvaluateGraphExposedInputs; // 0x4d8(0x10)
	Unknown GraphAssetPlayerInformation; // 0x4e8(0x50)
	Unknown GraphBlendOptions; // 0x538(0x50)
	struct FString Description; // 0x28(0x10)
	Unknown Codecs; // 0x28(0x10)
	Unknown BakedStateMachines; // 0x30(0x10)
	Unknown TargetSkeleton; // 0x40(0x08)
	Unknown AnimNotifies; // 0x48(0x10)
	Unknown OrderedSavedPoseIndicesMap; // 0x58(0x50)
	Unknown AnimBlueprintFunctions; // 0xa8(0x10)
	Unknown AnimBlueprintFunctionData; // 0xb8(0x10)
	Unknown AnimNodeProperties; // 0xc8(0x10)
	Unknown LinkedAnimGraphNodeProperties; // 0xe8(0x10)
	Unknown LinkedAnimLayerNodeProperties; // 0x108(0x10)
	Unknown PreUpdateNodeProperties; // 0x128(0x10)
	Unknown DynamicResetNodeProperties; // 0x148(0x10)
	Unknown StateMachineNodeProperties; // 0x168(0x10)
	Unknown InitializationNodeProperties; // 0x188(0x10)
	Unknown GraphNameAssetPlayers; // 0x1a8(0x50)
	Unknown SyncGroupNames; // 0x1f8(0x10)
	Unknown EvaluateGraphExposedInputs; // 0x208(0x10)
	Unknown GraphBlendOptions; // 0x218(0x50)
	Unknown Notifies; // 0x80(0x10)
	float SequenceLength; // 0x90(0x04)
	float RateScale; // 0x94(0x04)
	Unknown RawCurveData; // 0x98(0x10)
	Unknown AnimationTrack; // 0xa8(0x10)
	char bNeedsSkeleton; // 0x38(0x01)
	Unknown TranslationCompressionFormat; // 0x3c(0x01)
	Unknown RotationCompressionFormat; // 0x3d(0x01)
	Unknown ScaleCompressionFormat; // 0x3e(0x01)
	float MaxPosDiff; // 0x40(0x04)
	float MaxAngleDiff; // 0x44(0x04)
	float MaxScaleDiff; // 0x48(0x04)
	float MaxEffectorDiff; // 0x4c(0x04)
	float MinEffectorDiff; // 0x50(0x04)
	float EffectorDiffSocket; // 0x54(0x04)
	float ParentKeyScale; // 0x58(0x04)
	char bRetarget; // 0x5c(0x01)
	char bActuallyFilterLinearKeys; // 0x5c(0x01)
	float MaxZeroingThreshold; // 0x60(0x04)
	float MaxPosDiffBitwise; // 0x64(0x04)
	float MaxAngleDiffBitwise; // 0x68(0x04)
	float MaxScaleDiffBitwise; // 0x6c(0x04)
	Unknown AllowedRotationFormats; // 0x70(0x10)
	Unknown AllowedTranslationFormats; // 0x80(0x10)
	Unknown AllowedScaleFormats; // 0x90(0x10)
	char bResampleAnimation; // 0xa0(0x01)
	float ResampledFramerate; // 0xa4(0x04)
	int32_t MinKeysForResampling; // 0xa8(0x04)
	char bUseAdaptiveError; // 0xac(0x01)
	char bUseOverrideForEndEffectors; // 0xac(0x01)
	int32_t TrackHeightBias; // 0xb0(0x04)
	float ParentingDivisor; // 0xb4(0x04)
	float ParentingDivisorExponent; // 0xb8(0x04)
	char bUseAdaptiveError2; // 0xbc(0x01)
	float RotationErrorSourceRatio; // 0xc0(0x04)
	float TranslationErrorSourceRatio; // 0xc4(0x04)
	float ScaleErrorSourceRatio; // 0xc8(0x04)
	float MaxErrorPerTrackRatio; // 0xcc(0x04)
	float PerturbationProbeSize; // 0xd0(0x04)
	int32_t MinKeys; // 0x40(0x04)
	char bStartAtSecondKey; // 0x44(0x01)
	float MaxPosDiff; // 0x40(0x04)
	float MaxAngleDiff; // 0x44(0x04)
	float MaxScaleDiff; // 0x48(0x04)
	Unknown Codec; // 0x28(0x08)
	Unknown BlendIn; // 0xa8(0x30)
	float BlendInTime; // 0xd8(0x04)
	Unknown BlendOut; // 0xe0(0x30)
	float BlendOutTime; // 0x110(0x04)
	float BlendOutTriggerTime; // 0x114(0x04)
	struct FName SyncGroup; // 0x118(0x08)
	int32_t SyncSlotIndex; // 0x120(0x04)
	Unknown MarkerData; // 0x128(0x20)
	Unknown CompositeSections; // 0x148(0x10)
	Unknown SlotAnimTracks; // 0x158(0x10)
	Unknown BranchingPoints; // 0x168(0x10)
	char bEnableRootMotionTranslation; // 0x178(0x01)
	char bEnableRootMotionRotation; // 0x179(0x01)
	char bEnableAutoBlendOut; // 0x17a(0x01)
	Unknown RootMotionRootLock; // 0x17b(0x01)
	Unknown BranchingPointMarkers; // 0x180(0x10)
	Unknown BranchingPointStateNotifyIndices; // 0x190(0x10)
	Unknown TimeStretchCurve; // 0x1a0(0x28)
	struct FName TimeStretchCurveName; // 0x1c8(0x08)
	Unknown PSTemplate; // 0x38(0x08)
	Unknown LocationOffset; // 0x40(0x0c)
	Unknown RotationOffset; // 0x4c(0x0c)
	Unknown Scale; // 0x58(0x0c)
	char Attached; // 0x80(0x01)
	struct FName SocketName; // 0x84(0x08)
	Unknown Sound; // 0x38(0x08)
	float VolumeMultiplier; // 0x40(0x04)
	float PitchMultiplier; // 0x44(0x04)
	char bFollow; // 0x48(0x01)
	struct FName AttachName; // 0x4c(0x08)
	Unknown PSTemplate; // 0x30(0x08)
	struct FName SocketName; // 0x38(0x08)
	Unknown LocationOffset; // 0x40(0x0c)
	Unknown RotationOffset; // 0x4c(0x0c)
	char bDestroyAtEnd; // 0x58(0x01)
	Unknown PSTemplate; // 0x30(0x08)
	struct FName FirstSocketName; // 0x38(0x08)
	struct FName SecondSocketName; // 0x40(0x08)
	Unknown WidthScaleMode; // 0x48(0x01)
	struct FName WidthScaleCurve; // 0x4c(0x08)
	char bRecycleSpawnedSystems; // 0x54(0x01)
	int32_t NumFrames; // 0xa8(0x04)
	Unknown TrackToSkeletonMapTable; // 0xb0(0x10)
	Unknown BoneCompressionSettings; // 0xd0(0x08)
	Unknown CurveCompressionSettings; // 0xd8(0x08)
	Unknown AdditiveAnimType; // 0x150(0x01)
	Unknown RefPoseType; // 0x151(0x01)
	Unknown RefPoseSeq; // 0x158(0x08)
	int32_t RefFrameIndex; // 0x160(0x04)
	struct FName RetargetSource; // 0x164(0x08)
	Unknown Interpolation; // 0x16c(0x01)
	char bEnableRootMotion; // 0x16d(0x01)
	Unknown RootMotionRootLock; // 0x16e(0x01)
	char bForceRootLock; // 0x16f(0x01)
	char bUseNormalizedRootMotionScale; // 0x170(0x01)
	char bRootMotionSettingsCopiedFromMontage; // 0x171(0x01)
	Unknown AuthoredSyncMarkers; // 0x178(0x10)
	char bAnimRotationOnly; // 0x28(0x01)
	Unknown TrackBoneNames; // 0x30(0x10)
	Unknown LinkupCache; // 0x40(0x10)
	Unknown BoneUseAnimTranslation; // 0x50(0x10)
	Unknown ForceUseMeshTranslation; // 0x60(0x10)
	Unknown UseTranslationBoneNames; // 0x70(0x10)
	Unknown ForceMeshTranslationBoneNames; // 0x80(0x10)
	struct FName PreviewSkelMeshName; // 0x90(0x08)
	struct FName BestRatioSkelMeshName; // 0x98(0x08)
	Unknown CurrentAsset; // 0x268(0x08)
	struct FDelegate PostEvaluateAnimEvent; // 0x270(0x10)
	int32_t NumFrames; // 0xa8(0x04)
	Unknown Interpolation; // 0xac(0x01)
	struct FName RetargetSource; // 0xb0(0x08)
	Unknown BoneCompressionSettings; // 0xc8(0x08)
	Unknown CurveCompressionSettings; // 0xd0(0x08)
	char bEnableRootMotion; // 0xd8(0x01)
	Unknown RootMotionRootLock; // 0xd9(0x01)
	char bForceRootLock; // 0xda(0x01)
	char bUseNormalizedRootMotionScale; // 0xdb(0x01)
	Unknown Object; // 0x28(0x08)
	Unknown Exporter; // 0x30(0x08)
	struct FString Filename; // 0x38(0x10)
	char bSelected; // 0x48(0x01)
	char bReplaceIdentical; // 0x49(0x01)
	char bPrompt; // 0x4a(0x01)
	char bAutomated; // 0x4b(0x01)
	char bUseFileArchive; // 0x4c(0x01)
	char bWriteEmptyFiles; // 0x4d(0x01)
	Unknown IgnoreObjectList; // 0x50(0x10)
	Unknown options; // 0x60(0x08)
	Unknown Errors; // 0x68(0x10)
	Unknown PrimaryAssetTypesToScan; // 0x38(0x10)
	Unknown DirectoriesToExclude; // 0x48(0x10)
	Unknown PrimaryAssetRules; // 0x58(0x10)
	Unknown CustomPrimaryAssetRules; // 0x68(0x10)
	char bOnlyCookProductionAssets; // 0x78(0x01)
	char bShouldManagerDetermineTypeAndName; // 0x79(0x01)
	char bShouldGuessTypeAndNameInEditor; // 0x7a(0x01)
	char bShouldAcquireMissingChunksOnLoad; // 0x7b(0x01)
	Unknown PrimaryAssetIdRedirects; // 0x80(0x10)
	Unknown PrimaryAssetTypeRedirects; // 0x90(0x10)
	Unknown AssetPathRedirects; // 0xa0(0x10)
	Unknown MetaDataTagsForAssetRegistry; // 0xb0(0x50)
	char bUsePathExcludedFromScan; // 0x100(0x01)
	char bRemoveRedundantDirectroyChunks; // 0x101(0x01)
	Unknown MappedAssets; // 0x28(0x10)
	struct FMulticastInlineDelegate Completed; // 0x30(0x10)
	Unknown SaveGameObject; // 0x60(0x08)
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)
	struct FMulticastInlineDelegate Completed; // 0x78(0x10)
	Unknown AtmosphericFogComponent; // 0x310(0x08)
	float SunMultiplier; // 0x238(0x04)
	float FogMultiplier; // 0x23c(0x04)
	float DensityMultiplier; // 0x240(0x04)
	float DensityOffset; // 0x244(0x04)
	float DistanceScale; // 0x248(0x04)
	float AltitudeScale; // 0x24c(0x04)
	float DistanceOffset; // 0x250(0x04)
	float GroundOffset; // 0x254(0x04)
	float StartDistance; // 0x258(0x04)
	float SunDiscScale; // 0x25c(0x04)
	float DefaultBrightness; // 0x260(0x04)
	Unknown DefaultLightColor; // 0x264(0x04)
	char bDisableSunDisk; // 0x268(0x01)
	char bAtmosphereAffectsSunIlluminance; // 0x268(0x01)
	char bDisableGroundScattering; // 0x268(0x01)
	Unknown PrecomputeParams; // 0x26c(0x2c)
	Unknown TransmittanceTexture; // 0x298(0x08)
	Unknown IrradianceTexture; // 0x2a0(0x08)
	Unknown DefaultSoundClassName; // 0x38(0x18)
	Unknown DefaultMediaSoundClassName; // 0x50(0x18)
	Unknown DefaultSoundConcurrencyName; // 0x68(0x18)
	Unknown DefaultBaseSoundMix; // 0x80(0x18)
	Unknown VoiPSoundClass; // 0x98(0x18)
	Unknown MasterSubmix; // 0xb0(0x18)
	Unknown ReverbSubmix; // 0xc8(0x18)
	Unknown EQSubmix; // 0xe0(0x18)
	Unknown VoiPSampleRate; // 0xf8(0x04)
	float DefaultReverbSendLevel; // 0xfc(0x04)
	int32_t MaximumConcurrentStreams; // 0x100(0x04)
	float GlobalMinPitchScale; // 0x104(0x04)
	float GlobalMaxPitchScale; // 0x108(0x04)
	Unknown QualityLevels; // 0x110(0x10)
	char bAllowPlayWhenSilent; // 0x120(0x01)
	char bDisableMasterEQ; // 0x120(0x01)
	char bAllowCenterChannel3DPanning; // 0x120(0x01)
	uint32_t NumStoppingSources; // 0x124(0x04)
	Unknown PanningMethod; // 0x128(0x01)
	Unknown MonoChannelUpmixMethod; // 0x129(0x01)
	struct FString DialogueFilenameFormat; // 0x130(0x10)
	float Priority; // 0x348(0x04)
	char bEnabled; // 0x34c(0x01)
	Unknown Settings; // 0x350(0x20)
	Unknown AmbientZoneSettings; // 0x370(0x24)
	Unknown ActorsToPoll; // 0x38(0x10)
	Unknown EngineTestModules; // 0x28(0x10)
	Unknown EditorTestModules; // 0x38(0x10)
	Unknown AutomationTestmap; // 0x48(0x18)
	Unknown EditorPerformanceTestMaps; // 0x60(0x10)
	Unknown AssetsToOpen; // 0x70(0x10)
	Unknown BuildPromotionTest; // 0x80(0x1f0)
	Unknown MaterialEditorPromotionTest; // 0x270(0x30)
	Unknown ParticleEditorPromotionTest; // 0x2a0(0x10)
	Unknown BlueprintEditorPromotionTest; // 0x2b0(0x30)
	Unknown TestLevelFolders; // 0x2e0(0x10)
	Unknown ExternalTools; // 0x2f0(0x10)
	Unknown ImportExportTestDefinitions; // 0x300(0x10)
	Unknown LaunchOnSettings; // 0x310(0x10)
	Unknown DefaultScreenshotResolution; // 0x320(0x08)
	float DefaultTimeToLive; // 0x30(0x04)
	float LockTimeAfterAvoid; // 0x34(0x04)
	float LockTimeAfterClean; // 0x38(0x04)
	float DeltaTimeToPredict; // 0x3c(0x04)
	float ArtificialRadiusExpansion; // 0x40(0x04)
	float TestHeightDifference; // 0x44(0x04)
	float HeightCheckMargin; // 0x48(0x04)
	Unknown BandwidthGenerator; // 0x310(0x20)
	Unknown Sprite; // 0x4b8(0x08)
	char bIsScreenSizeScaled; // 0x4c0(0x01)
	float ScreenSize; // 0x4c4(0x04)
	float U; // 0x4c8(0x04)
	float UL; // 0x4cc(0x04)
	float V; // 0x4d0(0x04)
	float VL; // 0x4d4(0x04)
	Unknown BoneTree; // 0x38(0x10)
	Unknown RefLocalPoses; // 0x48(0x10)
	Unknown VirtualBoneGuid; // 0x170(0x10)
	Unknown VirtualBones; // 0x180(0x10)
	Unknown Sockets; // 0x190(0x10)
	Unknown SmartNames; // 0x1f0(0x50)
	Unknown BlendProfiles; // 0x270(0x10)
	Unknown SlotGroups; // 0x280(0x10)
	Unknown AssetUserData; // 0x358(0x10)
	Unknown OwningSkeleton; // 0x30(0x08)
	Unknown ProfileEntries; // 0x38(0x10)
	struct FMulticastInlineDelegate ApplicationWillDeactivateDelegate; // 0x218(0x10)
	struct FMulticastInlineDelegate ApplicationHasReactivatedDelegate; // 0x228(0x10)
	struct FMulticastInlineDelegate ApplicationWillEnterBackgroundDelegate; // 0x238(0x10)
	struct FMulticastInlineDelegate ApplicationHasEnteredForegroundDelegate; // 0x248(0x10)
	struct FMulticastInlineDelegate ApplicationWillTerminateDelegate; // 0x258(0x10)
	struct FMulticastInlineDelegate ApplicationShouldUnloadResourcesDelegate; // 0x268(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedStartupArgumentsDelegate; // 0x278(0x10)
	struct FMulticastInlineDelegate ApplicationRegisteredForRemoteNotificationsDelegate; // 0x288(0x10)
	struct FMulticastInlineDelegate ApplicationRegisteredForUserNotificationsDelegate; // 0x298(0x10)
	struct FMulticastInlineDelegate ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x2a8(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedRemoteNotificationDelegate; // 0x2b8(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedLocalNotificationDelegate; // 0x2c8(0x10)
	struct FMulticastInlineDelegate ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x2d8(0x10)
	Unknown AggGeom; // 0x28(0x58)
	struct FName BoneName; // 0x80(0x08)
	Unknown PhysicsType; // 0x88(0x01)
	char bAlwaysFullAnimWeight; // 0x89(0x01)
	char bConsiderForBounds; // 0x89(0x01)
	char bMeshCollideAll; // 0x89(0x01)
	char bDoubleSidedGeometry; // 0x89(0x01)
	char bGenerateNonMirroredCollision; // 0x89(0x01)
	char bSharedCookedData; // 0x89(0x01)
	char bGenerateMirroredCollision; // 0x89(0x01)
	char bSupportUVsAndFaceRemap; // 0x89(0x01)
	Unknown CollisionReponse; // 0x8b(0x01)
	Unknown CollisionTraceFlag; // 0x8c(0x01)
	Unknown PhysMaterial; // 0x90(0x08)
	Unknown WalkableSlopeOverride; // 0x98(0x10)
	Unknown DefaultInstance; // 0x120(0x190)
	Unknown BuildScale3D; // 0x2b8(0x0c)
	Unknown BlendPoses; // 0x28(0x10)
	Unknown Location; // 0x28(0x0c)
	Unknown Rotation; // 0x34(0x0c)
	Unknown HiddenLevels; // 0x40(0x10)
	float Zoom2D; // 0x28(0x04)
	Unknown Location; // 0x2c(0x08)
	Unknown CaptureComponent; // 0x310(0x08)
	Unknown VisualizationMesh; // 0x238(0x08)
	Unknown CaptureOffsetComponent; // 0x240(0x08)
	Unknown ReflectionSourceType; // 0x248(0x01)
	Unknown Cubemap; // 0x250(0x08)
	float SourceCubemapAngle; // 0x258(0x04)
	float Brightness; // 0x25c(0x04)
	float DiffuseRadiance; // 0x260(0x04)
	Unknown CaptureOffset; // 0x264(0x0c)
	Unknown MapBuildDataId; // 0x270(0x10)
	float BoxTransitionDistance; // 0x2c0(0x04)
	Unknown PreviewInfluenceBox; // 0x2c8(0x08)
	Unknown PreviewCaptureBox; // 0x2d0(0x08)
	char bEnabled; // 0x28(0x01)
	Unknown Node; // 0x30(0x08)
	char bStepOnce; // 0x38(0x01)
	char bStepOnce_WasPreviouslyDisabled; // 0x38(0x01)
	char bStepOnce_RemoveAfterHit; // 0x38(0x01)
	struct FString BitmapFilename; // 0x28(0x10)
	struct FString Tooltip; // 0x38(0x10)
	char NotifyBadParams; // 0x48(0x01)
	Unknown Vertices; // 0x50(0x10)
	Unknown Polys; // 0x60(0x10)
	struct FName Layer; // 0x70(0x08)
	char MergeCoplanars; // 0x78(0x01)
	Unknown Brush; // 0x4b8(0x08)
	Unknown BrushBodySetup; // 0x4c0(0x08)
	Unknown ButtonStyle; // 0x28(0x278)
	Unknown CameraInterpGroup; // 0x28(0x08)
	float AnimLength; // 0x30(0x04)
	Unknown BoundingBox; // 0x34(0x1c)
	char bRelativeToInitialTransform; // 0x50(0x01)
	char bRelativeToInitialFOV; // 0x50(0x01)
	float BaseFOV; // 0x54(0x04)
	Unknown BasePostProcessSettings; // 0x60(0x5c0)
	float BasePostProcessBlendWeight; // 0x620(0x04)
	Unknown CamAnim; // 0x28(0x08)
	Unknown InterpGroupInst; // 0x30(0x08)
	float PlayRate; // 0x50(0x04)
	Unknown MoveTrack; // 0x68(0x08)
	Unknown MoveInst; // 0x70(0x08)
	Unknown PlaySpace; // 0x78(0x01)
	Unknown ActiveShakes; // 0x48(0x10)
	Unknown ExpiredPooledShakesMap; // 0x58(0x50)
	float SplitScreenShakeScale; // 0xa8(0x04)
	char bSingleInstance; // 0x28(0x01)
	float OscillationDuration; // 0x2c(0x04)
	float OscillationBlendInTime; // 0x30(0x04)
	float OscillationBlendOutTime; // 0x34(0x04)
	Unknown RotOscillation; // 0x38(0x24)
	Unknown LocOscillation; // 0x5c(0x24)
	Unknown FOVOscillation; // 0x80(0x0c)
	float AnimPlayRate; // 0x8c(0x04)
	float AnimScale; // 0x90(0x04)
	float AnimBlendInTime; // 0x94(0x04)
	float AnimBlendOutTime; // 0x98(0x04)
	float RandomAnimSegmentDuration; // 0x9c(0x04)
	Unknown Anim; // 0xa0(0x08)
	char bRandomAnimSegment; // 0xa8(0x01)
	Unknown CameraOwner; // 0xc0(0x08)
	float ShakeScale; // 0x148(0x04)
	float OscillatorTimeRemaining; // 0x14c(0x04)
	Unknown AnimInst; // 0x150(0x08)
	Unknown CameraShakeSourceComponent; // 0x310(0x08)
	Unknown Attenuation; // 0x238(0x01)
	float InnerAttenuationRadius; // 0x23c(0x04)
	float OuterAttenuationRadius; // 0x240(0x04)
	Unknown CameraShake; // 0x248(0x08)
	char bAutoPlay; // 0x250(0x01)
	float OrgX; // 0x28(0x04)
	float OrgY; // 0x2c(0x04)
	float ClipX; // 0x30(0x04)
	float ClipY; // 0x34(0x04)
	Unknown DrawColor; // 0x38(0x04)
	char bCenterX; // 0x3c(0x01)
	char bCenterY; // 0x3c(0x01)
	char bNoSmooth; // 0x3c(0x01)
	int32_t SizeX; // 0x40(0x04)
	int32_t SizeY; // 0x44(0x04)
	Unknown ColorModulate; // 0x50(0x10)
	Unknown DefaultTexture; // 0x60(0x08)
	Unknown GradientTexture0; // 0x68(0x08)
	Unknown ReporterGraph; // 0x70(0x08)
	float TargetGamma; // 0xb8(0x04)
	int32_t SizeX; // 0xc0(0x04)
	int32_t SizeY; // 0xc4(0x04)
	Unknown ClearColor; // 0xc8(0x10)
	Unknown AddressX; // 0xd8(0x01)
	Unknown AddressY; // 0xd9(0x01)
	char bForceLinearGamma; // 0xda(0x01)
	char bHDR; // 0xda(0x01)
	char bGPUSharedFlag; // 0xda(0x01)
	Unknown RenderTargetFormat; // 0xdb(0x01)
	char bAutoGenerateMips; // 0xdc(0x01)
	Unknown MipsSamplerFilter; // 0xdd(0x01)
	Unknown MipsAddressU; // 0xde(0x01)
	Unknown MipsAddressV; // 0xdf(0x01)
	Unknown OverrideFormat; // 0xe0(0x01)
	struct FMulticastInlineDelegate OnCanvasRenderTargetUpdate; // 0xe8(0x10)
	Unknown World; // 0xf8(0x08)
	char bShouldClearRenderTargetOnReceiveUpdate; // 0x100(0x01)
	float Friction; // 0x28(0x04)
	float StaticFriction; // 0x2c(0x04)
	float Restitution; // 0x30(0x04)
	float LinearEtherDrag; // 0x34(0x04)
	float AngularEtherDrag; // 0x38(0x04)
	float SleepingLinearVelocityThreshold; // 0x3c(0x04)
	float SleepingAngularVelocityThreshold; // 0x40(0x04)
	Unknown CheckBoxStyle; // 0x28(0x580)
	Unknown ChildActorClass; // 0x238(0x08)
	Unknown ChildActor; // 0x240(0x08)
	Unknown ChildActorTemplate; // 0x248(0x08)
	Unknown Parent; // 0x1aa0(0x08)
	Unknown AllDelegates; // 0x28(0x10)
	Unknown LocalCloudFiles; // 0x38(0x10)
	char bSuppressDelegateCalls; // 0x48(0x01)
	Unknown Profiles; // 0x38(0x10)
	Unknown DefaultChannelResponses; // 0x48(0x10)
	Unknown EditProfiles; // 0x58(0x10)
	Unknown ProfileRedirects; // 0x68(0x10)
	Unknown CollisionChannelRedirects; // 0x78(0x10)
	Unknown ComponentDelegateBindings; // 0x28(0x10)
	Unknown ParentTables; // 0xa0(0x10)
	Unknown OldParentTables; // 0xb0(0x10)
	Unknown RowStruct; // 0x28(0x08)
	char bStripFromClientBuilds; // 0x80(0x01)
	char bIgnoreExtraFields; // 0x80(0x01)
	char bIgnoreMissingFields; // 0x80(0x01)
	struct FString ImportKeyField; // 0x88(0x10)
	Unknown ParentTables; // 0xc8(0x10)
	Unknown OldParentTables; // 0xd8(0x10)
	Unknown ConsoleTargetPlayer; // 0x38(0x08)
	Unknown DefaultTexture_Black; // 0x40(0x08)
	Unknown DefaultTexture_White; // 0x48(0x08)
	Unknown HistoryBuffer; // 0x68(0x10)
	char AsyncLoadingThreadEnabled; // 0x38(0x01)
	char AsyncPostLoadEnabled; // 0x38(0x01)
	char WarnIfTimeLimitExceeded; // 0x38(0x01)
	float TimeLimitExceededMultiplier; // 0x3c(0x04)
	float TimeLimitExceededMinTime; // 0x40(0x04)
	int32_t MinBulkDataSizeForAsyncLoading; // 0x44(0x04)
	char UseBackgroundLevelStreaming; // 0x48(0x01)
	char AsyncLoadingUseFullTimeLimit; // 0x48(0x01)
	float AsyncLoadingTimeLimit; // 0x4c(0x04)
	float PriorityAsyncLoadingExtraTime; // 0x50(0x04)
	float LevelStreamingActorsUpdateTimeLimit; // 0x54(0x04)
	float PriorityLevelStreamingActorsUpdateExtraTime; // 0x58(0x04)
	int32_t LevelStreamingComponentsRegistrationGranularity; // 0x5c(0x04)
	float LevelStreamingUnregisterComponentsTimeLimit; // 0x60(0x04)
	int32_t LevelStreamingComponentsUnregistrationGranularity; // 0x64(0x04)
	char FlushStreamingOnExit; // 0x68(0x01)
	char EventDrivenLoaderEnabled; // 0x68(0x01)
	float TimeBetweenPurgingPendingKillObjects; // 0x38(0x04)
	char FlushStreamingOnGC; // 0x3c(0x01)
	char AllowParallelGC; // 0x3c(0x01)
	char IncrementalBeginDestroyEnabled; // 0x3c(0x01)
	char MultithreadedDestructionEnabled; // 0x3c(0x01)
	char CreateGCClusters; // 0x3c(0x01)
	char AssetClusteringEnabled; // 0x3c(0x01)
	char ActorClusteringEnabled; // 0x3c(0x01)
	char BlueprintClusteringEnabled; // 0x3c(0x01)
	char UseDisregardForGCOnDedicatedServers; // 0x3d(0x01)
	int32_t MinGCClusterSize; // 0x40(0x04)
	int32_t NumRetriesBeforeForcingGC; // 0x44(0x04)
	int32_t MaxObjectsNotConsideredByGC; // 0x48(0x04)
	int32_t SizeOfPermanentObjectPool; // 0x4c(0x04)
	int32_t MaxObjectsInGame; // 0x50(0x04)
	int32_t MaxObjectsInEditor; // 0x54(0x04)
	Unknown CullDistances; // 0x348(0x10)
	char bEnabled; // 0x358(0x01)
	Unknown FloatCurve; // 0x30(0x80)
	char bIsEventCurve; // 0xb0(0x01)
	Unknown FloatCurves; // 0x30(0x200)
	float AdjustHue; // 0x230(0x04)
	float AdjustSaturation; // 0x234(0x04)
	float AdjustBrightness; // 0x238(0x04)
	float AdjustBrightnessCurve; // 0x23c(0x04)
	float AdjustVibrance; // 0x240(0x04)
	float AdjustMinAlpha; // 0x244(0x04)
	float AdjustMaxAlpha; // 0x248(0x04)
	int32_t LevelIndex; // 0xb8(0x04)
	int32_t FirstResourceMemMip; // 0xbc(0x04)
	char bTemporarilyDisableStreaming; // 0xc0(0x01)
	Unknown AddressX; // 0xc1(0x01)
	Unknown AddressY; // 0xc2(0x01)
	Unknown ImportedSize; // 0xc4(0x08)
	uint32_t TextureSize; // 0xe8(0x04)
	Unknown GradientCurves; // 0xf0(0x10)
	Unknown FloatCurves; // 0x30(0x180)
	char bShowSelectedInfo; // 0x6f0(0x01)
	char bIsFrozenRendering; // 0x6f0(0x01)
	char bOverrideInitialMaxSpeed; // 0x6f0(0x01)
	float OverrideInitialMaxSpeed; // 0x6f4(0x04)
	char bIsOrbitingSelectedActor; // 0x6f8(0x01)
	char bOrbitPivotUseCenter; // 0x6f8(0x01)
	char bEnableBufferVisualization; // 0x6f8(0x01)
	char bEnableBufferVisualizationFullMode; // 0x6f8(0x01)
	char bIsBufferVisualizationInputSetup; // 0x6f8(0x01)
	char bLastDisplayEnabled; // 0x6f8(0x01)
	Unknown DrawFrustum; // 0x700(0x08)
	Unknown SelectedActor; // 0x708(0x08)
	Unknown SelectedComponent; // 0x710(0x08)
	Unknown SelectedHitPoint; // 0x718(0x88)
	Unknown OriginalControllerRef; // 0x7a0(0x08)
	Unknown OriginalPlayer; // 0x7a8(0x08)
	float SpeedScale; // 0x7b0(0x04)
	float InitialMaxSpeed; // 0x7b4(0x04)
	float InitialAccel; // 0x7b8(0x04)
	float InitialDecel; // 0x7bc(0x04)
	Unknown CycleViewModes; // 0x38(0x10)
	Unknown Decal; // 0x310(0x08)
	Unknown DecalMaterial; // 0x238(0x08)
	int32_t SortOrder; // 0x240(0x04)
	float FadeScreenSize; // 0x244(0x04)
	float FadeStartDelay; // 0x248(0x04)
	float FadeDuration; // 0x24c(0x04)
	float FadeInDuration; // 0x250(0x04)
	float FadeInStartDelay; // 0x254(0x04)
	char bDestroyOwnerAfterFade; // 0x258(0x01)
	Unknown DecalSize; // 0x25c(0x0c)
	Unknown SelfDemoNetConnection; // 0x1be8(0x08)
	Unknown NetDriver; // 0x30(0x08)
	Unknown DemoNetDriver; // 0x38(0x08)
	Unknown TextureLODGroups; // 0x28(0x10)
	struct FString DeviceType; // 0x38(0x10)
	struct FString BaseProfileName; // 0x48(0x10)
	Unknown Parent; // 0x58(0x08)
	Unknown CVars; // 0x78(0x10)
	Unknown Profiles; // 0x28(0x10)
	Unknown gender; // 0x28(0x01)
	Unknown Plurality; // 0x29(0x01)
	Unknown LocalizationGUID; // 0x2c(0x10)
	char bMature; // 0x28(0x01)
	char bOverride_SubtitleOverride; // 0x28(0x01)
	struct FString SpokenText; // 0x30(0x10)
	struct FString SubtitleOverride; // 0x40(0x10)
	Unknown ContextMappings; // 0x50(0x10)
	Unknown LocalizationGUID; // 0x60(0x10)
	Unknown LightComponent; // 0x310(0x08)
	char bEnabled; // 0x318(0x01)
	Unknown LightGuid; // 0x238(0x10)
	float Brightness; // 0x248(0x04)
	float Intensity; // 0x24c(0x04)
	Unknown LightColor; // 0x250(0x04)
	char bAffectsWorld; // 0x254(0x01)
	char CastShadows; // 0x254(0x01)
	char CastStaticShadows; // 0x254(0x01)
	char CastDynamicShadows; // 0x254(0x01)
	char bAffectTranslucentLighting; // 0x254(0x01)
	char bTransmission; // 0x254(0x01)
	char bCastVolumetricShadow; // 0x254(0x01)
	char bCastDeepShadow; // 0x254(0x01)
	char bCastRaytracedShadow; // 0x255(0x01)
	char bAffectReflection; // 0x255(0x01)
	char bAffectGlobalIllumination; // 0x255(0x01)
	float IndirectLightingIntensity; // 0x258(0x04)
	float VolumetricScatteringIntensity; // 0x25c(0x04)
	float VolumetricAttenuationScale; // 0x260(0x04)
	float VolumetricSourceRadiusScale; // 0x264(0x04)
	int32_t SamplesPerPixel; // 0x268(0x04)
	float Temperature; // 0x270(0x04)
	float MaxDrawDistance; // 0x274(0x04)
	float MaxDistanceFadeRange; // 0x278(0x04)
	char bUseTemperature; // 0x27c(0x01)
	int32_t ShadowMapChannel; // 0x280(0x04)
	float MinRoughness; // 0x288(0x04)
	float SpecularScale; // 0x28c(0x04)
	float ShadowResolutionScale; // 0x290(0x04)
	float ShadowBias; // 0x294(0x04)
	float ShadowSlopeBias; // 0x298(0x04)
	float ShadowSharpen; // 0x29c(0x04)
	float ContactShadowLength; // 0x2a0(0x04)
	char ContactShadowLengthInWS; // 0x2a4(0x01)
	float ContactShadowStartDistance; // 0x2a8(0x04)
	float ContactShadowFadeDistance; // 0x2ac(0x04)
	float ShadowStrength; // 0x2b0(0x04)
	float TranslucentShadowDensity; // 0x2b4(0x04)
	char InverseSquaredFalloff; // 0x2b8(0x01)
	char CastTranslucentShadows; // 0x2b8(0x01)
	char bCastShadowsFromCinematicObjectsOnly; // 0x2b8(0x01)
	char bAffectDynamicIndirectLighting; // 0x2b8(0x01)
	char bForceCachedShadowsFromMovablePrimitivesAsStatic; // 0x2b8(0x01)
	char bForceCachedShadowsForMovablePrimitives; // 0x2b8(0x01)
	Unknown LightingChannels; // 0x2bc(0x01)
	Unknown LightFunctionMaterial; // 0x2c0(0x08)
	Unknown LightFunctionScale; // 0x2c8(0x0c)
	Unknown IESTexture; // 0x2d8(0x08)
	char bUseIESBrightness; // 0x2e0(0x01)
	float IESBrightnessScale; // 0x2e4(0x04)
	float LightFunctionFadeDistance; // 0x2e8(0x04)
	float DisabledBrightness; // 0x2ec(0x04)
	char bEnableLightShaftBloom; // 0x2f0(0x01)
	float BloomScale; // 0x2f4(0x04)
	float BloomThreshold; // 0x2f8(0x04)
	float BloomMaxBrightness; // 0x2fc(0x04)
	Unknown BloomTint; // 0x300(0x04)
	char bUseFoliageLighting; // 0x304(0x01)
	char bUseRayTracedDistanceFieldShadows; // 0x305(0x01)
	float RayStartOffsetDepthScale; // 0x308(0x04)
	float ShadowCascadeBiasDistribution; // 0x380(0x04)
	char bEnableLightShaftOcclusion; // 0x384(0x01)
	float OcclusionMaskDarkness; // 0x388(0x04)
	float OcclusionDepthRange; // 0x38c(0x04)
	Unknown LightShaftOverrideDirection; // 0x390(0x0c)
	float WholeSceneDynamicShadowRadius; // 0x39c(0x04)
	float DynamicShadowDistanceMovableLight; // 0x3a0(0x04)
	float DynamicShadowDistanceStationaryLight; // 0x3a4(0x04)
	int32_t DynamicShadowCascades; // 0x3a8(0x04)
	float CascadeDistributionExponent; // 0x3ac(0x04)
	float CascadeTransitionFraction; // 0x3b0(0x04)
	float ShadowDistanceFadeoutFraction; // 0x3b4(0x04)
	char bUseInsetShadowsForMovableObjects; // 0x3b8(0x01)
	int32_t FarShadowCascadeCount; // 0x3bc(0x04)
	float FarShadowDistance; // 0x3c0(0x04)
	char bUseFarShadowAsStaticWorldShadow; // 0x3c4(0x01)
	float DistanceFieldShadowDistance; // 0x3c8(0x04)
	float LightSourceAngle; // 0x3cc(0x04)
	float LightSourceSoftAngle; // 0x3d0(0x04)
	float TraceDistance; // 0x3d4(0x04)
	Unknown LightmassSettings; // 0x3d8(0x10)
	char bCastModulatedShadows; // 0x3e8(0x01)
	Unknown ModulatedShadowColor; // 0x3ec(0x04)
	float ShadowAmount; // 0x3f0(0x04)
	char bUsedAsAtmosphereSunLight; // 0x3f4(0x01)
	int32_t AtmosphereSunLightIndex; // 0x3f8(0x04)
	char bCanBeBaked; // 0x30(0x01)
	char bBakedDataSuccesfully; // 0x30(0x01)
	float Constant; // 0x38(0x04)
	Unknown ConstantCurve; // 0x38(0x18)
	struct FName ParameterName; // 0x40(0x08)
	float MinInput; // 0x48(0x04)
	float MaxInput; // 0x4c(0x04)
	float MinOutput; // 0x50(0x04)
	float MaxOutput; // 0x54(0x04)
	Unknown ParamMode; // 0x58(0x01)
	float Min; // 0x38(0x04)
	float MAX; // 0x3c(0x04)
	Unknown ConstantCurve; // 0x38(0x18)
	char bCanBeBaked; // 0x30(0x01)
	char bIsDirty; // 0x30(0x01)
	char bBakedDataSuccesfully; // 0x30(0x01)
	Unknown Constant; // 0x38(0x0c)
	char bLockAxes; // 0x44(0x01)
	Unknown LockedAxes; // 0x48(0x01)
	Unknown ConstantCurve; // 0x38(0x18)
	char bLockAxes; // 0x50(0x01)
	Unknown LockedAxes; // 0x54(0x01)
	struct FName ParameterName; // 0x50(0x08)
	Unknown MinInput; // 0x58(0x0c)
	Unknown MaxInput; // 0x64(0x0c)
	Unknown MinOutput; // 0x70(0x0c)
	Unknown MaxOutput; // 0x7c(0x0c)
	Unknown ParamModes; // 0x88(0x03)
	Unknown MAX; // 0x38(0x0c)
	Unknown Min; // 0x44(0x0c)
	char bLockAxes; // 0x50(0x01)
	Unknown LockedAxes; // 0x54(0x01)
	Unknown MirrorFlags; // 0x55(0x03)
	char bUseExtremes; // 0x58(0x01)
	Unknown ConstantCurve; // 0x38(0x18)
	char bLockAxes1; // 0x50(0x01)
	char bLockAxes2; // 0x50(0x01)
	Unknown LockedAxes; // 0x54(0x02)
	Unknown MirrorFlags; // 0x56(0x03)
	char bUseExtremes; // 0x5c(0x01)
	Unknown FrustumColor; // 0x4b8(0x04)
	float FrustumAngle; // 0x4bc(0x04)
	float FrustumAspectRatio; // 0x4c0(0x04)
	float FrustumStartDist; // 0x4c4(0x04)
	float FrustumEndDist; // 0x4c8(0x04)
	Unknown Texture; // 0x4d0(0x08)
	float SphereRadius; // 0x4d0(0x04)
	Unknown Schema; // 0x28(0x08)
	Unknown Nodes; // 0x30(0x10)
	char bEditable; // 0x40(0x01)
	char bAllowDeletion; // 0x40(0x01)
	char bAllowRenaming; // 0x40(0x01)
	Unknown Blueprint; // 0x28(0x08)
	Unknown Graph; // 0x30(0x08)
	Unknown Node; // 0x38(0x08)
	char bIsDebugging; // 0x48(0x01)
	Unknown DeprecatedPins; // 0x38(0x10)
	int32_t NodePosX; // 0x48(0x04)
	int32_t NodePosY; // 0x4c(0x04)
	int32_t NodeWidth; // 0x50(0x04)
	int32_t NodeHeight; // 0x54(0x04)
	Unknown AdvancedPinDisplay; // 0x58(0x01)
	Unknown EnabledState; // 0x59(0x01)
	char bDisplayAsDisabled; // 0x5b(0x01)
	char bUserSetEnabledState; // 0x5b(0x01)
	char bIsNodeEnabled; // 0x5b(0x01)
	char bHasCompilerMessage; // 0x5b(0x01)
	struct FString NodeComment; // 0x60(0x10)
	int32_t ErrorType; // 0x70(0x04)
	struct FString ErrorMsg; // 0x78(0x10)
	Unknown NodeGuid; // 0x88(0x10)
	struct FString Link; // 0x98(0x10)
	struct FString Excerpt; // 0xa8(0x10)
	struct FString PinName; // 0x28(0x10)
	struct FString PinToolTip; // 0x38(0x10)
	Unknown Direction; // 0x48(0x01)
	Unknown PinType; // 0x50(0x58)
	struct FString DefaultValue; // 0xa8(0x10)
	struct FString AutogeneratedDefaultValue; // 0xb8(0x10)
	Unknown DefaultObject; // 0xc8(0x08)
	struct FText DefaultTextValue; // 0xd0(0x18)
	Unknown LinkedTo; // 0xe8(0x10)
	Unknown SubPins; // 0xf8(0x10)
	Unknown ParentPin; // 0x108(0x08)
	Unknown ReferencePassThroughConnection; // 0x110(0x08)
	Unknown ParticleSystemComponent; // 0x310(0x08)
	char bDestroyOnSystemFinish; // 0x318(0x01)
	char bPostUpdateTickGroup; // 0x318(0x01)
	char bCurrentlyActive; // 0x318(0x01)
	struct FMulticastInlineDelegate OnParticleSpawn; // 0x320(0x10)
	struct FMulticastInlineDelegate OnParticleBurst; // 0x330(0x10)
	struct FMulticastInlineDelegate OnParticleDeath; // 0x340(0x10)
	struct FMulticastInlineDelegate OnParticleCollide; // 0x350(0x10)
	Unknown PS_CameraEffect; // 0x360(0x08)
	Unknown PS_CameraEffectNonExtremeContent; // 0x368(0x08)
	Unknown BaseCamera; // 0x370(0x08)
	Unknown RelativeTransform; // 0x380(0x30)
	float BaseFOV; // 0x3b0(0x04)
	char bAllowMultipleInstances; // 0x3b4(0x01)
	char bResetWhenRetriggered; // 0x3b4(0x01)
	Unknown EmittersToTreatAsSame; // 0x3b8(0x10)
	float DistFromCamera; // 0x3c8(0x04)
	struct FString FailedPlaceMessage; // 0x28(0x10)
	struct FString MaxedOutMessage; // 0x38(0x10)
	struct FString EnteredMessage; // 0x48(0x10)
	struct FString LeftMessage; // 0x58(0x10)
	struct FString GlobalNameChange; // 0x68(0x10)
	struct FString SpecEnteredMessage; // 0x78(0x10)
	struct FString NewPlayerMessage; // 0x88(0x10)
	struct FString NewSpecMessage; // 0x98(0x10)
	Unknown Component; // 0x310(0x08)
	char bEnabled; // 0x318(0x01)
	float FogDensity; // 0x238(0x04)
	float FogHeightFalloff; // 0x23c(0x04)
	Unknown SecondFogData; // 0x240(0x0c)
	Unknown FogInscatteringColor; // 0x24c(0x10)
	Unknown InscatteringColorCubemap; // 0x260(0x08)
	float InscatteringColorCubemapAngle; // 0x268(0x04)
	Unknown InscatteringTextureTint; // 0x26c(0x10)
	float FullyDirectionalInscatteringColorDistance; // 0x27c(0x04)
	float NonDirectionalInscatteringColorDistance; // 0x280(0x04)
	float DirectionalInscatteringExponent; // 0x284(0x04)
	float DirectionalInscatteringStartDistance; // 0x288(0x04)
	Unknown DirectionalInscatteringColor; // 0x28c(0x10)
	float FogMaxOpacity; // 0x29c(0x04)
	float StartDistance; // 0x2a0(0x04)
	float FogCutoffDistance; // 0x2a4(0x04)
	char bEnableVolumetricFog; // 0x2a8(0x01)
	float VolumetricFogScatteringDistribution; // 0x2ac(0x04)
	Unknown VolumetricFogAlbedo; // 0x2b0(0x04)
	Unknown VolumetricFogEmissive; // 0x2b4(0x10)
	float VolumetricFogExtinctionScale; // 0x2c4(0x04)
	float VolumetricFogDistance; // 0x2c8(0x04)
	float VolumetricFogStaticLightingScatteringIntensity; // 0x2cc(0x04)
	char bOverrideLightColorsWithFogInscatteringColors; // 0x2d0(0x01)
	float MaxSpeed; // 0x138(0x04)
	float Acceleration; // 0x13c(0x04)
	float Deceleration; // 0x140(0x04)
	float TurningBoost; // 0x144(0x04)
	char bPositionCorrected; // 0x148(0x01)
	Unknown FontCacheType; // 0x30(0x01)
	Unknown Characters; // 0x38(0x10)
	Unknown Textures; // 0x48(0x10)
	int32_t IsRemapped; // 0x58(0x04)
	float EmScale; // 0x5c(0x04)
	float Ascent; // 0x60(0x04)
	float Descent; // 0x64(0x04)
	float Leading; // 0x68(0x04)
	int32_t Kerning; // 0x6c(0x04)
	Unknown ImportOptions; // 0x70(0xb0)
	int32_t NumCharacters; // 0x120(0x04)
	Unknown MaxCharHeight; // 0x128(0x10)
	float ScalingFactor; // 0x138(0x04)
	int32_t LegacyFontSize; // 0x13c(0x04)
	struct FName LegacyFontName; // 0x140(0x08)
	Unknown CompositeFont; // 0x148(0x38)
	struct FString SourceFilename; // 0x30(0x10)
	Unknown Hinting; // 0x40(0x01)
	Unknown LoadingPolicy; // 0x41(0x01)
	Unknown LayoutMethod; // 0x42(0x01)
	Unknown Data; // 0x28(0xb0)
	Unknown Attenuation; // 0x28(0xb0)
	Unknown ForceFeedbackEffect; // 0x238(0x08)
	char bAutoDestroy; // 0x240(0x01)
	char bStopWhenOwnerDestroyed; // 0x240(0x01)
	char bLooping; // 0x240(0x01)
	char bIgnoreTimeDilation; // 0x240(0x01)
	char bOverrideAttenuation; // 0x240(0x01)
	float IntensityMultiplier; // 0x244(0x04)
	Unknown AttenuationSettings; // 0x248(0x08)
	Unknown AttenuationOverrides; // 0x250(0xb0)
	struct FMulticastInlineDelegate OnForceFeedbackFinished; // 0x300(0x10)
	Unknown ChannelDetails; // 0x28(0x10)
	float Duration; // 0x38(0x04)
	float BadPacketLossThreshold; // 0x310(0x04)
	float SeverePacketLossThreshold; // 0x314(0x04)
	int32_t BadPingThreshold; // 0x318(0x04)
	int32_t SeverePingThreshold; // 0x31c(0x04)
	int32_t AdjustedNetSpeed; // 0x320(0x04)
	float LastNetSpeedUpdateTime; // 0x324(0x04)
	int32_t TotalNetBandwidth; // 0x328(0x04)
	int32_t MinDynamicBandwidth; // 0x32c(0x04)
	int32_t MaxDynamicBandwidth; // 0x330(0x04)
	char bIsStandbyCheckingEnabled; // 0x334(0x01)
	char bHasStandbyCheatTriggered; // 0x334(0x01)
	float StandbyRxCheatTime; // 0x338(0x04)
	float StandbyTxCheatTime; // 0x33c(0x04)
	float PercentMissingForRxStandby; // 0x340(0x04)
	float PercentMissingForTxStandby; // 0x344(0x04)
	float PercentForBadPing; // 0x348(0x04)
	float JoinInProgressStandbyWaitTime; // 0x34c(0x04)
	float MoveRepSize; // 0x350(0x04)
	float MAXPOSITIONERRORSQUARED; // 0x354(0x04)
	float MAXNEARZEROVELOCITYSQUARED; // 0x358(0x04)
	float CLIENTADJUSTUPDATECOST; // 0x35c(0x04)
	float MAXCLIENTUPDATEINTERVAL; // 0x360(0x04)
	float MaxClientForcedUpdateDuration; // 0x364(0x04)
	float ServerForcedUpdateHitchThreshold; // 0x368(0x04)
	float ServerForcedUpdateHitchCooldown; // 0x36c(0x04)
	float MaxMoveDeltaTime; // 0x370(0x04)
	float MaxClientSmoothingDeltaTime; // 0x374(0x04)
	float ClientNetSendMoveDeltaTime; // 0x378(0x04)
	float ClientNetSendMoveDeltaTimeThrottled; // 0x37c(0x04)
	float ClientNetSendMoveDeltaTimeStationary; // 0x380(0x04)
	int32_t ClientNetSendMoveThrottleAtNetSpeed; // 0x384(0x04)
	int32_t ClientNetSendMoveThrottleOverPlayerCount; // 0x388(0x04)
	char ClientAuthorativePosition; // 0x38c(0x01)
	float ClientErrorUpdateRateLimit; // 0x390(0x04)
	float ClientNetCamUpdateDeltaTime; // 0x394(0x04)
	float ClientNetCamUpdatePositionLimit; // 0x398(0x04)
	char bMovementTimeDiscrepancyDetection; // 0x39c(0x01)
	char bMovementTimeDiscrepancyResolution; // 0x39d(0x01)
	float MovementTimeDiscrepancyMaxTimeMargin; // 0x3a0(0x04)
	float MovementTimeDiscrepancyMinTimeMargin; // 0x3a4(0x04)
	float MovementTimeDiscrepancyResolutionRate; // 0x3a8(0x04)
	float MovementTimeDiscrepancyDriftAllowance; // 0x3ac(0x04)
	char bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x3b0(0x01)
	char bUseDistanceBasedRelevancy; // 0x3b1(0x01)
	Unknown SpotLightComponent; // 0x320(0x08)
	Unknown Amplitudes; // 0x28(0x10)
	int32_t SampleRate; // 0x38(0x04)
	Unknown HapticDetails; // 0x28(0x110)
	Unknown SoundWave; // 0x28(0x08)
	Unknown ProxyMeshes; // 0x28(0x10)
	char bShouldPauseWhileAdOpen; // 0x38(0x01)
	Unknown ClickedBannerDelegates; // 0x40(0x10)
	Unknown ClosedAdDelegates; // 0x50(0x10)
	Unknown Records; // 0x28(0x10)
	Unknown UnnecessaryComponents; // 0x38(0x10)
	Unknown InputActionDelegateBindings; // 0x28(0x10)
	Unknown InputAxisDelegateBindings; // 0x28(0x10)
	Unknown InputAxisKeyDelegateBindings; // 0x28(0x10)
	Unknown CachedKeyToActionInfo; // 0x120(0x10)
	Unknown InputKeyDelegateBindings; // 0x28(0x10)
	Unknown AxisConfig; // 0x28(0x10)
	char bAltEnterTogglesFullscreen; // 0x38(0x01)
	char bF11TogglesFullscreen; // 0x38(0x01)
	char bUseMouseForTouch; // 0x38(0x01)
	char bEnableMouseSmoothing; // 0x38(0x01)
	char bEnableFOVScaling; // 0x38(0x01)
	char bCaptureMouseOnLaunch; // 0x38(0x01)
	char bDefaultViewportMouseLock; // 0x38(0x01)
	char bAlwaysShowTouchInterface; // 0x38(0x01)
	char bShowConsoleOnFourFingerTap; // 0x39(0x01)
	char bEnableGestureRecognizer; // 0x39(0x01)
	char bUseAutocorrect; // 0x3a(0x01)
	Unknown ExcludedAutocorrectOS; // 0x40(0x10)
	Unknown ExcludedAutocorrectCultures; // 0x50(0x10)
	Unknown ExcludedAutocorrectDeviceModels; // 0x60(0x10)
	Unknown DefaultViewportMouseCaptureMode; // 0x70(0x01)
	Unknown DefaultViewportMouseLockMode; // 0x71(0x01)
	float FOVScale; // 0x74(0x04)
	float DoubleClickTime; // 0x78(0x04)
	Unknown ActionMappings; // 0x80(0x10)
	Unknown AxisMappings; // 0x90(0x10)
	Unknown SpeechMappings; // 0xa0(0x10)
	Unknown DefaultTouchInterface; // 0xb0(0x18)
	Unknown ConsoleKey; // 0xc8(0x18)
	Unknown ConsoleKeys; // 0xe0(0x10)
	Unknown InputTouchDelegateBindings; // 0x28(0x10)
	Unknown StaticMeshComponents; // 0xb0(0x10)
	Unknown StaticMeshComponent; // 0xd0(0x08)
	Unknown InstancedCollisionComponentMap; // 0x310(0x50)
	Unknown Tabs; // 0x28(0x10)
	int32_t ActiveTab; // 0x38(0x04)
	float InterpLength; // 0x28(0x04)
	float PathBuildTime; // 0x2c(0x04)
	Unknown InterpGroups; // 0x30(0x10)
	Unknown CurveEdSetup; // 0x40(0x08)
	float EdSectionStart; // 0x48(0x04)
	float EdSectionEnd; // 0x4c(0x04)
	char bShouldBakeAndPrune; // 0x50(0x01)
	Unknown CachedDirectorGroup; // 0x58(0x08)
	Unknown AllEventNames; // 0x60(0x10)
	struct FString Caption; // 0x28(0x10)
	Unknown InterpTracks; // 0x30(0x10)
	struct FName GroupName; // 0x40(0x08)
	Unknown GroupColor; // 0x48(0x04)
	char bCollapsed; // 0x4c(0x01)
	char bVisible; // 0x4c(0x01)
	char bIsFolder; // 0x4c(0x01)
	char bIsParented; // 0x4c(0x01)
	char bIsSelected; // 0x4c(0x01)
	Unknown CameraAnimInst; // 0x50(0x08)
	float CompressTolerance; // 0x58(0x04)
	Unknown Group; // 0x28(0x08)
	Unknown GroupActor; // 0x30(0x08)
	Unknown TrackInst; // 0x38(0x10)
	float Duration; // 0xf0(0x04)
	char bPauseOnImpact; // 0xf4(0x01)
	char bSweep; // 0xf8(0x01)
	Unknown TeleportType; // 0xf9(0x01)
	Unknown BehaviourType; // 0xfa(0x01)
	char bCheckIfStillInWorld; // 0xfb(0x01)
	char bForceSubStepping; // 0xfc(0x01)
	struct FMulticastInlineDelegate OnInterpToReverse; // 0x100(0x10)
	struct FMulticastInlineDelegate OnInterpToStop; // 0x110(0x10)
	struct FMulticastInlineDelegate OnWaitBeginDelegate; // 0x120(0x10)
	struct FMulticastInlineDelegate OnWaitEndDelegate; // 0x130(0x10)
	struct FMulticastInlineDelegate OnResetDelegate; // 0x140(0x10)
	float MaxSimulationTimeStep; // 0x150(0x04)
	int32_t MaxSimulationIterations; // 0x154(0x04)
	Unknown ControlPoints; // 0x158(0x10)
	struct FName SlotName; // 0x90(0x08)
	Unknown AnimSeqs; // 0x98(0x10)
	char bSkipAnimNotifiers; // 0xa8(0x01)
	Unknown BoolTrack; // 0x70(0x10)
	struct FName PropertyName; // 0x80(0x08)
	struct FName PropertyName; // 0x90(0x08)
	Unknown CutTrack; // 0x70(0x10)
	char bSimulateCameraCutsOnClients; // 0x80(0x01)
	Unknown EventTrack; // 0x70(0x10)
	char bFireEventsWhenForwards; // 0x80(0x01)
	char bFireEventsWhenBackwards; // 0x80(0x01)
	char bFireEventsWhenJumpingForwards; // 0x80(0x01)
	char bUseCustomEventName; // 0x80(0x01)
	char bPersistFade; // 0x90(0x01)
	char bFadeAudio; // 0x90(0x01)
	Unknown FadeColor; // 0x94(0x10)
	Unknown AnimBlueprintClass; // 0x90(0x08)
	Unknown AnimClass; // 0x98(0x08)
	struct FName ParamName; // 0xa0(0x08)
	Unknown TargetMaterials; // 0x90(0x10)
	struct FName ParamName; // 0xa0(0x08)
	struct FName ParamName; // 0x90(0x08)
	struct FName PropertyName; // 0x90(0x08)
	float LastUpdatePosition; // 0x28(0x04)
	Unknown InterpProperty; // 0x28(0x20)
	Unknown PropertyOuterObjectInst; // 0x48(0x08)
	char ResetBool; // 0x60(0x01)
	Unknown ResetColor; // 0x58(0x04)
	Unknown OldViewTarget; // 0x28(0x08)
	float LastUpdatePosition; // 0x28(0x04)
	Unknown AnimScriptInstance; // 0x28(0x08)
	float ResetFloat; // 0x30(0x04)
	Unknown MaterialInstances; // 0x28(0x10)
	Unknown ResetFloats; // 0x38(0x10)
	Unknown PrimitiveMaterialRefs; // 0x48(0x10)
	Unknown InstancedTrack; // 0x58(0x08)
	float ResetFloat; // 0x28(0x04)
	float ResetFloat; // 0x58(0x04)
	Unknown ResetColor; // 0x58(0x10)
	Unknown ResetLocation; // 0x28(0x0c)
	Unknown ResetRotation; // 0x34(0x0c)
	float LastUpdatePosition; // 0x28(0x04)
	float OldTimeDilation; // 0x28(0x04)
	float LastUpdatePosition; // 0x28(0x04)
	Unknown PlayAudioComp; // 0x30(0x08)
	Unknown Action; // 0x28(0x01)
	float LastUpdatePosition; // 0x2c(0x04)
	char bSavedActiveState; // 0x30(0x01)
	Unknown MaterialInstances; // 0x28(0x10)
	Unknown ResetVectors; // 0x38(0x10)
	Unknown PrimitiveMaterialRefs; // 0x48(0x10)
	Unknown InstancedTrack; // 0x58(0x08)
	Unknown ResetVector; // 0x58(0x0c)
	Unknown Action; // 0x28(0x01)
	float LastUpdatePosition; // 0x2c(0x04)
	Unknown LinearColorTrack; // 0x70(0x18)
	float CurveTension; // 0x88(0x04)
	struct FName PropertyName; // 0x90(0x08)
	Unknown PosTrack; // 0x70(0x18)
	Unknown EulerTrack; // 0x88(0x18)
	Unknown LookupTrack; // 0xa0(0x10)
	struct FName LookAtGroupName; // 0xb0(0x08)
	float LinCurveTension; // 0xb8(0x04)
	float AngCurveTension; // 0xbc(0x04)
	char bUseQuatInterpolation; // 0xc0(0x01)
	char bShowArrowAtKeys; // 0xc0(0x01)
	char bDisableMovement; // 0xc0(0x01)
	char bShowTranslationOnCurveEd; // 0xc0(0x01)
	char bShowRotationOnCurveEd; // 0xc0(0x01)
	char bHide3DTrack; // 0xc0(0x01)
	Unknown RotMode; // 0xc4(0x01)
	Unknown MoveAxis; // 0x90(0x01)
	Unknown LookupTrack; // 0x98(0x10)
	Unknown TrackKeys; // 0x70(0x10)
	Unknown Sounds; // 0x90(0x10)
	char bPlayOnReverse; // 0xa0(0x01)
	char bContinueSoundOnMatineeEnd; // 0xa0(0x01)
	char bSuppressSubtitles; // 0xa0(0x01)
	char bTreatAsDialogue; // 0xa0(0x01)
	char bAttach; // 0xa0(0x01)
	Unknown ToggleTrack; // 0x70(0x10)
	char bActivateSystemEachUpdate; // 0x80(0x01)
	char bActivateWithJustAttachedFlag; // 0x80(0x01)
	char bFireEventsWhenForwards; // 0x80(0x01)
	char bFireEventsWhenBackwards; // 0x80(0x01)
	char bFireEventsWhenJumpingForwards; // 0x80(0x01)
	Unknown TargetMaterials; // 0x90(0x10)
	struct FName ParamName; // 0xa0(0x08)
	struct FName PropertyName; // 0x90(0x08)
	Unknown VisibilityTrack; // 0x70(0x10)
	char bFireEventsWhenForwards; // 0x80(0x01)
	char bFireEventsWhenBackwards; // 0x80(0x01)
	char bFireEventsWhenJumpingForwards; // 0x80(0x01)
	uint16_t UnsignedInt16Variable; // 0x28(0x02)
	uint32_t UnsignedInt32Variable; // 0x2c(0x04)
	uint64_t UnsignedInt64Variable; // 0x30(0x08)
	int8_t SignedInt8Variable; // 0x38(0x01)
	int16_t SignedInt16Variable; // 0x3a(0x02)
	int64_t SignedInt64Variable; // 0x40(0x08)
	Unknown UnsignedInt8Variable; // 0x48(0x01)
	int32_t SignedInt32Variable; // 0x4c(0x04)
	struct FName LayerName; // 0x28(0x08)
	char bIsVisible; // 0x30(0x01)
	Unknown ActorStats; // 0x38(0x10)
	Unknown OwningWorld; // 0xb8(0x08)
	Unknown Model; // 0xc0(0x08)
	Unknown ModelComponents; // 0xc8(0x10)
	Unknown ActorCluster; // 0xd8(0x08)
	int32_t NumTextureStreamingUnbuiltComponents; // 0xe0(0x04)
	int32_t NumTextureStreamingDirtyResources; // 0xe4(0x04)
	Unknown LevelScriptActor; // 0xe8(0x08)
	Unknown NavListStart; // 0xf0(0x08)
	Unknown NavListEnd; // 0xf8(0x08)
	Unknown NavDataChunks; // 0x100(0x10)
	float LightmapTotalSize; // 0x110(0x04)
	float ShadowmapTotalSize; // 0x114(0x04)
	Unknown StaticNavigableGeometry; // 0x118(0x10)
	Unknown StreamingTextureGuids; // 0x128(0x10)
	Unknown LevelBuildDataId; // 0x1d0(0x10)
	Unknown MapBuildData; // 0x1e0(0x08)
	Unknown LightBuildLevelOffset; // 0x1e8(0x0c)
	char bIsLightingScenario; // 0x1f4(0x01)
	char bTextureStreamingRotationChanged; // 0x1f4(0x01)
	char bStaticComponentsRegisteredInStreamingManager; // 0x1f4(0x01)
	char bIsVisible; // 0x1f4(0x01)
	Unknown WorldSettings; // 0x240(0x08)
	Unknown AssetUserData; // 0x250(0x10)
	Unknown DestroyedReplicatedStaticActors; // 0x270(0x10)
	Unknown Actors; // 0x28(0x10)
	Unknown BoxComponent; // 0x310(0x08)
	char bAutoUpdateBounds; // 0x318(0x01)
	Unknown WorldAsset; // 0x28(0x28)
	struct FName PackageNameToLoad; // 0x50(0x08)
	Unknown LODPackageNames; // 0x58(0x10)
	Unknown LevelTransform; // 0x80(0x30)
	int32_t LevelLODIndex; // 0xb0(0x04)
	int32_t StreamingPriority; // 0xb4(0x04)
	char bShouldBeVisible; // 0xc0(0x01)
	char bShouldBeLoaded; // 0xc0(0x01)
	char bLocked; // 0xc0(0x01)
	char bIsStatic; // 0xc0(0x01)
	char bShouldBlockOnLoad; // 0xc0(0x01)
	char bShouldBlockOnUnload; // 0xc0(0x01)
	char bDisableDistanceStreaming; // 0xc0(0x01)
	char bDrawOnLevelStatusMap; // 0xc0(0x01)
	Unknown LevelColor; // 0xc4(0x10)
	Unknown EditorStreamingVolumes; // 0xd8(0x10)
	float MinTimeBetweenVolumeUnloadRequests; // 0xe8(0x04)
	struct FMulticastInlineDelegate OnLevelLoaded; // 0xf0(0x10)
	struct FMulticastInlineDelegate OnLevelUnloaded; // 0x100(0x10)
	struct FMulticastInlineDelegate OnLevelShown; // 0x110(0x10)
	struct FMulticastInlineDelegate OnLevelHidden; // 0x120(0x10)
	Unknown LoadedLevel; // 0x130(0x08)
	Unknown PendingUnloadLevel; // 0x138(0x08)
	char bInitiallyLoaded; // 0x158(0x01)
	char bInitiallyVisible; // 0x158(0x01)
	Unknown StreamingLevelNames; // 0x348(0x10)
	char bEditorPreVisOnly; // 0x358(0x01)
	char bDisabled; // 0x358(0x01)
	Unknown StreamingUsage; // 0x35c(0x01)
	Unknown SourceModel; // 0x28(0x08)
	Unknown Surfaces; // 0x30(0x10)
	Unknown PortalComponent; // 0x310(0x08)
	Unknown PreviewBox; // 0x238(0x08)
	Unknown LightmassSettings; // 0x28(0x18)
	Unknown IntensityUnits; // 0x380(0x01)
	float Radius; // 0x384(0x04)
	float AttenuationRadius; // 0x388(0x04)
	Unknown LightmassSettings; // 0x38c(0x0c)
	Unknown StaticMeshComponent; // 0x310(0x08)
	Unknown ImpostersStaticMeshComponents; // 0x318(0x50)
	Unknown Proxy; // 0x368(0x08)
	struct FName Key; // 0x370(0x08)
	float LODDrawDistance; // 0x378(0x04)
	int32_t LODLevel; // 0x37c(0x04)
	Unknown SubActors; // 0x380(0x10)
	Unknown CachedNumHLODLevels; // 0x390(0x01)
	Unknown LevelLightingQuality; // 0x28(0x01)
	Unknown PhysMaterial; // 0x88(0x08)
	Unknown PhysMaterialMask; // 0x90(0x08)
	Unknown PhysicalMaterialMap; // 0x98(0x40)
	Unknown Metallic; // 0xd8(0x0c)
	Unknown Specular; // 0xec(0x0c)
	Unknown Anisotropy; // 0x100(0x0c)
	Unknown Normal; // 0x114(0x0c)
	Unknown Tangent; // 0x128(0x0c)
	Unknown EmissiveColor; // 0x13c(0x0c)
	Unknown MaterialDomain; // 0x150(0x01)
	Unknown BlendMode; // 0x151(0x01)
	Unknown DecalBlendMode; // 0x152(0x01)
	Unknown MaterialDecalResponse; // 0x153(0x01)
	Unknown ShadingModel; // 0x154(0x01)
	char bCastDynamicShadowAsMasked; // 0x155(0x01)
	Unknown ShadingModels; // 0x156(0x02)
	float OpacityMaskClipValue; // 0x158(0x04)
	Unknown WorldPositionOffset; // 0x15c(0x0c)
	Unknown Refraction; // 0x170(0x0c)
	Unknown MaterialAttributes; // 0x184(0x10)
	Unknown PixelDepthOffset; // 0x19c(0x0c)
	Unknown ShadingModelFromMaterialExpression; // 0x1b0(0x0c)
	char bEnableSeparateTranslucency; // 0x1c4(0x01)
	char bEnableResponsiveAA; // 0x1c4(0x01)
	char bEnableTranslucentVelocity; // 0x1c8(0x01)
	char bScreenSpaceReflections; // 0x1cc(0x01)
	char bContactShadows; // 0x1cc(0x01)
	char TwoSided; // 0x1cc(0x01)
	char DitheredLODTransition; // 0x1cc(0x01)
	char DitherOpacityMask; // 0x1cc(0x01)
	char bAllowNegativeEmissiveColor; // 0x1cc(0x01)
	Unknown TranslucencyLightingMode; // 0x1cd(0x01)
	char bEnableMobileSeparateTranslucency; // 0x1ce(0x01)
	int32_t NumCustomizedUVs; // 0x1d0(0x04)
	float TranslucencyDirectionalLightingIntensity; // 0x1d4(0x04)
	float TranslucentShadowDensityScale; // 0x1d8(0x04)
	float TranslucentSelfShadowDensityScale; // 0x1dc(0x04)
	float TranslucentSelfShadowSecondDensityScale; // 0x1e0(0x04)
	float TranslucentSelfShadowSecondOpacity; // 0x1e4(0x04)
	float TranslucentBackscatteringExponent; // 0x1e8(0x04)
	Unknown TranslucentMultipleScatteringExtinction; // 0x1ec(0x10)
	float TranslucentShadowStartOffset; // 0x1fc(0x04)
	char bDisableDepthTest; // 0x200(0x01)
	char bWriteOnlyAlpha; // 0x200(0x01)
	char bGenerateSphericalParticleNormals; // 0x200(0x01)
	char bTangentSpaceNormal; // 0x200(0x01)
	char bUseEmissiveForDynamicAreaLighting; // 0x200(0x01)
	char bBlockGI; // 0x200(0x01)
	char bUsedAsSpecialEngineMaterial; // 0x200(0x01)
	char bUsedWithSkeletalMesh; // 0x200(0x01)
	char bUsedWithEditorCompositing; // 0x201(0x01)
	char bUsedWithParticleSprites; // 0x201(0x01)
	char bUsedWithBeamTrails; // 0x201(0x01)
	char bUsedWithMeshParticles; // 0x201(0x01)
	char bUsedWithNiagaraSprites; // 0x201(0x01)
	char bUsedWithNiagaraRibbons; // 0x201(0x01)
	char bUsedWithNiagaraMeshParticles; // 0x201(0x01)
	char bUsedWithGeometryCache; // 0x201(0x01)
	char bUsedWithStaticLighting; // 0x202(0x01)
	char bUsedWithMorphTargets; // 0x202(0x01)
	char bUsedWithSplineMeshes; // 0x202(0x01)
	char bUsedWithInstancedStaticMeshes; // 0x202(0x01)
	char bUsedWithGeometryCollections; // 0x202(0x01)
	char bUsesDistortion; // 0x202(0x01)
	char bUsedWithClothing; // 0x202(0x01)
	char bUsedWithWater; // 0x204(0x01)
	char bUsedWithHairStrands; // 0x204(0x01)
	char bUsedWithLidarPointCloud; // 0x204(0x01)
	char bUsedWithUI; // 0x208(0x01)
	char bAutomaticallySetUsageInEditor; // 0x208(0x01)
	char bFullyRough; // 0x208(0x01)
	char bUseFullPrecision; // 0x208(0x01)
	char bUseLightmapDirectionality; // 0x208(0x01)
	char bForwardRenderUsePreintegratedGFForSimpleIBL; // 0x20c(0x01)
	char bUseHQForwardReflections; // 0x210(0x01)
	char bUsePlanarForwardReflections; // 0x210(0x01)
	char bNormalCurvatureToRoughness; // 0x210(0x01)
	Unknown D3D11TessellationMode; // 0x211(0x01)
	char bEnableCrackFreeDisplacement; // 0x212(0x01)
	char bEnableAdaptiveTessellation; // 0x212(0x01)
	char AllowTranslucentCustomDepthWrites; // 0x212(0x01)
	char Wireframe; // 0x212(0x01)
	char bCanMaskedBeAssumedOpaque; // 0x212(0x01)
	char bIsMasked; // 0x212(0x01)
	char bIsPreviewMaterial; // 0x212(0x01)
	char bIsFunctionPreviewMaterial; // 0x212(0x01)
	char bUseMaterialAttributes; // 0x213(0x01)
	char bCastRayTracedShadows; // 0x213(0x01)
	char bUseTranslucencyVertexFog; // 0x213(0x01)
	char bIsSky; // 0x213(0x01)
	char bComputeFogPerPixel; // 0x213(0x01)
	char bOutputTranslucentVelocity; // 0x213(0x01)
	char bAllowDevelopmentShaderCompile; // 0x213(0x01)
	char bIsMaterialEditorStatsMaterial; // 0x213(0x01)
	Unknown BlendableLocation; // 0x214(0x01)
	char BlendableOutputAlpha; // 0x215(0x01)
	char bEnableStencilTest; // 0x215(0x01)
	Unknown StencilCompare; // 0x216(0x01)
	Unknown StencilRefValue; // 0x217(0x01)
	Unknown RefractionMode; // 0x218(0x01)
	int32_t BlendablePriority; // 0x21c(0x04)
	char bIsBlendable; // 0x220(0x01)
	uint32_t UsageFlagWarnings; // 0x224(0x04)
	float RefractionDepthBias; // 0x228(0x04)
	Unknown StateID; // 0x22c(0x10)
	float MaxDisplacement; // 0x23c(0x04)
	Unknown CachedExpressionData; // 0x2c8(0x228)
	Unknown Elements; // 0x4b8(0x10)
	Unknown Input; // 0x40(0x0c)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	float ConstA; // 0x68(0x04)
	float ConstB; // 0x6c(0x04)
	float threshold; // 0xf0(0x04)
	Unknown Channel; // 0xf4(0x01)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Y; // 0x40(0x0c)
	Unknown X; // 0x54(0x0c)
	Unknown Y; // 0x40(0x0c)
	Unknown X; // 0x54(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown WorldPosition; // 0x40(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Temp; // 0x40(0x0c)
	Unknown A; // 0x40(0x10)
	Unknown B; // 0x58(0x10)
	Unknown ALPHA; // 0x70(0x0c)
	Unknown PixelAttributeBlendType; // 0x84(0x01)
	Unknown VertexAttributeBlendType; // 0x85(0x01)
	Unknown MaterialAttributes; // 0x40(0x10)
	Unknown Coordinate; // 0x40(0x0c)
	Unknown Height; // 0x54(0x0c)
	Unknown HeightRatioInput; // 0x68(0x0c)
	float HeightRatio; // 0x7c(0x04)
	float ReferencePlane; // 0x80(0x04)
	uint32_t ConstCoordinate; // 0x84(0x04)
	Unknown Input; // 0x40(0x0c)
	struct FName ParameterName; // 0x40(0x08)
	Unknown ExpressionGUID; // 0x48(0x10)
	Unknown DefaultValue; // 0x58(0x10)
	char bUseCustomPrimitiveData; // 0x68(0x01)
	Unknown PrimitiveDataIndex; // 0x69(0x01)
	Unknown MaskChannel; // 0x70(0x01)
	Unknown Input; // 0x74(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Min; // 0x54(0x0c)
	Unknown MAX; // 0x68(0x0c)
	Unknown ClampMode; // 0x7c(0x01)
	float MinDefault; // 0x80(0x04)
	float MaxDefault; // 0x84(0x04)
	Unknown Input; // 0x40(0x0c)
	Unknown Collection; // 0x40(0x08)
	struct FName ParameterName; // 0x48(0x08)
	Unknown ParameterId; // 0x50(0x10)
	int32_t SizeX; // 0x40(0x04)
	int32_t SizeY; // 0x44(0x04)
	struct FString Text; // 0x48(0x10)
	Unknown CommentColor; // 0x58(0x10)
	int32_t FontSize; // 0x68(0x04)
	Unknown Input; // 0x40(0x0c)
	char R; // 0x54(0x01)
	char G; // 0x54(0x01)
	char B; // 0x54(0x01)
	char A; // 0x54(0x01)
	float R; // 0x40(0x04)
	float R; // 0x40(0x04)
	float G; // 0x44(0x04)
	Unknown Constant; // 0x40(0x10)
	Unknown Constant; // 0x40(0x10)
	Unknown Input; // 0x40(0x0c)
	float Bias; // 0x54(0x04)
	float Scale; // 0x58(0x04)
	Unknown Input; // 0x40(0x0c)
	float Period; // 0x54(0x04)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	float DefaultValue; // 0x58(0x04)
	char bUseCustomPrimitiveData; // 0x5c(0x01)
	Unknown PrimitiveDataIndex; // 0x5d(0x01)
	Unknown Curve; // 0x60(0x08)
	Unknown Atlas; // 0x68(0x08)
	Unknown InputTime; // 0x70(0x0c)
	struct FString Code; // 0x40(0x10)
	Unknown OutputType; // 0x50(0x01)
	struct FString Description; // 0x58(0x10)
	Unknown Inputs; // 0x68(0x10)
	Unknown AdditionalDefines; // 0x78(0x10)
	Unknown IncludeFilePaths; // 0x88(0x10)
	Unknown Value; // 0x40(0x0c)
	Unknown Value; // 0x40(0x0c)
	Unknown TextureSize; // 0x40(0x0c)
	float ConstWidth; // 0x54(0x04)
	float ConstHeight; // 0x58(0x04)
	Unknown InOpacity; // 0x40(0x0c)
	Unknown FadeDistance; // 0x54(0x0c)
	float OpacityDefault; // 0x68(0x04)
	float FadeDistanceDefault; // 0x6c(0x04)
	Unknown FunctionValue; // 0x40(0x01)
	Unknown Depth; // 0x44(0x0c)
	Unknown InXY; // 0x40(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Fraction; // 0x54(0x0c)
	Unknown LuminanceFactors; // 0x68(0x10)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	Unknown Position; // 0x40(0x0c)
	Unknown Position; // 0x40(0x0c)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	float ConstA; // 0x68(0x04)
	float ConstB; // 0x6c(0x04)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	Unknown ParamNames; // 0x40(0x10)
	Unknown DefaultValue; // 0x50(0x10)
	uint32_t ParameterIndex; // 0x60(0x04)
	Unknown Default; // 0x40(0x0c)
	Unknown Inputs; // 0x54(0x30)
	Unknown Input; // 0x40(0x0c)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	Unknown Font; // 0x40(0x08)
	int32_t FontTexturePage; // 0x48(0x04)
	struct FName ParameterName; // 0x50(0x08)
	Unknown ExpressionGUID; // 0x58(0x10)
	struct FName Group; // 0x68(0x08)
	Unknown Input; // 0x40(0x0c)
	Unknown ExponentIn; // 0x40(0x0c)
	float Exponent; // 0x54(0x04)
	Unknown BaseReflectFractionIn; // 0x58(0x0c)
	float BaseReflectFraction; // 0x6c(0x04)
	Unknown Normal; // 0x70(0x0c)
	Unknown Preview; // 0x40(0x0c)
	struct FName InputName; // 0x54(0x08)
	struct FString Description; // 0x60(0x10)
	Unknown ID; // 0x70(0x10)
	Unknown InputType; // 0x80(0x01)
	Unknown PreviewValue; // 0x90(0x10)
	char bUsePreviewValueAsDefault; // 0xa0(0x01)
	int32_t SortPriority; // 0xa4(0x04)
	char bCompilingFunctionPreview; // 0xa8(0x01)
	struct FName OutputName; // 0x40(0x08)
	struct FString Description; // 0x48(0x10)
	int32_t SortPriority; // 0x58(0x04)
	Unknown A; // 0x5c(0x0c)
	char bLastPreviewed; // 0x70(0x01)
	Unknown ID; // 0x74(0x10)
	Unknown MaterialAttributes; // 0x40(0x10)
	Unknown AttributeGetTypes; // 0x58(0x10)
	Unknown Default; // 0x40(0x0c)
	Unknown StaticIndirect; // 0x54(0x0c)
	Unknown DynamicIndirect; // 0x68(0x0c)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	Unknown AGreaterThanB; // 0x68(0x0c)
	Unknown AEqualsB; // 0x7c(0x0c)
	Unknown ALessThanB; // 0x90(0x0c)
	float EqualsThreshold; // 0xa4(0x04)
	float ConstB; // 0xa8(0x04)
	float ConstAEqualsB; // 0xac(0x04)
	Unknown Realtime; // 0x40(0x0c)
	Unknown Lightmass; // 0x54(0x0c)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	Unknown ALPHA; // 0x68(0x0c)
	float ConstA; // 0x7c(0x04)
	float ConstB; // 0x80(0x04)
	float ConstAlpha; // 0x84(0x04)
	Unknown X; // 0x40(0x0c)
	Unknown X; // 0x40(0x0c)
	Unknown BaseColor; // 0x40(0x0c)
	Unknown Metallic; // 0x54(0x0c)
	Unknown Specular; // 0x68(0x0c)
	Unknown Roughness; // 0x7c(0x0c)
	Unknown Anisotropy; // 0x90(0x0c)
	Unknown EmissiveColor; // 0xa4(0x0c)
	Unknown Opacity; // 0xb8(0x0c)
	Unknown OpacityMask; // 0xcc(0x0c)
	Unknown Normal; // 0xe0(0x0c)
	Unknown Tangent; // 0xf4(0x0c)
	Unknown WorldPositionOffset; // 0x108(0x0c)
	Unknown WorldDisplacement; // 0x11c(0x0c)
	Unknown TessellationMultiplier; // 0x130(0x0c)
	Unknown SubsurfaceColor; // 0x144(0x0c)
	Unknown ClearCoat; // 0x158(0x0c)
	Unknown ClearCoatRoughness; // 0x16c(0x0c)
	Unknown AmbientOcclusion; // 0x180(0x0c)
	Unknown Refraction; // 0x194(0x0c)
	Unknown CustomizedUVs; // 0x1a8(0x60)
	Unknown PixelDepthOffset; // 0x248(0x0c)
	Unknown ShadingModel; // 0x25c(0x0c)
	Unknown Coordinates; // 0x40(0x0c)
	struct FName ParameterName; // 0x40(0x08)
	Unknown ExpressionGUID; // 0x48(0x10)
	Unknown Input; // 0x58(0x10)
	Unknown DefaultLayers; // 0x70(0x40)
	Unknown LayerCallers; // 0xb0(0x10)
	int32_t NumActiveLayerCallers; // 0xc0(0x04)
	Unknown BlendCallers; // 0xc8(0x10)
	int32_t NumActiveBlendCallers; // 0xd8(0x04)
	char bIsLayerGraphBuilt; // 0xdc(0x01)
	Unknown MaterialFunction; // 0x40(0x08)
	Unknown FunctionParameterInfo; // 0x48(0x10)
	Unknown Realtime; // 0x40(0x0c)
	Unknown MaterialProxy; // 0x54(0x0c)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	float ConstA; // 0x68(0x04)
	float ConstB; // 0x6c(0x04)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	float ConstA; // 0x68(0x04)
	float ConstB; // 0x6c(0x04)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	float ConstA; // 0x68(0x04)
	float ConstB; // 0x6c(0x04)
	Unknown Position; // 0x40(0x0c)
	Unknown FilterWidth; // 0x54(0x0c)
	float Scale; // 0x68(0x04)
	int32_t Quality; // 0x6c(0x04)
	Unknown NoiseFunction; // 0x70(0x01)
	char bTurbulence; // 0x74(0x01)
	int32_t Levels; // 0x78(0x04)
	float OutputMin; // 0x7c(0x04)
	float OutputMax; // 0x80(0x04)
	float LevelScale; // 0x84(0x04)
	char bTiling; // 0x88(0x01)
	uint32_t RepeatSize; // 0x8c(0x04)
	Unknown VectorInput; // 0x40(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Coordinate; // 0x40(0x0c)
	Unknown Time; // 0x54(0x0c)
	Unknown Speed; // 0x68(0x0c)
	float SpeedX; // 0x7c(0x04)
	float SpeedY; // 0x80(0x04)
	uint32_t ConstCoordinate; // 0x84(0x04)
	char bFractionalPart; // 0x88(0x01)
	char bBlend; // 0xd0(0x01)
	Unknown DefaultValue; // 0x40(0x0c)
	float ConstDefaultValue; // 0x54(0x04)
	uint32_t DataIndex; // 0x58(0x04)
	Unknown Base; // 0x40(0x0c)
	Unknown Exponent; // 0x54(0x0c)
	float ConstExponent; // 0x68(0x04)
	Unknown CurrentFrame; // 0x40(0x0c)
	Unknown PreviousFrame; // 0x54(0x0c)
	Unknown Default; // 0x40(0x0c)
	Unknown Inputs; // 0x54(0x24)
	Unknown Normal; // 0x40(0x0c)
	Unknown RayTraced; // 0x54(0x0c)
	Unknown InputVector; // 0x40(0x0c)
	Unknown CustomWorldNormal; // 0x40(0x0c)
	char bNormalizeCustomWorldNormal; // 0x54(0x01)
	Unknown Input; // 0x40(0x0c)
	Unknown NormalizedRotationAxis; // 0x40(0x0c)
	Unknown RotationAngle; // 0x54(0x0c)
	Unknown PivotPoint; // 0x68(0x0c)
	Unknown Position; // 0x7c(0x0c)
	float Period; // 0x90(0x04)
	Unknown Coordinate; // 0x40(0x0c)
	Unknown Time; // 0x54(0x0c)
	float CenterX; // 0x68(0x04)
	float CenterY; // 0x6c(0x04)
	float Speed; // 0x70(0x04)
	uint32_t ConstCoordinate; // 0x74(0x04)
	Unknown Input; // 0x40(0x0c)
	Unknown BaseColor; // 0x40(0x0c)
	Unknown Specular; // 0x54(0x0c)
	Unknown Roughness; // 0x68(0x0c)
	Unknown Normal; // 0x7c(0x0c)
	Unknown WorldHeight; // 0x90(0x0c)
	Unknown Opacity; // 0xa4(0x0c)
	Unknown Mask; // 0xb8(0x0c)
	Unknown Default; // 0x40(0x0c)
	Unknown VirtualTextureOutput; // 0x54(0x0c)
	Unknown Coordinates; // 0x40(0x0c)
	Unknown WorldPosition; // 0x54(0x0c)
	Unknown MipValue; // 0x68(0x0c)
	Unknown VirtualTexture; // 0x80(0x08)
	Unknown MaterialType; // 0x88(0x01)
	char bSinglePhysicalSpace; // 0x89(0x01)
	Unknown MipValueMode; // 0x8a(0x01)
	struct FName ParameterName; // 0x90(0x08)
	Unknown ExpressionGUID; // 0x98(0x10)
	struct FName Group; // 0xa8(0x08)
	Unknown Input; // 0x40(0x0c)
	Unknown InputMode; // 0x40(0x01)
	Unknown Input; // 0x44(0x0c)
	Unknown OffsetFraction; // 0x58(0x0c)
	Unknown ConstInput; // 0x6c(0x08)
	Unknown InputMode; // 0x40(0x01)
	Unknown Input; // 0x44(0x0c)
	Unknown Coordinates; // 0x58(0x0c)
	Unknown ConstInput; // 0x6c(0x08)
	Unknown Coordinates; // 0x40(0x0c)
	Unknown SceneTextureId; // 0x54(0x01)
	char bFiltered; // 0x55(0x01)
	Unknown Inputs; // 0x40(0x10)
	Unknown AttributeSetTypes; // 0x50(0x10)
	Unknown PixelShader; // 0x40(0x0c)
	Unknown VertexShader; // 0x54(0x0c)
	Unknown ShadingModel; // 0x40(0x01)
	Unknown Default; // 0x40(0x0c)
	Unknown Inputs; // 0x54(0x24)
	Unknown Default; // 0x40(0x0c)
	Unknown Shadow; // 0x54(0x0c)
	Unknown Input; // 0x40(0x0c)
	Unknown Input; // 0x40(0x0c)
	float Period; // 0x54(0x04)
	Unknown ScatteringCoefficients; // 0x40(0x0c)
	Unknown AbsorptionCoefficients; // 0x54(0x0c)
	Unknown PhaseG; // 0x68(0x0c)
	int32_t LightIndex; // 0x40(0x04)
	int32_t LightIndex; // 0x40(0x04)
	Unknown WorldPosition; // 0x44(0x0c)
	int32_t LightIndex; // 0x40(0x04)
	Unknown WorldPosition; // 0x40(0x0c)
	Unknown cell; // 0x40(0x0c)
	Unknown Index; // 0x54(0x0c)
	Unknown Seed; // 0x68(0x0c)
	uint32_t ConstIndex; // 0x7c(0x04)
	Unknown ConstSeed; // 0x80(0x08)
	Unknown GeometryInput; // 0x40(0x0c)
	Unknown WindInput; // 0x54(0x0c)
	Unknown LODInput; // 0x68(0x0c)
	Unknown ExtraBendWS; // 0x7c(0x0c)
	Unknown GeometryType; // 0x90(0x01)
	Unknown WindType; // 0x91(0x01)
	Unknown LODType; // 0x92(0x01)
	float BillboardThreshold; // 0x94(0x04)
	char bAccurateWindVelocities; // 0x98(0x01)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	Unknown Radius; // 0x68(0x0c)
	Unknown Hardness; // 0x7c(0x0c)
	float AttenuationRadius; // 0x90(0x04)
	float HardnessPercent; // 0x94(0x04)
	Unknown Density; // 0x40(0x0c)
	float ConstantDensity; // 0x54(0x04)
	Unknown Input; // 0x40(0x0c)
	char Value; // 0x40(0x01)
	char DefaultValue; // 0x58(0x01)
	Unknown Input; // 0x58(0x0c)
	char DefaultR; // 0x6c(0x01)
	char DefaultG; // 0x6c(0x01)
	char DefaultB; // 0x6c(0x01)
	char DefaultA; // 0x6c(0x01)
	char DefaultValue; // 0x40(0x01)
	Unknown A; // 0x44(0x0c)
	Unknown B; // 0x58(0x0c)
	Unknown Value; // 0x6c(0x0c)
	Unknown A; // 0x60(0x0c)
	Unknown B; // 0x74(0x0c)
	Unknown A; // 0x40(0x0c)
	Unknown B; // 0x54(0x0c)
	float ConstA; // 0x68(0x04)
	float ConstB; // 0x6c(0x04)
	Unknown Input; // 0x40(0x0c)
	float Period; // 0x54(0x04)
	Unknown Input; // 0x40(0x0c)
	Unknown Index; // 0x40(0x0c)
	Unknown Seed; // 0x54(0x0c)
	uint32_t ConstIndex; // 0x68(0x04)
	Unknown ConstSeed; // 0x6c(0x08)
	int32_t CoordinateIndex; // 0x40(0x04)
	float UTiling; // 0x44(0x04)
	float VTiling; // 0x48(0x04)
	char UnMirrorU; // 0x4c(0x01)
	char UnMirrorV; // 0x4c(0x01)
	Unknown TextureObject; // 0x40(0x0c)
	Unknown Property; // 0x54(0x01)
	char bBlend; // 0xf0(0x01)
	Unknown TransmittanceColor; // 0x40(0x0c)
	char bIgnorePause; // 0x40(0x01)
	char bOverride_Period; // 0x40(0x01)
	float Period; // 0x44(0x04)
	Unknown Input; // 0x40(0x0c)
	Unknown TransformSourceType; // 0x54(0x01)
	Unknown TransformType; // 0x55(0x01)
	Unknown Input; // 0x40(0x0c)
	Unknown TransformSourceType; // 0x54(0x01)
	Unknown TransformType; // 0x55(0x01)
	Unknown Input; // 0x40(0x0c)
	Unknown Position; // 0x40(0x0c)
	Unknown NoiseFunction; // 0x54(0x01)
	int32_t Quality; // 0x58(0x04)
	char bTiling; // 0x5c(0x01)
	uint32_t TileSize; // 0x60(0x04)
	Unknown Input; // 0x40(0x0c)
	Unknown Property; // 0x40(0x01)
	Unknown No; // 0x40(0x0c)
	Unknown Yes; // 0x54(0x0c)
	Unknown WorldPositionShaderOffset; // 0x40(0x01)
	Unknown StateID; // 0x28(0x10)
	Unknown MaterialFunctionUsage; // 0x38(0x01)
	struct FString Description; // 0x40(0x10)
	char bExposeToLibrary; // 0x50(0x01)
	char bPrefixParameterNames; // 0x50(0x01)
	char bReentrantFlag; // 0x50(0x01)
	Unknown Parent; // 0x40(0x08)
	Unknown Base; // 0x48(0x08)
	Unknown ScalarParameterValues; // 0x50(0x10)
	Unknown VectorParameterValues; // 0x60(0x10)
	Unknown TextureParameterValues; // 0x70(0x10)
	Unknown FontParameterValues; // 0x80(0x10)
	Unknown StaticSwitchParameterValues; // 0x90(0x10)
	Unknown StaticComponentMaskParameterValues; // 0xa0(0x10)
	Unknown RuntimeVirtualTextureParameterValues; // 0xb0(0x10)
	Unknown TargetActors; // 0x310(0x10)
	Unknown StateID; // 0x28(0x10)
	Unknown ScalarParameters; // 0x38(0x10)
	Unknown VectorParameters; // 0x48(0x10)
	Unknown Collection; // 0x30(0x08)
	Unknown MatineeData; // 0x310(0x08)
	struct FName MatineeControllerName; // 0x318(0x08)
	float PlayRate; // 0x320(0x04)
	char bPlayOnLevelLoad; // 0x324(0x01)
	char bForceStartPos; // 0x324(0x01)
	float ForceStartPosition; // 0x328(0x04)
	char bLooping; // 0x32c(0x01)
	char bRewindOnPlay; // 0x32c(0x01)
	char bNoResetOnRewind; // 0x32c(0x01)
	char bRewindIfAlreadyPlaying; // 0x32c(0x01)
	char bDisableRadioFilter; // 0x32c(0x01)
	char bClientSideOnly; // 0x32c(0x01)
	char bSkipUpdateIfNotVisible; // 0x32c(0x01)
	char bIsSkippable; // 0x32c(0x01)
	int32_t PreferredSplitScreenNum; // 0x330(0x04)
	char bDisableMovementInput; // 0x334(0x01)
	char bDisableLookAtInput; // 0x334(0x01)
	char bHidePlayer; // 0x334(0x01)
	char bHideHud; // 0x334(0x01)
	Unknown GroupActorInfos; // 0x338(0x10)
	char bShouldShowGore; // 0x348(0x01)
	Unknown GroupInst; // 0x350(0x10)
	Unknown CameraCuts; // 0x360(0x10)
	char bIsPlaying; // 0x370(0x01)
	char bReversePlayback; // 0x370(0x01)
	char bPaused; // 0x370(0x01)
	char bPendingStop; // 0x370(0x01)
	float InterpPosition; // 0x374(0x04)
	Unknown ReplicationForceIsPlaying; // 0x37c(0x01)
	struct FMulticastInlineDelegate OnPlay; // 0x380(0x10)
	struct FMulticastInlineDelegate OnStop; // 0x390(0x10)
	struct FMulticastInlineDelegate OnPause; // 0x3a0(0x10)
	Unknown CameraAnim; // 0x3b8(0x08)
	struct FName MeshReductionModuleName; // 0x38(0x08)
	Unknown AvailableProducts; // 0x38(0x10)
	struct FString LastError; // 0x48(0x10)
	struct FString LastErrorSolution; // 0x58(0x10)
	struct FMulticastInlineDelegate OnMK3DKillcamCompleteEvent; // 0xb0(0x10)
	Unknown MK3DKillEvents; // 0xd8(0x10)
	float KillcamBeforeSec; // 0xe8(0x04)
	float KillcamAfterSec; // 0xec(0x04)
	struct FMulticastInlineDelegate OnMK3DTargetcamCompleteEvent; // 0xb0(0x10)
	Unknown MK3DTargetEvents; // 0xd8(0x10)
	Unknown PendingNetObjectsHolder; // 0x2f0(0x10)
	Unknown DataVersion; // 0x30(0x01)
	float Time; // 0x34(0x04)
	Unknown ModelBodySetup; // 0x4d0(0x08)
	Unknown BaseSkelMesh; // 0x28(0x08)

	void ExecuteUbergraph(int32_t EntryPoint); // ExecuteUbergraph CoreUObject.Object.ExecuteUbergraph // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-SkillTargetingBombing.BP-SkillTargetingBombing_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void SliceProceduralMesh(Unknown InProcMesh, Unknown PlanePosition, Unknown PlaneNormal, char bCreateOtherHalf, Unknown& OutOtherHalfProcMesh, Unknown CapOption, Unknown CapMaterial); // SliceProceduralMesh ProceduralMeshComponent.KismetProceduralMeshLibrary.SliceProceduralMesh // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x178e790>
	void UpdateMeshSection_LinearColor(int32_t SectionIndex, Unknown& Vertices, Unknown& Normals, Unknown& UV0, Unknown& UV1, Unknown& UV2, Unknown& UV3, Unknown& VertexColors, Unknown& Tangents); // UpdateMeshSection_LinearColor ProceduralMeshComponent.ProceduralMeshComponent.UpdateMeshSection_LinearColor // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x178ec90>
	void UnloadMaskOutCache(); // UnloadMaskOutCache CustomizableObject.CustomizableObject.UnloadMaskOutCache // (Final|Native|Public|BlueprintCallable) // <Game+0x10384d0>
	void UpdateSkeletalMeshAsync(char bIgnoreCloseDist, char bForceHighPriority); // UpdateSkeletalMeshAsync CustomizableObject.CustomizableObjectInstance.UpdateSkeletalMeshAsync // (Final|Native|Public|BlueprintCallable) // <Game+0x10384f0>
	void SetReleaseMutableTexturesImmediately(char bReleaseTextures); // SetReleaseMutableTexturesImmediately CustomizableObject.CustomizableObjectSystem.SetReleaseMutableTexturesImmediately // (Final|Native|Public|BlueprintCallable) // <Game+0x103cb50>
	void UpdateSkeletalMeshAsync(char bNeverSkipUpdate); // UpdateSkeletalMeshAsync CustomizableObject.CustomizableSkeletalComponent.UpdateSkeletalMeshAsync // (Final|Native|Public|BlueprintCallable) // <Game+0x103cbe0>
	void DelegatedCallback(Unknown Instance); // DelegatedCallback CustomizableObject.InstanceUpdatedHelper.DelegatedCallback // (Final|Native|Public) // <Game+0x103c930>
	void DecreaseDestructibleComponentCount(); // DecreaseDestructibleComponentCount BP-DestructibleInterface.BP-DestructibleInterface_C.DecreaseDestructibleComponentCount // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct ControlWidget.ControlWidget_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void ToggleActive(); // ToggleActive Engine.ActorComponent.ToggleActive // (Native|Public|BlueprintCallable) // <Game+0x3385ac0>
	void ToggleVisibility(char bPropagateToChildren); // ToggleVisibility Engine.SceneComponent.ToggleVisibility // (Final|Native|Public|BlueprintCallable) // <Game+0x3de3730>
	void OnTickReplaySampleRecord(Unknown DemoNetDriver, float MinRecordHz, float MaxRecordHz, char bSaveCheckpoint); // OnTickReplaySampleRecord Engine.MKActorEx.OnTickReplaySampleRecord // (Final|Native|Private) // <Game+0x3d90770>
	char WasRecentlyRendered(float Tolerance); // WasRecentlyRendered Engine.Actor.WasRecentlyRendered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3c5f4e0>
	void OnRep_ReplicatedPhysAsset(); // OnRep_ReplicatedPhysAsset Engine.SkeletalMeshActor.OnRep_ReplicatedPhysAsset // (Native|Public) // <Game+0x1237680>
	char WasRecentlyRendered(float Tolerance); // WasRecentlyRendered Engine.PrimitiveComponent.WasRecentlyRendered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dd0a20>
	void SetVectorParameterValueOnMaterials(struct FName ParameterName, Unknown ParameterValue); // SetVectorParameterValueOnMaterials Engine.MeshComponent.SetVectorParameterValueOnMaterials // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3d884d0>
	void UnloadSkinWeightProfile(struct FName InProfileName); // UnloadSkinWeightProfile Engine.SkinnedMeshComponent.UnloadSkinWeightProfile // (Final|Native|Public|BlueprintCallable) // <Game+0x3df72f0>
	void SetLODSettings(Unknown InLODSettings); // SetLODSettings Engine.SkeletalMesh.SetLODSettings // (Final|Native|Public|BlueprintCallable) // <Game+0x16b4b10>
	void SetMobility(Unknown InMobility); // SetMobility Engine.StaticMeshActor.SetMobility // (Final|Native|Public|BlueprintCallable) // <Game+0x124d330>
	void ShowHUD(); // ShowHUD Engine.HUD.ShowHUD // (Exec|Native|Public) // <Game+0x1e4f220>
	void Activate(); // Activate Engine.BlueprintAsyncActionBase.Activate // (Native|Public|BlueprintCallable) // <Game+0x2edcf90>
	void UnlinkAnimClassLayers(Unknown InClass); // UnlinkAnimClassLayers Engine.SkeletalMeshComponent.UnlinkAnimClassLayers // (Final|Native|Public|BlueprintCallable) // <Game+0x3deee80>
	void UnlockAIResources(char bUnlockMovement, char UnlockAILogic); // UnlockAIResources Engine.AnimInstance.UnlockAIResources // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // <Game+0x1edc390>
	char ScriptRunAssetExportTask(Unknown Task); // ScriptRunAssetExportTask Engine.Exporter.ScriptRunAssetExportTask // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void WorldOriginLocationChanged(Unknown OldOriginLocation, Unknown NewOriginLocation); // WorldOriginLocationChanged Engine.LevelScriptActor.WorldOriginLocationChanged // (Event|Public|HasDefaults|BlueprintEvent) // <Game+0x23ad490>
	void SetVectorParameter(struct FName ParameterName, Unknown Param); // SetVectorParameter Engine.FXSystemComponent.SetVectorParameter // (Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3daaf20>
	char Received_Notify(Unknown MeshComp, Unknown Animation); // Received_Notify Engine.AnimNotify.Received_Notify // (Event|Public|BlueprintEvent|Const) // <Game+0x23ad490>
	char Received_NotifyTick(Unknown MeshComp, Unknown Animation, float FrameDeltaTime); // Received_NotifyTick Engine.AnimNotifyState.Received_NotifyTick // (Event|Public|BlueprintEvent|Const) // <Game+0x23ad490>
	Unknown K2_GetWorldSettings(); // K2_GetWorldSettings Engine.World.K2_GetWorldSettings // (Final|Native|Public|BlueprintCallable) // <Game+0x3e28f40>
	void OnChangedViewMode(); // OnChangedViewMode Engine.MKPawnEx.OnChangedViewMode // (Native|Event|Public|BlueprintEvent) // <Game+0x1e4f220>
	void SpawnDefaultController(); // SpawnDefaultController Engine.Pawn.SpawnDefaultController // (Native|Public|BlueprintCallable) // <Game+0x3daf690>
	void UnCrouch(char bClientSimulation); // UnCrouch Engine.Character.UnCrouch // (Native|Public|BlueprintCallable) // <Game+0x202aa80>
	void UpdateSpline(); // UpdateSpline Engine.SplineComponent.UpdateSpline // (Final|Native|Public|BlueprintCallable) // <Game+0x3e0c7e0>
	void StopDelayed(float DelayTime); // StopDelayed Engine.AudioComponent.StopDelayed // (Final|Native|Public|BlueprintCallable) // <Game+0x3c8bfb0>
	void StartPlay(); // StartPlay Engine.GameModeBase.StartPlay // (Native|Public|BlueprintCallable) // <Game+0x3ce2330>
	void StartMatch(); // StartMatch Engine.GameMode.StartMatch // (Native|Public|BlueprintCallable) // <Game+0x3ce2310>
	void OnRep_SpectatorClass(); // OnRep_SpectatorClass Engine.GameStateBase.OnRep_SpectatorClass // (Native|Protected) // <Game+0x1f1c220>
	void OnRep_MatchState(); // OnRep_MatchState Engine.GameState.OnRep_MatchState // (Native|Public) // <Game+0x3ce1c70>
	void UnPossess(); // UnPossess Engine.Controller.UnPossess // (Final|Native|Public|BlueprintCallable) // <Game+0x3cbb490>
	char WasInputKeyJustReleased(Unknown Key); // WasInputKeyJustReleased Engine.PlayerController.WasInputKeyJustReleased // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dc2600>
	void StopMovementImmediately(); // StopMovementImmediately Engine.MovementComponent.StopMovementImmediately // (Native|Public|BlueprintCallable) // <Game+0x2050030>
	void StopMovementKeepPathing(); // StopMovementKeepPathing Engine.NavMovementComponent.StopMovementKeepPathing // (Final|Native|Public|BlueprintCallable) // <Game+0x3d9a090>
	Unknown K2_GetInputVector(); // K2_GetInputVector Engine.PawnMovementComponent.K2_GetInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3daef40>
	void SetWalkableFloorZ(float InWalkableFloorZ); // SetWalkableFloorZ Engine.CharacterMovementComponent.SetWalkableFloorZ // (Final|Native|Public|BlueprintCallable) // <Game+0x3cb2690>
	void OnInterpToggle(char bEnable); // OnInterpToggle Engine.SceneCapture2D.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // <Game+0x3db71b0>
	void SetBoxExtent(Unknown InBoxExtent, char bUpdateOverlaps); // SetBoxExtent Engine.BoxComponent.SetBoxExtent // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3ca4330>
	void SetUseFieldOfViewForLOD(char bInUseFieldOfViewForLOD); // SetUseFieldOfViewForLOD Engine.CameraComponent.SetUseFieldOfViewForLOD // (Final|Native|Public|BlueprintCallable) // <Game+0x3ca48a0>
	void Walk(); // Walk Engine.CheatManager.Walk // (Exec|Native|Public|BlueprintCallable) // <Game+0x2edce10>
	void SetReplaySample(Unknown Target, Unknown ReplaySample, char bSaveCheckpoint); // SetReplaySample Engine.MKDemoNetDriverEx.SetReplaySample // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3d90aa0>
	char SetStaticMesh(Unknown NewMesh); // SetStaticMesh Engine.StaticMeshComponent.SetStaticMesh // (Native|Public|BlueprintCallable) // <Game+0x168dfb0>
	void PlayReplayCommand(struct FString DemoName); // PlayReplayCommand Engine.MKGameInstanceEx.PlayReplayCommand // (Final|Exec|Native|Public) // <Game+0x3d909b0>
	void ReceiveShutdown(); // ReceiveShutdown Engine.GameInstance.ReceiveShutdown // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	char UpdateInstanceTransform(int32_t InstanceIndex, Unknown& NewInstanceTransform, char bWorldSpace, char bMarkRenderStateDirty, char bTeleport); // UpdateInstanceTransform Engine.InstancedStaticMeshComponent.UpdateInstanceTransform // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d031d0>
	char RemoveInstances(Unknown& InstancesToRemove); // RemoveInstances Engine.HierarchicalInstancedStaticMeshComponent.RemoveInstances // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3cf7130>
	void ToggleReplayPauseAndResume(); // ToggleReplayPauseAndResume Engine.MK3DReplayController.ToggleReplayPauseAndResume // (Final|Native|Protected|BlueprintCallable) // <Game+0x3d8c360>
	void TurnAtRate(float Rate); // TurnAtRate Engine.DefaultPawn.TurnAtRate // (Native|Public|BlueprintCallable) // <Game+0x3cc4580>
	void MK3DSpectatorPawn_SetMaxSpeed(float fSpeed); // MK3DSpectatorPawn_SetMaxSpeed Engine.MK3DSpectatorPawn.MK3DSpectatorPawn_SetMaxSpeed // (Final|Exec|Native|Public) // <Game+0x3d90500>
	void StopCameraShake(Unknown ShakeInstance, char bImmediately); // StopCameraShake Engine.PlayerCameraManager.StopCameraShake // (Native|Public|BlueprintCallable) // <Game+0x3db80f0>
	void ReceiveOverrideWith(Unknown OldPlayerState); // ReceiveOverrideWith Engine.PlayerState.ReceiveOverrideWith // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	char UpdateKillcamInfo(Unknown WorldContextObject, Unknown Recorder, Unknown Target, Unknown Killer, Unknown Victim, char bUpdateTime); // UpdateKillcamInfo Engine.MK3DEventFunction.UpdateKillcamInfo // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d8c380>
	void ShowOnlyComponent(Unknown InComponent); // ShowOnlyComponent Engine.SceneCaptureComponent.ShowOnlyComponent // (Final|Native|Public|BlueprintCallable) // <Game+0x3de35f0>
	void CaptureScene(); // CaptureScene Engine.SceneCaptureComponent2D.CaptureScene // (Final|Native|Public|BlueprintCallable) // <Game+0x3ddfff0>
	void SetArrowColor(Unknown NewColor); // SetArrowColor Engine.ArrowComponent.SetArrowColor // (Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3c83940>
	void StopSimulating(Unknown& HitResult); // StopSimulating Engine.ProjectileMovementComponent.StopSimulating // (Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3dd33c0>
	void ValidateSettings(); // ValidateSettings Engine.GameUserSettings.ValidateSettings // (Native|Public|BlueprintCallable) // <Game+0x2edce10>
	void SetCapsuleSize(float InRadius, float InHalfHeight, char bUpdateOverlaps); // SetCapsuleSize Engine.CapsuleComponent.SetCapsuleSize // (Final|Native|Public|BlueprintCallable) // <Game+0x3cafee0>
	void SSSwapControllers(); // SSSwapControllers Engine.GameViewportClient.SSSwapControllers // (Exec|Native|Public) // <Game+0x2edcf90>
	void OnRep_WorldGravityZ(); // OnRep_WorldGravityZ Engine.WorldSettings.OnRep_WorldGravityZ // (Native|Public) // <Game+0x1e4f220>
	char IsDisabled(); // IsDisabled Engine.CameraModifier.IsDisabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2edcf10>
	void OnRep_bEnabled(); // OnRep_bEnabled Engine.SkyLight.OnRep_bEnabled // (Native|Public) // <Game+0x1e4f220>
	void SetForceMipLevelsToBeResident(char OverrideForceMiplevelsToBeResident, char bForceMiplevelsToBeResidentValue, float ForceDuration, int32_t CinematicTextureGroups, char bFastResponse); // SetForceMipLevelsToBeResident Engine.MaterialInterface.SetForceMipLevelsToBeResident // (RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3d83f20>
	Unknown K2_GetVectorParameterValue(struct FName ParameterName); // K2_GetVectorParameterValue Engine.MaterialInstanceConstant.K2_GetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3d83c20>
	int32_t GetAutoActivatePlayerIndex(); // GetAutoActivatePlayerIndex Engine.CameraActor.GetAutoActivatePlayerIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3ca3f20>
	void Stop(); // Stop Engine.AmbientSound.Stop // (Final|Native|Public|BlueprintCallable) // <Game+0x3c64100>
	float GetPlayLength(); // GetPlayLength Engine.AnimSequenceBase.GetPlayLength // (Native|Public|BlueprintCallable) // <Game+0x3c7db70>
	float GetDefaultBlendOutTime(); // GetDefaultBlendOutTime Engine.AnimMontage.GetDefaultBlendOutTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x328b060>
	Unknown OverridePSTemplate(Unknown MeshComp, Unknown Animation); // OverridePSTemplate Engine.AnimNotifyState_Trail.OverridePSTemplate // (Event|Public|BlueprintEvent|Const) // <Game+0x23ad490>
	void StopAnim(); // StopAnim Engine.AnimSingleNodeInstance.StopAnim // (Final|Native|Public|BlueprintCallable) // <Game+0x3c7e380>
	Unknown AsyncSaveGameToSlot(Unknown WorldContextObject, Unknown SaveGameObject, struct FString SlotName, int32_t UserIndex); // AsyncSaveGameToSlot Engine.AsyncActionHandleSaveGame.AsyncSaveGameToSlot // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3c87aa0>
	Unknown AsyncLoadPrimaryAsset(Unknown WorldContextObject, Unknown PrimaryAsset, Unknown& LoadBundles); // AsyncLoadPrimaryAsset Engine.AsyncActionLoadPrimaryAsset.AsyncLoadPrimaryAsset // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3c87560>
	Unknown AsyncLoadPrimaryAssetClass(Unknown WorldContextObject, Unknown PrimaryAsset, Unknown& LoadBundles); // AsyncLoadPrimaryAssetClass Engine.AsyncActionLoadPrimaryAssetClass.AsyncLoadPrimaryAssetClass // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3c876a0>
	Unknown AsyncLoadPrimaryAssetList(Unknown WorldContextObject, Unknown& PrimaryAssetList, Unknown& LoadBundles); // AsyncLoadPrimaryAssetList Engine.AsyncActionLoadPrimaryAssetList.AsyncLoadPrimaryAssetList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c87940>
	Unknown AsyncLoadPrimaryAssetClassList(Unknown WorldContextObject, Unknown& PrimaryAssetList, Unknown& LoadBundles); // AsyncLoadPrimaryAssetClassList Engine.AsyncActionLoadPrimaryAssetClassList.AsyncLoadPrimaryAssetClassList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c877e0>
	Unknown AsyncChangeBundleStateForPrimaryAssetList(Unknown WorldContextObject, Unknown& PrimaryAssetList, Unknown& AddBundles, Unknown& RemoveBundles); // AsyncChangeBundleStateForPrimaryAssetList Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForPrimaryAssetList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c87280>
	void StartPrecompute(); // StartPrecompute Engine.AtmosphericFogComponent.StartPrecompute // (Final|Native|Public|BlueprintCallable) // <Game+0x151b310>
	void SetReverbSettings(Unknown& NewReverbSettings); // SetReverbSettings Engine.AudioVolume.SetReverbSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3c8ba20>
	void OnActorEndPlay(Unknown Actor, Unknown EndPlayReason); // OnActorEndPlay Engine.AutoDestroySubsystem.OnActorEndPlay // (Final|Native|Private) // <Game+0x3c92250>
	char RegisterMovementComponent(Unknown MovementComp, float AvoidanceWeight); // RegisterMovementComponent Engine.AvoidanceManager.RegisterMovementComponent // (Final|Native|Public|BlueprintCallable) // <Game+0x3c92310>
	void SetUV(int32_t NewU, int32_t NewUL, int32_t NewV, int32_t NewVL); // SetUV Engine.BillboardComponent.SetUV // (Native|Public|BlueprintCallable) // <Game+0x3c925f0>
	void SetMapPropertyByName(Unknown Object, struct FName PropertyName, Unknown& Value); // SetMapPropertyByName Engine.BlueprintMapLibrary.SetMapPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c97ef0>
	struct FString VideoCaptureDir(); // VideoCaptureDir Engine.BlueprintPathsLibrary.VideoCaptureDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3c9c5e0>
	int32_t ScheduleLocalNotificationFromNow(int32_t inSecondsFromNow, struct FText& Title, struct FText& Body, struct FText& Action, struct FString ActivationEvent); // ScheduleLocalNotificationFromNow Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationFromNow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c9e560>
	void SetSetPropertyByName(Unknown Object, struct FName PropertyName, Unknown& Value); // SetSetPropertyByName Engine.BlueprintSetLibrary.SetSetPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c9e800>
	void Stop(char bImmediate); // Stop Engine.CameraAnimInst.Stop // (Final|Native|Public|BlueprintCallable) // <Game+0x3ca4930>
	void ReceiveStopShake(char bImmediately); // ReceiveStopShake Engine.CameraShake.ReceiveStopShake // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void StopAllCameraShakes(char bImmediately); // StopAllCameraShakes Engine.CameraShakeSourceComponent.StopAllCameraShakes // (Final|Native|Public|BlueprintCallable) // <Game+0x3ca8e80>
	Unknown K2_TextSize(Unknown RenderFont, struct FString RenderText, Unknown Scale); // K2_TextSize Engine.Canvas.K2_TextSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3ca8cb0>
	void UpdateResource(); // UpdateResource Engine.CanvasRenderTarget2D.UpdateResource // (Native|Public|BlueprintCallable) // <Game+0x3cb0080>
	void SetChildActorClass(Unknown InClass); // SetChildActorClass Engine.ChildActorComponent.SetChildActorClass // (Final|Native|Public|BlueprintCallable) // <Game+0x3cb7700>
	void GetValueRange(float& MinValue, float& MaxValue); // GetValueRange Engine.CurveBase.GetValueRange // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbfea0>
	float GetFloatValue(float InTime); // GetFloatValue Engine.CurveFloat.GetFloatValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbfc60>
	Unknown GetLinearColorValue(float InTime); // GetLinearColorValue Engine.CurveLinearColor.GetLinearColorValue // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbfcf0>
	int32_t Blueprint_GetSizeY(); // Blueprint_GetSizeY Engine.Texture2D.Blueprint_GetSizeY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3e1df20>
	char GetCurvePosition(Unknown InCurve, float& Position); // GetCurvePosition Engine.CurveLinearColorAtlas.GetCurvePosition // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3cbf390>
	float GetCurveValue(struct FName CurveName); // GetCurveValue Engine.CurveSourceInterface.GetCurveValue // (Native|Event|Public|BlueprintEvent|Const) // <Game+0x3cbf470>
	Unknown GetVectorValue(float InTime); // GetVectorValue Engine.CurveVector.GetVectorValue // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbff80>
	void GetDataTableRowNames(Unknown Table, Unknown& OutRowNames); // GetDataTableRowNames Engine.DataTableFunctionLibrary.GetDataTableRowNames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3cbfb80>
	void ToggleDisplay(); // ToggleDisplay Engine.DebugCameraController.ToggleDisplay // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc00c0>
	void SetDecalMaterial(Unknown NewDecalMaterial); // SetDecalMaterial Engine.DecalActor.SetDecalMaterial // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc3d90>
	void SetSortOrder(int32_t Value); // SetSortOrder Engine.DecalComponent.SetSortOrder // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc4500>
	void ToggleEnabled(); // ToggleEnabled Engine.Light.ToggleEnabled // (Final|Native|Public|BlueprintCallable) // <Game+0x3d69860>
	void SetSamplesPerPixel(int32_t NewValue); // SetSamplesPerPixel Engine.LightComponentBase.SetSamplesPerPixel // (Final|Native|Public|BlueprintCallable) // <Game+0x3d6c4e0>
	void SetVolumetricScatteringIntensity(float NewIntensity); // SetVolumetricScatteringIntensity Engine.LightComponent.SetVolumetricScatteringIntensity // (Final|Native|Public|BlueprintCallable) // <Game+0x3d697e0>
	void SetShadowDistanceFadeoutFraction(float NewValue); // SetShadowDistanceFadeoutFraction Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc4480>
	void SetSphereRadius(float InSphereRadius, char bUpdateOverlaps); // SetSphereRadius Engine.SphereComponent.SetSphereRadius // (Final|Native|Public|BlueprintCallable) // <Game+0x3e0be20>
	void ToggleActive(); // ToggleActive Engine.Emitter.ToggleActive // (Final|Native|Public|BlueprintCallable) // <Game+0x3cccba0>
	void OnRep_bEnabled(); // OnRep_bEnabled Engine.ExponentialHeightFog.OnRep_bEnabled // (Native|Public) // <Game+0x1e4f220>
	void SetVolumetricFogScatteringDistribution(float NewValue); // SetVolumetricFogScatteringDistribution Engine.ExponentialHeightFogComponent.SetVolumetricFogScatteringDistribution // (Final|Native|Public|BlueprintCallable) // <Game+0x3cded50>
	void Stop(); // Stop Engine.ForceFeedbackComponent.Stop // (Native|Public|BlueprintCallable) // <Game+0x3cdedd0>
	void UnloadStreamLevel(Unknown WorldContextObject, struct FName LevelName, Unknown LatentInfo, char bShouldBlockOnUnload); // UnloadStreamLevel Engine.GameplayStatics.UnloadStreamLevel // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3cee4c0>
	void SetOuterConeAngle(float NewOuterConeAngle); // SetOuterConeAngle Engine.SpotLight.SetOuterConeAngle // (Final|Native|Public|BlueprintCallable) // <Game+0x3e10bd0>
	void StopPerformanceSnapshots(); // StopPerformanceSnapshots Engine.HealthSnapshotBlueprintLibrary.StopPerformanceSnapshots // (Final|Exec|Native|Static|Public|BlueprintCallable) // <Game+0x3cf73a0>
	float RandomSobolFloat(int32_t Index, int32_t Dimension, float Seed); // RandomSobolFloat Engine.ImportanceSamplingLibrary.RandomSobolFloat // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3cfdce0>
	char WasControllerKeyJustReleased(Unknown Key); // WasControllerKeyJustReleased Engine.InputComponent.WasControllerKeyJustReleased // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cfd430>
	void SaveKeyMappings(); // SaveKeyMappings Engine.InputSettings.SaveKeyMappings // (Final|Native|Public|BlueprintCallable) // <Game+0x3cfe120>
	void StopSimulating(Unknown& HitResult); // StopSimulating Engine.InterpToMovementComponent.StopSimulating // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3d07160>
	void SetArrayPropertyByName(Unknown Object, struct FName PropertyName, Unknown& Value); // SetArrayPropertyByName Engine.KismetArrayLibrary.SetArrayPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3d0c070>
	void Parse_StringToGuid(struct FString GuidString, Unknown& OutGuid, char& SUCCESS); // Parse_StringToGuid Engine.KismetGuidLibrary.Parse_StringToGuid // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x3d0fa30>
	char PointerEvent_IsTouchEvent(Unknown& Input); // PointerEvent_IsTouchEvent Engine.KismetInputLibrary.PointerEvent_IsTouchEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x3d109a0>
	char SetCurrentLocale(struct FString Culture, char SaveToConfig); // SetCurrentLocale Engine.KismetInternationalizationLibrary.SetCurrentLocale // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d10e90>
	void SetVectorParameterValue(Unknown WorldContextObject, Unknown Collection, struct FName ParameterName, Unknown& ParameterValue); // SetVectorParameterValue Engine.KismetMaterialLibrary.SetVectorParameterValue // (Final|RequiredAPI|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d38e50>
	int32_t Xor_IntInt(int32_t A, int32_t B); // Xor_IntInt Engine.KismetMathLibrary.Xor_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d406c0>
	void MarkBit(int32_t& Data, int32_t Index); // MarkBit Engine.KismetNodeHelperLibrary.MarkBit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3d47160>
	void SetCastInsetShadowForAllAttachments(Unknown PrimitiveComponent, char bCastInsetShadow, char bLightAttachmentsAsGroup); // SetCastInsetShadowForAllAttachments Engine.KismetRenderingLibrary.SetCastInsetShadowForAllAttachments // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // <Game+0x3d485d0>
	struct FString TrimTrailing(struct FString SourceString); // TrimTrailing Engine.KismetStringLibrary.TrimTrailing // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d48de0>
	char IsRegisteredTableId(struct FName TableID); // IsRegisteredTableId Engine.KismetStringTableLibrary.IsRegisteredTableId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d568d0>
	void UnregisterForRemoteNotifications(); // UnregisterForRemoteNotifications Engine.KismetSystemLibrary.UnregisterForRemoteNotifications // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d5b7a0>
	struct FText TextTrimTrailing(struct FText& InText); // TextTrimTrailing Engine.KismetTextLibrary.TextTrimTrailing // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x3d65980>
	char ShouldBeLoaded(); // ShouldBeLoaded Engine.LevelStreaming.ShouldBeLoaded // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x34ef380>
	Unknown LoadLevelInstanceBySoftObjectPtr(Unknown WorldContextObject, Unknown Level, Unknown Location, Unknown Rotation, char& bOutSuccess); // LoadLevelInstanceBySoftObjectPtr Engine.LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d67fb0>
	void SetIntensityUnits(Unknown NewIntensityUnits); // SetIntensityUnits Engine.LocalLightComponent.SetIntensityUnits // (Final|Native|Public|BlueprintCallable) // <Game+0x3d6c460>
	void SetElements(Unknown& NewElements); // SetElements Engine.MaterialBillboardComponent.SetElements // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3d70e90>
	void SetVectorParameterValueByInfo(Unknown& ParameterInfo, Unknown Value); // SetVectorParameterValueByInfo Engine.MaterialInstanceDynamic.SetVectorParameterValueByInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d84500>
	void Stop(); // Stop Engine.MatineeActor.Stop // (Native|Public|BlueprintCallable) // <Game+0x1f19d50>
	void RemovePaintedVertices(Unknown StaticMeshComponent); // RemovePaintedVertices Engine.MeshVertexPainterKismetLibrary.RemovePaintedVertices // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d8bec0>
	void OnJumpCompleteForKillcam(char bSuccess); // OnJumpCompleteForKillcam Engine.MK3DKillcamComponent.OnJumpCompleteForKillcam // (Final|Native|Public) // <Game+0x3d8ba80>
	void EnumerateMK3DTargetEvents(Unknown World); // EnumerateMK3DTargetEvents Engine.MK3DTargetcamComponent.EnumerateMK3DTargetEvents // (Final|Native|Public) // <Game+0x3d8f400>
	Unknown MakeReplaySample(Unknown Actor); // MakeReplaySample Engine.ReplaySampleBase.MakeReplaySample // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d90580>
	char IsViewTargetPawn(Unknown InPawn, Unknown InPC); // IsViewTargetPawn Engine.MKUtils.IsViewTargetPawn // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d90300>
};

