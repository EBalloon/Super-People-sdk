// LowEntryParsedHashcash LowEntryExtendedStandar.LowEntryParsedHashcash
 struct ULowEntryParsedHashcash : Object {
	Unknown UberGraphFrame; // 0x248(0x08)
	Unknown BlockMouse; // 0x250(0x08)
	Unknown Button_Accept; // 0x258(0x08)
	Unknown Button_Cancel; // 0x260(0x08)
	Unknown Button_Close; // 0x268(0x08)
	Unknown Button_Max; // 0x270(0x08)
	Unknown Button_Min; // 0x278(0x08)
	Unknown Image_9; // 0x280(0x08)
	Unknown Slider_137; // 0x288(0x08)
	Unknown TextBlock_Accept; // 0x290(0x08)
	Unknown TextBlock_MaxCount; // 0x298(0x08)
	Unknown TextBlock_MinCount; // 0x2a0(0x08)
	Unknown TextBlock_Title; // 0x2a8(0x08)
	Unknown TextBox_DropCount; // 0x2b0(0x08)
	int32_t CurrentCount; // 0x2b8(0x04)
	int32_t MaxCount; // 0x2bc(0x04)
	struct FText LastEnteredText; // 0x2c0(0x18)
	Unknown ItemInfo; // 0x2d8(0x98)
	Unknown ItemDetailInfo; // 0x370(0x490)
	Unknown PickupRef; // 0x800(0x08)
	Unknown DropBoxRef; // 0x808(0x08)
	Unknown InventoryWidget; // 0x810(0x08)
	Unknown bClosing; // 0x818(0x01)
	Unknown MaterialSlot; // 0x820(0x08)
	Unknown DefaultSceneRoot; // 0x638(0x08)
	Unknown MassMode; // 0x28(0x01)
	float UniformMass; // 0x2c(0x04)
	float TotalMass; // 0x30(0x04)
	float Density; // 0x34(0x04)
	float MinPerParticleMass; // 0x38(0x04)
	float EdgeStiffness; // 0x3c(0x04)
	float BendingStiffness; // 0x40(0x04)
	float AreaStiffness; // 0x44(0x04)
	float VolumeStiffness; // 0x48(0x04)
	float StrainLimitingStiffness; // 0x4c(0x04)
	float LimitScale; // 0x50(0x04)
	Unknown bUseGeodesicDistance; // 0x54(0x01)
	float ShapeTargetStiffness; // 0x58(0x04)
	float CollisionThickness; // 0x5c(0x04)
	float FrictionCoefficient; // 0x60(0x04)
	float DampingCoefficient; // 0x64(0x04)
	float DragCoefficient; // 0x68(0x04)
	float AnimDriveSpringStiffness; // 0x6c(0x04)
	Unknown bUseBendingElements; // 0x70(0x01)
	Unknown bUseTetrahedralConstraints; // 0x71(0x01)
	Unknown bUseThinShellVolumeConstraints; // 0x72(0x01)
	Unknown bUseSelfCollisions; // 0x73(0x01)
	Unknown bUseContinuousCollisionDetection; // 0x74(0x01)
	Unknown LinearVelocityScale; // 0x78(0x0c)
	float AngularVelocityScale; // 0x84(0x04)
	int32_t IterationCount; // 0x28(0x04)
	int32_t SubdivisionCount; // 0x2c(0x04)
	float SelfCollisionThickness; // 0x30(0x04)
	float CollisionThickness; // 0x34(0x04)
	Unknown bUseDampingOverride; // 0x38(0x01)
	float Damping; // 0x3c(0x04)
	Unknown bUseGravityOverride; // 0x40(0x01)
	float GravityScale; // 0x44(0x04)
	Unknown Gravity; // 0x48(0x0c)
	Unknown bUseLocalSpaceSimulation; // 0x54(0x01)
	Unknown bUseXPBDConstraints; // 0x55(0x01)
	Unknown Type; // 0x28(0x01)
	Unknown ByteValue; // 0x29(0x01)
	int32_t IntegerValue; // 0x2c(0x04)
	Unknown LongBytesValue; // 0x30(0x08)
	float FloatValue; // 0x38(0x04)
	Unknown DoubleBytesValue; // 0x40(0x08)
	Unknown BooleanValue; // 0x48(0x01)
	struct FString StringUtf8Value; // 0x50(0x10)
	Unknown ByteArrayValue; // 0x60(0x10)
	Unknown IntegerArrayValue; // 0x70(0x10)
	Unknown LongBytesArrayValue; // 0x80(0x10)
	Unknown FloatArrayValue; // 0x90(0x10)
	Unknown DoubleBytesArrayValue; // 0xa0(0x10)
	Unknown BooleanArrayValue; // 0xb0(0x10)
	Unknown StringUtf8ArrayValue; // 0xc0(0x10)
	Unknown Bytes; // 0x28(0x10)
	int32_t Position; // 0x38(0x04)
	Unknown CurrentByte; // 0x3c(0x01)
	int32_t CurrentBytePosition; // 0x40(0x04)
	Unknown Bytes; // 0x28(0x10)
	Unknown CurrentByte; // 0x38(0x01)
	int32_t CurrentBytePosition; // 0x3c(0x04)
	Unknown ByteArray; // 0x28(0x10)
	Unknown Type; // 0x28(0x01)
	Unknown ByteValue; // 0x29(0x01)
	int32_t IntegerValue; // 0x2c(0x04)
	Unknown LongBytesValue; // 0x30(0x08)
	float FloatValue; // 0x38(0x04)
	Unknown DoubleBytesValue; // 0x40(0x08)
	Unknown BooleanValue; // 0x48(0x01)
	struct FString StringUtf8Value; // 0x50(0x10)
	Unknown ByteArrayValue; // 0x60(0x10)
	Unknown IntegerArrayValue; // 0x70(0x10)
	Unknown LongBytesArrayValue; // 0x80(0x10)
	Unknown FloatArrayValue; // 0x90(0x10)
	Unknown DoubleBytesArrayValue; // 0xa0(0x10)
	Unknown BooleanArrayValue; // 0xb0(0x10)
	Unknown StringUtf8ArrayValue; // 0xc0(0x10)
	Unknown Bytes; // 0x28(0x10)
	int32_t Position; // 0x38(0x04)
	Unknown Bytes; // 0x28(0x10)
	Unknown Bytes; // 0x28(0x10)
	int32_t Count; // 0x28(0x04)
	Unknown Next; // 0x2c(0x01)
	Unknown Finished; // 0x28(0x01)
	Unknown Result; // 0x29(0x01)
	int32_t KeepAliveCount; // 0x2c(0x04)
	Unknown Finished; // 0x28(0x01)
	float Result; // 0x2c(0x04)
	int32_t KeepAliveCount; // 0x30(0x04)
	Unknown Finished; // 0x28(0x01)
	int32_t Result; // 0x2c(0x04)
	int32_t KeepAliveCount; // 0x30(0x04)
	Unknown Finished; // 0x28(0x01)
	int32_t KeepAliveCount; // 0x2c(0x04)
	Unknown Finished; // 0x28(0x01)
	Unknown Result; // 0x30(0x08)
	int32_t KeepAliveCount; // 0x38(0x04)
	Unknown Finished; // 0x28(0x01)
	struct FString Result; // 0x30(0x10)
	int32_t KeepAliveCount; // 0x40(0x04)
	Unknown Bytes; // 0x28(0x10)
	Unknown Valid; // 0x28(0x01)
	struct FString Resource; // 0x30(0x10)
	Unknown Date; // 0x40(0x08)
	int32_t Bits; // 0x48(0x04)

	void CheckNumeric(struct FString CheckString, Unknown& CheckResult); // CheckNumeric U.U.CheckNumeric // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23a73f0>
	void SetPosition(int32_t Position_); // SetPosition LowEntryExtendedStandar.LowEntryBitDataReader.SetPosition // (Final|Native|Public|BlueprintCallable) // <Game+0x1060c70>
	void AddStringUtf8Array(Unknown& Value); // AddStringUtf8Array LowEntryExtendedStandar.LowEntryBitDataWriter.AddStringUtf8Array // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x105fe00>
	void SetPosition(int32_t Position_); // SetPosition LowEntryExtendedStandar.LowEntryByteDataReader.SetPosition // (Final|Native|Public|BlueprintCallable) // <Game+0x10764e0>
	void AddStringUtf8Array(Unknown& Value); // AddStringUtf8Array LowEntryExtendedStandar.LowEntryByteDataWriter.AddStringUtf8Array // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1066820>
	void SetBytes(Unknown& ByteArray, int32_t Index, int32_t Length); // SetBytes LowEntryExtendedStandar.LowEntryDouble.SetBytes // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1076130>
	Unknown XboxOnePlatform(); // XboxOnePlatform LowEntryExtendedStandar.LowEntryExtendedStandardLibrary.XboxOnePlatform // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x10668f0>
	void WaitTillDone(Unknown WorldContextObject, Unknown LatentInfo, Unknown& Result_); // WaitTillDone LowEntryExtendedStandar.LowEntryLatentActionBoolean.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107afb0>
	void WaitTillDone(Unknown WorldContextObject, Unknown LatentInfo, float& Result_); // WaitTillDone LowEntryExtendedStandar.LowEntryLatentActionFloat.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b0f0>
	void WaitTillDone(Unknown WorldContextObject, Unknown LatentInfo, int32_t& Result_); // WaitTillDone LowEntryExtendedStandar.LowEntryLatentActionInteger.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b230>
	void WaitTillDone(Unknown WorldContextObject, Unknown LatentInfo); // WaitTillDone LowEntryExtendedStandar.LowEntryLatentActionNone.WaitTillDone // (Final|Native|Public|BlueprintCallable) // <Game+0x107b370>
	void WaitTillDone(Unknown WorldContextObject, Unknown LatentInfo, Unknown& Result_); // WaitTillDone LowEntryExtendedStandar.LowEntryLatentActionObject.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b460>
	void WaitTillDone(Unknown WorldContextObject, Unknown LatentInfo, struct FString& Result_); // WaitTillDone LowEntryExtendedStandar.LowEntryLatentActionString.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b5a0>
	void SetBytes(Unknown& ByteArray, int32_t Index, int32_t Length); // SetBytes LowEntryExtendedStandar.LowEntryLong.SetBytes // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1076130>
	struct FString ToString(); // ToString LowEntryExtendedStandar.LowEntryParsedHashcash.ToString // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x107af30>
};

