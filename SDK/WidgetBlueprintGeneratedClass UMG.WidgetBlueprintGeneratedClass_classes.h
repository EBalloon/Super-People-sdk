// WidgetBlueprintGeneratedClass UMG.WidgetBlueprintGeneratedClass
// Size: 0x00 (Inherited: 0x3c8)
struct UWidgetBlueprintGeneratedClass : UBlueprintGeneratedClass {
	None GeometryCollection; // 0x28(0x08)
	None OriginalGeometryCollection; // 0x30(0x08)
	None GeometryCollectionLODIndex; // 0x38(0x04)
	None Adapters; // 0x3b8(0x10)
	None TextureCoordinateCount; // 0x3d0(0x04)
	None PendingCompactCounter; // 0x51c(0x04)
	None SubdivisionCount; // 0x520(0x04)
	None StaticMesh; // 0x28(0x08)
	None OriginalStaticMesh; // 0x30(0x08)
	None StaticMeshLODIndex; // 0x38(0x04)
	None GeneratedMaterials; // 0x30(0x10)
	None GeneratedMeshes; // 0x40(0x10)
	None GeneratedTextures; // 0x50(0x10)
	None ParameterDecorations; // 0xe8(0x10)
	None TextureReuseCache; // 0x108(0x50)
	None ReferencedMaterials; // 0x320(0x10)
	None PhysicsAssetsToMerge; // 0x3d0(0x10)
	None Materials; // 0x28(0x50)
	None Textures; // 0x78(0x50)
	None ReferenceSkeletalMesh; // 0x28(0x08)
	None ReferenceStaticMesh; // 0x30(0x08)
	None Relevancy; // 0x38(0x01)
	None bDisableTextureLayoutManagement; // 0x39(0x01)
	None ReferencedMaterials; // 0x40(0x10)
	None ImageProperties; // 0x50(0x10)
	None GroupNodeMap; // 0x60(0x50)
	None ContributingMorphTargets; // 0xb0(0x10)
	None MorphTargetReconstructionInfo; // 0xc0(0x10)
	None VersionId; // 0xd0(0x10)
	None ParameterProperties; // 0xe0(0x10)
	None ParameterUIDataMap; // 0x140(0x50)
	None StateUIDataMap; // 0x190(0x50)
	None PhysicsAssetsMap; // 0x1e0(0x50)
	None MaskOutCache; // 0x230(0x28)
	None bIsChildObject; // 0x258(0x01)
	None MaskOutCache_HardRef; // 0x260(0x08)
	None CustomizableObject; // 0x28(0x08)
	None SkeletalMesh; // 0x30(0x08)
	None BoolParameters; // 0x38(0x10)
	None IntParameters; // 0x48(0x10)
	None FloatParameters; // 0x58(0x10)
	None TextureParameters; // 0x68(0x10)
	None VectorParameters; // 0x78(0x10)
	None ProjectorParameters; // 0x88(0x10)
	None bBuildParameterDecorations; // 0x98(0x01)
	None UpdatedDelegate; // 0xa0(0x10)
	None SkeletalMeshStatus; // 0x110(0x10)
	None MaterialTags; // 0x140(0x10)
	None PrivateData; // 0x1d0(0x08)
	None Textures; // 0x28(0x10)
	None PendingReleaseSkeletalMesh; // 0x28(0x10)
	None PreviewExternalImageProvider; // 0x48(0x08)
	None ProtectedCachedTextures; // 0x150(0x10)
	None DefaultInstanceLODManagement; // 0x170(0x08)
	None CurrentInstanceLODManagement; // 0x178(0x08)
	None SkippedLastRenderTime; // 0x23c(0x04)
	None CustomizableObjectInstance; // 0x240(0x08)
	None CustomizableSkeletalComponent; // 0x398(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None HorizontalBox_Rarity; // 0x250(0x08)
	None HorizontalBox_Rarity_NotOwn; // 0x258(0x08)
	None Img_BG; // 0x260(0x08)
	None Img_Icon; // 0x268(0x08)
	None RetainerBox_2; // 0x270(0x08)
	None T_CurrentCount; // 0x278(0x08)
	None T_MaxCount; // 0x280(0x08)
	None T_RecipeNum; // 0x288(0x08)
	None WidgetSwitcher_Rarity; // 0x290(0x08)
	None MaterialInfo; // 0x298(0xd0)
	None ItemId; // 0x368(0x04)
	None MaxCount; // 0x36c(0x04)
	None CurrentCount; // 0x370(0x04)
	None UberGraphFrame; // 0x268(0x08)
	None BT_UserName; // 0x270(0x08)
	None CP_Main; // 0x278(0x08)
	None HB_ItemInfo; // 0x280(0x08)
	None Image_264; // 0x288(0x08)
	None Image_265; // 0x290(0x08)
	None Image_1163; // 0x298(0x08)
	None IMG_Frontbar; // 0x2a0(0x08)
	None IMG_Item; // 0x2a8(0x08)
	None Img_TeamColor; // 0x2b0(0x08)
	None PB_HP; // 0x2b8(0x08)
	None PB_ItemCasting; // 0x2c0(0x08)
	None PB_Message; // 0x2c8(0x08)
	None SizeBox_Message; // 0x2d0(0x08)
	None Switcher_Casting; // 0x2d8(0x08)
	None T_Item; // 0x2e0(0x08)
	None T_Message; // 0x2e8(0x08)
	None T_Quantity; // 0x2f0(0x08)
	None T_TeamNum; // 0x2f8(0x08)
	None T_UserName; // 0x300(0x08)
	None PlayerState; // 0x308(0x08)
	None ReplayController; // 0x310(0x08)
	None TargetCharacter; // 0x318(0x08)
	None MaxViewportSize; // 0x320(0x08)
	None LocalScreenPosition; // 0x328(0x08)
	None IsPositionUpdated; // 0x330(0x01)
	None DefaultCharacterZLocation; // 0x334(0x04)
	None TargetPawn; // 0x338(0x08)
	None Params; // 0xe0(0x30)
	None AnimationSections; // 0x58(0x10)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None CP-SlotInfo; // 0x3f0(0x08)
	None IMG-BG; // 0x3f8(0x08)
	None IMG-BG-Border; // 0x400(0x08)
	None IMG-Item; // 0x408(0x08)
	None IMG-Mask; // 0x410(0x08)
	None IMG-Over; // 0x418(0x08)
	None IMG-Over-Border; // 0x420(0x08)
	None Menu02; // 0x428(0x08)
	None Menu03; // 0x430(0x08)
	None Overlay_Mask; // 0x438(0x08)
	None TXT-ItemDesc; // 0x440(0x08)
	None TXT-ItemName; // 0x448(0x08)
	None TXT-Menu01; // 0x450(0x08)
	None TXT-Menu02; // 0x458(0x08)
	None TXT-Menu03; // 0x460(0x08)
	None UberGraphFrame; // 0x310(0x08)
	None FirstCamera; // 0x318(0x08)
	None FirstSpringArm; // 0x320(0x08)
	None ThirdCamera; // 0x328(0x08)
	None SecondCamera; // 0x330(0x08)
	None DefaultSceneRoot; // 0x338(0x08)
	None DeltaSeconds; // 0x340(0x04)
	None TargetDeltaLocation; // 0x344(0x0c)
	None Character; // 0x350(0x08)
	None LowerBoundCameraHeightDelta; // 0x358(0x04)
	None bHeightUpdateFinished; // 0x35c(0x01)
	None ThridCameraRotationYawDelta; // 0x360(0x04)
	None ThirdCameraMinHeight; // 0x364(0x04)
	None FirstSpringArmDeltaZ; // 0x368(0x04)
	None PrimaryComponentTick; // 0x30(0x30)
	None ComponentTags; // 0x60(0x10)
	None AssetUserData; // 0x70(0x10)
	None UCSSerializationIndex; // 0x84(0x04)
	None bNetAddressable; // 0x88(0x01)
	None bReplicates; // 0x88(0x01)
	None bAutoActivate; // 0x89(0x01)
	None bIsActive; // 0x8a(0x01)
	None bEditableWhenInherited; // 0x8a(0x01)
	None bCanEverAffectNavigation; // 0x8a(0x01)
	None bIsEditorOnly; // 0x8a(0x01)
	None CreationMethod; // 0x8c(0x01)
	None OnComponentActivated; // 0x8d(0x01)
	None OnComponentDeactivated; // 0x8e(0x01)
	None UCSModifiedProperties; // 0x90(0x10)
	None PhysicsVolume; // 0x144(0x08)
	None AttachParent; // 0x1d0(0x08)
	None AttachSocketName; // 0x1dc(0x08)
	None AttachChildren; // 0xb8(0x10)
	None ClientAttachedChildren; // 0x190(0x10)
	None RelativeLocation; // 0x224(0x0c)
	None RelativeRotation; // 0x1b4(0x0c)
	None RelativeScale3D; // 0x1c4(0x0c)
	None ComponentVelocity; // 0x164(0x0c)
	None bComponentToWorldUpdated; // 0x140(0x01)
	None bAbsoluteLocation; // 0x220(0x01)
	None bAbsoluteRotation; // 0x1d8(0x01)
	None bAbsoluteScale; // 0x188(0x01)
	None bVisible; // 0xc8(0x01)
	None bShouldBeAttached; // 0x220(0x01)
	None bShouldSnapLocationWhenAttached; // 0x1b0(0x01)
	None bShouldSnapRotationWhenAttached; // 0x188(0x01)
	None bShouldUpdatePhysicsVolume; // 0x1a0(0x01)
	None bHiddenInGame; // 0x220(0x01)
	None bBoundsChangeTriggersStreamingDataRebuild; // 0xc8(0x01)
	None bUseAttachParentBound; // 0x1d8(0x01)
	None Mobility; // 0x221(0x01)
	None DetailMode; // 0x160(0x01)
	None PhysicsVolumeChangedDelegate; // 0xb0(0x01)
	None ReplaySamplable; // 0x28(0x01)
	None ReplaySampleClass; // 0x30(0x08)
	None ReplaySamplingFrequency; // 0x38(0x04)
	None ClientReplaySamplingGUID; // 0x3c(0x04)
	None bReplayLevelAttached; // 0x44(0x01)
	None ReplaySamplesForPlayback; // 0x68(0x10)
	None SelfActor; // 0x88(0x08)
	None PrimaryActorTick; // 0x1d8(0x30)
	None bNetTemporary; // 0x284(0x01)
	None bNetStartup; // 0x248(0x01)
	None bOnlyRelevantToOwner; // 0x1c4(0x01)
	None bAlwaysRelevant; // 0xa1(0x01)
	None bReplicateMovement; // 0x260(0x01)
	None bHidden; // 0x222(0x01)
	None bTearOff; // 0x284(0x01)
	None bExchangedRoles; // 0x120(0x01)
	None bNetLoadOnClient; // 0x138(0x01)
	None bNetUseOwnerRelevancy; // 0xe8(0x01)
	None bRelevantForNetworkReplays; // 0x170(0x01)
	None bRelevantForLevelBounds; // 0x138(0x01)
	None bReplayRewindable; // 0x9f(0x01)
	None bAllowTickBeforeBeginPlay; // 0x1c4(0x01)
	None bAutoDestroyWhenFinished; // 0x1c4(0x01)
	None bCanBeDamaged; // 0x1a0(0x01)
	None bBlockInput; // 0x303(0x01)
	None bCollideWhenPlacing; // 0x301(0x01)
	None bFindCameraComponentWhenViewTarget; // 0x251(0x01)
	None bGenerateOverlapEventsDuringLevelStreaming; // 0x30e(0x01)
	None bIgnoresOriginShifting; // 0x155(0x01)
	None bEnableAutoLODGeneration; // 0x251(0x01)
	None bIsEditorOnlyActor; // 0x120(0x01)
	None bActorSeamlessTraveled; // 0xea(0x01)
	None bReplicates; // 0x9d(0x01)
	None bCanBeInCluster; // 0x90(0x01)
	None bAllowReceiveTickEventOnDedicatedServer; // 0x198(0x01)
	None bActorEnableCollision; // 0x1b8(0x01)
	None bActorIsBeingDestroyed; // 0x30e(0x01)
	None UpdateOverlapsMethodDuringLevelStreaming; // 0x154(0x01)
	None DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0xa3(0x01)
	None RemoteRole; // 0x279(0x01)
	None ReplicatedMovement; // 0xec(0x34)
	None InitialLifeSpan; // 0x2e0(0x04)
	None CustomTimeDilation; // 0x308(0x04)
	None AttachmentReplication; // 0xa8(0x40)
	None Owner; // 0x178(0x08)
	None NetDriverName; // 0x94(0x08)
	None Role; // 0x9e(0x01)
	None NetDormancy; // 0x238(0x01)
	None SpawnCollisionHandlingMethod; // 0x304(0x01)
	None AutoReceiveInput; // 0x302(0x01)
	None InputPriority; // 0x150(0x04)
	None InputComponent; // 0x2f8(0x08)
	None NetCullDistanceSquared; // 0x280(0x04)
	None NetTag; // 0x24c(0x04)
	None NetUpdateFrequency; // 0x27c(0x04)
	None MinNetUpdateFrequency; // 0x288(0x04)
	None NetPriority; // 0x21c(0x04)
	None Instigator; // 0x258(0x08)
	None Children; // 0x268(0x10)
	None RootComponent; // 0x158(0x08)
	None ControllingMatineeActors; // 0x208(0x10)
	None Layers; // 0x188(0x10)
	None ParentComponent; // 0x1bc(0x08)
	None bEnableRerunConstructionScript; // 0x30c(0x01)
	None Tags; // 0x140(0x10)
	None OnTakeAnyDamage; // 0x218(0x01)
	None OnTakePointDamage; // 0x27a(0x01)
	None OnTakeRadialDamage; // 0x9c(0x01)
	None OnActorBeginOverlap; // 0x27b(0x01)
	None OnActorEndOverlap; // 0xa0(0x01)
	None OnBeginCursorOver; // 0x221(0x01)
	None OnEndCursorOver; // 0xe9(0x01)
	None OnClicked; // 0x278(0x01)
	None OnReleased; // 0x2e4(0x01)
	None OnInputTouchBegin; // 0x300(0x01)
	None OnInputTouchEnd; // 0x285(0x01)
	None OnInputTouchEnter; // 0xa2(0x01)
	None OnInputTouchLeave; // 0x250(0x01)
	None OnActorHit; // 0x180(0x01)
	None OnDestroyed; // 0x220(0x01)
	None OnEndPlay; // 0x30d(0x01)
	None InstanceComponents; // 0x128(0x10)
	None BlueprintCreatedComponents; // 0x1a8(0x10)
	None LoadedObjects; // 0x1c8(0x10)
	None bShouldDoAnimNotifies; // 0x318(0x01)
	None bWakeOnLevelStart; // 0x318(0x01)
	None SkeletalMeshComponent; // 0x320(0x08)
	None ReplicatedMesh; // 0x328(0x08)
	None ReplicatedPhysAsset; // 0x330(0x08)
	None ReplicatedMaterial0; // 0x338(0x08)
	None ReplicatedMaterial1; // 0x340(0x08)
	None MinDrawDistance; // 0x240(0x04)
	None LDMaxDrawDistance; // 0x244(0x04)
	None CachedMaxDrawDistance; // 0x248(0x04)
	None DepthPriorityGroup; // 0x24c(0x01)
	None ViewOwnerDepthPriorityGroup; // 0x24d(0x01)
	None IndirectLightingCacheQuality; // 0x24e(0x01)
	None LightmapType; // 0x24f(0x01)
	None bUseMaxLODAsImposter; // 0x250(0x01)
	None bBatchImpostersAsInstances; // 0x250(0x01)
	None bNeverDistanceCull; // 0x250(0x01)
	None bAlwaysCreatePhysicsState; // 0x250(0x01)
	None bGenerateOverlapEvents; // 0x251(0x01)
	None bMultiBodyOverlap; // 0x251(0x01)
	None bTraceComplexOnMove; // 0x251(0x01)
	None bReturnMaterialOnMove; // 0x251(0x01)
	None bUseViewOwnerDepthPriorityGroup; // 0x251(0x01)
	None bAllowCullDistanceVolume; // 0x251(0x01)
	None bHasMotionBlurVelocityMeshes; // 0x251(0x01)
	None bVisibleInReflectionCaptures; // 0x251(0x01)
	None bVisibleInRayTracing; // 0x252(0x01)
	None bRenderInMainPass; // 0x252(0x01)
	None bRenderInDepthPass; // 0x252(0x01)
	None bReceivesDecals; // 0x252(0x01)
	None bOwnerNoSee; // 0x252(0x01)
	None bOnlyOwnerSee; // 0x252(0x01)
	None bIgnoreNearClippingForOcclusion; // 0x252(0x01)
	None bTreatAsBackgroundForOcclusion; // 0x252(0x01)
	None bUseAsOccluder; // 0x253(0x01)
	None bSelectable; // 0x253(0x01)
	None bForceMipStreaming; // 0x253(0x01)
	None bHasPerInstanceHitProxies; // 0x253(0x01)
	None CastShadow; // 0x253(0x01)
	None bAffectDynamicIndirectLighting; // 0x253(0x01)
	None bAffectDistanceFieldLighting; // 0x253(0x01)
	None bCastDynamicShadow; // 0x253(0x01)
	None bCastStaticShadow; // 0x254(0x01)
	None bCastDirectionalShadow; // 0x254(0x01)
	None bCastVolumetricTranslucentShadow; // 0x254(0x01)
	None bSelfShadowOnly; // 0x254(0x01)
	None bCastFarShadow; // 0x254(0x01)
	None bCastInsetShadow; // 0x254(0x01)
	None bCastCinematicShadow; // 0x254(0x01)
	None bCastHiddenShadow; // 0x254(0x01)
	None bCastShadowAsTwoSided; // 0x255(0x01)
	None bLightAsIfStatic; // 0x255(0x01)
	None bLightAttachmentsAsGroup; // 0x255(0x01)
	None bExcludeFromLightAttachmentGroup; // 0x255(0x01)
	None bReceiveMobileCSMShadows; // 0x255(0x01)
	None bSingleSampleShadowFromStationaryLights; // 0x255(0x01)
	None bIgnoreRadialImpulse; // 0x255(0x01)
	None bIgnoreRadialForce; // 0x255(0x01)
	None bApplyImpulseOnDamage; // 0x256(0x01)
	None bReplicatePhysicsToAutonomousProxy; // 0x256(0x01)
	None bFillCollisionUnderneathForNavmesh; // 0x256(0x01)
	None AlwaysLoadOnClient; // 0x256(0x01)
	None AlwaysLoadOnServer; // 0x256(0x01)
	None bUseEditorCompositing; // 0x256(0x01)
	None bRenderCustomDepth; // 0x256(0x01)
	None bHasNoStreamableTextures; // 0x257(0x01)
	None bHasCustomNavigableGeometry; // 0x258(0x01)
	None CanCharacterStepUpOn; // 0x25a(0x01)
	None LightingChannels; // 0x25b(0x01)
	None CustomDepthStencilWriteMask; // 0x25c(0x01)
	None CustomDepthStencilValue; // 0x260(0x04)
	None CustomPrimitiveData; // 0x268(0x10)
	None CustomPrimitiveDataInternal; // 0x278(0x10)
	None TranslucencySortPriority; // 0x288(0x04)
	None VisibilityId; // 0x28c(0x04)
	None RuntimeVirtualTextures; // 0x290(0x10)
	None VirtualTextureLodBias; // 0x2a0(0x01)
	None VirtualTextureCullMips; // 0x2a1(0x01)
	None VirtualTextureMinCoverage; // 0x2a2(0x01)
	None VirtualTextureRenderPassType; // 0x2a3(0x01)
	None LpvBiasMultiplier; // 0x2a8(0x04)
	None BoundsScale; // 0x2b4(0x04)
	None MoveIgnoreActors; // 0x2c8(0x10)
	None MoveIgnoreComponents; // 0x2d8(0x10)
	None BodyInstance; // 0x2f8(0x190)
	None OnComponentHit; // 0x488(0x01)
	None OnComponentBeginOverlap; // 0x489(0x01)
	None OnComponentEndOverlap; // 0x48a(0x01)
	None OnComponentWake; // 0x48b(0x01)
	None OnComponentSleep; // 0x48c(0x01)
	None OnBeginCursorOver; // 0x48e(0x01)
	None OnEndCursorOver; // 0x48f(0x01)
	None OnClicked; // 0x490(0x01)
	None OnReleased; // 0x491(0x01)
	None OnInputTouchBegin; // 0x492(0x01)
	None OnInputTouchEnd; // 0x493(0x01)
	None OnInputTouchEnter; // 0x494(0x01)
	None OnInputTouchLeave; // 0x495(0x01)
	None LODParentPrimitive; // 0x4b0(0x08)
	None MipStreamingScale; // 0x4b8(0x04)
	None OverrideMaterials; // 0x4c0(0x10)
	None bEnableMaterialParameterCaching; // 0x4e0(0x01)
	None SkeletalMesh; // 0x4e8(0x08)
	None MasterPoseComponent; // 0x4f0(0x08)
	None SkinCacheUsage; // 0x4f8(0x10)
	None PhysicsAssetOverride; // 0x600(0x08)
	None ForcedLodModel; // 0x608(0x04)
	None MinLodModel; // 0x60c(0x04)
	None StreamingDistanceMultiplier; // 0x618(0x04)
	None LODInfo; // 0x628(0x10)
	None VisibilityBasedAnimTickOption; // 0x65c(0x01)
	None bOverrideMinLod; // 0x65e(0x01)
	None bUseBoundsFromMasterPoseComponent; // 0x65e(0x01)
	None bForceWireframe; // 0x65e(0x01)
	None bDisplayBones; // 0x65e(0x01)
	None bDisableMorphTarget; // 0x65e(0x01)
	None bHideSkin; // 0x65e(0x01)
	None bPerBoneMotionBlur; // 0x65f(0x01)
	None bComponentUseFixedSkelBounds; // 0x65f(0x01)
	None bConsiderAllBodiesForBounds; // 0x65f(0x01)
	None bSyncAttachParentLOD; // 0x65f(0x01)
	None bCanHighlightSelectedSections; // 0x65f(0x01)
	None bRecentlyRendered; // 0x65f(0x01)
	None bCastCapsuleDirectShadow; // 0x65f(0x01)
	None bCastCapsuleIndirectShadow; // 0x65f(0x01)
	None bCPUSkinning; // 0x660(0x01)
	None bEnableUpdateRateOptimizations; // 0x660(0x01)
	None bDisplayDebugUpdateRateOptimizations; // 0x660(0x01)
	None bRenderStatic; // 0x660(0x01)
	None bIgnoreMasterPoseComponentLOD; // 0x660(0x01)
	None bCachedLocalBoundsUpToDate; // 0x660(0x01)
	None bForceMeshObjectUpdate; // 0x661(0x01)
	None CapsuleIndirectShadowMinVisibility; // 0x664(0x04)
	None CachedWorldSpaceBounds; // 0x678(0x1c)
	None CachedWorldToLocalTransform; // 0x6a0(0x40)
	None ForceMipLevelsToBeResidentTimestamp; // 0x28(0x08)
	None NumCinematicMipLevels; // 0x30(0x04)
	None StreamingIndex; // 0x34(0x04)
	None CachedCombinedLODBias; // 0x38(0x04)
	None CachedNumResidentLODs; // 0x3c(0x01)
	None bCachedReadyForStreaming; // 0x3d(0x01)
	None NeverStream; // 0x3d(0x01)
	None bGlobalForceMipLevelsToBeResident; // 0x3d(0x01)
	None bIsStreamable; // 0x3d(0x01)
	None bHasStreamingUpdatePending; // 0x3d(0x01)
	None bForceMiplevelsToBeResident; // 0x3d(0x01)
	None bIgnoreStreamingMipBias; // 0x3d(0x01)
	None bUseCinematicMipLevels; // 0x3d(0x01)
	None Skeleton; // 0x60(0x08)
	None ImportedBounds; // 0x68(0x1c)
	None ExtendedBounds; // 0x84(0x1c)
	None PositiveBoundsExtension; // 0xa0(0x0c)
	None NegativeBoundsExtension; // 0xac(0x0c)
	None Materials; // 0xb8(0x10)
	None SkelMirrorTable; // 0xc8(0x10)
	None LODInfo; // 0xd8(0x10)
	None MinLOD; // 0x138(0x04)
	None DisableBelowMinLodStripping; // 0x13c(0x01)
	None SkelMirrorAxis; // 0x13d(0x01)
	None SkelMirrorFlipAxis; // 0x13e(0x01)
	None bUseFullPrecisionUVs; // 0x13f(0x01)
	None bUseHighPrecisionTangentBasis; // 0x13f(0x01)
	None bHasBeenSimplified; // 0x13f(0x01)
	None bHasVertexColors; // 0x13f(0x01)
	None bEnablePerPolyCollision; // 0x13f(0x01)
	None BodySetup; // 0x140(0x08)
	None PhysicsAsset; // 0x148(0x08)
	None ShadowPhysicsAsset; // 0x150(0x08)
	None NodeMappingData; // 0x158(0x10)
	None MorphTargets; // 0x168(0x10)
	None PostProcessAnimBlueprint; // 0x2f0(0x08)
	None MeshClothingAssets; // 0x2f8(0x10)
	None SamplingInfo; // 0x308(0x30)
	None AssetUserData; // 0x338(0x10)
	None Sockets; // 0x350(0x10)
	None SkinWeightProfiles; // 0x370(0x10)
	None StaticMeshComponent; // 0x310(0x08)
	None bStaticMeshReplicateMovement; // 0x318(0x01)
	None NavigationGeometryGatheringMode; // 0x319(0x01)
	None LightingGuid; // 0x48(0x10)
	None LODBias; // 0x58(0x04)
	None CompressionSettings; // 0x5c(0x01)
	None Filter; // 0x5d(0x01)
	None MipLoadOptions; // 0x5e(0x01)
	None LODGroup; // 0x5f(0x01)
	None SRGB; // 0x60(0x01)
	None bNoTiling; // 0x60(0x01)
	None VirtualTextureStreaming; // 0x60(0x01)
	None CompressionYCoCg; // 0x60(0x01)
	None bAsyncResourceReleaseHasBeenStarted; // 0x60(0x01)
	None AssetUserData; // 0x68(0x10)
	None Format; // 0xc0(0x01)
	None PlayerOwner; // 0x310(0x08)
	None bLostFocusPaused; // 0x318(0x01)
	None bShowHUD; // 0x318(0x01)
	None bShowDebugInfo; // 0x318(0x01)
	None CurrentTargetIndex; // 0x31c(0x04)
	None bShowHitBoxDebugInfo; // 0x320(0x01)
	None bShowOverlays; // 0x320(0x01)
	None bEnableDebugTextShadow; // 0x320(0x01)
	None PostRenderedActors; // 0x328(0x10)
	None DebugDisplay; // 0x340(0x10)
	None ToggledDebugCategories; // 0x350(0x10)
	None Canvas; // 0x360(0x08)
	None DebugCanvas; // 0x368(0x08)
	None DebugTextList; // 0x370(0x10)
	None ShowDebugTargetDesiredClass; // 0x380(0x08)
	None ShowDebugTargetActor; // 0x388(0x08)
	None PlayerController; // 0x30(0x08)
	None CurrentNetSpeed; // 0x38(0x04)
	None ConfiguredInternetSpeed; // 0x3c(0x04)
	None ConfiguredLanSpeed; // 0x40(0x04)
	None SelfNetConnection; // 0xb0(0x08)
	None Children; // 0xb8(0x10)
	None Driver; // 0xc8(0x08)
	None PackageMapClass; // 0xd0(0x08)
	None PackageMap; // 0xd8(0x08)
	None OpenChannels; // 0xe0(0x10)
	None SentTemporaries; // 0xf0(0x10)
	None ViewTarget; // 0x100(0x08)
	None OwningActor; // 0x108(0x08)
	None MaxPacket; // 0x110(0x04)
	None InternalAck; // 0x114(0x01)
	None PlayerId; // 0x1d0(0x28)
	None LastReceiveTime; // 0x240(0x08)
	None ChannelsToTick; // 0x1580(0x10)
	None NetConnectionClassName; // 0x30(0x10)
	None ReplicationDriverClassName; // 0x40(0x10)
	None MaxDownloadSize; // 0x50(0x04)
	None bClampListenServerTickRate; // 0x54(0x01)
	None NetServerMaxTickRate; // 0x58(0x04)
	None MaxNetTickRate; // 0x5c(0x04)
	None MaxInternetClientRate; // 0x60(0x04)
	None MaxClientRate; // 0x64(0x04)
	None ServerTravelPause; // 0x68(0x04)
	None SpawnPrioritySeconds; // 0x6c(0x04)
	None RelevantTimeout; // 0x70(0x04)
	None KeepAliveTime; // 0x74(0x04)
	None InitialConnectTimeout; // 0x78(0x04)
	None ConnectionTimeout; // 0x7c(0x04)
	None TimeoutMultiplierForUnoptimizedBuilds; // 0x80(0x04)
	None bNoTimeouts; // 0x84(0x01)
	None bNeverApplyNetworkEmulationSettings; // 0x85(0x01)
	None ServerConnection; // 0x88(0x08)
	None ClientConnections; // 0x90(0x10)
	None RecentlyDisconnectedTrackingTime; // 0x100(0x04)
	None World; // 0x140(0x08)
	None WorldPackage; // 0x148(0x08)
	None NetConnectionClass; // 0x170(0x08)
	None ReplicationDriverClass; // 0x178(0x08)
	None NetDriverName; // 0x190(0x08)
	None ChannelDefinitions; // 0x198(0x10)
	None ChannelDefinitionMap; // 0x1a8(0x50)
	None ActorChannelPool; // 0x1f8(0x10)
	None Time; // 0x210(0x04)
	None ReplicationDriver; // 0x6e8(0x08)
	None TinyFont; // 0x30(0x08)
	None TinyFontName; // 0x38(0x18)
	None SmallFont; // 0x50(0x08)
	None SmallFontName; // 0x58(0x18)
	None MediumFont; // 0x70(0x08)
	None MediumFontName; // 0x78(0x18)
	None LargeFont; // 0x90(0x08)
	None LargeFontName; // 0x98(0x18)
	None SubtitleFont; // 0xb0(0x08)
	None SubtitleFontName; // 0xb8(0x18)
	None AdditionalFonts; // 0xd0(0x10)
	None AdditionalFontNames; // 0xe8(0x10)
	None ConsoleClass; // 0xf8(0x08)
	None ConsoleClassName; // 0x100(0x18)
	None GameViewportClientClass; // 0x118(0x08)
	None GameViewportClientClassName; // 0x120(0x18)
	None LocalPlayerClass; // 0x138(0x08)
	None LocalPlayerClassName; // 0x140(0x18)
	None WorldSettingsClass; // 0x158(0x08)
	None WorldSettingsClassName; // 0x160(0x18)
	None NavigationSystemClassName; // 0x178(0x18)
	None NavigationSystemClass; // 0x190(0x08)
	None NavigationSystemConfigClassName; // 0x198(0x18)
	None NavigationSystemConfigClass; // 0x1b0(0x08)
	None AvoidanceManagerClassName; // 0x1b8(0x18)
	None AvoidanceManagerClass; // 0x1d0(0x08)
	None PhysicsCollisionHandlerClass; // 0x1d8(0x08)
	None PhysicsCollisionHandlerClassName; // 0x1e0(0x18)
	None GameUserSettingsClassName; // 0x1f8(0x18)
	None GameUserSettingsClass; // 0x210(0x08)
	None AIControllerClassName; // 0x218(0x18)
	None GameUserSettings; // 0x230(0x08)
	None LevelScriptActorClass; // 0x238(0x08)
	None LevelScriptActorClassName; // 0x240(0x18)
	None DefaultBlueprintBaseClassName; // 0x258(0x18)
	None GameSingletonClassName; // 0x270(0x18)
	None GameSingleton; // 0x288(0x08)
	None AssetManagerClassName; // 0x290(0x18)
	None AssetManager; // 0x2a8(0x08)
	None DefaultTexture; // 0x2b0(0x08)
	None DefaultTextureName; // 0x2b8(0x18)
	None DefaultDiffuseTexture; // 0x2d0(0x08)
	None DefaultDiffuseTextureName; // 0x2d8(0x18)
	None DefaultBSPVertexTexture; // 0x2f0(0x08)
	None DefaultBSPVertexTextureName; // 0x2f8(0x18)
	None HighFrequencyNoiseTexture; // 0x310(0x08)
	None HighFrequencyNoiseTextureName; // 0x318(0x18)
	None DefaultBokehTexture; // 0x330(0x08)
	None DefaultBokehTextureName; // 0x338(0x18)
	None DefaultBloomKernelTexture; // 0x350(0x08)
	None DefaultBloomKernelTextureName; // 0x358(0x18)
	None WireframeMaterial; // 0x370(0x08)
	None WireframeMaterialName; // 0x378(0x10)
	None DebugMeshMaterial; // 0x388(0x08)
	None DebugMeshMaterialName; // 0x390(0x18)
	None EmissiveMeshMaterial; // 0x3a8(0x08)
	None EmissiveMeshMaterialName; // 0x3b0(0x18)
	None LevelColorationLitMaterial; // 0x3c8(0x08)
	None LevelColorationLitMaterialName; // 0x3d0(0x10)
	None LevelColorationUnlitMaterial; // 0x3e0(0x08)
	None LevelColorationUnlitMaterialName; // 0x3e8(0x10)
	None LightingTexelDensityMaterial; // 0x3f8(0x08)
	None LightingTexelDensityName; // 0x400(0x10)
	None ShadedLevelColorationLitMaterial; // 0x410(0x08)
	None ShadedLevelColorationLitMaterialName; // 0x418(0x10)
	None ShadedLevelColorationUnlitMaterial; // 0x428(0x08)
	None ShadedLevelColorationUnlitMaterialName; // 0x430(0x10)
	None RemoveSurfaceMaterial; // 0x440(0x08)
	None RemoveSurfaceMaterialName; // 0x448(0x18)
	None VertexColorMaterial; // 0x460(0x08)
	None VertexColorMaterialName; // 0x468(0x10)
	None VertexColorViewModeMaterial_ColorOnly; // 0x478(0x08)
	None VertexColorViewModeMaterialName_ColorOnly; // 0x480(0x10)
	None VertexColorViewModeMaterial_AlphaAsColor; // 0x490(0x08)
	None VertexColorViewModeMaterialName_AlphaAsColor; // 0x498(0x10)
	None VertexColorViewModeMaterial_RedOnly; // 0x4a8(0x08)
	None VertexColorViewModeMaterialName_RedOnly; // 0x4b0(0x10)
	None VertexColorViewModeMaterial_GreenOnly; // 0x4c0(0x08)
	None VertexColorViewModeMaterialName_GreenOnly; // 0x4c8(0x10)
	None VertexColorViewModeMaterial_BlueOnly; // 0x4d8(0x08)
	None VertexColorViewModeMaterialName_BlueOnly; // 0x4e0(0x10)
	None DebugEditorMaterialName; // 0x4f0(0x18)
	None ConstraintLimitMaterial; // 0x508(0x08)
	None ConstraintLimitMaterialX; // 0x510(0x08)
	None ConstraintLimitMaterialXAxis; // 0x518(0x08)
	None ConstraintLimitMaterialY; // 0x520(0x08)
	None ConstraintLimitMaterialYAxis; // 0x528(0x08)
	None ConstraintLimitMaterialZ; // 0x530(0x08)
	None ConstraintLimitMaterialZAxis; // 0x538(0x08)
	None ConstraintLimitMaterialPrismatic; // 0x540(0x08)
	None InvalidLightmapSettingsMaterial; // 0x548(0x08)
	None InvalidLightmapSettingsMaterialName; // 0x550(0x18)
	None PreviewShadowsIndicatorMaterial; // 0x568(0x08)
	None PreviewShadowsIndicatorMaterialName; // 0x570(0x18)
	None ArrowMaterial; // 0x588(0x08)
	None ArrowMaterialYellow; // 0x590(0x08)
	None ArrowMaterialName; // 0x598(0x18)
	None LightingOnlyBrightness; // 0x5b0(0x10)
	None ShaderComplexityColors; // 0x5c0(0x10)
	None QuadComplexityColors; // 0x5d0(0x10)
	None LightComplexityColors; // 0x5e0(0x10)
	None StationaryLightOverlapColors; // 0x5f0(0x10)
	None LODColorationColors; // 0x600(0x10)
	None HLODColorationColors; // 0x610(0x10)
	None StreamingAccuracyColors; // 0x620(0x10)
	None MaxPixelShaderAdditiveComplexityCount; // 0x630(0x04)
	None MaxES3PixelShaderAdditiveComplexityCount; // 0x634(0x04)
	None MinLightMapDensity; // 0x638(0x04)
	None IdealLightMapDensity; // 0x63c(0x04)
	None MaxLightMapDensity; // 0x640(0x04)
	None bRenderLightMapDensityGrayscale; // 0x644(0x01)
	None RenderLightMapDensityGrayscaleScale; // 0x648(0x04)
	None RenderLightMapDensityColorScale; // 0x64c(0x04)
	None LightMapDensityVertexMappedColor; // 0x650(0x10)
	None LightMapDensitySelectedColor; // 0x660(0x10)
	None StatColorMappings; // 0x670(0x10)
	None DefaultPhysMaterial; // 0x680(0x08)
	None DefaultPhysMaterialName; // 0x688(0x18)
	None ActiveGameNameRedirects; // 0x6a0(0x10)
	None ActiveClassRedirects; // 0x6b0(0x10)
	None ActivePluginRedirects; // 0x6c0(0x10)
	None ActiveStructRedirects; // 0x6d0(0x10)
	None PreIntegratedSkinBRDFTexture; // 0x6e0(0x08)
	None PreIntegratedSkinBRDFTextureName; // 0x6e8(0x18)
	None BlueNoiseTexture; // 0x700(0x08)
	None BlueNoiseTextureName; // 0x708(0x18)
	None MiniFontTexture; // 0x720(0x08)
	None MiniFontTextureName; // 0x728(0x18)
	None WeightMapPlaceholderTexture; // 0x740(0x08)
	None WeightMapPlaceholderTextureName; // 0x748(0x18)
	None LightMapDensityTexture; // 0x760(0x08)
	None LightMapDensityTextureName; // 0x768(0x18)
	None GameViewport; // 0x788(0x08)
	None DeferredCommands; // 0x790(0x10)
	None TickCycles; // 0x7a0(0x04)
	None GameCycles; // 0x7a4(0x04)
	None ClientCycles; // 0x7a8(0x04)
	None NearClipPlane; // 0x7ac(0x04)
	None EditorNearClipPlane; // 0x7b0(0x04)
	None bUseCustomAudioModule; // 0x7b4(0x01)
	None bHardwareSurveyEnabled; // 0x7b8(0x01)
	None bSubtitlesEnabled; // 0x7b8(0x01)
	None bSubtitlesForcedOff; // 0x7b8(0x01)
	None MaximumLoopIterationCount; // 0x7bc(0x04)
	None bCanBlueprintsTickByDefault; // 0x7c0(0x01)
	None bOptimizeAnimBlueprintMemberVariableAccess; // 0x7c0(0x01)
	None bAllowMultiThreadedAnimationUpdate; // 0x7c0(0x01)
	None bEnableEditorPSysRealtimeLOD; // 0x7c0(0x01)
	None bSmoothFrameRate; // 0x7c0(0x01)
	None bUseFixedFrameRate; // 0x7c0(0x01)
	None FixedFrameRate; // 0x7c4(0x04)
	None SmoothedFrameRateRange; // 0x7c8(0x10)
	None CustomTimeStep; // 0x7d8(0x08)
	None CustomTimeStepClassName; // 0x800(0x18)
	None TimecodeProvider; // 0x818(0x08)
	None TimecodeProviderClassName; // 0x840(0x18)
	None bGenerateDefaultTimecode; // 0x858(0x01)
	None GenerateDefaultTimecodeFrameRate; // 0x85c(0x08)
	None GenerateDefaultTimecodeFrameDelay; // 0x864(0x04)
	None bCheckForMultiplePawnsSpawnedInAFrame; // 0x868(0x01)
	None NumPawnsAllowedToBeSpawnedInAFrame; // 0x86c(0x04)
	None bShouldGenerateLowQualityLightmaps; // 0x870(0x01)
	None C_WorldBox; // 0x874(0x04)
	None C_BrushWire; // 0x878(0x04)
	None C_AddWire; // 0x87c(0x04)
	None C_SubtractWire; // 0x880(0x04)
	None C_SemiSolidWire; // 0x884(0x04)
	None C_NonSolidWire; // 0x888(0x04)
	None C_WireBackground; // 0x88c(0x04)
	None C_ScaleBoxHi; // 0x890(0x04)
	None C_VolumeCollision; // 0x894(0x04)
	None C_BSPCollision; // 0x898(0x04)
	None C_OrthoBackground; // 0x89c(0x04)
	None C_Volume; // 0x8a0(0x04)
	None C_BrushShape; // 0x8a4(0x04)
	None StreamingDistanceFactor; // 0x8a8(0x04)
	None GameScreenshotSaveDirectory; // 0x8b0(0x10)
	None TransitionType; // 0x8c0(0x01)
	None TransitionDescription; // 0x8c8(0x10)
	None TransitionGameMode; // 0x8d8(0x10)
	None MeshLODRange; // 0x8e8(0x04)
	None bAllowMatureLanguage; // 0x8ec(0x01)
	None CameraRotationThreshold; // 0x8f0(0x04)
	None CameraTranslationThreshold; // 0x8f4(0x04)
	None PrimitiveProbablyVisibleTime; // 0x8f8(0x04)
	None MaxOcclusionPixelsFraction; // 0x8fc(0x04)
	None bPauseOnLossOfFocus; // 0x900(0x01)
	None MaxParticleResize; // 0x904(0x04)
	None MaxParticleResizeWarn; // 0x908(0x04)
	None PendingDroppedNotes; // 0x910(0x10)
	None NetClientTicksPerSecond; // 0x920(0x04)
	None DisplayGamma; // 0x924(0x04)
	None MinDesiredFrameRate; // 0x928(0x04)
	None DefaultSelectedMaterialColor; // 0x92c(0x10)
	None SelectedMaterialColor; // 0x93c(0x10)
	None SelectionOutlineColor; // 0x94c(0x10)
	None SubduedSelectionOutlineColor; // 0x95c(0x10)
	None SelectedMaterialColorOverride; // 0x96c(0x10)
	None bIsOverridingSelectedColor; // 0x97c(0x01)
	None bEnableOnScreenDebugMessages; // 0x980(0x01)
	None bEnableOnScreenDebugMessagesDisplay; // 0x980(0x01)
	None bSuppressMapWarnings; // 0x980(0x01)
	None bDisableAILogging; // 0x980(0x01)
	None bEnableVisualLogRecordingOnStart; // 0x984(0x04)
	None ScreenSaverInhibitorSemaphore; // 0x98c(0x04)
	None bLockReadOnlyLevels; // 0x990(0x01)
	None ParticleEventManagerClassPath; // 0x998(0x10)
	None SelectionHighlightIntensity; // 0x9a8(0x04)
	None BSPSelectionHighlightIntensity; // 0x9ac(0x04)
	None SelectionHighlightIntensityBillboards; // 0x9b0(0x04)
	None NetDriverDefinitions; // 0xc00(0x10)
	None ServerActors; // 0xc10(0x10)
	None RuntimeServerActors; // 0xc20(0x10)
	None NetErrorLogInterval; // 0xc30(0x04)
	None bStartedLoadMapMovie; // 0xc34(0x01)
	None NextWorldContextHandle; // 0xc50(0x04)
	None ViewportClient; // 0x70(0x08)
	None AspectRatioAxisConstraint; // 0x94(0x01)
	None PendingLevelPlayerControllerClass; // 0x98(0x08)
	None bSentSplitJoin; // 0xa0(0x01)
	None ControllerId; // 0xb8(0x04)
	None AnimBlueprintGeneratedClass; // 0x700(0x08)
	None AnimClass; // 0x708(0x08)
	None AnimScriptInstance; // 0x710(0x08)
	None PostprocessAnimInstance; // 0x718(0x08)
	None AnimationData; // 0x720(0x18)
	None RootBoneTranslation; // 0x748(0x0c)
	None LineCheckBoundsScale; // 0x754(0x0c)
	None LinkedInstances; // 0x780(0x10)
	None CachedBoneSpaceTransforms; // 0x790(0x10)
	None CachedComponentSpaceTransforms; // 0x7a0(0x10)
	None GlobalAnimRateScale; // 0x7d0(0x04)
	None KinematicBonesUpdateType; // 0x7d4(0x01)
	None PhysicsTransformUpdateMode; // 0x7d5(0x01)
	None AnimationMode; // 0x7dd(0x01)
	None bDisablePostProcessBlueprint; // 0x7df(0x01)
	None bUpdateOverlapsOnAnimationFinalize; // 0x7df(0x01)
	None bHasValidBodies; // 0x7df(0x01)
	None bBlendPhysics; // 0x7df(0x01)
	None bEnablePhysicsOnDedicatedServer; // 0x7df(0x01)
	None bUpdateJointsFromAnimation; // 0x7e0(0x01)
	None bDisableClothSimulation; // 0x7e0(0x01)
	None bDisableRigidBodyAnimNode; // 0x7e0(0x01)
	None bAllowAnimCurveEvaluation; // 0x7e0(0x01)
	None bDisableAnimCurves; // 0x7e0(0x01)
	None bCollideWithEnvironment; // 0x7e1(0x01)
	None bCollideWithAttachedChildren; // 0x7e1(0x01)
	None bLocalSpaceSimulation; // 0x7e1(0x01)
	None bResetAfterTeleport; // 0x7e1(0x01)
	None bDeferKinematicBoneUpdate; // 0x7e1(0x01)
	None bNoSkeletonUpdate; // 0x7e1(0x01)
	None bPauseAnims; // 0x7e1(0x01)
	None bUseRefPoseOnInitAnim; // 0x7e2(0x01)
	None bEnablePerPolyCollision; // 0x7e2(0x01)
	None bForceRefpose; // 0x7e2(0x01)
	None bOnlyAllowAutonomousTickPose; // 0x7e2(0x01)
	None bIsAutonomousTickPose; // 0x7e2(0x01)
	None bOldForceRefPose; // 0x7e2(0x01)
	None bShowPrePhysBones; // 0x7e2(0x01)
	None bRequiredBonesUpToDate; // 0x7e2(0x01)
	None bAnimTreeInitialised; // 0x7e3(0x01)
	None bIncludeComponentLocationIntoBounds; // 0x7e3(0x01)
	None bEnableLineCheckWithBounds; // 0x7e3(0x01)
	None bUseBendingElements; // 0x7e3(0x01)
	None bUseTetrahedralConstraints; // 0x7e3(0x01)
	None bUseThinShellVolumeConstraints; // 0x7e3(0x01)
	None bUseSelfCollisions; // 0x7e3(0x01)
	None bUseContinuousCollisionDetection; // 0x7e3(0x01)
	None bPropagateCurvesToSlaves; // 0x7e4(0x01)
	None bSkipKinematicUpdateWhenInterpolating; // 0x7e4(0x01)
	None bSkipBoundsUpdateWhenInterpolating; // 0x7e4(0x01)
	None bNeedsQueuedAnimEventsDispatched; // 0x7e4(0x01)
	None CachedAnimCurveUidVersion; // 0x7e6(0x02)
	None MassMode; // 0x7e8(0x01)
	None UniformMass; // 0x7ec(0x04)
	None TotalMass; // 0x7f0(0x04)
	None Density; // 0x7f4(0x04)
	None MinPerParticleMass; // 0x7f8(0x04)
	None ClothBlendWeight; // 0x7fc(0x04)
	None EdgeStiffness; // 0x800(0x04)
	None BendingStiffness; // 0x804(0x04)
	None AreaStiffness; // 0x808(0x04)
	None VolumeStiffness; // 0x80c(0x04)
	None StrainLimitingStiffness; // 0x810(0x04)
	None ShapeTargetStiffness; // 0x814(0x04)
	None DisallowedAnimCurves; // 0x818(0x10)
	None BodySetup; // 0x828(0x08)
	None OnConstraintBroken; // 0x838(0x10)
	None ClothingSimulationFactory; // 0x848(0x08)
	None TeleportDistanceThreshold; // 0x918(0x04)
	None TeleportRotationThreshold; // 0x91c(0x04)
	None LastPoseTickFrame; // 0x928(0x04)
	None ClothingInteractor; // 0x980(0x08)
	None OnAnimInitialized; // 0xa50(0x10)
	None CurrentSkeleton; // 0x28(0x08)
	None RootMotionMode; // 0x30(0x01)
	None bUseMultiThreadedAnimationUpdate; // 0x31(0x01)
	None bUsingCopyPoseFromMesh; // 0x31(0x01)
	None bReceiveNotifiesFromLinkedInstances; // 0x31(0x01)
	None bPropagateNotifiesToLinkedInstances; // 0x31(0x01)
	None bQueueMontageEvents; // 0x31(0x01)
	None OnMontageBlendingOut; // 0x38(0x10)
	None OnMontageStarted; // 0x48(0x10)
	None OnMontageEnded; // 0x58(0x10)
	None OnAllMontageInstancesEnded; // 0x68(0x10)
	None NotifyQueue; // 0x100(0x70)
	None ActiveAnimNotifyState; // 0x170(0x10)
	None SupportedClass; // 0x28(0x08)
	None ExportRootScope; // 0x30(0x08)
	None FormatExtension; // 0x38(0x10)
	None FormatDescription; // 0x48(0x10)
	None PreferredFormatIndex; // 0x58(0x04)
	None TextIndent; // 0x5c(0x04)
	None bText; // 0x60(0x01)
	None bSelectedOnly; // 0x60(0x01)
	None bForceFileOperations; // 0x60(0x01)
	None ExportTask; // 0x68(0x08)
	None bInputEnabled; // 0x310(0x01)
	None MaxPoolSize; // 0x28(0x04)
	None BrushType; // 0x310(0x01)
	None BrushColor; // 0x314(0x04)
	None PolyFlags; // 0x318(0x04)
	None bColored; // 0x31c(0x01)
	None bSolidWhenSelected; // 0x31c(0x01)
	None bPlaceableFromClassBrowser; // 0x31c(0x01)
	None bNotForClientOrServer; // 0x31c(0x01)
	None Brush; // 0x320(0x08)
	None BrushComponent; // 0x328(0x08)
	None bInManipulation; // 0x330(0x01)
	None SavedSelections; // 0x338(0x10)
	None SelfWorld; // 0x38(0x08)
	None PersistentLevel; // 0x48(0x08)
	None NetDriver; // 0x50(0x08)
	None LineBatcher; // 0x58(0x08)
	None PersistentLineBatcher; // 0x60(0x08)
	None ForegroundLineBatcher; // 0x68(0x08)
	None NetworkManager; // 0x70(0x08)
	None PhysicsCollisionHandler; // 0x78(0x08)
	None ExtraReferencedObjects; // 0x80(0x10)
	None PerModuleDataObjects; // 0x90(0x10)
	None LevelSequenceActors; // 0xa0(0x10)
	None StreamingLevels; // 0xb0(0x10)
	None StreamingLevelsToConsider; // 0xc0(0x48)
	None StreamingLevelsPrefix; // 0x120(0x10)
	None CurrentLevelPendingVisibility; // 0x130(0x08)
	None CurrentLevelPendingInvisibility; // 0x138(0x08)
	None DemoNetDriver; // 0x140(0x08)
	None MyParticleEventManager; // 0x148(0x08)
	None DefaultPhysicsVolume; // 0x150(0x08)
	None bAreConstraintsDirty; // 0x16e(0x01)
	None NavigationSystem; // 0x170(0x08)
	None AuthorityGameMode; // 0x178(0x08)
	None GameState; // 0x180(0x08)
	None AISystem; // 0x188(0x08)
	None AvoidanceManager; // 0x190(0x08)
	None Levels; // 0x198(0x10)
	None LevelCollections; // 0x1a8(0x10)
	None OwningGameInstance; // 0x1d8(0x08)
	None ParameterCollectionInstances; // 0x1e0(0x10)
	None CanvasForRenderingToTarget; // 0x1f0(0x08)
	None CanvasForDrawMaterialToRenderTarget; // 0x1f8(0x08)
	None ComponentsThatNeedEndOfFrameUpdate; // 0x250(0x10)
	None ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x260(0x10)
	None WorldComposition; // 0x5b0(0x08)
	None PSCPool; // 0x650(0x58)
	None SubTracks; // 0x38(0x10)
	None TrackInstClass; // 0x48(0x08)
	None ActiveCondition; // 0x50(0x01)
	None TrackTitle; // 0x58(0x10)
	None bOnePerGroup; // 0x68(0x01)
	None bDirGroupOnly; // 0x68(0x01)
	None bDisableTrack; // 0x68(0x01)
	None bIsSelected; // 0x68(0x01)
	None bIsAnimControlTrack; // 0x68(0x01)
	None bSubTrackOnly; // 0x68(0x01)
	None bVisible; // 0x68(0x01)
	None bIsRecording; // 0x68(0x01)
	None VectorTrack; // 0x70(0x18)
	None CurveTension; // 0x88(0x04)
	None FloatTrack; // 0x70(0x18)
	None CurveTension; // 0x88(0x04)
	None NativeClass; // 0x28(0x08)
	None Material; // 0x28(0x08)
	None Function; // 0x30(0x08)
	None bIsParameterExpression; // 0x38(0x01)
	None Texture; // 0x40(0x08)
	None SamplerType; // 0x48(0x01)
	None IsDefaultMeshpaintTexture; // 0x49(0x01)
	None Coordinates; // 0x50(0x0c)
	None TextureObject; // 0x64(0x0c)
	None MipValue; // 0x78(0x0c)
	None CoordinatesDX; // 0x8c(0x0c)
	None CoordinatesDY; // 0xa0(0x0c)
	None AutomaticViewMipBiasValue; // 0xb4(0x0c)
	None MipValueMode; // 0xc8(0x01)
	None SamplerSource; // 0xc9(0x01)
	None AutomaticViewMipBias; // 0xca(0x01)
	None ConstCoordinate; // 0xcb(0x01)
	None ConstMipValue; // 0xcc(0x04)
	None ParameterName; // 0xd0(0x08)
	None ExpressionGUID; // 0xd8(0x10)
	None Group; // 0xe8(0x08)
	None SelfPawn; // 0x318(0x08)
	None bUseControllerRotationPitch; // 0x328(0x01)
	None bUseControllerRotationYaw; // 0x328(0x01)
	None bUseControllerRotationRoll; // 0x328(0x01)
	None bCanAffectNavigationGeneration; // 0x328(0x01)
	None BaseEyeHeight; // 0x32c(0x04)
	None AutoPossessPlayer; // 0x330(0x01)
	None AutoPossessAI; // 0x331(0x01)
	None RemoteViewPitch; // 0x332(0x02)
	None RemoteViewYaw; // 0x334(0x02)
	None AIControllerClass; // 0x338(0x08)
	None PlayerState; // 0x340(0x08)
	None LastHitBy; // 0x350(0x08)
	None Controller; // 0x358(0x08)
	None ControlInputVector; // 0x364(0x0c)
	None LastControlInputVector; // 0x370(0x0c)
	None SelfCharacter; // 0x388(0x08)
	None Mesh; // 0x398(0x08)
	None CharacterMovement; // 0x3a0(0x08)
	None CapsuleComponent; // 0x3a8(0x08)
	None BasedMovement; // 0x3b8(0x30)
	None ReplicatedBasedMovement; // 0x3e8(0x30)
	None AnimRootMotionTranslationScale; // 0x418(0x04)
	None BaseTranslationOffset; // 0x41c(0x0c)
	None BaseRotationOffset; // 0x430(0x10)
	None ReplicatedServerLastTransformUpdateTimeStamp; // 0x440(0x04)
	None ReplayLastTransformUpdateTimeStamp; // 0x444(0x04)
	None ReplicatedMovementMode; // 0x448(0x01)
	None bInBaseReplication; // 0x449(0x01)
	None CrouchedEyeHeight; // 0x44c(0x04)
	None bIsCrouched; // 0x450(0x01)
	None bProxyIsJumpForceApplied; // 0x450(0x01)
	None bPressedJump; // 0x450(0x01)
	None bClientUpdating; // 0x450(0x01)
	None bClientWasFalling; // 0x450(0x01)
	None bClientResimulateRootMotion; // 0x450(0x01)
	None bClientResimulateRootMotionSources; // 0x450(0x01)
	None bSimGravityDisabled; // 0x450(0x01)
	None bClientCheckEncroachmentOnNetUpdate; // 0x451(0x01)
	None bServerMoveIgnoreRootMotion; // 0x451(0x01)
	None bWasJumping; // 0x451(0x01)
	None JumpKeyHoldTime; // 0x454(0x04)
	None JumpForceTimeRemaining; // 0x458(0x04)
	None ProxyJumpForceStartedTime; // 0x45c(0x04)
	None JumpMaxHoldTime; // 0x460(0x04)
	None JumpMaxCount; // 0x464(0x04)
	None JumpCurrentCount; // 0x468(0x04)
	None OnReachedJumpApex; // 0x470(0x10)
	None MovementModeChangedDelegate; // 0x490(0x10)
	None OnCharacterMovementUpdated; // 0x4a0(0x10)
	None SavedRootMotion; // 0x4b0(0x38)
	None ClientRootMotionParams; // 0x4f0(0x40)
	None RootMotionRepMoves; // 0x530(0x10)
	None RepRootMotion; // 0x540(0x98)
	None SplineCurves; // 0x4b8(0x68)
	None SplineInfo; // 0x520(0x18)
	None SplineRotInfo; // 0x538(0x18)
	None SplineScaleInfo; // 0x550(0x18)
	None SplineReparamTable; // 0x568(0x18)
	None bAllowSplineEditingPerInstance; // 0x580(0x01)
	None ReparamStepsPerSegment; // 0x584(0x04)
	None Duration; // 0x588(0x04)
	None bStationaryEndpoints; // 0x58c(0x01)
	None bSplineHasBeenEdited; // 0x58d(0x01)
	None bModifiedByConstructionScript; // 0x58e(0x01)
	None bInputSplinePointsToConstructionScript; // 0x58f(0x01)
	None bDrawDebug; // 0x590(0x01)
	None bClosedLoop; // 0x591(0x01)
	None bLoopPositionOverride; // 0x592(0x01)
	None LoopPosition; // 0x594(0x04)
	None DefaultUpVector; // 0x598(0x0c)
	None HelpDescription; // 0x28(0x10)
	None HelpUsage; // 0x38(0x10)
	None HelpWebLink; // 0x48(0x10)
	None HelpParamNames; // 0x58(0x10)
	None HelpParamDescriptions; // 0x68(0x10)
	None IsServer; // 0x78(0x01)
	None IsClient; // 0x78(0x01)
	None IsEditor; // 0x78(0x01)
	None LogToConsole; // 0x78(0x01)
	None ShowErrorCount; // 0x78(0x01)
	None ShowProgress; // 0x78(0x01)
	None Sound; // 0x238(0x08)
	None InstanceParameters; // 0x240(0x10)
	None SoundClassOverride; // 0x250(0x08)
	None bAutoDestroy; // 0x258(0x01)
	None bStopWhenOwnerDestroyed; // 0x258(0x01)
	None bShouldRemainActiveIfDropped; // 0x258(0x01)
	None bAllowSpatialization; // 0x258(0x01)
	None bOverrideAttenuation; // 0x258(0x01)
	None bOverrideSubtitlePriority; // 0x258(0x01)
	None bIsUISound; // 0x258(0x01)
	None bEnableLowPassFilter; // 0x258(0x01)
	None bOverridePriority; // 0x259(0x01)
	None bSuppressSubtitles; // 0x259(0x01)
	None bAutoManageAttachment; // 0x25a(0x01)
	None AudioComponentUserID; // 0x260(0x08)
	None PitchModulationMin; // 0x268(0x04)
	None PitchModulationMax; // 0x26c(0x04)
	None VolumeModulationMin; // 0x270(0x04)
	None VolumeModulationMax; // 0x274(0x04)
	None VolumeMultiplier; // 0x278(0x04)
	None EnvelopeFollowerAttackTime; // 0x27c(0x04)
	None EnvelopeFollowerReleaseTime; // 0x280(0x04)
	None Priority; // 0x284(0x04)
	None SubtitlePriority; // 0x288(0x04)
	None SourceEffectChain; // 0x290(0x08)
	None PitchMultiplier; // 0x298(0x04)
	None LowPassFilterFrequency; // 0x29c(0x04)
	None AttenuationSettings; // 0x2a8(0x08)
	None AttenuationOverrides; // 0x2b0(0x3a0)
	None ConcurrencySettings; // 0x650(0x08)
	None ConcurrencySet; // 0x658(0x50)
	None AutoAttachLocationRule; // 0x6b4(0x01)
	None AutoAttachRotationRule; // 0x6b5(0x01)
	None AutoAttachScaleRule; // 0x6b6(0x01)
	None OnAudioFinished; // 0x6b8(0x10)
	None OnAudioPlaybackPercent; // 0x6e0(0x10)
	None OnAudioSingleEnvelopeValue; // 0x708(0x10)
	None OnAudioMultiEnvelopeValue; // 0x730(0x10)
	None Modulation; // 0x758(0x10)
	None OnQueueSubtitles; // 0x768(0x10)
	None AutoAttachParent; // 0x778(0x08)
	None AutoAttachSocketName; // 0x780(0x08)
	None OptionsString; // 0x310(0x10)
	None GameSessionClass; // 0x320(0x08)
	None GameStateClass; // 0x328(0x08)
	None PlayerControllerClass; // 0x330(0x08)
	None PlayerStateClass; // 0x338(0x08)
	None HUDClass; // 0x340(0x08)
	None DefaultPawnClass; // 0x348(0x08)
	None SpectatorClass; // 0x350(0x08)
	None ReplaySpectatorPlayerControllerClass; // 0x358(0x08)
	None ServerStatReplicatorClass; // 0x360(0x08)
	None GameSession; // 0x368(0x08)
	None GameState; // 0x370(0x08)
	None ServerStatReplicator; // 0x378(0x08)
	None DefaultPlayerName; // 0x380(0x18)
	None bUseSeamlessTravel; // 0x398(0x01)
	None bStartPlayersAsSpectators; // 0x398(0x01)
	None bPauseable; // 0x398(0x01)
	None MatchState; // 0x3b0(0x08)
	None bDelayedStart; // 0x3b8(0x01)
	None NumSpectators; // 0x3bc(0x04)
	None NumPlayers; // 0x3c0(0x04)
	None NumBots; // 0x3c4(0x04)
	None MinRespawnDelay; // 0x3c8(0x04)
	None NumTravellingPlayers; // 0x3cc(0x04)
	None EngineMessageClass; // 0x3d0(0x08)
	None InactivePlayerArray; // 0x3d8(0x10)
	None InactivePlayerStateLifeSpan; // 0x3e8(0x04)
	None MaxInactivePlayers; // 0x3ec(0x04)
	None bHandleDedicatedServerReplays; // 0x3f0(0x01)
	None GameModeClass; // 0x310(0x08)
	None AuthorityGameMode; // 0x318(0x08)
	None SpectatorClass; // 0x320(0x08)
	None PlayerArray; // 0x328(0x10)
	None bReplicatedHasBegunPlay; // 0x338(0x01)
	None ReplicatedWorldTimeSeconds; // 0x33c(0x04)
	None ServerWorldTimeSecondsDelta; // 0x340(0x04)
	None ServerWorldTimeSecondsUpdateFrequency; // 0x344(0x04)
	None MatchState; // 0x360(0x08)
	None PreviousMatchState; // 0x368(0x08)
	None ElapsedTime; // 0x370(0x04)
	None PlayerState; // 0x348(0x08)
	None OnInstigatedAnyDamage; // 0x388(0x10)
	None StateName; // 0x324(0x08)
	None Pawn; // 0x378(0x08)
	None Character; // 0x338(0x08)
	None TransformComponent; // 0x330(0x08)
	None ControlRotation; // 0x39c(0x0c)
	None bAttachToPawn; // 0x32c(0x01)
	None SelfPlayerController; // 0x3b0(0x08)
	None Player; // 0x510(0x08)
	None AcknowledgedPawn; // 0x428(0x08)
	None ControllingDirTrackInst; // 0x4f8(0x08)
	None MyHUD; // 0x5e8(0x08)
	None PlayerCameraManager; // 0x438(0x08)
	None PlayerCameraManagerClass; // 0x480(0x08)
	None bAutoManageActiveCameraTarget; // 0x6e4(0x01)
	None TargetViewRotation; // 0x664(0x0c)
	None SmoothTargetViewRotationSpeed; // 0x640(0x04)
	None HiddenActors; // 0x5b8(0x10)
	None HiddenPrimitiveComponents; // 0x4d0(0x10)
	None LastSpectatorStateSynchTime; // 0x674(0x04)
	None LastSpectatorSyncLocation; // 0x558(0x0c)
	None LastSpectatorSyncRotation; // 0x45c(0x0c)
	None ClientCap; // 0x478(0x04)
	None CheatManager; // 0x568(0x08)
	None CheatClass; // 0x590(0x08)
	None PlayerInput; // 0x518(0x08)
	None ActiveForceFeedbackEffects; // 0x580(0x10)
	None bPlayerIsWaiting; // 0x498(0x01)
	None NetPlayerIndex; // 0x4bc(0x01)
	None PendingSwapConnection; // 0x468(0x08)
	None NetConnection; // 0x3e0(0x08)
	None InputYawScale; // 0x5e0(0x04)
	None InputPitchScale; // 0x5a8(0x04)
	None InputRollScale; // 0x578(0x04)
	None bShowMouseCursor; // 0x670(0x01)
	None bEnableClickEvents; // 0x5b4(0x01)
	None bEnableTouchEvents; // 0x4e0(0x01)
	None bEnableMouseOverEvents; // 0x670(0x01)
	None bEnableTouchOverEvents; // 0x670(0x01)
	None bForceFeedbackEnabled; // 0x57c(0x01)
	None ForceFeedbackScale; // 0x488(0x04)
	None ClickEventKeys; // 0x4a0(0x10)
	None DefaultMouseCursor; // 0x618(0x01)
	None CurrentMouseCursor; // 0x5e4(0x01)
	None DefaultClickTraceChannel; // 0x47c(0x01)
	None CurrentClickTraceChannel; // 0x48c(0x01)
	None HitResultTraceDistance; // 0x3ec(0x04)
	None SeamlessTravelCount; // 0x5ac(0x02)
	None LastCompletedSeamlessTravelCount; // 0x540(0x02)
	None InactiveStateInputComponent; // 0x490(0x08)
	None bShouldPerformFullTickWhenPaused; // 0x570(0x01)
	None CurrentTouchInterface; // 0x550(0x08)
	None SpectatorPawn; // 0x470(0x08)
	None bIsLocalPlayerController; // 0x5c8(0x01)
	None SpawnLocation; // 0x61c(0x0c)
	None ApplicationWillDeactivateDelegate; // 0xb0(0x10)
	None ApplicationHasReactivatedDelegate; // 0xc0(0x10)
	None ApplicationWillEnterBackgroundDelegate; // 0xd0(0x10)
	None ApplicationHasEnteredForegroundDelegate; // 0xe0(0x10)
	None ApplicationWillTerminateDelegate; // 0xf0(0x10)
	None ApplicationShouldUnloadResourcesDelegate; // 0x100(0x10)
	None ApplicationReceivedStartupArgumentsDelegate; // 0x110(0x10)
	None OnTemperatureChangeDelegate; // 0x120(0x10)
	None OnLowPowerModeDelegate; // 0x130(0x10)
	None UpdatedComponent; // 0xb0(0x08)
	None UpdatedPrimitive; // 0xb8(0x08)
	None Velocity; // 0xc4(0x0c)
	None PlaneConstraintNormal; // 0xd0(0x0c)
	None PlaneConstraintOrigin; // 0xdc(0x0c)
	None bUpdateOnlyIfRendered; // 0xe8(0x01)
	None bAutoUpdateTickRegistration; // 0xe8(0x01)
	None bTickBeforeOwner; // 0xe8(0x01)
	None bAutoRegisterUpdatedComponent; // 0xe8(0x01)
	None bConstrainToPlane; // 0xe8(0x01)
	None bSnapToPlaneAtStart; // 0xe8(0x01)
	None bAutoRegisterPhysicsVolumeUpdates; // 0xe8(0x01)
	None bComponentShouldUpdatePhysicsVolume; // 0xe8(0x01)
	None PlaneConstraintAxisSetting; // 0xeb(0x01)
	None NavAgentProps; // 0xf0(0x30)
	None FixedPathBrakingDistance; // 0x120(0x04)
	None bUpdateNavAgentWithOwnersCollision; // 0x124(0x01)
	None bUseAccelerationForPaths; // 0x124(0x01)
	None bUseFixedBrakingDistanceForPaths; // 0x124(0x01)
	None MovementState; // 0x125(0x01)
	None PathFollowingComp; // 0x128(0x08)
	None PawnOwner; // 0x130(0x08)
	None CharacterOwner; // 0x2b0(0x08)
	None GravityScale; // 0x2ec(0x04)
	None MaxStepHeight; // 0x468(0x04)
	None JumpZVelocity; // 0x474(0x04)
	None JumpOffJumpZFactor; // 0x6c8(0x04)
	None WalkableFloorAngle; // 0x4f8(0x04)
	None WalkableFloorZ; // 0x488(0x04)
	None MovementMode; // 0x438(0x01)
	None CustomMovementMode; // 0x56c(0x01)
	None NetworkSmoothingMode; // 0x280(0x01)
	None GroundFriction; // 0x470(0x04)
	None MaxWalkSpeed; // 0x300(0x04)
	None MaxWalkSpeedCrouched; // 0x6e0(0x04)
	None MaxSwimSpeed; // 0x548(0x04)
	None MaxFlySpeed; // 0x4e8(0x04)
	None MaxCustomMovementSpeed; // 0x460(0x04)
	None MaxAcceleration; // 0x484(0x04)
	None MinAnalogWalkSpeed; // 0x4e0(0x04)
	None BrakingFrictionFactor; // 0x2a0(0x04)
	None BrakingFriction; // 0x54c(0x04)
	None BrakingSubStepTime; // 0x6bc(0x04)
	None BrakingDecelerationWalking; // 0x554(0x04)
	None BrakingDecelerationFalling; // 0x51c(0x04)
	None BrakingDecelerationSwimming; // 0x414(0x04)
	None BrakingDecelerationFlying; // 0x568(0x04)
	None AirControl; // 0x544(0x04)
	None AirControlBoostMultiplier; // 0x308(0x04)
	None AirControlBoostVelocityThreshold; // 0x3f4(0x04)
	None FallingLateralFriction; // 0x3f0(0x04)
	None CrouchedHalfHeight; // 0x264(0x04)
	None Buoyancy; // 0x40c(0x04)
	None PerchRadiusThreshold; // 0x244(0x04)
	None PerchAdditionalHeight; // 0x248(0x04)
	None RotationRate; // 0x520(0x0c)
	None bUseSeparateBrakingFriction; // 0x298(0x01)
	None bApplyGravityWhileJumping; // 0x2d4(0x01)
	None bUseControllerDesiredRotation; // 0x2e4(0x01)
	None bOrientRotationToMovement; // 0x550(0x01)
	None bSweepWhileNavWalking; // 0x620(0x01)
	None bMovementInProgress; // 0x3c0(0x01)
	None bEnableScopedMovementUpdates; // 0x5d0(0x01)
	None bEnableServerDualMoveScopedMovementUpdates; // 0x4e4(0x01)
	None bForceMaxAccel; // 0x4b8(0x01)
	None bRunPhysicsWithNoController; // 0x2f3(0x01)
	None bForceNextFloorCheck; // 0x490(0x01)
	None bShrinkProxyCapsule; // 0x2fc(0x01)
	None bCanWalkOffLedges; // 0x2e4(0x01)
	None bCanWalkOffLedgesWhenCrouching; // 0x44c(0x01)
	None bNetworkSkipProxyPredictionOnNetUpdate; // 0x490(0x01)
	None bNetworkAlwaysReplicateTransformUpdateTimestamp; // 0x490(0x01)
	None bDeferUpdateMoveComponent; // 0x510(0x01)
	None bEnablePhysicsInteraction; // 0x4dc(0x01)
	None bTouchForceScaledToMass; // 0x304(0x01)
	None bPushForceScaledToMass; // 0x540(0x01)
	None bPushForceUsingZOffset; // 0x5ac(0x01)
	None bScalePushForceToVelocity; // 0x6dc(0x01)
	None DeferredUpdatedMoveComponent; // 0x3e8(0x08)
	None MaxOutOfWaterStepHeight; // 0x240(0x04)
	None OutofWaterZ; // 0x22c(0x04)
	None Mass; // 0x23c(0x04)
	None StandingDownwardForceScale; // 0x4c8(0x04)
	None InitialPushForceFactor; // 0x294(0x04)
	None PushForceFactor; // 0x2c0(0x04)
	None PushForcePointZOffsetFactor; // 0x2d0(0x04)
	None TouchForceFactor; // 0x434(0x04)
	None MinTouchForce; // 0x3a8(0x04)
	None MaxTouchForce; // 0x5a8(0x04)
	None RepulsionForce; // 0x3ac(0x04)
	None Acceleration; // 0x6d0(0x0c)
	None LastUpdateRotation; // 0x270(0x10)
	None LastUpdateLocation; // 0x288(0x0c)
	None LastUpdateVelocity; // 0x2d8(0x0c)
	None ServerLastTransformUpdateTimeStamp; // 0x310(0x04)
	None ServerLastClientGoodMoveAckTime; // 0x50c(0x04)
	None ServerLastClientAdjustmentTime; // 0x4bc(0x04)
	None PendingImpulseToApply; // 0x21c(0x0c)
	None PendingForceToApply; // 0x5c4(0x0c)
	None AnalogInputModifier; // 0x4d4(0x04)
	None MaxSimulationTimeStep; // 0x2f4(0x04)
	None MaxSimulationIterations; // 0x444(0x04)
	None MaxJumpApexAttemptsPerSimulation; // 0x47c(0x04)
	None MaxDepenetrationWithGeometry; // 0x4ac(0x04)
	None MaxDepenetrationWithGeometryAsProxy; // 0x494(0x04)
	None MaxDepenetrationWithPawn; // 0x25c(0x04)
	None MaxDepenetrationWithPawnAsProxy; // 0x564(0x04)
	None NetworkSimulatedSmoothLocationTime; // 0x3f8(0x04)
	None NetworkSimulatedSmoothRotationTime; // 0x6cc(0x04)
	None ListenServerNetworkSimulatedSmoothLocationTime; // 0x62c(0x04)
	None ListenServerNetworkSimulatedSmoothRotationTime; // 0x3e4(0x04)
	None NetProxyShrinkRadius; // 0x6c4(0x04)
	None NetProxyShrinkHalfHeight; // 0x440(0x04)
	None NetworkMaxSmoothUpdateDistance; // 0x258(0x04)
	None NetworkNoSmoothUpdateDistance; // 0x4d8(0x04)
	None NetworkMinTimeBetweenClientAckGoodMoves; // 0x530(0x04)
	None NetworkMinTimeBetweenClientAdjustments; // 0x284(0x04)
	None NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x2e8(0x04)
	None NetworkLargeClientCorrectionDistance; // 0x410(0x04)
	None LedgeCheckThreshold; // 0x514(0x04)
	None JumpOutOfWaterPitch; // 0x4cc(0x04)
	None CurrentFloor; // 0x314(0x94)
	None DefaultLandMovementMode; // 0x3fc(0x01)
	None DefaultWaterMovementMode; // 0x2f2(0x01)
	None GroundMovementMode; // 0x305(0x01)
	None bMaintainHorizontalGroundVelocity; // 0x518(0x01)
	None bImpartBaseVelocityX; // 0x5c0(0x01)
	None bImpartBaseVelocityY; // 0x2fc(0x01)
	None bImpartBaseVelocityZ; // 0x4c0(0x01)
	None bImpartBaseAngularVelocity; // 0x518(0x01)
	None bJustTeleported; // 0x44c(0x01)
	None bNetworkUpdateReceived; // 0x2fc(0x01)
	None bNetworkMovementModeChanged; // 0x230(0x01)
	None bIgnoreClientMovementErrorChecksAndCorrection; // 0x6c0(0x01)
	None bServerAcceptClientAuthoritativePosition; // 0x480(0x01)
	None bNotifyApex; // 0x464(0x01)
	None bCheatFlying; // 0x24c(0x01)
	None bWantsToCrouch; // 0x4b8(0x01)
	None bCrouchMaintainsBaseLocation; // 0x2b8(0x01)
	None bIgnoreBaseRotation; // 0x538(0x01)
	None bFastAttachedMove; // 0x218(0x01)
	None bAlwaysCheckFloor; // 0x430(0x01)
	None bUseFlatBaseForFloorChecks; // 0x238(0x01)
	None bPerformingJumpOff; // 0x2f1(0x01)
	None bWantsToLeaveNavWalking; // 0x46c(0x01)
	None bUseRVOAvoidance; // 0x6c0(0x01)
	None bRequestedMoveUseAcceleration; // 0x498(0x01)
	None bWasSimulatingRootMotion; // 0x478(0x01)
	None bAllowPhysicsRotationDuringAnimRootMotion; // 0x44c(0x01)
	None bHasRequestedVelocity; // 0x304(0x01)
	None bRequestedMoveWithMaxSpeed; // 0x52c(0x01)
	None bWasAvoidanceUpdated; // 0x2fc(0x01)
	None bProjectNavMeshWalking; // 0x508(0x01)
	None bProjectNavMeshOnBothWorldChannels; // 0x228(0x01)
	None AvoidanceConsiderationRadius; // 0x448(0x04)
	None RequestedVelocity; // 0x4a0(0x0c)
	None AvoidanceUID; // 0x250(0x04)
	None AvoidanceGroup; // 0x48c(0x04)
	None GroupsToAvoid; // 0x2bc(0x04)
	None GroupsToIgnore; // 0x4c4(0x04)
	None AvoidanceWeight; // 0x2a8(0x04)
	None PendingLaunchVelocity; // 0x558(0x0c)
	None NavMeshProjectionInterval; // 0x2a4(0x04)
	None NavMeshProjectionTimer; // 0x30c(0x04)
	None NavMeshProjectionInterpSpeed; // 0x254(0x04)
	None NavMeshProjectionHeightScaleUp; // 0x234(0x04)
	None NavMeshProjectionHeightScaleDown; // 0x408(0x04)
	None NavWalkingFloorDistTolerance; // 0x2f8(0x04)
	None PostPhysicsTickFunction; // 0x148(0x30)
	None MinTimeBetweenTimeStampResets; // 0x5b0(0x04)
	None ClientAutonomuousBase; // 0x4f0(0x08)
	None CurrentRootMotion; // 0x570(0x38)
	None RootMotionParams; // 0x5e0(0x40)
	None AnimRootMotionVelocity; // 0x2c4(0x0c)
	None BlockingHit_SlideAccelerator; // 0x628(0x04)
	None BlockingPhysMaterial; // 0x4b0(0x08)
	None MeshComp; // 0x310(0x08)
	None SceneComponent; // 0x318(0x08)
	None CaptureComponent2D; // 0x320(0x08)
	None ObjectReferenceList; // 0x2c0(0x10)
	None bIsGlobalAsyncScanEnvironment; // 0x2d0(0x01)
	None bShouldGuessTypeAndName; // 0x2d1(0x01)
	None bShouldUseSynchronousLoad; // 0x2d2(0x01)
	None bIsLoadingFromPakFiles; // 0x2d3(0x01)
	None bShouldAcquireMissingChunksOnLoad; // 0x2d4(0x01)
	None bOnlyCookProductionAssets; // 0x2d5(0x01)
	None bIsBulkScanning; // 0x2d6(0x01)
	None bIsPrimaryAssetDirectoryCurrent; // 0x2d7(0x01)
	None bIsManagementDatabaseCurrent; // 0x2d8(0x01)
	None bUpdateManagementDatabaseAfterScan; // 0x2d9(0x01)
	None bIncludeOnlyOnDiskAssets; // 0x2da(0x01)
	None NumberOfSpawnedNotifications; // 0x2dc(0x04)
	None ShapeBodySetup; // 0x4b8(0x08)
	None AreaClass; // 0x4c0(0x08)
	None ShapeColor; // 0x4c8(0x04)
	None bDrawOnlyIfSelected; // 0x4cc(0x01)
	None bShouldCollideWhenPlacing; // 0x4cc(0x01)
	None bDynamicObstacle; // 0x4cc(0x01)
	None BoxExtent; // 0x4d0(0x0c)
	None LineThickness; // 0x4dc(0x04)
	None FieldOfView; // 0x238(0x04)
	None OrthoWidth; // 0x23c(0x04)
	None OrthoNearClipPlane; // 0x240(0x04)
	None OrthoFarClipPlane; // 0x244(0x04)
	None AspectRatio; // 0x248(0x04)
	None bConstrainAspectRatio; // 0x24c(0x01)
	None bUseFieldOfViewForLOD; // 0x24c(0x01)
	None bLockToHmd; // 0x254(0x01)
	None bUsePawnControlRotation; // 0x254(0x01)
	None ProjectionMode; // 0x255(0x01)
	None PostProcessBlendWeight; // 0x290(0x04)
	None PostProcessSettings; // 0x2c0(0x5c0)
	None DebugCameraControllerRef; // 0x28(0x08)
	None DebugCameraControllerClass; // 0x30(0x08)
	None bCausedByWorld; // 0x28(0x01)
	None bScaleMomentumByMass; // 0x28(0x01)
	None bRadialDamageVelChange; // 0x28(0x01)
	None DamageImpulse; // 0x2c(0x04)
	None DestructibleImpulse; // 0x30(0x04)
	None DestructibleDamageSpreadScale; // 0x34(0x04)
	None DamageFalloff; // 0x38(0x04)
	None SpectatorControllerClass; // 0x928(0x08)
	None SelfDemoNetDriver; // 0x930(0x08)
	None RollbackNetStartupActors; // 0xa50(0x50)
	None CheckpointSaveMaxMSPerFrame; // 0xecc(0x04)
	None MulticastRecordOptions; // 0xf00(0x10)
	None bIsLocalReplay; // 0xf60(0x01)
	None SpectatorControllers; // 0xf68(0x10)
	None ForcedLodModel; // 0x4e8(0x04)
	None PreviousLODLevel; // 0x4ec(0x04)
	None MinLOD; // 0x4f0(0x04)
	None SubDivisionStepSize; // 0x4f4(0x04)
	None StaticMesh; // 0x4f8(0x08)
	None WireframeColorOverride; // 0x500(0x04)
	None bEvaluateWorldPositionOffset; // 0x504(0x01)
	None bOverrideWireframeColor; // 0x504(0x01)
	None bOverrideMinLod; // 0x504(0x01)
	None bOverrideNavigationExport; // 0x504(0x01)
	None bForceNavigationObstacle; // 0x504(0x01)
	None bDisallowMeshPaintPerInstance; // 0x504(0x01)
	None bIgnoreInstanceForTextureStreaming; // 0x504(0x01)
	None bOverrideLightMapRes; // 0x504(0x01)
	None bCastDistanceFieldIndirectShadow; // 0x505(0x01)
	None bOverrideDistanceFieldSelfShadowBias; // 0x505(0x01)
	None bUseSubDivisions; // 0x505(0x01)
	None bUseDefaultCollision; // 0x505(0x01)
	None bReverseCulling; // 0x505(0x01)
	None OverriddenLightMapRes; // 0x508(0x04)
	None DistanceFieldIndirectShadowMinVisibility; // 0x50c(0x04)
	None DistanceFieldSelfShadowBias; // 0x510(0x04)
	None StreamingDistanceMultiplier; // 0x514(0x04)
	None LODData; // 0x518(0x10)
	None StreamingTextureData; // 0x528(0x10)
	None LightmassSettings; // 0x538(0x18)
	None MaxDeltaTime; // 0xde8(0x04)
	None ServerFlushLogInterval; // 0xdec(0x04)
	None GameInstance; // 0xdf0(0x08)
	None ReplayListItemInfos; // 0x28(0x10)
	None OnEnumerateReplayListCompleteEvent; // 0x38(0x10)
	None OnDeleteReplayCompleteEvent; // 0x48(0x10)
	None OnKeepAndDeleteOldetsReplaysCompleteEvent; // 0x58(0x10)
	None OnKeepAndDeleteOldVersionReplaysCompleteEvent; // 0x68(0x10)
	None SelfGameInstance; // 0x80(0x08)
	None bLoadingWidgetVisible; // 0x88(0x01)
	None LocalPlayers; // 0xb8(0x10)
	None OnlineSession; // 0xc8(0x08)
	None ReferencedObjects; // 0xd0(0x10)
	None MaxSpectators; // 0x310(0x04)
	None MaxPlayers; // 0x314(0x04)
	None MaxPartySize; // 0x318(0x04)
	None MaxSplitscreensPerConnection; // 0x31c(0x01)
	None bRequiresPushToTalk; // 0x31d(0x01)
	None SessionName; // 0x320(0x08)
	None PerInstanceSMData; // 0x550(0x10)
	None NumCustomDataFloats; // 0x560(0x04)
	None PerInstanceSMCustomData; // 0x568(0x10)
	None bMergeCollision; // 0x578(0x01)
	None InstancingRandomSeed; // 0x57c(0x04)
	None InstanceStartCullDistance; // 0x580(0x04)
	None InstanceEndCullDistance; // 0x584(0x04)
	None CulldistanceType; // 0x588(0x01)
	None MinScreenSizeScale; // 0x58c(0x04)
	None InstanceBodiesSplitRatio; // 0x590(0x01)
	None InstanceReorderTable; // 0x598(0x10)
	None NumPendingLightmaps; // 0x604(0x04)
	None CachedMappings; // 0x608(0x10)
	None SortedInstances; // 0x628(0x10)
	None NumBuiltInstances; // 0x638(0x04)
	None BuiltInstanceBounds; // 0x640(0x1c)
	None UnbuiltInstanceBounds; // 0x65c(0x1c)
	None UnbuiltInstanceBoundsList; // 0x678(0x10)
	None bEnableDensityScaling; // 0x688(0x01)
	None OcclusionLayerNumNodes; // 0x690(0x04)
	None CacheMeshExtendedBounds; // 0x694(0x1c)
	None bDisableCollision; // 0x6b0(0x01)
	None InstanceCountToRender; // 0x6b4(0x04)
	None OnReplayPauseEvent; // 0x6f0(0x10)
	None OnReplayJumpEvent; // 0x700(0x10)
	None OnReplayJumpCompleteEvent; // 0x710(0x10)
	None PlayerCameraManagerClassName; // 0x7a8(0x10)
	None SpectatorPawnClassName; // 0x7b8(0x10)
	None ChangeViewModeDelegate; // 0x7c8(0x10)
	None ChangeCameraTypeDelegate; // 0x7d8(0x10)
	None ChangeCameraTypeByNetGuidDelegate; // 0x7e8(0x10)
	None WidgetInfoArray; // 0x800(0x10)
	None ReplayWidgetMap; // 0x810(0x50)
	None KillcamComponent; // 0x8c0(0x08)
	None TargetcamComponent; // 0x8c8(0x08)
	None pTargetPlayerInRecording; // 0x8e0(0x08)
	None AfterKillcamHUDClassName; // 0x8e8(0x10)
	None AfterKillcamHUDClass; // 0x8f8(0x08)
	None ReplayHUDClassName; // 0x910(0x10)
	None ReplayHUDClass; // 0x920(0x08)
	None BaseTurnRate; // 0x380(0x04)
	None BaseLookUpRate; // 0x384(0x04)
	None MovementComponent; // 0x388(0x08)
	None CollisionComponent; // 0x390(0x08)
	None MeshComponent; // 0x398(0x08)
	None bAddDefaultMovementBindings; // 0x3a0(0x01)
	None Friction; // 0x28(0x04)
	None FrictionCombineMode; // 0x2c(0x01)
	None bOverrideFrictionCombineMode; // 0x2d(0x01)
	None Restitution; // 0x30(0x04)
	None RestitutionCombineMode; // 0x34(0x01)
	None bOverrideRestitutionCombineMode; // 0x35(0x01)
	None Density; // 0x38(0x04)
	None RaiseMassToPower; // 0x3c(0x04)
	None DestructibleDamageThresholdScale; // 0x40(0x04)
	None PhysicalMaterialProperty; // 0x48(0x08)
	None SurfaceType; // 0x50(0x01)
	None TireFrictionScale; // 0x54(0x04)
	None TireFrictionScales; // 0x58(0x10)
	None PCOwner; // 0x310(0x08)
	None TransformComponent; // 0x318(0x08)
	None DefaultFOV; // 0x328(0x04)
	None DefaultOrthoWidth; // 0x330(0x04)
	None DefaultAspectRatio; // 0x338(0x04)
	None CameraCache; // 0x380(0x660)
	None LastFrameCameraCache; // 0x9e0(0x660)
	None ViewTarget; // 0x1040(0x670)
	None PendingViewTarget; // 0x16b0(0x670)
	None CameraCachePrivate; // 0x1d50(0x660)
	None LastFrameCameraCachePrivate; // 0x23b0(0x660)
	None ModifierList; // 0x2a10(0x10)
	None DefaultModifiers; // 0x2a20(0x10)
	None FreeCamDistance; // 0x2a30(0x04)
	None FreeCamOffset; // 0x2a34(0x0c)
	None ViewTargetOffset; // 0x2a40(0x0c)
	None CameraLensEffects; // 0x2a60(0x10)
	None CachedCameraShakeMod; // 0x2a70(0x08)
	None AnimInstPool; // 0x2a78(0x40)
	None PostProcessBlendCache; // 0x2ab8(0x10)
	None ActiveAnims; // 0x2ad8(0x10)
	None FreeAnims; // 0x2ae8(0x10)
	None AnimCameraActor; // 0x2af8(0x08)
	None bIsOrthographic; // 0x2b00(0x01)
	None bDefaultConstrainAspectRatio; // 0x2b00(0x01)
	None bClientSimulatingViewTarget; // 0x2b00(0x01)
	None bUseClientSideCameraUpdates; // 0x2b00(0x01)
	None bGameCameraCutThisFrame; // 0x2b01(0x01)
	None ViewPitchMin; // 0x2b04(0x04)
	None ViewPitchMax; // 0x2b08(0x04)
	None ViewYawMin; // 0x2b0c(0x04)
	None ViewYawMax; // 0x2b10(0x04)
	None ViewRollMin; // 0x2b14(0x04)
	None ViewRollMax; // 0x2b18(0x04)
	None ServerUpdateCameraTimeout; // 0x2b20(0x04)
	None SelfPlayerState; // 0x310(0x08)
	None Score; // 0x318(0x04)
	None PlayerId; // 0x31c(0x04)
	None Ping; // 0x320(0x01)
	None bShouldUpdateReplicatedPing; // 0x322(0x01)
	None bIsSpectator; // 0x322(0x01)
	None bOnlySpectator; // 0x322(0x01)
	None bIsABot; // 0x322(0x01)
	None bIsInactive; // 0x322(0x01)
	None bFromPreviousLevel; // 0x322(0x01)
	None StartTime; // 0x324(0x04)
	None EngineMessageClass; // 0x328(0x08)
	None SavedNetworkAddress; // 0x338(0x10)
	None UniqueID; // 0x348(0x28)
	None PawnPrivate; // 0x378(0x08)
	None PlayerNamePrivate; // 0x3f8(0x10)
	None PrimitiveRenderMode; // 0x238(0x01)
	None bTonemapPropagateAlpha; // 0x239(0x01)
	None bUsePostProcessMaterial; // 0x239(0x01)
	None bUseDirectionalLights; // 0x239(0x01)
	None CaptureSource; // 0x23a(0x01)
	None bCaptureEveryFrame; // 0x23b(0x01)
	None bCaptureOnMovement; // 0x23b(0x01)
	None bAlwaysPersistRenderingState; // 0x23c(0x01)
	None HiddenComponents; // 0x240(0x10)
	None HiddenActors; // 0x250(0x10)
	None ShowOnlyComponents; // 0x260(0x10)
	None ShowOnlyActors; // 0x270(0x10)
	None LODDistanceFactor; // 0x280(0x04)
	None MaxViewDistanceOverride; // 0x284(0x04)
	None CaptureSortPriority; // 0x288(0x04)
	None bUseRayTracingIfEnabled; // 0x28c(0x01)
	None ShowFlagSettings; // 0x290(0x10)
	None ProfilingEventName; // 0x2b0(0x10)
	None ProjectionType; // 0x2d0(0x01)
	None FOVAngle; // 0x2d4(0x04)
	None OrthoWidth; // 0x2d8(0x04)
	None TextureTarget; // 0x2e0(0x08)
	None CompositeMode; // 0x2e8(0x01)
	None PostProcessSettings; // 0x2f0(0x5c0)
	None PostProcessBlendWeight; // 0x8b0(0x04)
	None bOverride_CustomNearClippingPlane; // 0x8b4(0x01)
	None CustomNearClippingPlane; // 0x8b8(0x04)
	None bUseCustomProjectionMatrix; // 0x8bc(0x01)
	None CustomProjectionMatrix; // 0x8c0(0x40)
	None bEnableClipPlane; // 0x900(0x01)
	None ClipPlaneBase; // 0x904(0x0c)
	None ClipPlaneNormal; // 0x910(0x0c)
	None bCameraCutThisFrame; // 0x91c(0x01)
	None bConsiderUnrenderedOpaquePixelAsFullyTranslucent; // 0x91c(0x01)
	None bDisableFlipCopyGLES; // 0x920(0x01)
	None ArrowColor; // 0x4b8(0x04)
	None ArrowSize; // 0x4bc(0x04)
	None ScreenSize; // 0x4c0(0x04)
	None bIsScreenSizeScaled; // 0x4c4(0x01)
	None bTreatAsASprite; // 0x4c4(0x01)
	None CapsuleComponent; // 0x318(0x08)
	None GoodSprite; // 0x320(0x08)
	None BadSprite; // 0x328(0x08)
	None bIsPIEPlayerStart; // 0x330(0x01)
	None PlayerStartTag; // 0x338(0x08)
	None InitialSpeed; // 0xf0(0x04)
	None MaxSpeed; // 0xf4(0x04)
	None bRotationFollowsVelocity; // 0xf8(0x01)
	None bRotationRemainsVertical; // 0xf8(0x01)
	None bShouldBounce; // 0xf8(0x01)
	None bInitialVelocityInLocalSpace; // 0xf8(0x01)
	None bForceSubStepping; // 0xf8(0x01)
	None bSimulationEnabled; // 0xf8(0x01)
	None bSweepCollision; // 0xf8(0x01)
	None bIsHomingProjectile; // 0xf8(0x01)
	None bBounceAngleAffectsFriction; // 0xf9(0x01)
	None bIsSliding; // 0xf9(0x01)
	None bInterpMovement; // 0xf9(0x01)
	None bInterpRotation; // 0xf9(0x01)
	None PreviousHitTime; // 0xfc(0x04)
	None PreviousHitNormal; // 0x100(0x0c)
	None ProjectileGravityScale; // 0x10c(0x04)
	None Buoyancy; // 0x110(0x04)
	None Bounciness; // 0x114(0x04)
	None Friction; // 0x118(0x04)
	None BounceVelocityStopSimulatingThreshold; // 0x11c(0x04)
	None MinFrictionFraction; // 0x120(0x04)
	None OnProjectileBounce; // 0x128(0x10)
	None OnProjectileStop; // 0x138(0x10)
	None HomingAccelerationMagnitude; // 0x148(0x04)
	None HomingTargetComponent; // 0x14c(0x08)
	None MaxSimulationTimeStep; // 0x154(0x04)
	None MaxSimulationIterations; // 0x158(0x04)
	None BounceAdditionalIterations; // 0x15c(0x04)
	None InterpLocationTime; // 0x160(0x04)
	None InterpRotationTime; // 0x164(0x04)
	None InterpLocationMaxLagDistance; // 0x168(0x04)
	None InterpLocationSnapToTargetDistance; // 0x16c(0x04)
	None bUseVSync; // 0x28(0x01)
	None bIsSmoothFrameRate; // 0x29(0x01)
	None bUseDynamicResolution; // 0x2a(0x01)
	None ResolutionSizeX; // 0x80(0x04)
	None ResolutionSizeY; // 0x84(0x04)
	None LastUserConfirmedResolutionSizeX; // 0x88(0x04)
	None LastUserConfirmedResolutionSizeY; // 0x8c(0x04)
	None WindowPosX; // 0x90(0x04)
	None WindowPosY; // 0x94(0x04)
	None FullscreenMode; // 0x98(0x04)
	None LastConfirmedFullscreenMode; // 0x9c(0x04)
	None PreferredFullscreenMode; // 0xa0(0x04)
	None Version; // 0xa4(0x04)
	None AudioQualityLevel; // 0xa8(0x04)
	None LastConfirmedAudioQualityLevel; // 0xac(0x04)
	None FrameRateLimit; // 0xb0(0x04)
	None LobbyFrameRateLimit; // 0xb4(0x04)
	None DesiredScreenWidth; // 0xbc(0x04)
	None bUseDesiredScreenHeight; // 0xc0(0x01)
	None DesiredScreenHeight; // 0xc4(0x04)
	None LastUserConfirmedDesiredScreenWidth; // 0xc8(0x04)
	None LastUserConfirmedDesiredScreenHeight; // 0xcc(0x04)
	None LastRecommendedScreenWidth; // 0xd0(0x04)
	None LastRecommendedScreenHeight; // 0xd4(0x04)
	None LastCPUBenchmarkResult; // 0xd8(0x04)
	None LastGPUBenchmarkResult; // 0xdc(0x04)
	None LastCPUBenchmarkSteps; // 0xe0(0x10)
	None LastGPUBenchmarkSteps; // 0xf0(0x10)
	None LastCPUBrand; // 0x100(0x10)
	None LastGPUBrand; // 0x110(0x10)
	None LastInstallStorageType; // 0x120(0x04)
	None LastTotalGraphicsMemory; // 0x128(0x08)
	None LastGPUBenchmarkMultiplier; // 0x130(0x04)
	None bUseHDRDisplayOutput; // 0x134(0x01)
	None HDRDisplayOutputNits; // 0x138(0x04)
	None ShowHUD; // 0x13c(0x01)
	None OnGameUserSettingsUINeedsUpdate; // 0x140(0x10)
	None CapsuleHalfHeight; // 0x4d0(0x04)
	None CapsuleRadius; // 0x4d4(0x04)
	None ViewportConsole; // 0x40(0x08)
	None DebugProperties; // 0x48(0x10)
	None MaxSplitscreenPlayers; // 0x68(0x04)
	None World; // 0x78(0x08)
	None GameInstance; // 0x80(0x08)
	None TerminalVelocity; // 0x348(0x04)
	None Priority; // 0x34c(0x04)
	None FluidFriction; // 0x350(0x04)
	None bWaterVolume; // 0x354(0x01)
	None bPhysicsOnContact; // 0x354(0x01)
	None VisibilityCellSize; // 0x318(0x04)
	None VisibilityAggressiveness; // 0x31c(0x01)
	None bPrecomputeVisibility; // 0x31d(0x01)
	None bPlaceCellsOnlyAlongCameraTracks; // 0x31d(0x01)
	None bEnableWorldBoundsChecks; // 0x31d(0x01)
	None bEnableNavigationSystem; // 0x31d(0x01)
	None bEnableAISystem; // 0x31d(0x01)
	None bEnableWorldComposition; // 0x31d(0x01)
	None bUseClientSideLevelStreamingVolumes; // 0x31d(0x01)
	None bEnableWorldOriginRebasing; // 0x31d(0x01)
	None bWorldGravitySet; // 0x31e(0x01)
	None bGlobalGravitySet; // 0x31e(0x01)
	None bMinimizeBSPSections; // 0x31e(0x01)
	None bForceNoPrecomputedLighting; // 0x31e(0x01)
	None bHighPriorityLoading; // 0x31e(0x01)
	None bHighPriorityLoadingLocal; // 0x31e(0x01)
	None bOverrideDefaultBroadphaseSettings; // 0x31e(0x01)
	None NavigationSystemConfig; // 0x320(0x08)
	None NavigationSystemConfigOverride; // 0x328(0x08)
	None WorldToMeters; // 0x330(0x04)
	None KillZ; // 0x334(0x04)
	None KillZDamageType; // 0x338(0x08)
	None WorldGravityZ; // 0x340(0x04)
	None GlobalGravityZ; // 0x344(0x04)
	None DefaultPhysicsVolumeClass; // 0x348(0x08)
	None PhysicsCollisionHandlerClass; // 0x350(0x08)
	None DefaultGameMode; // 0x358(0x08)
	None GameNetworkManagerClass; // 0x360(0x08)
	None PackedLightAndShadowMapTextureSize; // 0x368(0x04)
	None DefaultColorScale; // 0x36c(0x0c)
	None DefaultMaxDistanceFieldOcclusionDistance; // 0x378(0x04)
	None GlobalDistanceFieldViewDistance; // 0x37c(0x04)
	None DynamicIndirectShadowsSelfShadowingIntensity; // 0x380(0x04)
	None DefaultReverbSettings; // 0x388(0x20)
	None DefaultAmbientZoneSettings; // 0x3a8(0x24)
	None MonoCullingDistance; // 0x3cc(0x04)
	None DefaultBaseSoundMix; // 0x3d0(0x08)
	None TimeDilation; // 0x3d8(0x04)
	None MatineeTimeDilation; // 0x3dc(0x04)
	None DemoPlayTimeDilation; // 0x3e0(0x04)
	None MinGlobalTimeDilation; // 0x3e4(0x04)
	None MaxGlobalTimeDilation; // 0x3e8(0x04)
	None MinUndilatedFrameTime; // 0x3ec(0x04)
	None MaxUndilatedFrameTime; // 0x3f0(0x04)
	None BroadphaseSettings; // 0x3f4(0x40)
	None Pauser; // 0x438(0x08)
	None ReplicationViewers; // 0x440(0x10)
	None AssetUserData; // 0x450(0x10)
	None PauserPlayerState; // 0x460(0x08)
	None MaxNumberOfBookmarks; // 0x468(0x04)
	None DefaultBookmarkClass; // 0x470(0x08)
	None BookmarkArray; // 0x478(0x10)
	None LastBookmarkClass; // 0x488(0x08)
	None bUseInstancedStaticCollision; // 0x490(0x01)
	None bDebug; // 0x28(0x01)
	None bExclusive; // 0x28(0x01)
	None Priority; // 0x2c(0x01)
	None CameraOwner; // 0x30(0x08)
	None AlphaInTime; // 0x38(0x04)
	None AlphaOutTime; // 0x3c(0x04)
	None ALPHA; // 0x40(0x04)
	None LightComponent; // 0x310(0x08)
	None bEnabled; // 0x318(0x01)
	None SubsurfaceProfile; // 0x38(0x08)
	None LightmassSettings; // 0x50(0x10)
	None TextureStreamingData; // 0x60(0x10)
	None AssetUserData; // 0x70(0x10)
	None PhysMaterial; // 0x88(0x08)
	None PhysicalMaterialMap; // 0x90(0x40)
	None Parent; // 0xd0(0x08)
	None bHasStaticPermutationResource; // 0xd8(0x01)
	None bOverrideSubsurfaceProfile; // 0xd8(0x01)
	None ScalarParameterValues; // 0xe0(0x10)
	None VectorParameterValues; // 0xf0(0x10)
	None TextureParameterValues; // 0x100(0x10)
	None RuntimeVirtualTextureParameterValues; // 0x110(0x10)
	None FontParameterValues; // 0x120(0x10)
	None BasePropertyOverrides; // 0x130(0x08)
	None StaticParameters; // 0x148(0x40)
	None CachedLayerParameters; // 0x188(0x1a0)
	None CachedReferencedTextures; // 0x328(0x10)
	None PhysMaterialMask; // 0x408(0x08)
	None NumReplicatedProperties; // 0x2d0(0x04)
	None bHasNativizedParent; // 0x2d4(0x01)
	None bHasCookedComponentInstancingData; // 0x2d4(0x01)
	None DynamicBindingObjects; // 0x2d8(0x10)
	None ComponentTemplates; // 0x2e8(0x10)
	None Timelines; // 0x2f8(0x10)
	None ComponentClassOverrides; // 0x308(0x10)
	None SimpleConstructionScript; // 0x318(0x08)
	None InheritableComponentHandler; // 0x320(0x08)
	None UberGraphFramePointerProperty; // 0x328(0x08)
	None UberGraphFunction; // 0x338(0x08)
	None CookedComponentInstancingData; // 0x340(0x50)
	None AutoActivateForPlayer; // 0x310(0x01)
	None CameraComponent; // 0x318(0x08)
	None SceneComponent; // 0x320(0x08)
	None bConstrainAspectRatio; // 0x330(0x01)
	None AspectRatio; // 0x334(0x04)
	None FOVAngle; // 0x338(0x04)
	None PostProcessBlendWeight; // 0x33c(0x04)
	None PostProcessSettings; // 0x340(0x5c0)
	None SoundClassObject; // 0x28(0x08)
	None bDebug; // 0x30(0x01)
	None bOverrideConcurrency; // 0x30(0x01)
	None bOutputToBusOnly; // 0x30(0x01)
	None bHasDelayNode; // 0x30(0x01)
	None bHasConcatenatorNode; // 0x30(0x01)
	None bBypassVolumeScaleForPriority; // 0x30(0x01)
	None VirtualizationMode; // 0x31(0x01)
	None ConcurrencySet; // 0x88(0x50)
	None ConcurrencyOverrides; // 0xd8(0x20)
	None Duration; // 0xf8(0x04)
	None MaxDistance; // 0xfc(0x04)
	None TotalSamples; // 0x100(0x04)
	None Priority; // 0x104(0x04)
	None AttenuationSettings; // 0x108(0x08)
	None Modulation; // 0x110(0x10)
	None SoundSubmixObject; // 0x120(0x08)
	None SoundSubmixSends; // 0x128(0x10)
	None SourceEffectChain; // 0x138(0x08)
	None BusSends; // 0x140(0x10)
	None PreEffectBusSends; // 0x150(0x10)
	None CompressionQuality; // 0x160(0x04)
	None StreamingPriority; // 0x164(0x04)
	None SampleRateQuality; // 0x168(0x01)
	None SoundGroup; // 0x16a(0x01)
	None bLooping; // 0x16b(0x01)
	None bStreaming; // 0x16b(0x01)
	None bSeekableStreaming; // 0x16b(0x01)
	None LoadingBehavior; // 0x16c(0x01)
	None bMature; // 0x16d(0x01)
	None bManualWordWrap; // 0x16d(0x01)
	None bSingleLine; // 0x16d(0x01)
	None bIsAmbisonics; // 0x16e(0x01)
	None FrequenciesToAnalyze; // 0x170(0x10)
	None CookedSpectralTimeData; // 0x180(0x10)
	None CookedEnvelopeTimeData; // 0x190(0x10)
	None InitialChunkSize; // 0x1a0(0x04)
	None SpokenText; // 0x1e8(0x10)
	None SubtitlePriority; // 0x1f8(0x04)
	None Volume; // 0x1fc(0x04)
	None Pitch; // 0x200(0x04)
	None NumChannels; // 0x204(0x04)
	None SampleRate; // 0x208(0x04)
	None Subtitles; // 0x218(0x10)
	None Curves; // 0x228(0x08)
	None InternalCurves; // 0x230(0x08)
	None SkeletonGeneratedClass; // 0x28(0x08)
	None GeneratedClass; // 0x30(0x08)
	None bLegacyNeedToPurgeSkelRefs; // 0x38(0x01)
	None BlueprintGuid; // 0x3c(0x10)
	None ParentClass; // 0x50(0x08)
	None BlueprintType; // 0x58(0x01)
	None bRecompileOnLoad; // 0x59(0x01)
	None bHasBeenRegenerated; // 0x59(0x01)
	None bIsRegeneratingOnLoad; // 0x59(0x01)
	None BlueprintSystemVersion; // 0x5c(0x04)
	None SimpleConstructionScript; // 0x60(0x08)
	None ComponentTemplates; // 0x68(0x10)
	None Timelines; // 0x78(0x10)
	None ComponentClassOverrides; // 0x88(0x10)
	None InheritableComponentHandler; // 0x98(0x08)
	None SelfChannel; // 0x30(0x08)
	None Connection; // 0x38(0x08)
	None SelfActorChannel; // 0xa0(0x08)
	None Actor; // 0xa8(0x08)
	None CreateSubObjects; // 0x198(0x10)
	None Skeleton; // 0x38(0x08)
	None MetaData; // 0x60(0x10)
	None AssetUserData; // 0x70(0x10)
	None bRotationBlendInMeshSpace; // 0x88(0x01)
	None AnimLength; // 0x8c(0x04)
	None InterpolationParam; // 0x90(0x18)
	None TargetWeightInterpolationSpeedPerSec; // 0xa8(0x04)
	None NotifyTriggerMode; // 0xac(0x01)
	None PerBoneBlend; // 0xb0(0x10)
	None SampleIndexWithMarkers; // 0xc0(0x04)
	None SampleData; // 0xc8(0x10)
	None GridSamples; // 0xd8(0x10)
	None BlendParameters; // 0xe8(0x60)
	None AxisToScaleAnimation; // 0x148(0x01)
	None bScaleAnimation; // 0x148(0x01)
	None AISystemClassName; // 0x28(0x18)
	None AISystemModuleName; // 0x40(0x08)
	None bInstantiateAISystemOnClient; // 0x50(0x01)
	None AudioComponent; // 0x310(0x08)
	None CompressCommandletVersion; // 0x38(0x04)
	None KeyEndEffectorsMatchNameArray; // 0x40(0x10)
	None ForceRecompression; // 0x50(0x01)
	None bOnlyCheckForMissingSkeletalMeshes; // 0x51(0x01)
	None bForceBelowThreshold; // 0x52(0x01)
	None bFirstRecompressUsingCurrentOrDefault; // 0x53(0x01)
	None bRaiseMaxErrorToExisting; // 0x54(0x01)
	None bEnablePerformanceLog; // 0x55(0x01)
	None bStripAnimationDataOnDedicatedServer; // 0x56(0x01)
	None bTickAnimationOnSkeletalMeshInit; // 0x57(0x01)
	None TargetSkeleton; // 0xa8(0x08)
	None Groups; // 0xb0(0x10)
	None bUseMultiThreadedAnimationUpdate; // 0xc0(0x01)
	None bWarnAboutBlueprintUsage; // 0xc1(0x01)
	None BakedStateMachines; // 0x3d0(0x10)
	None TargetSkeleton; // 0x3e0(0x08)
	None AnimNotifies; // 0x3e8(0x10)
	None OrderedSavedPoseIndicesMap; // 0x3f8(0x50)
	None SyncGroupNames; // 0x4c8(0x10)
	None EvaluateGraphExposedInputs; // 0x4d8(0x10)
	None GraphAssetPlayerInformation; // 0x4e8(0x50)
	None GraphBlendOptions; // 0x538(0x50)
	None Description; // 0x28(0x10)
	None Codecs; // 0x28(0x10)
	None BakedStateMachines; // 0x30(0x10)
	None TargetSkeleton; // 0x40(0x08)
	None AnimNotifies; // 0x48(0x10)
	None OrderedSavedPoseIndicesMap; // 0x58(0x50)
	None AnimBlueprintFunctions; // 0xa8(0x10)
	None AnimBlueprintFunctionData; // 0xb8(0x10)
	None AnimNodeProperties; // 0xc8(0x10)
	None LinkedAnimGraphNodeProperties; // 0xe8(0x10)
	None LinkedAnimLayerNodeProperties; // 0x108(0x10)
	None PreUpdateNodeProperties; // 0x128(0x10)
	None DynamicResetNodeProperties; // 0x148(0x10)
	None StateMachineNodeProperties; // 0x168(0x10)
	None InitializationNodeProperties; // 0x188(0x10)
	None GraphNameAssetPlayers; // 0x1a8(0x50)
	None SyncGroupNames; // 0x1f8(0x10)
	None EvaluateGraphExposedInputs; // 0x208(0x10)
	None GraphBlendOptions; // 0x218(0x50)
	None Notifies; // 0x80(0x10)
	None SequenceLength; // 0x90(0x04)
	None RateScale; // 0x94(0x04)
	None RawCurveData; // 0x98(0x10)
	None AnimationTrack; // 0xa8(0x10)
	None bNeedsSkeleton; // 0x38(0x01)
	None TranslationCompressionFormat; // 0x3c(0x01)
	None RotationCompressionFormat; // 0x3d(0x01)
	None ScaleCompressionFormat; // 0x3e(0x01)
	None MaxPosDiff; // 0x40(0x04)
	None MaxAngleDiff; // 0x44(0x04)
	None MaxScaleDiff; // 0x48(0x04)
	None MaxEffectorDiff; // 0x4c(0x04)
	None MinEffectorDiff; // 0x50(0x04)
	None EffectorDiffSocket; // 0x54(0x04)
	None ParentKeyScale; // 0x58(0x04)
	None bRetarget; // 0x5c(0x01)
	None bActuallyFilterLinearKeys; // 0x5c(0x01)
	None MaxZeroingThreshold; // 0x60(0x04)
	None MaxPosDiffBitwise; // 0x64(0x04)
	None MaxAngleDiffBitwise; // 0x68(0x04)
	None MaxScaleDiffBitwise; // 0x6c(0x04)
	None AllowedRotationFormats; // 0x70(0x10)
	None AllowedTranslationFormats; // 0x80(0x10)
	None AllowedScaleFormats; // 0x90(0x10)
	None bResampleAnimation; // 0xa0(0x01)
	None ResampledFramerate; // 0xa4(0x04)
	None MinKeysForResampling; // 0xa8(0x04)
	None bUseAdaptiveError; // 0xac(0x01)
	None bUseOverrideForEndEffectors; // 0xac(0x01)
	None TrackHeightBias; // 0xb0(0x04)
	None ParentingDivisor; // 0xb4(0x04)
	None ParentingDivisorExponent; // 0xb8(0x04)
	None bUseAdaptiveError2; // 0xbc(0x01)
	None RotationErrorSourceRatio; // 0xc0(0x04)
	None TranslationErrorSourceRatio; // 0xc4(0x04)
	None ScaleErrorSourceRatio; // 0xc8(0x04)
	None MaxErrorPerTrackRatio; // 0xcc(0x04)
	None PerturbationProbeSize; // 0xd0(0x04)
	None MinKeys; // 0x40(0x04)
	None bStartAtSecondKey; // 0x44(0x01)
	None MaxPosDiff; // 0x40(0x04)
	None MaxAngleDiff; // 0x44(0x04)
	None MaxScaleDiff; // 0x48(0x04)
	None Codec; // 0x28(0x08)
	None BlendIn; // 0xa8(0x30)
	None BlendInTime; // 0xd8(0x04)
	None BlendOut; // 0xe0(0x30)
	None BlendOutTime; // 0x110(0x04)
	None BlendOutTriggerTime; // 0x114(0x04)
	None SyncGroup; // 0x118(0x08)
	None SyncSlotIndex; // 0x120(0x04)
	None MarkerData; // 0x128(0x20)
	None CompositeSections; // 0x148(0x10)
	None SlotAnimTracks; // 0x158(0x10)
	None BranchingPoints; // 0x168(0x10)
	None bEnableRootMotionTranslation; // 0x178(0x01)
	None bEnableRootMotionRotation; // 0x179(0x01)
	None bEnableAutoBlendOut; // 0x17a(0x01)
	None RootMotionRootLock; // 0x17b(0x01)
	None BranchingPointMarkers; // 0x180(0x10)
	None BranchingPointStateNotifyIndices; // 0x190(0x10)
	None TimeStretchCurve; // 0x1a0(0x28)
	None TimeStretchCurveName; // 0x1c8(0x08)
	None PSTemplate; // 0x38(0x08)
	None LocationOffset; // 0x40(0x0c)
	None RotationOffset; // 0x4c(0x0c)
	None Scale; // 0x58(0x0c)
	None Attached; // 0x80(0x01)
	None SocketName; // 0x84(0x08)
	None Sound; // 0x38(0x08)
	None VolumeMultiplier; // 0x40(0x04)
	None PitchMultiplier; // 0x44(0x04)
	None bFollow; // 0x48(0x01)
	None AttachName; // 0x4c(0x08)
	None PSTemplate; // 0x30(0x08)
	None SocketName; // 0x38(0x08)
	None LocationOffset; // 0x40(0x0c)
	None RotationOffset; // 0x4c(0x0c)
	None bDestroyAtEnd; // 0x58(0x01)
	None PSTemplate; // 0x30(0x08)
	None FirstSocketName; // 0x38(0x08)
	None SecondSocketName; // 0x40(0x08)
	None WidthScaleMode; // 0x48(0x01)
	None WidthScaleCurve; // 0x4c(0x08)
	None bRecycleSpawnedSystems; // 0x54(0x01)
	None NumFrames; // 0xa8(0x04)
	None TrackToSkeletonMapTable; // 0xb0(0x10)
	None BoneCompressionSettings; // 0xd0(0x08)
	None CurveCompressionSettings; // 0xd8(0x08)
	None AdditiveAnimType; // 0x150(0x01)
	None RefPoseType; // 0x151(0x01)
	None RefPoseSeq; // 0x158(0x08)
	None RefFrameIndex; // 0x160(0x04)
	None RetargetSource; // 0x164(0x08)
	None Interpolation; // 0x16c(0x01)
	None bEnableRootMotion; // 0x16d(0x01)
	None RootMotionRootLock; // 0x16e(0x01)
	None bForceRootLock; // 0x16f(0x01)
	None bUseNormalizedRootMotionScale; // 0x170(0x01)
	None bRootMotionSettingsCopiedFromMontage; // 0x171(0x01)
	None AuthoredSyncMarkers; // 0x178(0x10)
	None bAnimRotationOnly; // 0x28(0x01)
	None TrackBoneNames; // 0x30(0x10)
	None LinkupCache; // 0x40(0x10)
	None BoneUseAnimTranslation; // 0x50(0x10)
	None ForceUseMeshTranslation; // 0x60(0x10)
	None UseTranslationBoneNames; // 0x70(0x10)
	None ForceMeshTranslationBoneNames; // 0x80(0x10)
	None PreviewSkelMeshName; // 0x90(0x08)
	None BestRatioSkelMeshName; // 0x98(0x08)
	None CurrentAsset; // 0x268(0x08)
	None PostEvaluateAnimEvent; // 0x270(0x10)
	None NumFrames; // 0xa8(0x04)
	None Interpolation; // 0xac(0x01)
	None RetargetSource; // 0xb0(0x08)
	None BoneCompressionSettings; // 0xc8(0x08)
	None CurveCompressionSettings; // 0xd0(0x08)
	None bEnableRootMotion; // 0xd8(0x01)
	None RootMotionRootLock; // 0xd9(0x01)
	None bForceRootLock; // 0xda(0x01)
	None bUseNormalizedRootMotionScale; // 0xdb(0x01)
	None Object; // 0x28(0x08)
	None Exporter; // 0x30(0x08)
	None Filename; // 0x38(0x10)
	None bSelected; // 0x48(0x01)
	None bReplaceIdentical; // 0x49(0x01)
	None bPrompt; // 0x4a(0x01)
	None bAutomated; // 0x4b(0x01)
	None bUseFileArchive; // 0x4c(0x01)
	None bWriteEmptyFiles; // 0x4d(0x01)
	None IgnoreObjectList; // 0x50(0x10)
	None options; // 0x60(0x08)
	None Errors; // 0x68(0x10)
	None PrimaryAssetTypesToScan; // 0x38(0x10)
	None DirectoriesToExclude; // 0x48(0x10)
	None PrimaryAssetRules; // 0x58(0x10)
	None CustomPrimaryAssetRules; // 0x68(0x10)
	None bOnlyCookProductionAssets; // 0x78(0x01)
	None bShouldManagerDetermineTypeAndName; // 0x79(0x01)
	None bShouldGuessTypeAndNameInEditor; // 0x7a(0x01)
	None bShouldAcquireMissingChunksOnLoad; // 0x7b(0x01)
	None PrimaryAssetIdRedirects; // 0x80(0x10)
	None PrimaryAssetTypeRedirects; // 0x90(0x10)
	None AssetPathRedirects; // 0xa0(0x10)
	None MetaDataTagsForAssetRegistry; // 0xb0(0x50)
	None bUsePathExcludedFromScan; // 0x100(0x01)
	None bRemoveRedundantDirectroyChunks; // 0x101(0x01)
	None MappedAssets; // 0x28(0x10)
	None Completed; // 0x30(0x10)
	None SaveGameObject; // 0x60(0x08)
	None Completed; // 0x78(0x10)
	None Completed; // 0x78(0x10)
	None Completed; // 0x78(0x10)
	None Completed; // 0x78(0x10)
	None Completed; // 0x78(0x10)
	None AtmosphericFogComponent; // 0x310(0x08)
	None SunMultiplier; // 0x238(0x04)
	None FogMultiplier; // 0x23c(0x04)
	None DensityMultiplier; // 0x240(0x04)
	None DensityOffset; // 0x244(0x04)
	None DistanceScale; // 0x248(0x04)
	None AltitudeScale; // 0x24c(0x04)
	None DistanceOffset; // 0x250(0x04)
	None GroundOffset; // 0x254(0x04)
	None StartDistance; // 0x258(0x04)
	None SunDiscScale; // 0x25c(0x04)
	None DefaultBrightness; // 0x260(0x04)
	None DefaultLightColor; // 0x264(0x04)
	None bDisableSunDisk; // 0x268(0x01)
	None bAtmosphereAffectsSunIlluminance; // 0x268(0x01)
	None bDisableGroundScattering; // 0x268(0x01)
	None PrecomputeParams; // 0x26c(0x2c)
	None TransmittanceTexture; // 0x298(0x08)
	None IrradianceTexture; // 0x2a0(0x08)
	None DefaultSoundClassName; // 0x38(0x18)
	None DefaultMediaSoundClassName; // 0x50(0x18)
	None DefaultSoundConcurrencyName; // 0x68(0x18)
	None DefaultBaseSoundMix; // 0x80(0x18)
	None VoiPSoundClass; // 0x98(0x18)
	None MasterSubmix; // 0xb0(0x18)
	None ReverbSubmix; // 0xc8(0x18)
	None EQSubmix; // 0xe0(0x18)
	None VoiPSampleRate; // 0xf8(0x04)
	None DefaultReverbSendLevel; // 0xfc(0x04)
	None MaximumConcurrentStreams; // 0x100(0x04)
	None GlobalMinPitchScale; // 0x104(0x04)
	None GlobalMaxPitchScale; // 0x108(0x04)
	None QualityLevels; // 0x110(0x10)
	None bAllowPlayWhenSilent; // 0x120(0x01)
	None bDisableMasterEQ; // 0x120(0x01)
	None bAllowCenterChannel3DPanning; // 0x120(0x01)
	None NumStoppingSources; // 0x124(0x04)
	None PanningMethod; // 0x128(0x01)
	None MonoChannelUpmixMethod; // 0x129(0x01)
	None DialogueFilenameFormat; // 0x130(0x10)
	None Priority; // 0x348(0x04)
	None bEnabled; // 0x34c(0x01)
	None Settings; // 0x350(0x20)
	None AmbientZoneSettings; // 0x370(0x24)
	None ActorsToPoll; // 0x38(0x10)
	None EngineTestModules; // 0x28(0x10)
	None EditorTestModules; // 0x38(0x10)
	None AutomationTestmap; // 0x48(0x18)
	None EditorPerformanceTestMaps; // 0x60(0x10)
	None AssetsToOpen; // 0x70(0x10)
	None BuildPromotionTest; // 0x80(0x1f0)
	None MaterialEditorPromotionTest; // 0x270(0x30)
	None ParticleEditorPromotionTest; // 0x2a0(0x10)
	None BlueprintEditorPromotionTest; // 0x2b0(0x30)
	None TestLevelFolders; // 0x2e0(0x10)
	None ExternalTools; // 0x2f0(0x10)
	None ImportExportTestDefinitions; // 0x300(0x10)
	None LaunchOnSettings; // 0x310(0x10)
	None DefaultScreenshotResolution; // 0x320(0x08)
	None DefaultTimeToLive; // 0x30(0x04)
	None LockTimeAfterAvoid; // 0x34(0x04)
	None LockTimeAfterClean; // 0x38(0x04)
	None DeltaTimeToPredict; // 0x3c(0x04)
	None ArtificialRadiusExpansion; // 0x40(0x04)
	None TestHeightDifference; // 0x44(0x04)
	None HeightCheckMargin; // 0x48(0x04)
	None BandwidthGenerator; // 0x310(0x20)
	None Sprite; // 0x4b8(0x08)
	None bIsScreenSizeScaled; // 0x4c0(0x01)
	None ScreenSize; // 0x4c4(0x04)
	None U; // 0x4c8(0x04)
	None UL; // 0x4cc(0x04)
	None V; // 0x4d0(0x04)
	None VL; // 0x4d4(0x04)
	None BoneTree; // 0x38(0x10)
	None RefLocalPoses; // 0x48(0x10)
	None VirtualBoneGuid; // 0x170(0x10)
	None VirtualBones; // 0x180(0x10)
	None Sockets; // 0x190(0x10)
	None SmartNames; // 0x1f0(0x50)
	None BlendProfiles; // 0x270(0x10)
	None SlotGroups; // 0x280(0x10)
	None AssetUserData; // 0x358(0x10)
	None OwningSkeleton; // 0x30(0x08)
	None ProfileEntries; // 0x38(0x10)
	None ApplicationWillDeactivateDelegate; // 0x218(0x10)
	None ApplicationHasReactivatedDelegate; // 0x228(0x10)
	None ApplicationWillEnterBackgroundDelegate; // 0x238(0x10)
	None ApplicationHasEnteredForegroundDelegate; // 0x248(0x10)
	None ApplicationWillTerminateDelegate; // 0x258(0x10)
	None ApplicationShouldUnloadResourcesDelegate; // 0x268(0x10)
	None ApplicationReceivedStartupArgumentsDelegate; // 0x278(0x10)
	None ApplicationRegisteredForRemoteNotificationsDelegate; // 0x288(0x10)
	None ApplicationRegisteredForUserNotificationsDelegate; // 0x298(0x10)
	None ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x2a8(0x10)
	None ApplicationReceivedRemoteNotificationDelegate; // 0x2b8(0x10)
	None ApplicationReceivedLocalNotificationDelegate; // 0x2c8(0x10)
	None ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x2d8(0x10)
	None AggGeom; // 0x28(0x58)
	None BoneName; // 0x80(0x08)
	None PhysicsType; // 0x88(0x01)
	None bAlwaysFullAnimWeight; // 0x89(0x01)
	None bConsiderForBounds; // 0x89(0x01)
	None bMeshCollideAll; // 0x89(0x01)
	None bDoubleSidedGeometry; // 0x89(0x01)
	None bGenerateNonMirroredCollision; // 0x89(0x01)
	None bSharedCookedData; // 0x89(0x01)
	None bGenerateMirroredCollision; // 0x89(0x01)
	None bSupportUVsAndFaceRemap; // 0x89(0x01)
	None CollisionReponse; // 0x8b(0x01)
	None CollisionTraceFlag; // 0x8c(0x01)
	None PhysMaterial; // 0x90(0x08)
	None WalkableSlopeOverride; // 0x98(0x10)
	None DefaultInstance; // 0x120(0x190)
	None BuildScale3D; // 0x2b8(0x0c)
	None BlendPoses; // 0x28(0x10)
	None Location; // 0x28(0x0c)
	None Rotation; // 0x34(0x0c)
	None HiddenLevels; // 0x40(0x10)
	None Zoom2D; // 0x28(0x04)
	None Location; // 0x2c(0x08)
	None CaptureComponent; // 0x310(0x08)
	None VisualizationMesh; // 0x238(0x08)
	None CaptureOffsetComponent; // 0x240(0x08)
	None ReflectionSourceType; // 0x248(0x01)
	None Cubemap; // 0x250(0x08)
	None SourceCubemapAngle; // 0x258(0x04)
	None Brightness; // 0x25c(0x04)
	None DiffuseRadiance; // 0x260(0x04)
	None CaptureOffset; // 0x264(0x0c)
	None MapBuildDataId; // 0x270(0x10)
	None BoxTransitionDistance; // 0x2c0(0x04)
	None PreviewInfluenceBox; // 0x2c8(0x08)
	None PreviewCaptureBox; // 0x2d0(0x08)
	None bEnabled; // 0x28(0x01)
	None Node; // 0x30(0x08)
	None bStepOnce; // 0x38(0x01)
	None bStepOnce_WasPreviouslyDisabled; // 0x38(0x01)
	None bStepOnce_RemoveAfterHit; // 0x38(0x01)
	None BitmapFilename; // 0x28(0x10)
	None Tooltip; // 0x38(0x10)
	None NotifyBadParams; // 0x48(0x01)
	None Vertices; // 0x50(0x10)
	None Polys; // 0x60(0x10)
	None Layer; // 0x70(0x08)
	None MergeCoplanars; // 0x78(0x01)
	None Brush; // 0x4b8(0x08)
	None BrushBodySetup; // 0x4c0(0x08)
	None ButtonStyle; // 0x28(0x278)
	None CameraInterpGroup; // 0x28(0x08)
	None AnimLength; // 0x30(0x04)
	None BoundingBox; // 0x34(0x1c)
	None bRelativeToInitialTransform; // 0x50(0x01)
	None bRelativeToInitialFOV; // 0x50(0x01)
	None BaseFOV; // 0x54(0x04)
	None BasePostProcessSettings; // 0x60(0x5c0)
	None BasePostProcessBlendWeight; // 0x620(0x04)
	None CamAnim; // 0x28(0x08)
	None InterpGroupInst; // 0x30(0x08)
	None PlayRate; // 0x50(0x04)
	None MoveTrack; // 0x68(0x08)
	None MoveInst; // 0x70(0x08)
	None PlaySpace; // 0x78(0x01)
	None ActiveShakes; // 0x48(0x10)
	None ExpiredPooledShakesMap; // 0x58(0x50)
	None SplitScreenShakeScale; // 0xa8(0x04)
	None bSingleInstance; // 0x28(0x01)
	None OscillationDuration; // 0x2c(0x04)
	None OscillationBlendInTime; // 0x30(0x04)
	None OscillationBlendOutTime; // 0x34(0x04)
	None RotOscillation; // 0x38(0x24)
	None LocOscillation; // 0x5c(0x24)
	None FOVOscillation; // 0x80(0x0c)
	None AnimPlayRate; // 0x8c(0x04)
	None AnimScale; // 0x90(0x04)
	None AnimBlendInTime; // 0x94(0x04)
	None AnimBlendOutTime; // 0x98(0x04)
	None RandomAnimSegmentDuration; // 0x9c(0x04)
	None Anim; // 0xa0(0x08)
	None bRandomAnimSegment; // 0xa8(0x01)
	None CameraOwner; // 0xc0(0x08)
	None ShakeScale; // 0x148(0x04)
	None OscillatorTimeRemaining; // 0x14c(0x04)
	None AnimInst; // 0x150(0x08)
	None CameraShakeSourceComponent; // 0x310(0x08)
	None Attenuation; // 0x238(0x01)
	None InnerAttenuationRadius; // 0x23c(0x04)
	None OuterAttenuationRadius; // 0x240(0x04)
	None CameraShake; // 0x248(0x08)
	None bAutoPlay; // 0x250(0x01)
	None OrgX; // 0x28(0x04)
	None OrgY; // 0x2c(0x04)
	None ClipX; // 0x30(0x04)
	None ClipY; // 0x34(0x04)
	None DrawColor; // 0x38(0x04)
	None bCenterX; // 0x3c(0x01)
	None bCenterY; // 0x3c(0x01)
	None bNoSmooth; // 0x3c(0x01)
	None SizeX; // 0x40(0x04)
	None SizeY; // 0x44(0x04)
	None ColorModulate; // 0x50(0x10)
	None DefaultTexture; // 0x60(0x08)
	None GradientTexture0; // 0x68(0x08)
	None ReporterGraph; // 0x70(0x08)
	None TargetGamma; // 0xb8(0x04)
	None SizeX; // 0xc0(0x04)
	None SizeY; // 0xc4(0x04)
	None ClearColor; // 0xc8(0x10)
	None AddressX; // 0xd8(0x01)
	None AddressY; // 0xd9(0x01)
	None bForceLinearGamma; // 0xda(0x01)
	None bHDR; // 0xda(0x01)
	None bGPUSharedFlag; // 0xda(0x01)
	None RenderTargetFormat; // 0xdb(0x01)
	None bAutoGenerateMips; // 0xdc(0x01)
	None MipsSamplerFilter; // 0xdd(0x01)
	None MipsAddressU; // 0xde(0x01)
	None MipsAddressV; // 0xdf(0x01)
	None OverrideFormat; // 0xe0(0x01)
	None OnCanvasRenderTargetUpdate; // 0xe8(0x10)
	None World; // 0xf8(0x08)
	None bShouldClearRenderTargetOnReceiveUpdate; // 0x100(0x01)
	None Friction; // 0x28(0x04)
	None StaticFriction; // 0x2c(0x04)
	None Restitution; // 0x30(0x04)
	None LinearEtherDrag; // 0x34(0x04)
	None AngularEtherDrag; // 0x38(0x04)
	None SleepingLinearVelocityThreshold; // 0x3c(0x04)
	None SleepingAngularVelocityThreshold; // 0x40(0x04)
	None CheckBoxStyle; // 0x28(0x580)
	None ChildActorClass; // 0x238(0x08)
	None ChildActor; // 0x240(0x08)
	None ChildActorTemplate; // 0x248(0x08)
	None Parent; // 0x1aa0(0x08)
	None AllDelegates; // 0x28(0x10)
	None LocalCloudFiles; // 0x38(0x10)
	None bSuppressDelegateCalls; // 0x48(0x01)
	None Profiles; // 0x38(0x10)
	None DefaultChannelResponses; // 0x48(0x10)
	None EditProfiles; // 0x58(0x10)
	None ProfileRedirects; // 0x68(0x10)
	None CollisionChannelRedirects; // 0x78(0x10)
	None ComponentDelegateBindings; // 0x28(0x10)
	None ParentTables; // 0xa0(0x10)
	None OldParentTables; // 0xb0(0x10)
	None RowStruct; // 0x28(0x08)
	None bStripFromClientBuilds; // 0x80(0x01)
	None bIgnoreExtraFields; // 0x80(0x01)
	None bIgnoreMissingFields; // 0x80(0x01)
	None ImportKeyField; // 0x88(0x10)
	None ParentTables; // 0xc8(0x10)
	None OldParentTables; // 0xd8(0x10)
	None ConsoleTargetPlayer; // 0x38(0x08)
	None DefaultTexture_Black; // 0x40(0x08)
	None DefaultTexture_White; // 0x48(0x08)
	None HistoryBuffer; // 0x68(0x10)
	None AsyncLoadingThreadEnabled; // 0x38(0x01)
	None AsyncPostLoadEnabled; // 0x38(0x01)
	None WarnIfTimeLimitExceeded; // 0x38(0x01)
	None TimeLimitExceededMultiplier; // 0x3c(0x04)
	None TimeLimitExceededMinTime; // 0x40(0x04)
	None MinBulkDataSizeForAsyncLoading; // 0x44(0x04)
	None UseBackgroundLevelStreaming; // 0x48(0x01)
	None AsyncLoadingUseFullTimeLimit; // 0x48(0x01)
	None AsyncLoadingTimeLimit; // 0x4c(0x04)
	None PriorityAsyncLoadingExtraTime; // 0x50(0x04)
	None LevelStreamingActorsUpdateTimeLimit; // 0x54(0x04)
	None PriorityLevelStreamingActorsUpdateExtraTime; // 0x58(0x04)
	None LevelStreamingComponentsRegistrationGranularity; // 0x5c(0x04)
	None LevelStreamingUnregisterComponentsTimeLimit; // 0x60(0x04)
	None LevelStreamingComponentsUnregistrationGranularity; // 0x64(0x04)
	None FlushStreamingOnExit; // 0x68(0x01)
	None EventDrivenLoaderEnabled; // 0x68(0x01)
	None TimeBetweenPurgingPendingKillObjects; // 0x38(0x04)
	None FlushStreamingOnGC; // 0x3c(0x01)
	None AllowParallelGC; // 0x3c(0x01)
	None IncrementalBeginDestroyEnabled; // 0x3c(0x01)
	None MultithreadedDestructionEnabled; // 0x3c(0x01)
	None CreateGCClusters; // 0x3c(0x01)
	None AssetClusteringEnabled; // 0x3c(0x01)
	None ActorClusteringEnabled; // 0x3c(0x01)
	None BlueprintClusteringEnabled; // 0x3c(0x01)
	None UseDisregardForGCOnDedicatedServers; // 0x3d(0x01)
	None MinGCClusterSize; // 0x40(0x04)
	None NumRetriesBeforeForcingGC; // 0x44(0x04)
	None MaxObjectsNotConsideredByGC; // 0x48(0x04)
	None SizeOfPermanentObjectPool; // 0x4c(0x04)
	None MaxObjectsInGame; // 0x50(0x04)
	None MaxObjectsInEditor; // 0x54(0x04)
	None CullDistances; // 0x348(0x10)
	None bEnabled; // 0x358(0x01)
	None FloatCurve; // 0x30(0x80)
	None bIsEventCurve; // 0xb0(0x01)
	None FloatCurves; // 0x30(0x200)
	None AdjustHue; // 0x230(0x04)
	None AdjustSaturation; // 0x234(0x04)
	None AdjustBrightness; // 0x238(0x04)
	None AdjustBrightnessCurve; // 0x23c(0x04)
	None AdjustVibrance; // 0x240(0x04)
	None AdjustMinAlpha; // 0x244(0x04)
	None AdjustMaxAlpha; // 0x248(0x04)
	None LevelIndex; // 0xb8(0x04)
	None FirstResourceMemMip; // 0xbc(0x04)
	None bTemporarilyDisableStreaming; // 0xc0(0x01)
	None AddressX; // 0xc1(0x01)
	None AddressY; // 0xc2(0x01)
	None ImportedSize; // 0xc4(0x08)
	None TextureSize; // 0xe8(0x04)
	None GradientCurves; // 0xf0(0x10)
	None FloatCurves; // 0x30(0x180)
	None bShowSelectedInfo; // 0x6f0(0x01)
	None bIsFrozenRendering; // 0x6f0(0x01)
	None bOverrideInitialMaxSpeed; // 0x6f0(0x01)
	None OverrideInitialMaxSpeed; // 0x6f4(0x04)
	None bIsOrbitingSelectedActor; // 0x6f8(0x01)
	None bOrbitPivotUseCenter; // 0x6f8(0x01)
	None bEnableBufferVisualization; // 0x6f8(0x01)
	None bEnableBufferVisualizationFullMode; // 0x6f8(0x01)
	None bIsBufferVisualizationInputSetup; // 0x6f8(0x01)
	None bLastDisplayEnabled; // 0x6f8(0x01)
	None DrawFrustum; // 0x700(0x08)
	None SelectedActor; // 0x708(0x08)
	None SelectedComponent; // 0x710(0x08)
	None SelectedHitPoint; // 0x718(0x88)
	None OriginalControllerRef; // 0x7a0(0x08)
	None OriginalPlayer; // 0x7a8(0x08)
	None SpeedScale; // 0x7b0(0x04)
	None InitialMaxSpeed; // 0x7b4(0x04)
	None InitialAccel; // 0x7b8(0x04)
	None InitialDecel; // 0x7bc(0x04)
	None CycleViewModes; // 0x38(0x10)
	None Decal; // 0x310(0x08)
	None DecalMaterial; // 0x238(0x08)
	None SortOrder; // 0x240(0x04)
	None FadeScreenSize; // 0x244(0x04)
	None FadeStartDelay; // 0x248(0x04)
	None FadeDuration; // 0x24c(0x04)
	None FadeInDuration; // 0x250(0x04)
	None FadeInStartDelay; // 0x254(0x04)
	None bDestroyOwnerAfterFade; // 0x258(0x01)
	None DecalSize; // 0x25c(0x0c)
	None SelfDemoNetConnection; // 0x1be8(0x08)
	None NetDriver; // 0x30(0x08)
	None DemoNetDriver; // 0x38(0x08)
	None TextureLODGroups; // 0x28(0x10)
	None DeviceType; // 0x38(0x10)
	None BaseProfileName; // 0x48(0x10)
	None Parent; // 0x58(0x08)
	None CVars; // 0x78(0x10)
	None Profiles; // 0x28(0x10)
	None gender; // 0x28(0x01)
	None Plurality; // 0x29(0x01)
	None LocalizationGUID; // 0x2c(0x10)
	None bMature; // 0x28(0x01)
	None bOverride_SubtitleOverride; // 0x28(0x01)
	None SpokenText; // 0x30(0x10)
	None SubtitleOverride; // 0x40(0x10)
	None ContextMappings; // 0x50(0x10)
	None LocalizationGUID; // 0x60(0x10)
	None LightComponent; // 0x310(0x08)
	None bEnabled; // 0x318(0x01)
	None LightGuid; // 0x238(0x10)
	None Brightness; // 0x248(0x04)
	None Intensity; // 0x24c(0x04)
	None LightColor; // 0x250(0x04)
	None bAffectsWorld; // 0x254(0x01)
	None CastShadows; // 0x254(0x01)
	None CastStaticShadows; // 0x254(0x01)
	None CastDynamicShadows; // 0x254(0x01)
	None bAffectTranslucentLighting; // 0x254(0x01)
	None bTransmission; // 0x254(0x01)
	None bCastVolumetricShadow; // 0x254(0x01)
	None bCastDeepShadow; // 0x254(0x01)
	None bCastRaytracedShadow; // 0x255(0x01)
	None bAffectReflection; // 0x255(0x01)
	None bAffectGlobalIllumination; // 0x255(0x01)
	None IndirectLightingIntensity; // 0x258(0x04)
	None VolumetricScatteringIntensity; // 0x25c(0x04)
	None VolumetricAttenuationScale; // 0x260(0x04)
	None VolumetricSourceRadiusScale; // 0x264(0x04)
	None SamplesPerPixel; // 0x268(0x04)
	None Temperature; // 0x270(0x04)
	None MaxDrawDistance; // 0x274(0x04)
	None MaxDistanceFadeRange; // 0x278(0x04)
	None bUseTemperature; // 0x27c(0x01)
	None ShadowMapChannel; // 0x280(0x04)
	None MinRoughness; // 0x288(0x04)
	None SpecularScale; // 0x28c(0x04)
	None ShadowResolutionScale; // 0x290(0x04)
	None ShadowBias; // 0x294(0x04)
	None ShadowSlopeBias; // 0x298(0x04)
	None ShadowSharpen; // 0x29c(0x04)
	None ContactShadowLength; // 0x2a0(0x04)
	None ContactShadowLengthInWS; // 0x2a4(0x01)
	None ContactShadowStartDistance; // 0x2a8(0x04)
	None ContactShadowFadeDistance; // 0x2ac(0x04)
	None ShadowStrength; // 0x2b0(0x04)
	None TranslucentShadowDensity; // 0x2b4(0x04)
	None InverseSquaredFalloff; // 0x2b8(0x01)
	None CastTranslucentShadows; // 0x2b8(0x01)
	None bCastShadowsFromCinematicObjectsOnly; // 0x2b8(0x01)
	None bAffectDynamicIndirectLighting; // 0x2b8(0x01)
	None bForceCachedShadowsFromMovablePrimitivesAsStatic; // 0x2b8(0x01)
	None bForceCachedShadowsForMovablePrimitives; // 0x2b8(0x01)
	None LightingChannels; // 0x2bc(0x01)
	None LightFunctionMaterial; // 0x2c0(0x08)
	None LightFunctionScale; // 0x2c8(0x0c)
	None IESTexture; // 0x2d8(0x08)
	None bUseIESBrightness; // 0x2e0(0x01)
	None IESBrightnessScale; // 0x2e4(0x04)
	None LightFunctionFadeDistance; // 0x2e8(0x04)
	None DisabledBrightness; // 0x2ec(0x04)
	None bEnableLightShaftBloom; // 0x2f0(0x01)
	None BloomScale; // 0x2f4(0x04)
	None BloomThreshold; // 0x2f8(0x04)
	None BloomMaxBrightness; // 0x2fc(0x04)
	None BloomTint; // 0x300(0x04)
	None bUseFoliageLighting; // 0x304(0x01)
	None bUseRayTracedDistanceFieldShadows; // 0x305(0x01)
	None RayStartOffsetDepthScale; // 0x308(0x04)
	None ShadowCascadeBiasDistribution; // 0x380(0x04)
	None bEnableLightShaftOcclusion; // 0x384(0x01)
	None OcclusionMaskDarkness; // 0x388(0x04)
	None OcclusionDepthRange; // 0x38c(0x04)
	None LightShaftOverrideDirection; // 0x390(0x0c)
	None WholeSceneDynamicShadowRadius; // 0x39c(0x04)
	None DynamicShadowDistanceMovableLight; // 0x3a0(0x04)
	None DynamicShadowDistanceStationaryLight; // 0x3a4(0x04)
	None DynamicShadowCascades; // 0x3a8(0x04)
	None CascadeDistributionExponent; // 0x3ac(0x04)
	None CascadeTransitionFraction; // 0x3b0(0x04)
	None ShadowDistanceFadeoutFraction; // 0x3b4(0x04)
	None bUseInsetShadowsForMovableObjects; // 0x3b8(0x01)
	None FarShadowCascadeCount; // 0x3bc(0x04)
	None FarShadowDistance; // 0x3c0(0x04)
	None bUseFarShadowAsStaticWorldShadow; // 0x3c4(0x01)
	None DistanceFieldShadowDistance; // 0x3c8(0x04)
	None LightSourceAngle; // 0x3cc(0x04)
	None LightSourceSoftAngle; // 0x3d0(0x04)
	None TraceDistance; // 0x3d4(0x04)
	None LightmassSettings; // 0x3d8(0x10)
	None bCastModulatedShadows; // 0x3e8(0x01)
	None ModulatedShadowColor; // 0x3ec(0x04)
	None ShadowAmount; // 0x3f0(0x04)
	None bUsedAsAtmosphereSunLight; // 0x3f4(0x01)
	None AtmosphereSunLightIndex; // 0x3f8(0x04)
	None bCanBeBaked; // 0x30(0x01)
	None bBakedDataSuccesfully; // 0x30(0x01)
	None Constant; // 0x38(0x04)
	None ConstantCurve; // 0x38(0x18)
	None ParameterName; // 0x40(0x08)
	None MinInput; // 0x48(0x04)
	None MaxInput; // 0x4c(0x04)
	None MinOutput; // 0x50(0x04)
	None MaxOutput; // 0x54(0x04)
	None ParamMode; // 0x58(0x01)
	None Min; // 0x38(0x04)
	None MAX; // 0x3c(0x04)
	None ConstantCurve; // 0x38(0x18)
	None bCanBeBaked; // 0x30(0x01)
	None bIsDirty; // 0x30(0x01)
	None bBakedDataSuccesfully; // 0x30(0x01)
	None Constant; // 0x38(0x0c)
	None bLockAxes; // 0x44(0x01)
	None LockedAxes; // 0x48(0x01)
	None ConstantCurve; // 0x38(0x18)
	None bLockAxes; // 0x50(0x01)
	None LockedAxes; // 0x54(0x01)
	None ParameterName; // 0x50(0x08)
	None MinInput; // 0x58(0x0c)
	None MaxInput; // 0x64(0x0c)
	None MinOutput; // 0x70(0x0c)
	None MaxOutput; // 0x7c(0x0c)
	None ParamModes; // 0x88(0x03)
	None MAX; // 0x38(0x0c)
	None Min; // 0x44(0x0c)
	None bLockAxes; // 0x50(0x01)
	None LockedAxes; // 0x54(0x01)
	None MirrorFlags; // 0x55(0x03)
	None bUseExtremes; // 0x58(0x01)
	None ConstantCurve; // 0x38(0x18)
	None bLockAxes1; // 0x50(0x01)
	None bLockAxes2; // 0x50(0x01)
	None LockedAxes; // 0x54(0x02)
	None MirrorFlags; // 0x56(0x03)
	None bUseExtremes; // 0x5c(0x01)
	None FrustumColor; // 0x4b8(0x04)
	None FrustumAngle; // 0x4bc(0x04)
	None FrustumAspectRatio; // 0x4c0(0x04)
	None FrustumStartDist; // 0x4c4(0x04)
	None FrustumEndDist; // 0x4c8(0x04)
	None Texture; // 0x4d0(0x08)
	None SphereRadius; // 0x4d0(0x04)
	None Schema; // 0x28(0x08)
	None Nodes; // 0x30(0x10)
	None bEditable; // 0x40(0x01)
	None bAllowDeletion; // 0x40(0x01)
	None bAllowRenaming; // 0x40(0x01)
	None Blueprint; // 0x28(0x08)
	None Graph; // 0x30(0x08)
	None Node; // 0x38(0x08)
	None bIsDebugging; // 0x48(0x01)
	None DeprecatedPins; // 0x38(0x10)
	None NodePosX; // 0x48(0x04)
	None NodePosY; // 0x4c(0x04)
	None NodeWidth; // 0x50(0x04)
	None NodeHeight; // 0x54(0x04)
	None AdvancedPinDisplay; // 0x58(0x01)
	None EnabledState; // 0x59(0x01)
	None bDisplayAsDisabled; // 0x5b(0x01)
	None bUserSetEnabledState; // 0x5b(0x01)
	None bIsNodeEnabled; // 0x5b(0x01)
	None bHasCompilerMessage; // 0x5b(0x01)
	None NodeComment; // 0x60(0x10)
	None ErrorType; // 0x70(0x04)
	None ErrorMsg; // 0x78(0x10)
	None NodeGuid; // 0x88(0x10)
	None Link; // 0x98(0x10)
	None Excerpt; // 0xa8(0x10)
	None PinName; // 0x28(0x10)
	None PinToolTip; // 0x38(0x10)
	None Direction; // 0x48(0x01)
	None PinType; // 0x50(0x58)
	None DefaultValue; // 0xa8(0x10)
	None AutogeneratedDefaultValue; // 0xb8(0x10)
	None DefaultObject; // 0xc8(0x08)
	None DefaultTextValue; // 0xd0(0x18)
	None LinkedTo; // 0xe8(0x10)
	None SubPins; // 0xf8(0x10)
	None ParentPin; // 0x108(0x08)
	None ReferencePassThroughConnection; // 0x110(0x08)
	None ParticleSystemComponent; // 0x310(0x08)
	None bDestroyOnSystemFinish; // 0x318(0x01)
	None bPostUpdateTickGroup; // 0x318(0x01)
	None bCurrentlyActive; // 0x318(0x01)
	None OnParticleSpawn; // 0x320(0x10)
	None OnParticleBurst; // 0x330(0x10)
	None OnParticleDeath; // 0x340(0x10)
	None OnParticleCollide; // 0x350(0x10)
	None PS_CameraEffect; // 0x360(0x08)
	None PS_CameraEffectNonExtremeContent; // 0x368(0x08)
	None BaseCamera; // 0x370(0x08)
	None RelativeTransform; // 0x380(0x30)
	None BaseFOV; // 0x3b0(0x04)
	None bAllowMultipleInstances; // 0x3b4(0x01)
	None bResetWhenRetriggered; // 0x3b4(0x01)
	None EmittersToTreatAsSame; // 0x3b8(0x10)
	None DistFromCamera; // 0x3c8(0x04)
	None FailedPlaceMessage; // 0x28(0x10)
	None MaxedOutMessage; // 0x38(0x10)
	None EnteredMessage; // 0x48(0x10)
	None LeftMessage; // 0x58(0x10)
	None GlobalNameChange; // 0x68(0x10)
	None SpecEnteredMessage; // 0x78(0x10)
	None NewPlayerMessage; // 0x88(0x10)
	None NewSpecMessage; // 0x98(0x10)
	None Component; // 0x310(0x08)
	None bEnabled; // 0x318(0x01)
	None FogDensity; // 0x238(0x04)
	None FogHeightFalloff; // 0x23c(0x04)
	None SecondFogData; // 0x240(0x0c)
	None FogInscatteringColor; // 0x24c(0x10)
	None InscatteringColorCubemap; // 0x260(0x08)
	None InscatteringColorCubemapAngle; // 0x268(0x04)
	None InscatteringTextureTint; // 0x26c(0x10)
	None FullyDirectionalInscatteringColorDistance; // 0x27c(0x04)
	None NonDirectionalInscatteringColorDistance; // 0x280(0x04)
	None DirectionalInscatteringExponent; // 0x284(0x04)
	None DirectionalInscatteringStartDistance; // 0x288(0x04)
	None DirectionalInscatteringColor; // 0x28c(0x10)
	None FogMaxOpacity; // 0x29c(0x04)
	None StartDistance; // 0x2a0(0x04)
	None FogCutoffDistance; // 0x2a4(0x04)
	None bEnableVolumetricFog; // 0x2a8(0x01)
	None VolumetricFogScatteringDistribution; // 0x2ac(0x04)
	None VolumetricFogAlbedo; // 0x2b0(0x04)
	None VolumetricFogEmissive; // 0x2b4(0x10)
	None VolumetricFogExtinctionScale; // 0x2c4(0x04)
	None VolumetricFogDistance; // 0x2c8(0x04)
	None VolumetricFogStaticLightingScatteringIntensity; // 0x2cc(0x04)
	None bOverrideLightColorsWithFogInscatteringColors; // 0x2d0(0x01)
	None MaxSpeed; // 0x138(0x04)
	None Acceleration; // 0x13c(0x04)
	None Deceleration; // 0x140(0x04)
	None TurningBoost; // 0x144(0x04)
	None bPositionCorrected; // 0x148(0x01)
	None FontCacheType; // 0x30(0x01)
	None Characters; // 0x38(0x10)
	None Textures; // 0x48(0x10)
	None IsRemapped; // 0x58(0x04)
	None EmScale; // 0x5c(0x04)
	None Ascent; // 0x60(0x04)
	None Descent; // 0x64(0x04)
	None Leading; // 0x68(0x04)
	None Kerning; // 0x6c(0x04)
	None ImportOptions; // 0x70(0xb0)
	None NumCharacters; // 0x120(0x04)
	None MaxCharHeight; // 0x128(0x10)
	None ScalingFactor; // 0x138(0x04)
	None LegacyFontSize; // 0x13c(0x04)
	None LegacyFontName; // 0x140(0x08)
	None CompositeFont; // 0x148(0x38)
	None SourceFilename; // 0x30(0x10)
	None Hinting; // 0x40(0x01)
	None LoadingPolicy; // 0x41(0x01)
	None LayoutMethod; // 0x42(0x01)
	None Data; // 0x28(0xb0)
	None Attenuation; // 0x28(0xb0)
	None ForceFeedbackEffect; // 0x238(0x08)
	None bAutoDestroy; // 0x240(0x01)
	None bStopWhenOwnerDestroyed; // 0x240(0x01)
	None bLooping; // 0x240(0x01)
	None bIgnoreTimeDilation; // 0x240(0x01)
	None bOverrideAttenuation; // 0x240(0x01)
	None IntensityMultiplier; // 0x244(0x04)
	None AttenuationSettings; // 0x248(0x08)
	None AttenuationOverrides; // 0x250(0xb0)
	None OnForceFeedbackFinished; // 0x300(0x10)
	None ChannelDetails; // 0x28(0x10)
	None Duration; // 0x38(0x04)
	None BadPacketLossThreshold; // 0x310(0x04)
	None SeverePacketLossThreshold; // 0x314(0x04)
	None BadPingThreshold; // 0x318(0x04)
	None SeverePingThreshold; // 0x31c(0x04)
	None AdjustedNetSpeed; // 0x320(0x04)
	None LastNetSpeedUpdateTime; // 0x324(0x04)
	None TotalNetBandwidth; // 0x328(0x04)
	None MinDynamicBandwidth; // 0x32c(0x04)
	None MaxDynamicBandwidth; // 0x330(0x04)
	None bIsStandbyCheckingEnabled; // 0x334(0x01)
	None bHasStandbyCheatTriggered; // 0x334(0x01)
	None StandbyRxCheatTime; // 0x338(0x04)
	None StandbyTxCheatTime; // 0x33c(0x04)
	None PercentMissingForRxStandby; // 0x340(0x04)
	None PercentMissingForTxStandby; // 0x344(0x04)
	None PercentForBadPing; // 0x348(0x04)
	None JoinInProgressStandbyWaitTime; // 0x34c(0x04)
	None MoveRepSize; // 0x350(0x04)
	None MAXPOSITIONERRORSQUARED; // 0x354(0x04)
	None MAXNEARZEROVELOCITYSQUARED; // 0x358(0x04)
	None CLIENTADJUSTUPDATECOST; // 0x35c(0x04)
	None MAXCLIENTUPDATEINTERVAL; // 0x360(0x04)
	None MaxClientForcedUpdateDuration; // 0x364(0x04)
	None ServerForcedUpdateHitchThreshold; // 0x368(0x04)
	None ServerForcedUpdateHitchCooldown; // 0x36c(0x04)
	None MaxMoveDeltaTime; // 0x370(0x04)
	None MaxClientSmoothingDeltaTime; // 0x374(0x04)
	None ClientNetSendMoveDeltaTime; // 0x378(0x04)
	None ClientNetSendMoveDeltaTimeThrottled; // 0x37c(0x04)
	None ClientNetSendMoveDeltaTimeStationary; // 0x380(0x04)
	None ClientNetSendMoveThrottleAtNetSpeed; // 0x384(0x04)
	None ClientNetSendMoveThrottleOverPlayerCount; // 0x388(0x04)
	None ClientAuthorativePosition; // 0x38c(0x01)
	None ClientErrorUpdateRateLimit; // 0x390(0x04)
	None ClientNetCamUpdateDeltaTime; // 0x394(0x04)
	None ClientNetCamUpdatePositionLimit; // 0x398(0x04)
	None bMovementTimeDiscrepancyDetection; // 0x39c(0x01)
	None bMovementTimeDiscrepancyResolution; // 0x39d(0x01)
	None MovementTimeDiscrepancyMaxTimeMargin; // 0x3a0(0x04)
	None MovementTimeDiscrepancyMinTimeMargin; // 0x3a4(0x04)
	None MovementTimeDiscrepancyResolutionRate; // 0x3a8(0x04)
	None MovementTimeDiscrepancyDriftAllowance; // 0x3ac(0x04)
	None bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x3b0(0x01)
	None bUseDistanceBasedRelevancy; // 0x3b1(0x01)
	None SpotLightComponent; // 0x320(0x08)
	None Amplitudes; // 0x28(0x10)
	None SampleRate; // 0x38(0x04)
	None HapticDetails; // 0x28(0x110)
	None SoundWave; // 0x28(0x08)
	None ProxyMeshes; // 0x28(0x10)
	None bShouldPauseWhileAdOpen; // 0x38(0x01)
	None ClickedBannerDelegates; // 0x40(0x10)
	None ClosedAdDelegates; // 0x50(0x10)
	None Records; // 0x28(0x10)
	None UnnecessaryComponents; // 0x38(0x10)
	None InputActionDelegateBindings; // 0x28(0x10)
	None InputAxisDelegateBindings; // 0x28(0x10)
	None InputAxisKeyDelegateBindings; // 0x28(0x10)
	None CachedKeyToActionInfo; // 0x120(0x10)
	None InputKeyDelegateBindings; // 0x28(0x10)
	None AxisConfig; // 0x28(0x10)
	None bAltEnterTogglesFullscreen; // 0x38(0x01)
	None bF11TogglesFullscreen; // 0x38(0x01)
	None bUseMouseForTouch; // 0x38(0x01)
	None bEnableMouseSmoothing; // 0x38(0x01)
	None bEnableFOVScaling; // 0x38(0x01)
	None bCaptureMouseOnLaunch; // 0x38(0x01)
	None bDefaultViewportMouseLock; // 0x38(0x01)
	None bAlwaysShowTouchInterface; // 0x38(0x01)
	None bShowConsoleOnFourFingerTap; // 0x39(0x01)
	None bEnableGestureRecognizer; // 0x39(0x01)
	None bUseAutocorrect; // 0x3a(0x01)
	None ExcludedAutocorrectOS; // 0x40(0x10)
	None ExcludedAutocorrectCultures; // 0x50(0x10)
	None ExcludedAutocorrectDeviceModels; // 0x60(0x10)
	None DefaultViewportMouseCaptureMode; // 0x70(0x01)
	None DefaultViewportMouseLockMode; // 0x71(0x01)
	None FOVScale; // 0x74(0x04)
	None DoubleClickTime; // 0x78(0x04)
	None ActionMappings; // 0x80(0x10)
	None AxisMappings; // 0x90(0x10)
	None SpeechMappings; // 0xa0(0x10)
	None DefaultTouchInterface; // 0xb0(0x18)
	None ConsoleKey; // 0xc8(0x18)
	None ConsoleKeys; // 0xe0(0x10)
	None InputTouchDelegateBindings; // 0x28(0x10)
	None StaticMeshComponents; // 0xb0(0x10)
	None StaticMeshComponent; // 0xd0(0x08)
	None InstancedCollisionComponentMap; // 0x310(0x50)
	None Tabs; // 0x28(0x10)
	None ActiveTab; // 0x38(0x04)
	None InterpLength; // 0x28(0x04)
	None PathBuildTime; // 0x2c(0x04)
	None InterpGroups; // 0x30(0x10)
	None CurveEdSetup; // 0x40(0x08)
	None EdSectionStart; // 0x48(0x04)
	None EdSectionEnd; // 0x4c(0x04)
	None bShouldBakeAndPrune; // 0x50(0x01)
	None CachedDirectorGroup; // 0x58(0x08)
	None AllEventNames; // 0x60(0x10)
	None Caption; // 0x28(0x10)
	None InterpTracks; // 0x30(0x10)
	None GroupName; // 0x40(0x08)
	None GroupColor; // 0x48(0x04)
	None bCollapsed; // 0x4c(0x01)
	None bVisible; // 0x4c(0x01)
	None bIsFolder; // 0x4c(0x01)
	None bIsParented; // 0x4c(0x01)
	None bIsSelected; // 0x4c(0x01)
	None CameraAnimInst; // 0x50(0x08)
	None CompressTolerance; // 0x58(0x04)
	None Group; // 0x28(0x08)
	None GroupActor; // 0x30(0x08)
	None TrackInst; // 0x38(0x10)
	None Duration; // 0xf0(0x04)
	None bPauseOnImpact; // 0xf4(0x01)
	None bSweep; // 0xf8(0x01)
	None TeleportType; // 0xf9(0x01)
	None BehaviourType; // 0xfa(0x01)
	None bCheckIfStillInWorld; // 0xfb(0x01)
	None bForceSubStepping; // 0xfc(0x01)
	None OnInterpToReverse; // 0x100(0x10)
	None OnInterpToStop; // 0x110(0x10)
	None OnWaitBeginDelegate; // 0x120(0x10)
	None OnWaitEndDelegate; // 0x130(0x10)
	None OnResetDelegate; // 0x140(0x10)
	None MaxSimulationTimeStep; // 0x150(0x04)
	None MaxSimulationIterations; // 0x154(0x04)
	None ControlPoints; // 0x158(0x10)
	None SlotName; // 0x90(0x08)
	None AnimSeqs; // 0x98(0x10)
	None bSkipAnimNotifiers; // 0xa8(0x01)
	None BoolTrack; // 0x70(0x10)
	None PropertyName; // 0x80(0x08)
	None PropertyName; // 0x90(0x08)
	None CutTrack; // 0x70(0x10)
	None bSimulateCameraCutsOnClients; // 0x80(0x01)
	None EventTrack; // 0x70(0x10)
	None bFireEventsWhenForwards; // 0x80(0x01)
	None bFireEventsWhenBackwards; // 0x80(0x01)
	None bFireEventsWhenJumpingForwards; // 0x80(0x01)
	None bUseCustomEventName; // 0x80(0x01)
	None bPersistFade; // 0x90(0x01)
	None bFadeAudio; // 0x90(0x01)
	None FadeColor; // 0x94(0x10)
	None AnimBlueprintClass; // 0x90(0x08)
	None AnimClass; // 0x98(0x08)
	None ParamName; // 0xa0(0x08)
	None TargetMaterials; // 0x90(0x10)
	None ParamName; // 0xa0(0x08)
	None ParamName; // 0x90(0x08)
	None PropertyName; // 0x90(0x08)
	None LastUpdatePosition; // 0x28(0x04)
	None InterpProperty; // 0x28(0x20)
	None PropertyOuterObjectInst; // 0x48(0x08)
	None ResetBool; // 0x60(0x01)
	None ResetColor; // 0x58(0x04)
	None OldViewTarget; // 0x28(0x08)
	None LastUpdatePosition; // 0x28(0x04)
	None AnimScriptInstance; // 0x28(0x08)
	None ResetFloat; // 0x30(0x04)
	None MaterialInstances; // 0x28(0x10)
	None ResetFloats; // 0x38(0x10)
	None PrimitiveMaterialRefs; // 0x48(0x10)
	None InstancedTrack; // 0x58(0x08)
	None ResetFloat; // 0x28(0x04)
	None ResetFloat; // 0x58(0x04)
	None ResetColor; // 0x58(0x10)
	None ResetLocation; // 0x28(0x0c)
	None ResetRotation; // 0x34(0x0c)
	None LastUpdatePosition; // 0x28(0x04)
	None OldTimeDilation; // 0x28(0x04)
	None LastUpdatePosition; // 0x28(0x04)
	None PlayAudioComp; // 0x30(0x08)
	None Action; // 0x28(0x01)
	None LastUpdatePosition; // 0x2c(0x04)
	None bSavedActiveState; // 0x30(0x01)
	None MaterialInstances; // 0x28(0x10)
	None ResetVectors; // 0x38(0x10)
	None PrimitiveMaterialRefs; // 0x48(0x10)
	None InstancedTrack; // 0x58(0x08)
	None ResetVector; // 0x58(0x0c)
	None Action; // 0x28(0x01)
	None LastUpdatePosition; // 0x2c(0x04)
	None LinearColorTrack; // 0x70(0x18)
	None CurveTension; // 0x88(0x04)
	None PropertyName; // 0x90(0x08)
	None PosTrack; // 0x70(0x18)
	None EulerTrack; // 0x88(0x18)
	None LookupTrack; // 0xa0(0x10)
	None LookAtGroupName; // 0xb0(0x08)
	None LinCurveTension; // 0xb8(0x04)
	None AngCurveTension; // 0xbc(0x04)
	None bUseQuatInterpolation; // 0xc0(0x01)
	None bShowArrowAtKeys; // 0xc0(0x01)
	None bDisableMovement; // 0xc0(0x01)
	None bShowTranslationOnCurveEd; // 0xc0(0x01)
	None bShowRotationOnCurveEd; // 0xc0(0x01)
	None bHide3DTrack; // 0xc0(0x01)
	None RotMode; // 0xc4(0x01)
	None MoveAxis; // 0x90(0x01)
	None LookupTrack; // 0x98(0x10)
	None TrackKeys; // 0x70(0x10)
	None Sounds; // 0x90(0x10)
	None bPlayOnReverse; // 0xa0(0x01)
	None bContinueSoundOnMatineeEnd; // 0xa0(0x01)
	None bSuppressSubtitles; // 0xa0(0x01)
	None bTreatAsDialogue; // 0xa0(0x01)
	None bAttach; // 0xa0(0x01)
	None ToggleTrack; // 0x70(0x10)
	None bActivateSystemEachUpdate; // 0x80(0x01)
	None bActivateWithJustAttachedFlag; // 0x80(0x01)
	None bFireEventsWhenForwards; // 0x80(0x01)
	None bFireEventsWhenBackwards; // 0x80(0x01)
	None bFireEventsWhenJumpingForwards; // 0x80(0x01)
	None TargetMaterials; // 0x90(0x10)
	None ParamName; // 0xa0(0x08)
	None PropertyName; // 0x90(0x08)
	None VisibilityTrack; // 0x70(0x10)
	None bFireEventsWhenForwards; // 0x80(0x01)
	None bFireEventsWhenBackwards; // 0x80(0x01)
	None bFireEventsWhenJumpingForwards; // 0x80(0x01)
	None UnsignedInt16Variable; // 0x28(0x02)
	None UnsignedInt32Variable; // 0x2c(0x04)
	None UnsignedInt64Variable; // 0x30(0x08)
	None SignedInt8Variable; // 0x38(0x01)
	None SignedInt16Variable; // 0x3a(0x02)
	None SignedInt64Variable; // 0x40(0x08)
	None UnsignedInt8Variable; // 0x48(0x01)
	None SignedInt32Variable; // 0x4c(0x04)
	None LayerName; // 0x28(0x08)
	None bIsVisible; // 0x30(0x01)
	None ActorStats; // 0x38(0x10)
	None OwningWorld; // 0xb8(0x08)
	None Model; // 0xc0(0x08)
	None ModelComponents; // 0xc8(0x10)
	None ActorCluster; // 0xd8(0x08)
	None NumTextureStreamingUnbuiltComponents; // 0xe0(0x04)
	None NumTextureStreamingDirtyResources; // 0xe4(0x04)
	None LevelScriptActor; // 0xe8(0x08)
	None NavListStart; // 0xf0(0x08)
	None NavListEnd; // 0xf8(0x08)
	None NavDataChunks; // 0x100(0x10)
	None LightmapTotalSize; // 0x110(0x04)
	None ShadowmapTotalSize; // 0x114(0x04)
	None StaticNavigableGeometry; // 0x118(0x10)
	None StreamingTextureGuids; // 0x128(0x10)
	None LevelBuildDataId; // 0x1d0(0x10)
	None MapBuildData; // 0x1e0(0x08)
	None LightBuildLevelOffset; // 0x1e8(0x0c)
	None bIsLightingScenario; // 0x1f4(0x01)
	None bTextureStreamingRotationChanged; // 0x1f4(0x01)
	None bStaticComponentsRegisteredInStreamingManager; // 0x1f4(0x01)
	None bIsVisible; // 0x1f4(0x01)
	None WorldSettings; // 0x240(0x08)
	None AssetUserData; // 0x250(0x10)
	None DestroyedReplicatedStaticActors; // 0x270(0x10)
	None Actors; // 0x28(0x10)
	None BoxComponent; // 0x310(0x08)
	None bAutoUpdateBounds; // 0x318(0x01)
	None WorldAsset; // 0x28(0x28)
	None PackageNameToLoad; // 0x50(0x08)
	None LODPackageNames; // 0x58(0x10)
	None LevelTransform; // 0x80(0x30)
	None LevelLODIndex; // 0xb0(0x04)
	None StreamingPriority; // 0xb4(0x04)
	None bShouldBeVisible; // 0xc0(0x01)
	None bShouldBeLoaded; // 0xc0(0x01)
	None bLocked; // 0xc0(0x01)
	None bIsStatic; // 0xc0(0x01)
	None bShouldBlockOnLoad; // 0xc0(0x01)
	None bShouldBlockOnUnload; // 0xc0(0x01)
	None bDisableDistanceStreaming; // 0xc0(0x01)
	None bDrawOnLevelStatusMap; // 0xc0(0x01)
	None LevelColor; // 0xc4(0x10)
	None EditorStreamingVolumes; // 0xd8(0x10)
	None MinTimeBetweenVolumeUnloadRequests; // 0xe8(0x04)
	None OnLevelLoaded; // 0xf0(0x10)
	None OnLevelUnloaded; // 0x100(0x10)
	None OnLevelShown; // 0x110(0x10)
	None OnLevelHidden; // 0x120(0x10)
	None LoadedLevel; // 0x130(0x08)
	None PendingUnloadLevel; // 0x138(0x08)
	None bInitiallyLoaded; // 0x158(0x01)
	None bInitiallyVisible; // 0x158(0x01)
	None StreamingLevelNames; // 0x348(0x10)
	None bEditorPreVisOnly; // 0x358(0x01)
	None bDisabled; // 0x358(0x01)
	None StreamingUsage; // 0x35c(0x01)
	None SourceModel; // 0x28(0x08)
	None Surfaces; // 0x30(0x10)
	None PortalComponent; // 0x310(0x08)
	None PreviewBox; // 0x238(0x08)
	None LightmassSettings; // 0x28(0x18)
	None IntensityUnits; // 0x380(0x01)
	None Radius; // 0x384(0x04)
	None AttenuationRadius; // 0x388(0x04)
	None LightmassSettings; // 0x38c(0x0c)
	None StaticMeshComponent; // 0x310(0x08)
	None ImpostersStaticMeshComponents; // 0x318(0x50)
	None Proxy; // 0x368(0x08)
	None Key; // 0x370(0x08)
	None LODDrawDistance; // 0x378(0x04)
	None LODLevel; // 0x37c(0x04)
	None SubActors; // 0x380(0x10)
	None CachedNumHLODLevels; // 0x390(0x01)
	None LevelLightingQuality; // 0x28(0x01)
	None PhysMaterial; // 0x88(0x08)
	None PhysMaterialMask; // 0x90(0x08)
	None PhysicalMaterialMap; // 0x98(0x40)
	None Metallic; // 0xd8(0x0c)
	None Specular; // 0xec(0x0c)
	None Anisotropy; // 0x100(0x0c)
	None Normal; // 0x114(0x0c)
	None Tangent; // 0x128(0x0c)
	None EmissiveColor; // 0x13c(0x0c)
	None MaterialDomain; // 0x150(0x01)
	None BlendMode; // 0x151(0x01)
	None DecalBlendMode; // 0x152(0x01)
	None MaterialDecalResponse; // 0x153(0x01)
	None ShadingModel; // 0x154(0x01)
	None bCastDynamicShadowAsMasked; // 0x155(0x01)
	None ShadingModels; // 0x156(0x02)
	None OpacityMaskClipValue; // 0x158(0x04)
	None WorldPositionOffset; // 0x15c(0x0c)
	None Refraction; // 0x170(0x0c)
	None MaterialAttributes; // 0x184(0x10)
	None PixelDepthOffset; // 0x19c(0x0c)
	None ShadingModelFromMaterialExpression; // 0x1b0(0x0c)
	None bEnableSeparateTranslucency; // 0x1c4(0x01)
	None bEnableResponsiveAA; // 0x1c4(0x01)
	None bEnableTranslucentVelocity; // 0x1c8(0x01)
	None bScreenSpaceReflections; // 0x1cc(0x01)
	None bContactShadows; // 0x1cc(0x01)
	None TwoSided; // 0x1cc(0x01)
	None DitheredLODTransition; // 0x1cc(0x01)
	None DitherOpacityMask; // 0x1cc(0x01)
	None bAllowNegativeEmissiveColor; // 0x1cc(0x01)
	None TranslucencyLightingMode; // 0x1cd(0x01)
	None bEnableMobileSeparateTranslucency; // 0x1ce(0x01)
	None NumCustomizedUVs; // 0x1d0(0x04)
	None TranslucencyDirectionalLightingIntensity; // 0x1d4(0x04)
	None TranslucentShadowDensityScale; // 0x1d8(0x04)
	None TranslucentSelfShadowDensityScale; // 0x1dc(0x04)
	None TranslucentSelfShadowSecondDensityScale; // 0x1e0(0x04)
	None TranslucentSelfShadowSecondOpacity; // 0x1e4(0x04)
	None TranslucentBackscatteringExponent; // 0x1e8(0x04)
	None TranslucentMultipleScatteringExtinction; // 0x1ec(0x10)
	None TranslucentShadowStartOffset; // 0x1fc(0x04)
	None bDisableDepthTest; // 0x200(0x01)
	None bWriteOnlyAlpha; // 0x200(0x01)
	None bGenerateSphericalParticleNormals; // 0x200(0x01)
	None bTangentSpaceNormal; // 0x200(0x01)
	None bUseEmissiveForDynamicAreaLighting; // 0x200(0x01)
	None bBlockGI; // 0x200(0x01)
	None bUsedAsSpecialEngineMaterial; // 0x200(0x01)
	None bUsedWithSkeletalMesh; // 0x200(0x01)
	None bUsedWithEditorCompositing; // 0x201(0x01)
	None bUsedWithParticleSprites; // 0x201(0x01)
	None bUsedWithBeamTrails; // 0x201(0x01)
	None bUsedWithMeshParticles; // 0x201(0x01)
	None bUsedWithNiagaraSprites; // 0x201(0x01)
	None bUsedWithNiagaraRibbons; // 0x201(0x01)
	None bUsedWithNiagaraMeshParticles; // 0x201(0x01)
	None bUsedWithGeometryCache; // 0x201(0x01)
	None bUsedWithStaticLighting; // 0x202(0x01)
	None bUsedWithMorphTargets; // 0x202(0x01)
	None bUsedWithSplineMeshes; // 0x202(0x01)
	None bUsedWithInstancedStaticMeshes; // 0x202(0x01)
	None bUsedWithGeometryCollections; // 0x202(0x01)
	None bUsesDistortion; // 0x202(0x01)
	None bUsedWithClothing; // 0x202(0x01)
	None bUsedWithWater; // 0x204(0x01)
	None bUsedWithHairStrands; // 0x204(0x01)
	None bUsedWithLidarPointCloud; // 0x204(0x01)
	None bUsedWithUI; // 0x208(0x01)
	None bAutomaticallySetUsageInEditor; // 0x208(0x01)
	None bFullyRough; // 0x208(0x01)
	None bUseFullPrecision; // 0x208(0x01)
	None bUseLightmapDirectionality; // 0x208(0x01)
	None bForwardRenderUsePreintegratedGFForSimpleIBL; // 0x20c(0x01)
	None bUseHQForwardReflections; // 0x210(0x01)
	None bUsePlanarForwardReflections; // 0x210(0x01)
	None bNormalCurvatureToRoughness; // 0x210(0x01)
	None D3D11TessellationMode; // 0x211(0x01)
	None bEnableCrackFreeDisplacement; // 0x212(0x01)
	None bEnableAdaptiveTessellation; // 0x212(0x01)
	None AllowTranslucentCustomDepthWrites; // 0x212(0x01)
	None Wireframe; // 0x212(0x01)
	None bCanMaskedBeAssumedOpaque; // 0x212(0x01)
	None bIsMasked; // 0x212(0x01)
	None bIsPreviewMaterial; // 0x212(0x01)
	None bIsFunctionPreviewMaterial; // 0x212(0x01)
	None bUseMaterialAttributes; // 0x213(0x01)
	None bCastRayTracedShadows; // 0x213(0x01)
	None bUseTranslucencyVertexFog; // 0x213(0x01)
	None bIsSky; // 0x213(0x01)
	None bComputeFogPerPixel; // 0x213(0x01)
	None bOutputTranslucentVelocity; // 0x213(0x01)
	None bAllowDevelopmentShaderCompile; // 0x213(0x01)
	None bIsMaterialEditorStatsMaterial; // 0x213(0x01)
	None BlendableLocation; // 0x214(0x01)
	None BlendableOutputAlpha; // 0x215(0x01)
	None bEnableStencilTest; // 0x215(0x01)
	None StencilCompare; // 0x216(0x01)
	None StencilRefValue; // 0x217(0x01)
	None RefractionMode; // 0x218(0x01)
	None BlendablePriority; // 0x21c(0x04)
	None bIsBlendable; // 0x220(0x01)
	None UsageFlagWarnings; // 0x224(0x04)
	None RefractionDepthBias; // 0x228(0x04)
	None StateID; // 0x22c(0x10)
	None MaxDisplacement; // 0x23c(0x04)
	None CachedExpressionData; // 0x2c8(0x228)
	None Elements; // 0x4b8(0x10)
	None Input; // 0x40(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None threshold; // 0xf0(0x04)
	None Channel; // 0xf4(0x01)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Y; // 0x40(0x0c)
	None X; // 0x54(0x0c)
	None Y; // 0x40(0x0c)
	None X; // 0x54(0x0c)
	None Input; // 0x40(0x0c)
	None WorldPosition; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Temp; // 0x40(0x0c)
	None A; // 0x40(0x10)
	None B; // 0x58(0x10)
	None ALPHA; // 0x70(0x0c)
	None PixelAttributeBlendType; // 0x84(0x01)
	None VertexAttributeBlendType; // 0x85(0x01)
	None MaterialAttributes; // 0x40(0x10)
	None Coordinate; // 0x40(0x0c)
	None Height; // 0x54(0x0c)
	None HeightRatioInput; // 0x68(0x0c)
	None HeightRatio; // 0x7c(0x04)
	None ReferencePlane; // 0x80(0x04)
	None ConstCoordinate; // 0x84(0x04)
	None Input; // 0x40(0x0c)
	None ParameterName; // 0x40(0x08)
	None ExpressionGUID; // 0x48(0x10)
	None DefaultValue; // 0x58(0x10)
	None bUseCustomPrimitiveData; // 0x68(0x01)
	None PrimitiveDataIndex; // 0x69(0x01)
	None MaskChannel; // 0x70(0x01)
	None Input; // 0x74(0x0c)
	None Input; // 0x40(0x0c)
	None Min; // 0x54(0x0c)
	None MAX; // 0x68(0x0c)
	None ClampMode; // 0x7c(0x01)
	None MinDefault; // 0x80(0x04)
	None MaxDefault; // 0x84(0x04)
	None Input; // 0x40(0x0c)
	None Collection; // 0x40(0x08)
	None ParameterName; // 0x48(0x08)
	None ParameterId; // 0x50(0x10)
	None SizeX; // 0x40(0x04)
	None SizeY; // 0x44(0x04)
	None Text; // 0x48(0x10)
	None CommentColor; // 0x58(0x10)
	None FontSize; // 0x68(0x04)
	None Input; // 0x40(0x0c)
	None R; // 0x54(0x01)
	None G; // 0x54(0x01)
	None B; // 0x54(0x01)
	None A; // 0x54(0x01)
	None R; // 0x40(0x04)
	None R; // 0x40(0x04)
	None G; // 0x44(0x04)
	None Constant; // 0x40(0x10)
	None Constant; // 0x40(0x10)
	None Input; // 0x40(0x0c)
	None Bias; // 0x54(0x04)
	None Scale; // 0x58(0x04)
	None Input; // 0x40(0x0c)
	None Period; // 0x54(0x04)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None DefaultValue; // 0x58(0x04)
	None bUseCustomPrimitiveData; // 0x5c(0x01)
	None PrimitiveDataIndex; // 0x5d(0x01)
	None Curve; // 0x60(0x08)
	None Atlas; // 0x68(0x08)
	None InputTime; // 0x70(0x0c)
	None Code; // 0x40(0x10)
	None OutputType; // 0x50(0x01)
	None Description; // 0x58(0x10)
	None Inputs; // 0x68(0x10)
	None AdditionalDefines; // 0x78(0x10)
	None IncludeFilePaths; // 0x88(0x10)
	None Value; // 0x40(0x0c)
	None Value; // 0x40(0x0c)
	None TextureSize; // 0x40(0x0c)
	None ConstWidth; // 0x54(0x04)
	None ConstHeight; // 0x58(0x04)
	None InOpacity; // 0x40(0x0c)
	None FadeDistance; // 0x54(0x0c)
	None OpacityDefault; // 0x68(0x04)
	None FadeDistanceDefault; // 0x6c(0x04)
	None FunctionValue; // 0x40(0x01)
	None Depth; // 0x44(0x0c)
	None InXY; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Fraction; // 0x54(0x0c)
	None LuminanceFactors; // 0x68(0x10)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None Position; // 0x40(0x0c)
	None Position; // 0x40(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ParamNames; // 0x40(0x10)
	None DefaultValue; // 0x50(0x10)
	None ParameterIndex; // 0x60(0x04)
	None Default; // 0x40(0x0c)
	None Inputs; // 0x54(0x30)
	None Input; // 0x40(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None Font; // 0x40(0x08)
	None FontTexturePage; // 0x48(0x04)
	None ParameterName; // 0x50(0x08)
	None ExpressionGUID; // 0x58(0x10)
	None Group; // 0x68(0x08)
	None Input; // 0x40(0x0c)
	None ExponentIn; // 0x40(0x0c)
	None Exponent; // 0x54(0x04)
	None BaseReflectFractionIn; // 0x58(0x0c)
	None BaseReflectFraction; // 0x6c(0x04)
	None Normal; // 0x70(0x0c)
	None Preview; // 0x40(0x0c)
	None InputName; // 0x54(0x08)
	None Description; // 0x60(0x10)
	None ID; // 0x70(0x10)
	None InputType; // 0x80(0x01)
	None PreviewValue; // 0x90(0x10)
	None bUsePreviewValueAsDefault; // 0xa0(0x01)
	None SortPriority; // 0xa4(0x04)
	None bCompilingFunctionPreview; // 0xa8(0x01)
	None OutputName; // 0x40(0x08)
	None Description; // 0x48(0x10)
	None SortPriority; // 0x58(0x04)
	None A; // 0x5c(0x0c)
	None bLastPreviewed; // 0x70(0x01)
	None ID; // 0x74(0x10)
	None MaterialAttributes; // 0x40(0x10)
	None AttributeGetTypes; // 0x58(0x10)
	None Default; // 0x40(0x0c)
	None StaticIndirect; // 0x54(0x0c)
	None DynamicIndirect; // 0x68(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None AGreaterThanB; // 0x68(0x0c)
	None AEqualsB; // 0x7c(0x0c)
	None ALessThanB; // 0x90(0x0c)
	None EqualsThreshold; // 0xa4(0x04)
	None ConstB; // 0xa8(0x04)
	None ConstAEqualsB; // 0xac(0x04)
	None Realtime; // 0x40(0x0c)
	None Lightmass; // 0x54(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ALPHA; // 0x68(0x0c)
	None ConstA; // 0x7c(0x04)
	None ConstB; // 0x80(0x04)
	None ConstAlpha; // 0x84(0x04)
	None X; // 0x40(0x0c)
	None X; // 0x40(0x0c)
	None BaseColor; // 0x40(0x0c)
	None Metallic; // 0x54(0x0c)
	None Specular; // 0x68(0x0c)
	None Roughness; // 0x7c(0x0c)
	None Anisotropy; // 0x90(0x0c)
	None EmissiveColor; // 0xa4(0x0c)
	None Opacity; // 0xb8(0x0c)
	None OpacityMask; // 0xcc(0x0c)
	None Normal; // 0xe0(0x0c)
	None Tangent; // 0xf4(0x0c)
	None WorldPositionOffset; // 0x108(0x0c)
	None WorldDisplacement; // 0x11c(0x0c)
	None TessellationMultiplier; // 0x130(0x0c)
	None SubsurfaceColor; // 0x144(0x0c)
	None ClearCoat; // 0x158(0x0c)
	None ClearCoatRoughness; // 0x16c(0x0c)
	None AmbientOcclusion; // 0x180(0x0c)
	None Refraction; // 0x194(0x0c)
	None CustomizedUVs; // 0x1a8(0x60)
	None PixelDepthOffset; // 0x248(0x0c)
	None ShadingModel; // 0x25c(0x0c)
	None Coordinates; // 0x40(0x0c)
	None ParameterName; // 0x40(0x08)
	None ExpressionGUID; // 0x48(0x10)
	None Input; // 0x58(0x10)
	None DefaultLayers; // 0x70(0x40)
	None LayerCallers; // 0xb0(0x10)
	None NumActiveLayerCallers; // 0xc0(0x04)
	None BlendCallers; // 0xc8(0x10)
	None NumActiveBlendCallers; // 0xd8(0x04)
	None bIsLayerGraphBuilt; // 0xdc(0x01)
	None MaterialFunction; // 0x40(0x08)
	None FunctionParameterInfo; // 0x48(0x10)
	None Realtime; // 0x40(0x0c)
	None MaterialProxy; // 0x54(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None Position; // 0x40(0x0c)
	None FilterWidth; // 0x54(0x0c)
	None Scale; // 0x68(0x04)
	None Quality; // 0x6c(0x04)
	None NoiseFunction; // 0x70(0x01)
	None bTurbulence; // 0x74(0x01)
	None Levels; // 0x78(0x04)
	None OutputMin; // 0x7c(0x04)
	None OutputMax; // 0x80(0x04)
	None LevelScale; // 0x84(0x04)
	None bTiling; // 0x88(0x01)
	None RepeatSize; // 0x8c(0x04)
	None VectorInput; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Coordinate; // 0x40(0x0c)
	None Time; // 0x54(0x0c)
	None Speed; // 0x68(0x0c)
	None SpeedX; // 0x7c(0x04)
	None SpeedY; // 0x80(0x04)
	None ConstCoordinate; // 0x84(0x04)
	None bFractionalPart; // 0x88(0x01)
	None bBlend; // 0xd0(0x01)
	None DefaultValue; // 0x40(0x0c)
	None ConstDefaultValue; // 0x54(0x04)
	None DataIndex; // 0x58(0x04)
	None Base; // 0x40(0x0c)
	None Exponent; // 0x54(0x0c)
	None ConstExponent; // 0x68(0x04)
	None CurrentFrame; // 0x40(0x0c)
	None PreviousFrame; // 0x54(0x0c)
	None Default; // 0x40(0x0c)
	None Inputs; // 0x54(0x24)
	None Normal; // 0x40(0x0c)
	None RayTraced; // 0x54(0x0c)
	None InputVector; // 0x40(0x0c)
	None CustomWorldNormal; // 0x40(0x0c)
	None bNormalizeCustomWorldNormal; // 0x54(0x01)
	None Input; // 0x40(0x0c)
	None NormalizedRotationAxis; // 0x40(0x0c)
	None RotationAngle; // 0x54(0x0c)
	None PivotPoint; // 0x68(0x0c)
	None Position; // 0x7c(0x0c)
	None Period; // 0x90(0x04)
	None Coordinate; // 0x40(0x0c)
	None Time; // 0x54(0x0c)
	None CenterX; // 0x68(0x04)
	None CenterY; // 0x6c(0x04)
	None Speed; // 0x70(0x04)
	None ConstCoordinate; // 0x74(0x04)
	None Input; // 0x40(0x0c)
	None BaseColor; // 0x40(0x0c)
	None Specular; // 0x54(0x0c)
	None Roughness; // 0x68(0x0c)
	None Normal; // 0x7c(0x0c)
	None WorldHeight; // 0x90(0x0c)
	None Opacity; // 0xa4(0x0c)
	None Mask; // 0xb8(0x0c)
	None Default; // 0x40(0x0c)
	None VirtualTextureOutput; // 0x54(0x0c)
	None Coordinates; // 0x40(0x0c)
	None WorldPosition; // 0x54(0x0c)
	None MipValue; // 0x68(0x0c)
	None VirtualTexture; // 0x80(0x08)
	None MaterialType; // 0x88(0x01)
	None bSinglePhysicalSpace; // 0x89(0x01)
	None MipValueMode; // 0x8a(0x01)
	None ParameterName; // 0x90(0x08)
	None ExpressionGUID; // 0x98(0x10)
	None Group; // 0xa8(0x08)
	None Input; // 0x40(0x0c)
	None InputMode; // 0x40(0x01)
	None Input; // 0x44(0x0c)
	None OffsetFraction; // 0x58(0x0c)
	None ConstInput; // 0x6c(0x08)
	None InputMode; // 0x40(0x01)
	None Input; // 0x44(0x0c)
	None Coordinates; // 0x58(0x0c)
	None ConstInput; // 0x6c(0x08)
	None Coordinates; // 0x40(0x0c)
	None SceneTextureId; // 0x54(0x01)
	None bFiltered; // 0x55(0x01)
	None Inputs; // 0x40(0x10)
	None AttributeSetTypes; // 0x50(0x10)
	None PixelShader; // 0x40(0x0c)
	None VertexShader; // 0x54(0x0c)
	None ShadingModel; // 0x40(0x01)
	None Default; // 0x40(0x0c)
	None Inputs; // 0x54(0x24)
	None Default; // 0x40(0x0c)
	None Shadow; // 0x54(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Period; // 0x54(0x04)
	None ScatteringCoefficients; // 0x40(0x0c)
	None AbsorptionCoefficients; // 0x54(0x0c)
	None PhaseG; // 0x68(0x0c)
	None LightIndex; // 0x40(0x04)
	None LightIndex; // 0x40(0x04)
	None WorldPosition; // 0x44(0x0c)
	None LightIndex; // 0x40(0x04)
	None WorldPosition; // 0x40(0x0c)
	None cell; // 0x40(0x0c)
	None Index; // 0x54(0x0c)
	None Seed; // 0x68(0x0c)
	None ConstIndex; // 0x7c(0x04)
	None ConstSeed; // 0x80(0x08)
	None GeometryInput; // 0x40(0x0c)
	None WindInput; // 0x54(0x0c)
	None LODInput; // 0x68(0x0c)
	None ExtraBendWS; // 0x7c(0x0c)
	None GeometryType; // 0x90(0x01)
	None WindType; // 0x91(0x01)
	None LODType; // 0x92(0x01)
	None BillboardThreshold; // 0x94(0x04)
	None bAccurateWindVelocities; // 0x98(0x01)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None Radius; // 0x68(0x0c)
	None Hardness; // 0x7c(0x0c)
	None AttenuationRadius; // 0x90(0x04)
	None HardnessPercent; // 0x94(0x04)
	None Density; // 0x40(0x0c)
	None ConstantDensity; // 0x54(0x04)
	None Input; // 0x40(0x0c)
	None Value; // 0x40(0x01)
	None DefaultValue; // 0x58(0x01)
	None Input; // 0x58(0x0c)
	None DefaultR; // 0x6c(0x01)
	None DefaultG; // 0x6c(0x01)
	None DefaultB; // 0x6c(0x01)
	None DefaultA; // 0x6c(0x01)
	None DefaultValue; // 0x40(0x01)
	None A; // 0x44(0x0c)
	None B; // 0x58(0x0c)
	None Value; // 0x6c(0x0c)
	None A; // 0x60(0x0c)
	None B; // 0x74(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None Input; // 0x40(0x0c)
	None Period; // 0x54(0x04)
	None Input; // 0x40(0x0c)
	None Index; // 0x40(0x0c)
	None Seed; // 0x54(0x0c)
	None ConstIndex; // 0x68(0x04)
	None ConstSeed; // 0x6c(0x08)
	None CoordinateIndex; // 0x40(0x04)
	None UTiling; // 0x44(0x04)
	None VTiling; // 0x48(0x04)
	None UnMirrorU; // 0x4c(0x01)
	None UnMirrorV; // 0x4c(0x01)
	None TextureObject; // 0x40(0x0c)
	None Property; // 0x54(0x01)
	None bBlend; // 0xf0(0x01)
	None TransmittanceColor; // 0x40(0x0c)
	None bIgnorePause; // 0x40(0x01)
	None bOverride_Period; // 0x40(0x01)
	None Period; // 0x44(0x04)
	None Input; // 0x40(0x0c)
	None TransformSourceType; // 0x54(0x01)
	None TransformType; // 0x55(0x01)
	None Input; // 0x40(0x0c)
	None TransformSourceType; // 0x54(0x01)
	None TransformType; // 0x55(0x01)
	None Input; // 0x40(0x0c)
	None Position; // 0x40(0x0c)
	None NoiseFunction; // 0x54(0x01)
	None Quality; // 0x58(0x04)
	None bTiling; // 0x5c(0x01)
	None TileSize; // 0x60(0x04)
	None Input; // 0x40(0x0c)
	None Property; // 0x40(0x01)
	None No; // 0x40(0x0c)
	None Yes; // 0x54(0x0c)
	None WorldPositionShaderOffset; // 0x40(0x01)
	None StateID; // 0x28(0x10)
	None MaterialFunctionUsage; // 0x38(0x01)
	None Description; // 0x40(0x10)
	None bExposeToLibrary; // 0x50(0x01)
	None bPrefixParameterNames; // 0x50(0x01)
	None bReentrantFlag; // 0x50(0x01)
	None Parent; // 0x40(0x08)
	None Base; // 0x48(0x08)
	None ScalarParameterValues; // 0x50(0x10)
	None VectorParameterValues; // 0x60(0x10)
	None TextureParameterValues; // 0x70(0x10)
	None FontParameterValues; // 0x80(0x10)
	None StaticSwitchParameterValues; // 0x90(0x10)
	None StaticComponentMaskParameterValues; // 0xa0(0x10)
	None RuntimeVirtualTextureParameterValues; // 0xb0(0x10)
	None TargetActors; // 0x310(0x10)
	None StateID; // 0x28(0x10)
	None ScalarParameters; // 0x38(0x10)
	None VectorParameters; // 0x48(0x10)
	None Collection; // 0x30(0x08)
	None MatineeData; // 0x310(0x08)
	None MatineeControllerName; // 0x318(0x08)
	None PlayRate; // 0x320(0x04)
	None bPlayOnLevelLoad; // 0x324(0x01)
	None bForceStartPos; // 0x324(0x01)
	None ForceStartPosition; // 0x328(0x04)
	None bLooping; // 0x32c(0x01)
	None bRewindOnPlay; // 0x32c(0x01)
	None bNoResetOnRewind; // 0x32c(0x01)
	None bRewindIfAlreadyPlaying; // 0x32c(0x01)
	None bDisableRadioFilter; // 0x32c(0x01)
	None bClientSideOnly; // 0x32c(0x01)
	None bSkipUpdateIfNotVisible; // 0x32c(0x01)
	None bIsSkippable; // 0x32c(0x01)
	None PreferredSplitScreenNum; // 0x330(0x04)
	None bDisableMovementInput; // 0x334(0x01)
	None bDisableLookAtInput; // 0x334(0x01)
	None bHidePlayer; // 0x334(0x01)
	None bHideHud; // 0x334(0x01)
	None GroupActorInfos; // 0x338(0x10)
	None bShouldShowGore; // 0x348(0x01)
	None GroupInst; // 0x350(0x10)
	None CameraCuts; // 0x360(0x10)
	None bIsPlaying; // 0x370(0x01)
	None bReversePlayback; // 0x370(0x01)
	None bPaused; // 0x370(0x01)
	None bPendingStop; // 0x370(0x01)
	None InterpPosition; // 0x374(0x04)
	None ReplicationForceIsPlaying; // 0x37c(0x01)
	None OnPlay; // 0x380(0x10)
	None OnStop; // 0x390(0x10)
	None OnPause; // 0x3a0(0x10)
	None CameraAnim; // 0x3b8(0x08)
	None MeshReductionModuleName; // 0x38(0x08)
	None AvailableProducts; // 0x38(0x10)
	None LastError; // 0x48(0x10)
	None LastErrorSolution; // 0x58(0x10)
	None OnMK3DKillcamCompleteEvent; // 0xb0(0x10)
	None MK3DKillEvents; // 0xd8(0x10)
	None KillcamBeforeSec; // 0xe8(0x04)
	None KillcamAfterSec; // 0xec(0x04)
	None OnMK3DTargetcamCompleteEvent; // 0xb0(0x10)
	None MK3DTargetEvents; // 0xd8(0x10)
	None PendingNetObjectsHolder; // 0x2f0(0x10)
	None DataVersion; // 0x30(0x01)
	None Time; // 0x34(0x04)
	None ModelBodySetup; // 0x4d0(0x08)
	None BaseSkelMesh; // 0x28(0x08)
	None bIsDynamicObstacle; // 0x28(0x01)
	None NavigationDataName; // 0x28(0x08)
	None NavigationSystemClass; // 0x28(0x18)
	None SupportedAgentsMask; // 0x40(0x04)
	None DefaultAgentName; // 0x44(0x08)
	None bIsOverriden; // 0x4c(0x01)
	None LINKS; // 0x28(0x10)
	None SegmentLinks; // 0x38(0x10)
	None bVerifyPeer; // 0x38(0x01)
	None bEnableMultiplayerWorldOriginRebasing; // 0x38(0x01)
	None MaxRepArraySize; // 0x3c(0x04)
	None MaxRepArrayMemory; // 0x40(0x04)
	None NetworkEmulationProfiles; // 0x48(0x10)
	None SourceItems; // 0x28(0x50)
	None TargetItems; // 0x78(0x50)
	None SourceToTarget; // 0xc8(0x50)
	None SourceAsset; // 0x118(0x28)
	None TargetAsset; // 0x140(0x28)
	None ObjectBaseClass; // 0x28(0x08)
	None bHasBlueprintClasses; // 0x30(0x01)
	None Objects; // 0x38(0x10)
	None WeakObjects; // 0x48(0x10)
	None bUseWeakReferences; // 0x58(0x01)
	None bIsFullyLoaded; // 0x59(0x01)
	None ReferencedObjects; // 0x28(0x10)
	None bPainCausing; // 0x358(0x01)
	None DamagePerSec; // 0x35c(0x04)
	None DamageType; // 0x360(0x08)
	None PainInterval; // 0x368(0x04)
	None bEntryPain; // 0x36c(0x01)
	None BACKUP_bPainCausing; // 0x36c(0x01)
	None DamageInstigator; // 0x370(0x08)
	None EmitterName; // 0x28(0x08)
	None SubUVDataOffset; // 0x30(0x04)
	None EmitterRenderMode; // 0x34(0x01)
	None SignificanceLevel; // 0x35(0x01)
	None bUseLegacySpawningBehavior; // 0x37(0x01)
	None ConvertedModules; // 0x37(0x01)
	None bIsSoloing; // 0x37(0x01)
	None bCookedOut; // 0x37(0x01)
	None bDisabledLODsKeepEmitterAlive; // 0x37(0x01)
	None bDisableWhenInsignficant; // 0x38(0x01)
	None LODLevels; // 0x40(0x10)
	None PeakActiveParticles; // 0x50(0x04)
	None InitialAllocationCount; // 0x54(0x04)
	None QualityLevelSpawnRateScale; // 0x58(0x04)
	None DetailModeBitmask; // 0x5c(0x04)
	None Level; // 0x28(0x04)
	None bEnabled; // 0x2c(0x01)
	None RequiredModule; // 0x30(0x08)
	None Modules; // 0x38(0x10)
	None TypeDataModule; // 0x48(0x08)
	None SpawnModule; // 0x50(0x08)
	None EventGenerator; // 0x58(0x08)
	None SpawningModules; // 0x60(0x10)
	None SpawnModules; // 0x70(0x10)
	None UpdateModules; // 0x80(0x10)
	None OrbitModules; // 0x90(0x10)
	None EventReceiverModules; // 0xa0(0x10)
	None ConvertedModules; // 0xb0(0x01)
	None PeakActiveParticles; // 0xb4(0x04)
	None bSpawnModule; // 0x28(0x01)
	None bUpdateModule; // 0x28(0x01)
	None bFinalUpdateModule; // 0x28(0x01)
	None bUpdateForGPUEmitter; // 0x28(0x01)
	None bCurvesAsColor; // 0x28(0x01)
	None b3DDrawMode; // 0x28(0x01)
	None bSupported3DDrawMode; // 0x28(0x01)
	None bEnabled; // 0x28(0x01)
	None bEditable; // 0x29(0x01)
	None LODDuplicate; // 0x29(0x01)
	None bSupportsRandomSeed; // 0x29(0x01)
	None bRequiresLoopingNotification; // 0x29(0x01)
	None LODValidity; // 0x2a(0x01)
	None bAlwaysInWorldSpace; // 0x30(0x01)
	None Acceleration; // 0x38(0x48)
	None bApplyOwnerScale; // 0x80(0x01)
	None Acceleration; // 0x38(0x0c)
	None DragCoefficient; // 0x38(0x08)
	None DragCoefficientRaw; // 0x40(0x30)
	None DragScale; // 0x38(0x08)
	None DragScaleRaw; // 0x40(0x30)
	None AccelOverLife; // 0x38(0x48)
	None EndPoint0; // 0x30(0x0c)
	None EndPoint1; // 0x3c(0x0c)
	None Range; // 0x48(0x30)
	None Strength; // 0x78(0x30)
	None EmitterName; // 0x30(0x08)
	None Range; // 0x38(0x30)
	None bStrengthByDistance; // 0x68(0x01)
	None Strength; // 0x70(0x30)
	None bAffectBaseVelocity; // 0xa0(0x01)
	None SelectionMethod; // 0xa4(0x01)
	None bRenewSource; // 0xa8(0x01)
	None bInheritSourceVel; // 0xa8(0x01)
	None LastSelIndex; // 0xac(0x04)
	None Position; // 0x30(0x48)
	None Range; // 0x78(0x30)
	None Strength; // 0xa8(0x30)
	None StrengthByDistance; // 0xd8(0x01)
	None bAffectBaseVelocity; // 0xd8(0x01)
	None bOverrideVelocity; // 0xd8(0x01)
	None bUseWorldSpacePosition; // 0xd8(0x01)
	None Positive_X; // 0xd8(0x01)
	None Positive_Y; // 0xd8(0x01)
	None Positive_Z; // 0xd8(0x01)
	None Negative_X; // 0xd8(0x01)
	None Negative_Y; // 0xd9(0x01)
	None Negative_Z; // 0xd9(0x01)
	None Position; // 0x30(0x0c)
	None Radius; // 0x3c(0x04)
	None Strength; // 0x40(0x08)
	None StrengthRaw; // 0x48(0x30)
	None ModifierType; // 0x30(0x01)
	None PositionOptions; // 0x34(0x04)
	None Position; // 0x38(0x48)
	None TangentOptions; // 0x80(0x04)
	None Tangent; // 0x88(0x48)
	None bAbsoluteTangent; // 0xd0(0x01)
	None StrengthOptions; // 0xd4(0x04)
	None Strength; // 0xd8(0x30)
	None bLowFreq_Enabled; // 0x30(0x01)
	None Frequency; // 0x34(0x04)
	None Frequency_LowRange; // 0x38(0x04)
	None NoiseRange; // 0x40(0x48)
	None NoiseRangeScale; // 0x88(0x30)
	None bNRScaleEmitterTime; // 0xb8(0x01)
	None NoiseSpeed; // 0xc0(0x48)
	None bSmooth; // 0x108(0x01)
	None NoiseLockRadius; // 0x10c(0x04)
	None bNoiseLock; // 0x110(0x01)
	None bOscillate; // 0x110(0x01)
	None NoiseLockTime; // 0x114(0x04)
	None NoiseTension; // 0x118(0x04)
	None bUseNoiseTangents; // 0x11c(0x01)
	None NoiseTangentStrength; // 0x120(0x30)
	None NoiseTessellation; // 0x150(0x04)
	None bTargetNoise; // 0x154(0x01)
	None FrequencyDistance; // 0x158(0x04)
	None bApplyNoiseScale; // 0x15c(0x01)
	None NoiseScale; // 0x160(0x30)
	None SourceMethod; // 0x30(0x01)
	None SourceName; // 0x34(0x08)
	None bSourceAbsolute; // 0x3c(0x01)
	None Source; // 0x40(0x48)
	None bLockSource; // 0x88(0x01)
	None SourceTangentMethod; // 0x8c(0x01)
	None SourceTangent; // 0x90(0x48)
	None bLockSourceTangent; // 0xd8(0x01)
	None SourceStrength; // 0xe0(0x30)
	None bLockSourceStength; // 0x110(0x01)
	None TargetMethod; // 0x30(0x01)
	None TargetName; // 0x34(0x08)
	None Target; // 0x40(0x48)
	None bTargetAbsolute; // 0x88(0x01)
	None bLockTarget; // 0x88(0x01)
	None TargetTangentMethod; // 0x8c(0x01)
	None TargetTangent; // 0x90(0x48)
	None bLockTargetTangent; // 0xd8(0x01)
	None TargetStrength; // 0xe0(0x30)
	None bLockTargetStength; // 0x110(0x01)
	None LockRadius; // 0x114(0x04)
	None CameraOffset; // 0x30(0x30)
	None bSpawnTimeOnly; // 0x60(0x01)
	None UpdateMethod; // 0x64(0x01)
	None DampingFactor; // 0x30(0x48)
	None DampingFactorRotation; // 0x78(0x48)
	None MaxCollisions; // 0xc0(0x30)
	None CollisionCompletionOption; // 0xf0(0x01)
	None CollisionTypes; // 0xf8(0x10)
	None bApplyPhysics; // 0x110(0x01)
	None bIgnoreTriggerVolumes; // 0x110(0x01)
	None ParticleMass; // 0x118(0x30)
	None DirScalar; // 0x148(0x04)
	None bPawnsDoNotDecrementCount; // 0x14c(0x01)
	None bOnlyVerticalNormalsDecrementCount; // 0x14c(0x01)
	None VerticalFudgeFactor; // 0x150(0x04)
	None DelayAmount; // 0x158(0x30)
	None bDropDetail; // 0x188(0x01)
	None bCollideOnlyIfVisible; // 0x188(0x01)
	None bIgnoreSourceActor; // 0x188(0x01)
	None MaxCollisionDistance; // 0x18c(0x04)
	None Resilience; // 0x30(0x30)
	None ResilienceScaleOverLife; // 0x60(0x30)
	None Friction; // 0x90(0x04)
	None RandomSpread; // 0x94(0x04)
	None RandomDistribution; // 0x98(0x04)
	None RadiusScale; // 0x9c(0x04)
	None RadiusBias; // 0xa0(0x04)
	None Response; // 0xa4(0x01)
	None CollisionMode; // 0xa5(0x01)
	None StartColor; // 0x30(0x48)
	None StartAlpha; // 0x78(0x30)
	None bClampAlpha; // 0xa8(0x01)
	None RandomSeedInfo; // 0xb0(0x20)
	None ColorOverLife; // 0x30(0x48)
	None AlphaOverLife; // 0x78(0x30)
	None bClampAlpha; // 0xa8(0x01)
	None ColorScaleOverLife; // 0x30(0x48)
	None AlphaScaleOverLife; // 0x78(0x30)
	None bEmitterTime; // 0xa8(0x01)
	None Events; // 0x30(0x10)
	None EventGeneratorType; // 0x30(0x01)
	None EventName; // 0x34(0x08)
	None bStopSpawning; // 0x40(0x01)
	None SpawnCount; // 0x40(0x30)
	None bUseParticleTime; // 0x70(0x01)
	None bUsePSysLocation; // 0x70(0x01)
	None bInheritVelocity; // 0x70(0x01)
	None InheritVelocityScale; // 0x78(0x48)
	None PhysicalMaterials; // 0xc0(0x10)
	None bBanPhysicalMaterials; // 0xd0(0x01)
	None LowerLeftCorner; // 0x30(0x48)
	None UpperRightCorner; // 0x78(0x48)
	None bAbsolute; // 0xc0(0x01)
	None bKillInside; // 0xc0(0x01)
	None bAxisAlignedAndFixedSize; // 0xc0(0x01)
	None Height; // 0x30(0x30)
	None bAbsolute; // 0x60(0x01)
	None bFloor; // 0x60(0x01)
	None bApplyPSysScale; // 0x60(0x01)
	None LifeTime; // 0x30(0x30)
	None RandomSeedInfo; // 0x60(0x20)
	None bUseInverseSquaredFalloff; // 0x30(0x01)
	None bAffectsTranslucency; // 0x31(0x01)
	None bPreviewLightRadius; // 0x32(0x01)
	None SpawnFraction; // 0x34(0x04)
	None ColorScaleOverLife; // 0x38(0x48)
	None BrightnessOverLife; // 0x80(0x30)
	None RadiusScale; // 0xb0(0x30)
	None LightExponent; // 0xe0(0x30)
	None LightingChannels; // 0x110(0x01)
	None VolumetricScatteringIntensity; // 0x114(0x04)
	None bHighQualityLights; // 0x118(0x01)
	None bShadowCastingLights; // 0x119(0x01)
	None RandomSeedInfo; // 0x120(0x20)
	None StartLocation; // 0x30(0x48)
	None DistributeOverNPoints; // 0x78(0x04)
	None DistributeThreshold; // 0x7c(0x04)
	None RandomSeedInfo; // 0x80(0x20)
	None SourceType; // 0x30(0x01)
	None UniversalOffset; // 0x34(0x0c)
	None SourceLocations; // 0x40(0x10)
	None SelectionMethod; // 0x50(0x01)
	None bUpdatePositionEachFrame; // 0x54(0x01)
	None bOrientMeshEmitters; // 0x54(0x01)
	None bInheritBoneVelocity; // 0x54(0x01)
	None InheritVelocityScale; // 0x58(0x04)
	None SkelMeshActorParamName; // 0x5c(0x08)
	None NumPreSelectedIndices; // 0x64(0x04)
	None Location; // 0x30(0x48)
	None LocationOffset; // 0x78(0x48)
	None ScaleFactor; // 0xc0(0x48)
	None Direction; // 0x108(0x48)
	None EmitterName; // 0x30(0x08)
	None SelectionMethod; // 0x38(0x01)
	None InheritSourceVelocity; // 0x3c(0x01)
	None InheritSourceVelocityScale; // 0x40(0x04)
	None bInheritSourceRotation; // 0x44(0x01)
	None InheritSourceRotationScale; // 0x48(0x04)
	None EmitterName; // 0x30(0x08)
	None Positive_X; // 0x30(0x01)
	None Positive_Y; // 0x30(0x01)
	None Positive_Z; // 0x30(0x01)
	None Negative_X; // 0x30(0x01)
	None Negative_Y; // 0x30(0x01)
	None Negative_Z; // 0x30(0x01)
	None SurfaceOnly; // 0x30(0x01)
	None Velocity; // 0x30(0x01)
	None VelocityScale; // 0x38(0x30)
	None StartLocation; // 0x68(0x48)
	None RadialVelocity; // 0xb0(0x01)
	None StartRadius; // 0xb8(0x30)
	None StartHeight; // 0xe8(0x30)
	None HeightAxis; // 0x118(0x01)
	None RandomSeedInfo; // 0x120(0x20)
	None StartRadius; // 0xb0(0x30)
	None RandomSeedInfo; // 0xe0(0x20)
	None StartOffset; // 0x30(0x48)
	None Height; // 0x78(0x30)
	None Angle; // 0xa8(0x30)
	None Thickness; // 0xd8(0x30)
	None SourceType; // 0x30(0x01)
	None UniversalOffset; // 0x34(0x0c)
	None bUpdatePositionEachFrame; // 0x40(0x01)
	None bOrientMeshEmitters; // 0x40(0x01)
	None bInheritBoneVelocity; // 0x40(0x01)
	None InheritVelocityScale; // 0x44(0x04)
	None SkelMeshActorParamName; // 0x48(0x08)
	None ValidAssociatedBones; // 0x50(0x10)
	None bEnforceNormalCheck; // 0x60(0x01)
	None NormalToCompare; // 0x64(0x0c)
	None NormalCheckToleranceDegrees; // 0x70(0x04)
	None NormalCheckTolerance; // 0x74(0x04)
	None ValidMaterialIndices; // 0x78(0x10)
	None bInheritVertexColor; // 0x88(0x01)
	None bInheritUV; // 0x88(0x01)
	None InheritUVChannel; // 0x8c(0x04)
	None RandomSeedInfo; // 0x80(0x20)
	None MeshMaterials; // 0x30(0x10)
	None StartRotation; // 0x30(0x48)
	None bInheritParent; // 0x78(0x01)
	None RandomSeedInfo; // 0x80(0x20)
	None StartRotationRate; // 0x30(0x48)
	None RandomSeedInfo; // 0x78(0x20)
	None LifeMultiplier; // 0x30(0x48)
	None RotRate; // 0x30(0x48)
	None bScaleRotRate; // 0x78(0x01)
	None bUseEmitterTime; // 0x30(0x01)
	None ChainMode; // 0x38(0x01)
	None OffsetAmount; // 0x40(0x48)
	None OffsetOptions; // 0x88(0x04)
	None RotationAmount; // 0x90(0x48)
	None RotationOptions; // 0xd8(0x04)
	None RotationRateAmount; // 0xe0(0x48)
	None RotationRateOptions; // 0x128(0x04)
	None LockAxisFlags; // 0x30(0x01)
	None DynamicParams; // 0x30(0x10)
	None UpdateFlags; // 0x40(0x04)
	None bUsesVelocity; // 0x44(0x01)
	None RandomSeedInfo; // 0x48(0x20)
	None PivotOffset; // 0x30(0x08)
	None Material; // 0x30(0x08)
	None MinFacingCameraBlendDistance; // 0x38(0x04)
	None MaxFacingCameraBlendDistance; // 0x3c(0x04)
	None EmitterOrigin; // 0x40(0x0c)
	None EmitterRotation; // 0x4c(0x0c)
	None ScreenAlignment; // 0x58(0x01)
	None bUseLocalSpace; // 0x59(0x01)
	None bKillOnDeactivate; // 0x59(0x01)
	None bKillOnCompleted; // 0x59(0x01)
	None SortMode; // 0x5a(0x01)
	None bUseLegacyEmitterTime; // 0x5b(0x01)
	None bRemoveHMDRoll; // 0x5b(0x01)
	None bEmitterDurationUseRange; // 0x5b(0x01)
	None EmitterDuration; // 0x5c(0x04)
	None SpawnRate; // 0x60(0x30)
	None BurstList; // 0x90(0x10)
	None EmitterDelay; // 0xa0(0x04)
	None EmitterDelayLow; // 0xa4(0x04)
	None bDelayFirstLoopOnly; // 0xa8(0x01)
	None InterpolationMethod; // 0xa9(0x01)
	None bScaleUV; // 0xaa(0x01)
	None bEmitterDelayUseRange; // 0xaa(0x01)
	None ParticleBurstMethod; // 0xab(0x01)
	None bOverrideSystemMacroUV; // 0xac(0x01)
	None bUseMaxDrawCount; // 0xac(0x01)
	None OpacitySourceMode; // 0xad(0x01)
	None EmitterNormalsMode; // 0xae(0x01)
	None bOrbitModuleAffectsVelocityAlignment; // 0xaf(0x01)
	None SubImages_Horizontal; // 0xb0(0x04)
	None SubImages_Vertical; // 0xb4(0x04)
	None RandomImageTime; // 0xb8(0x04)
	None RandomImageChanges; // 0xbc(0x04)
	None MacroUVPosition; // 0xc0(0x0c)
	None MacroUVRadius; // 0xcc(0x04)
	None UVFlippingMode; // 0xd0(0x01)
	None BoundingMode; // 0xd1(0x01)
	None bDurationRecalcEachLoop; // 0xd2(0x01)
	None NormalsSphereCenter; // 0xd4(0x0c)
	None AlphaThreshold; // 0xe0(0x04)
	None EmitterLoops; // 0xe4(0x04)
	None CutoutTexture; // 0xe8(0x08)
	None MaxDrawCount; // 0xf0(0x04)
	None EmitterDurationLow; // 0xf4(0x04)
	None NormalsCylinderDirection; // 0xf8(0x0c)
	None NamedMaterialOverrides; // 0x108(0x10)
	None StartRotation; // 0x30(0x30)
	None RandomSeedInfo; // 0x60(0x20)
	None RotationOverLife; // 0x30(0x30)
	None Scale; // 0x60(0x01)
	None StartRotationRate; // 0x30(0x30)
	None RandomSeedInfo; // 0x60(0x20)
	None LifeMultiplier; // 0x30(0x30)
	None StartSize; // 0x30(0x48)
	None RandomSeedInfo; // 0x78(0x20)
	None LifeMultiplier; // 0x30(0x48)
	None MultiplyX; // 0x78(0x01)
	None MultiplyY; // 0x78(0x01)
	None MultiplyZ; // 0x78(0x01)
	None SizeScale; // 0x30(0x48)
	None EnableX; // 0x78(0x01)
	None EnableY; // 0x78(0x01)
	None EnableZ; // 0x78(0x01)
	None SpeedScale; // 0x30(0x08)
	None MaxScale; // 0x38(0x08)
	None SourceMovementScale; // 0x30(0x48)
	None bProcessSpawnRate; // 0x30(0x01)
	None bProcessBurstList; // 0x30(0x01)
	None Rate; // 0x38(0x30)
	None RateScale; // 0x68(0x30)
	None ParticleBurstMethod; // 0x98(0x01)
	None BurstList; // 0xa0(0x10)
	None BurstScale; // 0xb0(0x30)
	None bApplyGlobalSpawnRateScale; // 0xe0(0x01)
	None UnitScalar; // 0x38(0x04)
	None MovementTolerance; // 0x3c(0x04)
	None SpawnPerUnit; // 0x40(0x30)
	None MaxFrameDistance; // 0x70(0x04)
	None bIgnoreSpawnRateWhenMoving; // 0x74(0x01)
	None bIgnoreMovementAlongX; // 0x74(0x01)
	None bIgnoreMovementAlongY; // 0x74(0x01)
	None bIgnoreMovementAlongZ; // 0x74(0x01)
	None Animation; // 0x30(0x08)
	None SubImageIndex; // 0x38(0x30)
	None bUseRealTime; // 0x68(0x01)
	None bUseEmitterTime; // 0x70(0x01)
	None FrameRate; // 0x78(0x30)
	None StartingFrame; // 0xa8(0x04)
	None SourceMethod; // 0x30(0x01)
	None SourceName; // 0x34(0x08)
	None SourceStrength; // 0x40(0x30)
	None bLockSourceStength; // 0x70(0x01)
	None SourceOffsetCount; // 0x74(0x04)
	None SourceOffsetDefaults; // 0x78(0x10)
	None SelectionMethod; // 0x88(0x01)
	None bInheritRotation; // 0x8c(0x01)
	None bDeadTrailsOnDeactivate; // 0x30(0x01)
	None bEnablePreviousTangentRecalculation; // 0x30(0x01)
	None bTangentRecalculationEveryFrame; // 0x30(0x01)
	None TilingDistance; // 0x34(0x04)
	None DistanceTessellationStepSize; // 0x38(0x04)
	None TangentTessellationStepSize; // 0x3c(0x04)
	None WidthTessellationStepSize; // 0x40(0x04)
	None BeamMethod; // 0x30(0x01)
	None TextureTile; // 0x34(0x04)
	None TextureTileDistance; // 0x38(0x04)
	None Sheets; // 0x3c(0x04)
	None MaxBeamCount; // 0x40(0x04)
	None Speed; // 0x44(0x04)
	None InterpolationPoints; // 0x48(0x04)
	None bAlwaysOn; // 0x4c(0x01)
	None UpVectorStepSize; // 0x50(0x04)
	None BranchParentName; // 0x54(0x08)
	None Distance; // 0x60(0x30)
	None TaperMethod; // 0x90(0x01)
	None TaperFactor; // 0x98(0x30)
	None TaperScale; // 0xc8(0x30)
	None RenderGeometry; // 0xf8(0x01)
	None RenderDirectLine; // 0xf8(0x01)
	None RenderLines; // 0xf8(0x01)
	None RenderTessellation; // 0xf8(0x01)
	None EmitterInfo; // 0x30(0x280)
	None ResourceData; // 0x2b0(0x160)
	None CameraMotionBlurAmount; // 0x410(0x04)
	None bClearExistingParticlesOnInit; // 0x414(0x01)
	None Mesh; // 0x30(0x08)
	None LODSizeScale; // 0x40(0x04)
	None bUseStaticMeshLODs; // 0x44(0x01)
	None CastShadows; // 0x44(0x01)
	None DoCollisions; // 0x44(0x01)
	None MeshAlignment; // 0x45(0x01)
	None bOverrideMaterial; // 0x46(0x01)
	None bOverrideDefaultMotionBlurSettings; // 0x46(0x01)
	None bEnableMotionBlur; // 0x46(0x01)
	None RollPitchYawRange; // 0x48(0x48)
	None AxisLockOption; // 0x90(0x01)
	None bCameraFacing; // 0x91(0x01)
	None CameraFacingUpAxisOption; // 0x92(0x01)
	None CameraFacingOption; // 0x93(0x01)
	None bApplyParticleRotationAsSpin; // 0x94(0x01)
	None bFaceCameraDirectionRatherThanPosition; // 0x94(0x01)
	None bCollisionsConsiderPartilceSize; // 0x94(0x01)
	None MaxTessellationBetweenParticles; // 0x30(0x04)
	None SheetsPerTrail; // 0x34(0x04)
	None MaxTrailCount; // 0x38(0x04)
	None MaxParticleInTrailCount; // 0x3c(0x04)
	None bDeadTrailsOnDeactivate; // 0x40(0x01)
	None bDeadTrailsOnSourceLoss; // 0x40(0x01)
	None bClipSourceSegement; // 0x40(0x01)
	None bEnablePreviousTangentRecalculation; // 0x40(0x01)
	None bTangentRecalculationEveryFrame; // 0x40(0x01)
	None bSpawnInitialParticle; // 0x40(0x01)
	None RenderAxis; // 0x44(0x01)
	None TangentSpawningScalar; // 0x48(0x04)
	None bRenderGeometry; // 0x4c(0x01)
	None bRenderSpawnPoints; // 0x4c(0x01)
	None bRenderTangents; // 0x4c(0x01)
	None bRenderTessellation; // 0x4c(0x01)
	None TilingDistance; // 0x50(0x04)
	None DistanceTessellationStepSize; // 0x54(0x04)
	None bEnableTangentDiffInterpScale; // 0x58(0x01)
	None TangentTessellationScalar; // 0x5c(0x04)
	None bOverrideGlobalVectorFieldTightness; // 0x30(0x01)
	None GlobalVectorFieldScale; // 0x34(0x04)
	None GlobalVectorFieldTightness; // 0x38(0x04)
	None VectorField; // 0x30(0x08)
	None RelativeTranslation; // 0x38(0x0c)
	None RelativeRotation; // 0x44(0x0c)
	None RelativeScale3D; // 0x50(0x0c)
	None Intensity; // 0x5c(0x04)
	None Tightness; // 0x60(0x04)
	None bIgnoreComponentTransform; // 0x64(0x01)
	None bTileX; // 0x64(0x01)
	None bTileY; // 0x64(0x01)
	None bTileZ; // 0x64(0x01)
	None bUseFixDT; // 0x64(0x01)
	None MinInitialRotation; // 0x30(0x0c)
	None MaxInitialRotation; // 0x3c(0x0c)
	None RotationRate; // 0x30(0x0c)
	None VectorFieldScale; // 0x30(0x08)
	None VectorFieldScaleRaw; // 0x38(0x30)
	None VectorFieldScaleOverLife; // 0x30(0x08)
	None VectorFieldScaleOverLifeRaw; // 0x38(0x30)
	None bInWorldSpace; // 0x30(0x01)
	None bApplyOwnerScale; // 0x30(0x01)
	None StartVelocity; // 0x38(0x48)
	None StartVelocityRadial; // 0x80(0x30)
	None RandomSeedInfo; // 0xb0(0x20)
	None Angle; // 0x38(0x30)
	None Velocity; // 0x68(0x30)
	None Direction; // 0x98(0x0c)
	None Scale; // 0x38(0x48)
	None VelOverLife; // 0x38(0x48)
	None Absolute; // 0x80(0x01)
	None UpdateTime_FPS; // 0x30(0x04)
	None UpdateTime_Delta; // 0x34(0x04)
	None WarmupTime; // 0x38(0x04)
	None WarmupTickRate; // 0x3c(0x04)
	None Emitters; // 0x40(0x10)
	None PreviewComponent; // 0x50(0x08)
	None CurveEdSetup; // 0x58(0x08)
	None LODDistanceCheckTime; // 0x60(0x04)
	None MacroUVRadius; // 0x64(0x04)
	None LODDistances; // 0x68(0x10)
	None LODSettings; // 0x78(0x10)
	None FixedRelativeBoundingBox; // 0x88(0x1c)
	None SecondsBeforeInactive; // 0xa4(0x04)
	None Delay; // 0xa8(0x04)
	None DelayLow; // 0xac(0x04)
	None bOrientZAxisTowardCamera; // 0xb0(0x01)
	None bUseFixedRelativeBoundingBox; // 0xb0(0x01)
	None bShouldResetPeakCounts; // 0xb0(0x01)
	None bHasPhysics; // 0xb0(0x01)
	None bUseRealtimeThumbnail; // 0xb0(0x01)
	None ThumbnailImageOutOfDate; // 0xb0(0x01)
	None bUseDelayRange; // 0xb1(0x01)
	None bAllowManagedTicking; // 0xb1(0x01)
	None bAutoDeactivate; // 0xb1(0x01)
	None bRegenerateLODDuplicate; // 0xb1(0x01)
	None SystemUpdateMode; // 0xb2(0x01)
	None LODMethod; // 0xb3(0x01)
	None InsignificantReaction; // 0xb4(0x01)
	None OcclusionBoundsMethod; // 0xb5(0x01)
	None MaxSignificanceLevel; // 0xb7(0x01)
	None MinTimeBetweenTicks; // 0xb8(0x04)
	None InsignificanceDelay; // 0xbc(0x04)
	None MacroUVPosition; // 0xc0(0x0c)
	None CustomOcclusionBounds; // 0xcc(0x1c)
	None SoloTracking; // 0xe8(0x10)
	None NamedMaterialSlots; // 0xf8(0x10)
	None Template; // 0x4b8(0x08)
	None EmitterMaterials; // 0x4c0(0x10)
	None SkelMeshComponents; // 0x4d0(0x10)
	None bResetOnDetach; // 0x4e1(0x01)
	None bUpdateOnDedicatedServer; // 0x4e1(0x01)
	None bAllowRecycling; // 0x4e1(0x01)
	None bAutoManageAttachment; // 0x4e1(0x01)
	None bAutoAttachWeldSimulatedBodies; // 0x4e1(0x01)
	None bWarmingUp; // 0x4e2(0x01)
	None bOverrideLODMethod; // 0x4e2(0x01)
	None bSkipUpdateDynamicDataDuringTick; // 0x4e2(0x01)
	None LODMethod; // 0x4ed(0x01)
	None RequiredSignificance; // 0x4ee(0x01)
	None InstanceParameters; // 0x4f0(0x10)
	None OnParticleSpawn; // 0x500(0x10)
	None OnParticleBurst; // 0x510(0x10)
	None OnParticleDeath; // 0x520(0x10)
	None OnParticleCollide; // 0x530(0x10)
	None bOldPositionValid; // 0x540(0x01)
	None OldPosition; // 0x544(0x0c)
	None PartSysVelocity; // 0x550(0x0c)
	None WarmupTime; // 0x55c(0x04)
	None WarmupTickRate; // 0x560(0x04)
	None SecondsBeforeInactive; // 0x578(0x04)
	None MaxTimeBeforeForceUpdateTransform; // 0x580(0x04)
	None ReplayClips; // 0x5a0(0x10)
	None CustomTimeDilation; // 0x5b8(0x04)
	None AutoAttachParent; // 0x610(0x08)
	None AutoAttachSocketName; // 0x618(0x08)
	None AutoAttachLocationRule; // 0x620(0x01)
	None AutoAttachRotationRule; // 0x621(0x01)
	None AutoAttachScaleRule; // 0x622(0x01)
	None OnSystemFinished; // 0x650(0x10)
	None ClipIDNumber; // 0x28(0x04)
	None bAIPerceptionSystemCompatibilityMode; // 0xb0(0x01)
	None LastRemoteNoisePosition; // 0xb4(0x0c)
	None NoiseLifetime; // 0xc0(0x04)
	None LastRemoteNoiseVolume; // 0xc4(0x04)
	None LastRemoteNoiseTime; // 0xc8(0x04)
	None LastLocalNoiseVolume; // 0xcc(0x04)
	None LastLocalNoiseTime; // 0xd0(0x04)
	None StrengthMultiplyer; // 0xb0(0x04)
	None SkeletalMeshComponent; // 0xb8(0x08)
	None UVChannelIndex; // 0x28(0x04)
	None AddressX; // 0x2c(0x01)
	None AddressY; // 0x2d(0x01)
	None BoundsBodies; // 0x30(0x10)
	None SkeletalBodySetups; // 0x40(0x10)
	None ConstraintSetup; // 0x50(0x10)
	None SolverIterations; // 0x60(0x18)
	None bNotForDedicatedServer; // 0x78(0x01)
	None ThumbnailInfo; // 0x120(0x08)
	None BodySetup; // 0x128(0x10)
	None bSkipScaleFromAnimation; // 0x2d0(0x01)
	None PhysicalAnimationData; // 0x2d8(0x10)
	None ImpactThreshold; // 0x28(0x04)
	None ImpactReFireDelay; // 0x2c(0x04)
	None DefaultImpactSound; // 0x30(0x08)
	None LastImpactSoundTime; // 0x38(0x04)
	None ConstraintComp; // 0x310(0x08)
	None ConstraintActor1; // 0x318(0x08)
	None ConstraintActor2; // 0x320(0x08)
	None bDisableCollision; // 0x328(0x01)
	None ConstraintActor1; // 0x238(0x08)
	None ComponentName1; // 0x240(0x08)
	None ConstraintActor2; // 0x248(0x08)
	None ComponentName2; // 0x250(0x08)
	None ConstraintSetup; // 0x268(0x08)
	None OnConstraintBroken; // 0x270(0x10)
	None ConstraintInstance; // 0x280(0x1b8)
	None DefaultInstance; // 0x28(0x1b8)
	None ProfileHandles; // 0x1e0(0x10)
	None DefaultProfile; // 0x1f0(0x104)
	None GrabbedComponent; // 0xb0(0x08)
	None bSoftAngularConstraint; // 0xc0(0x01)
	None bSoftLinearConstraint; // 0xc0(0x01)
	None bInterpolateTarget; // 0xc0(0x01)
	None LinearDamping; // 0xc4(0x04)
	None LinearStiffness; // 0xc8(0x04)
	None AngularDamping; // 0xcc(0x04)
	None AngularStiffness; // 0xd0(0x04)
	None InterpolationSpeed; // 0x140(0x04)
	None DefaultGravityZ; // 0x38(0x04)
	None DefaultTerminalVelocity; // 0x3c(0x04)
	None DefaultFluidFriction; // 0x40(0x04)
	None SimulateScratchMemorySize; // 0x44(0x04)
	None RagdollAggregateThreshold; // 0x48(0x04)
	None TriangleMeshTriangleMinAreaThreshold; // 0x4c(0x04)
	None bEnableShapeSharing; // 0x50(0x01)
	None bEnablePCM; // 0x51(0x01)
	None bEnableStabilization; // 0x52(0x01)
	None bWarnMissingLocks; // 0x53(0x01)
	None bEnable2DPhysics; // 0x54(0x01)
	None PhysicErrorCorrection; // 0x58(0x34)
	None LockedAxis; // 0x8c(0x01)
	None DefaultDegreesOfFreedom; // 0x8d(0x01)
	None BounceThresholdVelocity; // 0x90(0x04)
	None FrictionCombineMode; // 0x94(0x01)
	None RestitutionCombineMode; // 0x95(0x01)
	None MaxAngularVelocity; // 0x98(0x04)
	None MaxDepenetrationVelocity; // 0x9c(0x04)
	None ContactOffsetMultiplier; // 0xa0(0x04)
	None MinContactOffset; // 0xa4(0x04)
	None MaxContactOffset; // 0xa8(0x04)
	None bSimulateSkeletalMeshOnDedicatedServer; // 0xac(0x01)
	None DefaultShapeComplexity; // 0xad(0x01)
	None bDefaultHasComplexCollision; // 0xae(0x01)
	None bSuppressFaceRemapTable; // 0xaf(0x01)
	None bSupportUVFromHitResults; // 0xb0(0x01)
	None bDisableActiveActors; // 0xb1(0x01)
	None bDisableKinematicStaticPairs; // 0xb2(0x01)
	None bDisableKinematicKinematicPairs; // 0xb3(0x01)
	None bDisableCCD; // 0xb4(0x01)
	None bEnableEnhancedDeterminism; // 0xb5(0x01)
	None AnimPhysicsMinDeltaTime; // 0xb8(0x04)
	None bSimulateAnimPhysicsAfterReset; // 0xbc(0x01)
	None MaxPhysicsDeltaTime; // 0xc0(0x04)
	None bSubstepping; // 0xc4(0x01)
	None bSubsteppingAsync; // 0xc5(0x01)
	None MaxSubstepDeltaTime; // 0xc8(0x04)
	None MaxSubsteps; // 0xcc(0x04)
	None SyncSceneSmoothingFactor; // 0xd0(0x04)
	None InitialAverageFrameRate; // 0xd4(0x04)
	None PhysXTreeRebuildRate; // 0xd8(0x04)
	None PhysicalSurfaces; // 0xe0(0x10)
	None DefaultBroadphaseSettings; // 0xf0(0x40)
	None ChaosSettings; // 0x130(0x03)
	None SpringStiffness; // 0x238(0x04)
	None SpringDamping; // 0x23c(0x04)
	None SpringLengthAtRest; // 0x240(0x04)
	None SpringRadius; // 0x244(0x04)
	None SpringChannel; // 0x248(0x01)
	None bIgnoreSelf; // 0x249(0x01)
	None SpringCompression; // 0x24c(0x04)
	None ThrusterComponent; // 0x310(0x08)
	None ThrustStrength; // 0x238(0x04)
	None PlanarReflectionComponent; // 0x320(0x08)
	None bShowPreviewPlane; // 0x328(0x01)
	None PreviewBox; // 0x2d0(0x08)
	None NormalDistortionStrength; // 0x2d8(0x04)
	None PrefilterRoughness; // 0x2dc(0x04)
	None PrefilterRoughnessDistance; // 0x2e0(0x04)
	None ScreenPercentage; // 0x2e4(0x04)
	None ExtraFOV; // 0x2e8(0x04)
	None DistanceFromPlaneFadeStart; // 0x2ec(0x04)
	None DistanceFromPlaneFadeEnd; // 0x2f0(0x04)
	None DistanceFromPlaneFadeoutStart; // 0x2f4(0x04)
	None DistanceFromPlaneFadeoutEnd; // 0x2f8(0x04)
	None AngleFromPlaneFadeStart; // 0x2fc(0x04)
	None AngleFromPlaneFadeEnd; // 0x300(0x04)
	None bShowPreviewPlane; // 0x304(0x01)
	None bRenderSceneTwoSided; // 0x305(0x01)
	None InfluenceRadiusScale; // 0x2c0(0x04)
	None PreviewInfluenceRadius; // 0x2c8(0x08)
	None PreviewCaptureBox; // 0x2d0(0x08)
	None PlatformChangedToLaptopModeDelegate; // 0xb0(0x10)
	None PlatformChangedToTabletModeDelegate; // 0xc0(0x10)
	None OriginalURL; // 0x28(0x10)
	None responsecode; // 0x38(0x04)
	None Tag; // 0x3c(0x04)
	None StringResponse; // 0x40(0x10)
	None BinaryResponse; // 0x50(0x10)
	None DebugExecBindings; // 0x120(0x10)
	None InvertedAxis; // 0x160(0x10)
	None PointLightComponent; // 0x320(0x08)
	None bUseInverseSquaredFalloff; // 0x398(0x01)
	None LightFalloffExponent; // 0x39c(0x04)
	None SourceRadius; // 0x3a0(0x04)
	None SoftSourceRadius; // 0x3a4(0x04)
	None SourceLength; // 0x3a8(0x04)
	None PoseContainer; // 0x80(0x90)
	None bAdditivePose; // 0x110(0x01)
	None BasePoseIndex; // 0x114(0x04)
	None RetargetSource; // 0x118(0x08)
	None Node; // 0x28(0x08)
	None PoseWatchColour; // 0x30(0x04)
	None Settings; // 0x240(0x5c0)
	None Priority; // 0x800(0x04)
	None BlendRadius; // 0x804(0x04)
	None BlendWeight; // 0x808(0x04)
	None bEnabled; // 0x80c(0x01)
	None bUnbound; // 0x80c(0x01)
	None Settings; // 0x350(0x5c0)
	None Priority; // 0x910(0x04)
	None BlendRadius; // 0x914(0x04)
	None BlendWeight; // 0x918(0x04)
	None bEnabled; // 0x91c(0x01)
	None bUnbound; // 0x91c(0x01)
	None OverrideVisibleActors; // 0x348(0x10)
	None OverrideInvisibleActors; // 0x358(0x10)
	None OverrideInvisibleLevels; // 0x368(0x10)
	None Skeleton; // 0x38(0x08)
	None SkeletalMeshes; // 0x40(0x10)
	None Rules; // 0x30(0x0c)
	None bLabelAssetsInMyDirectory; // 0x3c(0x01)
	None bIsRuntimeLabel; // 0x3c(0x01)
	None ExplicitAssets; // 0x40(0x10)
	None ExplicitBlueprints; // 0x50(0x10)
	None AssetCollection; // 0x60(0x08)
	None ProxyLODMeshReductionModuleName; // 0x38(0x08)
	None ForceComponent; // 0x310(0x08)
	None Radius; // 0x238(0x04)
	None Falloff; // 0x23c(0x01)
	None ImpulseStrength; // 0x240(0x04)
	None bImpulseVelChange; // 0x244(0x01)
	None bIgnoreOwningActor; // 0x244(0x01)
	None ForceStrength; // 0x248(0x04)
	None DestructibleDamage; // 0x24c(0x04)
	None ObjectTypesToAffect; // 0x250(0x10)
	None RectLightComponent; // 0x320(0x08)
	None SourceWidth; // 0x398(0x04)
	None SourceHeight; // 0x39c(0x04)
	None BarnDoorAngle; // 0x3a0(0x04)
	None BarnDoorLength; // 0x3a4(0x04)
	None SourceTexture; // 0x3a8(0x08)
	None bMobileDisableVertexFog; // 0x38(0x01)
	None MaxMobileCascades; // 0x3c(0x04)
	None MobileMSAASampleCount; // 0x40(0x01)
	None bMobileUseLegacyShadingModel; // 0x44(0x01)
	None bMobileAllowDitheredLODTransition; // 0x44(0x01)
	None bMobileAllowSoftwareOcclusionCulling; // 0x44(0x01)
	None bMobileVirtualTextures; // 0x44(0x01)
	None bDiscardUnusedQualityLevels; // 0x44(0x01)
	None bOcclusionCulling; // 0x44(0x01)
	None MinScreenRadiusForLights; // 0x48(0x04)
	None MinScreenRadiusForEarlyZPass; // 0x4c(0x04)
	None MinScreenRadiusForCSMdepth; // 0x50(0x04)
	None bPrecomputedVisibilityWarning; // 0x54(0x01)
	None bUseCullDistanceVolumes; // 0x54(0x01)
	None bTextureStreaming; // 0x54(0x01)
	None bUseDXT5NormalMaps; // 0x54(0x01)
	None bVirtualTextures; // 0x54(0x01)
	None bVirtualTexturedLightmaps; // 0x54(0x01)
	None VirtualTextureTileSize; // 0x58(0x04)
	None VirtualTextureTileBorderSize; // 0x5c(0x04)
	None VirtualTextureFeedbackFactor; // 0x60(0x04)
	None bVirtualTextureEnableCompressZlib; // 0x64(0x01)
	None bVirtualTextureEnableCompressCrunch; // 0x64(0x01)
	None bClearCoatEnableSecondNormal; // 0x64(0x01)
	None bPreIntegratedSkinBRDF; // 0x64(0x01)
	None bAnisotropicBRDF; // 0x64(0x01)
	None ReflectionCaptureResolution; // 0x68(0x04)
	None ReflectionEnvironmentLightmapMixBasedOnRoughness; // 0x6c(0x01)
	None bForwardShading; // 0x6c(0x01)
	None bVertexFoggingForOpaque; // 0x6c(0x01)
	None bAllowStaticLighting; // 0x6c(0x01)
	None bUseNormalMapsForStaticLighting; // 0x6c(0x01)
	None bGenerateMeshDistanceFields; // 0x6c(0x01)
	None bEightBitMeshDistanceFields; // 0x6c(0x01)
	None bGenerateLandscapeGIData; // 0x6c(0x01)
	None bCompressMeshDistanceFields; // 0x6d(0x01)
	None TessellationAdaptivePixelsPerTriangle; // 0x70(0x04)
	None bSeparateTranslucency; // 0x74(0x01)
	None TranslucentSortPolicy; // 0x78(0x01)
	None TranslucentSortAxis; // 0x7c(0x0c)
	None CustomDepthStencil; // 0x88(0x01)
	None bCustomDepthTaaJitter; // 0x8c(0x01)
	None bEnableAlphaChannelInPostProcessing; // 0x90(0x01)
	None bDefaultFeatureBloom; // 0x94(0x01)
	None bDefaultFeatureAmbientOcclusion; // 0x94(0x01)
	None bDefaultFeatureAmbientOcclusionStaticFraction; // 0x94(0x01)
	None bDefaultFeatureAutoExposure; // 0x94(0x01)
	None DefaultFeatureAutoExposure; // 0x98(0x01)
	None DefaultFeatureAutoExposureBias; // 0x9c(0x04)
	None bExtendDefaultLuminanceRangeInAutoExposureSettings; // 0xa0(0x01)
	None bUsePreExposure; // 0xa0(0x01)
	None bEnablePreExposureOnlyInTheEditor; // 0xa0(0x01)
	None bDefaultFeatureMotionBlur; // 0xa0(0x01)
	None bDefaultFeatureLensFlare; // 0xa0(0x01)
	None bTemporalUpsampling; // 0xa0(0x01)
	None bSSGI; // 0xa0(0x01)
	None DefaultFeatureAntiAliasing; // 0xa4(0x01)
	None DefaultLightUnits; // 0xa5(0x01)
	None DefaultBackBufferPixelFormat; // 0xa6(0x01)
	None bRenderUnbuiltPreviewShadowsInGame; // 0xa8(0x01)
	None bStencilForLODDither; // 0xa8(0x01)
	None EarlyZPass; // 0xac(0x01)
	None bEarlyZPassOnlyMaterialMasking; // 0xb0(0x01)
	None bDBuffer; // 0xb0(0x01)
	None ClearSceneMethod; // 0xb4(0x01)
	None bBasePassOutputsVelocity; // 0xb8(0x01)
	None bVertexDeformationOutputsVelocity; // 0xb8(0x01)
	None bSelectiveBasePassOutputs; // 0xb8(0x01)
	None bDefaultParticleCutouts; // 0xb8(0x01)
	None GPUSimulationTextureSizeX; // 0xbc(0x04)
	None GPUSimulationTextureSizeY; // 0xc0(0x04)
	None bGlobalClipPlane; // 0xc4(0x01)
	None GBufferFormat; // 0xc8(0x01)
	None bUseGPUMorphTargets; // 0xcc(0x01)
	None bNvidiaAftermathEnabled; // 0xcc(0x01)
	None bMultiView; // 0xcc(0x01)
	None bMobilePostProcessing; // 0xcc(0x01)
	None bMobileMultiView; // 0xcc(0x01)
	None bMobileUseHWsRGBEncoding; // 0xcc(0x01)
	None bRoundRobinOcclusion; // 0xcc(0x01)
	None bODSCapture; // 0xcc(0x01)
	None bMeshStreaming; // 0xcd(0x01)
	None WireframeCullThreshold; // 0xd0(0x04)
	None bEnableRayTracing; // 0xd4(0x01)
	None bEnableRayTracingTextureLOD; // 0xd4(0x01)
	None bSupportStationarySkylight; // 0xd4(0x01)
	None bSupportLowQualityLightmaps; // 0xd4(0x01)
	None bSupportPointLightWholeSceneShadows; // 0xd4(0x01)
	None bSupportAtmosphericFog; // 0xd4(0x01)
	None bSupportSkyAtmosphere; // 0xd4(0x01)
	None bSupportSkyAtmosphereAffectsHeightFog; // 0xd4(0x01)
	None bSupportSkinCacheShaders; // 0xd5(0x01)
	None DefaultSkinCacheBehavior; // 0xd8(0x01)
	None SkinCacheSceneMemoryLimitInMB; // 0xdc(0x04)
	None bMobileEnableStaticAndCSMShadowReceivers; // 0xe0(0x01)
	None bMobileEnableMovableLightCSMShaderCulling; // 0xe0(0x01)
	None bMobileAllowDistanceFieldShadows; // 0xe0(0x01)
	None bMobileAllowMovableDirectionalLights; // 0xe0(0x01)
	None MobileNumDynamicPointLights; // 0xe4(0x04)
	None bMobileDynamicPointLightsUseStaticBranch; // 0xe8(0x01)
	None bMobileAllowMovableSpotlights; // 0xe8(0x01)
	None bSupport16BitBoneIndex; // 0xe8(0x01)
	None bGPUSkinLimit2BoneInfluences; // 0xe8(0x01)
	None bSupportDepthOnlyIndexBuffers; // 0xe8(0x01)
	None bSupportReversedIndexBuffers; // 0xe8(0x01)
	None bSupportMaterialLayers; // 0xe8(0x01)
	None bLPV; // 0xe8(0x01)
	None bSupportAllShaderPermutations; // 0x38(0x01)
	None bForceRecomputeTangents; // 0x38(0x01)
	None Density; // 0x28(0x04)
	None Diffusion; // 0x2c(0x04)
	None Gain; // 0x30(0x04)
	None GainHF; // 0x34(0x04)
	None DecayTime; // 0x38(0x04)
	None DecayHFRatio; // 0x3c(0x04)
	None ReflectionsGain; // 0x40(0x04)
	None ReflectionsDelay; // 0x44(0x04)
	None LateGain; // 0x48(0x04)
	None LateDelay; // 0x4c(0x04)
	None AirAbsorptionGainHF; // 0x50(0x04)
	None RoomRolloffFactor; // 0x54(0x04)
	None TransformBases; // 0x30(0x10)
	None Nodes; // 0x40(0x10)
	None RotationRate; // 0xf0(0x0c)
	None PivotTranslation; // 0xfc(0x0c)
	None bRotationInLocalSpace; // 0x108(0x01)
	None MaterialType; // 0x28(0x01)
	None bCompressTextures; // 0x29(0x01)
	None bEnable; // 0x2a(0x01)
	None bClearTextures; // 0x2b(0x01)
	None bSinglePhysicalSpace; // 0x2c(0x01)
	None bPrivateSpace; // 0x2d(0x01)
	None bEnableScalability; // 0x2e(0x01)
	None Size; // 0x30(0x04)
	None TileCount; // 0x34(0x04)
	None TileSize; // 0x38(0x04)
	None TileBorderSize; // 0x3c(0x04)
	None StreamLowMips; // 0x40(0x04)
	None StreamingTexture; // 0x48(0x08)
	None bEnableCompressCrunch; // 0x50(0x01)
	None RemoveLowMips; // 0x54(0x04)
	None VirtualTexture; // 0x238(0x08)
	None bUseStreamingLowMipsInEditor; // 0x240(0x01)
	None BoundsSourceActor; // 0x248(0x08)
	None Settings; // 0xe8(0x0c)
	None bSinglePhysicalSpace; // 0xf4(0x01)
	None BuildHash; // 0xf8(0x04)
	None VirtualTextureComponent; // 0x310(0x08)
	None TextureTarget; // 0x2d0(0x08)
	None bCaptureRotation; // 0x2d8(0x01)
	None TextureTargetLeft; // 0x2e0(0x08)
	None TextureTargetRight; // 0x2e8(0x08)
	None TextureTargetODS; // 0x2f0(0x08)
	None IPD; // 0x2f8(0x04)
	None CaptureComponentCube; // 0x320(0x08)
	None ComponentClass; // 0x28(0x08)
	None ComponentTemplate; // 0x30(0x08)
	None CookedComponentInstancingData; // 0x38(0x48)
	None AttachToName; // 0x80(0x08)
	None ParentComponentOrVariableName; // 0x88(0x08)
	None ParentComponentOwnerClassName; // 0x90(0x08)
	None bIsParentComponentNative; // 0x98(0x01)
	None ChildNodes; // 0xa0(0x10)
	None MetaDataArray; // 0xb0(0x10)
	None VariableGuid; // 0xc0(0x10)
	None InternalVariableName; // 0xd0(0x08)
	None bUpdateStatNet; // 0x310(0x01)
	None bOverwriteClientStats; // 0x311(0x01)
	None Channels; // 0x314(0x04)
	None InRate; // 0x318(0x04)
	None OutRate; // 0x31c(0x04)
	None MaxPacketOverhead; // 0x324(0x04)
	None InRateClientMax; // 0x328(0x04)
	None InRateClientMin; // 0x32c(0x04)
	None InRateClientAvg; // 0x330(0x04)
	None InPacketsClientMax; // 0x334(0x04)
	None InPacketsClientMin; // 0x338(0x04)
	None InPacketsClientAvg; // 0x33c(0x04)
	None OutRateClientMax; // 0x340(0x04)
	None OutRateClientMin; // 0x344(0x04)
	None OutRateClientAvg; // 0x348(0x04)
	None OutPacketsClientMax; // 0x34c(0x04)
	None OutPacketsClientMin; // 0x350(0x04)
	None OutPacketsClientAvg; // 0x354(0x04)
	None NetNumClients; // 0x358(0x04)
	None InPackets; // 0x35c(0x04)
	None OutPackets; // 0x360(0x04)
	None InBunches; // 0x364(0x04)
	None OutBunches; // 0x368(0x04)
	None OutLoss; // 0x36c(0x04)
	None InLoss; // 0x370(0x04)
	None VoiceBytesSent; // 0x374(0x04)
	None VoiceBytesRecv; // 0x378(0x04)
	None VoicePacketsSent; // 0x37c(0x04)
	None VoicePacketsRecv; // 0x380(0x04)
	None PercentInVoice; // 0x384(0x04)
	None PercentOutVoice; // 0x388(0x04)
	None NumActorChannels; // 0x38c(0x04)
	None NumConsideredActors; // 0x390(0x04)
	None PrioritizedActors; // 0x394(0x04)
	None NumRelevantActors; // 0x398(0x04)
	None NumRelevantDeletedActors; // 0x39c(0x04)
	None NumReplicatedActorAttempts; // 0x3a0(0x04)
	None NumReplicatedActors; // 0x3a4(0x04)
	None NumActors; // 0x3a8(0x04)
	None NumNetActors; // 0x3ac(0x04)
	None NumDormantActors; // 0x3b0(0x04)
	None NumInitiallyDormantActors; // 0x3b4(0x04)
	None NumNetGUIDsAckd; // 0x3b8(0x04)
	None NumNetGUIDsPending; // 0x3bc(0x04)
	None NumNetGUIDsUnAckd; // 0x3c0(0x04)
	None ObjPathBytes; // 0x3c4(0x04)
	None NetGUIDOutRate; // 0x3c8(0x04)
	None NetGUIDInRate; // 0x3cc(0x04)
	None NetSaturated; // 0x3d0(0x04)
	None ShadowmapFlags; // 0xe8(0x01)
	None RootNodes; // 0x28(0x10)
	None AllNodes; // 0x38(0x10)
	None DefaultSceneRootNode; // 0x48(0x08)
	None MinLOD; // 0x30(0x04)
	None DisableBelowMinLodStripping; // 0x34(0x01)
	None bSupportLODStreaming; // 0x35(0x01)
	None MaxNumStreamedLODs; // 0x38(0x04)
	None MaxNumOptionalLODs; // 0x3c(0x04)
	None LODGroups; // 0x40(0x10)
	None SkeletalMeshReductionModuleName; // 0x38(0x08)
	None SocketName; // 0x28(0x08)
	None BoneName; // 0x30(0x08)
	None RelativeLocation; // 0x38(0x0c)
	None RelativeRotation; // 0x44(0x0c)
	None RelativeScale; // 0x50(0x0c)
	None bForceAlwaysAnimated; // 0x5c(0x01)
	None TransformMode; // 0x238(0x01)
	None BottomRadius; // 0x23c(0x04)
	None GroundAlbedo; // 0x240(0x04)
	None AtmosphereHeight; // 0x244(0x04)
	None MultiScatteringFactor; // 0x248(0x04)
	None RayleighScatteringScale; // 0x24c(0x04)
	None RayleighScattering; // 0x250(0x10)
	None RayleighExponentialDistribution; // 0x260(0x04)
	None MieScatteringScale; // 0x264(0x04)
	None MieScattering; // 0x268(0x10)
	None MieAbsorptionScale; // 0x278(0x04)
	None MieAbsorption; // 0x27c(0x10)
	None MieAnisotropy; // 0x28c(0x04)
	None MieExponentialDistribution; // 0x290(0x04)
	None OtherAbsorptionScale; // 0x294(0x04)
	None OtherAbsorption; // 0x298(0x10)
	None OtherTentDistribution; // 0x2a8(0x0c)
	None SkyLuminanceFactor; // 0x2b4(0x10)
	None AerialPespectiveViewDistanceScale; // 0x2c4(0x04)
	None HeightFogContribution; // 0x2c8(0x04)
	None TransmittanceMinLightElevationAngle; // 0x2cc(0x04)
	None bStaticLightingBuiltGUID; // 0x2f4(0x10)
	None SkyAtmosphereComponent; // 0x310(0x08)
	None SourceType; // 0x270(0x01)
	None Cubemap; // 0x278(0x08)
	None SourceCubemapAngle; // 0x280(0x04)
	None CubemapResolution; // 0x284(0x04)
	None SkyDistanceThreshold; // 0x288(0x04)
	None bCaptureEmissiveOnly; // 0x28c(0x01)
	None bLowerHemisphereIsBlack; // 0x28d(0x01)
	None LowerHemisphereColor; // 0x290(0x10)
	None bAffectDynamicIndirectLighting; // 0x2a0(0x01)
	None OcclusionMaxDistance; // 0x2a4(0x04)
	None Contrast; // 0x2a8(0x04)
	None OcclusionExponent; // 0x2ac(0x04)
	None OcclusionFoliageTint; // 0x2b0(0x04)
	None MinOcclusion; // 0x2b4(0x04)
	None OcclusionBarkTint; // 0x2b8(0x04)
	None OcclusionTint; // 0x2bc(0x04)
	None OcclusionCombineMode; // 0x2c0(0x01)
	None SpecularOcclusionMode; // 0x2c1(0x01)
	None SpecularOcclusionStrength; // 0x2c4(0x04)
	None SelfShadowBiasForObjectAO; // 0x2c8(0x04)
	None OcclusionTranslucencyForTwoSidedFoliages; // 0x2cc(0x04)
	None BlendDestinationCubemap; // 0x388(0x08)
	None Brush; // 0x28(0x88)
	None Attenuation; // 0x28(0x3a0)
	None Properties; // 0x28(0x58)
	None ChildClasses; // 0x80(0x10)
	None PassiveSoundMixModifiers; // 0x90(0x10)
	None Modulation; // 0xa0(0x10)
	None ParentClass; // 0xb0(0x08)
	None Concurrency; // 0x28(0x20)
	None bPrimeOnLoad; // 0x160(0x01)
	None FirstNode; // 0x168(0x08)
	None VolumeMultiplier; // 0x170(0x04)
	None PitchMultiplier; // 0x174(0x04)
	None AttenuationOverrides; // 0x178(0x3a0)
	None SubtitlePriority; // 0x518(0x04)
	None bOverrideAttenuation; // 0x520(0x01)
	None bExcludeFromRandomNodeBranchCulling; // 0x520(0x01)
	None CookedQualityIndex; // 0x524(0x04)
	None bHasPlayWhenSilent; // 0x528(0x01)
	None Chain; // 0x28(0x10)
	None bPlayEffectChainTails; // 0x38(0x01)
	None SoundGroupProfiles; // 0x28(0x10)
	None bApplyEQ; // 0x28(0x01)
	None EQPriority; // 0x2c(0x04)
	None EQSettings; // 0x30(0x40)
	None SoundClassEffects; // 0x70(0x10)
	None InitialDelay; // 0x80(0x04)
	None FadeInTime; // 0x84(0x04)
	None Duration; // 0x88(0x04)
	None FadeOutTime; // 0x8c(0x04)
	None ChildNodes; // 0x28(0x10)
	None AttenuationSettings; // 0x48(0x08)
	None AttenuationOverrides; // 0x50(0x3a0)
	None bOverrideAttenuation; // 0x3f0(0x01)
	None BoolParameterName; // 0x48(0x08)
	None InputVolume; // 0x48(0x10)
	None DelayMin; // 0x48(0x04)
	None DelayMax; // 0x4c(0x04)
	None DialogueWaveParameter; // 0x48(0x20)
	None bLooping; // 0x68(0x01)
	None CrossFadeInput; // 0x48(0x10)
	None DopplerIntensity; // 0x48(0x04)
	None bUseSmoothing; // 0x4c(0x01)
	None SmoothingInterpSpeed; // 0x50(0x04)
	None LoopStart; // 0x48(0x04)
	None LoopEnd; // 0x4c(0x04)
	None DurationAfterLoop; // 0x50(0x04)
	None LoopCount; // 0x54(0x04)
	None bLoopIndefinitely; // 0x58(0x01)
	None bLoop; // 0x58(0x01)
	None VolumeInterpCurve; // 0x60(0x08)
	None PitchInterpCurve; // 0x68(0x08)
	None VolumeCurve; // 0x70(0x88)
	None PitchCurve; // 0xf8(0x88)
	None PitchMin; // 0x180(0x04)
	None PitchMax; // 0x184(0x04)
	None VolumeMin; // 0x188(0x04)
	None VolumeMax; // 0x18c(0x04)
	None GroupSizes; // 0x48(0x10)
	None LoopCount; // 0x48(0x04)
	None bLoopIndefinitely; // 0x4c(0x01)
	None InputVolume; // 0x48(0x10)
	None PitchMin; // 0x48(0x04)
	None PitchMax; // 0x4c(0x04)
	None VolumeMin; // 0x50(0x04)
	None VolumeMax; // 0x54(0x04)
	None PitchModulationParams; // 0x48(0x20)
	None VolumeModulationParams; // 0x68(0x20)
	None bModulateVolume; // 0x48(0x01)
	None bModulatePitch; // 0x48(0x01)
	None AmplitudeMin; // 0x4c(0x04)
	None AmplitudeMax; // 0x50(0x04)
	None FrequencyMin; // 0x54(0x04)
	None FrequencyMax; // 0x58(0x04)
	None OffsetMin; // 0x5c(0x04)
	None OffsetMax; // 0x60(0x04)
	None CenterMin; // 0x64(0x04)
	None CenterMax; // 0x68(0x04)
	None ParamName; // 0x58(0x08)
	None Weights; // 0x48(0x10)
	None HasBeenUsed; // 0x58(0x10)
	None NumRandomUsed; // 0x68(0x04)
	None PreselectAtLevelLoad; // 0x6c(0x04)
	None bShouldExcludeFromBranchCulling; // 0x70(0x01)
	None bSoundCueExcludedFromBranchCulling; // 0x70(0x01)
	None bRandomizeWithoutReplacement; // 0x70(0x01)
	None SoundClassOverride; // 0x48(0x08)
	None IntParameterName; // 0x48(0x08)
	None WaveParameterName; // 0x48(0x08)
	None SoundWaveAssetPtr; // 0x48(0x28)
	None SoundWave; // 0x70(0x08)
	None bLooping; // 0x78(0x01)
	None SourceBusChannels; // 0x308(0x01)
	None SourceBusDuration; // 0x30c(0x04)
	None bAutoDeactivateWhenSilent; // 0x310(0x01)
	None ChildSubmixes; // 0x28(0x10)
	None ParentSubmix; // 0x38(0x08)
	None bMuteWhenBackgrounded; // 0x40(0x01)
	None SubmixEffectChain; // 0x48(0x10)
	None AmbisonicsPluginSettings; // 0x58(0x08)
	None EnvelopeFollowerAttackTime; // 0x60(0x04)
	None EnvelopeFollowerReleaseTime; // 0x64(0x04)
	None OutputVolume; // 0x68(0x04)
	None OnSubmixRecordedFileDone; // 0x70(0x10)
	None SoundfieldEncodingFormat; // 0x40(0x08)
	None EncodingSettings; // 0x48(0x08)
	None SoundfieldEffectChain; // 0x50(0x10)
	None EncodingSettingsClass; // 0x60(0x08)
	None EndpointType; // 0x38(0x08)
	None EndpointSettingsClass; // 0x40(0x08)
	None EndpointSettings; // 0x48(0x08)
	None SoundfieldEndpointType; // 0x38(0x08)
	None EndpointSettingsClass; // 0x40(0x08)
	None EndpointSettings; // 0x48(0x08)
	None EncodingSettingsClass; // 0x50(0x08)
	None EncodingSettings; // 0x58(0x08)
	None SoundfieldEffectChain; // 0x60(0x10)
	None bIgnoreTimeDilation; // 0x150(0x01)
	None DrawCaptureRadius; // 0x318(0x08)
	None InfluenceRadius; // 0x2c0(0x04)
	None CaptureDistanceScale; // 0x2c4(0x04)
	None PreviewInfluenceRadius; // 0x2c8(0x08)
	None SplineMeshComponent; // 0x310(0x08)
	None SplineParams; // 0x558(0x58)
	None SplineUpDir; // 0x5b0(0x0c)
	None SplineBoundaryMin; // 0x5bc(0x04)
	None CachedMeshBodySetupGuid; // 0x5c0(0x10)
	None BodySetup; // 0x5d0(0x08)
	None SplineBoundaryMax; // 0x5d8(0x04)
	None bAllowSplineEditingPerInstance; // 0x5dc(0x01)
	None bSmoothInterpRollScale; // 0x5dc(0x01)
	None bMeshDirty; // 0x5dc(0x01)
	None ForwardAxis; // 0x5dd(0x01)
	None VirtualTextureMainPassMaxDrawDistance; // 0x5e0(0x04)
	None InnerConeAngle; // 0x3b0(0x04)
	None OuterConeAngle; // 0x3b4(0x04)
	None LightShaftConeAngle; // 0x3b8(0x04)
	None bUsePCSS; // 0x3bc(0x01)
	None PCSSSharpness; // 0x3c0(0x04)
	None PCSSContrast; // 0x3c4(0x04)
	None TargetArmLength; // 0x238(0x04)
	None SocketOffset; // 0x23c(0x0c)
	None TargetOffset; // 0x248(0x0c)
	None ProbeSize; // 0x254(0x04)
	None ProbeChannel; // 0x258(0x01)
	None bDoCollisionTest; // 0x25c(0x01)
	None bUsePawnControlRotation; // 0x25c(0x01)
	None bInheritPitch; // 0x25c(0x01)
	None bInheritYaw; // 0x25c(0x01)
	None bInheritRoll; // 0x25c(0x01)
	None bEnableCameraLag; // 0x25c(0x01)
	None bEnableCameraRotationLag; // 0x25c(0x01)
	None bUseCameraLagSubstepping; // 0x25c(0x01)
	None bDrawDebugLagMarkers; // 0x25d(0x01)
	None CameraLagSpeed; // 0x260(0x04)
	None CameraRotationLagSpeed; // 0x264(0x04)
	None CameraLagMaxTimeStep; // 0x268(0x04)
	None CameraLagMaxDistance; // 0x26c(0x04)
	None bUseAsOccluderForSoftwareOcclusion; // 0x60(0x01)
	None LODGroup; // 0x64(0x08)
	None MeshStreamingGroup; // 0x6c(0x08)
	None MinLOD; // 0x80(0x04)
	None LpvBiasMultiplier; // 0x84(0x04)
	None StaticMaterials; // 0x88(0x10)
	None LightmapUVDensity; // 0x98(0x04)
	None LightMapResolution; // 0x9c(0x04)
	None LightMapCoordinateIndex; // 0xa0(0x04)
	None DistanceFieldSelfShadowBias; // 0xa4(0x04)
	None BodySetup; // 0xa8(0x08)
	None LODForCollision; // 0xb0(0x04)
	None bGenerateMeshDistanceField; // 0xb4(0x01)
	None bStripComplexCollisionForConsole; // 0xb4(0x01)
	None bHasNavigationData; // 0xb4(0x01)
	None bSupportUniformlyDistributedSampling; // 0xb4(0x01)
	None bSupportPhysicalMaterialMasks; // 0xb4(0x01)
	None bIsBuiltAtRuntime; // 0xb4(0x01)
	None bAllowCPUAccess; // 0xb4(0x01)
	None bSupportGpuUniformlyDistributedSampling; // 0xb5(0x01)
	None Sockets; // 0xd8(0x10)
	None PositiveBoundsExtension; // 0xf8(0x0c)
	None NegativeBoundsExtension; // 0x104(0x0c)
	None ExtendedBounds; // 0x110(0x1c)
	None ElementToIgnoreForTexFactor; // 0x12c(0x04)
	None AssetUserData; // 0x130(0x10)
	None EditableMesh; // 0x148(0x08)
	None NavCollision; // 0x150(0x08)
	None SocketName; // 0x28(0x08)
	None RelativeLocation; // 0x30(0x0c)
	None RelativeRotation; // 0x3c(0x0c)
	None RelativeScale; // 0x48(0x0c)
	None Tag; // 0x58(0x10)
	None bLiveTexture; // 0x238(0x01)
	None bSupportsDepth; // 0x238(0x01)
	None bNoAlphaChannel; // 0x238(0x01)
	None Texture; // 0x240(0x08)
	None LeftTexture; // 0x248(0x08)
	None bQuadPreserveTextureRatio; // 0x250(0x01)
	None QuadSize; // 0x254(0x08)
	None UVRect; // 0x25c(0x14)
	None CylinderRadius; // 0x270(0x04)
	None CylinderOverlayArc; // 0x274(0x04)
	None CylinderHeight; // 0x278(0x04)
	None EquirectProps; // 0x27c(0x48)
	None StereoLayerType; // 0x2c4(0x01)
	None StereoLayerShape; // 0x2c5(0x01)
	None Shape; // 0x2c8(0x08)
	None Priority; // 0x2d0(0x04)
	None Radius; // 0x28(0x04)
	None OverlayArc; // 0x2c(0x04)
	None Height; // 0x30(0x04)
	None LeftUVRect; // 0x28(0x14)
	None RightUVRect; // 0x3c(0x14)
	None LeftScale; // 0x50(0x08)
	None RightScale; // 0x58(0x08)
	None LeftBias; // 0x60(0x08)
	None RightBias; // 0x68(0x08)
	None Settings; // 0x28(0x8c)
	None SubUVTexture; // 0x28(0x08)
	None SubImages_Horizontal; // 0x30(0x04)
	None SubImages_Vertical; // 0x34(0x04)
	None BoundingMode; // 0x38(0x01)
	None OpacitySourceMode; // 0x39(0x01)
	None AlphaThreshold; // 0x3c(0x04)
	None FrameDelay; // 0x28(0x04)
	None FrameRate; // 0x30(0x08)
	None bGenerateFullFrame; // 0x38(0x01)
	None bUseHighPerformanceClock; // 0x39(0x01)
	None DefaultedText; // 0x28(0x18)
	None UndefaultedText; // 0x40(0x18)
	None TransientText; // 0x58(0x18)
	None TextRender; // 0x310(0x08)
	None Text; // 0x4b8(0x18)
	None TextMaterial; // 0x4d0(0x08)
	None Font; // 0x4d8(0x08)
	None HorizontalAlignment; // 0x4e0(0x01)
	None VerticalAlignment; // 0x4e1(0x01)
	None TextRenderColor; // 0x4e4(0x04)
	None XScale; // 0x4e8(0x04)
	None YScale; // 0x4ec(0x04)
	None WorldSize; // 0x4f0(0x04)
	None InvDefaultSize; // 0x4f4(0x04)
	None HorizSpacingAdjust; // 0x4f8(0x04)
	None VertSpacingAdjust; // 0x4fc(0x04)
	None bAlwaysRenderAsText; // 0x500(0x01)
	None Brightness; // 0xe8(0x04)
	None TextureMultiplier; // 0xec(0x04)
	None SizeX; // 0xc0(0x04)
	None ClearColor; // 0xc4(0x10)
	None OverrideFormat; // 0xd4(0x01)
	None bHDR; // 0xd5(0x01)
	None bForceLinearGamma; // 0xd5(0x01)
	None TheTimeline; // 0xb0(0x98)
	None bIgnoreTimeDilation; // 0x148(0x01)
	None TimelineLength; // 0x28(0x04)
	None LengthMode; // 0x2c(0x01)
	None bAutoPlay; // 0x2d(0x01)
	None bLoop; // 0x2d(0x01)
	None bReplicated; // 0x2d(0x01)
	None bIgnoreTimeDilation; // 0x2d(0x01)
	None EventTracks; // 0x30(0x10)
	None FloatTracks; // 0x40(0x10)
	None VectorTracks; // 0x50(0x10)
	None LinearColorTracks; // 0x60(0x10)
	None MetaDataArray; // 0x70(0x10)
	None TimelineGuid; // 0x80(0x10)
	None VariableName; // 0x90(0x08)
	None DirectionPropertyName; // 0x98(0x08)
	None UpdateFunctionName; // 0xa0(0x08)
	None FinishedFunctionName; // 0xa8(0x08)
	None FrictionScale; // 0x30(0x04)
	None Controls; // 0x28(0x10)
	None ActiveOpacity; // 0x38(0x04)
	None InactiveOpacity; // 0x3c(0x04)
	None TimeUntilDeactive; // 0x40(0x04)
	None TimeUntilReset; // 0x44(0x04)
	None ActivationDelay; // 0x48(0x04)
	None bPreventRecenter; // 0x4c(0x01)
	None StartupDelay; // 0x50(0x04)
	None CollisionComponent; // 0x310(0x08)
	None DisplayNameMap; // 0x60(0x50)
	None status; // 0xc0(0x01)
	None Guid; // 0xc4(0x10)
	None RenderFocusRule; // 0x38(0x01)
	None HardwareCursors; // 0x40(0x50)
	None SoftwareCursors; // 0x90(0x50)
	None DefaultCursor; // 0xe0(0x18)
	None TextEditBeamCursor; // 0xf8(0x18)
	None CrosshairsCursor; // 0x110(0x18)
	None HandCursor; // 0x128(0x18)
	None GrabHandCursor; // 0x140(0x18)
	None GrabHandClosedCursor; // 0x158(0x18)
	None SlashedCircleCursor; // 0x170(0x18)
	None ApplicationScale; // 0x188(0x04)
	None UIScaleRule; // 0x18c(0x01)
	None CustomScalingRuleClass; // 0x190(0x18)
	None UIScaleCurve; // 0x1a8(0x88)
	None bAllowHighDPIInGameMode; // 0x230(0x01)
	None bLoadWidgetsOnDedicatedServer; // 0x231(0x01)
	None CursorClasses; // 0x238(0x10)
	None CustomScalingRuleClassInstance; // 0x248(0x08)
	None CustomScalingRule; // 0x250(0x08)
	None Bounds; // 0x28(0x1c)
	None Intensity; // 0x44(0x04)
	None Texture; // 0x48(0x08)
	None ConstructionOp; // 0x50(0x01)
	None VolumeSizeX; // 0x54(0x04)
	None VolumeSizeY; // 0x58(0x04)
	None VolumeSizeZ; // 0x5c(0x04)
	None SubImagesX; // 0x60(0x04)
	None SubImagesY; // 0x64(0x04)
	None FrameCount; // 0x68(0x04)
	None FramesPerSecond; // 0x6c(0x04)
	None bLoop; // 0x70(0x01)
	None NoiseField; // 0x78(0x08)
	None NoiseScale; // 0x80(0x04)
	None NoiseMax; // 0x84(0x04)
	None VectorField; // 0x4b8(0x08)
	None Intensity; // 0x4c0(0x04)
	None Tightness; // 0x4c4(0x04)
	None bPreviewVectorField; // 0x4c8(0x01)
	None SizeX; // 0x48(0x04)
	None SizeY; // 0x4c(0x04)
	None SizeZ; // 0x50(0x04)
	None bAllowCPUAccess; // 0x54(0x01)
	None CPUData; // 0x80(0x10)
	None VectorFieldComponent; // 0x310(0x08)
	None TypeToLayer; // 0xe8(0x10)
	None DefaultSizeInMegabyte; // 0x28(0x04)
	None Pools; // 0x30(0x10)
	None Settings; // 0xb0(0x18)
	None AllowedMipLevelRange; // 0x348(0x08)
	None Component; // 0x310(0x08)
	None Strength; // 0x238(0x04)
	None Speed; // 0x23c(0x04)
	None MinGustAmount; // 0x240(0x04)
	None MaxGustAmount; // 0x244(0x04)
	None Radius; // 0x248(0x04)
	None bPointWind; // 0x24c(0x01)
	None TilesStreaming; // 0x130(0x10)
	None TilesStreamingTimeThreshold; // 0x140(0x08)
	None bLoadAllTilesDuringCinematic; // 0x148(0x01)
	None bRebaseOriginIn3DSpace; // 0x149(0x01)
	None RebaseOriginDistance; // 0x14c(0x04)
	None bApplyMinStreamingPriorityToLOD; // 0x150(0x01)
	None bApplyStreamingDistanceScaleToLOD; // 0x151(0x01)
	None DevFilterRule; // 0x158(0x10)
	None HierarchicalLODSetup; // 0x28(0x10)
	None OverrideBaseMaterial; // 0x38(0x28)
	None NumLOD; // 0x28(0x04)
	None LOD1; // 0x2c(0x13c)
	None LOD2; // 0x168(0x13c)
	None LOD3; // 0x2a4(0x13c)
	None LOD4; // 0x3e0(0x13c)
	None UberGraphFrame; // 0xf0(0x08)
	None PlayerController; // 0xf8(0x08)
	None bAlreadySetOptionWidget; // 0x100(0x01)
	None defaultContrast; // 0x104(0x04)
	None defaultMaxBrightness; // 0x108(0x04)
	None defaultMinBrightness; // 0x10c(0x04)
	None MinBrightness; // 0x110(0x04)
	None MaxBrightness; // 0x114(0x04)
	None Contrast; // 0x118(0x04)
	None bUsePostProcessVolumeOption; // 0x11c(0x01)
	None ColorGradingGlobalGamma; // 0x120(0x04)
	None FilmToeIntensity; // 0x124(0x04)
	None IsInWidget; // 0x128(0x01)
	None bInputModeUI; // 0x129(0x01)
	None InputActionsToBlock; // 0x130(0x10)
	None ObjectUID; // 0x238(0x10)
	None UserIndex; // 0x248(0x04)
	None AutoPinType; // 0x24c(0x01)
	None bShouldPinActor; // 0x24d(0x01)
	None PinDataClass; // 0x250(0x08)
	None OnPersistentEntityPinned; // 0x258(0x10)
	None OnPersistentEntityPinLost; // 0x268(0x10)
	None PinnedCFUID; // 0x278(0x10)
	None PinnedSceneComponent; // 0x288(0x08)
	None PinData; // 0x290(0x08)
	None UpdateCheckFrequency; // 0x28(0x04)
	None OnUpdatedEventTriggerDelta; // 0x2c(0x10)
	None PinnedID; // 0x28(0x10)
	None ComponentWorldTransform; // 0x40(0x30)
	None PinTransform; // 0x70(0x30)
	None bIsPassthrough; // 0x1b40(0x01)
	None Type; // 0x28(0x01)
	None ByteValue; // 0x29(0x01)
	None IntegerValue; // 0x2c(0x04)
	None LongBytesValue; // 0x30(0x08)
	None FloatValue; // 0x38(0x04)
	None DoubleBytesValue; // 0x40(0x08)
	None BooleanValue; // 0x48(0x01)
	None StringUtf8Value; // 0x50(0x10)
	None ByteArrayValue; // 0x60(0x10)
	None IntegerArrayValue; // 0x70(0x10)
	None LongBytesArrayValue; // 0x80(0x10)
	None FloatArrayValue; // 0x90(0x10)
	None DoubleBytesArrayValue; // 0xa0(0x10)
	None BooleanArrayValue; // 0xb0(0x10)
	None StringUtf8ArrayValue; // 0xc0(0x10)
	None Bytes; // 0x28(0x10)
	None Position; // 0x38(0x04)
	None CurrentByte; // 0x3c(0x01)
	None CurrentBytePosition; // 0x40(0x04)
	None Bytes; // 0x28(0x10)
	None CurrentByte; // 0x38(0x01)
	None CurrentBytePosition; // 0x3c(0x04)
	None ByteArray; // 0x28(0x10)
	None Type; // 0x28(0x01)
	None ByteValue; // 0x29(0x01)
	None IntegerValue; // 0x2c(0x04)
	None LongBytesValue; // 0x30(0x08)
	None FloatValue; // 0x38(0x04)
	None DoubleBytesValue; // 0x40(0x08)
	None BooleanValue; // 0x48(0x01)
	None StringUtf8Value; // 0x50(0x10)
	None ByteArrayValue; // 0x60(0x10)
	None IntegerArrayValue; // 0x70(0x10)
	None LongBytesArrayValue; // 0x80(0x10)
	None FloatArrayValue; // 0x90(0x10)
	None DoubleBytesArrayValue; // 0xa0(0x10)
	None BooleanArrayValue; // 0xb0(0x10)
	None StringUtf8ArrayValue; // 0xc0(0x10)
	None Bytes; // 0x28(0x10)
	None Position; // 0x38(0x04)
	None Bytes; // 0x28(0x10)
	None Bytes; // 0x28(0x10)
	None Count; // 0x28(0x04)
	None Next; // 0x2c(0x01)
	None Finished; // 0x28(0x01)
	None Result; // 0x29(0x01)
	None KeepAliveCount; // 0x2c(0x04)
	None Finished; // 0x28(0x01)
	None Result; // 0x2c(0x04)
	None KeepAliveCount; // 0x30(0x04)
	None Finished; // 0x28(0x01)
	None Result; // 0x2c(0x04)
	None KeepAliveCount; // 0x30(0x04)
	None Finished; // 0x28(0x01)
	None KeepAliveCount; // 0x2c(0x04)
	None Finished; // 0x28(0x01)
	None Result; // 0x30(0x08)
	None KeepAliveCount; // 0x38(0x04)
	None Finished; // 0x28(0x01)
	None Result; // 0x30(0x10)
	None KeepAliveCount; // 0x40(0x04)
	None Bytes; // 0x28(0x10)
	None Valid; // 0x28(0x01)
	None Resource; // 0x30(0x10)
	None Date; // 0x40(0x08)
	None Bits; // 0x48(0x04)
	None SpinVelocity; // 0x30(0x04)
	None RotationInterpSpeed; // 0x34(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None B_Value; // 0x250(0x08)
	None Check; // 0x258(0x08)
	None G_Value; // 0x260(0x08)
	None Image_166; // 0x268(0x08)
	None Land; // 0x270(0x08)
	None Land_2; // 0x278(0x08)
	None Land_3; // 0x280(0x08)
	None Land_4; // 0x288(0x08)
	None Land_5; // 0x290(0x08)
	None Land_6; // 0x298(0x08)
	None R_5; // 0x2a0(0x08)
	None R_7; // 0x2a8(0x08)
	None R_9; // 0x2b0(0x08)
	None R_Value; // 0x2b8(0x08)
	None TextBlock_4; // 0x2c0(0x08)
	None TextBlock_5; // 0x2c8(0x08)
	None TextBlock_6; // 0x2d0(0x08)
	None TextBlock_8; // 0x2d8(0x08)
	None TextBlock_9; // 0x2e0(0x08)
	None TextBlock_10; // 0x2e8(0x08)
	None Timer; // 0x2f0(0x08)
	None NamedInterfaces; // 0x28(0x10)
	None NamedInterfaceDefs; // 0x38(0x10)
	None DestructibleComponent; // 0x310(0x08)
	None OnActorFracture; // 0x318(0x10)
	None bFractureEffectOverride; // 0x700(0x01)
	None FractureEffects; // 0x708(0x10)
	None bEnableHardSleeping; // 0x718(0x01)
	None LargeChunkThreshold; // 0x71c(0x04)
	None OnComponentFracture; // 0x730(0x10)
	None OnFractureEffectSpawned; // 0x740(0x10)
	None CellSiteCount; // 0x28(0x04)
	None FractureMaterialDesc; // 0x2c(0x24)
	None RandomSeed; // 0x50(0x04)
	None VoronoiSites; // 0x58(0x10)
	None OriginalSubmeshCount; // 0x68(0x04)
	None Materials; // 0x70(0x10)
	None ChunkParameters; // 0x80(0x10)
	None DefaultDestructibleParameters; // 0x380(0x88)
	None FractureEffects; // 0x408(0x10)
	None SocketErrorDisconnectDelay; // 0x1af0(0x04)
	None LogPortUnreach; // 0x748(0x01)
	None AllowPlayerPortUnreach; // 0x748(0x01)
	None MaxPortCountToTry; // 0x74c(0x04)
	None ServerDesiredSocketReceiveBufferBytes; // 0x75c(0x04)
	None ServerDesiredSocketSendBufferBytes; // 0x760(0x04)
	None ClientDesiredSocketReceiveBufferBytes; // 0x764(0x04)
	None ClientDesiredSocketSendBufferBytes; // 0x768(0x04)
	None MaxSecondsInReceive; // 0x770(0x08)
	None NbPacketsBetweenReceiveTimeTest; // 0x778(0x04)
	None ResolutionConnectionTimeout; // 0x77c(0x04)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None BeaconConnectionInitialTimeout; // 0x318(0x04)
	None BeaconConnectionTimeout; // 0x31c(0x04)
	None NetDriver; // 0x320(0x08)
	None BeaconOwner; // 0x340(0x08)
	None BeaconConnection; // 0x348(0x08)
	None ConnectionState; // 0x350(0x01)
	None ListenPort; // 0x340(0x04)
	None ClientActors; // 0x348(0x10)
	None BeaconTypeName; // 0x310(0x10)
	None ClientBeaconActorClass; // 0x320(0x08)
	None ClientActors; // 0x328(0x10)
	None VoiceSubsystemNameOverride; // 0x28(0x08)
	None bOnlinePIEEnabled; // 0x38(0x01)
	None Logins; // 0x40(0x10)
	None bIsFromInvite; // 0x188(0x01)
	None bHandlingDisconnect; // 0x189(0x01)
	None DestSessionId; // 0x3d0(0x10)
	None PendingReservation; // 0x3e0(0x50)
	None RequestType; // 0x430(0x01)
	None bPendingReservationSent; // 0x431(0x01)
	None bCancelReservation; // 0x432(0x01)
	None State; // 0x338(0x08)
	None bLogoutOnSessionTimeout; // 0x3a0(0x01)
	None SessionTimeoutSecs; // 0x3a4(0x04)
	None TravelSessionTimeoutSecs; // 0x3a8(0x04)
	None SessionName; // 0x28(0x08)
	None NumConsumedReservations; // 0x30(0x04)
	None MaxReservations; // 0x34(0x04)
	None NumTeams; // 0x38(0x04)
	None NumPlayersPerTeam; // 0x3c(0x04)
	None TeamAssignmentMethod; // 0x40(0x08)
	None ReservedHostTeamNum; // 0x48(0x04)
	None ForceTeamNum; // 0x4c(0x04)
	None bRestrictCrossConsole; // 0x50(0x01)
	None bEnableRemovalRequests; // 0x51(0x01)
	None Reservations; // 0x58(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None DestSessionId; // 0x3d0(0x10)
	None PendingReservation; // 0x3e0(0x78)
	None RequestType; // 0x458(0x01)
	None bPendingReservationSent; // 0x459(0x01)
	None bCancelReservation; // 0x45a(0x01)
	None State; // 0x338(0x08)
	None bLogoutOnSessionTimeout; // 0x3a0(0x01)
	None SessionTimeoutSecs; // 0x3a4(0x04)
	None TravelSessionTimeoutSecs; // 0x3a8(0x04)
	None SessionName; // 0x28(0x08)
	None NumConsumedReservations; // 0x30(0x04)
	None MaxReservations; // 0x34(0x04)
	None bRestrictCrossConsole; // 0x38(0x01)
	None Reservations; // 0x40(0x10)
	None ShowPerkSlot; // 0x30(0x01)
	None Image_1294; // 0x2f8(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None HorizontalBox; // 0x250(0x08)
	None HorizontalBox_2; // 0x258(0x08)
	None Image; // 0x260(0x08)
	None Image_2; // 0x268(0x08)
	None Image_3; // 0x270(0x08)
	None Image_4; // 0x278(0x08)
	None Image_5; // 0x280(0x08)
	None Image_6; // 0x288(0x08)
	None Image_7; // 0x290(0x08)
	None Image_8; // 0x298(0x08)
	None Image_9; // 0x2a0(0x08)
	None Image_10; // 0x2a8(0x08)
	None Image_11; // 0x2b0(0x08)
	None Image_12; // 0x2b8(0x08)
	None Image_13; // 0x2c0(0x08)
	None Image_14; // 0x2c8(0x08)
	None Image_15; // 0x2d0(0x08)
	None Image_72; // 0x2d8(0x08)
	None Image_164; // 0x2e0(0x08)
	None Image_352; // 0x2e8(0x08)
	None Image_659; // 0x2f0(0x08)
	None Overlay_4; // 0x2f8(0x08)
	None SizeBox; // 0x300(0x08)
	None SizeBox_54; // 0x308(0x08)
	None T_WeaponType; // 0x310(0x08)
	None TextBlock_176; // 0x318(0x08)
	None TextBlock_258; // 0x320(0x08)
	None TextBlock_331; // 0x328(0x08)
	None WidgetSwitcher_1; // 0x330(0x08)
	None ItemInfo; // 0x338(0x08)
	None ItemDetailInfo; // 0x340(0x490)
	None LocalText; // 0x7d0(0x18)
	None bIsSmallIcon; // 0x7e8(0x01)
	None ListenerCode; // 0x38(0x08)
	None Host; // 0x40(0x10)
	None Port; // 0x50(0x04)
	None PortUdp; // 0x54(0x04)
	None SendingBytes; // 0x58(0x10)
	None ReceivedBytes; // 0x68(0x10)
	None ReceivingBuffer; // 0x78(0x10)
	None CanCallOnDisconnect; // 0x98(0x01)
	None OnConnectEvent; // 0x9c(0x10)
	None OnDisconnectEvent; // 0xac(0x10)
	None OnReceiveMessageEvent; // 0xbc(0x10)
	None OnReceiveUnreliableMessageEvent; // 0xcc(0x10)
	None Stopped; // 0x28(0x01)
	None RunExec; // 0x29(0x01)
	None ConnectionSuccess; // 0x2a(0x01)
	None JustConnected; // 0x38(0x01)
	None WaitingForConnectionTime; // 0x3c(0x04)
	None SocketConnection; // 0x40(0x08)
	None LatentUUID; // 0x48(0x04)
	None ListenerCode; // 0x38(0x08)
	None Host; // 0x40(0x10)
	None Port; // 0x50(0x04)
	None PortUdp; // 0x54(0x04)
	None NextConnectionValidationFunctionCallId; // 0x58(0x04)
	None NextFunctionCallId; // 0x5c(0x04)
	None NextLatentFunctionCallId; // 0xb0(0x04)
	None SendingBytes; // 0x108(0x10)
	None ReceivedBytes; // 0x118(0x10)
	None ReceivingBuffer; // 0x128(0x10)
	None ReceivingType; // 0x139(0x01)
	None ReceivingFunctionCallId; // 0x13c(0x04)
	None ReceivingPacketSize; // 0x140(0x04)
	None ReceivingPacket; // 0x148(0x10)
	None WaitingForConnectionValidationResponse; // 0x168(0x01)
	None ConnectionValidationResponseTime; // 0x16c(0x04)
	None ConnectionValidationDelayTime; // 0x170(0x04)
	None LatentFunctionConnectionValidationDelayTime; // 0x174(0x04)
	None ConnectionValidationFunctionCallId; // 0x178(0x04)
	None PeriodicConnectionValidationEnabled; // 0x17c(0x01)
	None CanCallOnDisconnect; // 0x17d(0x01)
	None OnConnectEvent; // 0x180(0x10)
	None OnDisconnectEvent; // 0x190(0x10)
	None OnReceiveMessageEvent; // 0x1a0(0x10)
	None OnReceiveUnreliableMessageEvent; // 0x1b0(0x10)
	None Stopped; // 0x28(0x01)
	None RunExec; // 0x29(0x01)
	None ConnectionSuccess; // 0x2a(0x01)
	None JustConnected; // 0x38(0x01)
	None WaitingForConnectionTime; // 0x3c(0x04)
	None SocketConnection; // 0x40(0x08)
	None LatentUUID; // 0x48(0x04)
	None UberGraphFrame; // 0x270(0x08)
	None BT_PlayerName; // 0x278(0x08)
	None PB_HP; // 0x280(0x08)
	None T_PlayerName; // 0x288(0x08)
	None T_PlayerNameHighlight; // 0x290(0x08)
	None T_SortInfo; // 0x298(0x08)
	None bIsTargetPawn; // 0x2a0(0x01)
	None bIsAlive; // 0x2a1(0x01)
	None Target; // 0x30(0x08)
	None StateName; // 0x38(0x08)
	None Timer; // 0x40(0x04)
	None Repeat; // 0x44(0x01)
	None TimerHandle; // 0x48(0x08)
	None OnSuccess; // 0x50(0x10)
	None OnAborted; // 0x60(0x10)
	None Target; // 0x30(0x08)
	None StateID; // 0x38(0x01)
	None Timer; // 0x3c(0x04)
	None Repeat; // 0x40(0x01)
	None TimerHandle; // 0x48(0x08)
	None OnSuccess; // 0x50(0x10)
	None OnAborted; // 0x60(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None StateName; // 0x3c(0x08)
	None Timer; // 0x44(0x04)
	None Repeat; // 0x48(0x01)
	None TimerHandle; // 0x50(0x08)
	None OnSuccess; // 0x58(0x10)
	None OnAborted; // 0x68(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None StateID; // 0x39(0x01)
	None Timer; // 0x3c(0x04)
	None Repeat; // 0x40(0x01)
	None TimerHandle; // 0x48(0x08)
	None OnSuccess; // 0x50(0x10)
	None OnAborted; // 0x60(0x10)
	None Target; // 0x30(0x08)
	None InBegin; // 0x38(0x10)
	None InExit; // 0x48(0x10)
	None StateName; // 0x58(0x08)
	None Timer; // 0x60(0x04)
	None Repeat; // 0x64(0x01)
	None TimerHandle; // 0x68(0x08)
	None OnSuccess; // 0x70(0x10)
	None OnAborted; // 0x80(0x10)
	None Target; // 0x30(0x08)
	None InBegin; // 0x38(0x10)
	None InExit; // 0x48(0x10)
	None StateID; // 0x58(0x01)
	None Timer; // 0x5c(0x04)
	None Repeat; // 0x60(0x01)
	None TimerHandle; // 0x68(0x08)
	None OnSuccess; // 0x70(0x10)
	None OnAborted; // 0x80(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None InBegin; // 0x3c(0x10)
	None InExit; // 0x4c(0x10)
	None StateName; // 0x5c(0x08)
	None Timer; // 0x64(0x04)
	None Repeat; // 0x68(0x01)
	None TimerHandle; // 0x70(0x08)
	None OnSuccess; // 0x78(0x10)
	None OnAborted; // 0x88(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None InBegin; // 0x3c(0x10)
	None InExit; // 0x4c(0x10)
	None StateID; // 0x5c(0x01)
	None Timer; // 0x60(0x04)
	None Repeat; // 0x64(0x01)
	None TimerHandle; // 0x68(0x08)
	None OnSuccess; // 0x70(0x10)
	None OnAborted; // 0x80(0x10)
	None Target; // 0x30(0x08)
	None Timer; // 0x38(0x04)
	None TimerHandle; // 0x40(0x08)
	None OnSuccess; // 0x48(0x10)
	None OnAborted; // 0x58(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None FallbackState; // 0x3c(0x08)
	None Timer; // 0x44(0x04)
	None TimerHandle; // 0x48(0x08)
	None OnSuccess; // 0x50(0x10)
	None OnAborted; // 0x60(0x10)
	None Target; // 0x30(0x08)
	None InBegin; // 0x38(0x10)
	None InExit; // 0x48(0x10)
	None Timer; // 0x58(0x04)
	None TimerHandle; // 0x60(0x08)
	None OnSuccess; // 0x68(0x10)
	None OnAborted; // 0x78(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None InBegin; // 0x3c(0x10)
	None InExit; // 0x4c(0x10)
	None InFallback; // 0x5c(0x10)
	None FallbackState; // 0x6c(0x08)
	None Timer; // 0x74(0x04)
	None TimerHandle; // 0x78(0x08)
	None OnSuccess; // 0x80(0x10)
	None OnAborted; // 0x90(0x10)
	None FSM; // 0x98(0x08)
	None TargetFSM; // 0xa0(0x08)
	None NewStateName; // 0xa8(0x08)
	None Debug; // 0xb0(0x01)
	None ForceSuccess; // 0xb1(0x01)
	None FSM; // 0x98(0x08)
	None TargetFSM; // 0xa0(0x08)
	None StateName; // 0xa8(0x08)
	None Debug; // 0xb0(0x01)
	None ForceSuccess; // 0xb1(0x01)
	None FSM; // 0x98(0x08)
	None TargetFSM; // 0xa0(0x08)
	None StateName; // 0xa8(0x08)
	None Debug; // 0xb0(0x01)
	None ForceSuccess; // 0xb1(0x01)
	None FSM; // 0x98(0x08)
	None TargetFSM; // 0xa0(0x08)
	None StateName; // 0xa8(0x08)
	None Debug; // 0xb0(0x01)
	None ForceSuccess; // 0xb1(0x01)
	None SGUID; // 0x28(0x10)
	None PlayerId; // 0x38(0x04)
	None Owner; // 0x3c(0x08)
	None StateGraph; // 0x58(0x10)
	None MachineTime; // 0x68(0x04)
	None _OnEntry; // 0x70(0x10)
	None _OnExit; // 0x80(0x10)
	None MachineData; // 0x90(0x50)
	None EnableInterfaceStatePropagation; // 0x28(0x01)
	None SuppressRPCWarnings; // 0x29(0x01)
	None DefaultTickInterval; // 0x2c(0x04)
	None DefaultStates; // 0x30(0x10)
	None MachineStack; // 0x30(0x10)
	None FSM; // 0x268(0x08)
	None OverrideFSM; // 0x270(0x01)
	None TargetFSM; // 0x274(0x08)
	None TargetASM; // 0x27c(0x08)
	None FSM_ExitArguments; // 0xb8(0x0c)
	None FSM_BeginArguments; // 0xc4(0x0c)
	None FSM_UpdateArguments; // 0xd0(0x08)
	None IsOverriden; // 0xe0(0x01)
	None IsFullyInitialized; // 0xe1(0x01)
	None StateID; // 0xe2(0x01)
	None PreviousStateID; // 0xe3(0x01)
	None StateTime; // 0xe4(0x04)
	None STATE_Null; // 0xe8(0x40)
	None State; // 0x128(0x50)
	None InBegin; // 0x178(0x10)
	None InUpdate; // 0x188(0x10)
	None InExit; // 0x198(0x10)
	None StartupState; // 0x1a8(0x08)
	None States; // 0x1b0(0x10)
	None LINKS; // 0x1c0(0x50)
	None UseEnumFromCPP; // 0x210(0x01)
	None CPP_EnumName; // 0x218(0x10)
	None K2_Enumerator; // 0x228(0x08)
	None ReplicationMode; // 0x230(0x01)
	None BlueprintAutoFlowFSM; // 0x231(0x01)
	None BlueprintAutoFlowTransitions; // 0x232(0x01)
	None AlwaysTickFSM; // 0x233(0x01)
	None ReplicateStateID; // 0x234(0x01)
	None ReplicatePreviousStateID; // 0x235(0x01)
	None ReplicateStateTime; // 0x236(0x01)
	None Debug; // 0x237(0x01)
	None OnInitialized; // 0x238(0x10)
	None OnBegin; // 0x248(0x10)
	None OnUpdate; // 0x258(0x10)
	None OnExit; // 0x268(0x10)
	None UberGraphFrame; // 0x250(0x08)
	None Bg; // 0x258(0x08)
	None btn_Cancel; // 0x260(0x08)
	None btn_OK; // 0x268(0x08)
	None Image_2; // 0x270(0x08)
	None Overlay_2; // 0x278(0x08)
	None TextBlock_1; // 0x280(0x08)
	None TextBlock_17; // 0x288(0x08)
	None TextBlock_18; // 0x290(0x08)
	None TextBlock_19; // 0x298(0x08)
	None PopupType; // 0x2a0(0x01)
	None SettingWidget; // 0x2a8(0x08)
	None CurrentSelectIndex; // 0x2b0(0x04)
	None CurrentSelectType; // 0x2b4(0x01)
	None BackupSlots; // 0x2b8(0x10)
	None Timer; // 0x2c8(0x08)
	None TimerCount; // 0x2d0(0x04)
	None UniqueKey; // 0x320(0x10)
	None SideActors; // 0x330(0x10)
	None SideMeshes; // 0x340(0x10)
	None SplineMeshAxis; // 0x310(0x01)
	None LocalOffset; // 0x314(0x0c)
	None Father; // 0x320(0x08)
	None UniqueKey; // 0x328(0x10)
	None Spline; // 0x338(0x08)
	None Index; // 0x340(0x04)
	None Segmentation; // 0x344(0x04)
	None StepGeneration; // 0x348(0x04)
	None Size; // 0x34c(0x04)
	None RoadMesh; // 0x350(0x08)
	None RoadMeshesComp; // 0x358(0x10)
	None SideActors; // 0x368(0x10)
	None SideMeshes; // 0x378(0x10)
	None SideCurbs; // 0x388(0x10)
	None TextBlock_Gold; // 0x248(0x08)
	None TextBlock_Title; // 0x250(0x08)
	None ColorType1; // 0x258(0x28)
	None ColorType2; // 0x280(0x28)
	None bAutoDestroy; // 0x238(0x01)
	None bStopWhenOwnerDestroyed; // 0x238(0x01)
	None bAllowSpatialization; // 0x238(0x01)
	None bOverrideAttenuation; // 0x238(0x01)
	None bOutputToBusOnly; // 0x23c(0x01)
	None AttenuationSettings; // 0x240(0x08)
	None AttenuationOverrides; // 0x248(0x3a0)
	None ConcurrencySettings; // 0x5e8(0x08)
	None ConcurrencySet; // 0x5f0(0x50)
	None SoundClass; // 0x640(0x08)
	None SourceEffectChain; // 0x648(0x08)
	None SoundSubmix; // 0x650(0x08)
	None SoundSubmixSends; // 0x658(0x10)
	None BusSends; // 0x668(0x10)
	None Modulation; // 0x678(0x10)
	None PreEffectBusSends; // 0x688(0x10)
	None bIsUISound; // 0x698(0x01)
	None bIsPreviewSound; // 0x698(0x01)
	None EnvelopeFollowerAttackTime; // 0x69c(0x04)
	None EnvelopeFollowerReleaseTime; // 0x6a0(0x04)
	None OnAudioEnvelopeValue; // 0x6a8(0x10)
	None Synth; // 0x6d8(0x08)
	None AudioComponent; // 0x6e0(0x08)
	None Settings; // 0xb8(0x50)
	None Settings; // 0x78(0x10)
	None Settings; // 0x9c(0x34)
	None Settings; // 0xa0(0x38)
	None OwningSynthComponent; // 0x360(0x08)
	None playerName; // 0x80(0x08)
	None FilePath; // 0x88(0x10)
	None PrecacheFile; // 0x98(0x01)
	None MediaTexture; // 0xb0(0x08)
	None MediaPlayer; // 0xb8(0x08)
	None OnEndReached; // 0x28(0x10)
	None OnMediaClosed; // 0x38(0x10)
	None OnMediaOpened; // 0x48(0x10)
	None OnMediaOpenFailed; // 0x58(0x10)
	None OnPlaybackResumed; // 0x68(0x10)
	None OnPlaybackSuspended; // 0x78(0x10)
	None OnSeekCompleted; // 0x88(0x10)
	None OnTracksChanged; // 0x98(0x10)
	None CacheAhead; // 0xa8(0x08)
	None CacheBehind; // 0xb0(0x08)
	None CacheBehindGame; // 0xb8(0x08)
	None NativeAudioOut; // 0xc0(0x01)
	None PlayOnOpen; // 0xc1(0x01)
	None Shuffle; // 0xc4(0x01)
	None Loop; // 0xc4(0x01)
	None Playlist; // 0xc8(0x08)
	None PlaylistIndex; // 0xd0(0x04)
	None TimeDelay; // 0xd8(0x08)
	None HorizontalFieldOfView; // 0xe0(0x04)
	None VerticalFieldOfView; // 0xe4(0x04)
	None ViewRotation; // 0xe8(0x0c)
	None playerGUID; // 0x120(0x10)
	None OwnerWidget; // 0x138(0x08)
	None Items; // 0x28(0x10)
	None Channels; // 0x710(0x04)
	None DynamicRateAdjustment; // 0x714(0x01)
	None RateAdjustmentFactor; // 0x718(0x04)
	None RateAdjustmentRange; // 0x71c(0x10)
	None MediaPlayer; // 0x730(0x08)
	None AddressX; // 0xb8(0x01)
	None AddressY; // 0xb9(0x01)
	None AutoClear; // 0xba(0x01)
	None ClearColor; // 0xbc(0x10)
	None EnableGenMips; // 0xcc(0x01)
	None NumMips; // 0xcd(0x01)
	None MediaPlayer; // 0xd0(0x08)
	None MediaSource; // 0x80(0x08)
	None StreamUrl; // 0x88(0x10)
	None bUseTimeSynchronization; // 0x88(0x01)
	None FrameDelay; // 0x8c(0x04)
	None TimeDelay; // 0x90(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Canvas_Recipe1; // 0x250(0x08)
	None Canvas_Recipe2; // 0x258(0x08)
	None UW-Lobby_Craft_Recipe_Weapon; // 0x260(0x08)
	None UW-Lobby_Weapon_Recipe_Item_2; // 0x268(0x08)
	None UW-Lobby_Weapon_Recipe_Item_3; // 0x270(0x08)
	None UW-Lobby_Weapon_Recipe_Item_4; // 0x278(0x08)
	None UW-Lobby_Weapon_Recipe_Item_5; // 0x280(0x08)
	None UW-Lobby_Weapon_Recipe_Item_6; // 0x288(0x08)
	None UW-Lobby_Weapon_Recipe_Item_7; // 0x290(0x08)
	None UW-Lobby_Weapon_Recipe_Item_8; // 0x298(0x08)
	None UW-Lobby_Weapon_Recipe_Item_9; // 0x2a0(0x08)
	None UW-Lobby_Weapon_Recipe_Item_10; // 0x2a8(0x08)
	None UW-Lobby_Weapon_Recipe_Item_11; // 0x2b0(0x08)
	None WidgetSwitcher_68; // 0x2b8(0x08)
	None Recipe_ItemArray; // 0x2c0(0x10)
	None Recipe_ItemArray2; // 0x2d0(0x10)
	None HasWeapon; // 0x2e0(0x01)
	None ArmoryInputRef; // 0x2e8(0x08)
	None CurrentOpacity; // 0x2f0(0x04)
	None GridNode; // 0x5c8(0x08)
	None SpatializedClasses; // 0x5d0(0x10)
	None NonSpatializedChildClasses; // 0x5e0(0x10)
	None AlwaysRelevantNode; // 0x5f0(0x08)
	None ExplicitlySetClasses; // 0x940(0x10)
	None LastViewer; // 0x50(0x08)
	None LastViewTarget; // 0x58(0x08)
	None PingCounter; // 0xb0(0x04)
	None bEnabled; // 0xb4(0x01)
	None PlayerState; // 0xb8(0x08)
	None MediaSource; // 0xe0(0x08)
	None bLoop; // 0xe8(0x01)
	None MediaSource; // 0xe0(0x08)
	None bLooping; // 0xe8(0x01)
	None StartFrameOffset; // 0xec(0x04)
	None MediaTexture; // 0xf0(0x08)
	None MediaSoundComponent; // 0xf8(0x08)
	None bUseExternalMediaPlayer; // 0x100(0x01)
	None ExternalMediaPlayer; // 0x108(0x08)
	None MediaSections; // 0x58(0x10)
	None SpotLight1; // 0x3d8(0x08)
	None FrameRateOverride; // 0x88(0x08)
	None ProxyOverride; // 0x90(0x10)
	None SequencePath; // 0xa0(0x10)
	None NodeName; // 0x30(0x10)
	None TreeAsset; // 0x40(0x08)
	None ParentNode; // 0x48(0x08)
	None Services; // 0x58(0x10)
	None bIgnoreRestartSelf; // 0x68(0x01)
	None BlackboardKey; // 0x70(0x28)
	None bStartAILogicOnPossess; // 0x3e8(0x01)
	None bStopAILogicOnUnposses; // 0x3e8(0x01)
	None bLOSflag; // 0x3e8(0x01)
	None bSkipExtraLOSChecks; // 0x3e8(0x01)
	None bAllowStrafe; // 0x3e8(0x01)
	None bWantsPlayerState; // 0x3e8(0x01)
	None bSetControlRotationFromPawnOrientation; // 0x3e8(0x01)
	None PathFollowingComponent; // 0x3f0(0x08)
	None BrainComponent; // 0x3f8(0x08)
	None PerceptionComponent; // 0x400(0x08)
	None ActionsComp; // 0x408(0x08)
	None Blackboard; // 0x410(0x08)
	None CachedGameplayTasksComponent; // 0x418(0x08)
	None DefaultNavigationFilterClass; // 0x420(0x08)
	None ReceiveMoveCompleted; // 0x428(0x10)
	None Interval; // 0x60(0x04)
	None RandomDeviation; // 0x64(0x04)
	None bCallTickOnSearchStart; // 0x68(0x01)
	None bRestartTimerOnEachActivation; // 0x68(0x01)
	None OnSuccess; // 0x28(0x10)
	None OnFail; // 0x38(0x10)
	None ParamName; // 0x28(0x08)
	None FloatValue; // 0x30(0x04)
	None IntValue; // 0x34(0x04)
	None BoolValue; // 0x38(0x01)
	None Min; // 0x40(0x04)
	None MAX; // 0x44(0x04)
	None bInteger; // 0x48(0x01)
	None SensesConfig; // 0xb0(0x10)
	None DominantSense; // 0xc0(0x08)
	None AIOwner; // 0xd8(0x08)
	None OnPerceptionUpdated; // 0x160(0x10)
	None OnTargetPerceptionUpdated; // 0x170(0x10)
	None bAutoRegisterAsSource; // 0xb0(0x01)
	None RegisterAsSourceForSenses; // 0xb8(0x10)
	None AISystem; // 0x30(0x08)
	None Senses; // 0x88(0x10)
	None PerceptionAgingRate; // 0x98(0x04)
	None DefaultExpirationAge; // 0x28(0x04)
	None NotifyType; // 0x2c(0x01)
	None bWantsNewPawnNotification; // 0x30(0x01)
	None bAutoRegisterAllPawnsAsSources; // 0x30(0x01)
	None PerceptionSystemInstance; // 0x38(0x08)
	None ListenerDataType; // 0x80(0x08)
	None ListenerContainer; // 0x88(0x10)
	None UnprocessedEvents; // 0x98(0x10)
	None RegisteredEvents; // 0x80(0x10)
	None NoiseEvents; // 0x80(0x10)
	None SpeedOfSoundSq; // 0x90(0x04)
	None RegisteredEvents; // 0x80(0x10)
	None MaxTracesPerTick; // 0x148(0x04)
	None MinQueriesPerTimeSliceCheck; // 0x14c(0x04)
	None MaxTimeSlicePerTick; // 0x150(0x08)
	None HighImportanceQueryDistanceThreshold; // 0x158(0x04)
	None MaxQueryImportance; // 0x160(0x04)
	None SightLimitQueryImportance; // 0x164(0x04)
	None RegisteredEvents; // 0x80(0x10)
	None RegisteredEvents; // 0x80(0x10)
	None DebugColor; // 0x28(0x04)
	None MaxAge; // 0x2c(0x04)
	None bStartsEnabled; // 0x30(0x01)
	None Implementation; // 0x48(0x08)
	None Implementation; // 0x48(0x08)
	None Implementation; // 0x48(0x08)
	None HearingRange; // 0x50(0x04)
	None LoSHearingRange; // 0x54(0x04)
	None bUseLoSHearing; // 0x58(0x01)
	None DetectionByAffiliation; // 0x5c(0x04)
	None Implementation; // 0x48(0x08)
	None SightRadius; // 0x50(0x04)
	None LoseSightRadius; // 0x54(0x04)
	None PeripheralVisionAngleDegrees; // 0x58(0x04)
	None DetectionByAffiliation; // 0x5c(0x04)
	None AutoSuccessRangeFromLastSeenLocation; // 0x60(0x04)
	None Event; // 0x28(0x30)
	None Event; // 0x28(0x30)
	None PerceptionSystemClassName; // 0x58(0x18)
	None HotSpotManagerClassName; // 0x70(0x18)
	None AcceptanceRadius; // 0x88(0x04)
	None PathfollowingRegularPathPointAcceptanceRadius; // 0x8c(0x04)
	None PathfollowingNavLinkAcceptanceRadius; // 0x90(0x04)
	None bFinishMoveOnGoalOverlap; // 0x94(0x01)
	None bAcceptPartialPaths; // 0x95(0x01)
	None bAllowStrafing; // 0x96(0x01)
	None bEnableBTAITasks; // 0x97(0x01)
	None bAllowControllersAsEQSQuerier; // 0x98(0x01)
	None bEnableDebuggerPlugin; // 0x99(0x01)
	None bForgetStaleActors; // 0x9a(0x01)
	None DefaultSightCollisionChannel; // 0x9b(0x01)
	None BehaviorTreeManager; // 0xa0(0x08)
	None EnvironmentQueryManager; // 0xa8(0x08)
	None PerceptionSystem; // 0xb0(0x08)
	None AllProxyObjects; // 0xb8(0x10)
	None HotSpotManager; // 0xc8(0x08)
	None NavLocalGrids; // 0xd0(0x08)
	None OwnerController; // 0x68(0x08)
	None OnRequestFailed; // 0x70(0x10)
	None OnMoveFinished; // 0x80(0x10)
	None MoveRequest; // 0x90(0x40)
	None RootNode; // 0x30(0x08)
	None BlackboardAsset; // 0x38(0x08)
	None RootDecorators; // 0x40(0x10)
	None RootDecoratorOps; // 0x50(0x10)
	None BlackboardComp; // 0xb8(0x08)
	None AIOwner; // 0xc0(0x08)
	None NodeInstances; // 0x130(0x10)
	None DefaultBehaviorTreeAsset; // 0x268(0x08)
	None MaxDebuggerSteps; // 0x28(0x04)
	None LoadedTemplates; // 0x30(0x10)
	None ActiveComponents; // 0x40(0x10)
	None BrainComp; // 0xb0(0x08)
	None DefaultBlackboardAsset; // 0xb8(0x08)
	None BlackboardAsset; // 0xc0(0x08)
	None KeyInstances; // 0xe8(0x10)
	None Parent; // 0x30(0x08)
	None Keys; // 0x38(0x10)
	None bHasSynchronizedKeys; // 0x48(0x01)
	None BaseClass; // 0x30(0x08)
	None EnumType; // 0x30(0x08)
	None EnumName; // 0x38(0x10)
	None bIsEnumNameValid; // 0x48(0x01)
	None EnumName; // 0x30(0x10)
	None EnumType; // 0x40(0x08)
	None BaseClass; // 0x30(0x08)
	None StringValue; // 0x30(0x10)
	None Children; // 0x58(0x10)
	None Services; // 0x68(0x10)
	None bApplyDecoratorScope; // 0x88(0x01)
	None FinishMode; // 0x90(0x01)
	None bInverseCondition; // 0x60(0x01)
	None FlowAbortMode; // 0x64(0x01)
	None BlackboardKey; // 0x68(0x28)
	None IntValue; // 0x90(0x04)
	None FloatValue; // 0x94(0x04)
	None StringValue; // 0x98(0x10)
	None CachedDescription; // 0xa8(0x10)
	None OperationType; // 0xb8(0x01)
	None NotifyObserver; // 0xb9(0x01)
	None AIOwner; // 0x68(0x08)
	None ActorOwner; // 0x70(0x08)
	None ObservedKeyNames; // 0x78(0x10)
	None bShowPropertyDetails; // 0x98(0x01)
	None bCheckConditionOnlyBlackBoardChanges; // 0x98(0x01)
	None bIsObservingBB; // 0x98(0x01)
	None ActorToCheck; // 0x68(0x28)
	None TagsToMatch; // 0x90(0x01)
	None GameplayTags; // 0x98(0x20)
	None CachedDescription; // 0xb8(0x10)
	None Operator; // 0x68(0x01)
	None BlackboardKeyA; // 0x70(0x28)
	None BlackboardKeyB; // 0x98(0x28)
	None ConeHalfAngle; // 0x68(0x04)
	None ConeOrigin; // 0x70(0x28)
	None ConeDirection; // 0x98(0x28)
	None Observed; // 0xc0(0x28)
	None CoolDownTime; // 0x68(0x04)
	None BlackboardKeyA; // 0x68(0x28)
	None BlackboardKeyB; // 0x90(0x28)
	None bUseSelf; // 0xb8(0x01)
	None PathQueryType; // 0xbc(0x01)
	None FilterClass; // 0xc0(0x08)
	None AcceptableRadius; // 0x90(0x04)
	None ParametrizedAcceptableRadius; // 0x98(0x38)
	None GeometricDistanceType; // 0xd0(0x01)
	None bUseParametrizedRadius; // 0xd4(0x01)
	None bUseNavAgentGoalLocation; // 0xd4(0x01)
	None bPathFindingBasedTest; // 0xd4(0x01)
	None TestClass; // 0x90(0x08)
	None ConeHalfAngle; // 0x68(0x04)
	None ConeOrigin; // 0x70(0x28)
	None Observed; // 0x98(0x28)
	None bUseSelfAsOrigin; // 0xc0(0x01)
	None bUseSelfAsObserved; // 0xc0(0x01)
	None NumLoops; // 0x68(0x04)
	None bInfiniteLoop; // 0x6c(0x01)
	None InfiniteLoopTimeoutTime; // 0x70(0x04)
	None CooldownTag; // 0x68(0x08)
	None CooldownDuration; // 0x70(0x04)
	None bAddToExistingDuration; // 0x74(0x01)
	None CooldownTag; // 0x68(0x08)
	None CooldownDuration; // 0x70(0x04)
	None bAddToExistingDuration; // 0x74(0x01)
	None bActivatesCooldown; // 0x75(0x01)
	None TimeLimit; // 0x68(0x04)
	None BlackboardKey; // 0x70(0x28)
	None AIOwner; // 0x70(0x08)
	None ActorOwner; // 0x78(0x08)
	None bShowPropertyDetails; // 0x90(0x01)
	None bShowEventDetails; // 0x90(0x01)
	None FocusPriority; // 0x98(0x01)
	None EQSRequest; // 0x98(0x48)
	None AIOwner; // 0x70(0x08)
	None ActorOwner; // 0x78(0x08)
	None TickInterval; // 0x80(0x08)
	None bShowPropertyDetails; // 0xa0(0x01)
	None Result; // 0x70(0x01)
	None bWaitForGameplayTask; // 0x70(0x01)
	None Loudnes; // 0x70(0x04)
	None AcceptableRadius; // 0x98(0x04)
	None FilterClass; // 0xa0(0x08)
	None ObservedBlackboardValueTolerance; // 0xa8(0x04)
	None bObserveBlackboardValue; // 0xac(0x01)
	None bAllowStrafe; // 0xac(0x01)
	None bAllowPartialPath; // 0xac(0x01)
	None bTrackMovingGoal; // 0xac(0x01)
	None bProjectGoalLocation; // 0xac(0x01)
	None bReachTestIncludesAgentRadius; // 0xac(0x01)
	None bReachTestIncludesGoalRadius; // 0xac(0x01)
	None bStopOnOverlap; // 0xac(0x01)
	None bStopOnOverlapNeedsUpdate; // 0xad(0x01)
	None bDisablePathUpdateOnGoalLocationChange; // 0xb0(0x01)
	None bProjectVectorGoalToNavigation; // 0xb0(0x01)
	None bUpdatedDeprecatedProperties; // 0xb0(0x01)
	None AnimationToPlay; // 0x70(0x08)
	None bLooping; // 0x78(0x01)
	None bNonBlocking; // 0x78(0x01)
	None MyOwnerComp; // 0x80(0x08)
	None CachedSkelMesh; // 0x88(0x08)
	None SoundToPlay; // 0x70(0x08)
	None Action; // 0x70(0x08)
	None Precision; // 0x98(0x04)
	None BehaviorAsset; // 0x70(0x08)
	None InjectionTag; // 0x70(0x08)
	None DefaultBehaviorAsset; // 0x78(0x08)
	None BehaviorAsset; // 0x80(0x08)
	None QueryTemplate; // 0x98(0x08)
	None QueryParams; // 0xa0(0x10)
	None QueryConfig; // 0xb0(0x10)
	None RunMode; // 0xc0(0x01)
	None EQSQueryBlackboardKey; // 0xc8(0x28)
	None bUseBBKey; // 0xf0(0x01)
	None EQSRequest; // 0xf8(0x48)
	None CooldownTag; // 0x70(0x08)
	None bAddToExistingDuration; // 0x78(0x01)
	None CooldownDuration; // 0x7c(0x04)
	None WaitTime; // 0x70(0x04)
	None RandomDeviation; // 0x74(0x04)
	None BlackboardKey; // 0x78(0x28)
	None MovementComp; // 0xe8(0x08)
	None MyNavData; // 0xf8(0x08)
	None CharacterMovement; // 0x260(0x08)
	None CrowdAgentMoveDirection; // 0x268(0x0c)
	None MyNavData; // 0x28(0x08)
	None AvoidanceConfig; // 0x30(0x10)
	None SamplingPatterns; // 0x40(0x10)
	None MaxAgents; // 0x50(0x04)
	None MaxAgentRadius; // 0x54(0x04)
	None MaxAvoidedAgents; // 0x58(0x04)
	None MaxAvoidedWalls; // 0x5c(0x04)
	None NavmeshCheckInterval; // 0x60(0x04)
	None PathOptimizationInterval; // 0x64(0x04)
	None SeparationDirClamp; // 0x68(0x04)
	None PathOffsetRadiusMultiplier; // 0x6c(0x04)
	None bResolveCollisions; // 0x70(0x01)
	None QueryName; // 0x30(0x08)
	None options; // 0x38(0x10)
	None VerNum; // 0x28(0x04)
	None OptionName; // 0x30(0x10)
	None ItemType; // 0x40(0x08)
	None bAutoSortTests; // 0x48(0x01)
	None SearchedActorClass; // 0x50(0x08)
	None GenerateOnlyActorsInRadius; // 0x58(0x38)
	None SearchRadius; // 0x90(0x38)
	None SearchCenter; // 0xc8(0x08)
	None GeneratorsActionDescription; // 0x50(0x18)
	None Context; // 0x68(0x08)
	None GeneratedItemType; // 0x70(0x08)
	None Generators; // 0x50(0x10)
	None bAllowDifferentItemTypes; // 0x60(0x01)
	None bHasMatchingItemType; // 0x60(0x01)
	None ForcedItemType; // 0x68(0x08)
	None ProjectionData; // 0x50(0x30)
	None AlignedPointsDistance; // 0x80(0x38)
	None ConeDegrees; // 0xb8(0x38)
	None AngleStep; // 0xf0(0x38)
	None Range; // 0x128(0x38)
	None CenterActor; // 0x160(0x08)
	None bIncludeContextLocation; // 0x168(0x01)
	None QueryContext; // 0x50(0x08)
	None InnerRadius; // 0x80(0x38)
	None OuterRadius; // 0xb8(0x38)
	None NumberOfRings; // 0xf0(0x38)
	None PointsPerRing; // 0x128(0x38)
	None ArcDirection; // 0x160(0x20)
	None ArcAngle; // 0x180(0x38)
	None bUseSpiralPattern; // 0x1b8(0x01)
	None Center; // 0x1c0(0x08)
	None bDefineArc; // 0x1c8(0x01)
	None CircleRadius; // 0x80(0x38)
	None SpaceBetween; // 0xb8(0x38)
	None NumberOfPoints; // 0xf0(0x38)
	None PointOnCircleSpacingMethod; // 0x128(0x01)
	None ArcDirection; // 0x130(0x20)
	None ArcAngle; // 0x150(0x38)
	None AngleRadians; // 0x188(0x04)
	None CircleCenter; // 0x190(0x08)
	None bIgnoreAnyContextActorsWhenGeneratingCircle; // 0x198(0x01)
	None CircleCenterZOffset; // 0x1a0(0x38)
	None TraceData; // 0x1d8(0x30)
	None bDefineArc; // 0x208(0x01)
	None GridSize; // 0x80(0x38)
	None SpaceBetween; // 0xb8(0x38)
	None GenerateAround; // 0xf0(0x08)
	None PathToItem; // 0xf8(0x38)
	None NavigationFilter; // 0x130(0x08)
	None ScanRangeMultiplier; // 0x138(0x38)
	None QueryID; // 0x30(0x04)
	None ItemType; // 0x58(0x08)
	None OptionIndex; // 0x60(0x04)
	None OnQueryFinishedEvent; // 0x68(0x10)
	None InstanceCache; // 0xa8(0x10)
	None LocalContexts; // 0xb8(0x10)
	None GCShieldedWrappers; // 0xc8(0x10)
	None MaxAllowedTestingTime; // 0x12c(0x04)
	None bTestQueriesUsingBreadth; // 0x130(0x01)
	None QueryCountWarningThreshold; // 0x134(0x04)
	None QueryCountWarningInterval; // 0x138(0x08)
	None Generator; // 0x28(0x08)
	None Tests; // 0x30(0x10)
	None TestOrder; // 0x30(0x04)
	None TestPurpose; // 0x34(0x01)
	None TestComment; // 0x38(0x10)
	None MultipleContextFilterOp; // 0x48(0x01)
	None MultipleContextScoreOp; // 0x49(0x01)
	None FilterType; // 0x4a(0x01)
	None BoolValue; // 0x50(0x38)
	None FloatValueMin; // 0x88(0x38)
	None FloatValueMax; // 0xc0(0x38)
	None ScoringEquation; // 0xf9(0x01)
	None ClampMinType; // 0xfa(0x01)
	None ClampMaxType; // 0xfb(0x01)
	None NormalizationType; // 0xfc(0x01)
	None ScoreClampMin; // 0x100(0x38)
	None ScoreClampMax; // 0x138(0x38)
	None ScoringFactor; // 0x170(0x38)
	None ReferenceValue; // 0x1a8(0x38)
	None bDefineReferenceValue; // 0x1e0(0x01)
	None bWorkOnFloatValues; // 0x1f0(0x01)
	None TestMode; // 0x1f8(0x01)
	None DistanceTo; // 0x200(0x08)
	None LineA; // 0x1f8(0x20)
	None LineB; // 0x218(0x20)
	None TestMode; // 0x238(0x01)
	None bAbsoluteValue; // 0x239(0x01)
	None TagQueryToMatch; // 0x1f8(0x48)
	None bUpdatedToUseQuery; // 0x240(0x01)
	None TagsToMatch; // 0x241(0x01)
	None GameplayTags; // 0x248(0x20)
	None OverlapData; // 0x1f8(0x20)
	None TestMode; // 0x1f8(0x01)
	None Context; // 0x200(0x08)
	None PathFromContext; // 0x208(0x38)
	None SkipUnreachable; // 0x240(0x38)
	None FilterClass; // 0x278(0x08)
	None ScanRangeMultiplier; // 0x280(0x38)
	None ProjectionData; // 0x1f8(0x30)
	None TraceData; // 0x1f8(0x30)
	None TraceFromContext; // 0x228(0x38)
	None ItemHeightOffset; // 0x260(0x38)
	None ContextHeightOffset; // 0x298(0x38)
	None Context; // 0x2d0(0x08)
	None VolumeContext; // 0x1f8(0x08)
	None VolumeClass; // 0x200(0x08)
	None bDoComplexVolumeTest; // 0x208(0x01)
	None QueryTemplate; // 0x5e0(0x08)
	None QueryParams; // 0x5e8(0x10)
	None QueryConfig; // 0x5f8(0x10)
	None TimeLimitPerStep; // 0x608(0x04)
	None StepToDebugDraw; // 0x60c(0x04)
	None HighlightMode; // 0x610(0x01)
	None bDrawLabels; // 0x614(0x01)
	None bDrawFailedItems; // 0x614(0x01)
	None bReRunQueryOnlyOnFinishedMove; // 0x614(0x01)
	None bShouldBeVisibleInGame; // 0x614(0x01)
	None bTickDuringGame; // 0x614(0x01)
	None QueryingMode; // 0x618(0x01)
	None NavAgentProperties; // 0x620(0x30)
	None GridManager; // 0x258(0x08)
	None PointLinks; // 0x320(0x10)
	None SegmentLinks; // 0x330(0x10)
	None SmartLinkComp; // 0x340(0x08)
	None bSmartLinkIsRelevant; // 0x348(0x01)
	None OnSmartLinkReached; // 0x350(0x10)
	None ChildAction; // 0x28(0x08)
	None ParentAction; // 0x30(0x08)
	None OwnerComponent; // 0x38(0x08)
	None Instigator; // 0x40(0x08)
	None BrainComp; // 0x48(0x08)
	None bAllowNewSameClassInstance; // 0x80(0x01)
	None bReplaceActiveSameClassInstance; // 0x80(0x01)
	None bShouldPauseMovement; // 0x80(0x01)
	None bAlwaysNotifyOnFinished; // 0x80(0x01)
	None GoalActor; // 0x98(0x08)
	None GoalLocation; // 0xa0(0x0c)
	None AcceptableRadius; // 0xac(0x04)
	None FilterClass; // 0xb0(0x08)
	None bAllowStrafe; // 0xb8(0x01)
	None bFinishOnOverlap; // 0xb8(0x01)
	None bUsePathfinding; // 0xb8(0x01)
	None bAllowPartialPath; // 0xb8(0x01)
	None bProjectGoalToNavigation; // 0xb8(0x01)
	None bUpdatePathToGoal; // 0xb8(0x01)
	None bAbortChildActionOnPathChange; // 0xb8(0x01)
	None ActionToRepeat; // 0x98(0x08)
	None RecentActionCopy; // 0xa0(0x08)
	None ChildFailureHandlingMode; // 0xa8(0x01)
	None ActionSequence; // 0x98(0x10)
	None ChildFailureHandlingMode; // 0xa8(0x01)
	None RecentActionCopy; // 0xb0(0x08)
	None TimeToWait; // 0x98(0x04)
	None ControlledPawn; // 0xb0(0x08)
	None ActionStacks; // 0xb8(0x10)
	None ActionEvents; // 0xc8(0x10)
	None CurrentAction; // 0xd8(0x08)
	None HearingThreshold; // 0xb0(0x04)
	None LOSHearingThreshold; // 0xb4(0x04)
	None SightRadius; // 0xb8(0x04)
	None SensingInterval; // 0xbc(0x04)
	None HearingMaxSoundAge; // 0xc0(0x04)
	None bEnableSensingUpdates; // 0xc4(0x01)
	None bOnlySensePlayers; // 0xc4(0x01)
	None bSeePawns; // 0xc4(0x01)
	None bHearNoises; // 0xc4(0x01)
	None OnSeePawn; // 0xd0(0x10)
	None OnHearNoise; // 0xe0(0x10)
	None PeripheralVisionAngle; // 0xf0(0x04)
	None PeripheralVisionCosine; // 0xf4(0x04)
	None DefaultFrameRate; // 0x28(0x08)
	None CacheBehindPercentage; // 0x30(0x04)
	None CacheSizeGB; // 0x34(0x04)
	None CacheThreads; // 0x38(0x04)
	None CacheThreadStackSizeKB; // 0x3c(0x04)
	None GlobalCacheSizeGB; // 0x40(0x04)
	None UseGlobalCache; // 0x44(0x01)
	None ExrDecoderThreads; // 0x48(0x04)
	None DefaultProxy; // 0x50(0x10)
	None UseDefaultProxy; // 0x60(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Chat Input; // 0x250(0x08)
	None Chat Switcher; // 0x258(0x08)
	None Tab Scrollbox; // 0x260(0x08)
	None Whole Widget Container; // 0x268(0x08)
	None Chat System; // 0x270(0x08)
	None CurrentDialogBox; // 0x278(0x08)
	None Chat Inactivity Hide Delay; // 0x280(0x04)
	None Faded?; // 0x284(0x01)
	None Was Previously Faded?; // 0x285(0x01)
	None Use Autohide?; // 0x286(0x01)
	None Message Character Limit; // 0x288(0x04)
	None Text Input - Inactive Hint Text; // 0x290(0x10)
	None Text Input - Active Hint Text; // 0x2a0(0x10)
	None # Messages to Keep; // 0x2b0(0x04)
	None Clear Messages at # Messages; // 0x2b4(0x04)
	None Show Mouse on Enter?; // 0x2b8(0x01)
	None PackageURL; // 0x38(0x10)
	None ParentFactory; // 0x48(0x08)
	None ImageSources; // 0x50(0x50)
	None CreatedMaterial; // 0xa0(0x08)
	None ConstantCreatedMaterial; // 0xa8(0x08)
	None DynamicCreatedMaterial; // 0xb0(0x08)
	None OutputTextureLinkData; // 0xb8(0x50)
	None OutputInstances; // 0x108(0x50)
	None bIsFrozen; // 0x158(0x01)
	None mGraphInstances; // 0x28(0x10)
	None RelativeSourceFilePath; // 0x50(0x10)
	None AbsoluteSourceFilePath; // 0x60(0x10)
	None SourceFileTimestamp; // 0x70(0x10)
	None GenerationMode; // 0x80(0x01)
	None ConnectedObject; // 0x28(0x08)
	None ParamInfo; // 0x30(0x10)
	None ParentInstance; // 0x40(0x08)
	None CacheGuid; // 0x48(0x10)
	None MemoryBudgetMb; // 0x28(0x04)
	None CPUCores; // 0x2c(0x04)
	None AsyncLoadMipClip; // 0x30(0x04)
	None MaxAsyncSubstancesRenderedPerFrame; // 0x34(0x04)
	None SubstanceEngine; // 0x38(0x01)
	None DefaultSubstanceOutputSizeX; // 0x39(0x01)
	None DefaultSubstanceOutputSizeY; // 0x3a(0x01)
	None DefaultTemplateMaterial; // 0x40(0x28)
	None ParentInstance; // 0x100(0x08)
	None AddressX; // 0x108(0x01)
	None AddressY; // 0x109(0x01)
	None bCooked; // 0x10a(0x01)
	None Owner; // 0x28(0x08)
	None Sounds; // 0x30(0x50)
	None ReadyForBindings; // 0xb0(0x10)
	None BindingsReleased; // 0xc0(0x10)
	None FinishLoad; // 0xd0(0x10)
	None FailLoad; // 0xe0(0x10)
	None StartLoading; // 0xf0(0x10)
	None NavigateTo; // 0x100(0x10)
	None JavaScriptEvent; // 0x110(0x10)
	None UIGTScriptingReady; // 0x120(0x10)
	None LiveViewSizeRequested; // 0x130(0x10)
	None Texture; // 0x158(0x08)
	None Filter; // 0x160(0x01)
	None bReceiveInput; // 0x161(0x01)
	None bReceiveInputWhenTransparent; // 0x162(0x01)
	None AllowPerformanceWarnings; // 0x163(0x01)
	None ExecuteJSTimersThresholdMs; // 0x164(0x04)
	None UpdateStylesAndLayoutThresholdMs; // 0x168(0x04)
	None RecordRenderingCommandsThresholdMs; // 0x16c(0x04)
	None PaintWarningThresholdMs; // 0x170(0x04)
	None LayersCountThreshold; // 0x174(0x04)
	None LayerWidthThreshold; // 0x178(0x04)
	None LayerHeightThreshold; // 0x17c(0x04)
	None bEnableAdditionalDefaultStyles; // 0x180(0x01)
	None bDelayedUpdate; // 0x181(0x01)
	None AudioWrapper; // 0x1f8(0x08)
	None URL; // 0x230(0x10)
	None Width; // 0x240(0x04)
	None Height; // 0x244(0x04)
	None ManualTexture; // 0x248(0x01)
	None ClickThroughAlphaThreshold; // 0x24c(0x04)
	None Transparent; // 0x250(0x01)
	None CoherentUIGTHUD; // 0x400(0x08)
	None HUDMaterialName; // 0x230(0x18)
	None HUDMaterial; // 0x248(0x08)
	None HUDMaterialInstance; // 0x250(0x08)
	None OnCoherentUIGTInputActorMouseButtonDown; // 0x310(0x10)
	None OnCoherentUIGTInputActorMouseButtonUp; // 0x320(0x10)
	None OnCoherentUIGTInputActorKeyDown; // 0x330(0x10)
	None OnCoherentUIGTInputActorKeyUp; // 0x340(0x10)
	None StructTypes; // 0xa8(0x10)
	None EventName; // 0x28(0x10)
	None LinkName; // 0xb0(0x10)
	None Texture; // 0xc0(0x08)
	None EnableLiveReload; // 0x28(0x01)
	None InspectorPort; // 0x2c(0x04)
	None WebdriverPort; // 0x30(0x04)
	None EnableWebSecurity; // 0x34(0x01)
	None EnableLocalization; // 0x35(0x01)
	None RunAsynchronous; // 0x36(0x01)
	None AllowPerformanceWarningsInEditor; // 0x37(0x01)
	None ShowWarningsOnScreen; // 0x38(0x01)
	None LogSeverity; // 0x39(0x01)
	None bPaintToBackBuffer; // 0x3a(0x01)
	None bRespectTitleSafeZone; // 0x3b(0x01)
	None bRespectLetterboxing; // 0x3c(0x01)
	None HUDMaterialName; // 0x40(0x10)
	None CoUIResourcesRoot; // 0x50(0x10)
	None TickWhileGameIsPaused; // 0x60(0x01)
	None bUseLowerCaseNamesForAutoExposedProperties; // 0x61(0x01)
	None MSAA; // 0x62(0x01)
	None CookiesResource; // 0x68(0x10)
	None LocalStorageFolder; // 0x78(0x10)
	None UseCacheFile; // 0x88(0x01)
	None UseReceivedFromServerUrl; // 0x89(0x01)
	None Owner; // 0x120(0x08)
	None ReadyForBindings; // 0x128(0x10)
	None BindingsReleased; // 0x138(0x10)
	None FinishLoad; // 0x148(0x10)
	None FailLoad; // 0x158(0x10)
	None StartLoading; // 0x168(0x10)
	None NavigateTo; // 0x178(0x10)
	None JavaScriptEvent; // 0x188(0x10)
	None UIGTScriptingReady; // 0x198(0x10)
	None AkAudioEvent; // 0x1c0(0x10)
	None KeyUpDelegate; // 0x1d0(0x10)
	None KeyDownDelegate; // 0x1e0(0x10)
	None MouseEventDelegate; // 0x1f0(0x10)
	None Filter; // 0x200(0x01)
	None bReceiveInput; // 0x201(0x01)
	None InputPropagationBehaviour; // 0x202(0x01)
	None bReceiveInputWhenTransparent; // 0x203(0x01)
	None bGammaCorrectedMaterial; // 0x204(0x01)
	None TickPeriodInMinimizedGame; // 0x208(0x04)
	None AllowPerformanceWarnings; // 0x20c(0x01)
	None ExecuteJSTimersThresholdMs; // 0x210(0x04)
	None UpdateStylesAndLayoutThresholdMs; // 0x214(0x04)
	None RecordRenderingCommandsThresholdMs; // 0x218(0x04)
	None PaintWarningThresholdMs; // 0x21c(0x04)
	None LayersCountThreshold; // 0x220(0x04)
	None LayerWidthThreshold; // 0x224(0x04)
	None LayerHeightThreshold; // 0x228(0x04)
	None bEnableAdditionalDefaultStyles; // 0x22c(0x01)
	None AudioWrapper; // 0x2a0(0x08)
	None URL; // 0x328(0x10)
	None ClickThroughAlphaThreshold; // 0x338(0x04)
	None OffscreenCanvasRendering; // 0x33c(0x01)
	None Transparent; // 0x33d(0x01)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None BTN-Menu04; // 0x3f0(0x08)
	None BTN-Menu05; // 0x3f8(0x08)
	None BTN-Menu06; // 0x400(0x08)
	None BTN-Menu07; // 0x408(0x08)
	None BTN-Menu08; // 0x410(0x08)
	None BTN-Menu09; // 0x418(0x08)
	None CP-SlotInfo; // 0x420(0x08)
	None IMG-BG; // 0x428(0x08)
	None IMG-BG-Border; // 0x430(0x08)
	None IMG-Item; // 0x438(0x08)
	None IMG-Mask; // 0x440(0x08)
	None IMG-Over; // 0x448(0x08)
	None IMG-Over-Border; // 0x450(0x08)
	None Menu02; // 0x458(0x08)
	None Menu03; // 0x460(0x08)
	None Menu04; // 0x468(0x08)
	None Menu05; // 0x470(0x08)
	None Menu06; // 0x478(0x08)
	None Menu07; // 0x480(0x08)
	None Menu08; // 0x488(0x08)
	None Menu09; // 0x490(0x08)
	None Overlay_Mask; // 0x498(0x08)
	None TXT-ContinuousSpeed; // 0x4a0(0x08)
	None TXT-Horizental; // 0x4a8(0x08)
	None TXT-ItemName; // 0x4b0(0x08)
	None TXT-Menu01; // 0x4b8(0x08)
	None TXT-Menu02; // 0x4c0(0x08)
	None TXT-Menu03; // 0x4c8(0x08)
	None TXT-Menu04; // 0x4d0(0x08)
	None TXT-Menu05; // 0x4d8(0x08)
	None TXT-Menu06; // 0x4e0(0x08)
	None TXT-Menu07; // 0x4e8(0x08)
	None TXT-Menu08; // 0x4f0(0x08)
	None TXT-Menu09; // 0x4f8(0x08)
	None TXT-MovingSpeed; // 0x500(0x08)
	None TXT-Reload; // 0x508(0x08)
	None TXT-Type; // 0x510(0x08)
	None TXT-Vertical; // 0x518(0x08)
	None TXT-Weight; // 0x520(0x08)
	None UberGraphFrame; // 0x6d0(0x08)
	None ImportedFilePath; // 0x28(0x10)
	None AssetGuid; // 0x38(0x10)
	None Vertices; // 0x28(0x10)
	None Normals; // 0x38(0x10)
	None Indices; // 0x48(0x10)
	None InverseMasses; // 0x58(0x10)
	None BoneData; // 0x68(0x10)
	None NumFixedVerts; // 0x78(0x04)
	None MaxBoneWeights; // 0x7c(0x04)
	None SelfCollisionIndices; // 0x80(0x10)
	None UberGraphFrame; // 0x4e8(0x08)
	None Over; // 0x4f0(0x08)
	None Button_107; // 0x4f8(0x08)
	None Button_441; // 0x500(0x08)
	None Button_Type; // 0x508(0x08)
	None ButtonType; // 0x510(0x08)
	None ComboBoxString_237; // 0x518(0x08)
	None ComboBoxType; // 0x520(0x08)
	None Down; // 0x528(0x08)
	None EditableText_80; // 0x530(0x08)
	None HorizontalBox_191; // 0x538(0x08)
	None Image_153; // 0x540(0x08)
	None Image_204; // 0x548(0x08)
	None Image_414; // 0x550(0x08)
	None Key; // 0x558(0x08)
	None KeyImageMain; // 0x560(0x08)
	None KeyImageSub; // 0x568(0x08)
	None KeyLock; // 0x570(0x08)
	None LeftA; // 0x578(0x08)
	None LeftA_2; // 0x580(0x08)
	None LockMain; // 0x588(0x08)
	None LockSub; // 0x590(0x08)
	None MainBG; // 0x598(0x08)
	None MainKeyInput; // 0x5a0(0x08)
	None Overlay_215; // 0x5a8(0x08)
	None ProgressBar_150; // 0x5b0(0x08)
	None RightA; // 0x5b8(0x08)
	None RightA_2; // 0x5c0(0x08)
	None SelectBtn1; // 0x5c8(0x08)
	None SelectBtn2; // 0x5d0(0x08)
	None SelectBtn3; // 0x5d8(0x08)
	None SelectBtn4; // 0x5e0(0x08)
	None SelectBtn5; // 0x5e8(0x08)
	None SelectBtn6; // 0x5f0(0x08)
	None SelectType; // 0x5f8(0x08)
	None SelectValue; // 0x600(0x08)
	None Slider_139; // 0x608(0x08)
	None SliderType; // 0x610(0x08)
	None SubBG; // 0x618(0x08)
	None SubKeyInput; // 0x620(0x08)
	None T_Button; // 0x628(0x08)
	None Title_Text; // 0x630(0x08)
	None Up; // 0x638(0x08)
	None Value; // 0x640(0x08)
	None Value_2; // 0x648(0x08)
	None WidgetSwitcher_1; // 0x650(0x08)
	None WidgetSwitcher_281; // 0x658(0x08)
	None Lock; // 0x660(0x01)
	None Selected SeleteValue; // 0x664(0x04)
	None TotalListSize; // 0x668(0x04)
	None Empty; // 0x670(0x10)
	None ButtonStyle; // 0x680(0x278)
	None NewVar_1; // 0x8f8(0x70)
	None SliderIsInit; // 0x968(0x01)
	None EmptyText; // 0x970(0x18)
	None TempSaveComboBoxIndex; // 0x988(0x04)
	None Temp; // 0x990(0x20)
	None TempValue; // 0x9b0(0x04)
	None PreSliderText; // 0x9b8(0x18)
	None LResultString; // 0x9d0(0x10)
	None have.; // 0x9e0(0x01)
	None IsOnEditableText; // 0x9e1(0x01)
	None CompletSettingData; // 0x9e2(0x01)
	None CompleteSettingInfo; // 0x9e8(0x88)
	None TempSetting; // 0xa70(0x88)
	None ReMarkComboBox; // 0xaf8(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_MS; // 0x250(0x08)
	None Image_78; // 0x258(0x08)
	None PingImage; // 0x260(0x08)
	None Slot; // 0x28(0x08)
	None bIsEnabledDelegate; // 0x30(0x10)
	None ToolTipText; // 0x40(0x18)
	None ToolTipTextDelegate; // 0x58(0x10)
	None ToolTipWidget; // 0x68(0x08)
	None ToolTipWidgetDelegate; // 0x70(0x10)
	None VisibilityDelegate; // 0x80(0x10)
	None RenderTransform; // 0x90(0x1c)
	None RenderTransformPivot; // 0xac(0x08)
	None bIsVariable; // 0xb4(0x01)
	None bCreatedByConstructionScript; // 0xb4(0x01)
	None bIsEnabled; // 0xb4(0x01)
	None bOverride_Cursor; // 0xb4(0x01)
	None AccessibleWidgetData; // 0xb8(0x08)
	None bIsVolatile; // 0xc0(0x01)
	None Cursor; // 0xc1(0x01)
	None Clipping; // 0xc2(0x01)
	None Visibility; // 0xc3(0x01)
	None RenderOpacity; // 0xc4(0x04)
	None Navigation; // 0xc8(0x08)
	None FlowDirectionPreference; // 0xd0(0x01)
	None NativeBindings; // 0xf8(0x10)
	None ColorAndOpacity; // 0x110(0x10)
	None ColorAndOpacityDelegate; // 0x120(0x10)
	None ForegroundColor; // 0x130(0x28)
	None ForegroundColorDelegate; // 0x158(0x10)
	None Padding; // 0x168(0x10)
	None ActiveSequencePlayers; // 0x178(0x10)
	None StoppedSequencePlayers; // 0x188(0x10)
	None NoPixelSnapping; // 0x198(0x01)
	None NoPixelSnappingDelegate; // 0x19c(0x10)
	None NamedSlotBindings; // 0x1b0(0x10)
	None WidgetTree; // 0x1c0(0x08)
	None Priority; // 0x1c8(0x04)
	None bSupportsKeyboardFocus; // 0x1cc(0x01)
	None bIsFocusable; // 0x1cc(0x01)
	None bStopAction; // 0x1cc(0x01)
	None bHasScriptImplementedTick; // 0x1cc(0x01)
	None bHasScriptImplementedPaint; // 0x1cc(0x01)
	None bCookedWidgetTree; // 0x1cc(0x01)
	None TickFrequency; // 0x1d8(0x01)
	None InputComponent; // 0x1e0(0x08)
	None AnimationCallbacks; // 0x1e8(0x10)
	None Slots; // 0x108(0x10)
	None HorizontalAlignment; // 0x120(0x01)
	None VerticalAlignment; // 0x121(0x01)
	None bShowEffectWhenDisabled; // 0x122(0x01)
	None ContentColorAndOpacity; // 0x124(0x10)
	None ContentColorAndOpacityDelegate; // 0x134(0x10)
	None Padding; // 0x144(0x10)
	None Background; // 0x158(0x88)
	None BackgroundDelegate; // 0x1e0(0x10)
	None BrushColor; // 0x1f0(0x10)
	None BrushColorDelegate; // 0x200(0x10)
	None DesiredSizeScale; // 0x210(0x08)
	None bFlipForRightToLeftFlowDirection; // 0x218(0x01)
	None OnMouseButtonDownEvent; // 0x21c(0x10)
	None OnMouseButtonUpEvent; // 0x22c(0x10)
	None OnMouseMoveEvent; // 0x23c(0x10)
	None OnMouseDoubleClickEvent; // 0x24c(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFail; // 0x40(0x10)
	None Padding; // 0x120(0x10)
	None HorizontalAlignment; // 0x130(0x01)
	None VerticalAlignment; // 0x131(0x01)
	None bApplyAlphaToBlur; // 0x132(0x01)
	None BlurStrength; // 0x134(0x04)
	None bOverrideAutoRadiusCalculation; // 0x138(0x01)
	None BlurRadius; // 0x13c(0x04)
	None LowQualityFallbackBrush; // 0x140(0x88)
	None Parent; // 0x28(0x08)
	None Content; // 0x30(0x08)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None SourceObject; // 0x28(0x08)
	None SourcePath; // 0x30(0x28)
	None DestinationProperty; // 0x58(0x08)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None Style; // 0x160(0x08)
	None WidgetStyle; // 0x168(0x278)
	None ColorAndOpacity; // 0x3e0(0x10)
	None BackgroundColor; // 0x3f0(0x10)
	None ClickMethod; // 0x400(0x01)
	None TouchMethod; // 0x401(0x01)
	None PressMethod; // 0x402(0x01)
	None IsFocusable; // 0x403(0x01)
	None OnClicked; // 0x408(0x10)
	None OnPressed; // 0x418(0x10)
	None OnReleased; // 0x428(0x10)
	None OnHovered; // 0x438(0x10)
	None OnUnhovered; // 0x448(0x10)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None LayoutData; // 0x38(0x28)
	None bAutoSize; // 0x60(0x01)
	None ZOrder; // 0x64(0x04)
	None CheckedState; // 0x120(0x01)
	None CheckedStateDelegate; // 0x124(0x10)
	None WidgetStyle; // 0x138(0x580)
	None Style; // 0x6b8(0x08)
	None UncheckedImage; // 0x6c0(0x08)
	None UncheckedHoveredImage; // 0x6c8(0x08)
	None UncheckedPressedImage; // 0x6d0(0x08)
	None CheckedImage; // 0x6d8(0x08)
	None CheckedHoveredImage; // 0x6e0(0x08)
	None CheckedPressedImage; // 0x6e8(0x08)
	None UndeterminedImage; // 0x6f0(0x08)
	None UndeterminedHoveredImage; // 0x6f8(0x08)
	None UndeterminedPressedImage; // 0x700(0x08)
	None HorizontalAlignment; // 0x708(0x01)
	None Padding; // 0x70c(0x10)
	None BorderBackgroundColor; // 0x720(0x28)
	None IsFocusable; // 0x748(0x01)
	None OnCheckStateChanged; // 0x750(0x10)
	None NumberOfPieces; // 0x108(0x04)
	None Period; // 0x10c(0x04)
	None Radius; // 0x110(0x04)
	None PieceImage; // 0x118(0x08)
	None Image; // 0x120(0x88)
	None bEnableRadius; // 0x1a8(0x01)
	None Items; // 0x108(0x10)
	None OnGenerateWidgetEvent; // 0x118(0x10)
	None bIsFocusable; // 0x128(0x01)
	None DefaultOptions; // 0x108(0x10)
	None SelectedOption; // 0x118(0x10)
	None WidgetStyle; // 0x128(0x3f0)
	None ItemStyle; // 0x518(0x7c8)
	None ContentPadding; // 0xce0(0x10)
	None MaxListHeight; // 0xcf0(0x04)
	None HasDownArrow; // 0xcf4(0x01)
	None EnableGamepadNavigationMode; // 0xcf5(0x01)
	None Font; // 0xcf8(0x50)
	None ForegroundColor; // 0xd48(0x28)
	None bIsFocusable; // 0xd70(0x01)
	None OnGenerateWidgetEvent; // 0xd74(0x10)
	None OnSelectionChanged; // 0xd88(0x10)
	None OnOpening; // 0xd98(0x10)
	None Tag; // 0x28(0x10)
	None payload; // 0x38(0x08)
	None DefaultDragVisual; // 0x40(0x08)
	None Pivot; // 0x48(0x01)
	None Offset; // 0x4c(0x08)
	None bUseMoveAnimation; // 0x54(0x01)
	None OnDrop; // 0x58(0x10)
	None OnDragCancelled; // 0x68(0x10)
	None OnDragged; // 0x78(0x10)
	None EntryBoxType; // 0x108(0x01)
	None EntrySpacing; // 0x10c(0x08)
	None SpacingPattern; // 0x118(0x10)
	None EntrySizeRule; // 0x128(0x08)
	None EntryHorizontalAlignment; // 0x130(0x01)
	None EntryVerticalAlignment; // 0x131(0x01)
	None MaxElementSize; // 0x134(0x04)
	None EntryWidgetPool; // 0x148(0x80)
	None EntryWidgetClass; // 0x1c8(0x08)
	None Text; // 0x108(0x18)
	None TextDelegate; // 0x120(0x10)
	None HintText; // 0x130(0x18)
	None HintTextDelegate; // 0x148(0x10)
	None WidgetStyle; // 0x158(0x218)
	None Style; // 0x370(0x08)
	None BackgroundImageSelected; // 0x378(0x08)
	None BackgroundImageComposing; // 0x380(0x08)
	None CaretImage; // 0x388(0x08)
	None Font; // 0x390(0x50)
	None ColorAndOpacity; // 0x3e0(0x28)
	None IsReadOnly; // 0x408(0x01)
	None IsPassword; // 0x409(0x01)
	None MinimumDesiredWidth; // 0x40c(0x04)
	None IsCaretMovedWhenGainFocus; // 0x410(0x01)
	None SelectAllTextWhenFocused; // 0x411(0x01)
	None RevertTextOnEscape; // 0x412(0x01)
	None ClearKeyboardFocusOnCommit; // 0x413(0x01)
	None SelectAllTextOnCommit; // 0x414(0x01)
	None AllowContextMenu; // 0x415(0x01)
	None KeyboardType; // 0x416(0x01)
	None VirtualKeyboardOptions; // 0x417(0x01)
	None VirtualKeyboardTrigger; // 0x418(0x01)
	None VirtualKeyboardDismissAction; // 0x419(0x01)
	None Justification; // 0x41a(0x01)
	None ShapedTextOptions; // 0x41b(0x03)
	None OnTextChanged; // 0x420(0x10)
	None OnTextCommitted; // 0x430(0x10)
	None Text; // 0x108(0x18)
	None TextDelegate; // 0x120(0x10)
	None WidgetStyle; // 0x130(0x7f0)
	None Style; // 0x920(0x08)
	None HintText; // 0x928(0x18)
	None HintTextDelegate; // 0x940(0x10)
	None Font; // 0x950(0x50)
	None ForegroundColor; // 0x9a0(0x10)
	None BackgroundColor; // 0x9b0(0x10)
	None ReadOnlyForegroundColor; // 0x9c0(0x10)
	None IsReadOnly; // 0x9d0(0x01)
	None IsPassword; // 0x9d1(0x01)
	None MinimumDesiredWidth; // 0x9d4(0x04)
	None Padding; // 0x9d8(0x10)
	None IsCaretMovedWhenGainFocus; // 0x9e8(0x01)
	None SelectAllTextWhenFocused; // 0x9e9(0x01)
	None RevertTextOnEscape; // 0x9ea(0x01)
	None ClearKeyboardFocusOnCommit; // 0x9eb(0x01)
	None SelectAllTextOnCommit; // 0x9ec(0x01)
	None AllowContextMenu; // 0x9ed(0x01)
	None KeyboardType; // 0x9ee(0x01)
	None VirtualKeyboardOptions; // 0x9ef(0x01)
	None VirtualKeyboardTrigger; // 0x9f0(0x01)
	None VirtualKeyboardDismissAction; // 0x9f1(0x01)
	None Justification; // 0x9f2(0x01)
	None ShapedTextOptions; // 0x9f3(0x03)
	None OnTextChanged; // 0x9f8(0x10)
	None OnTextCommitted; // 0xa08(0x10)
	None Style; // 0x110(0x120)
	None BorderBrush; // 0x230(0x88)
	None BorderColor; // 0x2b8(0x28)
	None bIsExpanded; // 0x2e0(0x01)
	None MaxHeight; // 0x2e4(0x04)
	None HeaderPadding; // 0x2e8(0x10)
	None AreaPadding; // 0x2f8(0x10)
	None OnExpansionChanged; // 0x308(0x10)
	None HeaderContent; // 0x318(0x08)
	None BodyContent; // 0x320(0x08)
	None ColumnFill; // 0x120(0x10)
	None RowFill; // 0x130(0x10)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None Row; // 0x4c(0x04)
	None RowSpan; // 0x50(0x04)
	None Column; // 0x54(0x04)
	None ColumnSpan; // 0x58(0x04)
	None Layer; // 0x5c(0x04)
	None Nudge; // 0x60(0x08)
	None Padding; // 0x40(0x10)
	None Size; // 0x50(0x08)
	None HorizontalAlignment; // 0x58(0x01)
	None VerticalAlignment; // 0x59(0x01)
	None Brush; // 0x108(0x88)
	None BrushDelegate; // 0x190(0x10)
	None ColorAndOpacity; // 0x1a0(0x10)
	None ColorAndOpacityDelegate; // 0x1b0(0x10)
	None bFlipForRightToLeftFlowDirection; // 0x1c0(0x01)
	None OnMouseButtonDownEvent; // 0x1c4(0x10)
	None WidgetStyle; // 0x108(0x278)
	None TextStyle; // 0x380(0x268)
	None SelectedKey; // 0x5e8(0x20)
	None Font; // 0x608(0x50)
	None Margin; // 0x658(0x10)
	None ColorAndOpacity; // 0x668(0x10)
	None KeySelectionText; // 0x678(0x18)
	None NoKeySpecifiedText; // 0x690(0x18)
	None bAllowModifierKeys; // 0x6a8(0x01)
	None bAllowGamepadKeys; // 0x6a9(0x01)
	None EscapeKeys; // 0x6b0(0x10)
	None OnKeySelected; // 0x6c0(0x10)
	None OnIsSelectingKeyChanged; // 0x6d0(0x10)
	None bCanCache; // 0x120(0x01)
	None CacheRelativeTransforms; // 0x121(0x01)
	None EntryWidgetClass; // 0x108(0x08)
	None WheelScrollMultiplier; // 0x110(0x04)
	None bEnableScrollAnimation; // 0x114(0x01)
	None bEnableFixedLineOffset; // 0x115(0x01)
	None FixedLineScrollOffset; // 0x118(0x04)
	None BP_OnEntryGenerated; // 0x120(0x10)
	None BP_OnEntryReleased; // 0x130(0x10)
	None EntryWidgetPool; // 0x140(0x80)
	None Orientation; // 0x2d8(0x01)
	None SelectionMode; // 0x2d9(0x01)
	None ConsumeMouseWheel; // 0x2da(0x01)
	None bClearSelectionOnClick; // 0x2db(0x01)
	None bIsFocusable; // 0x2dc(0x01)
	None EntrySpacing; // 0x2e0(0x04)
	None bReturnFocusToSelection; // 0x2e4(0x01)
	None ListItems; // 0x2e8(0x10)
	None BP_OnEntryInitialized; // 0x308(0x10)
	None BP_OnItemClicked; // 0x318(0x10)
	None BP_OnItemDoubleClicked; // 0x328(0x10)
	None BP_OnItemIsHoveredChanged; // 0x338(0x10)
	None BP_OnItemSelectionChanged; // 0x348(0x10)
	None BP_OnItemScrolledIntoView; // 0x358(0x10)
	None MenuClass; // 0x120(0x08)
	None OnGetMenuContentEvent; // 0x128(0x10)
	None Placement; // 0x138(0x01)
	None bFitInWindow; // 0x139(0x01)
	None ShouldDeferPaintingAfterWindowContent; // 0x13a(0x01)
	None UseApplicationMenuStack; // 0x13b(0x01)
	None OnMenuOpenChanged; // 0x140(0x10)
	None TransformMask; // 0xe0(0x04)
	None Translation; // 0xe8(0x140)
	None Rotation; // 0x228(0xa0)
	None Scale; // 0x2c8(0x140)
	None Shear; // 0x408(0x140)
	None TopCurve; // 0xe0(0xa0)
	None LeftCurve; // 0x180(0xa0)
	None RightCurve; // 0x220(0xa0)
	None BottomCurve; // 0x2c0(0xa0)
	None BrushPropertyNamePath; // 0x68(0x10)
	None TrackName; // 0x78(0x08)
	None ShapedTextOptions; // 0x108(0x03)
	None Justification; // 0x10b(0x01)
	None WrappingPolicy; // 0x10c(0x01)
	None AutoWrapText; // 0x10d(0x01)
	None WrapTextAt; // 0x110(0x04)
	None Margin; // 0x114(0x10)
	None LineHeightPercentage; // 0x124(0x04)
	None Text; // 0x128(0x18)
	None HintText; // 0x140(0x18)
	None HintTextDelegate; // 0x158(0x10)
	None WidgetStyle; // 0x168(0x268)
	None bIsReadOnly; // 0x3d0(0x01)
	None Font; // 0x3d8(0x50)
	None SelectAllTextWhenFocused; // 0x428(0x01)
	None ClearTextSelectionOnFocusLoss; // 0x429(0x01)
	None RevertTextOnEscape; // 0x42a(0x01)
	None ClearKeyboardFocusOnCommit; // 0x42b(0x01)
	None AllowContextMenu; // 0x42c(0x01)
	None VirtualKeyboardOptions; // 0x42d(0x01)
	None VirtualKeyboardDismissAction; // 0x42e(0x01)
	None OnTextChanged; // 0x430(0x10)
	None OnTextCommitted; // 0x440(0x10)
	None Text; // 0x128(0x18)
	None HintText; // 0x140(0x18)
	None HintTextDelegate; // 0x158(0x10)
	None WidgetStyle; // 0x168(0x7f0)
	None TextStyle; // 0x958(0x268)
	None bIsReadOnly; // 0xbc0(0x01)
	None AllowContextMenu; // 0xbc1(0x01)
	None VirtualKeyboardOptions; // 0xbc2(0x01)
	None VirtualKeyboardDismissAction; // 0xbc3(0x01)
	None Style; // 0xbc8(0x08)
	None Font; // 0xbd0(0x50)
	None ForegroundColor; // 0xc20(0x10)
	None BackgroundColor; // 0xc30(0x10)
	None ReadOnlyForegroundColor; // 0xc40(0x10)
	None OnTextChanged; // 0xc50(0x10)
	None OnTextCommitted; // 0xc60(0x10)
	None Padding; // 0x40(0x10)
	None HorizontalAlignment; // 0x50(0x01)
	None VerticalAlignment; // 0x51(0x01)
	None WidgetStyle; // 0x108(0x1a0)
	None Style; // 0x2a8(0x08)
	None BackgroundImage; // 0x2b0(0x08)
	None FillImage; // 0x2b8(0x08)
	None MarqueeImage; // 0x2c0(0x08)
	None Percent; // 0x2c8(0x04)
	None BarFillType; // 0x2cc(0x01)
	None bIsMarquee; // 0x2cd(0x01)
	None BorderPadding; // 0x2d0(0x08)
	None PercentDelegate; // 0x2d8(0x10)
	None FillColorAndOpacity; // 0x2e8(0x10)
	None FillColorAndOpacityDelegate; // 0x2f8(0x10)
	None RenderOnInvalidation; // 0x120(0x01)
	None RenderOnPhase; // 0x121(0x01)
	None Phase; // 0x124(0x04)
	None PhaseCount; // 0x128(0x04)
	None EffectMaterial; // 0x130(0x08)
	None TextureParameter; // 0x138(0x08)
	None Text; // 0x128(0x18)
	None TextStyleSet; // 0x140(0x08)
	None DecoratorClasses; // 0x148(0x10)
	None bOverrideDefaultStyle; // 0x158(0x01)
	None DefaultTextStyleOverride; // 0x160(0x268)
	None MinDesiredWidth; // 0x3c8(0x04)
	None InstanceDecorators; // 0x638(0x10)
	None ImageSet; // 0x28(0x08)
	None PadLeft; // 0x120(0x01)
	None PadRight; // 0x121(0x01)
	None PadTop; // 0x122(0x01)
	None PadBottom; // 0x123(0x01)
	None bIsTitleSafe; // 0x38(0x01)
	None SafeAreaScale; // 0x3c(0x10)
	None HAlign; // 0x4c(0x01)
	None VAlign; // 0x4d(0x01)
	None Padding; // 0x50(0x10)
	None Stretch; // 0x120(0x01)
	None StretchDirection; // 0x121(0x01)
	None UserSpecifiedScale; // 0x124(0x04)
	None IgnoreInheritedScale; // 0x128(0x01)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None WidgetStyle; // 0x108(0x4d0)
	None Style; // 0x5d8(0x08)
	None bAlwaysShowScrollbar; // 0x5e0(0x01)
	None bAlwaysShowScrollbarTrack; // 0x5e1(0x01)
	None Orientation; // 0x5e2(0x01)
	None Thickness; // 0x5e4(0x08)
	None Padding; // 0x5ec(0x10)
	None WidgetStyle; // 0x120(0x228)
	None WidgetBarStyle; // 0x348(0x4d0)
	None Style; // 0x818(0x08)
	None BarStyle; // 0x820(0x08)
	None Orientation; // 0x828(0x01)
	None ScrollBarVisibility; // 0x829(0x01)
	None ConsumeMouseWheel; // 0x82a(0x01)
	None ScrollbarThickness; // 0x82c(0x08)
	None ScrollbarPadding; // 0x834(0x10)
	None AlwaysShowScrollbar; // 0x844(0x01)
	None AlwaysShowScrollbarTrack; // 0x845(0x01)
	None AllowOverscroll; // 0x846(0x01)
	None bAnimateWheelScrolling; // 0x847(0x01)
	None NavigationDestination; // 0x848(0x01)
	None NavigationScrollPadding; // 0x84c(0x04)
	None ScrollWhenFocusChanges; // 0x850(0x01)
	None bAllowRightClickDragScrolling; // 0x851(0x01)
	None WheelScrollMultiplier; // 0x854(0x04)
	None OnUserScrolled; // 0x858(0x10)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None WidthOverride; // 0x130(0x04)
	None HeightOverride; // 0x134(0x04)
	None MinDesiredWidth; // 0x138(0x04)
	None MinDesiredHeight; // 0x13c(0x04)
	None MaxDesiredWidth; // 0x140(0x04)
	None MaxDesiredHeight; // 0x144(0x04)
	None MinAspectRatio; // 0x148(0x04)
	None MaxAspectRatio; // 0x14c(0x04)
	None bOverride_WidthOverride; // 0x150(0x01)
	None bOverride_HeightOverride; // 0x150(0x01)
	None bOverride_MinDesiredWidth; // 0x150(0x01)
	None bOverride_MinDesiredHeight; // 0x150(0x01)
	None bOverride_MaxDesiredWidth; // 0x150(0x01)
	None bOverride_MaxDesiredHeight; // 0x150(0x01)
	None bOverride_MinAspectRatio; // 0x150(0x01)
	None bOverride_MaxAspectRatio; // 0x150(0x01)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x58(0x01)
	None VerticalAlignment; // 0x59(0x01)
	None VertexData; // 0x28(0x10)
	None IndexData; // 0x38(0x10)
	None Material; // 0x48(0x08)
	None ExtentMin; // 0x50(0x08)
	None ExtentMax; // 0x58(0x08)
	None bCanChildrenBeAccessible; // 0x28(0x01)
	None AccessibleBehavior; // 0x29(0x01)
	None AccessibleSummaryBehavior; // 0x2a(0x01)
	None AccessibleText; // 0x30(0x18)
	None AccessibleTextDelegate; // 0x48(0x10)
	None AccessibleSummaryText; // 0x58(0x18)
	None AccessibleSummaryTextDelegate; // 0x70(0x10)
	None Value; // 0x108(0x04)
	None ValueDelegate; // 0x10c(0x10)
	None MinValue; // 0x11c(0x04)
	None MaxValue; // 0x120(0x04)
	None WidgetStyle; // 0x128(0x340)
	None Orientation; // 0x468(0x01)
	None SliderBarColor; // 0x46c(0x10)
	None SliderHandleColor; // 0x47c(0x10)
	None IndentHandle; // 0x48c(0x01)
	None Locked; // 0x48d(0x01)
	None MouseUsesStep; // 0x48e(0x01)
	None RequiresControllerLock; // 0x48f(0x01)
	None StepSize; // 0x490(0x04)
	None IsFocusable; // 0x494(0x01)
	None OnMouseCaptureBegin; // 0x498(0x10)
	None OnMouseCaptureEnd; // 0x4a8(0x10)
	None OnControllerCaptureBegin; // 0x4b8(0x10)
	None OnControllerCaptureEnd; // 0x4c8(0x10)
	None OnValueChanged; // 0x4d8(0x10)
	None Size; // 0x108(0x08)
	None Value; // 0x108(0x04)
	None ValueDelegate; // 0x10c(0x10)
	None WidgetStyle; // 0x120(0x2e8)
	None Style; // 0x408(0x08)
	None MinFractionalDigits; // 0x410(0x04)
	None MaxFractionalDigits; // 0x414(0x04)
	None bAlwaysUsesDeltaSnap; // 0x418(0x01)
	None Delta; // 0x41c(0x04)
	None SliderExponent; // 0x420(0x04)
	None Font; // 0x428(0x50)
	None Justification; // 0x478(0x01)
	None MinDesiredWidth; // 0x47c(0x04)
	None ClearKeyboardFocusOnCommit; // 0x480(0x01)
	None SelectAllTextOnCommit; // 0x481(0x01)
	None ForegroundColor; // 0x488(0x28)
	None OnValueChanged; // 0x4b0(0x10)
	None OnValueCommitted; // 0x4c0(0x10)
	None OnBeginSliderMovement; // 0x4d0(0x10)
	None OnEndSliderMovement; // 0x4e0(0x10)
	None bOverride_MinValue; // 0x4f0(0x01)
	None bOverride_MaxValue; // 0x4f0(0x01)
	None bOverride_MinSliderValue; // 0x4f0(0x01)
	None bOverride_MaxSliderValue; // 0x4f0(0x01)
	None MinValue; // 0x4f4(0x04)
	None MaxValue; // 0x4f8(0x04)
	None MinSliderValue; // 0x4fc(0x04)
	None MaxSliderValue; // 0x500(0x04)
	None Text; // 0x128(0x18)
	None TextDelegate; // 0x140(0x10)
	None ColorAndOpacity; // 0x150(0x28)
	None ColorAndOpacityDelegate; // 0x178(0x10)
	None Font; // 0x188(0x50)
	None StrikeBrush; // 0x1d8(0x88)
	None ShadowOffset; // 0x260(0x08)
	None ShadowColorAndOpacity; // 0x268(0x10)
	None ShadowColorAndOpacityDelegate; // 0x278(0x10)
	None MinDesiredWidth; // 0x288(0x04)
	None bWrapWithInvalidationPanel; // 0x28c(0x01)
	None bAutoWrapText; // 0x28d(0x01)
	None bSimpleTextMode; // 0x28e(0x01)
	None NumberOfPieces; // 0x108(0x04)
	None bAnimateHorizontally; // 0x10c(0x01)
	None bAnimateVertically; // 0x10d(0x01)
	None bAnimateOpacity; // 0x10e(0x01)
	None PieceImage; // 0x110(0x08)
	None Image; // 0x118(0x88)
	None EntryHeight; // 0x368(0x04)
	None EntryWidth; // 0x36c(0x04)
	None TileAlignment; // 0x370(0x01)
	None bWrapHorizontalNavigation; // 0x371(0x01)
	None BP_OnGetItemChildren; // 0x378(0x10)
	None BP_OnItemExpansionChanged; // 0x388(0x10)
	None Animation; // 0x408(0x08)
	None SlotPadding; // 0x120(0x10)
	None MinDesiredSlotWidth; // 0x130(0x04)
	None MinDesiredSlotHeight; // 0x134(0x04)
	None HorizontalAlignment; // 0x38(0x01)
	None VerticalAlignment; // 0x39(0x01)
	None Row; // 0x3c(0x04)
	None Column; // 0x40(0x04)
	None Size; // 0x38(0x08)
	None Padding; // 0x40(0x10)
	None HorizontalAlignment; // 0x58(0x01)
	None VerticalAlignment; // 0x59(0x01)
	None BackgroundColor; // 0x120(0x10)
	None MovieScene; // 0x348(0x08)
	None AnimationBindings; // 0x350(0x10)
	None bLegacyFinishOnStop; // 0x360(0x01)
	None DisplayLabel; // 0x368(0x10)
	None WidgetAnimationDelegateBindings; // 0x28(0x10)
	None Finished; // 0x28(0x10)
	None WidgetTree; // 0x3c8(0x08)
	None bAllowTemplate; // 0x3d0(0x01)
	None bAllowDynamicCreation; // 0x3d0(0x01)
	None bValidTemplate; // 0x3d0(0x01)
	None bTemplateInitialized; // 0x3d0(0x01)
	None bCookedTemplate; // 0x3d0(0x01)
	None bClassRequiresNativeTick; // 0x3d0(0x01)
	None Bindings; // 0x3d8(0x10)
	None Animations; // 0x3e8(0x10)
	None NamedSlots; // 0x3f8(0x10)
	None TemplateAsset; // 0x408(0x28)
	None Template; // 0x430(0x08)

	void SetStaticGestureConfidenceThreshold(None Gesture, None Confidence); // SetStaticGestureConfidenceThreshold MagicLeapHandTracking.MagicLeapHandTrackingFunctionLibrary.SetStaticGestureConfidenceThreshold // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x17e7cb0>
	void WeldVertices(None& VertexIDs, None& OutNewVertexID); // WeldVertices EditableMesh.EditableMesh.WeldVertices // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1770a30>
	None MakeEditableMesh(None PrimitiveComponent, None LODIndex); // MakeEditableMesh EditableMesh.EditableMeshFactory.MakeEditableMesh // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x1776fd0>
	void UnloadMaskOutCache(); // UnloadMaskOutCache CustomizableObject.CustomizableObject.UnloadMaskOutCache // (Final|Native|Public|BlueprintCallable) // <Game+0x10384d0>
	void UpdateSkeletalMeshAsync(None bIgnoreCloseDist, None bForceHighPriority); // UpdateSkeletalMeshAsync CustomizableObject.CustomizableObjectInstance.UpdateSkeletalMeshAsync // (Final|Native|Public|BlueprintCallable) // <Game+0x10384f0>
	void SetReleaseMutableTexturesImmediately(None bReleaseTextures); // SetReleaseMutableTexturesImmediately CustomizableObject.CustomizableObjectSystem.SetReleaseMutableTexturesImmediately // (Final|Native|Public|BlueprintCallable) // <Game+0x103cb50>
	void UpdateSkeletalMeshAsync(None bNeverSkipUpdate); // UpdateSkeletalMeshAsync CustomizableObject.CustomizableSkeletalComponent.UpdateSkeletalMeshAsync // (Final|Native|Public|BlueprintCallable) // <Game+0x103cbe0>
	void DelegatedCallback(None Instance); // DelegatedCallback CustomizableObject.InstanceUpdatedHelper.DelegatedCallback // (Final|Native|Public) // <Game+0x103c930>
	void SetNotOwnRarityVisibility(None Rarity); // SetNotOwnRarityVisibility UW-Lobby_Craft_Recipe_Item.UW-Lobby_Craft_Recipe_Item_C.SetNotOwnRarityVisibility // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetEquippedWeapon(None& SUCCESS); // SetEquippedWeapon UW_ReplayUserNameTooltip.UW_ReplayUserNameTooltip_C.SetEquippedWeapon // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ExecuteUbergraph(None EntryPoint); // ExecuteUbergraph CoreUObject.Object.ExecuteUbergraph // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetIconTexture(None IconTexture); // SetIconTexture UW-BlackMarket_Slot_Preset.UW-BlackMarket_Slot_Preset_C.SetIconTexture // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckThirdCameraLocationRange(); // CheckThirdCameraLocationRange BP-DeathCam.BP-DeathCam_C.CheckThirdCameraLocationRange // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ToggleActive(); // ToggleActive Engine.ActorComponent.ToggleActive // (Native|Public|BlueprintCallable) // <Game+0x3385ac0>
	void ToggleVisibility(None bPropagateToChildren); // ToggleVisibility Engine.SceneComponent.ToggleVisibility // (Final|Native|Public|BlueprintCallable) // <Game+0x3de3730>
	void OnTickReplaySampleRecord(None DemoNetDriver, None MinRecordHz, None MaxRecordHz, None bSaveCheckpoint); // OnTickReplaySampleRecord Engine.MKActorEx.OnTickReplaySampleRecord // (Final|Native|Private) // <Game+0x3d90770>
	None WasRecentlyRendered(None Tolerance); // WasRecentlyRendered Engine.Actor.WasRecentlyRendered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3c5f4e0>
	void OnRep_ReplicatedPhysAsset(); // OnRep_ReplicatedPhysAsset Engine.SkeletalMeshActor.OnRep_ReplicatedPhysAsset // (Native|Public) // <Game+0x1237680>
	None WasRecentlyRendered(None Tolerance); // WasRecentlyRendered Engine.PrimitiveComponent.WasRecentlyRendered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dd0a20>
	void SetVectorParameterValueOnMaterials(None ParameterName, None ParameterValue); // SetVectorParameterValueOnMaterials Engine.MeshComponent.SetVectorParameterValueOnMaterials // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3d884d0>
	void UnloadSkinWeightProfile(None InProfileName); // UnloadSkinWeightProfile Engine.SkinnedMeshComponent.UnloadSkinWeightProfile // (Final|Native|Public|BlueprintCallable) // <Game+0x3df72f0>
	void SetLODSettings(None InLODSettings); // SetLODSettings Engine.SkeletalMesh.SetLODSettings // (Final|Native|Public|BlueprintCallable) // <Game+0x16b4b10>
	void SetMobility(None InMobility); // SetMobility Engine.StaticMeshActor.SetMobility // (Final|Native|Public|BlueprintCallable) // <Game+0x124d330>
	void ShowHUD(); // ShowHUD Engine.HUD.ShowHUD // (Exec|Native|Public) // <Game+0x1e4f220>
	void Activate(); // Activate Engine.BlueprintAsyncActionBase.Activate // (Native|Public|BlueprintCallable) // <Game+0x2edcf90>
	void UnlinkAnimClassLayers(None InClass); // UnlinkAnimClassLayers Engine.SkeletalMeshComponent.UnlinkAnimClassLayers // (Final|Native|Public|BlueprintCallable) // <Game+0x3deee80>
	void UnlockAIResources(None bUnlockMovement, None UnlockAILogic); // UnlockAIResources Engine.AnimInstance.UnlockAIResources // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // <Game+0x1edc390>
	None ScriptRunAssetExportTask(None Task); // ScriptRunAssetExportTask Engine.Exporter.ScriptRunAssetExportTask // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void WorldOriginLocationChanged(None OldOriginLocation, None NewOriginLocation); // WorldOriginLocationChanged Engine.LevelScriptActor.WorldOriginLocationChanged // (Event|Public|HasDefaults|BlueprintEvent) // <Game+0x23ad490>
	void SetVectorParameter(None ParameterName, None Param); // SetVectorParameter Engine.FXSystemComponent.SetVectorParameter // (Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3daaf20>
	None Received_Notify(None MeshComp, None Animation); // Received_Notify Engine.AnimNotify.Received_Notify // (Event|Public|BlueprintEvent|Const) // <Game+0x23ad490>
	None Received_NotifyTick(None MeshComp, None Animation, None FrameDeltaTime); // Received_NotifyTick Engine.AnimNotifyState.Received_NotifyTick // (Event|Public|BlueprintEvent|Const) // <Game+0x23ad490>
	None K2_GetWorldSettings(); // K2_GetWorldSettings Engine.World.K2_GetWorldSettings // (Final|Native|Public|BlueprintCallable) // <Game+0x3e28f40>
	void OnChangedViewMode(); // OnChangedViewMode Engine.MKPawnEx.OnChangedViewMode // (Native|Event|Public|BlueprintEvent) // <Game+0x1e4f220>
	void SpawnDefaultController(); // SpawnDefaultController Engine.Pawn.SpawnDefaultController // (Native|Public|BlueprintCallable) // <Game+0x3daf690>
	void UnCrouch(None bClientSimulation); // UnCrouch Engine.Character.UnCrouch // (Native|Public|BlueprintCallable) // <Game+0x202aa80>
	void UpdateSpline(); // UpdateSpline Engine.SplineComponent.UpdateSpline // (Final|Native|Public|BlueprintCallable) // <Game+0x3e0c7e0>
	void StopDelayed(None DelayTime); // StopDelayed Engine.AudioComponent.StopDelayed // (Final|Native|Public|BlueprintCallable) // <Game+0x3c8bfb0>
	void StartPlay(); // StartPlay Engine.GameModeBase.StartPlay // (Native|Public|BlueprintCallable) // <Game+0x3ce2330>
	void StartMatch(); // StartMatch Engine.GameMode.StartMatch // (Native|Public|BlueprintCallable) // <Game+0x3ce2310>
	void OnRep_SpectatorClass(); // OnRep_SpectatorClass Engine.GameStateBase.OnRep_SpectatorClass // (Native|Protected) // <Game+0x1f1c220>
	void OnRep_MatchState(); // OnRep_MatchState Engine.GameState.OnRep_MatchState // (Native|Public) // <Game+0x3ce1c70>
	void UnPossess(); // UnPossess Engine.Controller.UnPossess // (Final|Native|Public|BlueprintCallable) // <Game+0x3cbb490>
	None WasInputKeyJustReleased(None Key); // WasInputKeyJustReleased Engine.PlayerController.WasInputKeyJustReleased // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dc2600>
	void StopMovementImmediately(); // StopMovementImmediately Engine.MovementComponent.StopMovementImmediately // (Native|Public|BlueprintCallable) // <Game+0x2050030>
	void StopMovementKeepPathing(); // StopMovementKeepPathing Engine.NavMovementComponent.StopMovementKeepPathing // (Final|Native|Public|BlueprintCallable) // <Game+0x3d9a090>
	None K2_GetInputVector(); // K2_GetInputVector Engine.PawnMovementComponent.K2_GetInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3daef40>
	void SetWalkableFloorZ(None InWalkableFloorZ); // SetWalkableFloorZ Engine.CharacterMovementComponent.SetWalkableFloorZ // (Final|Native|Public|BlueprintCallable) // <Game+0x3cb2690>
	void OnInterpToggle(None bEnable); // OnInterpToggle Engine.SceneCapture2D.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // <Game+0x3db71b0>
	void SetBoxExtent(None InBoxExtent, None bUpdateOverlaps); // SetBoxExtent Engine.BoxComponent.SetBoxExtent // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3ca4330>
	void SetUseFieldOfViewForLOD(None bInUseFieldOfViewForLOD); // SetUseFieldOfViewForLOD Engine.CameraComponent.SetUseFieldOfViewForLOD // (Final|Native|Public|BlueprintCallable) // <Game+0x3ca48a0>
	void Walk(); // Walk Engine.CheatManager.Walk // (Exec|Native|Public|BlueprintCallable) // <Game+0x2edce10>
	void SetReplaySample(None Target, None ReplaySample, None bSaveCheckpoint); // SetReplaySample Engine.MKDemoNetDriverEx.SetReplaySample // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3d90aa0>
	None SetStaticMesh(None NewMesh); // SetStaticMesh Engine.StaticMeshComponent.SetStaticMesh // (Native|Public|BlueprintCallable) // <Game+0x168dfb0>
	void PlayReplayCommand(None DemoName); // PlayReplayCommand Engine.MKGameInstanceEx.PlayReplayCommand // (Final|Exec|Native|Public) // <Game+0x3d909b0>
	void ReceiveShutdown(); // ReceiveShutdown Engine.GameInstance.ReceiveShutdown // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None UpdateInstanceTransform(None InstanceIndex, None& NewInstanceTransform, None bWorldSpace, None bMarkRenderStateDirty, None bTeleport); // UpdateInstanceTransform Engine.InstancedStaticMeshComponent.UpdateInstanceTransform // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d031d0>
	None RemoveInstances(None& InstancesToRemove); // RemoveInstances Engine.HierarchicalInstancedStaticMeshComponent.RemoveInstances // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3cf7130>
	void ToggleReplayPauseAndResume(); // ToggleReplayPauseAndResume Engine.MK3DReplayController.ToggleReplayPauseAndResume // (Final|Native|Protected|BlueprintCallable) // <Game+0x3d8c360>
	void TurnAtRate(None Rate); // TurnAtRate Engine.DefaultPawn.TurnAtRate // (Native|Public|BlueprintCallable) // <Game+0x3cc4580>
	void MK3DSpectatorPawn_SetMaxSpeed(None fSpeed); // MK3DSpectatorPawn_SetMaxSpeed Engine.MK3DSpectatorPawn.MK3DSpectatorPawn_SetMaxSpeed // (Final|Exec|Native|Public) // <Game+0x3d90500>
	void StopCameraShake(None ShakeInstance, None bImmediately); // StopCameraShake Engine.PlayerCameraManager.StopCameraShake // (Native|Public|BlueprintCallable) // <Game+0x3db80f0>
	void ReceiveOverrideWith(None OldPlayerState); // ReceiveOverrideWith Engine.PlayerState.ReceiveOverrideWith // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	None UpdateKillcamInfo(None WorldContextObject, None Recorder, None Target, None Killer, None Victim, None bUpdateTime); // UpdateKillcamInfo Engine.MK3DEventFunction.UpdateKillcamInfo // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d8c380>
	void ShowOnlyComponent(None InComponent); // ShowOnlyComponent Engine.SceneCaptureComponent.ShowOnlyComponent // (Final|Native|Public|BlueprintCallable) // <Game+0x3de35f0>
	void CaptureScene(); // CaptureScene Engine.SceneCaptureComponent2D.CaptureScene // (Final|Native|Public|BlueprintCallable) // <Game+0x3ddfff0>
	void SetArrowColor(None NewColor); // SetArrowColor Engine.ArrowComponent.SetArrowColor // (Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3c83940>
	void StopSimulating(None& HitResult); // StopSimulating Engine.ProjectileMovementComponent.StopSimulating // (Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3dd33c0>
	void ValidateSettings(); // ValidateSettings Engine.GameUserSettings.ValidateSettings // (Native|Public|BlueprintCallable) // <Game+0x2edce10>
	void SetCapsuleSize(None InRadius, None InHalfHeight, None bUpdateOverlaps); // SetCapsuleSize Engine.CapsuleComponent.SetCapsuleSize // (Final|Native|Public|BlueprintCallable) // <Game+0x3cafee0>
	void SSSwapControllers(); // SSSwapControllers Engine.GameViewportClient.SSSwapControllers // (Exec|Native|Public) // <Game+0x2edcf90>
	void OnRep_WorldGravityZ(); // OnRep_WorldGravityZ Engine.WorldSettings.OnRep_WorldGravityZ // (Native|Public) // <Game+0x1e4f220>
	None IsDisabled(); // IsDisabled Engine.CameraModifier.IsDisabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2edcf10>
	void OnRep_bEnabled(); // OnRep_bEnabled Engine.SkyLight.OnRep_bEnabled // (Native|Public) // <Game+0x1e4f220>
	void SetForceMipLevelsToBeResident(None OverrideForceMiplevelsToBeResident, None bForceMiplevelsToBeResidentValue, None ForceDuration, None CinematicTextureGroups, None bFastResponse); // SetForceMipLevelsToBeResident Engine.MaterialInterface.SetForceMipLevelsToBeResident // (RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3d83f20>
	None K2_GetVectorParameterValue(None ParameterName); // K2_GetVectorParameterValue Engine.MaterialInstanceConstant.K2_GetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3d83c20>
	None GetAutoActivatePlayerIndex(); // GetAutoActivatePlayerIndex Engine.CameraActor.GetAutoActivatePlayerIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3ca3f20>
	void Stop(); // Stop Engine.AmbientSound.Stop // (Final|Native|Public|BlueprintCallable) // <Game+0x3c64100>
	None GetPlayLength(); // GetPlayLength Engine.AnimSequenceBase.GetPlayLength // (Native|Public|BlueprintCallable) // <Game+0x3c7db70>
	None GetDefaultBlendOutTime(); // GetDefaultBlendOutTime Engine.AnimMontage.GetDefaultBlendOutTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x328b060>
	None OverridePSTemplate(None MeshComp, None Animation); // OverridePSTemplate Engine.AnimNotifyState_Trail.OverridePSTemplate // (Event|Public|BlueprintEvent|Const) // <Game+0x23ad490>
	void StopAnim(); // StopAnim Engine.AnimSingleNodeInstance.StopAnim // (Final|Native|Public|BlueprintCallable) // <Game+0x3c7e380>
	None AsyncSaveGameToSlot(None WorldContextObject, None SaveGameObject, None SlotName, None UserIndex); // AsyncSaveGameToSlot Engine.AsyncActionHandleSaveGame.AsyncSaveGameToSlot // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3c87aa0>
	None AsyncLoadPrimaryAsset(None WorldContextObject, None PrimaryAsset, None& LoadBundles); // AsyncLoadPrimaryAsset Engine.AsyncActionLoadPrimaryAsset.AsyncLoadPrimaryAsset // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3c87560>
	None AsyncLoadPrimaryAssetClass(None WorldContextObject, None PrimaryAsset, None& LoadBundles); // AsyncLoadPrimaryAssetClass Engine.AsyncActionLoadPrimaryAssetClass.AsyncLoadPrimaryAssetClass // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3c876a0>
	None AsyncLoadPrimaryAssetList(None WorldContextObject, None& PrimaryAssetList, None& LoadBundles); // AsyncLoadPrimaryAssetList Engine.AsyncActionLoadPrimaryAssetList.AsyncLoadPrimaryAssetList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c87940>
	None AsyncLoadPrimaryAssetClassList(None WorldContextObject, None& PrimaryAssetList, None& LoadBundles); // AsyncLoadPrimaryAssetClassList Engine.AsyncActionLoadPrimaryAssetClassList.AsyncLoadPrimaryAssetClassList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c877e0>
	None AsyncChangeBundleStateForPrimaryAssetList(None WorldContextObject, None& PrimaryAssetList, None& AddBundles, None& RemoveBundles); // AsyncChangeBundleStateForPrimaryAssetList Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForPrimaryAssetList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c87280>
	void StartPrecompute(); // StartPrecompute Engine.AtmosphericFogComponent.StartPrecompute // (Final|Native|Public|BlueprintCallable) // <Game+0x151b310>
	void SetReverbSettings(None& NewReverbSettings); // SetReverbSettings Engine.AudioVolume.SetReverbSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3c8ba20>
	void OnActorEndPlay(None Actor, None EndPlayReason); // OnActorEndPlay Engine.AutoDestroySubsystem.OnActorEndPlay // (Final|Native|Private) // <Game+0x3c92250>
	None RegisterMovementComponent(None MovementComp, None AvoidanceWeight); // RegisterMovementComponent Engine.AvoidanceManager.RegisterMovementComponent // (Final|Native|Public|BlueprintCallable) // <Game+0x3c92310>
	void SetUV(None NewU, None NewUL, None NewV, None NewVL); // SetUV Engine.BillboardComponent.SetUV // (Native|Public|BlueprintCallable) // <Game+0x3c925f0>
	void SetMapPropertyByName(None Object, None PropertyName, None& Value); // SetMapPropertyByName Engine.BlueprintMapLibrary.SetMapPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c97ef0>
	None VideoCaptureDir(); // VideoCaptureDir Engine.BlueprintPathsLibrary.VideoCaptureDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3c9c5e0>
	None ScheduleLocalNotificationFromNow(None inSecondsFromNow, None& Title, None& Body, None& Action, None ActivationEvent); // ScheduleLocalNotificationFromNow Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationFromNow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c9e560>
	void SetSetPropertyByName(None Object, None PropertyName, None& Value); // SetSetPropertyByName Engine.BlueprintSetLibrary.SetSetPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c9e800>
	void Stop(None bImmediate); // Stop Engine.CameraAnimInst.Stop // (Final|Native|Public|BlueprintCallable) // <Game+0x3ca4930>
	void ReceiveStopShake(None bImmediately); // ReceiveStopShake Engine.CameraShake.ReceiveStopShake // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void StopAllCameraShakes(None bImmediately); // StopAllCameraShakes Engine.CameraShakeSourceComponent.StopAllCameraShakes // (Final|Native|Public|BlueprintCallable) // <Game+0x3ca8e80>
	None K2_TextSize(None RenderFont, None RenderText, None Scale); // K2_TextSize Engine.Canvas.K2_TextSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3ca8cb0>
	void UpdateResource(); // UpdateResource Engine.CanvasRenderTarget2D.UpdateResource // (Native|Public|BlueprintCallable) // <Game+0x3cb0080>
	void SetChildActorClass(None InClass); // SetChildActorClass Engine.ChildActorComponent.SetChildActorClass // (Final|Native|Public|BlueprintCallable) // <Game+0x3cb7700>
	void GetValueRange(None& MinValue, None& MaxValue); // GetValueRange Engine.CurveBase.GetValueRange // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbfea0>
	None GetFloatValue(None InTime); // GetFloatValue Engine.CurveFloat.GetFloatValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbfc60>
	None GetLinearColorValue(None InTime); // GetLinearColorValue Engine.CurveLinearColor.GetLinearColorValue // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbfcf0>
	None Blueprint_GetSizeY(); // Blueprint_GetSizeY Engine.Texture2D.Blueprint_GetSizeY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3e1df20>
	None GetCurvePosition(None InCurve, None& Position); // GetCurvePosition Engine.CurveLinearColorAtlas.GetCurvePosition // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3cbf390>
	None GetCurveValue(None CurveName); // GetCurveValue Engine.CurveSourceInterface.GetCurveValue // (Native|Event|Public|BlueprintEvent|Const) // <Game+0x3cbf470>
	None GetVectorValue(None InTime); // GetVectorValue Engine.CurveVector.GetVectorValue // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbff80>
	void GetDataTableRowNames(None Table, None& OutRowNames); // GetDataTableRowNames Engine.DataTableFunctionLibrary.GetDataTableRowNames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3cbfb80>
	void ToggleDisplay(); // ToggleDisplay Engine.DebugCameraController.ToggleDisplay // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc00c0>
	void SetDecalMaterial(None NewDecalMaterial); // SetDecalMaterial Engine.DecalActor.SetDecalMaterial // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc3d90>
	void SetSortOrder(None Value); // SetSortOrder Engine.DecalComponent.SetSortOrder // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc4500>
	void ToggleEnabled(); // ToggleEnabled Engine.Light.ToggleEnabled // (Final|Native|Public|BlueprintCallable) // <Game+0x3d69860>
	void SetSamplesPerPixel(None NewValue); // SetSamplesPerPixel Engine.LightComponentBase.SetSamplesPerPixel // (Final|Native|Public|BlueprintCallable) // <Game+0x3d6c4e0>
	void SetVolumetricScatteringIntensity(None NewIntensity); // SetVolumetricScatteringIntensity Engine.LightComponent.SetVolumetricScatteringIntensity // (Final|Native|Public|BlueprintCallable) // <Game+0x3d697e0>
	void SetShadowDistanceFadeoutFraction(None NewValue); // SetShadowDistanceFadeoutFraction Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc4480>
	void SetSphereRadius(None InSphereRadius, None bUpdateOverlaps); // SetSphereRadius Engine.SphereComponent.SetSphereRadius // (Final|Native|Public|BlueprintCallable) // <Game+0x3e0be20>
	void ToggleActive(); // ToggleActive Engine.Emitter.ToggleActive // (Final|Native|Public|BlueprintCallable) // <Game+0x3cccba0>
	void OnRep_bEnabled(); // OnRep_bEnabled Engine.ExponentialHeightFog.OnRep_bEnabled // (Native|Public) // <Game+0x1e4f220>
	void SetVolumetricFogScatteringDistribution(None NewValue); // SetVolumetricFogScatteringDistribution Engine.ExponentialHeightFogComponent.SetVolumetricFogScatteringDistribution // (Final|Native|Public|BlueprintCallable) // <Game+0x3cded50>
	void Stop(); // Stop Engine.ForceFeedbackComponent.Stop // (Native|Public|BlueprintCallable) // <Game+0x3cdedd0>
	void UnloadStreamLevel(None WorldContextObject, None LevelName, None LatentInfo, None bShouldBlockOnUnload); // UnloadStreamLevel Engine.GameplayStatics.UnloadStreamLevel // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3cee4c0>
	void SetOuterConeAngle(None NewOuterConeAngle); // SetOuterConeAngle Engine.SpotLight.SetOuterConeAngle // (Final|Native|Public|BlueprintCallable) // <Game+0x3e10bd0>
	void StopPerformanceSnapshots(); // StopPerformanceSnapshots Engine.HealthSnapshotBlueprintLibrary.StopPerformanceSnapshots // (Final|Exec|Native|Static|Public|BlueprintCallable) // <Game+0x3cf73a0>
	None RandomSobolFloat(None Index, None Dimension, None Seed); // RandomSobolFloat Engine.ImportanceSamplingLibrary.RandomSobolFloat // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3cfdce0>
	None WasControllerKeyJustReleased(None Key); // WasControllerKeyJustReleased Engine.InputComponent.WasControllerKeyJustReleased // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cfd430>
	void SaveKeyMappings(); // SaveKeyMappings Engine.InputSettings.SaveKeyMappings // (Final|Native|Public|BlueprintCallable) // <Game+0x3cfe120>
	void StopSimulating(None& HitResult); // StopSimulating Engine.InterpToMovementComponent.StopSimulating // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3d07160>
	void SetArrayPropertyByName(None Object, None PropertyName, None& Value); // SetArrayPropertyByName Engine.KismetArrayLibrary.SetArrayPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3d0c070>
	void Parse_StringToGuid(None GuidString, None& OutGuid, None& SUCCESS); // Parse_StringToGuid Engine.KismetGuidLibrary.Parse_StringToGuid // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x3d0fa30>
	None PointerEvent_IsTouchEvent(None& Input); // PointerEvent_IsTouchEvent Engine.KismetInputLibrary.PointerEvent_IsTouchEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x3d109a0>
	None SetCurrentLocale(None Culture, None SaveToConfig); // SetCurrentLocale Engine.KismetInternationalizationLibrary.SetCurrentLocale // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d10e90>
	void SetVectorParameterValue(None WorldContextObject, None Collection, None ParameterName, None& ParameterValue); // SetVectorParameterValue Engine.KismetMaterialLibrary.SetVectorParameterValue // (Final|RequiredAPI|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d38e50>
	None Xor_IntInt(None A, None B); // Xor_IntInt Engine.KismetMathLibrary.Xor_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d406c0>
	void MarkBit(None& Data, None Index); // MarkBit Engine.KismetNodeHelperLibrary.MarkBit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3d47160>
	void SetCastInsetShadowForAllAttachments(None PrimitiveComponent, None bCastInsetShadow, None bLightAttachmentsAsGroup); // SetCastInsetShadowForAllAttachments Engine.KismetRenderingLibrary.SetCastInsetShadowForAllAttachments // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // <Game+0x3d485d0>
	None TrimTrailing(None SourceString); // TrimTrailing Engine.KismetStringLibrary.TrimTrailing // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d48de0>
	None IsRegisteredTableId(None TableID); // IsRegisteredTableId Engine.KismetStringTableLibrary.IsRegisteredTableId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d568d0>
	void UnregisterForRemoteNotifications(); // UnregisterForRemoteNotifications Engine.KismetSystemLibrary.UnregisterForRemoteNotifications // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d5b7a0>
	None TextTrimTrailing(None& InText); // TextTrimTrailing Engine.KismetTextLibrary.TextTrimTrailing // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x3d65980>
	None ShouldBeLoaded(); // ShouldBeLoaded Engine.LevelStreaming.ShouldBeLoaded // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x34ef380>
	None LoadLevelInstanceBySoftObjectPtr(None WorldContextObject, None Level, None Location, None Rotation, None& bOutSuccess); // LoadLevelInstanceBySoftObjectPtr Engine.LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d67fb0>
	void SetIntensityUnits(None NewIntensityUnits); // SetIntensityUnits Engine.LocalLightComponent.SetIntensityUnits // (Final|Native|Public|BlueprintCallable) // <Game+0x3d6c460>
	void SetElements(None& NewElements); // SetElements Engine.MaterialBillboardComponent.SetElements // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3d70e90>
	void SetVectorParameterValueByInfo(None& ParameterInfo, None Value); // SetVectorParameterValueByInfo Engine.MaterialInstanceDynamic.SetVectorParameterValueByInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d84500>
	void Stop(); // Stop Engine.MatineeActor.Stop // (Native|Public|BlueprintCallable) // <Game+0x1f19d50>
	void RemovePaintedVertices(None StaticMeshComponent); // RemovePaintedVertices Engine.MeshVertexPainterKismetLibrary.RemovePaintedVertices // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d8bec0>
	void OnJumpCompleteForKillcam(None bSuccess); // OnJumpCompleteForKillcam Engine.MK3DKillcamComponent.OnJumpCompleteForKillcam // (Final|Native|Public) // <Game+0x3d8ba80>
	void EnumerateMK3DTargetEvents(None World); // EnumerateMK3DTargetEvents Engine.MK3DTargetcamComponent.EnumerateMK3DTargetEvents // (Final|Native|Public) // <Game+0x3d8f400>
	None MakeReplaySample(None Actor); // MakeReplaySample Engine.ReplaySampleBase.MakeReplaySample // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d90580>
	None IsViewTargetPawn(None InPawn, None InPC); // IsViewTargetPawn Engine.MKUtils.IsViewTargetPawn // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d90300>
	void MarkPropertyDirtyFromRepIndex(None Object, None RepIndex, None PropertyName); // MarkPropertyDirtyFromRepIndex Engine.NetPushModelHelpers.MarkPropertyDirtyFromRepIndex // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d99f80>
	None ContainsEmitterType(None TypeData); // ContainsEmitterType Engine.ParticleSystem.ContainsEmitterType // (Final|Native|Public|BlueprintCallable) // <Game+0x3da9290>
	void SetTrailSourceData(None InFirstSocketName, None InSecondSocketName, None InWidthMode, None InWidth); // SetTrailSourceData Engine.ParticleSystemComponent.SetTrailSourceData // (Final|Native|Public|BlueprintCallable) // <Game+0x3daad40>
	void MakeNoise(None NoiseMaker, None Loudness, None& NoiseLocation); // MakeNoise Engine.PawnNoiseEmitterComponent.MakeNoise // (BlueprintAuthorityOnly|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3daf230>
	void SetStrengthMultiplyer(None InStrengthMultiplyer); // SetStrengthMultiplyer Engine.PhysicalAnimationComponent.SetStrengthMultiplyer // (Final|Native|Public|BlueprintCallable) // <Game+0x3daf610>
	void SetOrientationDriveTwistAndSwing(None bEnableTwistDrive, None bEnableSwingDrive); // SetOrientationDriveTwistAndSwing Engine.PhysicsConstraintComponent.SetOrientationDriveTwistAndSwing // (Final|Native|Public|BlueprintCallable) // <Game+0x3db3050>
	void SetTargetRotation(None NewRotation); // SetTargetRotation Engine.PhysicsHandleComponent.SetTargetRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3db3290>
	None GetSpringRestingPoint(); // GetSpringRestingPoint Engine.PhysicsSpringComponent.GetSpringRestingPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3db7110>
	void OnInterpToggle(None bEnable); // OnInterpToggle Engine.PlanarReflection.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // <Game+0x3db71b0>
	None SupportsConvertibleLaptops(); // SupportsConvertibleLaptops Engine.PlatformEventsComponent.SupportsConvertibleLaptops // (Final|Native|Public|BlueprintCallable) // <Game+0x3db81c0>
	None GetNumHeaders(); // GetNumHeaders Engine.PlatformInterfaceWebResponse.GetNumHeaders // (Native|Public) // <Game+0x151b2e0>
	void SetMouseSensitivity(None Sensitivity); // SetMouseSensitivity Engine.PlayerInput.SetMouseSensitivity // (Final|Exec|Native|Public) // <Game+0x3dc7aa0>
	void SetRadius(None NewRadius); // SetRadius Engine.PointLight.SetRadius // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3dc7b20>
	void SetSourceRadius(None bNewValue); // SetSourceRadius Engine.PointLightComponent.SetSourceRadius // (Final|Native|Public|BlueprintCallable) // <Game+0x3dc7ca0>
	void SetBoneTransformByName(None BoneName, None& InTransform, None BoneSpace); // SetBoneTransformByName Engine.PoseableMeshComponent.SetBoneTransformByName // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3dc7840>
	void AddOrUpdateBlendable(None InBlendableObject, None InWeight); // AddOrUpdateBlendable Engine.PostProcessComponent.AddOrUpdateBlendable // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3dc6c70>
	void AddOrUpdateBlendable(None InBlendableObject, None InWeight); // AddOrUpdateBlendable Engine.PostProcessVolume.AddOrUpdateBlendable // (Final|Native|Public|BlueprintCallable) // <Game+0x3dc6b20>
	void ToggleForce(); // ToggleForce Engine.RadialForceActor.ToggleForce // (Native|Public|BlueprintCallable) // <Game+0x1f184b0>
	void RemoveObjectTypeToAffect(None ObjectType); // RemoveObjectTypeToAffect Engine.RadialForceComponent.RemoveObjectTypeToAffect // (Native|Public|BlueprintCallable) // <Game+0x3dd3000>
	void SetSourceWidth(None bNewValue); // SetSourceWidth Engine.RectLightComponent.SetSourceWidth // (Final|Native|Public|BlueprintCallable) // <Game+0x3dd32b0>
	None GetTileSize(); // GetTileSize Engine.RuntimeVirtualTexture.GetTileSize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dd9220>
	None GetVirtualTextureTransform(); // GetVirtualTextureTransform Engine.RuntimeVirtualTextureComponent.GetVirtualTextureTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dd9270>
	void CaptureScene(); // CaptureScene Engine.SceneCaptureComponentCube.CaptureScene // (Final|Native|Public|BlueprintCallable) // <Game+0x3ddfff0>
	void OnInterpToggle(None bEnable); // OnInterpToggle Engine.SceneCaptureCube.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // <Game+0x3db71b0>
	void InitializeSocketFromLocation(None SkelComp, None WorldLocation, None WorldNormal); // InitializeSocketFromLocation Engine.SkeletalMeshSocket.InitializeSocketFromLocation // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3df6280>
	void SetSkyLuminanceFactor(None NewValue); // SetSkyLuminanceFactor Engine.SkyAtmosphereComponent.SetSkyLuminanceFactor // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3dfc320>
	void SetVolumetricScatteringIntensity(None NewIntensity); // SetVolumetricScatteringIntensity Engine.SkyLightComponent.SetVolumetricScatteringIntensity // (Final|Native|Public|BlueprintCallable) // <Game+0x3dfc3a0>
	void StopRecordingOutput(None WorldContextObject, None ExportType, None Name, None Path, None ExistingSoundWaveToOverwrite); // StopRecordingOutput Engine.SoundSubmix.StopRecordingOutput // (Final|Native|Public|BlueprintCallable) // <Game+0x3e04350>
	void UpdateMesh(); // UpdateMesh Engine.SplineMeshComponent.UpdateMesh // (Final|Native|Public|BlueprintCallable) // <Game+0x3e11380>
	void SetOuterConeAngle(None NewOuterConeAngle); // SetOuterConeAngle Engine.SpotLightComponent.SetOuterConeAngle // (Final|Native|Public|BlueprintCallable) // <Game+0x3e10c50>
	None IsCollisionFixApplied(); // IsCollisionFixApplied Engine.SpringArmComponent.IsCollisionFixApplied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3e10420>
	void RemoveSocket(None Socket); // RemoveSocket Engine.StaticMesh.RemoveSocket // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x1f801a0>
	void SetUVRect(None InUVRect); // SetUVRect Engine.StereoLayerComponent.SetUVRect // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3e15f80>
	void SetRadius(None InRadius); // SetRadius Engine.StereoLayerShapeCylinder.SetRadius // (Final|Native|Public|BlueprintCallable) // <Game+0x3e15c50>
	void SetEquirectProps(None InScaleBiases); // SetEquirectProps Engine.StereoLayerShapeEquirect.SetEquirectProps // (Final|Native|Public|BlueprintCallable) // <Game+0x3e15850>
	void ShowSplashScreen(); // ShowSplashScreen Engine.StereoLayerFunctionLibrary.ShowSplashScreen // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x2f10500>
	None GetWorldSubsystem(None ContextObject, None Class); // GetWorldSubsystem Engine.SubsystemBlueprintLibrary.GetWorldSubsystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3e19eb0>
	None GetTimecode(); // GetTimecode Engine.TimecodeProvider.GetTimecode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3e1e110>
	void SetYScale(None Value); // SetYScale Engine.TextRenderComponent.SetYScale // (Final|Native|Public|BlueprintCallable) // <Game+0x3e1a550>
	void Stop(); // Stop Engine.TimelineComponent.Stop // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3e1e920>
	None TwitterRequest(None URL, None& ParamKeysAndValues, None RequestMethod, None AccountIndex); // TwitterRequest Engine.TwitterIntegrationBase.TwitterRequest // (Native|Public|HasOutParms) // <Game+0x3e22e20>
	void SetIntensity(None NewIntensity); // SetIntensity Engine.VectorFieldComponent.SetIntensity // (Native|Public|BlueprintCallable) // <Game+0x3e22c30>
	void RedirectVislog(None SourceOwner, None DestinationOwner); // RedirectVislog Engine.VisualLoggerKismetLibrary.RedirectVislog // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d99ed0>
	void RegisterWithPlayerState(None OwningState); // RegisterWithPlayerState Engine.VOIPTalker.RegisterWithPlayerState // (Final|Native|Public|BlueprintCallable) // <Game+0x3e298a0>
	void SetMicThreshold(None InThreshold); // SetMicThreshold Engine.VOIPStatics.SetMicThreshold // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3e299a0>
	void SetWindType(None InNewType); // SetWindType Engine.WindDirectionalSourceComponent.SetWindType // (Final|Native|Public|BlueprintCallable) // <Game+0x3e29c10>
	void CheckAnyAction(None& AnyAction); // CheckAnyAction BP-HUDInteractionComponentBase.BP-HUDInteractionComponentBase_C.CheckAnyAction // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void UnPin(); // UnPin MagicLeapARPin.MagicLeapARPinComponent.UnPin // (Final|Native|Public|BlueprintCallable) // <Game+0x17b9e60>
	void UnBindToOnMagicLeapARPinUpdatedDelegate(None& Delegate); // UnBindToOnMagicLeapARPinUpdatedDelegate MagicLeapARPin.MagicLeapARPinFunctionLibrary.UnBindToOnMagicLeapARPinUpdatedDelegate // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x17b9dc0>
	void SetPosition(None Position_); // SetPosition LowEntryExtendedStandardLibrary.LowEntryBitDataReader.SetPosition // (Final|Native|Public|BlueprintCallable) // <Game+0x1061410>
	void AddStringUtf8Array(None& Value); // AddStringUtf8Array LowEntryExtendedStandardLibrary.LowEntryBitDataWriter.AddStringUtf8Array // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x10605a0>
	void SetPosition(None Position_); // SetPosition LowEntryExtendedStandardLibrary.LowEntryByteDataReader.SetPosition // (Final|Native|Public|BlueprintCallable) // <Game+0x1076c80>
	void AddStringUtf8Array(None& Value); // AddStringUtf8Array LowEntryExtendedStandardLibrary.LowEntryByteDataWriter.AddStringUtf8Array // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1066fc0>
	void SetBytes(None& ByteArray, None Index, None Length); // SetBytes LowEntryExtendedStandardLibrary.LowEntryDouble.SetBytes // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x10768d0>
	None XboxOnePlatform(); // XboxOnePlatform LowEntryExtendedStandardLibrary.LowEntryExtendedStandardLibrary.XboxOnePlatform // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x1067090>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionBoolean.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b750>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionFloat.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b890>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionInteger.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b9d0>
	void WaitTillDone(None WorldContextObject, None LatentInfo); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionNone.WaitTillDone // (Final|Native|Public|BlueprintCallable) // <Game+0x107bb10>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionObject.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107bc00>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionString.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107bd40>
	void SetBytes(None& ByteArray, None Index, None Length); // SetBytes LowEntryExtendedStandardLibrary.LowEntryLong.SetBytes // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x10768d0>
	None ToString(); // ToString LowEntryExtendedStandardLibrary.LowEntryParsedHashcash.ToString // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x107b6d0>
	void OnLoaded_395796F147F051B7CCBB17B8AB7F3577(None Loaded); // OnLoaded_395796F147F051B7CCBB17B8AB7F3577 BP-CheckWeightMap.BP-CheckWeightMap_C.OnLoaded_395796F147F051B7CCBB17B8AB7F3577 // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnMatchReceivedTurn(None Match, None bDidBecomeActive); // OnMatchReceivedTurn OnlineSubsystem.TurnBasedMatchInterface.OnMatchReceivedTurn // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetVertexInstanceUV(None VertexInstanceID, None UV, None UVIndex); // SetVertexInstanceUV StaticMeshDescription.StaticMeshDescription.SetVertexInstanceUV // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x34803b0>
	void SetDestructibleMesh(None NewMesh); // SetDestructibleMesh ApexDestruction.DestructibleComponent.SetDestructibleMesh // (Final|Native|Public|BlueprintCallable) // <Game+0x1092f60>
	void ExportToDisk(None Texture, None Filename, None& options); // ExportToDisk ImageWriteQueue.ImageWriteBlueprintLibrary.ExportToDisk // (Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x2731f00>
	void GetCachedAchievementProgress(None WorldContextObject, None PlayerController, None AchievementID, None& bFoundID, None& progress); // GetCachedAchievementProgress OnlineSubsystemUtils.AchievementBlueprintLibrary.GetCachedAchievementProgress // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11c8c90>
	None CacheAchievements(None WorldContextObject, None PlayerController); // CacheAchievements OnlineSubsystemUtils.AchievementQueryCallbackProxy.CacheAchievements // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c79c0>
	None WriteAchievementProgress(None WorldContextObject, None PlayerController, None AchievementName, None progress, None UserTag); // WriteAchievementProgress OnlineSubsystemUtils.AchievementWriteCallbackProxy.WriteAchievementProgress // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c95f0>
	None ConnectToService(None WorldContextObject, None PlayerController); // ConnectToService OnlineSubsystemUtils.ConnectionCallbackProxy.ConnectToService // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c7a80>
	None CreateSession(None WorldContextObject, None PlayerController, None PublicConnections, None bUseLAN); // CreateSession OnlineSubsystemUtils.CreateSessionCallbackProxy.CreateSession // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8040>
	None DestroySession(None WorldContextObject, None PlayerController); // DestroySession OnlineSubsystemUtils.DestroySessionCallbackProxy.DestroySession // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8170>
	None EndMatch(None WorldContextObject, None PlayerController, None MatchActor, None MatchID, None LocalPlayerOutcome, None OtherPlayersOutcome); // EndMatch OnlineSubsystemUtils.EndMatchCallbackProxy.EndMatch // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8230>
	None EndTurn(None WorldContextObject, None PlayerController, None MatchID, None TurnBasedMatchInterface); // EndTurn OnlineSubsystemUtils.EndTurnCallbackProxy.EndTurn // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8460>
	None GetServerName(None& Result); // GetServerName OnlineSubsystemUtils.FindSessionsCallbackProxy.GetServerName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x11c93d0>
	None FindTurnBasedMatch(None WorldContextObject, None PlayerController, None MatchActor, None MinPlayers, None MaxPlayers, None PlayerGroup, None ShowExistingMatches); // FindTurnBasedMatch OnlineSubsystemUtils.FindTurnBasedMatchCallbackProxy.FindTurnBasedMatch // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8730>
	None CreateProxyObjectForInAppPurchase(None PlayerController, None& ProductRequest); // CreateProxyObjectForInAppPurchase OnlineSubsystemUtils.InAppPurchaseCallbackProxy.CreateProxyObjectForInAppPurchase // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11c7c30>
	None CreateProxyObjectForInAppPurchaseUnprocessedPurchases(None PlayerController); // CreateProxyObjectForInAppPurchaseUnprocessedPurchases OnlineSubsystemUtils.InAppPurchaseCallbackProxy2.CreateProxyObjectForInAppPurchaseUnprocessedPurchases // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c7fc0>
	None CreateProxyObjectForInAppPurchaseQuery(None PlayerController, None& ProductIdentifiers); // CreateProxyObjectForInAppPurchaseQuery OnlineSubsystemUtils.InAppPurchaseQueryCallbackProxy.CreateProxyObjectForInAppPurchaseQuery // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11c7e30>
	None CreateProxyObjectForInAppPurchaseQuery(None PlayerController, None& ProductIdentifiers); // CreateProxyObjectForInAppPurchaseQuery OnlineSubsystemUtils.InAppPurchaseQueryCallbackProxy2.CreateProxyObjectForInAppPurchaseQuery // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11c7d20>
	None CreateProxyObjectForInAppPurchaseRestore(None& ConsumableProductFlags, None PlayerController); // CreateProxyObjectForInAppPurchaseRestore OnlineSubsystemUtils.InAppPurchaseRestoreCallbackProxy.CreateProxyObjectForInAppPurchaseRestore // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11cd2f0>
	None CreateProxyObjectForInAppPurchaseRestore(None& ConsumableProductFlags, None PlayerController); // CreateProxyObjectForInAppPurchaseRestore OnlineSubsystemUtils.InAppPurchaseRestoreCallbackProxy2.CreateProxyObjectForInAppPurchaseRestore // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11cd1d0>
	None JoinSession(None WorldContextObject, None PlayerController, None& SearchResult); // JoinSession OnlineSubsystemUtils.JoinSessionCallbackProxy.JoinSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11cd4d0>
	None WriteLeaderboardInteger(None PlayerController, None StatName, None StatValue); // WriteLeaderboardInteger OnlineSubsystemUtils.LeaderboardBlueprintLibrary.WriteLeaderboardInteger // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11ce2b0>
	None CreateProxyObjectForFlush(None PlayerController, None SessionName); // CreateProxyObjectForFlush OnlineSubsystemUtils.LeaderboardFlushCallbackProxy.CreateProxyObjectForFlush // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11cd110>
	None CreateProxyObjectForIntQuery(None PlayerController, None StatName); // CreateProxyObjectForIntQuery OnlineSubsystemUtils.LeaderboardQueryCallbackProxy.CreateProxyObjectForIntQuery // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11cd410>
	None Logout(None WorldContextObject, None PlayerController); // Logout OnlineSubsystemUtils.LogoutCallbackProxy.Logout // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11cd730>
	void ClientOnConnected(); // ClientOnConnected OnlineSubsystemUtils.OnlineBeaconClient.ClientOnConnected // (Final|Net|NetReliableNative|Event|Private|NetClient) // <Game+0x11ccfc0>
	void ServerUpdateReservationRequest(None SessionID, None ReservationUpdate); // ServerUpdateReservationRequest OnlineSubsystemUtils.PartyBeaconClient.ServerUpdateReservationRequest // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // <Game+0x11ce010>
	None QuitMatch(None WorldContextObject, None PlayerController, None MatchID, None Outcome, None TurnTimeoutInSeconds); // QuitMatch OnlineSubsystemUtils.QuitMatchCallbackProxy.QuitMatch // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11cd7f0>
	None ShowExternalLoginUI(None WorldContextObject, None InPlayerController); // ShowExternalLoginUI OnlineSubsystemUtils.ShowLoginUICallbackProxy.ShowExternalLoginUI // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11d0570>
	void ServerReservationRequest(None SessionID, None Reservation); // ServerReservationRequest OnlineSubsystemUtils.SpectatorBeaconClient.ServerReservationRequest // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // <Game+0x11d0370>
	void ServerPong(); // ServerPong OnlineSubsystemUtils.TestBeaconClient.ServerPong // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // <Game+0x11d0320>
	void RegisterTurnBasedMatchInterfaceObject(None WorldContextObject, None PlayerController, None Object); // RegisterTurnBasedMatchInterfaceObject OnlineSubsystemUtils.TurnBasedBlueprintLibrary.RegisterTurnBasedMatchInterfaceObject // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11d0230>
	None IsIdling(); // IsIdling OnlineSubsystemUtils.VoipListenerSynthComponent.IsIdling // (Final|Native|Public|BlueprintCallable) // <Game+0x11d0200>
	void IsMaterialData(None ItemKey, None& bRet, None& Index); // IsMaterialData UW-MatchEnd_RewardSlot_02.UW-MatchEnd_RewardSlot_02_C.IsMaterialData // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SendUnreliableMessage(None& Bytes); // SendUnreliableMessage LowEntrySocketConnection.LowEntryRawSocketConnection.SendUnreliableMessage // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1086830>
	void SetPeriodicConnectionValidationEnabled(None Enabled); // SetPeriodicConnectionValidationEnabled LowEntrySocketConnection.LowEntrySocketConnection.SetPeriodicConnectionValidationEnabled // (Final|Native|Public|BlueprintCallable) // <Game+0x1086990>
	void Relisten(None SocketConnection, None WorldContextObject, None LatentInfo); // Relisten LowEntrySocketConnection.LowEntrySocketConnectionLibrary.Relisten // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x1086000>
	void UpdateHighlightNameColor(); // UpdateHighlightNameColor UW-ReplayPlayerListItemWidget.UW-ReplayPlayerListItemWidget_C.UpdateHighlightNameColor // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnInitializedFSM(None Context); // OnInitializedFSM UFSM.FSMInterface.OnInitializedFSM // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x11ef360>
	None FSM_SetState_Async(None FSM, None WaitForSeconds, None Name, None Loop); // FSM_SetState_Async UFSM.FSM_SetState_Async.FSM_SetState_Async // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11ee8d0>
	None FSM_SetStateID_Async(None FSM, None WaitForSeconds, None ID, None Loop); // FSM_SetStateID_Async UFSM.FSM_SetStateID_Async.FSM_SetStateID_Async // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11ee1a0>
	None FSM_SetState_ConditionalAsync(None FSM, None WaitForSeconds, None Name, None Condition, None Loop); // FSM_SetState_ConditionalAsync UFSM.FSM_SetState_ConditionalAsync.FSM_SetState_ConditionalAsync // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11eec20>
	None FSM_SetStateID_ConditionalAsync(None FSM, None WaitForSeconds, None ID, None Condition, None Loop); // FSM_SetStateID_ConditionalAsync UFSM.FSM_SetStateID_ConditionalAsync.FSM_SetStateID_ConditionalAsync // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11ee500>
	None FSM_SetState_AsyncWithCallbacks(None FSM, None WaitForSeconds, None Name, None Loop, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_SetState_AsyncWithCallbacks UFSM.FSM_SetState_AsyncWithCallbacks.FSM_SetState_AsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11eea10>
	None FSM_SetStateID_AsyncWithCallbacks(None FSM, None WaitForSeconds, None ID, None Loop, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_SetStateID_AsyncWithCallbacks UFSM.FSM_SetStateID_AsyncWithCallbacks.FSM_SetStateID_AsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11ee2e0>
	None FSM_SetState_ConditionalAsyncWithCallbacks(None FSM, None WaitForSeconds, None Name, None Condition, None Loop, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_SetState_ConditionalAsyncWithCallbacks UFSM.FSM_SetState_ConditionalAsyncWithCallbacks.FSM_SetState_ConditionalAsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11eeda0>
	None FSM_SetStateID_ConditionalAsyncWithCallbacks(None FSM, None WaitForSeconds, None ID, None Condition, None Loop, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_SetStateID_ConditionalAsyncWithCallbacks UFSM.FSM_SetStateID_ConditionalAsyncWithCallbacks.FSM_SetStateID_ConditionalAsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11ee680>
	None FSM_FinishState_Async(None FSM, None WaitForSeconds); // FSM_FinishState_Async UFSM.FSM_FinishState_Async.FSM_FinishState_Async // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11edb80>
	None FSM_FinishState_ConditionalAsync(None FSM, None Condition, None WaitForSeconds, None Fallback); // FSM_FinishState_ConditionalAsync UFSM.FSM_FinishState_ConditionalAsync.FSM_FinishState_ConditionalAsync // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11edde0>
	None FSM_FinishState_AsyncWithCallbacks(None FSM, None WaitForSeconds, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_FinishState_AsyncWithCallbacks UFSM.FSM_FinishState_AsyncWithCallbacks.FSM_FinishState_AsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11edc50>
	None FSM_FinishState_ConditionalAsyncWithCallbacks(None FSM, None Condition, None WaitForSeconds, None Fallback, None& ExitPreviousStateCallback, None& BeginNextStateCallback, None& BeginFallbackStateCallback); // FSM_FinishState_ConditionalAsyncWithCallbacks UFSM.FSM_FinishState_ConditionalAsyncWithCallbacks.FSM_FinishState_ConditionalAsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11edf20>
	None FSM_EvaluateTwoBools(None& BoolA, None& AndB); // FSM_EvaluateTwoBools UFSM.FSMHelper.FSM_EvaluateTwoBools // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x11f2900>
	void Update(None DeltaTime); // Update UFSM.ReactiveStateMachine.Update // (Final|Native|Private) // <Game+0x11f3670>
	None WasInputKeyJustReleased(None Key); // WasInputKeyJustReleased UFSM.StateAction.WasInputKeyJustReleased // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // <Game+0x11f37e0>
	None SpawnMachine(None Context, None MachineClass, None MachineID); // SpawnMachine UFSM.ReactiveStateMachineFactory.SpawnMachine // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11fa550>
	None GetFSMComponentByName(None Name); // GetFSMComponentByName UFSM.StateMachineABP.GetFSMComponentByName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x11f7930>
	void Update(None UpState, None& Callback); // Update UFSM.StateMachineComponent.Update // (Native|Protected|HasOutParms) // <Game+0x11fa6a0>
	void SetTimerCount(); // SetTimerCount ConfirmPopupWidget.ConfirmPopupWidget_C.SetTimerCount // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdateSideMesh(None InPrototype, None MeshRelativeLocation, None MeshRelativeRotation, None MeshRelativeScale, None SocketIndex, None IsEnable, None IsNormalized); // UpdateSideMesh RoadRuntime.CrossActor.UpdateSideMesh // (Final|Native|Public|HasDefaults) // <Game+0x109c680>
	void UpdateSplineMesh(None MeshIndex); // UpdateSplineMesh RoadRuntime.RoadActor.UpdateSplineMesh // (Final|Native|Public) // <Game+0x109cb60>
	void Init(None Title, None Value); // Init UW-MatchEnd_GoldList.UW-MatchEnd_GoldList_C.Init // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Stop(); // Stop AudioMixer.SynthComponent.Stop // (Final|Native|Public|BlueprintCallable) // <Game+0x33f9980>
	None TrimAudioCache(None InMegabytesToFree); // TrimAudioCache AudioMixer.AudioMixerBlueprintLibrary.TrimAudioCache // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x33f9c80>
	void SetSettings(None& Settings); // SetSettings AudioMixer.SubmixEffectDynamicsProcessorPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x33f90c0>
	void SetSettings(None& InSettings); // SetSettings AudioMixer.SubmixEffectSubmixEQPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0790>
	void SetSettingsWithReverbEffect(None InReverbEffect, None WetLevel, None DryLevel); // SetSettingsWithReverbEffect AudioMixer.SubmixEffectReverbPreset.SetSettingsWithReverbEffect // (Final|Native|Public|BlueprintCallable) // <Game+0x33f9450>
	void SetSettingsWithReverbEffect(None InReverbEffect, None WetLevel, None DryLevel); // SetSettingsWithReverbEffect AudioMixer.SubmixEffectReverbFastPreset.SetSettingsWithReverbEffect // (Final|Native|Public|BlueprintCallable) // <Game+0x33f9350>
	None Validate(); // Validate MediaAssets.MediaSource.Validate // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x34ef380>
	void SetFilePath(None Path); // SetFilePath MediaAssets.FileMediaSource.SetFilePath // (Final|Native|Public|BlueprintCallable) // <Game+0x34ee580>
	void EnumerateWebcamCaptureDevices(None& OutDevices, None Filter); // EnumerateWebcamCaptureDevices MediaAssets.MediaBlueprintFunctionLibrary.EnumerateWebcamCaptureDevices // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x34ebef0>
	None GetMediaTexture(); // GetMediaTexture MediaAssets.MediaComponent.GetMediaTexture // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2ef12a0>
	None SupportsSeeking(); // SupportsSeeking MediaAssets.MediaPlayer.SupportsSeeking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x34ef350>
	None Replace(None Index, None Replacement); // Replace MediaAssets.MediaPlaylist.Replace // (Final|Native|Public|BlueprintCallable) // <Game+0x34ee040>
	void SetSpectralAnalysisSettings(None InFrequenciesToAnalyze, None InFFTSize); // SetSpectralAnalysisSettings MediaAssets.MediaSoundComponent.SetSpectralAnalysisSettings // (Final|Native|Public|BlueprintCallable) // <Game+0x34eecc0>
	void SetMediaPlayer(None NewMediaPlayer); // SetMediaPlayer MediaAssets.MediaTexture.SetMediaPlayer // (Final|Native|Public|BlueprintCallable) // <Game+0x34eeb20>
	void SetOpacity(); // SetOpacity UW-Lobby_Craft_Recipe.UW-Lobby_Craft_Recipe_C.SetOpacity // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ServerRPVPing(); // ServerRPVPing ReplicationOptimizer.ReplicationPingComponet.ServerRPVPing // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // <Game+0x120d600>
	void SetSequencePath(None Path); // SetSequencePath ImgMedia.ImgMediaSource.SetSequencePath // (Final|Native|Public|BlueprintCallable) // <Game+0x10a92e0>
	None UseBlackboard(None BlackboardAsset, None& BlackboardComponent); // UseBlackboard AIModule.AIController.UseBlackboard // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3fa7550>
	void OnMoveCompleted(None RequestID, None MovementResult); // OnMoveCompleted AIModule.AIAsyncTaskBlueprintProxy.OnMoveCompleted // (Final|Native|Public) // <Game+0x3fa6af0>
	void UnlockAIResourcesWithAnimation(None AnimInstance, None bUnlockMovement, None UnlockAILogic); // UnlockAIResourcesWithAnimation AIModule.AIBlueprintHelperLibrary.UnlockAIResourcesWithAnimation // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // <Game+0x3fa7440>
	void SetSenseEnabled(None SenseClass, None bEnable); // SetSenseEnabled AIModule.AIPerceptionComponent.SetSenseEnabled // (Final|Native|Public|BlueprintCallable) // <Game+0x3fa6f70>
	void UnregisterFromSense(None SenseClass); // UnregisterFromSense AIModule.AIPerceptionStimuliSourceComponent.UnregisterFromSense // (Final|Native|Public|BlueprintCallable) // <Game+0x3fabf40>
	void ReportPerceptionEvent(None WorldContextObject, None PerceptionEvent); // ReportPerceptionEvent AIModule.AIPerceptionSystem.ReportPerceptionEvent // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fabc70>
	None OnUpdate(None& EventsToProcess); // OnUpdate AIModule.AISense_Blueprint.OnUpdate // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void ReportDamageEvent(None WorldContextObject, None DamagedActor, None Instigator, None DamageAmount, None EventLocation, None HitLocation); // ReportDamageEvent AIModule.AISense_Damage.ReportDamageEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x3fab860>
	void ReportNoiseEvent(None WorldContextObject, None NoiseLocation, None Loudness, None Instigator, None MaxRange, None Tag); // ReportNoiseEvent AIModule.AISense_Hearing.ReportNoiseEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x3fabab0>
	void RequestPawnPredictionEvent(None Requestor, None PredictedActor, None PredictionTime); // RequestPawnPredictionEvent AIModule.AISense_Prediction.RequestPawnPredictionEvent // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fabe20>
	void AILoggingVerbose(); // AILoggingVerbose AIModule.AISystem.AILoggingVerbose // (Exec|Native|Public) // <Game+0x2edce10>
	None AIMoveTo(None Controller, None GoalLocation, None GoalActor, None AcceptanceRadius, None StopOnOverlap, None AcceptPartialPath, None bUsePathfinding, None bLockAILogic, None bUseContinuosGoalTracking, None ProjectGoalOnNavigation); // AIMoveTo AIModule.AITask_MoveTo.AIMoveTo // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x3fafdd0>
	None RunEQS(None Controller, None QueryTemplate); // RunEQS AIModule.AITask_RunEQS.RunEQS // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fb0c10>
	void StopLogic(None reason); // StopLogic AIModule.BrainComponent.StopLogic // (Native|Public|BlueprintCallable) // <Game+0x3fb6b50>
	void SetDynamicSubtree(None InjectTag, None BehaviorAsset); // SetDynamicSubtree AIModule.BehaviorTreeComponent.SetDynamicSubtree // (Native|Public|BlueprintCallable) // <Game+0x3fb0cd0>
	None GetBlackboardAsset(); // GetBlackboardAsset AIModule.BlackboardAssetProvider.GetBlackboardAsset // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x1f98cb0>
	void SetValueAsVector(None& KeyName, None VectorValue); // SetValueAsVector AIModule.BlackboardComponent.SetValueAsVector // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3fb1590>
	void ReceiveTickAI(None OwnerController, None ControlledPawn, None DeltaSeconds); // ReceiveTickAI AIModule.BTDecorator_BlueprintBase.ReceiveTickAI // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void StopUsingExternalEvent(None NodeOwner); // StopUsingExternalEvent AIModule.BTFunctionLibrary.StopUsingExternalEvent // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d51bf0>
	void ReceiveTickAI(None OwnerController, None ControlledPawn, None DeltaSeconds); // ReceiveTickAI AIModule.BTService_BlueprintBase.ReceiveTickAI // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void SetFinishOnMessageWithId(None MessageName, None RequestID); // SetFinishOnMessageWithId AIModule.BTTask_BlueprintBase.SetFinishOnMessageWithId // (Final|Native|Protected|BlueprintCallable) // <Game+0x3fb9a50>
	void OnNavDataRegistered(None NavData); // OnNavDataRegistered AIModule.PathFollowingComponent.OnNavDataRegistered // (Final|Native|Protected) // <Game+0x3fc4f00>
	void SuspendCrowdSteering(None bSuspend); // SuspendCrowdSteering AIModule.CrowdFollowingComponent.SuspendCrowdSteering // (Native|Public|BlueprintCallable) // <Game+0x3fb9b10>
	void ProvideSingleLocation(None QuerierObject, None QuerierActor, None& ResultingLocation); // ProvideSingleLocation AIModule.EnvQueryContext_BlueprintBase.ProvideSingleLocation // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent|Const) // <Game+0x23ad490>
	None GetQuerier(); // GetQuerier AIModule.EnvQueryGenerator_BlueprintBase.GetQuerier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3fbd1b0>
	void SetNamedParam(None ParamName, None Value); // SetNamedParam AIModule.EnvQueryInstanceBlueprintWrapper.SetNamedParam // (Final|Native|Public|BlueprintCallable) // <Game+0x3fbd5e0>
	None RunEQSQuery(None WorldContextObject, None QueryTemplate, None Querier, None RunMode, None WrapperClass); // RunEQSQuery AIModule.EnvQueryManager.RunEQSQuery // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fbd460>
	void SetSmartLinkEnabled(None bEnabled); // SetSmartLinkEnabled AIModule.NavLinkProxy.SetSmartLinkEnabled // (Final|Native|Public|BlueprintCallable) // <Game+0x3fc2930>
	None SetLocalNavigationGridDensity(None WorldContextObject, None CellSize); // SetLocalNavigationGridDensity AIModule.NavLocalGridManager.SetLocalNavigationGridDensity // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fc2860>
	None GetActionPriority(); // GetActionPriority AIModule.PawnAction.GetActionPriority // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x1895fe0>
	void ActionTick(None ControlledPawn, None DeltaSeconds); // ActionTick AIModule.PawnAction_BlueprintBase.ActionTick // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None K2_PushAction(None NewAction, None Priority, None Instigator); // K2_PushAction AIModule.PawnActionsComponent.K2_PushAction // (Final|Native|Public|BlueprintCallable) // <Game+0x3fc4c70>
	void SetSensingUpdatesEnabled(None bEnabled); // SetSensingUpdatesEnabled AIModule.PawnSensingComponent.SetSensingUpdatesEnabled // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // <Game+0x3fc5080>
	None RequestPrivilegeAsync(None Privilege, None& ResultDelegate); // RequestPrivilegeAsync MagicLeapPrivileges.MagicLeapPrivilegesFunctionLibrary.RequestPrivilegeAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x17f0070>
	None Get Chat Input Hint Text(); // Get Chat Input Hint Text Chat_MainWidget.Chat_MainWidget_C.Get Chat Input Hint Text // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void SetInputString(None Identifier, None Value); // SetInputString SubstanceCore.SubstanceGraphInstance.SetInputString // (Final|Native|Public|BlueprintCallable) // <Game+0x10c37d0>
	void SyncRendering(None InstancesToRender); // SyncRendering SubstanceCore.SubstanceUtility.SyncRendering // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // <Game+0x10c3910>
	None GetProjectlFullVersion(None Prefix); // GetProjectlFullVersion ProjectVersion.ProjectVersionStatics.GetProjectlFullVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x1238c40>
	void UpdateWholeDataModelFromStruct(None Arg); // UpdateWholeDataModelFromStruct CoherentUIGTPlugin.CoherentUIGTBaseComponent.UpdateWholeDataModelFromStruct // (Final|Native|Public|BlueprintCallable|Const) // <Game+0x1101140>
	void TriggerJSEvent_Widget(None Widget, None EventName, None JSEvent); // TriggerJSEvent_Widget CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.TriggerJSEvent_Widget // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11043b0>
	void SetupUIGTView(None PageUrl, None bIsTransparent, None ClickThroughAlphaThreshold, None AnimationFrameDefer, None bDelayedUpdate); // SetupUIGTView CoherentUIGTPlugin.CoherentUIGTGameHUD.SetupUIGTView // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x1103f40>
	void ToggleCoherentUIGTInputFocus(); // ToggleCoherentUIGTInputFocus CoherentUIGTPlugin.CoherentUIGTInputActor.ToggleCoherentUIGTInputFocus // (Final|Native|Public|BlueprintCallable) // <Game+0x11041a0>
	void AddText(None& Text); // AddText CoherentUIGTPlugin.CoherentUIGTJSEvent.AddText // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1106e40>
	void ReadObject(None Index, None Object); // ReadObject CoherentUIGTPlugin.CoherentUIGTJSPayload.ReadObject // (Final|Native|Public|BlueprintCallable) // <Game+0x1107790>
	void OnLiveViewSizeRequest(None baseComponent, None Name, None& Width, None& Height); // OnLiveViewSizeRequest CoherentUIGTPlugin.CoherentUIGTLiveView.OnLiveViewSizeRequest // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1107600>
	void UpdateWholeDataModelFromStruct(None Arg); // UpdateWholeDataModelFromStruct CoherentUIGTPlugin.CoherentUIGTWidget.UpdateWholeDataModelFromStruct // (Final|Native|Public|BlueprintCallable|Const) // <Game+0x1101210>
	None On_IMG-BG_MouseButtonDown_1(None MyGeometry, None& MouseEvent); // On_IMG-BG_MouseButtonDown_1 UW-BlackMarket_Slot_Attachment.UW-BlackMarket_Slot_Attachment_C.On_IMG-BG_MouseButtonDown_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveTick(None DeltaSeconds); // ReceiveTick BP-TransportAircraft.BP-TransportAircraft_C.ReceiveTick // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetAnimDriveSpringStiffness(None InStiffness); // SetAnimDriveSpringStiffness ClothingSystemRuntimeInterface.ClothingSimulationInteractor.SetAnimDriveSpringStiffness // (Native|Public|BlueprintCallable) // <Game+0x34d1ad0>
	void GetOrgKey(None IsSubKey, None& Key); // GetOrgKey SlotItemWidget.SlotItemWidget_C.GetOrgKey // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdatePing(); // UpdatePing UW-MS.UW-MS_C.UpdatePing // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetVisibility(None InVisibility); // SetVisibility UMG.Widget.SetVisibility // (Native|Public|BlueprintCallable) // <Game+0x3386ad0>
	void UnregisterInputComponent(); // UnregisterInputComponent UMG.UserWidget.UnregisterInputComponent // (Final|Native|Protected|BlueprintCallable) // <Game+0x33837e0>
	None RemoveChildAt(None Index); // RemoveChildAt UMG.PanelWidget.RemoveChildAt // (Final|Native|Public|BlueprintCallable) // <Game+0x33711c0>
	None SetContent(None Content); // SetContent UMG.ContentWidget.SetContent // (Final|Native|Public|BlueprintCallable) // <Game+0x3367710>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.Border.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3364650>
	None DownloadImage(None URL); // DownloadImage UMG.AsyncTaskDownloadImage.DownloadImage // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3362b00>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.BackgroundBlur.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3364550>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.BackgroundBlurSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x33645d0>
	None GetValue(); // GetValue UMG.BoolBinding.GetValue // (Final|Native|Public|Const) // <Game+0x3362e10>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.BorderSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x33646d0>
	None GetValue(); // GetValue UMG.BrushBinding.GetValue // (Final|Native|Public|Const) // <Game+0x3362e40>
	void SetTouchMethod(None InTouchMethod); // SetTouchMethod UMG.Button.SetTouchMethod // (Final|Native|Public|BlueprintCallable) // <Game+0x33644d0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.ButtonSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3364750>
	None AddChildToCanvas(None Content); // AddChildToCanvas UMG.CanvasPanel.AddChildToCanvas // (Final|Native|Public|BlueprintCallable) // <Game+0x3362a70>
	void SetZOrder(None InZOrder); // SetZOrder UMG.CanvasPanelSlot.SetZOrder // (Final|Native|Public|BlueprintCallable) // <Game+0x33647d0>
	void SetIsChecked(None InIsChecked); // SetIsChecked UMG.CheckBox.SetIsChecked // (Final|Native|Public|BlueprintCallable) // <Game+0x3363b60>
	None GetValue(); // GetValue UMG.CheckedStateBinding.GetValue // (Final|Native|Public|Const) // <Game+0x3367480>
	void SetRadius(None InRadius); // SetRadius UMG.CircularThrobber.SetRadius // (Final|Native|Public|BlueprintCallable) // <Game+0x3367f10>
	None GetSlateValue(); // GetSlateValue UMG.ColorBinding.GetSlateValue // (Final|Native|Public|Const) // <Game+0x33672d0>
	void SetSelectedOption(None Option); // SetSelectedOption UMG.ComboBoxString.SetSelectedOption // (Final|Native|Public|BlueprintCallable) // <Game+0x3368010>
	void Drop(None& PointerEvent); // Drop UMG.DragDropOperation.Drop // (Native|Event|Public|HasOutParms|BlueprintEvent) // <Game+0x3366dd0>
	void SetEntrySpacing(None& InEntrySpacing); // SetEntrySpacing UMG.DynamicEntryBoxBase.SetEntrySpacing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x33677a0>
	void Reset(None bDeleteWidgets); // Reset UMG.DynamicEntryBox.Reset // (Final|Native|Public|BlueprintCallable) // <Game+0x3367660>
	void SetText(None InText); // SetText UMG.EditableText.SetText // (Final|Native|Public|BlueprintCallable) // <Game+0x3368100>
	void SetText(None InText); // SetText UMG.EditableTextBox.SetText // (Final|Native|Public|BlueprintCallable) // <Game+0x33681e0>
	void SetIsExpanded_Animated(None IsExpanded); // SetIsExpanded_Animated UMG.ExpandableArea.SetIsExpanded_Animated // (Final|Native|Public|BlueprintCallable) // <Game+0x336c550>
	None GetValue(); // GetValue UMG.FloatBinding.GetValue // (Final|Native|Public|Const) // <Game+0x336b1c0>
	void SetRowFill(None columnIndex, None Coefficient); // SetRowFill UMG.GridPanel.SetRowFill // (Final|Native|Public|BlueprintCallable) // <Game+0x336cac0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.GridSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x336cf10>
	None AddChildToHorizontalBox(None Content); // AddChildToHorizontalBox UMG.HorizontalBox.AddChildToHorizontalBox // (Final|Native|Public|BlueprintCallable) // <Game+0x336a820>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.HorizontalBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x336cf90>
	void SetOpacity(None InOpacity); // SetOpacity UMG.Image.SetOpacity // (Final|Native|Public|BlueprintCallable) // <Game+0x336c8a0>
	void SetTextBlockVisibility(None InVisibility); // SetTextBlockVisibility UMG.InputKeySelector.SetTextBlockVisibility // (Final|Native|Public|BlueprintCallable) // <Game+0x336ce90>
	None GetValue(); // GetValue UMG.Int32Binding.GetValue // (Final|Native|Public|Const) // <Game+0x336b1f0>
	void SetCanCache(None CanCache); // SetCanCache UMG.InvalidationBox.SetCanCache // (Final|Native|Public|BlueprintCallable) // <Game+0x336bfd0>
	void BP_OnItemSelectionChanged(None bIsSelected); // BP_OnItemSelectionChanged UMG.UserListEntry.BP_OnItemSelectionChanged // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	None IsListItemSelected(None UserListEntry); // IsListItemSelected UMG.UserListEntryLibrary.IsListItemSelected // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x336b2c0>
	void OnListItemObjectSet(None ListItemObject); // OnListItemObjectSet UMG.UserObjectListEntry.OnListItemObjectSet // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	None GetListItemObject(None UserObjectListEntry); // GetListItemObject UMG.UserObjectListEntryLibrary.GetListItemObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x336b020>
	void SetWheelScrollMultiplier(None NewWheelScrollMultiplier); // SetWheelScrollMultiplier UMG.ListViewBase.SetWheelScrollMultiplier // (Final|Native|Public|BlueprintCallable) // <Game+0x3371bf0>
	void SetSelectionMode(None SelectionMode); // SetSelectionMode UMG.ListView.SetSelectionMode // (Final|Native|Public|BlueprintCallable) // <Game+0x336cd80>
	void ToggleOpen(None bFocusOnOpen); // ToggleOpen UMG.MenuAnchor.ToggleOpen // (Final|Native|Public|BlueprintCallable) // <Game+0x3371d50>
	None GetValue(); // GetValue UMG.MouseCursorBinding.GetValue // (Final|Native|Public|Const) // <Game+0x3370f30>
	void SetJustification(None InJustification); // SetJustification UMG.TextLayoutWidget.SetJustification // (Native|Public|BlueprintCallable) // <Game+0x3382670>
	void SetWidgetStyle(None& InWidgetStyle); // SetWidgetStyle UMG.MultiLineEditableText.SetWidgetStyle // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3371c70>
	void SetTextStyle(None& InTextStyle); // SetTextStyle UMG.MultiLineEditableTextBox.SetTextStyle // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3371ac0>
	None AddChildToOverlay(None Content); // AddChildToOverlay UMG.Overlay.AddChildToOverlay // (Final|Native|Public|BlueprintCallable) // <Game+0x33708d0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.OverlaySlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3371b70>
	void SetPercent(None InPercent); // SetPercent UMG.ProgressBar.SetPercent // (Final|Native|Public|BlueprintCallable) // <Game+0x3375a10>
	void SetTextureParameter(None TextureParameter); // SetTextureParameter UMG.RetainerBox.SetTextureParameter // (Final|Native|Public|BlueprintCallable) // <Game+0x3376210>
	void SetTextStyleSet(None NewTextStyleSet); // SetTextStyleSet UMG.RichTextBlock.SetTextStyleSet // (Final|Native|Public|BlueprintCallable) // <Game+0x3376190>
	void SetSidesToPad(None InPadLeft, None InPadRight, None InPadTop, None InPadBottom); // SetSidesToPad UMG.SafeZone.SetSidesToPad // (Final|Native|Public|BlueprintCallable) // <Game+0x3375d80>
	void SetUserSpecifiedScale(None InUserSpecifiedScale); // SetUserSpecifiedScale UMG.ScaleBox.SetUserSpecifiedScale // (Final|Native|Public|BlueprintCallable) // <Game+0x3376290>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.ScaleBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3364750>
	void SetState(None InOffsetFraction, None InThumbSizeFraction); // SetState UMG.ScrollBar.SetState // (Final|Native|Public|BlueprintCallable) // <Game+0x3375ef0>
	void SetWheelScrollMultiplier(None NewWheelScrollMultiplier); // SetWheelScrollMultiplier UMG.ScrollBox.SetWheelScrollMultiplier // (Final|Native|Public|BlueprintCallable) // <Game+0x3376390>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.ScrollBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3376310>
	void SetWidthOverride(None InWidthOverride); // SetWidthOverride UMG.SizeBox.SetWidthOverride // (Final|Native|Public|BlueprintCallable) // <Game+0x3376410>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.SizeBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x337a410>
	None TransformVectorLocalToAbsolute(None& Geometry, None LocalVector); // TransformVectorLocalToAbsolute UMG.SlateBlueprintLibrary.TransformVectorLocalToAbsolute // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x337a790>
	void SetValue(None InValue); // SetValue UMG.Slider.SetValue // (Final|Native|Public|BlueprintCallable) // <Game+0x337a310>
	void SetSize(None InSize); // SetSize UMG.Spacer.SetSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x337a110>
	void SetValue(None NewValue); // SetValue UMG.SpinBox.SetValue // (Final|Native|Public|BlueprintCallable) // <Game+0x337a390>
	None GetTextValue(); // GetTextValue UMG.TextBinding.GetTextValue // (Final|Native|Public|Const) // <Game+0x3380e50>
	void SetText(None InText); // SetText UMG.TextBlock.SetText // (Native|Public|BlueprintCallable) // <Game+0x33831a0>
	void SetNumberOfPieces(None InNumberOfPieces); // SetNumberOfPieces UMG.Throbber.SetNumberOfPieces // (Final|Native|Public|BlueprintCallable) // <Game+0x33829c0>
	void SetEntryWidth(None NewWidth); // SetEntryWidth UMG.TileView.SetEntryWidth // (Final|Native|Public|BlueprintCallable) // <Game+0x3382190>
	void SetItemExpansion(None Item, None bExpandItem); // SetItemExpansion UMG.TreeView.SetItemExpansion // (Final|Native|Public|BlueprintCallable) // <Game+0x33825a0>
	void SetUserTag(None InUserTag); // SetUserTag UMG.UMGSequencePlayer.SetUserTag // (Final|Native|Public|BlueprintCallable) // <Game+0x3383280>
	void SetSlotPadding(None InSlotPadding); // SetSlotPadding UMG.UniformGridPanel.SetSlotPadding // (Final|Native|Public|BlueprintCallable) // <Game+0x3382ee0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.UniformGridSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3383300>
	None AddChildToVerticalBox(None Content); // AddChildToVerticalBox UMG.VerticalBox.AddChildToVerticalBox // (Final|Native|Public|BlueprintCallable) // <Game+0x3385300>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.VerticalBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3386930>
	None Spawn(None ActorClass); // Spawn UMG.Viewport.Spawn // (Final|Native|Public|BlueprintCallable) // <Game+0x3386b50>
	None GetValue(); // GetValue UMG.VisibilityBinding.GetValue // (Final|Native|Public|Const) // <Game+0x33856c0>
	void UnbindFromAnimationStarted(None Widget, None Delegate); // UnbindFromAnimationStarted UMG.WidgetAnimation.UnbindFromAnimationStarted // (Final|Native|Public|BlueprintCallable) // <Game+0x338d0e0>
	None CreatePlayAnimationTimeRangeProxyObject(None& Result, None Widget, None InAnimation, None StartAtTime, None EndAtTime, None NumLoopsToPlay, None PlayMode, None PlaybackSpeed); // CreatePlayAnimationTimeRangeProxyObject UMG.WidgetAnimationPlayCallbackProxy.CreatePlayAnimationTimeRangeProxyObject // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3389770>
	None GetValue(); // GetValue UMG.WidgetBinding.GetValue // (Final|Native|Public|Const) // <Game+0x338b9f0>
};

