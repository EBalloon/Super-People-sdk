// BP-Weapon-M18_C BP-Weapon-M18.BP-Weapon-M18_C
// Size: 0x00 (Inherited: 0x1ff0)
struct ABP-Weapon-M18_C : ABP-GrenadeWeaponBase_C {
	None GeneratedMaterials; // 0x30(0x10)
	None GeneratedMeshes; // 0x40(0x10)
	None GeneratedTextures; // 0x50(0x10)
	None ParameterDecorations; // 0xe8(0x10)
	None TextureReuseCache; // 0x108(0x50)
	None ReferencedMaterials; // 0x320(0x10)
	None PhysicsAssetsToMerge; // 0x3d0(0x10)
	None Materials; // 0x28(0x50)
	None Textures; // 0x78(0x50)
	None ReferenceSkeletalMesh; // 0x28(0x08)
	None ReferenceStaticMesh; // 0x30(0x08)
	None Relevancy; // 0x38(0x01)
	None bDisableTextureLayoutManagement; // 0x39(0x01)
	None ReferencedMaterials; // 0x40(0x10)
	None ImageProperties; // 0x50(0x10)
	None GroupNodeMap; // 0x60(0x50)
	None ContributingMorphTargets; // 0xb0(0x10)
	None MorphTargetReconstructionInfo; // 0xc0(0x10)
	None VersionId; // 0xd0(0x10)
	None ParameterProperties; // 0xe0(0x10)
	None ParameterUIDataMap; // 0x140(0x50)
	None StateUIDataMap; // 0x190(0x50)
	None PhysicsAssetsMap; // 0x1e0(0x50)
	None MaskOutCache; // 0x230(0x28)
	None bIsChildObject; // 0x258(0x01)
	None MaskOutCache_HardRef; // 0x260(0x08)
	None CustomizableObject; // 0x28(0x08)
	None SkeletalMesh; // 0x30(0x08)
	None BoolParameters; // 0x38(0x10)
	None IntParameters; // 0x48(0x10)
	None FloatParameters; // 0x58(0x10)
	None TextureParameters; // 0x68(0x10)
	None VectorParameters; // 0x78(0x10)
	None ProjectorParameters; // 0x88(0x10)
	None bBuildParameterDecorations; // 0x98(0x01)
	None UpdatedDelegate; // 0xa0(0x10)
	None SkeletalMeshStatus; // 0x110(0x10)
	None MaterialTags; // 0x140(0x10)
	None PrivateData; // 0x1d0(0x08)
	None Textures; // 0x28(0x10)
	None PendingReleaseSkeletalMesh; // 0x28(0x10)
	None PreviewExternalImageProvider; // 0x48(0x08)
	None ProtectedCachedTextures; // 0x150(0x10)
	None DefaultInstanceLODManagement; // 0x170(0x08)
	None CurrentInstanceLODManagement; // 0x178(0x08)
	None SkippedLastRenderTime; // 0x23c(0x04)
	None CustomizableObjectInstance; // 0x240(0x08)
	None CustomizableSkeletalComponent; // 0x398(0x08)
	None RenderingLogSeverity; // 0x28(0x01)
	None ShowWarningsOnScreen; // 0x29(0x01)
	None DeveloperOptions; // 0x30(0x10)
	None Texture; // 0x70(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_HideKillAssist; // 0x250(0x08)
	None Anim_ShowAssist; // 0x258(0x08)
	None Anim_ShowKill; // 0x260(0x08)
	None T_AssistCount; // 0x268(0x08)
	None T_KillCount; // 0x270(0x08)
	None DefaultFontSize; // 0x278(0x04)
	None MiniFontSize; // 0x27c(0x04)
	None IsShowingKillCount; // 0x280(0x01)
	None Timer_HideKillCountText; // 0x288(0x08)
	None RemainTime; // 0x290(0x04)
	None Params; // 0xe0(0x40)
	None AnimationSections; // 0x58(0x10)
	None UberGraphFrame; // 0x310(0x08)
	None FirstCamera; // 0x318(0x08)
	None FirstSpringArm; // 0x320(0x08)
	None ThirdCamera; // 0x328(0x08)
	None SecondCamera; // 0x330(0x08)
	None DefaultSceneRoot; // 0x338(0x08)
	None DeltaSeconds; // 0x340(0x04)
	None TargetDeltaLocation; // 0x344(0x0c)
	None Character; // 0x350(0x08)
	None LowerBoundCameraHeightDelta; // 0x358(0x04)
	None bHeightUpdateFinished; // 0x35c(0x01)
	None ThridCameraRotationYawDelta; // 0x360(0x04)
	None ThirdCameraMinHeight; // 0x364(0x04)
	None FirstSpringArmDeltaZ; // 0x368(0x04)
	None DestructibleComponent; // 0x310(0x08)
	None OnActorFracture; // 0x318(0x10)
	None bFractureEffectOverride; // 0x700(0x01)
	None FractureEffects; // 0x708(0x10)
	None bEnableHardSleeping; // 0x718(0x01)
	None LargeChunkThreshold; // 0x71c(0x04)
	None OnComponentFracture; // 0x730(0x10)
	None OnFractureEffectSpawned; // 0x740(0x10)
	None CellSiteCount; // 0x28(0x04)
	None FractureMaterialDesc; // 0x2c(0x24)
	None RandomSeed; // 0x50(0x04)
	None VoronoiSites; // 0x58(0x10)
	None OriginalSubmeshCount; // 0x68(0x04)
	None Materials; // 0x70(0x10)
	None ChunkParameters; // 0x80(0x10)
	None DefaultDestructibleParameters; // 0x380(0x88)
	None FractureEffects; // 0x408(0x10)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_Slot_3; // 0x5c8(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x610(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x6d8(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x798(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x3f8(0x08)
	None Ani_PadOn; // 0x400(0x08)
	None BG_Pad; // 0x408(0x08)
	None btn_PerkDeckEnabled; // 0x410(0x08)
	None Canvas_ChangeEnable; // 0x418(0x08)
	None CanvasPanel; // 0x420(0x08)
	None CanvasPanel_3; // 0x428(0x08)
	None ComboBoxString_237; // 0x430(0x08)
	None CurHaveGoldValue; // 0x438(0x08)
	None CurPriceText; // 0x440(0x08)
	None Down; // 0x448(0x08)
	None EquipBg; // 0x450(0x08)
	None Free; // 0x458(0x08)
	None GoldImage; // 0x460(0x08)
	None GoldImage_2; // 0x468(0x08)
	None GoldLack; // 0x470(0x08)
	None HaveWeaponText; // 0x478(0x08)
	None HorizontalBox_1; // 0x480(0x08)
	None Image; // 0x488(0x08)
	None Image_2; // 0x490(0x08)
	None Image_3; // 0x498(0x08)
	None Image_4; // 0x4a0(0x08)
	None Image_5; // 0x4a8(0x08)
	None Image_91; // 0x4b0(0x08)
	None Image_119; // 0x4b8(0x08)
	None Image_172; // 0x4c0(0x08)
	None Image_192; // 0x4c8(0x08)
	None Image_251; // 0x4d0(0x08)
	None Image_362; // 0x4d8(0x08)
	None Image_400; // 0x4e0(0x08)
	None Image_545; // 0x4e8(0x08)
	None Image_552; // 0x4f0(0x08)
	None Image_614; // 0x4f8(0x08)
	None Image_722; // 0x500(0x08)
	None Image_1025; // 0x508(0x08)
	None Image_1262; // 0x510(0x08)
	None ItemIcon; // 0x518(0x08)
	None Items_1Text; // 0x520(0x08)
	None ItemScroll; // 0x528(0x08)
	None ItemsText; // 0x530(0x08)
	None OkText; // 0x538(0x08)
	None Overlay_4; // 0x540(0x08)
	None Overlay_215; // 0x548(0x08)
	None PriceBg; // 0x550(0x08)
	None PriceBg_2; // 0x558(0x08)
	None PriceText; // 0x560(0x08)
	None PriceValue; // 0x568(0x08)
	None RichTextBlock; // 0x570(0x08)
	None RichTextBlock_74; // 0x578(0x08)
	None SizeBox_4; // 0x580(0x08)
	None SlotBg; // 0x588(0x08)
	None SortText; // 0x590(0x08)
	None SpecialWeaponText; // 0x598(0x08)
	None TextBlock_3; // 0x5a0(0x08)
	None Up; // 0x5a8(0x08)
	None UW-PersonalSupplyBoxConsumableItemSlotWidget_2; // 0x5b0(0x08)
	None UW-PersonalSupplyBoxConsumableItemSlotWidget_3; // 0x5b8(0x08)
	None UW-PersonalSupplyBoxConsumableItemSlotWidget_4; // 0x5c0(0x08)
	None UW-PersonalSupplyBoxConsumableItemSlotWidget_5; // 0x5c8(0x08)
	None UW-PersonalSupplyBoxConsumableItemSlotWidget_6; // 0x5d0(0x08)
	None UW-PersonalSupplyBoxWeaponInfoWidget_186; // 0x5d8(0x08)
	None UW-SupplyToolTip; // 0x5e0(0x08)
	None UW-Timer; // 0x5e8(0x08)
	None VerticalBox_1; // 0x5f0(0x08)
	None WeaponScroll; // 0x5f8(0x08)
	None WidgetSwitcher_1; // 0x600(0x08)
	None SortType; // 0x608(0x10)
	None RarityList; // 0x618(0x10)
	None ComboxList; // 0x628(0x50)
	None SelectComboBox; // 0x678(0x10)
	None IsShowAni; // 0x688(0x01)
	None IsFree; // 0x689(0x01)
	None SaveSupplyItem; // 0x690(0x100)
	None CurOwnGold; // 0x790(0x04)
	None TotalPrice; // 0x794(0x04)
	None bIsPassthrough; // 0x1b40(0x01)
	None Type; // 0x28(0x01)
	None ByteValue; // 0x29(0x01)
	None IntegerValue; // 0x2c(0x04)
	None LongBytesValue; // 0x30(0x08)
	None FloatValue; // 0x38(0x04)
	None DoubleBytesValue; // 0x40(0x08)
	None BooleanValue; // 0x48(0x01)
	None StringUtf8Value; // 0x50(0x10)
	None ByteArrayValue; // 0x60(0x10)
	None IntegerArrayValue; // 0x70(0x10)
	None LongBytesArrayValue; // 0x80(0x10)
	None FloatArrayValue; // 0x90(0x10)
	None DoubleBytesArrayValue; // 0xa0(0x10)
	None BooleanArrayValue; // 0xb0(0x10)
	None StringUtf8ArrayValue; // 0xc0(0x10)
	None Bytes; // 0x28(0x10)
	None Position; // 0x38(0x04)
	None CurrentByte; // 0x3c(0x01)
	None CurrentBytePosition; // 0x40(0x04)
	None Bytes; // 0x28(0x10)
	None CurrentByte; // 0x38(0x01)
	None CurrentBytePosition; // 0x3c(0x04)
	None ByteArray; // 0x28(0x10)
	None Type; // 0x28(0x01)
	None ByteValue; // 0x29(0x01)
	None IntegerValue; // 0x2c(0x04)
	None LongBytesValue; // 0x30(0x08)
	None FloatValue; // 0x38(0x04)
	None DoubleBytesValue; // 0x40(0x08)
	None BooleanValue; // 0x48(0x01)
	None StringUtf8Value; // 0x50(0x10)
	None ByteArrayValue; // 0x60(0x10)
	None IntegerArrayValue; // 0x70(0x10)
	None LongBytesArrayValue; // 0x80(0x10)
	None FloatArrayValue; // 0x90(0x10)
	None DoubleBytesArrayValue; // 0xa0(0x10)
	None BooleanArrayValue; // 0xb0(0x10)
	None StringUtf8ArrayValue; // 0xc0(0x10)
	None Bytes; // 0x28(0x10)
	None Position; // 0x38(0x04)
	None Bytes; // 0x28(0x10)
	None Bytes; // 0x28(0x10)
	None Count; // 0x28(0x04)
	None Next; // 0x2c(0x01)
	None Finished; // 0x28(0x01)
	None Result; // 0x29(0x01)
	None KeepAliveCount; // 0x2c(0x04)
	None Finished; // 0x28(0x01)
	None Result; // 0x2c(0x04)
	None KeepAliveCount; // 0x30(0x04)
	None Finished; // 0x28(0x01)
	None Result; // 0x2c(0x04)
	None KeepAliveCount; // 0x30(0x04)
	None Finished; // 0x28(0x01)
	None KeepAliveCount; // 0x2c(0x04)
	None Finished; // 0x28(0x01)
	None Result; // 0x30(0x08)
	None KeepAliveCount; // 0x38(0x04)
	None Finished; // 0x28(0x01)
	None Result; // 0x30(0x10)
	None KeepAliveCount; // 0x40(0x04)
	None Bytes; // 0x28(0x10)
	None Valid; // 0x28(0x01)
	None Resource; // 0x30(0x10)
	None Date; // 0x40(0x08)
	None Bits; // 0x48(0x04)
	None WidgetReference; // 0x88(0x08)
	None InventorySlotWidgetKind; // 0x90(0x01)
	None Components; // 0x28(0x10)
	None bGenerateMeshDataFromTrackedGeometry; // 0x30(0x01)
	None bGenerateCollisionForMeshData; // 0x31(0x01)
	None bGenerateNavMeshForMeshData; // 0x32(0x01)
	None bUseMeshDataForOcclusion; // 0x33(0x01)
	None bRenderMeshDataInWireframe; // 0x34(0x01)
	None bTrackSceneObjects; // 0x35(0x01)
	None bUsePersonSegmentationForOcclusion; // 0x36(0x01)
	None WorldAlignment; // 0x37(0x01)
	None SessionType; // 0x38(0x01)
	None PlaneDetectionMode; // 0x39(0x01)
	None bHorizontalPlaneDetection; // 0x3a(0x01)
	None bVerticalPlaneDetection; // 0x3b(0x01)
	None bEnableAutoFocus; // 0x3c(0x01)
	None LightEstimationMode; // 0x3d(0x01)
	None FrameSyncMode; // 0x3e(0x01)
	None bEnableAutomaticCameraOverlay; // 0x3f(0x01)
	None bEnableAutomaticCameraTracking; // 0x40(0x01)
	None bResetCameraTracking; // 0x41(0x01)
	None bResetTrackedObjects; // 0x42(0x01)
	None CandidateImages; // 0x48(0x10)
	None MaxNumSimultaneousImagesTracked; // 0x58(0x04)
	None EnvironmentCaptureProbeType; // 0x5c(0x01)
	None WorldMapData; // 0x60(0x10)
	None CandidateObjects; // 0x70(0x10)
	None DesiredVideoFormat; // 0x80(0x0c)
	None FaceTrackingDirection; // 0x8c(0x01)
	None FaceTrackingUpdate; // 0x8d(0x01)
	None SerializedARCandidateImageDatabase; // 0x90(0x10)
	None EnabledSessionTrackingFeature; // 0xa0(0x01)
	None AmbientIntensityLumens; // 0x28(0x04)
	None AmbientColorTemperatureKelvin; // 0x2c(0x04)
	None AmbientColor; // 0x30(0x10)
	None CandidateTexture; // 0x30(0x08)
	None FriendlyName; // 0x38(0x10)
	None Width; // 0x48(0x04)
	None Height; // 0x4c(0x04)
	None Orientation; // 0x50(0x01)
	None OnSuccess; // 0x50(0x10)
	None OnFailed; // 0x60(0x10)
	None OnSuccess; // 0x50(0x10)
	None OnFailed; // 0x60(0x10)
	None TrackedGeometry; // 0x28(0x08)
	None PinnedComponent; // 0x30(0x08)
	None LocalToTrackingTransform; // 0x40(0x30)
	None LocalToAlignedTrackingTransform; // 0x70(0x30)
	None TrackingState; // 0xa0(0x01)
	None OnARTrackingStateChanged; // 0xc0(0x10)
	None OnARTransformUpdated; // 0xd0(0x10)
	None BufferSizePerChunk; // 0x3f8(0x04)
	None PreviewImageData; // 0x380(0x10)
	None ARWorldData; // 0x390(0x10)
	None PreviewImageBytesTotal; // 0x3a0(0x04)
	None ARWorldBytesTotal; // 0x3a4(0x04)
	None PreviewImageBytesDelivered; // 0x3a8(0x04)
	None ARWorldBytesDelivered; // 0x3ac(0x04)
	None CaptureProbe; // 0x320(0x08)
	None TextureType; // 0xb8(0x01)
	None Timestamp; // 0xbc(0x04)
	None ExternalTextureGuid; // 0xc0(0x10)
	None Size; // 0xd0(0x08)
	None DepthQuality; // 0xd8(0x01)
	None DepthAccuracy; // 0xd9(0x01)
	None bIsTemporallySmoothed; // 0xda(0x01)
	None TextureType; // 0x110(0x01)
	None Timestamp; // 0x114(0x04)
	None ExternalTextureGuid; // 0x118(0x10)
	None Size; // 0x128(0x08)
	None UniqueID; // 0x28(0x10)
	None LocalToTrackingTransform; // 0x40(0x30)
	None LocalToAlignedTrackingTransform; // 0x70(0x30)
	None TrackingState; // 0xa0(0x01)
	None UnderlyingMesh; // 0xb0(0x08)
	None ObjectClassification; // 0xb8(0x01)
	None LastUpdateFrameNumber; // 0xd0(0x04)
	None DebugName; // 0xe0(0x08)
	None Orientation; // 0xe8(0x01)
	None Center; // 0xec(0x0c)
	None Extent; // 0xf8(0x0c)
	None SubsumedBy; // 0x118(0x08)
	None DetectedImage; // 0xe8(0x08)
	None EstimatedSize; // 0xf0(0x08)
	None QRCode; // 0xf8(0x10)
	None Version; // 0x108(0x04)
	None LookAtTarget; // 0xe8(0x0c)
	None bIsTracked; // 0xf4(0x01)
	None BlendShapes; // 0xf8(0x50)
	None EnvironmentCaptureTexture; // 0xf8(0x08)
	None DetectedObject; // 0xe8(0x08)
	None OnAddTrackedGeometry; // 0xb0(0x10)
	None OnUpdateTrackedGeometry; // 0xc0(0x10)
	None OnRemoveTrackedGeometry; // 0xd0(0x10)
	None OnAddTrackedPlane; // 0xe0(0x10)
	None OnUpdateTrackedPlane; // 0xf0(0x10)
	None OnRemoveTrackedPlane; // 0x100(0x10)
	None OnAddTrackedPoint; // 0x110(0x10)
	None OnUpdateTrackedPoint; // 0x120(0x10)
	None OnRemoveTrackedPoint; // 0x130(0x10)
	None OnAddTrackedImage; // 0x140(0x10)
	None OnUpdateTrackedImage; // 0x150(0x10)
	None OnRemoveTrackedImage; // 0x160(0x10)
	None OnAddTrackedFace; // 0x170(0x10)
	None OnUpdateTrackedFace; // 0x180(0x10)
	None OnRemoveTrackedFace; // 0x190(0x10)
	None OnAddTrackedEnvProbe; // 0x1a0(0x10)
	None OnUpdateTrackedEnvProbe; // 0x1b0(0x10)
	None OnRemoveTrackedEnvProbe; // 0x1c0(0x10)
	None OnAddTrackedObject; // 0x1d0(0x10)
	None OnUpdateTrackedObject; // 0x1e0(0x10)
	None OnRemoveTrackedObject; // 0x1f0(0x10)
	None CandidateObjectData; // 0x30(0x10)
	None FriendlyName; // 0x40(0x10)
	None BoundingBox; // 0x50(0x1c)
	None PrimaryComponentTick; // 0x30(0x30)
	None ComponentTags; // 0x60(0x10)
	None AssetUserData; // 0x70(0x10)
	None UCSSerializationIndex; // 0x84(0x04)
	None bNetAddressable; // 0x88(0x01)
	None bReplicates; // 0x88(0x01)
	None bAutoActivate; // 0x89(0x01)
	None bIsActive; // 0x8a(0x01)
	None bEditableWhenInherited; // 0x8a(0x01)
	None bCanEverAffectNavigation; // 0x8a(0x01)
	None bIsEditorOnly; // 0x8a(0x01)
	None CreationMethod; // 0x8c(0x01)
	None OnComponentActivated; // 0x8d(0x01)
	None OnComponentDeactivated; // 0x8e(0x01)
	None UCSModifiedProperties; // 0x90(0x10)
	None PhysicsVolume; // 0x144(0x08)
	None AttachParent; // 0x1d0(0x08)
	None AttachSocketName; // 0x1dc(0x08)
	None AttachChildren; // 0xb8(0x10)
	None ClientAttachedChildren; // 0x190(0x10)
	None RelativeLocation; // 0x224(0x0c)
	None RelativeRotation; // 0x1b4(0x0c)
	None RelativeScale3D; // 0x1c4(0x0c)
	None ComponentVelocity; // 0x164(0x0c)
	None bComponentToWorldUpdated; // 0x140(0x01)
	None bAbsoluteLocation; // 0x220(0x01)
	None bAbsoluteRotation; // 0x1d8(0x01)
	None bAbsoluteScale; // 0x188(0x01)
	None bVisible; // 0xc8(0x01)
	None bShouldBeAttached; // 0x220(0x01)
	None bShouldSnapLocationWhenAttached; // 0x1b0(0x01)
	None bShouldSnapRotationWhenAttached; // 0x188(0x01)
	None bShouldUpdatePhysicsVolume; // 0x1a0(0x01)
	None bHiddenInGame; // 0x220(0x01)
	None bBoundsChangeTriggersStreamingDataRebuild; // 0xc8(0x01)
	None bUseAttachParentBound; // 0x1d8(0x01)
	None Mobility; // 0x221(0x01)
	None DetailMode; // 0x160(0x01)
	None PhysicsVolumeChangedDelegate; // 0xb0(0x01)
	None ReplaySamplable; // 0x28(0x01)
	None ReplaySampleClass; // 0x30(0x08)
	None ReplaySamplingFrequency; // 0x38(0x04)
	None ClientReplaySamplingGUID; // 0x3c(0x04)
	None bReplayLevelAttached; // 0x44(0x01)
	None ReplaySamplesForPlayback; // 0x68(0x10)
	None SelfActor; // 0x88(0x08)
	None PrimaryActorTick; // 0x1d8(0x30)
	None bNetTemporary; // 0x284(0x01)
	None bNetStartup; // 0x248(0x01)
	None bOnlyRelevantToOwner; // 0x1c4(0x01)
	None bAlwaysRelevant; // 0xa1(0x01)
	None bReplicateMovement; // 0x260(0x01)
	None bHidden; // 0x222(0x01)
	None bTearOff; // 0x284(0x01)
	None bExchangedRoles; // 0x120(0x01)
	None bNetLoadOnClient; // 0x138(0x01)
	None bNetUseOwnerRelevancy; // 0xe8(0x01)
	None bRelevantForNetworkReplays; // 0x170(0x01)
	None bRelevantForLevelBounds; // 0x138(0x01)
	None bReplayRewindable; // 0x9f(0x01)
	None bAllowTickBeforeBeginPlay; // 0x1c4(0x01)
	None bAutoDestroyWhenFinished; // 0x1c4(0x01)
	None bCanBeDamaged; // 0x1a0(0x01)
	None bBlockInput; // 0x303(0x01)
	None bCollideWhenPlacing; // 0x301(0x01)
	None bFindCameraComponentWhenViewTarget; // 0x251(0x01)
	None bGenerateOverlapEventsDuringLevelStreaming; // 0x30e(0x01)
	None bIgnoresOriginShifting; // 0x155(0x01)
	None bEnableAutoLODGeneration; // 0x251(0x01)
	None bIsEditorOnlyActor; // 0x120(0x01)
	None bActorSeamlessTraveled; // 0xea(0x01)
	None bReplicates; // 0x9d(0x01)
	None bCanBeInCluster; // 0x90(0x01)
	None bAllowReceiveTickEventOnDedicatedServer; // 0x198(0x01)
	None bActorEnableCollision; // 0x1b8(0x01)
	None bActorIsBeingDestroyed; // 0x30e(0x01)
	None UpdateOverlapsMethodDuringLevelStreaming; // 0x154(0x01)
	None DefaultUpdateOverlapsMethodDuringLevelStreaming; // 0xa3(0x01)
	None RemoteRole; // 0x279(0x01)
	None ReplicatedMovement; // 0xec(0x34)
	None InitialLifeSpan; // 0x2e0(0x04)
	None CustomTimeDilation; // 0x308(0x04)
	None AttachmentReplication; // 0xa8(0x40)
	None Owner; // 0x178(0x08)
	None NetDriverName; // 0x94(0x08)
	None Role; // 0x9e(0x01)
	None NetDormancy; // 0x238(0x01)
	None SpawnCollisionHandlingMethod; // 0x304(0x01)
	None AutoReceiveInput; // 0x302(0x01)
	None InputPriority; // 0x150(0x04)
	None InputComponent; // 0x2f8(0x08)
	None NetCullDistanceSquared; // 0x280(0x04)
	None NetTag; // 0x24c(0x04)
	None NetUpdateFrequency; // 0x27c(0x04)
	None MinNetUpdateFrequency; // 0x288(0x04)
	None NetPriority; // 0x21c(0x04)
	None Instigator; // 0x258(0x08)
	None Children; // 0x268(0x10)
	None RootComponent; // 0x158(0x08)
	None ControllingMatineeActors; // 0x208(0x10)
	None Layers; // 0x188(0x10)
	None ParentComponent; // 0x1bc(0x08)
	None bEnableRerunConstructionScript; // 0x30c(0x01)
	None Tags; // 0x140(0x10)
	None OnTakeAnyDamage; // 0x218(0x01)
	None OnTakePointDamage; // 0x27a(0x01)
	None OnTakeRadialDamage; // 0x9c(0x01)
	None OnActorBeginOverlap; // 0x27b(0x01)
	None OnActorEndOverlap; // 0xa0(0x01)
	None OnBeginCursorOver; // 0x221(0x01)
	None OnEndCursorOver; // 0xe9(0x01)
	None OnClicked; // 0x278(0x01)
	None OnReleased; // 0x2e4(0x01)
	None OnInputTouchBegin; // 0x300(0x01)
	None OnInputTouchEnd; // 0x285(0x01)
	None OnInputTouchEnter; // 0xa2(0x01)
	None OnInputTouchLeave; // 0x250(0x01)
	None OnActorHit; // 0x180(0x01)
	None OnDestroyed; // 0x220(0x01)
	None OnEndPlay; // 0x30d(0x01)
	None InstanceComponents; // 0x128(0x10)
	None BlueprintCreatedComponents; // 0x1a8(0x10)
	None LoadedObjects; // 0x1c8(0x10)
	None bShouldDoAnimNotifies; // 0x318(0x01)
	None bWakeOnLevelStart; // 0x318(0x01)
	None SkeletalMeshComponent; // 0x320(0x08)
	None ReplicatedMesh; // 0x328(0x08)
	None ReplicatedPhysAsset; // 0x330(0x08)
	None ReplicatedMaterial0; // 0x338(0x08)
	None ReplicatedMaterial1; // 0x340(0x08)
	None MinDrawDistance; // 0x240(0x04)
	None LDMaxDrawDistance; // 0x244(0x04)
	None CachedMaxDrawDistance; // 0x248(0x04)
	None DepthPriorityGroup; // 0x24c(0x01)
	None ViewOwnerDepthPriorityGroup; // 0x24d(0x01)
	None IndirectLightingCacheQuality; // 0x24e(0x01)
	None LightmapType; // 0x24f(0x01)
	None bUseMaxLODAsImposter; // 0x250(0x01)
	None bBatchImpostersAsInstances; // 0x250(0x01)
	None bNeverDistanceCull; // 0x250(0x01)
	None bAlwaysCreatePhysicsState; // 0x250(0x01)
	None bGenerateOverlapEvents; // 0x251(0x01)
	None bMultiBodyOverlap; // 0x251(0x01)
	None bTraceComplexOnMove; // 0x251(0x01)
	None bReturnMaterialOnMove; // 0x251(0x01)
	None bUseViewOwnerDepthPriorityGroup; // 0x251(0x01)
	None bAllowCullDistanceVolume; // 0x251(0x01)
	None bHasMotionBlurVelocityMeshes; // 0x251(0x01)
	None bVisibleInReflectionCaptures; // 0x251(0x01)
	None bVisibleInRayTracing; // 0x252(0x01)
	None bRenderInMainPass; // 0x252(0x01)
	None bRenderInDepthPass; // 0x252(0x01)
	None bReceivesDecals; // 0x252(0x01)
	None bOwnerNoSee; // 0x252(0x01)
	None bOnlyOwnerSee; // 0x252(0x01)
	None bIgnoreNearClippingForOcclusion; // 0x252(0x01)
	None bTreatAsBackgroundForOcclusion; // 0x252(0x01)
	None bUseAsOccluder; // 0x253(0x01)
	None bSelectable; // 0x253(0x01)
	None bForceMipStreaming; // 0x253(0x01)
	None bHasPerInstanceHitProxies; // 0x253(0x01)
	None CastShadow; // 0x253(0x01)
	None bAffectDynamicIndirectLighting; // 0x253(0x01)
	None bAffectDistanceFieldLighting; // 0x253(0x01)
	None bCastDynamicShadow; // 0x253(0x01)
	None bCastStaticShadow; // 0x254(0x01)
	None bCastDirectionalShadow; // 0x254(0x01)
	None bCastVolumetricTranslucentShadow; // 0x254(0x01)
	None bSelfShadowOnly; // 0x254(0x01)
	None bCastFarShadow; // 0x254(0x01)
	None bCastInsetShadow; // 0x254(0x01)
	None bCastCinematicShadow; // 0x254(0x01)
	None bCastHiddenShadow; // 0x254(0x01)
	None bCastShadowAsTwoSided; // 0x255(0x01)
	None bLightAsIfStatic; // 0x255(0x01)
	None bLightAttachmentsAsGroup; // 0x255(0x01)
	None bExcludeFromLightAttachmentGroup; // 0x255(0x01)
	None bReceiveMobileCSMShadows; // 0x255(0x01)
	None bSingleSampleShadowFromStationaryLights; // 0x255(0x01)
	None bIgnoreRadialImpulse; // 0x255(0x01)
	None bIgnoreRadialForce; // 0x255(0x01)
	None bApplyImpulseOnDamage; // 0x256(0x01)
	None bReplicatePhysicsToAutonomousProxy; // 0x256(0x01)
	None bFillCollisionUnderneathForNavmesh; // 0x256(0x01)
	None AlwaysLoadOnClient; // 0x256(0x01)
	None AlwaysLoadOnServer; // 0x256(0x01)
	None bUseEditorCompositing; // 0x256(0x01)
	None bRenderCustomDepth; // 0x256(0x01)
	None bHasNoStreamableTextures; // 0x257(0x01)
	None bHasCustomNavigableGeometry; // 0x258(0x01)
	None CanCharacterStepUpOn; // 0x25a(0x01)
	None LightingChannels; // 0x25b(0x01)
	None CustomDepthStencilWriteMask; // 0x25c(0x01)
	None CustomDepthStencilValue; // 0x260(0x04)
	None CustomPrimitiveData; // 0x268(0x10)
	None CustomPrimitiveDataInternal; // 0x278(0x10)
	None TranslucencySortPriority; // 0x288(0x04)
	None VisibilityId; // 0x28c(0x04)
	None RuntimeVirtualTextures; // 0x290(0x10)
	None VirtualTextureLodBias; // 0x2a0(0x01)
	None VirtualTextureCullMips; // 0x2a1(0x01)
	None VirtualTextureMinCoverage; // 0x2a2(0x01)
	None VirtualTextureRenderPassType; // 0x2a3(0x01)
	None LpvBiasMultiplier; // 0x2a8(0x04)
	None BoundsScale; // 0x2b4(0x04)
	None MoveIgnoreActors; // 0x2c8(0x10)
	None MoveIgnoreComponents; // 0x2d8(0x10)
	None BodyInstance; // 0x2f8(0x190)
	None OnComponentHit; // 0x488(0x01)
	None OnComponentBeginOverlap; // 0x489(0x01)
	None OnComponentEndOverlap; // 0x48a(0x01)
	None OnComponentWake; // 0x48b(0x01)
	None OnComponentSleep; // 0x48c(0x01)
	None OnBeginCursorOver; // 0x48e(0x01)
	None OnEndCursorOver; // 0x48f(0x01)
	None OnClicked; // 0x490(0x01)
	None OnReleased; // 0x491(0x01)
	None OnInputTouchBegin; // 0x492(0x01)
	None OnInputTouchEnd; // 0x493(0x01)
	None OnInputTouchEnter; // 0x494(0x01)
	None OnInputTouchLeave; // 0x495(0x01)
	None LODParentPrimitive; // 0x4b0(0x08)
	None MipStreamingScale; // 0x4b8(0x04)
	None OverrideMaterials; // 0x4c0(0x10)
	None bEnableMaterialParameterCaching; // 0x4e0(0x01)
	None SkeletalMesh; // 0x4e8(0x08)
	None MasterPoseComponent; // 0x4f0(0x08)
	None SkinCacheUsage; // 0x4f8(0x10)
	None PhysicsAssetOverride; // 0x600(0x08)
	None ForcedLodModel; // 0x608(0x04)
	None MinLodModel; // 0x60c(0x04)
	None StreamingDistanceMultiplier; // 0x618(0x04)
	None LODInfo; // 0x628(0x10)
	None VisibilityBasedAnimTickOption; // 0x65c(0x01)
	None bOverrideMinLod; // 0x65e(0x01)
	None bUseBoundsFromMasterPoseComponent; // 0x65e(0x01)
	None bForceWireframe; // 0x65e(0x01)
	None bDisplayBones; // 0x65e(0x01)
	None bDisableMorphTarget; // 0x65e(0x01)
	None bHideSkin; // 0x65e(0x01)
	None bPerBoneMotionBlur; // 0x65f(0x01)
	None bComponentUseFixedSkelBounds; // 0x65f(0x01)
	None bConsiderAllBodiesForBounds; // 0x65f(0x01)
	None bSyncAttachParentLOD; // 0x65f(0x01)
	None bCanHighlightSelectedSections; // 0x65f(0x01)
	None bRecentlyRendered; // 0x65f(0x01)
	None bCastCapsuleDirectShadow; // 0x65f(0x01)
	None bCastCapsuleIndirectShadow; // 0x65f(0x01)
	None bCPUSkinning; // 0x660(0x01)
	None bEnableUpdateRateOptimizations; // 0x660(0x01)
	None bDisplayDebugUpdateRateOptimizations; // 0x660(0x01)
	None bRenderStatic; // 0x660(0x01)
	None bIgnoreMasterPoseComponentLOD; // 0x660(0x01)
	None bCachedLocalBoundsUpToDate; // 0x660(0x01)
	None bForceMeshObjectUpdate; // 0x661(0x01)
	None CapsuleIndirectShadowMinVisibility; // 0x664(0x04)
	None CachedWorldSpaceBounds; // 0x678(0x1c)
	None CachedWorldToLocalTransform; // 0x6a0(0x40)
	None ForceMipLevelsToBeResidentTimestamp; // 0x28(0x08)
	None NumCinematicMipLevels; // 0x30(0x04)
	None StreamingIndex; // 0x34(0x04)
	None CachedCombinedLODBias; // 0x38(0x04)
	None CachedNumResidentLODs; // 0x3c(0x01)
	None bCachedReadyForStreaming; // 0x3d(0x01)
	None NeverStream; // 0x3d(0x01)
	None bGlobalForceMipLevelsToBeResident; // 0x3d(0x01)
	None bIsStreamable; // 0x3d(0x01)
	None bHasStreamingUpdatePending; // 0x3d(0x01)
	None bForceMiplevelsToBeResident; // 0x3d(0x01)
	None bIgnoreStreamingMipBias; // 0x3d(0x01)
	None bUseCinematicMipLevels; // 0x3d(0x01)
	None Skeleton; // 0x60(0x08)
	None ImportedBounds; // 0x68(0x1c)
	None ExtendedBounds; // 0x84(0x1c)
	None PositiveBoundsExtension; // 0xa0(0x0c)
	None NegativeBoundsExtension; // 0xac(0x0c)
	None Materials; // 0xb8(0x10)
	None SkelMirrorTable; // 0xc8(0x10)
	None LODInfo; // 0xd8(0x10)
	None MinLOD; // 0x138(0x04)
	None DisableBelowMinLodStripping; // 0x13c(0x01)
	None SkelMirrorAxis; // 0x13d(0x01)
	None SkelMirrorFlipAxis; // 0x13e(0x01)
	None bUseFullPrecisionUVs; // 0x13f(0x01)
	None bUseHighPrecisionTangentBasis; // 0x13f(0x01)
	None bHasBeenSimplified; // 0x13f(0x01)
	None bHasVertexColors; // 0x13f(0x01)
	None bEnablePerPolyCollision; // 0x13f(0x01)
	None BodySetup; // 0x140(0x08)
	None PhysicsAsset; // 0x148(0x08)
	None ShadowPhysicsAsset; // 0x150(0x08)
	None NodeMappingData; // 0x158(0x10)
	None MorphTargets; // 0x168(0x10)
	None PostProcessAnimBlueprint; // 0x2f0(0x08)
	None MeshClothingAssets; // 0x2f8(0x10)
	None SamplingInfo; // 0x308(0x30)
	None AssetUserData; // 0x338(0x10)
	None Sockets; // 0x350(0x10)
	None SkinWeightProfiles; // 0x370(0x10)
	None StaticMeshComponent; // 0x310(0x08)
	None bStaticMeshReplicateMovement; // 0x318(0x01)
	None NavigationGeometryGatheringMode; // 0x319(0x01)
	None LightingGuid; // 0x48(0x10)
	None LODBias; // 0x58(0x04)
	None CompressionSettings; // 0x5c(0x01)
	None Filter; // 0x5d(0x01)
	None MipLoadOptions; // 0x5e(0x01)
	None LODGroup; // 0x5f(0x01)
	None SRGB; // 0x60(0x01)
	None bNoTiling; // 0x60(0x01)
	None VirtualTextureStreaming; // 0x60(0x01)
	None CompressionYCoCg; // 0x60(0x01)
	None bAsyncResourceReleaseHasBeenStarted; // 0x60(0x01)
	None AssetUserData; // 0x68(0x10)
	None Format; // 0xc0(0x01)
	None PlayerOwner; // 0x310(0x08)
	None bLostFocusPaused; // 0x318(0x01)
	None bShowHUD; // 0x318(0x01)
	None bShowDebugInfo; // 0x318(0x01)
	None CurrentTargetIndex; // 0x31c(0x04)
	None bShowHitBoxDebugInfo; // 0x320(0x01)
	None bShowOverlays; // 0x320(0x01)
	None bEnableDebugTextShadow; // 0x320(0x01)
	None PostRenderedActors; // 0x328(0x10)
	None DebugDisplay; // 0x340(0x10)
	None ToggledDebugCategories; // 0x350(0x10)
	None Canvas; // 0x360(0x08)
	None DebugCanvas; // 0x368(0x08)
	None DebugTextList; // 0x370(0x10)
	None ShowDebugTargetDesiredClass; // 0x380(0x08)
	None ShowDebugTargetActor; // 0x388(0x08)
	None PlayerController; // 0x30(0x08)
	None CurrentNetSpeed; // 0x38(0x04)
	None ConfiguredInternetSpeed; // 0x3c(0x04)
	None ConfiguredLanSpeed; // 0x40(0x04)
	None SelfNetConnection; // 0xb0(0x08)
	None Children; // 0xb8(0x10)
	None Driver; // 0xc8(0x08)
	None PackageMapClass; // 0xd0(0x08)
	None PackageMap; // 0xd8(0x08)
	None OpenChannels; // 0xe0(0x10)
	None SentTemporaries; // 0xf0(0x10)
	None ViewTarget; // 0x100(0x08)
	None OwningActor; // 0x108(0x08)
	None MaxPacket; // 0x110(0x04)
	None InternalAck; // 0x114(0x01)
	None PlayerId; // 0x1d0(0x28)
	None LastReceiveTime; // 0x240(0x08)
	None ChannelsToTick; // 0x1580(0x10)
	None NetConnectionClassName; // 0x30(0x10)
	None ReplicationDriverClassName; // 0x40(0x10)
	None MaxDownloadSize; // 0x50(0x04)
	None bClampListenServerTickRate; // 0x54(0x01)
	None NetServerMaxTickRate; // 0x58(0x04)
	None MaxNetTickRate; // 0x5c(0x04)
	None MaxInternetClientRate; // 0x60(0x04)
	None MaxClientRate; // 0x64(0x04)
	None ServerTravelPause; // 0x68(0x04)
	None SpawnPrioritySeconds; // 0x6c(0x04)
	None RelevantTimeout; // 0x70(0x04)
	None KeepAliveTime; // 0x74(0x04)
	None InitialConnectTimeout; // 0x78(0x04)
	None ConnectionTimeout; // 0x7c(0x04)
	None TimeoutMultiplierForUnoptimizedBuilds; // 0x80(0x04)
	None bNoTimeouts; // 0x84(0x01)
	None bNeverApplyNetworkEmulationSettings; // 0x85(0x01)
	None ServerConnection; // 0x88(0x08)
	None ClientConnections; // 0x90(0x10)
	None RecentlyDisconnectedTrackingTime; // 0x100(0x04)
	None World; // 0x140(0x08)
	None WorldPackage; // 0x148(0x08)
	None NetConnectionClass; // 0x170(0x08)
	None ReplicationDriverClass; // 0x178(0x08)
	None NetDriverName; // 0x190(0x08)
	None ChannelDefinitions; // 0x198(0x10)
	None ChannelDefinitionMap; // 0x1a8(0x50)
	None ActorChannelPool; // 0x1f8(0x10)
	None Time; // 0x210(0x04)
	None ReplicationDriver; // 0x6e8(0x08)
	None TinyFont; // 0x30(0x08)
	None TinyFontName; // 0x38(0x18)
	None SmallFont; // 0x50(0x08)
	None SmallFontName; // 0x58(0x18)
	None MediumFont; // 0x70(0x08)
	None MediumFontName; // 0x78(0x18)
	None LargeFont; // 0x90(0x08)
	None LargeFontName; // 0x98(0x18)
	None SubtitleFont; // 0xb0(0x08)
	None SubtitleFontName; // 0xb8(0x18)
	None AdditionalFonts; // 0xd0(0x10)
	None AdditionalFontNames; // 0xe8(0x10)
	None ConsoleClass; // 0xf8(0x08)
	None ConsoleClassName; // 0x100(0x18)
	None GameViewportClientClass; // 0x118(0x08)
	None GameViewportClientClassName; // 0x120(0x18)
	None LocalPlayerClass; // 0x138(0x08)
	None LocalPlayerClassName; // 0x140(0x18)
	None WorldSettingsClass; // 0x158(0x08)
	None WorldSettingsClassName; // 0x160(0x18)
	None NavigationSystemClassName; // 0x178(0x18)
	None NavigationSystemClass; // 0x190(0x08)
	None NavigationSystemConfigClassName; // 0x198(0x18)
	None NavigationSystemConfigClass; // 0x1b0(0x08)
	None AvoidanceManagerClassName; // 0x1b8(0x18)
	None AvoidanceManagerClass; // 0x1d0(0x08)
	None PhysicsCollisionHandlerClass; // 0x1d8(0x08)
	None PhysicsCollisionHandlerClassName; // 0x1e0(0x18)
	None GameUserSettingsClassName; // 0x1f8(0x18)
	None GameUserSettingsClass; // 0x210(0x08)
	None AIControllerClassName; // 0x218(0x18)
	None GameUserSettings; // 0x230(0x08)
	None LevelScriptActorClass; // 0x238(0x08)
	None LevelScriptActorClassName; // 0x240(0x18)
	None DefaultBlueprintBaseClassName; // 0x258(0x18)
	None GameSingletonClassName; // 0x270(0x18)
	None GameSingleton; // 0x288(0x08)
	None AssetManagerClassName; // 0x290(0x18)
	None AssetManager; // 0x2a8(0x08)
	None DefaultTexture; // 0x2b0(0x08)
	None DefaultTextureName; // 0x2b8(0x18)
	None DefaultDiffuseTexture; // 0x2d0(0x08)
	None DefaultDiffuseTextureName; // 0x2d8(0x18)
	None DefaultBSPVertexTexture; // 0x2f0(0x08)
	None DefaultBSPVertexTextureName; // 0x2f8(0x18)
	None HighFrequencyNoiseTexture; // 0x310(0x08)
	None HighFrequencyNoiseTextureName; // 0x318(0x18)
	None DefaultBokehTexture; // 0x330(0x08)
	None DefaultBokehTextureName; // 0x338(0x18)
	None DefaultBloomKernelTexture; // 0x350(0x08)
	None DefaultBloomKernelTextureName; // 0x358(0x18)
	None WireframeMaterial; // 0x370(0x08)
	None WireframeMaterialName; // 0x378(0x10)
	None DebugMeshMaterial; // 0x388(0x08)
	None DebugMeshMaterialName; // 0x390(0x18)
	None EmissiveMeshMaterial; // 0x3a8(0x08)
	None EmissiveMeshMaterialName; // 0x3b0(0x18)
	None LevelColorationLitMaterial; // 0x3c8(0x08)
	None LevelColorationLitMaterialName; // 0x3d0(0x10)
	None LevelColorationUnlitMaterial; // 0x3e0(0x08)
	None LevelColorationUnlitMaterialName; // 0x3e8(0x10)
	None LightingTexelDensityMaterial; // 0x3f8(0x08)
	None LightingTexelDensityName; // 0x400(0x10)
	None ShadedLevelColorationLitMaterial; // 0x410(0x08)
	None ShadedLevelColorationLitMaterialName; // 0x418(0x10)
	None ShadedLevelColorationUnlitMaterial; // 0x428(0x08)
	None ShadedLevelColorationUnlitMaterialName; // 0x430(0x10)
	None RemoveSurfaceMaterial; // 0x440(0x08)
	None RemoveSurfaceMaterialName; // 0x448(0x18)
	None VertexColorMaterial; // 0x460(0x08)
	None VertexColorMaterialName; // 0x468(0x10)
	None VertexColorViewModeMaterial_ColorOnly; // 0x478(0x08)
	None VertexColorViewModeMaterialName_ColorOnly; // 0x480(0x10)
	None VertexColorViewModeMaterial_AlphaAsColor; // 0x490(0x08)
	None VertexColorViewModeMaterialName_AlphaAsColor; // 0x498(0x10)
	None VertexColorViewModeMaterial_RedOnly; // 0x4a8(0x08)
	None VertexColorViewModeMaterialName_RedOnly; // 0x4b0(0x10)
	None VertexColorViewModeMaterial_GreenOnly; // 0x4c0(0x08)
	None VertexColorViewModeMaterialName_GreenOnly; // 0x4c8(0x10)
	None VertexColorViewModeMaterial_BlueOnly; // 0x4d8(0x08)
	None VertexColorViewModeMaterialName_BlueOnly; // 0x4e0(0x10)
	None DebugEditorMaterialName; // 0x4f0(0x18)
	None ConstraintLimitMaterial; // 0x508(0x08)
	None ConstraintLimitMaterialX; // 0x510(0x08)
	None ConstraintLimitMaterialXAxis; // 0x518(0x08)
	None ConstraintLimitMaterialY; // 0x520(0x08)
	None ConstraintLimitMaterialYAxis; // 0x528(0x08)
	None ConstraintLimitMaterialZ; // 0x530(0x08)
	None ConstraintLimitMaterialZAxis; // 0x538(0x08)
	None ConstraintLimitMaterialPrismatic; // 0x540(0x08)
	None InvalidLightmapSettingsMaterial; // 0x548(0x08)
	None InvalidLightmapSettingsMaterialName; // 0x550(0x18)
	None PreviewShadowsIndicatorMaterial; // 0x568(0x08)
	None PreviewShadowsIndicatorMaterialName; // 0x570(0x18)
	None ArrowMaterial; // 0x588(0x08)
	None ArrowMaterialYellow; // 0x590(0x08)
	None ArrowMaterialName; // 0x598(0x18)
	None LightingOnlyBrightness; // 0x5b0(0x10)
	None ShaderComplexityColors; // 0x5c0(0x10)
	None QuadComplexityColors; // 0x5d0(0x10)
	None LightComplexityColors; // 0x5e0(0x10)
	None StationaryLightOverlapColors; // 0x5f0(0x10)
	None LODColorationColors; // 0x600(0x10)
	None HLODColorationColors; // 0x610(0x10)
	None StreamingAccuracyColors; // 0x620(0x10)
	None MaxPixelShaderAdditiveComplexityCount; // 0x630(0x04)
	None MaxES3PixelShaderAdditiveComplexityCount; // 0x634(0x04)
	None MinLightMapDensity; // 0x638(0x04)
	None IdealLightMapDensity; // 0x63c(0x04)
	None MaxLightMapDensity; // 0x640(0x04)
	None bRenderLightMapDensityGrayscale; // 0x644(0x01)
	None RenderLightMapDensityGrayscaleScale; // 0x648(0x04)
	None RenderLightMapDensityColorScale; // 0x64c(0x04)
	None LightMapDensityVertexMappedColor; // 0x650(0x10)
	None LightMapDensitySelectedColor; // 0x660(0x10)
	None StatColorMappings; // 0x670(0x10)
	None DefaultPhysMaterial; // 0x680(0x08)
	None DefaultPhysMaterialName; // 0x688(0x18)
	None ActiveGameNameRedirects; // 0x6a0(0x10)
	None ActiveClassRedirects; // 0x6b0(0x10)
	None ActivePluginRedirects; // 0x6c0(0x10)
	None ActiveStructRedirects; // 0x6d0(0x10)
	None PreIntegratedSkinBRDFTexture; // 0x6e0(0x08)
	None PreIntegratedSkinBRDFTextureName; // 0x6e8(0x18)
	None BlueNoiseTexture; // 0x700(0x08)
	None BlueNoiseTextureName; // 0x708(0x18)
	None MiniFontTexture; // 0x720(0x08)
	None MiniFontTextureName; // 0x728(0x18)
	None WeightMapPlaceholderTexture; // 0x740(0x08)
	None WeightMapPlaceholderTextureName; // 0x748(0x18)
	None LightMapDensityTexture; // 0x760(0x08)
	None LightMapDensityTextureName; // 0x768(0x18)
	None GameViewport; // 0x788(0x08)
	None DeferredCommands; // 0x790(0x10)
	None TickCycles; // 0x7a0(0x04)
	None GameCycles; // 0x7a4(0x04)
	None ClientCycles; // 0x7a8(0x04)
	None NearClipPlane; // 0x7ac(0x04)
	None EditorNearClipPlane; // 0x7b0(0x04)
	None bUseCustomAudioModule; // 0x7b4(0x01)
	None bHardwareSurveyEnabled; // 0x7b8(0x01)
	None bSubtitlesEnabled; // 0x7b8(0x01)
	None bSubtitlesForcedOff; // 0x7b8(0x01)
	None MaximumLoopIterationCount; // 0x7bc(0x04)
	None bCanBlueprintsTickByDefault; // 0x7c0(0x01)
	None bOptimizeAnimBlueprintMemberVariableAccess; // 0x7c0(0x01)
	None bAllowMultiThreadedAnimationUpdate; // 0x7c0(0x01)
	None bEnableEditorPSysRealtimeLOD; // 0x7c0(0x01)
	None bSmoothFrameRate; // 0x7c0(0x01)
	None bUseFixedFrameRate; // 0x7c0(0x01)
	None FixedFrameRate; // 0x7c4(0x04)
	None SmoothedFrameRateRange; // 0x7c8(0x10)
	None CustomTimeStep; // 0x7d8(0x08)
	None CustomTimeStepClassName; // 0x800(0x18)
	None TimecodeProvider; // 0x818(0x08)
	None TimecodeProviderClassName; // 0x840(0x18)
	None bGenerateDefaultTimecode; // 0x858(0x01)
	None GenerateDefaultTimecodeFrameRate; // 0x85c(0x08)
	None GenerateDefaultTimecodeFrameDelay; // 0x864(0x04)
	None bCheckForMultiplePawnsSpawnedInAFrame; // 0x868(0x01)
	None NumPawnsAllowedToBeSpawnedInAFrame; // 0x86c(0x04)
	None bShouldGenerateLowQualityLightmaps; // 0x870(0x01)
	None C_WorldBox; // 0x874(0x04)
	None C_BrushWire; // 0x878(0x04)
	None C_AddWire; // 0x87c(0x04)
	None C_SubtractWire; // 0x880(0x04)
	None C_SemiSolidWire; // 0x884(0x04)
	None C_NonSolidWire; // 0x888(0x04)
	None C_WireBackground; // 0x88c(0x04)
	None C_ScaleBoxHi; // 0x890(0x04)
	None C_VolumeCollision; // 0x894(0x04)
	None C_BSPCollision; // 0x898(0x04)
	None C_OrthoBackground; // 0x89c(0x04)
	None C_Volume; // 0x8a0(0x04)
	None C_BrushShape; // 0x8a4(0x04)
	None StreamingDistanceFactor; // 0x8a8(0x04)
	None GameScreenshotSaveDirectory; // 0x8b0(0x10)
	None TransitionType; // 0x8c0(0x01)
	None TransitionDescription; // 0x8c8(0x10)
	None TransitionGameMode; // 0x8d8(0x10)
	None MeshLODRange; // 0x8e8(0x04)
	None bAllowMatureLanguage; // 0x8ec(0x01)
	None CameraRotationThreshold; // 0x8f0(0x04)
	None CameraTranslationThreshold; // 0x8f4(0x04)
	None PrimitiveProbablyVisibleTime; // 0x8f8(0x04)
	None MaxOcclusionPixelsFraction; // 0x8fc(0x04)
	None bPauseOnLossOfFocus; // 0x900(0x01)
	None MaxParticleResize; // 0x904(0x04)
	None MaxParticleResizeWarn; // 0x908(0x04)
	None PendingDroppedNotes; // 0x910(0x10)
	None NetClientTicksPerSecond; // 0x920(0x04)
	None DisplayGamma; // 0x924(0x04)
	None MinDesiredFrameRate; // 0x928(0x04)
	None DefaultSelectedMaterialColor; // 0x92c(0x10)
	None SelectedMaterialColor; // 0x93c(0x10)
	None SelectionOutlineColor; // 0x94c(0x10)
	None SubduedSelectionOutlineColor; // 0x95c(0x10)
	None SelectedMaterialColorOverride; // 0x96c(0x10)
	None bIsOverridingSelectedColor; // 0x97c(0x01)
	None bEnableOnScreenDebugMessages; // 0x980(0x01)
	None bEnableOnScreenDebugMessagesDisplay; // 0x980(0x01)
	None bSuppressMapWarnings; // 0x980(0x01)
	None bDisableAILogging; // 0x980(0x01)
	None bEnableVisualLogRecordingOnStart; // 0x984(0x04)
	None ScreenSaverInhibitorSemaphore; // 0x98c(0x04)
	None bLockReadOnlyLevels; // 0x990(0x01)
	None ParticleEventManagerClassPath; // 0x998(0x10)
	None SelectionHighlightIntensity; // 0x9a8(0x04)
	None BSPSelectionHighlightIntensity; // 0x9ac(0x04)
	None SelectionHighlightIntensityBillboards; // 0x9b0(0x04)
	None NetDriverDefinitions; // 0xc00(0x10)
	None ServerActors; // 0xc10(0x10)
	None RuntimeServerActors; // 0xc20(0x10)
	None NetErrorLogInterval; // 0xc30(0x04)
	None bStartedLoadMapMovie; // 0xc34(0x01)
	None NextWorldContextHandle; // 0xc50(0x04)
	None ViewportClient; // 0x70(0x08)
	None AspectRatioAxisConstraint; // 0x94(0x01)
	None PendingLevelPlayerControllerClass; // 0x98(0x08)
	None bSentSplitJoin; // 0xa0(0x01)
	None ControllerId; // 0xb8(0x04)
	None AnimBlueprintGeneratedClass; // 0x700(0x08)
	None AnimClass; // 0x708(0x08)
	None AnimScriptInstance; // 0x710(0x08)
	None PostprocessAnimInstance; // 0x718(0x08)
	None AnimationData; // 0x720(0x18)
	None RootBoneTranslation; // 0x748(0x0c)
	None LineCheckBoundsScale; // 0x754(0x0c)
	None LinkedInstances; // 0x780(0x10)
	None CachedBoneSpaceTransforms; // 0x790(0x10)
	None CachedComponentSpaceTransforms; // 0x7a0(0x10)
	None GlobalAnimRateScale; // 0x7d0(0x04)
	None KinematicBonesUpdateType; // 0x7d4(0x01)
	None PhysicsTransformUpdateMode; // 0x7d5(0x01)
	None AnimationMode; // 0x7dd(0x01)
	None bDisablePostProcessBlueprint; // 0x7df(0x01)
	None bUpdateOverlapsOnAnimationFinalize; // 0x7df(0x01)
	None bHasValidBodies; // 0x7df(0x01)
	None bBlendPhysics; // 0x7df(0x01)
	None bEnablePhysicsOnDedicatedServer; // 0x7df(0x01)
	None bUpdateJointsFromAnimation; // 0x7e0(0x01)
	None bDisableClothSimulation; // 0x7e0(0x01)
	None bDisableRigidBodyAnimNode; // 0x7e0(0x01)
	None bAllowAnimCurveEvaluation; // 0x7e0(0x01)
	None bDisableAnimCurves; // 0x7e0(0x01)
	None bCollideWithEnvironment; // 0x7e1(0x01)
	None bCollideWithAttachedChildren; // 0x7e1(0x01)
	None bLocalSpaceSimulation; // 0x7e1(0x01)
	None bResetAfterTeleport; // 0x7e1(0x01)
	None bDeferKinematicBoneUpdate; // 0x7e1(0x01)
	None bNoSkeletonUpdate; // 0x7e1(0x01)
	None bPauseAnims; // 0x7e1(0x01)
	None bUseRefPoseOnInitAnim; // 0x7e2(0x01)
	None bEnablePerPolyCollision; // 0x7e2(0x01)
	None bForceRefpose; // 0x7e2(0x01)
	None bOnlyAllowAutonomousTickPose; // 0x7e2(0x01)
	None bIsAutonomousTickPose; // 0x7e2(0x01)
	None bOldForceRefPose; // 0x7e2(0x01)
	None bShowPrePhysBones; // 0x7e2(0x01)
	None bRequiredBonesUpToDate; // 0x7e2(0x01)
	None bAnimTreeInitialised; // 0x7e3(0x01)
	None bIncludeComponentLocationIntoBounds; // 0x7e3(0x01)
	None bEnableLineCheckWithBounds; // 0x7e3(0x01)
	None bUseBendingElements; // 0x7e3(0x01)
	None bUseTetrahedralConstraints; // 0x7e3(0x01)
	None bUseThinShellVolumeConstraints; // 0x7e3(0x01)
	None bUseSelfCollisions; // 0x7e3(0x01)
	None bUseContinuousCollisionDetection; // 0x7e3(0x01)
	None bPropagateCurvesToSlaves; // 0x7e4(0x01)
	None bSkipKinematicUpdateWhenInterpolating; // 0x7e4(0x01)
	None bSkipBoundsUpdateWhenInterpolating; // 0x7e4(0x01)
	None bNeedsQueuedAnimEventsDispatched; // 0x7e4(0x01)
	None CachedAnimCurveUidVersion; // 0x7e6(0x02)
	None MassMode; // 0x7e8(0x01)
	None UniformMass; // 0x7ec(0x04)
	None TotalMass; // 0x7f0(0x04)
	None Density; // 0x7f4(0x04)
	None MinPerParticleMass; // 0x7f8(0x04)
	None ClothBlendWeight; // 0x7fc(0x04)
	None EdgeStiffness; // 0x800(0x04)
	None BendingStiffness; // 0x804(0x04)
	None AreaStiffness; // 0x808(0x04)
	None VolumeStiffness; // 0x80c(0x04)
	None StrainLimitingStiffness; // 0x810(0x04)
	None ShapeTargetStiffness; // 0x814(0x04)
	None DisallowedAnimCurves; // 0x818(0x10)
	None BodySetup; // 0x828(0x08)
	None OnConstraintBroken; // 0x838(0x10)
	None ClothingSimulationFactory; // 0x848(0x08)
	None TeleportDistanceThreshold; // 0x918(0x04)
	None TeleportRotationThreshold; // 0x91c(0x04)
	None LastPoseTickFrame; // 0x928(0x04)
	None ClothingInteractor; // 0x980(0x08)
	None OnAnimInitialized; // 0xa50(0x10)
	None CurrentSkeleton; // 0x28(0x08)
	None RootMotionMode; // 0x30(0x01)
	None bUseMultiThreadedAnimationUpdate; // 0x31(0x01)
	None bUsingCopyPoseFromMesh; // 0x31(0x01)
	None bReceiveNotifiesFromLinkedInstances; // 0x31(0x01)
	None bPropagateNotifiesToLinkedInstances; // 0x31(0x01)
	None bQueueMontageEvents; // 0x31(0x01)
	None OnMontageBlendingOut; // 0x38(0x10)
	None OnMontageStarted; // 0x48(0x10)
	None OnMontageEnded; // 0x58(0x10)
	None OnAllMontageInstancesEnded; // 0x68(0x10)
	None NotifyQueue; // 0x100(0x70)
	None ActiveAnimNotifyState; // 0x170(0x10)
	None SupportedClass; // 0x28(0x08)
	None ExportRootScope; // 0x30(0x08)
	None FormatExtension; // 0x38(0x10)
	None FormatDescription; // 0x48(0x10)
	None PreferredFormatIndex; // 0x58(0x04)
	None TextIndent; // 0x5c(0x04)
	None bText; // 0x60(0x01)
	None bSelectedOnly; // 0x60(0x01)
	None bForceFileOperations; // 0x60(0x01)
	None ExportTask; // 0x68(0x08)
	None bInputEnabled; // 0x310(0x01)
	None MaxPoolSize; // 0x28(0x04)
	None BrushType; // 0x310(0x01)
	None BrushColor; // 0x314(0x04)
	None PolyFlags; // 0x318(0x04)
	None bColored; // 0x31c(0x01)
	None bSolidWhenSelected; // 0x31c(0x01)
	None bPlaceableFromClassBrowser; // 0x31c(0x01)
	None bNotForClientOrServer; // 0x31c(0x01)
	None Brush; // 0x320(0x08)
	None BrushComponent; // 0x328(0x08)
	None bInManipulation; // 0x330(0x01)
	None SavedSelections; // 0x338(0x10)
	None SelfWorld; // 0x38(0x08)
	None PersistentLevel; // 0x48(0x08)
	None NetDriver; // 0x50(0x08)
	None LineBatcher; // 0x58(0x08)
	None PersistentLineBatcher; // 0x60(0x08)
	None ForegroundLineBatcher; // 0x68(0x08)
	None NetworkManager; // 0x70(0x08)
	None PhysicsCollisionHandler; // 0x78(0x08)
	None ExtraReferencedObjects; // 0x80(0x10)
	None PerModuleDataObjects; // 0x90(0x10)
	None LevelSequenceActors; // 0xa0(0x10)
	None StreamingLevels; // 0xb0(0x10)
	None StreamingLevelsToConsider; // 0xc0(0x48)
	None StreamingLevelsPrefix; // 0x120(0x10)
	None CurrentLevelPendingVisibility; // 0x130(0x08)
	None CurrentLevelPendingInvisibility; // 0x138(0x08)
	None DemoNetDriver; // 0x140(0x08)
	None MyParticleEventManager; // 0x148(0x08)
	None DefaultPhysicsVolume; // 0x150(0x08)
	None bAreConstraintsDirty; // 0x16e(0x01)
	None NavigationSystem; // 0x170(0x08)
	None AuthorityGameMode; // 0x178(0x08)
	None GameState; // 0x180(0x08)
	None AISystem; // 0x188(0x08)
	None AvoidanceManager; // 0x190(0x08)
	None Levels; // 0x198(0x10)
	None LevelCollections; // 0x1a8(0x10)
	None OwningGameInstance; // 0x1d8(0x08)
	None ParameterCollectionInstances; // 0x1e0(0x10)
	None CanvasForRenderingToTarget; // 0x1f0(0x08)
	None CanvasForDrawMaterialToRenderTarget; // 0x1f8(0x08)
	None ComponentsThatNeedEndOfFrameUpdate; // 0x250(0x10)
	None ComponentsThatNeedEndOfFrameUpdate_OnGameThread; // 0x260(0x10)
	None WorldComposition; // 0x5b0(0x08)
	None PSCPool; // 0x650(0x58)
	None SubTracks; // 0x38(0x10)
	None TrackInstClass; // 0x48(0x08)
	None ActiveCondition; // 0x50(0x01)
	None TrackTitle; // 0x58(0x10)
	None bOnePerGroup; // 0x68(0x01)
	None bDirGroupOnly; // 0x68(0x01)
	None bDisableTrack; // 0x68(0x01)
	None bIsSelected; // 0x68(0x01)
	None bIsAnimControlTrack; // 0x68(0x01)
	None bSubTrackOnly; // 0x68(0x01)
	None bVisible; // 0x68(0x01)
	None bIsRecording; // 0x68(0x01)
	None VectorTrack; // 0x70(0x18)
	None CurveTension; // 0x88(0x04)
	None FloatTrack; // 0x70(0x18)
	None CurveTension; // 0x88(0x04)
	None NativeClass; // 0x28(0x08)
	None Material; // 0x28(0x08)
	None Function; // 0x30(0x08)
	None bIsParameterExpression; // 0x38(0x01)
	None Texture; // 0x40(0x08)
	None SamplerType; // 0x48(0x01)
	None IsDefaultMeshpaintTexture; // 0x49(0x01)
	None Coordinates; // 0x50(0x0c)
	None TextureObject; // 0x64(0x0c)
	None MipValue; // 0x78(0x0c)
	None CoordinatesDX; // 0x8c(0x0c)
	None CoordinatesDY; // 0xa0(0x0c)
	None AutomaticViewMipBiasValue; // 0xb4(0x0c)
	None MipValueMode; // 0xc8(0x01)
	None SamplerSource; // 0xc9(0x01)
	None AutomaticViewMipBias; // 0xca(0x01)
	None ConstCoordinate; // 0xcb(0x01)
	None ConstMipValue; // 0xcc(0x04)
	None ParameterName; // 0xd0(0x08)
	None ExpressionGUID; // 0xd8(0x10)
	None Group; // 0xe8(0x08)
	None SelfPawn; // 0x318(0x08)
	None bUseControllerRotationPitch; // 0x328(0x01)
	None bUseControllerRotationYaw; // 0x328(0x01)
	None bUseControllerRotationRoll; // 0x328(0x01)
	None bCanAffectNavigationGeneration; // 0x328(0x01)
	None BaseEyeHeight; // 0x32c(0x04)
	None AutoPossessPlayer; // 0x330(0x01)
	None AutoPossessAI; // 0x331(0x01)
	None RemoteViewPitch; // 0x332(0x02)
	None RemoteViewYaw; // 0x334(0x02)
	None AIControllerClass; // 0x338(0x08)
	None PlayerState; // 0x340(0x08)
	None LastHitBy; // 0x350(0x08)
	None Controller; // 0x358(0x08)
	None ControlInputVector; // 0x364(0x0c)
	None LastControlInputVector; // 0x370(0x0c)
	None SelfCharacter; // 0x388(0x08)
	None Mesh; // 0x398(0x08)
	None CharacterMovement; // 0x3a0(0x08)
	None CapsuleComponent; // 0x3a8(0x08)
	None BasedMovement; // 0x3b8(0x30)
	None ReplicatedBasedMovement; // 0x3e8(0x30)
	None AnimRootMotionTranslationScale; // 0x418(0x04)
	None BaseTranslationOffset; // 0x41c(0x0c)
	None BaseRotationOffset; // 0x430(0x10)
	None ReplicatedServerLastTransformUpdateTimeStamp; // 0x440(0x04)
	None ReplayLastTransformUpdateTimeStamp; // 0x444(0x04)
	None ReplicatedMovementMode; // 0x448(0x01)
	None bInBaseReplication; // 0x449(0x01)
	None CrouchedEyeHeight; // 0x44c(0x04)
	None bIsCrouched; // 0x450(0x01)
	None bProxyIsJumpForceApplied; // 0x450(0x01)
	None bPressedJump; // 0x450(0x01)
	None bClientUpdating; // 0x450(0x01)
	None bClientWasFalling; // 0x450(0x01)
	None bClientResimulateRootMotion; // 0x450(0x01)
	None bClientResimulateRootMotionSources; // 0x450(0x01)
	None bSimGravityDisabled; // 0x450(0x01)
	None bClientCheckEncroachmentOnNetUpdate; // 0x451(0x01)
	None bServerMoveIgnoreRootMotion; // 0x451(0x01)
	None bWasJumping; // 0x451(0x01)
	None JumpKeyHoldTime; // 0x454(0x04)
	None JumpForceTimeRemaining; // 0x458(0x04)
	None ProxyJumpForceStartedTime; // 0x45c(0x04)
	None JumpMaxHoldTime; // 0x460(0x04)
	None JumpMaxCount; // 0x464(0x04)
	None JumpCurrentCount; // 0x468(0x04)
	None OnReachedJumpApex; // 0x470(0x10)
	None MovementModeChangedDelegate; // 0x490(0x10)
	None OnCharacterMovementUpdated; // 0x4a0(0x10)
	None SavedRootMotion; // 0x4b0(0x38)
	None ClientRootMotionParams; // 0x4f0(0x40)
	None RootMotionRepMoves; // 0x530(0x10)
	None RepRootMotion; // 0x540(0x98)
	None SplineCurves; // 0x4b8(0x68)
	None SplineInfo; // 0x520(0x18)
	None SplineRotInfo; // 0x538(0x18)
	None SplineScaleInfo; // 0x550(0x18)
	None SplineReparamTable; // 0x568(0x18)
	None bAllowSplineEditingPerInstance; // 0x580(0x01)
	None ReparamStepsPerSegment; // 0x584(0x04)
	None Duration; // 0x588(0x04)
	None bStationaryEndpoints; // 0x58c(0x01)
	None bSplineHasBeenEdited; // 0x58d(0x01)
	None bModifiedByConstructionScript; // 0x58e(0x01)
	None bInputSplinePointsToConstructionScript; // 0x58f(0x01)
	None bDrawDebug; // 0x590(0x01)
	None bClosedLoop; // 0x591(0x01)
	None bLoopPositionOverride; // 0x592(0x01)
	None LoopPosition; // 0x594(0x04)
	None DefaultUpVector; // 0x598(0x0c)
	None HelpDescription; // 0x28(0x10)
	None HelpUsage; // 0x38(0x10)
	None HelpWebLink; // 0x48(0x10)
	None HelpParamNames; // 0x58(0x10)
	None HelpParamDescriptions; // 0x68(0x10)
	None IsServer; // 0x78(0x01)
	None IsClient; // 0x78(0x01)
	None IsEditor; // 0x78(0x01)
	None LogToConsole; // 0x78(0x01)
	None ShowErrorCount; // 0x78(0x01)
	None ShowProgress; // 0x78(0x01)
	None Sound; // 0x238(0x08)
	None InstanceParameters; // 0x240(0x10)
	None SoundClassOverride; // 0x250(0x08)
	None bAutoDestroy; // 0x258(0x01)
	None bStopWhenOwnerDestroyed; // 0x258(0x01)
	None bShouldRemainActiveIfDropped; // 0x258(0x01)
	None bAllowSpatialization; // 0x258(0x01)
	None bOverrideAttenuation; // 0x258(0x01)
	None bOverrideSubtitlePriority; // 0x258(0x01)
	None bIsUISound; // 0x258(0x01)
	None bEnableLowPassFilter; // 0x258(0x01)
	None bOverridePriority; // 0x259(0x01)
	None bSuppressSubtitles; // 0x259(0x01)
	None bAutoManageAttachment; // 0x25a(0x01)
	None AudioComponentUserID; // 0x260(0x08)
	None PitchModulationMin; // 0x268(0x04)
	None PitchModulationMax; // 0x26c(0x04)
	None VolumeModulationMin; // 0x270(0x04)
	None VolumeModulationMax; // 0x274(0x04)
	None VolumeMultiplier; // 0x278(0x04)
	None EnvelopeFollowerAttackTime; // 0x27c(0x04)
	None EnvelopeFollowerReleaseTime; // 0x280(0x04)
	None Priority; // 0x284(0x04)
	None SubtitlePriority; // 0x288(0x04)
	None SourceEffectChain; // 0x290(0x08)
	None PitchMultiplier; // 0x298(0x04)
	None LowPassFilterFrequency; // 0x29c(0x04)
	None AttenuationSettings; // 0x2a8(0x08)
	None AttenuationOverrides; // 0x2b0(0x3a0)
	None ConcurrencySettings; // 0x650(0x08)
	None ConcurrencySet; // 0x658(0x50)
	None AutoAttachLocationRule; // 0x6b4(0x01)
	None AutoAttachRotationRule; // 0x6b5(0x01)
	None AutoAttachScaleRule; // 0x6b6(0x01)
	None OnAudioFinished; // 0x6b8(0x10)
	None OnAudioPlaybackPercent; // 0x6e0(0x10)
	None OnAudioSingleEnvelopeValue; // 0x708(0x10)
	None OnAudioMultiEnvelopeValue; // 0x730(0x10)
	None Modulation; // 0x758(0x10)
	None OnQueueSubtitles; // 0x768(0x10)
	None AutoAttachParent; // 0x778(0x08)
	None AutoAttachSocketName; // 0x780(0x08)
	None OptionsString; // 0x310(0x10)
	None GameSessionClass; // 0x320(0x08)
	None GameStateClass; // 0x328(0x08)
	None PlayerControllerClass; // 0x330(0x08)
	None PlayerStateClass; // 0x338(0x08)
	None HUDClass; // 0x340(0x08)
	None DefaultPawnClass; // 0x348(0x08)
	None SpectatorClass; // 0x350(0x08)
	None ReplaySpectatorPlayerControllerClass; // 0x358(0x08)
	None ServerStatReplicatorClass; // 0x360(0x08)
	None GameSession; // 0x368(0x08)
	None GameState; // 0x370(0x08)
	None ServerStatReplicator; // 0x378(0x08)
	None DefaultPlayerName; // 0x380(0x18)
	None bUseSeamlessTravel; // 0x398(0x01)
	None bStartPlayersAsSpectators; // 0x398(0x01)
	None bPauseable; // 0x398(0x01)
	None MatchState; // 0x3b0(0x08)
	None bDelayedStart; // 0x3b8(0x01)
	None NumSpectators; // 0x3bc(0x04)
	None NumPlayers; // 0x3c0(0x04)
	None NumBots; // 0x3c4(0x04)
	None MinRespawnDelay; // 0x3c8(0x04)
	None NumTravellingPlayers; // 0x3cc(0x04)
	None EngineMessageClass; // 0x3d0(0x08)
	None InactivePlayerArray; // 0x3d8(0x10)
	None InactivePlayerStateLifeSpan; // 0x3e8(0x04)
	None MaxInactivePlayers; // 0x3ec(0x04)
	None bHandleDedicatedServerReplays; // 0x3f0(0x01)
	None GameModeClass; // 0x310(0x08)
	None AuthorityGameMode; // 0x318(0x08)
	None SpectatorClass; // 0x320(0x08)
	None PlayerArray; // 0x328(0x10)
	None bReplicatedHasBegunPlay; // 0x338(0x01)
	None ReplicatedWorldTimeSeconds; // 0x33c(0x04)
	None ServerWorldTimeSecondsDelta; // 0x340(0x04)
	None ServerWorldTimeSecondsUpdateFrequency; // 0x344(0x04)
	None MatchState; // 0x360(0x08)
	None PreviousMatchState; // 0x368(0x08)
	None ElapsedTime; // 0x370(0x04)
	None PlayerState; // 0x348(0x08)
	None OnInstigatedAnyDamage; // 0x388(0x10)
	None StateName; // 0x324(0x08)
	None Pawn; // 0x378(0x08)
	None Character; // 0x338(0x08)
	None TransformComponent; // 0x330(0x08)
	None ControlRotation; // 0x39c(0x0c)
	None bAttachToPawn; // 0x32c(0x01)
	None SelfPlayerController; // 0x3b0(0x08)
	None Player; // 0x510(0x08)
	None AcknowledgedPawn; // 0x428(0x08)
	None ControllingDirTrackInst; // 0x4f8(0x08)
	None MyHUD; // 0x5e8(0x08)
	None PlayerCameraManager; // 0x438(0x08)
	None PlayerCameraManagerClass; // 0x480(0x08)
	None bAutoManageActiveCameraTarget; // 0x6e4(0x01)
	None TargetViewRotation; // 0x664(0x0c)
	None SmoothTargetViewRotationSpeed; // 0x640(0x04)
	None HiddenActors; // 0x5b8(0x10)
	None HiddenPrimitiveComponents; // 0x4d0(0x10)
	None LastSpectatorStateSynchTime; // 0x674(0x04)
	None LastSpectatorSyncLocation; // 0x558(0x0c)
	None LastSpectatorSyncRotation; // 0x45c(0x0c)
	None ClientCap; // 0x478(0x04)
	None CheatManager; // 0x568(0x08)
	None CheatClass; // 0x590(0x08)
	None PlayerInput; // 0x518(0x08)
	None ActiveForceFeedbackEffects; // 0x580(0x10)
	None bPlayerIsWaiting; // 0x498(0x01)
	None NetPlayerIndex; // 0x4bc(0x01)
	None PendingSwapConnection; // 0x468(0x08)
	None NetConnection; // 0x3e0(0x08)
	None InputYawScale; // 0x5e0(0x04)
	None InputPitchScale; // 0x5a8(0x04)
	None InputRollScale; // 0x578(0x04)
	None bShowMouseCursor; // 0x670(0x01)
	None bEnableClickEvents; // 0x5b4(0x01)
	None bEnableTouchEvents; // 0x4e0(0x01)
	None bEnableMouseOverEvents; // 0x670(0x01)
	None bEnableTouchOverEvents; // 0x670(0x01)
	None bForceFeedbackEnabled; // 0x57c(0x01)
	None ForceFeedbackScale; // 0x488(0x04)
	None ClickEventKeys; // 0x4a0(0x10)
	None DefaultMouseCursor; // 0x618(0x01)
	None CurrentMouseCursor; // 0x5e4(0x01)
	None DefaultClickTraceChannel; // 0x47c(0x01)
	None CurrentClickTraceChannel; // 0x48c(0x01)
	None HitResultTraceDistance; // 0x3ec(0x04)
	None SeamlessTravelCount; // 0x5ac(0x02)
	None LastCompletedSeamlessTravelCount; // 0x540(0x02)
	None InactiveStateInputComponent; // 0x490(0x08)
	None bShouldPerformFullTickWhenPaused; // 0x570(0x01)
	None CurrentTouchInterface; // 0x550(0x08)
	None SpectatorPawn; // 0x470(0x08)
	None bIsLocalPlayerController; // 0x5c8(0x01)
	None SpawnLocation; // 0x61c(0x0c)
	None ApplicationWillDeactivateDelegate; // 0xb0(0x10)
	None ApplicationHasReactivatedDelegate; // 0xc0(0x10)
	None ApplicationWillEnterBackgroundDelegate; // 0xd0(0x10)
	None ApplicationHasEnteredForegroundDelegate; // 0xe0(0x10)
	None ApplicationWillTerminateDelegate; // 0xf0(0x10)
	None ApplicationShouldUnloadResourcesDelegate; // 0x100(0x10)
	None ApplicationReceivedStartupArgumentsDelegate; // 0x110(0x10)
	None OnTemperatureChangeDelegate; // 0x120(0x10)
	None OnLowPowerModeDelegate; // 0x130(0x10)
	None UpdatedComponent; // 0xb0(0x08)
	None UpdatedPrimitive; // 0xb8(0x08)
	None Velocity; // 0xc4(0x0c)
	None PlaneConstraintNormal; // 0xd0(0x0c)
	None PlaneConstraintOrigin; // 0xdc(0x0c)
	None bUpdateOnlyIfRendered; // 0xe8(0x01)
	None bAutoUpdateTickRegistration; // 0xe8(0x01)
	None bTickBeforeOwner; // 0xe8(0x01)
	None bAutoRegisterUpdatedComponent; // 0xe8(0x01)
	None bConstrainToPlane; // 0xe8(0x01)
	None bSnapToPlaneAtStart; // 0xe8(0x01)
	None bAutoRegisterPhysicsVolumeUpdates; // 0xe8(0x01)
	None bComponentShouldUpdatePhysicsVolume; // 0xe8(0x01)
	None PlaneConstraintAxisSetting; // 0xeb(0x01)
	None NavAgentProps; // 0xf0(0x30)
	None FixedPathBrakingDistance; // 0x120(0x04)
	None bUpdateNavAgentWithOwnersCollision; // 0x124(0x01)
	None bUseAccelerationForPaths; // 0x124(0x01)
	None bUseFixedBrakingDistanceForPaths; // 0x124(0x01)
	None MovementState; // 0x125(0x01)
	None PathFollowingComp; // 0x128(0x08)
	None PawnOwner; // 0x130(0x08)
	None CharacterOwner; // 0x2b0(0x08)
	None GravityScale; // 0x2ec(0x04)
	None MaxStepHeight; // 0x468(0x04)
	None JumpZVelocity; // 0x474(0x04)
	None JumpOffJumpZFactor; // 0x6c8(0x04)
	None WalkableFloorAngle; // 0x4f8(0x04)
	None WalkableFloorZ; // 0x488(0x04)
	None MovementMode; // 0x438(0x01)
	None CustomMovementMode; // 0x56c(0x01)
	None NetworkSmoothingMode; // 0x280(0x01)
	None GroundFriction; // 0x470(0x04)
	None MaxWalkSpeed; // 0x300(0x04)
	None MaxWalkSpeedCrouched; // 0x6e0(0x04)
	None MaxSwimSpeed; // 0x548(0x04)
	None MaxFlySpeed; // 0x4e8(0x04)
	None MaxCustomMovementSpeed; // 0x460(0x04)
	None MaxAcceleration; // 0x484(0x04)
	None MinAnalogWalkSpeed; // 0x4e0(0x04)
	None BrakingFrictionFactor; // 0x2a0(0x04)
	None BrakingFriction; // 0x54c(0x04)
	None BrakingSubStepTime; // 0x6bc(0x04)
	None BrakingDecelerationWalking; // 0x554(0x04)
	None BrakingDecelerationFalling; // 0x51c(0x04)
	None BrakingDecelerationSwimming; // 0x414(0x04)
	None BrakingDecelerationFlying; // 0x568(0x04)
	None AirControl; // 0x544(0x04)
	None AirControlBoostMultiplier; // 0x308(0x04)
	None AirControlBoostVelocityThreshold; // 0x3f4(0x04)
	None FallingLateralFriction; // 0x3f0(0x04)
	None CrouchedHalfHeight; // 0x264(0x04)
	None Buoyancy; // 0x40c(0x04)
	None PerchRadiusThreshold; // 0x244(0x04)
	None PerchAdditionalHeight; // 0x248(0x04)
	None RotationRate; // 0x520(0x0c)
	None bUseSeparateBrakingFriction; // 0x298(0x01)
	None bApplyGravityWhileJumping; // 0x2d4(0x01)
	None bUseControllerDesiredRotation; // 0x2e4(0x01)
	None bOrientRotationToMovement; // 0x550(0x01)
	None bSweepWhileNavWalking; // 0x620(0x01)
	None bMovementInProgress; // 0x3c0(0x01)
	None bEnableScopedMovementUpdates; // 0x5d0(0x01)
	None bEnableServerDualMoveScopedMovementUpdates; // 0x4e4(0x01)
	None bForceMaxAccel; // 0x4b8(0x01)
	None bRunPhysicsWithNoController; // 0x2f3(0x01)
	None bForceNextFloorCheck; // 0x490(0x01)
	None bShrinkProxyCapsule; // 0x2fc(0x01)
	None bCanWalkOffLedges; // 0x2e4(0x01)
	None bCanWalkOffLedgesWhenCrouching; // 0x44c(0x01)
	None bNetworkSkipProxyPredictionOnNetUpdate; // 0x490(0x01)
	None bNetworkAlwaysReplicateTransformUpdateTimestamp; // 0x490(0x01)
	None bDeferUpdateMoveComponent; // 0x510(0x01)
	None bEnablePhysicsInteraction; // 0x4dc(0x01)
	None bTouchForceScaledToMass; // 0x304(0x01)
	None bPushForceScaledToMass; // 0x540(0x01)
	None bPushForceUsingZOffset; // 0x5ac(0x01)
	None bScalePushForceToVelocity; // 0x6dc(0x01)
	None DeferredUpdatedMoveComponent; // 0x3e8(0x08)
	None MaxOutOfWaterStepHeight; // 0x240(0x04)
	None OutofWaterZ; // 0x22c(0x04)
	None Mass; // 0x23c(0x04)
	None StandingDownwardForceScale; // 0x4c8(0x04)
	None InitialPushForceFactor; // 0x294(0x04)
	None PushForceFactor; // 0x2c0(0x04)
	None PushForcePointZOffsetFactor; // 0x2d0(0x04)
	None TouchForceFactor; // 0x434(0x04)
	None MinTouchForce; // 0x3a8(0x04)
	None MaxTouchForce; // 0x5a8(0x04)
	None RepulsionForce; // 0x3ac(0x04)
	None Acceleration; // 0x6d0(0x0c)
	None LastUpdateRotation; // 0x270(0x10)
	None LastUpdateLocation; // 0x288(0x0c)
	None LastUpdateVelocity; // 0x2d8(0x0c)
	None ServerLastTransformUpdateTimeStamp; // 0x310(0x04)
	None ServerLastClientGoodMoveAckTime; // 0x50c(0x04)
	None ServerLastClientAdjustmentTime; // 0x4bc(0x04)
	None PendingImpulseToApply; // 0x21c(0x0c)
	None PendingForceToApply; // 0x5c4(0x0c)
	None AnalogInputModifier; // 0x4d4(0x04)
	None MaxSimulationTimeStep; // 0x2f4(0x04)
	None MaxSimulationIterations; // 0x444(0x04)
	None MaxJumpApexAttemptsPerSimulation; // 0x47c(0x04)
	None MaxDepenetrationWithGeometry; // 0x4ac(0x04)
	None MaxDepenetrationWithGeometryAsProxy; // 0x494(0x04)
	None MaxDepenetrationWithPawn; // 0x25c(0x04)
	None MaxDepenetrationWithPawnAsProxy; // 0x564(0x04)
	None NetworkSimulatedSmoothLocationTime; // 0x3f8(0x04)
	None NetworkSimulatedSmoothRotationTime; // 0x6cc(0x04)
	None ListenServerNetworkSimulatedSmoothLocationTime; // 0x62c(0x04)
	None ListenServerNetworkSimulatedSmoothRotationTime; // 0x3e4(0x04)
	None NetProxyShrinkRadius; // 0x6c4(0x04)
	None NetProxyShrinkHalfHeight; // 0x440(0x04)
	None NetworkMaxSmoothUpdateDistance; // 0x258(0x04)
	None NetworkNoSmoothUpdateDistance; // 0x4d8(0x04)
	None NetworkMinTimeBetweenClientAckGoodMoves; // 0x530(0x04)
	None NetworkMinTimeBetweenClientAdjustments; // 0x284(0x04)
	None NetworkMinTimeBetweenClientAdjustmentsLargeCorrection; // 0x2e8(0x04)
	None NetworkLargeClientCorrectionDistance; // 0x410(0x04)
	None LedgeCheckThreshold; // 0x514(0x04)
	None JumpOutOfWaterPitch; // 0x4cc(0x04)
	None CurrentFloor; // 0x314(0x94)
	None DefaultLandMovementMode; // 0x3fc(0x01)
	None DefaultWaterMovementMode; // 0x2f2(0x01)
	None GroundMovementMode; // 0x305(0x01)
	None bMaintainHorizontalGroundVelocity; // 0x518(0x01)
	None bImpartBaseVelocityX; // 0x5c0(0x01)
	None bImpartBaseVelocityY; // 0x2fc(0x01)
	None bImpartBaseVelocityZ; // 0x4c0(0x01)
	None bImpartBaseAngularVelocity; // 0x518(0x01)
	None bJustTeleported; // 0x44c(0x01)
	None bNetworkUpdateReceived; // 0x2fc(0x01)
	None bNetworkMovementModeChanged; // 0x230(0x01)
	None bIgnoreClientMovementErrorChecksAndCorrection; // 0x6c0(0x01)
	None bServerAcceptClientAuthoritativePosition; // 0x480(0x01)
	None bNotifyApex; // 0x464(0x01)
	None bCheatFlying; // 0x24c(0x01)
	None bWantsToCrouch; // 0x4b8(0x01)
	None bCrouchMaintainsBaseLocation; // 0x2b8(0x01)
	None bIgnoreBaseRotation; // 0x538(0x01)
	None bFastAttachedMove; // 0x218(0x01)
	None bAlwaysCheckFloor; // 0x430(0x01)
	None bUseFlatBaseForFloorChecks; // 0x238(0x01)
	None bPerformingJumpOff; // 0x2f1(0x01)
	None bWantsToLeaveNavWalking; // 0x46c(0x01)
	None bUseRVOAvoidance; // 0x6c0(0x01)
	None bRequestedMoveUseAcceleration; // 0x498(0x01)
	None bWasSimulatingRootMotion; // 0x478(0x01)
	None bAllowPhysicsRotationDuringAnimRootMotion; // 0x44c(0x01)
	None bHasRequestedVelocity; // 0x304(0x01)
	None bRequestedMoveWithMaxSpeed; // 0x52c(0x01)
	None bWasAvoidanceUpdated; // 0x2fc(0x01)
	None bProjectNavMeshWalking; // 0x508(0x01)
	None bProjectNavMeshOnBothWorldChannels; // 0x228(0x01)
	None AvoidanceConsiderationRadius; // 0x448(0x04)
	None RequestedVelocity; // 0x4a0(0x0c)
	None AvoidanceUID; // 0x250(0x04)
	None AvoidanceGroup; // 0x48c(0x04)
	None GroupsToAvoid; // 0x2bc(0x04)
	None GroupsToIgnore; // 0x4c4(0x04)
	None AvoidanceWeight; // 0x2a8(0x04)
	None PendingLaunchVelocity; // 0x558(0x0c)
	None NavMeshProjectionInterval; // 0x2a4(0x04)
	None NavMeshProjectionTimer; // 0x30c(0x04)
	None NavMeshProjectionInterpSpeed; // 0x254(0x04)
	None NavMeshProjectionHeightScaleUp; // 0x234(0x04)
	None NavMeshProjectionHeightScaleDown; // 0x408(0x04)
	None NavWalkingFloorDistTolerance; // 0x2f8(0x04)
	None PostPhysicsTickFunction; // 0x148(0x30)
	None MinTimeBetweenTimeStampResets; // 0x5b0(0x04)
	None ClientAutonomuousBase; // 0x4f0(0x08)
	None CurrentRootMotion; // 0x570(0x38)
	None RootMotionParams; // 0x5e0(0x40)
	None AnimRootMotionVelocity; // 0x2c4(0x0c)
	None BlockingHit_SlideAccelerator; // 0x628(0x04)
	None BlockingPhysMaterial; // 0x4b0(0x08)
	None MeshComp; // 0x310(0x08)
	None SceneComponent; // 0x318(0x08)
	None CaptureComponent2D; // 0x320(0x08)
	None ObjectReferenceList; // 0x2c0(0x10)
	None bIsGlobalAsyncScanEnvironment; // 0x2d0(0x01)
	None bShouldGuessTypeAndName; // 0x2d1(0x01)
	None bShouldUseSynchronousLoad; // 0x2d2(0x01)
	None bIsLoadingFromPakFiles; // 0x2d3(0x01)
	None bShouldAcquireMissingChunksOnLoad; // 0x2d4(0x01)
	None bOnlyCookProductionAssets; // 0x2d5(0x01)
	None bIsBulkScanning; // 0x2d6(0x01)
	None bIsPrimaryAssetDirectoryCurrent; // 0x2d7(0x01)
	None bIsManagementDatabaseCurrent; // 0x2d8(0x01)
	None bUpdateManagementDatabaseAfterScan; // 0x2d9(0x01)
	None bIncludeOnlyOnDiskAssets; // 0x2da(0x01)
	None NumberOfSpawnedNotifications; // 0x2dc(0x04)
	None ShapeBodySetup; // 0x4b8(0x08)
	None AreaClass; // 0x4c0(0x08)
	None ShapeColor; // 0x4c8(0x04)
	None bDrawOnlyIfSelected; // 0x4cc(0x01)
	None bShouldCollideWhenPlacing; // 0x4cc(0x01)
	None bDynamicObstacle; // 0x4cc(0x01)
	None BoxExtent; // 0x4d0(0x0c)
	None LineThickness; // 0x4dc(0x04)
	None FieldOfView; // 0x238(0x04)
	None OrthoWidth; // 0x23c(0x04)
	None OrthoNearClipPlane; // 0x240(0x04)
	None OrthoFarClipPlane; // 0x244(0x04)
	None AspectRatio; // 0x248(0x04)
	None bConstrainAspectRatio; // 0x24c(0x01)
	None bUseFieldOfViewForLOD; // 0x24c(0x01)
	None bLockToHmd; // 0x254(0x01)
	None bUsePawnControlRotation; // 0x254(0x01)
	None ProjectionMode; // 0x255(0x01)
	None PostProcessBlendWeight; // 0x290(0x04)
	None PostProcessSettings; // 0x2c0(0x5c0)
	None DebugCameraControllerRef; // 0x28(0x08)
	None DebugCameraControllerClass; // 0x30(0x08)
	None bCausedByWorld; // 0x28(0x01)
	None bScaleMomentumByMass; // 0x28(0x01)
	None bRadialDamageVelChange; // 0x28(0x01)
	None DamageImpulse; // 0x2c(0x04)
	None DestructibleImpulse; // 0x30(0x04)
	None DestructibleDamageSpreadScale; // 0x34(0x04)
	None DamageFalloff; // 0x38(0x04)
	None SpectatorControllerClass; // 0x928(0x08)
	None SelfDemoNetDriver; // 0x930(0x08)
	None RollbackNetStartupActors; // 0xa50(0x50)
	None CheckpointSaveMaxMSPerFrame; // 0xecc(0x04)
	None MulticastRecordOptions; // 0xf00(0x10)
	None bIsLocalReplay; // 0xf60(0x01)
	None SpectatorControllers; // 0xf68(0x10)
	None ForcedLodModel; // 0x4e8(0x04)
	None PreviousLODLevel; // 0x4ec(0x04)
	None MinLOD; // 0x4f0(0x04)
	None SubDivisionStepSize; // 0x4f4(0x04)
	None StaticMesh; // 0x4f8(0x08)
	None WireframeColorOverride; // 0x500(0x04)
	None bEvaluateWorldPositionOffset; // 0x504(0x01)
	None bOverrideWireframeColor; // 0x504(0x01)
	None bOverrideMinLod; // 0x504(0x01)
	None bOverrideNavigationExport; // 0x504(0x01)
	None bForceNavigationObstacle; // 0x504(0x01)
	None bDisallowMeshPaintPerInstance; // 0x504(0x01)
	None bIgnoreInstanceForTextureStreaming; // 0x504(0x01)
	None bOverrideLightMapRes; // 0x504(0x01)
	None bCastDistanceFieldIndirectShadow; // 0x505(0x01)
	None bOverrideDistanceFieldSelfShadowBias; // 0x505(0x01)
	None bUseSubDivisions; // 0x505(0x01)
	None bUseDefaultCollision; // 0x505(0x01)
	None bReverseCulling; // 0x505(0x01)
	None OverriddenLightMapRes; // 0x508(0x04)
	None DistanceFieldIndirectShadowMinVisibility; // 0x50c(0x04)
	None DistanceFieldSelfShadowBias; // 0x510(0x04)
	None StreamingDistanceMultiplier; // 0x514(0x04)
	None LODData; // 0x518(0x10)
	None StreamingTextureData; // 0x528(0x10)
	None LightmassSettings; // 0x538(0x18)
	None MaxDeltaTime; // 0xde8(0x04)
	None ServerFlushLogInterval; // 0xdec(0x04)
	None GameInstance; // 0xdf0(0x08)
	None ReplayListItemInfos; // 0x28(0x10)
	None OnEnumerateReplayListCompleteEvent; // 0x38(0x10)
	None OnDeleteReplayCompleteEvent; // 0x48(0x10)
	None OnKeepAndDeleteOldetsReplaysCompleteEvent; // 0x58(0x10)
	None OnKeepAndDeleteOldVersionReplaysCompleteEvent; // 0x68(0x10)
	None SelfGameInstance; // 0x80(0x08)
	None bLoadingWidgetVisible; // 0x88(0x01)
	None LocalPlayers; // 0xb8(0x10)
	None OnlineSession; // 0xc8(0x08)
	None ReferencedObjects; // 0xd0(0x10)
	None MaxSpectators; // 0x310(0x04)
	None MaxPlayers; // 0x314(0x04)
	None MaxPartySize; // 0x318(0x04)
	None MaxSplitscreensPerConnection; // 0x31c(0x01)
	None bRequiresPushToTalk; // 0x31d(0x01)
	None SessionName; // 0x320(0x08)
	None PerInstanceSMData; // 0x550(0x10)
	None NumCustomDataFloats; // 0x560(0x04)
	None PerInstanceSMCustomData; // 0x568(0x10)
	None bMergeCollision; // 0x578(0x01)
	None InstancingRandomSeed; // 0x57c(0x04)
	None InstanceStartCullDistance; // 0x580(0x04)
	None InstanceEndCullDistance; // 0x584(0x04)
	None CulldistanceType; // 0x588(0x01)
	None MinScreenSizeScale; // 0x58c(0x04)
	None InstanceBodiesSplitRatio; // 0x590(0x01)
	None InstanceReorderTable; // 0x598(0x10)
	None NumPendingLightmaps; // 0x604(0x04)
	None CachedMappings; // 0x608(0x10)
	None SortedInstances; // 0x628(0x10)
	None NumBuiltInstances; // 0x638(0x04)
	None BuiltInstanceBounds; // 0x640(0x1c)
	None UnbuiltInstanceBounds; // 0x65c(0x1c)
	None UnbuiltInstanceBoundsList; // 0x678(0x10)
	None bEnableDensityScaling; // 0x688(0x01)
	None OcclusionLayerNumNodes; // 0x690(0x04)
	None CacheMeshExtendedBounds; // 0x694(0x1c)
	None bDisableCollision; // 0x6b0(0x01)
	None InstanceCountToRender; // 0x6b4(0x04)
	None OnReplayPauseEvent; // 0x6f0(0x10)
	None OnReplayJumpEvent; // 0x700(0x10)
	None OnReplayJumpCompleteEvent; // 0x710(0x10)
	None PlayerCameraManagerClassName; // 0x7a8(0x10)
	None SpectatorPawnClassName; // 0x7b8(0x10)
	None ChangeViewModeDelegate; // 0x7c8(0x10)
	None ChangeCameraTypeDelegate; // 0x7d8(0x10)
	None ChangeCameraTypeByNetGuidDelegate; // 0x7e8(0x10)
	None WidgetInfoArray; // 0x800(0x10)
	None ReplayWidgetMap; // 0x810(0x50)
	None KillcamComponent; // 0x8c0(0x08)
	None TargetcamComponent; // 0x8c8(0x08)
	None pTargetPlayerInRecording; // 0x8e0(0x08)
	None AfterKillcamHUDClassName; // 0x8e8(0x10)
	None AfterKillcamHUDClass; // 0x8f8(0x08)
	None ReplayHUDClassName; // 0x910(0x10)
	None ReplayHUDClass; // 0x920(0x08)
	None BaseTurnRate; // 0x380(0x04)
	None BaseLookUpRate; // 0x384(0x04)
	None MovementComponent; // 0x388(0x08)
	None CollisionComponent; // 0x390(0x08)
	None MeshComponent; // 0x398(0x08)
	None bAddDefaultMovementBindings; // 0x3a0(0x01)
	None Friction; // 0x28(0x04)
	None FrictionCombineMode; // 0x2c(0x01)
	None bOverrideFrictionCombineMode; // 0x2d(0x01)
	None Restitution; // 0x30(0x04)
	None RestitutionCombineMode; // 0x34(0x01)
	None bOverrideRestitutionCombineMode; // 0x35(0x01)
	None Density; // 0x38(0x04)
	None RaiseMassToPower; // 0x3c(0x04)
	None DestructibleDamageThresholdScale; // 0x40(0x04)
	None PhysicalMaterialProperty; // 0x48(0x08)
	None SurfaceType; // 0x50(0x01)
	None TireFrictionScale; // 0x54(0x04)
	None TireFrictionScales; // 0x58(0x10)
	None PCOwner; // 0x310(0x08)
	None TransformComponent; // 0x318(0x08)
	None DefaultFOV; // 0x328(0x04)
	None DefaultOrthoWidth; // 0x330(0x04)
	None DefaultAspectRatio; // 0x338(0x04)
	None CameraCache; // 0x380(0x660)
	None LastFrameCameraCache; // 0x9e0(0x660)
	None ViewTarget; // 0x1040(0x670)
	None PendingViewTarget; // 0x16b0(0x670)
	None CameraCachePrivate; // 0x1d50(0x660)
	None LastFrameCameraCachePrivate; // 0x23b0(0x660)
	None ModifierList; // 0x2a10(0x10)
	None DefaultModifiers; // 0x2a20(0x10)
	None FreeCamDistance; // 0x2a30(0x04)
	None FreeCamOffset; // 0x2a34(0x0c)
	None ViewTargetOffset; // 0x2a40(0x0c)
	None CameraLensEffects; // 0x2a60(0x10)
	None CachedCameraShakeMod; // 0x2a70(0x08)
	None AnimInstPool; // 0x2a78(0x40)
	None PostProcessBlendCache; // 0x2ab8(0x10)
	None ActiveAnims; // 0x2ad8(0x10)
	None FreeAnims; // 0x2ae8(0x10)
	None AnimCameraActor; // 0x2af8(0x08)
	None bIsOrthographic; // 0x2b00(0x01)
	None bDefaultConstrainAspectRatio; // 0x2b00(0x01)
	None bClientSimulatingViewTarget; // 0x2b00(0x01)
	None bUseClientSideCameraUpdates; // 0x2b00(0x01)
	None bGameCameraCutThisFrame; // 0x2b01(0x01)
	None ViewPitchMin; // 0x2b04(0x04)
	None ViewPitchMax; // 0x2b08(0x04)
	None ViewYawMin; // 0x2b0c(0x04)
	None ViewYawMax; // 0x2b10(0x04)
	None ViewRollMin; // 0x2b14(0x04)
	None ViewRollMax; // 0x2b18(0x04)
	None ServerUpdateCameraTimeout; // 0x2b20(0x04)
	None SelfPlayerState; // 0x310(0x08)
	None Score; // 0x318(0x04)
	None PlayerId; // 0x31c(0x04)
	None Ping; // 0x320(0x01)
	None bShouldUpdateReplicatedPing; // 0x322(0x01)
	None bIsSpectator; // 0x322(0x01)
	None bOnlySpectator; // 0x322(0x01)
	None bIsABot; // 0x322(0x01)
	None bIsInactive; // 0x322(0x01)
	None bFromPreviousLevel; // 0x322(0x01)
	None StartTime; // 0x324(0x04)
	None EngineMessageClass; // 0x328(0x08)
	None SavedNetworkAddress; // 0x338(0x10)
	None UniqueID; // 0x348(0x28)
	None PawnPrivate; // 0x378(0x08)
	None PlayerNamePrivate; // 0x3f8(0x10)
	None PrimitiveRenderMode; // 0x238(0x01)
	None bTonemapPropagateAlpha; // 0x239(0x01)
	None bUsePostProcessMaterial; // 0x239(0x01)
	None bUseDirectionalLights; // 0x239(0x01)
	None CaptureSource; // 0x23a(0x01)
	None bCaptureEveryFrame; // 0x23b(0x01)
	None bCaptureOnMovement; // 0x23b(0x01)
	None bAlwaysPersistRenderingState; // 0x23c(0x01)
	None HiddenComponents; // 0x240(0x10)
	None HiddenActors; // 0x250(0x10)
	None ShowOnlyComponents; // 0x260(0x10)
	None ShowOnlyActors; // 0x270(0x10)
	None LODDistanceFactor; // 0x280(0x04)
	None MaxViewDistanceOverride; // 0x284(0x04)
	None CaptureSortPriority; // 0x288(0x04)
	None bUseRayTracingIfEnabled; // 0x28c(0x01)
	None ShowFlagSettings; // 0x290(0x10)
	None ProfilingEventName; // 0x2b0(0x10)
	None ProjectionType; // 0x2d0(0x01)
	None FOVAngle; // 0x2d4(0x04)
	None OrthoWidth; // 0x2d8(0x04)
	None TextureTarget; // 0x2e0(0x08)
	None CompositeMode; // 0x2e8(0x01)
	None PostProcessSettings; // 0x2f0(0x5c0)
	None PostProcessBlendWeight; // 0x8b0(0x04)
	None bOverride_CustomNearClippingPlane; // 0x8b4(0x01)
	None CustomNearClippingPlane; // 0x8b8(0x04)
	None bUseCustomProjectionMatrix; // 0x8bc(0x01)
	None CustomProjectionMatrix; // 0x8c0(0x40)
	None bEnableClipPlane; // 0x900(0x01)
	None ClipPlaneBase; // 0x904(0x0c)
	None ClipPlaneNormal; // 0x910(0x0c)
	None bCameraCutThisFrame; // 0x91c(0x01)
	None bConsiderUnrenderedOpaquePixelAsFullyTranslucent; // 0x91c(0x01)
	None bDisableFlipCopyGLES; // 0x920(0x01)
	None ArrowColor; // 0x4b8(0x04)
	None ArrowSize; // 0x4bc(0x04)
	None ScreenSize; // 0x4c0(0x04)
	None bIsScreenSizeScaled; // 0x4c4(0x01)
	None bTreatAsASprite; // 0x4c4(0x01)
	None CapsuleComponent; // 0x318(0x08)
	None GoodSprite; // 0x320(0x08)
	None BadSprite; // 0x328(0x08)
	None bIsPIEPlayerStart; // 0x330(0x01)
	None PlayerStartTag; // 0x338(0x08)
	None InitialSpeed; // 0xf0(0x04)
	None MaxSpeed; // 0xf4(0x04)
	None bRotationFollowsVelocity; // 0xf8(0x01)
	None bRotationRemainsVertical; // 0xf8(0x01)
	None bShouldBounce; // 0xf8(0x01)
	None bInitialVelocityInLocalSpace; // 0xf8(0x01)
	None bForceSubStepping; // 0xf8(0x01)
	None bSimulationEnabled; // 0xf8(0x01)
	None bSweepCollision; // 0xf8(0x01)
	None bIsHomingProjectile; // 0xf8(0x01)
	None bBounceAngleAffectsFriction; // 0xf9(0x01)
	None bIsSliding; // 0xf9(0x01)
	None bInterpMovement; // 0xf9(0x01)
	None bInterpRotation; // 0xf9(0x01)
	None PreviousHitTime; // 0xfc(0x04)
	None PreviousHitNormal; // 0x100(0x0c)
	None ProjectileGravityScale; // 0x10c(0x04)
	None Buoyancy; // 0x110(0x04)
	None Bounciness; // 0x114(0x04)
	None Friction; // 0x118(0x04)
	None BounceVelocityStopSimulatingThreshold; // 0x11c(0x04)
	None MinFrictionFraction; // 0x120(0x04)
	None OnProjectileBounce; // 0x128(0x10)
	None OnProjectileStop; // 0x138(0x10)
	None HomingAccelerationMagnitude; // 0x148(0x04)
	None HomingTargetComponent; // 0x14c(0x08)
	None MaxSimulationTimeStep; // 0x154(0x04)
	None MaxSimulationIterations; // 0x158(0x04)
	None BounceAdditionalIterations; // 0x15c(0x04)
	None InterpLocationTime; // 0x160(0x04)
	None InterpRotationTime; // 0x164(0x04)
	None InterpLocationMaxLagDistance; // 0x168(0x04)
	None InterpLocationSnapToTargetDistance; // 0x16c(0x04)
	None bUseVSync; // 0x28(0x01)
	None bIsSmoothFrameRate; // 0x29(0x01)
	None bUseDynamicResolution; // 0x2a(0x01)
	None ResolutionSizeX; // 0x80(0x04)
	None ResolutionSizeY; // 0x84(0x04)
	None LastUserConfirmedResolutionSizeX; // 0x88(0x04)
	None LastUserConfirmedResolutionSizeY; // 0x8c(0x04)
	None WindowPosX; // 0x90(0x04)
	None WindowPosY; // 0x94(0x04)
	None FullscreenMode; // 0x98(0x04)
	None LastConfirmedFullscreenMode; // 0x9c(0x04)
	None PreferredFullscreenMode; // 0xa0(0x04)
	None Version; // 0xa4(0x04)
	None AudioQualityLevel; // 0xa8(0x04)
	None LastConfirmedAudioQualityLevel; // 0xac(0x04)
	None FrameRateLimit; // 0xb0(0x04)
	None LobbyFrameRateLimit; // 0xb4(0x04)
	None DesiredScreenWidth; // 0xbc(0x04)
	None bUseDesiredScreenHeight; // 0xc0(0x01)
	None DesiredScreenHeight; // 0xc4(0x04)
	None LastUserConfirmedDesiredScreenWidth; // 0xc8(0x04)
	None LastUserConfirmedDesiredScreenHeight; // 0xcc(0x04)
	None LastRecommendedScreenWidth; // 0xd0(0x04)
	None LastRecommendedScreenHeight; // 0xd4(0x04)
	None LastCPUBenchmarkResult; // 0xd8(0x04)
	None LastGPUBenchmarkResult; // 0xdc(0x04)
	None LastCPUBenchmarkSteps; // 0xe0(0x10)
	None LastGPUBenchmarkSteps; // 0xf0(0x10)
	None LastCPUBrand; // 0x100(0x10)
	None LastGPUBrand; // 0x110(0x10)
	None LastInstallStorageType; // 0x120(0x04)
	None LastTotalGraphicsMemory; // 0x128(0x08)
	None LastGPUBenchmarkMultiplier; // 0x130(0x04)
	None bUseHDRDisplayOutput; // 0x134(0x01)
	None HDRDisplayOutputNits; // 0x138(0x04)
	None ShowHUD; // 0x13c(0x01)
	None OnGameUserSettingsUINeedsUpdate; // 0x140(0x10)
	None CapsuleHalfHeight; // 0x4d0(0x04)
	None CapsuleRadius; // 0x4d4(0x04)
	None ViewportConsole; // 0x40(0x08)
	None DebugProperties; // 0x48(0x10)
	None MaxSplitscreenPlayers; // 0x68(0x04)
	None World; // 0x78(0x08)
	None GameInstance; // 0x80(0x08)
	None TerminalVelocity; // 0x348(0x04)
	None Priority; // 0x34c(0x04)
	None FluidFriction; // 0x350(0x04)
	None bWaterVolume; // 0x354(0x01)
	None bPhysicsOnContact; // 0x354(0x01)
	None VisibilityCellSize; // 0x318(0x04)
	None VisibilityAggressiveness; // 0x31c(0x01)
	None bPrecomputeVisibility; // 0x31d(0x01)
	None bPlaceCellsOnlyAlongCameraTracks; // 0x31d(0x01)
	None bEnableWorldBoundsChecks; // 0x31d(0x01)
	None bEnableNavigationSystem; // 0x31d(0x01)
	None bEnableAISystem; // 0x31d(0x01)
	None bEnableWorldComposition; // 0x31d(0x01)
	None bUseClientSideLevelStreamingVolumes; // 0x31d(0x01)
	None bEnableWorldOriginRebasing; // 0x31d(0x01)
	None bWorldGravitySet; // 0x31e(0x01)
	None bGlobalGravitySet; // 0x31e(0x01)
	None bMinimizeBSPSections; // 0x31e(0x01)
	None bForceNoPrecomputedLighting; // 0x31e(0x01)
	None bHighPriorityLoading; // 0x31e(0x01)
	None bHighPriorityLoadingLocal; // 0x31e(0x01)
	None bOverrideDefaultBroadphaseSettings; // 0x31e(0x01)
	None NavigationSystemConfig; // 0x320(0x08)
	None NavigationSystemConfigOverride; // 0x328(0x08)
	None WorldToMeters; // 0x330(0x04)
	None KillZ; // 0x334(0x04)
	None KillZDamageType; // 0x338(0x08)
	None WorldGravityZ; // 0x340(0x04)
	None GlobalGravityZ; // 0x344(0x04)
	None DefaultPhysicsVolumeClass; // 0x348(0x08)
	None PhysicsCollisionHandlerClass; // 0x350(0x08)
	None DefaultGameMode; // 0x358(0x08)
	None GameNetworkManagerClass; // 0x360(0x08)
	None PackedLightAndShadowMapTextureSize; // 0x368(0x04)
	None DefaultColorScale; // 0x36c(0x0c)
	None DefaultMaxDistanceFieldOcclusionDistance; // 0x378(0x04)
	None GlobalDistanceFieldViewDistance; // 0x37c(0x04)
	None DynamicIndirectShadowsSelfShadowingIntensity; // 0x380(0x04)
	None DefaultReverbSettings; // 0x388(0x20)
	None DefaultAmbientZoneSettings; // 0x3a8(0x24)
	None MonoCullingDistance; // 0x3cc(0x04)
	None DefaultBaseSoundMix; // 0x3d0(0x08)
	None TimeDilation; // 0x3d8(0x04)
	None MatineeTimeDilation; // 0x3dc(0x04)
	None DemoPlayTimeDilation; // 0x3e0(0x04)
	None MinGlobalTimeDilation; // 0x3e4(0x04)
	None MaxGlobalTimeDilation; // 0x3e8(0x04)
	None MinUndilatedFrameTime; // 0x3ec(0x04)
	None MaxUndilatedFrameTime; // 0x3f0(0x04)
	None BroadphaseSettings; // 0x3f4(0x40)
	None Pauser; // 0x438(0x08)
	None ReplicationViewers; // 0x440(0x10)
	None AssetUserData; // 0x450(0x10)
	None PauserPlayerState; // 0x460(0x08)
	None MaxNumberOfBookmarks; // 0x468(0x04)
	None DefaultBookmarkClass; // 0x470(0x08)
	None BookmarkArray; // 0x478(0x10)
	None LastBookmarkClass; // 0x488(0x08)
	None bUseInstancedStaticCollision; // 0x490(0x01)
	None bDebug; // 0x28(0x01)
	None bExclusive; // 0x28(0x01)
	None Priority; // 0x2c(0x01)
	None CameraOwner; // 0x30(0x08)
	None AlphaInTime; // 0x38(0x04)
	None AlphaOutTime; // 0x3c(0x04)
	None ALPHA; // 0x40(0x04)
	None LightComponent; // 0x310(0x08)
	None bEnabled; // 0x318(0x01)
	None SubsurfaceProfile; // 0x38(0x08)
	None LightmassSettings; // 0x50(0x10)
	None TextureStreamingData; // 0x60(0x10)
	None AssetUserData; // 0x70(0x10)
	None PhysMaterial; // 0x88(0x08)
	None PhysicalMaterialMap; // 0x90(0x40)
	None Parent; // 0xd0(0x08)
	None bHasStaticPermutationResource; // 0xd8(0x01)
	None bOverrideSubsurfaceProfile; // 0xd8(0x01)
	None ScalarParameterValues; // 0xe0(0x10)
	None VectorParameterValues; // 0xf0(0x10)
	None TextureParameterValues; // 0x100(0x10)
	None RuntimeVirtualTextureParameterValues; // 0x110(0x10)
	None FontParameterValues; // 0x120(0x10)
	None BasePropertyOverrides; // 0x130(0x08)
	None StaticParameters; // 0x148(0x40)
	None CachedLayerParameters; // 0x188(0x1a0)
	None CachedReferencedTextures; // 0x328(0x10)
	None PhysMaterialMask; // 0x408(0x08)
	None NumReplicatedProperties; // 0x2d0(0x04)
	None bHasNativizedParent; // 0x2d4(0x01)
	None bHasCookedComponentInstancingData; // 0x2d4(0x01)
	None DynamicBindingObjects; // 0x2d8(0x10)
	None ComponentTemplates; // 0x2e8(0x10)
	None Timelines; // 0x2f8(0x10)
	None ComponentClassOverrides; // 0x308(0x10)
	None SimpleConstructionScript; // 0x318(0x08)
	None InheritableComponentHandler; // 0x320(0x08)
	None UberGraphFramePointerProperty; // 0x328(0x08)
	None UberGraphFunction; // 0x338(0x08)
	None CookedComponentInstancingData; // 0x340(0x50)
	None AutoActivateForPlayer; // 0x310(0x01)
	None CameraComponent; // 0x318(0x08)
	None SceneComponent; // 0x320(0x08)
	None bConstrainAspectRatio; // 0x330(0x01)
	None AspectRatio; // 0x334(0x04)
	None FOVAngle; // 0x338(0x04)
	None PostProcessBlendWeight; // 0x33c(0x04)
	None PostProcessSettings; // 0x340(0x5c0)
	None SoundClassObject; // 0x28(0x08)
	None bDebug; // 0x30(0x01)
	None bOverrideConcurrency; // 0x30(0x01)
	None bOutputToBusOnly; // 0x30(0x01)
	None bHasDelayNode; // 0x30(0x01)
	None bHasConcatenatorNode; // 0x30(0x01)
	None bBypassVolumeScaleForPriority; // 0x30(0x01)
	None VirtualizationMode; // 0x31(0x01)
	None ConcurrencySet; // 0x88(0x50)
	None ConcurrencyOverrides; // 0xd8(0x20)
	None Duration; // 0xf8(0x04)
	None MaxDistance; // 0xfc(0x04)
	None TotalSamples; // 0x100(0x04)
	None Priority; // 0x104(0x04)
	None AttenuationSettings; // 0x108(0x08)
	None Modulation; // 0x110(0x10)
	None SoundSubmixObject; // 0x120(0x08)
	None SoundSubmixSends; // 0x128(0x10)
	None SourceEffectChain; // 0x138(0x08)
	None BusSends; // 0x140(0x10)
	None PreEffectBusSends; // 0x150(0x10)
	None CompressionQuality; // 0x160(0x04)
	None StreamingPriority; // 0x164(0x04)
	None SampleRateQuality; // 0x168(0x01)
	None SoundGroup; // 0x16a(0x01)
	None bLooping; // 0x16b(0x01)
	None bStreaming; // 0x16b(0x01)
	None bSeekableStreaming; // 0x16b(0x01)
	None LoadingBehavior; // 0x16c(0x01)
	None bMature; // 0x16d(0x01)
	None bManualWordWrap; // 0x16d(0x01)
	None bSingleLine; // 0x16d(0x01)
	None bIsAmbisonics; // 0x16e(0x01)
	None FrequenciesToAnalyze; // 0x170(0x10)
	None CookedSpectralTimeData; // 0x180(0x10)
	None CookedEnvelopeTimeData; // 0x190(0x10)
	None InitialChunkSize; // 0x1a0(0x04)
	None SpokenText; // 0x1e8(0x10)
	None SubtitlePriority; // 0x1f8(0x04)
	None Volume; // 0x1fc(0x04)
	None Pitch; // 0x200(0x04)
	None NumChannels; // 0x204(0x04)
	None SampleRate; // 0x208(0x04)
	None Subtitles; // 0x218(0x10)
	None Curves; // 0x228(0x08)
	None InternalCurves; // 0x230(0x08)
	None SkeletonGeneratedClass; // 0x28(0x08)
	None GeneratedClass; // 0x30(0x08)
	None bLegacyNeedToPurgeSkelRefs; // 0x38(0x01)
	None BlueprintGuid; // 0x3c(0x10)
	None ParentClass; // 0x50(0x08)
	None BlueprintType; // 0x58(0x01)
	None bRecompileOnLoad; // 0x59(0x01)
	None bHasBeenRegenerated; // 0x59(0x01)
	None bIsRegeneratingOnLoad; // 0x59(0x01)
	None BlueprintSystemVersion; // 0x5c(0x04)
	None SimpleConstructionScript; // 0x60(0x08)
	None ComponentTemplates; // 0x68(0x10)
	None Timelines; // 0x78(0x10)
	None ComponentClassOverrides; // 0x88(0x10)
	None InheritableComponentHandler; // 0x98(0x08)
	None SelfChannel; // 0x30(0x08)
	None Connection; // 0x38(0x08)
	None SelfActorChannel; // 0xa0(0x08)
	None Actor; // 0xa8(0x08)
	None CreateSubObjects; // 0x198(0x10)
	None Skeleton; // 0x38(0x08)
	None MetaData; // 0x60(0x10)
	None AssetUserData; // 0x70(0x10)
	None bRotationBlendInMeshSpace; // 0x88(0x01)
	None AnimLength; // 0x8c(0x04)
	None InterpolationParam; // 0x90(0x18)
	None TargetWeightInterpolationSpeedPerSec; // 0xa8(0x04)
	None NotifyTriggerMode; // 0xac(0x01)
	None PerBoneBlend; // 0xb0(0x10)
	None SampleIndexWithMarkers; // 0xc0(0x04)
	None SampleData; // 0xc8(0x10)
	None GridSamples; // 0xd8(0x10)
	None BlendParameters; // 0xe8(0x60)
	None AxisToScaleAnimation; // 0x148(0x01)
	None bScaleAnimation; // 0x148(0x01)
	None AISystemClassName; // 0x28(0x18)
	None AISystemModuleName; // 0x40(0x08)
	None bInstantiateAISystemOnClient; // 0x50(0x01)
	None AudioComponent; // 0x310(0x08)
	None CompressCommandletVersion; // 0x38(0x04)
	None KeyEndEffectorsMatchNameArray; // 0x40(0x10)
	None ForceRecompression; // 0x50(0x01)
	None bOnlyCheckForMissingSkeletalMeshes; // 0x51(0x01)
	None bForceBelowThreshold; // 0x52(0x01)
	None bFirstRecompressUsingCurrentOrDefault; // 0x53(0x01)
	None bRaiseMaxErrorToExisting; // 0x54(0x01)
	None bEnablePerformanceLog; // 0x55(0x01)
	None bStripAnimationDataOnDedicatedServer; // 0x56(0x01)
	None bTickAnimationOnSkeletalMeshInit; // 0x57(0x01)
	None TargetSkeleton; // 0xa8(0x08)
	None Groups; // 0xb0(0x10)
	None bUseMultiThreadedAnimationUpdate; // 0xc0(0x01)
	None bWarnAboutBlueprintUsage; // 0xc1(0x01)
	None BakedStateMachines; // 0x3d0(0x10)
	None TargetSkeleton; // 0x3e0(0x08)
	None AnimNotifies; // 0x3e8(0x10)
	None OrderedSavedPoseIndicesMap; // 0x3f8(0x50)
	None SyncGroupNames; // 0x4c8(0x10)
	None EvaluateGraphExposedInputs; // 0x4d8(0x10)
	None GraphAssetPlayerInformation; // 0x4e8(0x50)
	None GraphBlendOptions; // 0x538(0x50)
	None Description; // 0x28(0x10)
	None Codecs; // 0x28(0x10)
	None BakedStateMachines; // 0x30(0x10)
	None TargetSkeleton; // 0x40(0x08)
	None AnimNotifies; // 0x48(0x10)
	None OrderedSavedPoseIndicesMap; // 0x58(0x50)
	None AnimBlueprintFunctions; // 0xa8(0x10)
	None AnimBlueprintFunctionData; // 0xb8(0x10)
	None AnimNodeProperties; // 0xc8(0x10)
	None LinkedAnimGraphNodeProperties; // 0xe8(0x10)
	None LinkedAnimLayerNodeProperties; // 0x108(0x10)
	None PreUpdateNodeProperties; // 0x128(0x10)
	None DynamicResetNodeProperties; // 0x148(0x10)
	None StateMachineNodeProperties; // 0x168(0x10)
	None InitializationNodeProperties; // 0x188(0x10)
	None GraphNameAssetPlayers; // 0x1a8(0x50)
	None SyncGroupNames; // 0x1f8(0x10)
	None EvaluateGraphExposedInputs; // 0x208(0x10)
	None GraphBlendOptions; // 0x218(0x50)
	None Notifies; // 0x80(0x10)
	None SequenceLength; // 0x90(0x04)
	None RateScale; // 0x94(0x04)
	None RawCurveData; // 0x98(0x10)
	None AnimationTrack; // 0xa8(0x10)
	None bNeedsSkeleton; // 0x38(0x01)
	None TranslationCompressionFormat; // 0x3c(0x01)
	None RotationCompressionFormat; // 0x3d(0x01)
	None ScaleCompressionFormat; // 0x3e(0x01)
	None MaxPosDiff; // 0x40(0x04)
	None MaxAngleDiff; // 0x44(0x04)
	None MaxScaleDiff; // 0x48(0x04)
	None MaxEffectorDiff; // 0x4c(0x04)
	None MinEffectorDiff; // 0x50(0x04)
	None EffectorDiffSocket; // 0x54(0x04)
	None ParentKeyScale; // 0x58(0x04)
	None bRetarget; // 0x5c(0x01)
	None bActuallyFilterLinearKeys; // 0x5c(0x01)
	None MaxZeroingThreshold; // 0x60(0x04)
	None MaxPosDiffBitwise; // 0x64(0x04)
	None MaxAngleDiffBitwise; // 0x68(0x04)
	None MaxScaleDiffBitwise; // 0x6c(0x04)
	None AllowedRotationFormats; // 0x70(0x10)
	None AllowedTranslationFormats; // 0x80(0x10)
	None AllowedScaleFormats; // 0x90(0x10)
	None bResampleAnimation; // 0xa0(0x01)
	None ResampledFramerate; // 0xa4(0x04)
	None MinKeysForResampling; // 0xa8(0x04)
	None bUseAdaptiveError; // 0xac(0x01)
	None bUseOverrideForEndEffectors; // 0xac(0x01)
	None TrackHeightBias; // 0xb0(0x04)
	None ParentingDivisor; // 0xb4(0x04)
	None ParentingDivisorExponent; // 0xb8(0x04)
	None bUseAdaptiveError2; // 0xbc(0x01)
	None RotationErrorSourceRatio; // 0xc0(0x04)
	None TranslationErrorSourceRatio; // 0xc4(0x04)
	None ScaleErrorSourceRatio; // 0xc8(0x04)
	None MaxErrorPerTrackRatio; // 0xcc(0x04)
	None PerturbationProbeSize; // 0xd0(0x04)
	None MinKeys; // 0x40(0x04)
	None bStartAtSecondKey; // 0x44(0x01)
	None MaxPosDiff; // 0x40(0x04)
	None MaxAngleDiff; // 0x44(0x04)
	None MaxScaleDiff; // 0x48(0x04)
	None Codec; // 0x28(0x08)
	None BlendIn; // 0xa8(0x30)
	None BlendInTime; // 0xd8(0x04)
	None BlendOut; // 0xe0(0x30)
	None BlendOutTime; // 0x110(0x04)
	None BlendOutTriggerTime; // 0x114(0x04)
	None SyncGroup; // 0x118(0x08)
	None SyncSlotIndex; // 0x120(0x04)
	None MarkerData; // 0x128(0x20)
	None CompositeSections; // 0x148(0x10)
	None SlotAnimTracks; // 0x158(0x10)
	None BranchingPoints; // 0x168(0x10)
	None bEnableRootMotionTranslation; // 0x178(0x01)
	None bEnableRootMotionRotation; // 0x179(0x01)
	None bEnableAutoBlendOut; // 0x17a(0x01)
	None RootMotionRootLock; // 0x17b(0x01)
	None BranchingPointMarkers; // 0x180(0x10)
	None BranchingPointStateNotifyIndices; // 0x190(0x10)
	None TimeStretchCurve; // 0x1a0(0x28)
	None TimeStretchCurveName; // 0x1c8(0x08)
	None PSTemplate; // 0x38(0x08)
	None LocationOffset; // 0x40(0x0c)
	None RotationOffset; // 0x4c(0x0c)
	None Scale; // 0x58(0x0c)
	None Attached; // 0x80(0x01)
	None SocketName; // 0x84(0x08)
	None Sound; // 0x38(0x08)
	None VolumeMultiplier; // 0x40(0x04)
	None PitchMultiplier; // 0x44(0x04)
	None bFollow; // 0x48(0x01)
	None AttachName; // 0x4c(0x08)
	None PSTemplate; // 0x30(0x08)
	None SocketName; // 0x38(0x08)
	None LocationOffset; // 0x40(0x0c)
	None RotationOffset; // 0x4c(0x0c)
	None bDestroyAtEnd; // 0x58(0x01)
	None PSTemplate; // 0x30(0x08)
	None FirstSocketName; // 0x38(0x08)
	None SecondSocketName; // 0x40(0x08)
	None WidthScaleMode; // 0x48(0x01)
	None WidthScaleCurve; // 0x4c(0x08)
	None bRecycleSpawnedSystems; // 0x54(0x01)
	None NumFrames; // 0xa8(0x04)
	None TrackToSkeletonMapTable; // 0xb0(0x10)
	None BoneCompressionSettings; // 0xd0(0x08)
	None CurveCompressionSettings; // 0xd8(0x08)
	None AdditiveAnimType; // 0x150(0x01)
	None RefPoseType; // 0x151(0x01)
	None RefPoseSeq; // 0x158(0x08)
	None RefFrameIndex; // 0x160(0x04)
	None RetargetSource; // 0x164(0x08)
	None Interpolation; // 0x16c(0x01)
	None bEnableRootMotion; // 0x16d(0x01)
	None RootMotionRootLock; // 0x16e(0x01)
	None bForceRootLock; // 0x16f(0x01)
	None bUseNormalizedRootMotionScale; // 0x170(0x01)
	None bRootMotionSettingsCopiedFromMontage; // 0x171(0x01)
	None AuthoredSyncMarkers; // 0x178(0x10)
	None bAnimRotationOnly; // 0x28(0x01)
	None TrackBoneNames; // 0x30(0x10)
	None LinkupCache; // 0x40(0x10)
	None BoneUseAnimTranslation; // 0x50(0x10)
	None ForceUseMeshTranslation; // 0x60(0x10)
	None UseTranslationBoneNames; // 0x70(0x10)
	None ForceMeshTranslationBoneNames; // 0x80(0x10)
	None PreviewSkelMeshName; // 0x90(0x08)
	None BestRatioSkelMeshName; // 0x98(0x08)
	None CurrentAsset; // 0x268(0x08)
	None PostEvaluateAnimEvent; // 0x270(0x10)
	None NumFrames; // 0xa8(0x04)
	None Interpolation; // 0xac(0x01)
	None RetargetSource; // 0xb0(0x08)
	None BoneCompressionSettings; // 0xc8(0x08)
	None CurveCompressionSettings; // 0xd0(0x08)
	None bEnableRootMotion; // 0xd8(0x01)
	None RootMotionRootLock; // 0xd9(0x01)
	None bForceRootLock; // 0xda(0x01)
	None bUseNormalizedRootMotionScale; // 0xdb(0x01)
	None Object; // 0x28(0x08)
	None Exporter; // 0x30(0x08)
	None Filename; // 0x38(0x10)
	None bSelected; // 0x48(0x01)
	None bReplaceIdentical; // 0x49(0x01)
	None bPrompt; // 0x4a(0x01)
	None bAutomated; // 0x4b(0x01)
	None bUseFileArchive; // 0x4c(0x01)
	None bWriteEmptyFiles; // 0x4d(0x01)
	None IgnoreObjectList; // 0x50(0x10)
	None options; // 0x60(0x08)
	None Errors; // 0x68(0x10)
	None PrimaryAssetTypesToScan; // 0x38(0x10)
	None DirectoriesToExclude; // 0x48(0x10)
	None PrimaryAssetRules; // 0x58(0x10)
	None CustomPrimaryAssetRules; // 0x68(0x10)
	None bOnlyCookProductionAssets; // 0x78(0x01)
	None bShouldManagerDetermineTypeAndName; // 0x79(0x01)
	None bShouldGuessTypeAndNameInEditor; // 0x7a(0x01)
	None bShouldAcquireMissingChunksOnLoad; // 0x7b(0x01)
	None PrimaryAssetIdRedirects; // 0x80(0x10)
	None PrimaryAssetTypeRedirects; // 0x90(0x10)
	None AssetPathRedirects; // 0xa0(0x10)
	None MetaDataTagsForAssetRegistry; // 0xb0(0x50)
	None bUsePathExcludedFromScan; // 0x100(0x01)
	None bRemoveRedundantDirectroyChunks; // 0x101(0x01)
	None MappedAssets; // 0x28(0x10)
	None Completed; // 0x30(0x10)
	None SaveGameObject; // 0x60(0x08)
	None Completed; // 0x78(0x10)
	None Completed; // 0x78(0x10)
	None Completed; // 0x78(0x10)
	None Completed; // 0x78(0x10)
	None Completed; // 0x78(0x10)
	None AtmosphericFogComponent; // 0x310(0x08)
	None SunMultiplier; // 0x238(0x04)
	None FogMultiplier; // 0x23c(0x04)
	None DensityMultiplier; // 0x240(0x04)
	None DensityOffset; // 0x244(0x04)
	None DistanceScale; // 0x248(0x04)
	None AltitudeScale; // 0x24c(0x04)
	None DistanceOffset; // 0x250(0x04)
	None GroundOffset; // 0x254(0x04)
	None StartDistance; // 0x258(0x04)
	None SunDiscScale; // 0x25c(0x04)
	None DefaultBrightness; // 0x260(0x04)
	None DefaultLightColor; // 0x264(0x04)
	None bDisableSunDisk; // 0x268(0x01)
	None bAtmosphereAffectsSunIlluminance; // 0x268(0x01)
	None bDisableGroundScattering; // 0x268(0x01)
	None PrecomputeParams; // 0x26c(0x2c)
	None TransmittanceTexture; // 0x298(0x08)
	None IrradianceTexture; // 0x2a0(0x08)
	None DefaultSoundClassName; // 0x38(0x18)
	None DefaultMediaSoundClassName; // 0x50(0x18)
	None DefaultSoundConcurrencyName; // 0x68(0x18)
	None DefaultBaseSoundMix; // 0x80(0x18)
	None VoiPSoundClass; // 0x98(0x18)
	None MasterSubmix; // 0xb0(0x18)
	None ReverbSubmix; // 0xc8(0x18)
	None EQSubmix; // 0xe0(0x18)
	None VoiPSampleRate; // 0xf8(0x04)
	None DefaultReverbSendLevel; // 0xfc(0x04)
	None MaximumConcurrentStreams; // 0x100(0x04)
	None GlobalMinPitchScale; // 0x104(0x04)
	None GlobalMaxPitchScale; // 0x108(0x04)
	None QualityLevels; // 0x110(0x10)
	None bAllowPlayWhenSilent; // 0x120(0x01)
	None bDisableMasterEQ; // 0x120(0x01)
	None bAllowCenterChannel3DPanning; // 0x120(0x01)
	None NumStoppingSources; // 0x124(0x04)
	None PanningMethod; // 0x128(0x01)
	None MonoChannelUpmixMethod; // 0x129(0x01)
	None DialogueFilenameFormat; // 0x130(0x10)
	None Priority; // 0x348(0x04)
	None bEnabled; // 0x34c(0x01)
	None Settings; // 0x350(0x20)
	None AmbientZoneSettings; // 0x370(0x24)
	None ActorsToPoll; // 0x38(0x10)
	None EngineTestModules; // 0x28(0x10)
	None EditorTestModules; // 0x38(0x10)
	None AutomationTestmap; // 0x48(0x18)
	None EditorPerformanceTestMaps; // 0x60(0x10)
	None AssetsToOpen; // 0x70(0x10)
	None BuildPromotionTest; // 0x80(0x1f0)
	None MaterialEditorPromotionTest; // 0x270(0x30)
	None ParticleEditorPromotionTest; // 0x2a0(0x10)
	None BlueprintEditorPromotionTest; // 0x2b0(0x30)
	None TestLevelFolders; // 0x2e0(0x10)
	None ExternalTools; // 0x2f0(0x10)
	None ImportExportTestDefinitions; // 0x300(0x10)
	None LaunchOnSettings; // 0x310(0x10)
	None DefaultScreenshotResolution; // 0x320(0x08)
	None DefaultTimeToLive; // 0x30(0x04)
	None LockTimeAfterAvoid; // 0x34(0x04)
	None LockTimeAfterClean; // 0x38(0x04)
	None DeltaTimeToPredict; // 0x3c(0x04)
	None ArtificialRadiusExpansion; // 0x40(0x04)
	None TestHeightDifference; // 0x44(0x04)
	None HeightCheckMargin; // 0x48(0x04)
	None BandwidthGenerator; // 0x310(0x20)
	None Sprite; // 0x4b8(0x08)
	None bIsScreenSizeScaled; // 0x4c0(0x01)
	None ScreenSize; // 0x4c4(0x04)
	None U; // 0x4c8(0x04)
	None UL; // 0x4cc(0x04)
	None V; // 0x4d0(0x04)
	None VL; // 0x4d4(0x04)
	None BoneTree; // 0x38(0x10)
	None RefLocalPoses; // 0x48(0x10)
	None VirtualBoneGuid; // 0x170(0x10)
	None VirtualBones; // 0x180(0x10)
	None Sockets; // 0x190(0x10)
	None SmartNames; // 0x1f0(0x50)
	None BlendProfiles; // 0x270(0x10)
	None SlotGroups; // 0x280(0x10)
	None AssetUserData; // 0x358(0x10)
	None OwningSkeleton; // 0x30(0x08)
	None ProfileEntries; // 0x38(0x10)
	None ApplicationWillDeactivateDelegate; // 0x218(0x10)
	None ApplicationHasReactivatedDelegate; // 0x228(0x10)
	None ApplicationWillEnterBackgroundDelegate; // 0x238(0x10)
	None ApplicationHasEnteredForegroundDelegate; // 0x248(0x10)
	None ApplicationWillTerminateDelegate; // 0x258(0x10)
	None ApplicationShouldUnloadResourcesDelegate; // 0x268(0x10)
	None ApplicationReceivedStartupArgumentsDelegate; // 0x278(0x10)
	None ApplicationRegisteredForRemoteNotificationsDelegate; // 0x288(0x10)
	None ApplicationRegisteredForUserNotificationsDelegate; // 0x298(0x10)
	None ApplicationFailedToRegisterForRemoteNotificationsDelegate; // 0x2a8(0x10)
	None ApplicationReceivedRemoteNotificationDelegate; // 0x2b8(0x10)
	None ApplicationReceivedLocalNotificationDelegate; // 0x2c8(0x10)
	None ApplicationReceivedScreenOrientationChangedNotificationDelegate; // 0x2d8(0x10)
	None AggGeom; // 0x28(0x58)
	None BoneName; // 0x80(0x08)
	None PhysicsType; // 0x88(0x01)
	None bAlwaysFullAnimWeight; // 0x89(0x01)
	None bConsiderForBounds; // 0x89(0x01)
	None bMeshCollideAll; // 0x89(0x01)
	None bDoubleSidedGeometry; // 0x89(0x01)
	None bGenerateNonMirroredCollision; // 0x89(0x01)
	None bSharedCookedData; // 0x89(0x01)
	None bGenerateMirroredCollision; // 0x89(0x01)
	None bSupportUVsAndFaceRemap; // 0x89(0x01)
	None CollisionReponse; // 0x8b(0x01)
	None CollisionTraceFlag; // 0x8c(0x01)
	None PhysMaterial; // 0x90(0x08)
	None WalkableSlopeOverride; // 0x98(0x10)
	None DefaultInstance; // 0x120(0x190)
	None BuildScale3D; // 0x2b8(0x0c)
	None BlendPoses; // 0x28(0x10)
	None Location; // 0x28(0x0c)
	None Rotation; // 0x34(0x0c)
	None HiddenLevels; // 0x40(0x10)
	None Zoom2D; // 0x28(0x04)
	None Location; // 0x2c(0x08)
	None CaptureComponent; // 0x310(0x08)
	None VisualizationMesh; // 0x238(0x08)
	None CaptureOffsetComponent; // 0x240(0x08)
	None ReflectionSourceType; // 0x248(0x01)
	None Cubemap; // 0x250(0x08)
	None SourceCubemapAngle; // 0x258(0x04)
	None Brightness; // 0x25c(0x04)
	None DiffuseRadiance; // 0x260(0x04)
	None CaptureOffset; // 0x264(0x0c)
	None MapBuildDataId; // 0x270(0x10)
	None BoxTransitionDistance; // 0x2c0(0x04)
	None PreviewInfluenceBox; // 0x2c8(0x08)
	None PreviewCaptureBox; // 0x2d0(0x08)
	None bEnabled; // 0x28(0x01)
	None Node; // 0x30(0x08)
	None bStepOnce; // 0x38(0x01)
	None bStepOnce_WasPreviouslyDisabled; // 0x38(0x01)
	None bStepOnce_RemoveAfterHit; // 0x38(0x01)
	None BitmapFilename; // 0x28(0x10)
	None Tooltip; // 0x38(0x10)
	None NotifyBadParams; // 0x48(0x01)
	None Vertices; // 0x50(0x10)
	None Polys; // 0x60(0x10)
	None Layer; // 0x70(0x08)
	None MergeCoplanars; // 0x78(0x01)
	None Brush; // 0x4b8(0x08)
	None BrushBodySetup; // 0x4c0(0x08)
	None ButtonStyle; // 0x28(0x278)
	None CameraInterpGroup; // 0x28(0x08)
	None AnimLength; // 0x30(0x04)
	None BoundingBox; // 0x34(0x1c)
	None bRelativeToInitialTransform; // 0x50(0x01)
	None bRelativeToInitialFOV; // 0x50(0x01)
	None BaseFOV; // 0x54(0x04)
	None BasePostProcessSettings; // 0x60(0x5c0)
	None BasePostProcessBlendWeight; // 0x620(0x04)
	None CamAnim; // 0x28(0x08)
	None InterpGroupInst; // 0x30(0x08)
	None PlayRate; // 0x50(0x04)
	None MoveTrack; // 0x68(0x08)
	None MoveInst; // 0x70(0x08)
	None PlaySpace; // 0x78(0x01)
	None ActiveShakes; // 0x48(0x10)
	None ExpiredPooledShakesMap; // 0x58(0x50)
	None SplitScreenShakeScale; // 0xa8(0x04)
	None bSingleInstance; // 0x28(0x01)
	None OscillationDuration; // 0x2c(0x04)
	None OscillationBlendInTime; // 0x30(0x04)
	None OscillationBlendOutTime; // 0x34(0x04)
	None RotOscillation; // 0x38(0x24)
	None LocOscillation; // 0x5c(0x24)
	None FOVOscillation; // 0x80(0x0c)
	None AnimPlayRate; // 0x8c(0x04)
	None AnimScale; // 0x90(0x04)
	None AnimBlendInTime; // 0x94(0x04)
	None AnimBlendOutTime; // 0x98(0x04)
	None RandomAnimSegmentDuration; // 0x9c(0x04)
	None Anim; // 0xa0(0x08)
	None bRandomAnimSegment; // 0xa8(0x01)
	None CameraOwner; // 0xc0(0x08)
	None ShakeScale; // 0x148(0x04)
	None OscillatorTimeRemaining; // 0x14c(0x04)
	None AnimInst; // 0x150(0x08)
	None CameraShakeSourceComponent; // 0x310(0x08)
	None Attenuation; // 0x238(0x01)
	None InnerAttenuationRadius; // 0x23c(0x04)
	None OuterAttenuationRadius; // 0x240(0x04)
	None CameraShake; // 0x248(0x08)
	None bAutoPlay; // 0x250(0x01)
	None OrgX; // 0x28(0x04)
	None OrgY; // 0x2c(0x04)
	None ClipX; // 0x30(0x04)
	None ClipY; // 0x34(0x04)
	None DrawColor; // 0x38(0x04)
	None bCenterX; // 0x3c(0x01)
	None bCenterY; // 0x3c(0x01)
	None bNoSmooth; // 0x3c(0x01)
	None SizeX; // 0x40(0x04)
	None SizeY; // 0x44(0x04)
	None ColorModulate; // 0x50(0x10)
	None DefaultTexture; // 0x60(0x08)
	None GradientTexture0; // 0x68(0x08)
	None ReporterGraph; // 0x70(0x08)
	None TargetGamma; // 0xb8(0x04)
	None SizeX; // 0xc0(0x04)
	None SizeY; // 0xc4(0x04)
	None ClearColor; // 0xc8(0x10)
	None AddressX; // 0xd8(0x01)
	None AddressY; // 0xd9(0x01)
	None bForceLinearGamma; // 0xda(0x01)
	None bHDR; // 0xda(0x01)
	None bGPUSharedFlag; // 0xda(0x01)
	None RenderTargetFormat; // 0xdb(0x01)
	None bAutoGenerateMips; // 0xdc(0x01)
	None MipsSamplerFilter; // 0xdd(0x01)
	None MipsAddressU; // 0xde(0x01)
	None MipsAddressV; // 0xdf(0x01)
	None OverrideFormat; // 0xe0(0x01)
	None OnCanvasRenderTargetUpdate; // 0xe8(0x10)
	None World; // 0xf8(0x08)
	None bShouldClearRenderTargetOnReceiveUpdate; // 0x100(0x01)
	None Friction; // 0x28(0x04)
	None StaticFriction; // 0x2c(0x04)
	None Restitution; // 0x30(0x04)
	None LinearEtherDrag; // 0x34(0x04)
	None AngularEtherDrag; // 0x38(0x04)
	None SleepingLinearVelocityThreshold; // 0x3c(0x04)
	None SleepingAngularVelocityThreshold; // 0x40(0x04)
	None CheckBoxStyle; // 0x28(0x580)
	None ChildActorClass; // 0x238(0x08)
	None ChildActor; // 0x240(0x08)
	None ChildActorTemplate; // 0x248(0x08)
	None Parent; // 0x1aa0(0x08)
	None AllDelegates; // 0x28(0x10)
	None LocalCloudFiles; // 0x38(0x10)
	None bSuppressDelegateCalls; // 0x48(0x01)
	None Profiles; // 0x38(0x10)
	None DefaultChannelResponses; // 0x48(0x10)
	None EditProfiles; // 0x58(0x10)
	None ProfileRedirects; // 0x68(0x10)
	None CollisionChannelRedirects; // 0x78(0x10)
	None ComponentDelegateBindings; // 0x28(0x10)
	None ParentTables; // 0xa0(0x10)
	None OldParentTables; // 0xb0(0x10)
	None RowStruct; // 0x28(0x08)
	None bStripFromClientBuilds; // 0x80(0x01)
	None bIgnoreExtraFields; // 0x80(0x01)
	None bIgnoreMissingFields; // 0x80(0x01)
	None ImportKeyField; // 0x88(0x10)
	None ParentTables; // 0xc8(0x10)
	None OldParentTables; // 0xd8(0x10)
	None ConsoleTargetPlayer; // 0x38(0x08)
	None DefaultTexture_Black; // 0x40(0x08)
	None DefaultTexture_White; // 0x48(0x08)
	None HistoryBuffer; // 0x68(0x10)
	None AsyncLoadingThreadEnabled; // 0x38(0x01)
	None AsyncPostLoadEnabled; // 0x38(0x01)
	None WarnIfTimeLimitExceeded; // 0x38(0x01)
	None TimeLimitExceededMultiplier; // 0x3c(0x04)
	None TimeLimitExceededMinTime; // 0x40(0x04)
	None MinBulkDataSizeForAsyncLoading; // 0x44(0x04)
	None UseBackgroundLevelStreaming; // 0x48(0x01)
	None AsyncLoadingUseFullTimeLimit; // 0x48(0x01)
	None AsyncLoadingTimeLimit; // 0x4c(0x04)
	None PriorityAsyncLoadingExtraTime; // 0x50(0x04)
	None LevelStreamingActorsUpdateTimeLimit; // 0x54(0x04)
	None PriorityLevelStreamingActorsUpdateExtraTime; // 0x58(0x04)
	None LevelStreamingComponentsRegistrationGranularity; // 0x5c(0x04)
	None LevelStreamingUnregisterComponentsTimeLimit; // 0x60(0x04)
	None LevelStreamingComponentsUnregistrationGranularity; // 0x64(0x04)
	None FlushStreamingOnExit; // 0x68(0x01)
	None EventDrivenLoaderEnabled; // 0x68(0x01)
	None TimeBetweenPurgingPendingKillObjects; // 0x38(0x04)
	None FlushStreamingOnGC; // 0x3c(0x01)
	None AllowParallelGC; // 0x3c(0x01)
	None IncrementalBeginDestroyEnabled; // 0x3c(0x01)
	None MultithreadedDestructionEnabled; // 0x3c(0x01)
	None CreateGCClusters; // 0x3c(0x01)
	None AssetClusteringEnabled; // 0x3c(0x01)
	None ActorClusteringEnabled; // 0x3c(0x01)
	None BlueprintClusteringEnabled; // 0x3c(0x01)
	None UseDisregardForGCOnDedicatedServers; // 0x3d(0x01)
	None MinGCClusterSize; // 0x40(0x04)
	None NumRetriesBeforeForcingGC; // 0x44(0x04)
	None MaxObjectsNotConsideredByGC; // 0x48(0x04)
	None SizeOfPermanentObjectPool; // 0x4c(0x04)
	None MaxObjectsInGame; // 0x50(0x04)
	None MaxObjectsInEditor; // 0x54(0x04)
	None CullDistances; // 0x348(0x10)
	None bEnabled; // 0x358(0x01)
	None FloatCurve; // 0x30(0x80)
	None bIsEventCurve; // 0xb0(0x01)
	None FloatCurves; // 0x30(0x200)
	None AdjustHue; // 0x230(0x04)
	None AdjustSaturation; // 0x234(0x04)
	None AdjustBrightness; // 0x238(0x04)
	None AdjustBrightnessCurve; // 0x23c(0x04)
	None AdjustVibrance; // 0x240(0x04)
	None AdjustMinAlpha; // 0x244(0x04)
	None AdjustMaxAlpha; // 0x248(0x04)
	None LevelIndex; // 0xb8(0x04)
	None FirstResourceMemMip; // 0xbc(0x04)
	None bTemporarilyDisableStreaming; // 0xc0(0x01)
	None AddressX; // 0xc1(0x01)
	None AddressY; // 0xc2(0x01)
	None ImportedSize; // 0xc4(0x08)
	None TextureSize; // 0xe8(0x04)
	None GradientCurves; // 0xf0(0x10)
	None FloatCurves; // 0x30(0x180)
	None bShowSelectedInfo; // 0x6f0(0x01)
	None bIsFrozenRendering; // 0x6f0(0x01)
	None bOverrideInitialMaxSpeed; // 0x6f0(0x01)
	None OverrideInitialMaxSpeed; // 0x6f4(0x04)
	None bIsOrbitingSelectedActor; // 0x6f8(0x01)
	None bOrbitPivotUseCenter; // 0x6f8(0x01)
	None bEnableBufferVisualization; // 0x6f8(0x01)
	None bEnableBufferVisualizationFullMode; // 0x6f8(0x01)
	None bIsBufferVisualizationInputSetup; // 0x6f8(0x01)
	None bLastDisplayEnabled; // 0x6f8(0x01)
	None DrawFrustum; // 0x700(0x08)
	None SelectedActor; // 0x708(0x08)
	None SelectedComponent; // 0x710(0x08)
	None SelectedHitPoint; // 0x718(0x88)
	None OriginalControllerRef; // 0x7a0(0x08)
	None OriginalPlayer; // 0x7a8(0x08)
	None SpeedScale; // 0x7b0(0x04)
	None InitialMaxSpeed; // 0x7b4(0x04)
	None InitialAccel; // 0x7b8(0x04)
	None InitialDecel; // 0x7bc(0x04)
	None CycleViewModes; // 0x38(0x10)
	None Decal; // 0x310(0x08)
	None DecalMaterial; // 0x238(0x08)
	None SortOrder; // 0x240(0x04)
	None FadeScreenSize; // 0x244(0x04)
	None FadeStartDelay; // 0x248(0x04)
	None FadeDuration; // 0x24c(0x04)
	None FadeInDuration; // 0x250(0x04)
	None FadeInStartDelay; // 0x254(0x04)
	None bDestroyOwnerAfterFade; // 0x258(0x01)
	None DecalSize; // 0x25c(0x0c)
	None SelfDemoNetConnection; // 0x1be8(0x08)
	None NetDriver; // 0x30(0x08)
	None DemoNetDriver; // 0x38(0x08)
	None TextureLODGroups; // 0x28(0x10)
	None DeviceType; // 0x38(0x10)
	None BaseProfileName; // 0x48(0x10)
	None Parent; // 0x58(0x08)
	None CVars; // 0x78(0x10)
	None Profiles; // 0x28(0x10)
	None gender; // 0x28(0x01)
	None Plurality; // 0x29(0x01)
	None LocalizationGUID; // 0x2c(0x10)
	None bMature; // 0x28(0x01)
	None bOverride_SubtitleOverride; // 0x28(0x01)
	None SpokenText; // 0x30(0x10)
	None SubtitleOverride; // 0x40(0x10)
	None ContextMappings; // 0x50(0x10)
	None LocalizationGUID; // 0x60(0x10)
	None LightComponent; // 0x310(0x08)
	None bEnabled; // 0x318(0x01)
	None LightGuid; // 0x238(0x10)
	None Brightness; // 0x248(0x04)
	None Intensity; // 0x24c(0x04)
	None LightColor; // 0x250(0x04)
	None bAffectsWorld; // 0x254(0x01)
	None CastShadows; // 0x254(0x01)
	None CastStaticShadows; // 0x254(0x01)
	None CastDynamicShadows; // 0x254(0x01)
	None bAffectTranslucentLighting; // 0x254(0x01)
	None bTransmission; // 0x254(0x01)
	None bCastVolumetricShadow; // 0x254(0x01)
	None bCastDeepShadow; // 0x254(0x01)
	None bCastRaytracedShadow; // 0x255(0x01)
	None bAffectReflection; // 0x255(0x01)
	None bAffectGlobalIllumination; // 0x255(0x01)
	None IndirectLightingIntensity; // 0x258(0x04)
	None VolumetricScatteringIntensity; // 0x25c(0x04)
	None VolumetricAttenuationScale; // 0x260(0x04)
	None VolumetricSourceRadiusScale; // 0x264(0x04)
	None SamplesPerPixel; // 0x268(0x04)
	None Temperature; // 0x270(0x04)
	None MaxDrawDistance; // 0x274(0x04)
	None MaxDistanceFadeRange; // 0x278(0x04)
	None bUseTemperature; // 0x27c(0x01)
	None ShadowMapChannel; // 0x280(0x04)
	None MinRoughness; // 0x288(0x04)
	None SpecularScale; // 0x28c(0x04)
	None ShadowResolutionScale; // 0x290(0x04)
	None ShadowBias; // 0x294(0x04)
	None ShadowSlopeBias; // 0x298(0x04)
	None ShadowSharpen; // 0x29c(0x04)
	None ContactShadowLength; // 0x2a0(0x04)
	None ContactShadowLengthInWS; // 0x2a4(0x01)
	None ContactShadowStartDistance; // 0x2a8(0x04)
	None ContactShadowFadeDistance; // 0x2ac(0x04)
	None ShadowStrength; // 0x2b0(0x04)
	None TranslucentShadowDensity; // 0x2b4(0x04)
	None InverseSquaredFalloff; // 0x2b8(0x01)
	None CastTranslucentShadows; // 0x2b8(0x01)
	None bCastShadowsFromCinematicObjectsOnly; // 0x2b8(0x01)
	None bAffectDynamicIndirectLighting; // 0x2b8(0x01)
	None bForceCachedShadowsFromMovablePrimitivesAsStatic; // 0x2b8(0x01)
	None bForceCachedShadowsForMovablePrimitives; // 0x2b8(0x01)
	None LightingChannels; // 0x2bc(0x01)
	None LightFunctionMaterial; // 0x2c0(0x08)
	None LightFunctionScale; // 0x2c8(0x0c)
	None IESTexture; // 0x2d8(0x08)
	None bUseIESBrightness; // 0x2e0(0x01)
	None IESBrightnessScale; // 0x2e4(0x04)
	None LightFunctionFadeDistance; // 0x2e8(0x04)
	None DisabledBrightness; // 0x2ec(0x04)
	None bEnableLightShaftBloom; // 0x2f0(0x01)
	None BloomScale; // 0x2f4(0x04)
	None BloomThreshold; // 0x2f8(0x04)
	None BloomMaxBrightness; // 0x2fc(0x04)
	None BloomTint; // 0x300(0x04)
	None bUseFoliageLighting; // 0x304(0x01)
	None bUseRayTracedDistanceFieldShadows; // 0x305(0x01)
	None RayStartOffsetDepthScale; // 0x308(0x04)
	None ShadowCascadeBiasDistribution; // 0x380(0x04)
	None bEnableLightShaftOcclusion; // 0x384(0x01)
	None OcclusionMaskDarkness; // 0x388(0x04)
	None OcclusionDepthRange; // 0x38c(0x04)
	None LightShaftOverrideDirection; // 0x390(0x0c)
	None WholeSceneDynamicShadowRadius; // 0x39c(0x04)
	None DynamicShadowDistanceMovableLight; // 0x3a0(0x04)
	None DynamicShadowDistanceStationaryLight; // 0x3a4(0x04)
	None DynamicShadowCascades; // 0x3a8(0x04)
	None CascadeDistributionExponent; // 0x3ac(0x04)
	None CascadeTransitionFraction; // 0x3b0(0x04)
	None ShadowDistanceFadeoutFraction; // 0x3b4(0x04)
	None bUseInsetShadowsForMovableObjects; // 0x3b8(0x01)
	None FarShadowCascadeCount; // 0x3bc(0x04)
	None FarShadowDistance; // 0x3c0(0x04)
	None bUseFarShadowAsStaticWorldShadow; // 0x3c4(0x01)
	None DistanceFieldShadowDistance; // 0x3c8(0x04)
	None LightSourceAngle; // 0x3cc(0x04)
	None LightSourceSoftAngle; // 0x3d0(0x04)
	None TraceDistance; // 0x3d4(0x04)
	None LightmassSettings; // 0x3d8(0x10)
	None bCastModulatedShadows; // 0x3e8(0x01)
	None ModulatedShadowColor; // 0x3ec(0x04)
	None ShadowAmount; // 0x3f0(0x04)
	None bUsedAsAtmosphereSunLight; // 0x3f4(0x01)
	None AtmosphereSunLightIndex; // 0x3f8(0x04)
	None bCanBeBaked; // 0x30(0x01)
	None bBakedDataSuccesfully; // 0x30(0x01)
	None Constant; // 0x38(0x04)
	None ConstantCurve; // 0x38(0x18)
	None ParameterName; // 0x40(0x08)
	None MinInput; // 0x48(0x04)
	None MaxInput; // 0x4c(0x04)
	None MinOutput; // 0x50(0x04)
	None MaxOutput; // 0x54(0x04)
	None ParamMode; // 0x58(0x01)
	None Min; // 0x38(0x04)
	None MAX; // 0x3c(0x04)
	None ConstantCurve; // 0x38(0x18)
	None bCanBeBaked; // 0x30(0x01)
	None bIsDirty; // 0x30(0x01)
	None bBakedDataSuccesfully; // 0x30(0x01)
	None Constant; // 0x38(0x0c)
	None bLockAxes; // 0x44(0x01)
	None LockedAxes; // 0x48(0x01)
	None ConstantCurve; // 0x38(0x18)
	None bLockAxes; // 0x50(0x01)
	None LockedAxes; // 0x54(0x01)
	None ParameterName; // 0x50(0x08)
	None MinInput; // 0x58(0x0c)
	None MaxInput; // 0x64(0x0c)
	None MinOutput; // 0x70(0x0c)
	None MaxOutput; // 0x7c(0x0c)
	None ParamModes; // 0x88(0x03)
	None MAX; // 0x38(0x0c)
	None Min; // 0x44(0x0c)
	None bLockAxes; // 0x50(0x01)
	None LockedAxes; // 0x54(0x01)
	None MirrorFlags; // 0x55(0x03)
	None bUseExtremes; // 0x58(0x01)
	None ConstantCurve; // 0x38(0x18)
	None bLockAxes1; // 0x50(0x01)
	None bLockAxes2; // 0x50(0x01)
	None LockedAxes; // 0x54(0x02)
	None MirrorFlags; // 0x56(0x03)
	None bUseExtremes; // 0x5c(0x01)
	None FrustumColor; // 0x4b8(0x04)
	None FrustumAngle; // 0x4bc(0x04)
	None FrustumAspectRatio; // 0x4c0(0x04)
	None FrustumStartDist; // 0x4c4(0x04)
	None FrustumEndDist; // 0x4c8(0x04)
	None Texture; // 0x4d0(0x08)
	None SphereRadius; // 0x4d0(0x04)
	None Schema; // 0x28(0x08)
	None Nodes; // 0x30(0x10)
	None bEditable; // 0x40(0x01)
	None bAllowDeletion; // 0x40(0x01)
	None bAllowRenaming; // 0x40(0x01)
	None Blueprint; // 0x28(0x08)
	None Graph; // 0x30(0x08)
	None Node; // 0x38(0x08)
	None bIsDebugging; // 0x48(0x01)
	None DeprecatedPins; // 0x38(0x10)
	None NodePosX; // 0x48(0x04)
	None NodePosY; // 0x4c(0x04)
	None NodeWidth; // 0x50(0x04)
	None NodeHeight; // 0x54(0x04)
	None AdvancedPinDisplay; // 0x58(0x01)
	None EnabledState; // 0x59(0x01)
	None bDisplayAsDisabled; // 0x5b(0x01)
	None bUserSetEnabledState; // 0x5b(0x01)
	None bIsNodeEnabled; // 0x5b(0x01)
	None bHasCompilerMessage; // 0x5b(0x01)
	None NodeComment; // 0x60(0x10)
	None ErrorType; // 0x70(0x04)
	None ErrorMsg; // 0x78(0x10)
	None NodeGuid; // 0x88(0x10)
	None Link; // 0x98(0x10)
	None Excerpt; // 0xa8(0x10)
	None PinName; // 0x28(0x10)
	None PinToolTip; // 0x38(0x10)
	None Direction; // 0x48(0x01)
	None PinType; // 0x50(0x58)
	None DefaultValue; // 0xa8(0x10)
	None AutogeneratedDefaultValue; // 0xb8(0x10)
	None DefaultObject; // 0xc8(0x08)
	None DefaultTextValue; // 0xd0(0x18)
	None LinkedTo; // 0xe8(0x10)
	None SubPins; // 0xf8(0x10)
	None ParentPin; // 0x108(0x08)
	None ReferencePassThroughConnection; // 0x110(0x08)
	None ParticleSystemComponent; // 0x310(0x08)
	None bDestroyOnSystemFinish; // 0x318(0x01)
	None bPostUpdateTickGroup; // 0x318(0x01)
	None bCurrentlyActive; // 0x318(0x01)
	None OnParticleSpawn; // 0x320(0x10)
	None OnParticleBurst; // 0x330(0x10)
	None OnParticleDeath; // 0x340(0x10)
	None OnParticleCollide; // 0x350(0x10)
	None PS_CameraEffect; // 0x360(0x08)
	None PS_CameraEffectNonExtremeContent; // 0x368(0x08)
	None BaseCamera; // 0x370(0x08)
	None RelativeTransform; // 0x380(0x30)
	None BaseFOV; // 0x3b0(0x04)
	None bAllowMultipleInstances; // 0x3b4(0x01)
	None bResetWhenRetriggered; // 0x3b4(0x01)
	None EmittersToTreatAsSame; // 0x3b8(0x10)
	None DistFromCamera; // 0x3c8(0x04)
	None FailedPlaceMessage; // 0x28(0x10)
	None MaxedOutMessage; // 0x38(0x10)
	None EnteredMessage; // 0x48(0x10)
	None LeftMessage; // 0x58(0x10)
	None GlobalNameChange; // 0x68(0x10)
	None SpecEnteredMessage; // 0x78(0x10)
	None NewPlayerMessage; // 0x88(0x10)
	None NewSpecMessage; // 0x98(0x10)
	None Component; // 0x310(0x08)
	None bEnabled; // 0x318(0x01)
	None FogDensity; // 0x238(0x04)
	None FogHeightFalloff; // 0x23c(0x04)
	None SecondFogData; // 0x240(0x0c)
	None FogInscatteringColor; // 0x24c(0x10)
	None InscatteringColorCubemap; // 0x260(0x08)
	None InscatteringColorCubemapAngle; // 0x268(0x04)
	None InscatteringTextureTint; // 0x26c(0x10)
	None FullyDirectionalInscatteringColorDistance; // 0x27c(0x04)
	None NonDirectionalInscatteringColorDistance; // 0x280(0x04)
	None DirectionalInscatteringExponent; // 0x284(0x04)
	None DirectionalInscatteringStartDistance; // 0x288(0x04)
	None DirectionalInscatteringColor; // 0x28c(0x10)
	None FogMaxOpacity; // 0x29c(0x04)
	None StartDistance; // 0x2a0(0x04)
	None FogCutoffDistance; // 0x2a4(0x04)
	None bEnableVolumetricFog; // 0x2a8(0x01)
	None VolumetricFogScatteringDistribution; // 0x2ac(0x04)
	None VolumetricFogAlbedo; // 0x2b0(0x04)
	None VolumetricFogEmissive; // 0x2b4(0x10)
	None VolumetricFogExtinctionScale; // 0x2c4(0x04)
	None VolumetricFogDistance; // 0x2c8(0x04)
	None VolumetricFogStaticLightingScatteringIntensity; // 0x2cc(0x04)
	None bOverrideLightColorsWithFogInscatteringColors; // 0x2d0(0x01)
	None MaxSpeed; // 0x138(0x04)
	None Acceleration; // 0x13c(0x04)
	None Deceleration; // 0x140(0x04)
	None TurningBoost; // 0x144(0x04)
	None bPositionCorrected; // 0x148(0x01)
	None FontCacheType; // 0x30(0x01)
	None Characters; // 0x38(0x10)
	None Textures; // 0x48(0x10)
	None IsRemapped; // 0x58(0x04)
	None EmScale; // 0x5c(0x04)
	None Ascent; // 0x60(0x04)
	None Descent; // 0x64(0x04)
	None Leading; // 0x68(0x04)
	None Kerning; // 0x6c(0x04)
	None ImportOptions; // 0x70(0xb0)
	None NumCharacters; // 0x120(0x04)
	None MaxCharHeight; // 0x128(0x10)
	None ScalingFactor; // 0x138(0x04)
	None LegacyFontSize; // 0x13c(0x04)
	None LegacyFontName; // 0x140(0x08)
	None CompositeFont; // 0x148(0x38)
	None SourceFilename; // 0x30(0x10)
	None Hinting; // 0x40(0x01)
	None LoadingPolicy; // 0x41(0x01)
	None LayoutMethod; // 0x42(0x01)
	None Data; // 0x28(0xb0)
	None Attenuation; // 0x28(0xb0)
	None ForceFeedbackEffect; // 0x238(0x08)
	None bAutoDestroy; // 0x240(0x01)
	None bStopWhenOwnerDestroyed; // 0x240(0x01)
	None bLooping; // 0x240(0x01)
	None bIgnoreTimeDilation; // 0x240(0x01)
	None bOverrideAttenuation; // 0x240(0x01)
	None IntensityMultiplier; // 0x244(0x04)
	None AttenuationSettings; // 0x248(0x08)
	None AttenuationOverrides; // 0x250(0xb0)
	None OnForceFeedbackFinished; // 0x300(0x10)
	None ChannelDetails; // 0x28(0x10)
	None Duration; // 0x38(0x04)
	None BadPacketLossThreshold; // 0x310(0x04)
	None SeverePacketLossThreshold; // 0x314(0x04)
	None BadPingThreshold; // 0x318(0x04)
	None SeverePingThreshold; // 0x31c(0x04)
	None AdjustedNetSpeed; // 0x320(0x04)
	None LastNetSpeedUpdateTime; // 0x324(0x04)
	None TotalNetBandwidth; // 0x328(0x04)
	None MinDynamicBandwidth; // 0x32c(0x04)
	None MaxDynamicBandwidth; // 0x330(0x04)
	None bIsStandbyCheckingEnabled; // 0x334(0x01)
	None bHasStandbyCheatTriggered; // 0x334(0x01)
	None StandbyRxCheatTime; // 0x338(0x04)
	None StandbyTxCheatTime; // 0x33c(0x04)
	None PercentMissingForRxStandby; // 0x340(0x04)
	None PercentMissingForTxStandby; // 0x344(0x04)
	None PercentForBadPing; // 0x348(0x04)
	None JoinInProgressStandbyWaitTime; // 0x34c(0x04)
	None MoveRepSize; // 0x350(0x04)
	None MAXPOSITIONERRORSQUARED; // 0x354(0x04)
	None MAXNEARZEROVELOCITYSQUARED; // 0x358(0x04)
	None CLIENTADJUSTUPDATECOST; // 0x35c(0x04)
	None MAXCLIENTUPDATEINTERVAL; // 0x360(0x04)
	None MaxClientForcedUpdateDuration; // 0x364(0x04)
	None ServerForcedUpdateHitchThreshold; // 0x368(0x04)
	None ServerForcedUpdateHitchCooldown; // 0x36c(0x04)
	None MaxMoveDeltaTime; // 0x370(0x04)
	None MaxClientSmoothingDeltaTime; // 0x374(0x04)
	None ClientNetSendMoveDeltaTime; // 0x378(0x04)
	None ClientNetSendMoveDeltaTimeThrottled; // 0x37c(0x04)
	None ClientNetSendMoveDeltaTimeStationary; // 0x380(0x04)
	None ClientNetSendMoveThrottleAtNetSpeed; // 0x384(0x04)
	None ClientNetSendMoveThrottleOverPlayerCount; // 0x388(0x04)
	None ClientAuthorativePosition; // 0x38c(0x01)
	None ClientErrorUpdateRateLimit; // 0x390(0x04)
	None ClientNetCamUpdateDeltaTime; // 0x394(0x04)
	None ClientNetCamUpdatePositionLimit; // 0x398(0x04)
	None bMovementTimeDiscrepancyDetection; // 0x39c(0x01)
	None bMovementTimeDiscrepancyResolution; // 0x39d(0x01)
	None MovementTimeDiscrepancyMaxTimeMargin; // 0x3a0(0x04)
	None MovementTimeDiscrepancyMinTimeMargin; // 0x3a4(0x04)
	None MovementTimeDiscrepancyResolutionRate; // 0x3a8(0x04)
	None MovementTimeDiscrepancyDriftAllowance; // 0x3ac(0x04)
	None bMovementTimeDiscrepancyForceCorrectionsDuringResolution; // 0x3b0(0x01)
	None bUseDistanceBasedRelevancy; // 0x3b1(0x01)
	None SpotLightComponent; // 0x320(0x08)
	None Amplitudes; // 0x28(0x10)
	None SampleRate; // 0x38(0x04)
	None HapticDetails; // 0x28(0x110)
	None SoundWave; // 0x28(0x08)
	None ProxyMeshes; // 0x28(0x10)
	None bShouldPauseWhileAdOpen; // 0x38(0x01)
	None ClickedBannerDelegates; // 0x40(0x10)
	None ClosedAdDelegates; // 0x50(0x10)
	None Records; // 0x28(0x10)
	None UnnecessaryComponents; // 0x38(0x10)
	None InputActionDelegateBindings; // 0x28(0x10)
	None InputAxisDelegateBindings; // 0x28(0x10)
	None InputAxisKeyDelegateBindings; // 0x28(0x10)
	None CachedKeyToActionInfo; // 0x120(0x10)
	None InputKeyDelegateBindings; // 0x28(0x10)
	None AxisConfig; // 0x28(0x10)
	None bAltEnterTogglesFullscreen; // 0x38(0x01)
	None bF11TogglesFullscreen; // 0x38(0x01)
	None bUseMouseForTouch; // 0x38(0x01)
	None bEnableMouseSmoothing; // 0x38(0x01)
	None bEnableFOVScaling; // 0x38(0x01)
	None bCaptureMouseOnLaunch; // 0x38(0x01)
	None bDefaultViewportMouseLock; // 0x38(0x01)
	None bAlwaysShowTouchInterface; // 0x38(0x01)
	None bShowConsoleOnFourFingerTap; // 0x39(0x01)
	None bEnableGestureRecognizer; // 0x39(0x01)
	None bUseAutocorrect; // 0x3a(0x01)
	None ExcludedAutocorrectOS; // 0x40(0x10)
	None ExcludedAutocorrectCultures; // 0x50(0x10)
	None ExcludedAutocorrectDeviceModels; // 0x60(0x10)
	None DefaultViewportMouseCaptureMode; // 0x70(0x01)
	None DefaultViewportMouseLockMode; // 0x71(0x01)
	None FOVScale; // 0x74(0x04)
	None DoubleClickTime; // 0x78(0x04)
	None ActionMappings; // 0x80(0x10)
	None AxisMappings; // 0x90(0x10)
	None SpeechMappings; // 0xa0(0x10)
	None DefaultTouchInterface; // 0xb0(0x18)
	None ConsoleKey; // 0xc8(0x18)
	None ConsoleKeys; // 0xe0(0x10)
	None InputTouchDelegateBindings; // 0x28(0x10)
	None StaticMeshComponents; // 0xb0(0x10)
	None StaticMeshComponent; // 0xd0(0x08)
	None InstancedCollisionComponentMap; // 0x310(0x50)
	None Tabs; // 0x28(0x10)
	None ActiveTab; // 0x38(0x04)
	None InterpLength; // 0x28(0x04)
	None PathBuildTime; // 0x2c(0x04)
	None InterpGroups; // 0x30(0x10)
	None CurveEdSetup; // 0x40(0x08)
	None EdSectionStart; // 0x48(0x04)
	None EdSectionEnd; // 0x4c(0x04)
	None bShouldBakeAndPrune; // 0x50(0x01)
	None CachedDirectorGroup; // 0x58(0x08)
	None AllEventNames; // 0x60(0x10)
	None Caption; // 0x28(0x10)
	None InterpTracks; // 0x30(0x10)
	None GroupName; // 0x40(0x08)
	None GroupColor; // 0x48(0x04)
	None bCollapsed; // 0x4c(0x01)
	None bVisible; // 0x4c(0x01)
	None bIsFolder; // 0x4c(0x01)
	None bIsParented; // 0x4c(0x01)
	None bIsSelected; // 0x4c(0x01)
	None CameraAnimInst; // 0x50(0x08)
	None CompressTolerance; // 0x58(0x04)
	None Group; // 0x28(0x08)
	None GroupActor; // 0x30(0x08)
	None TrackInst; // 0x38(0x10)
	None Duration; // 0xf0(0x04)
	None bPauseOnImpact; // 0xf4(0x01)
	None bSweep; // 0xf8(0x01)
	None TeleportType; // 0xf9(0x01)
	None BehaviourType; // 0xfa(0x01)
	None bCheckIfStillInWorld; // 0xfb(0x01)
	None bForceSubStepping; // 0xfc(0x01)
	None OnInterpToReverse; // 0x100(0x10)
	None OnInterpToStop; // 0x110(0x10)
	None OnWaitBeginDelegate; // 0x120(0x10)
	None OnWaitEndDelegate; // 0x130(0x10)
	None OnResetDelegate; // 0x140(0x10)
	None MaxSimulationTimeStep; // 0x150(0x04)
	None MaxSimulationIterations; // 0x154(0x04)
	None ControlPoints; // 0x158(0x10)
	None SlotName; // 0x90(0x08)
	None AnimSeqs; // 0x98(0x10)
	None bSkipAnimNotifiers; // 0xa8(0x01)
	None BoolTrack; // 0x70(0x10)
	None PropertyName; // 0x80(0x08)
	None PropertyName; // 0x90(0x08)
	None CutTrack; // 0x70(0x10)
	None bSimulateCameraCutsOnClients; // 0x80(0x01)
	None EventTrack; // 0x70(0x10)
	None bFireEventsWhenForwards; // 0x80(0x01)
	None bFireEventsWhenBackwards; // 0x80(0x01)
	None bFireEventsWhenJumpingForwards; // 0x80(0x01)
	None bUseCustomEventName; // 0x80(0x01)
	None bPersistFade; // 0x90(0x01)
	None bFadeAudio; // 0x90(0x01)
	None FadeColor; // 0x94(0x10)
	None AnimBlueprintClass; // 0x90(0x08)
	None AnimClass; // 0x98(0x08)
	None ParamName; // 0xa0(0x08)
	None TargetMaterials; // 0x90(0x10)
	None ParamName; // 0xa0(0x08)
	None ParamName; // 0x90(0x08)
	None PropertyName; // 0x90(0x08)
	None LastUpdatePosition; // 0x28(0x04)
	None InterpProperty; // 0x28(0x20)
	None PropertyOuterObjectInst; // 0x48(0x08)
	None ResetBool; // 0x60(0x01)
	None ResetColor; // 0x58(0x04)
	None OldViewTarget; // 0x28(0x08)
	None LastUpdatePosition; // 0x28(0x04)
	None AnimScriptInstance; // 0x28(0x08)
	None ResetFloat; // 0x30(0x04)
	None MaterialInstances; // 0x28(0x10)
	None ResetFloats; // 0x38(0x10)
	None PrimitiveMaterialRefs; // 0x48(0x10)
	None InstancedTrack; // 0x58(0x08)
	None ResetFloat; // 0x28(0x04)
	None ResetFloat; // 0x58(0x04)
	None ResetColor; // 0x58(0x10)
	None ResetLocation; // 0x28(0x0c)
	None ResetRotation; // 0x34(0x0c)
	None LastUpdatePosition; // 0x28(0x04)
	None OldTimeDilation; // 0x28(0x04)
	None LastUpdatePosition; // 0x28(0x04)
	None PlayAudioComp; // 0x30(0x08)
	None Action; // 0x28(0x01)
	None LastUpdatePosition; // 0x2c(0x04)
	None bSavedActiveState; // 0x30(0x01)
	None MaterialInstances; // 0x28(0x10)
	None ResetVectors; // 0x38(0x10)
	None PrimitiveMaterialRefs; // 0x48(0x10)
	None InstancedTrack; // 0x58(0x08)
	None ResetVector; // 0x58(0x0c)
	None Action; // 0x28(0x01)
	None LastUpdatePosition; // 0x2c(0x04)
	None LinearColorTrack; // 0x70(0x18)
	None CurveTension; // 0x88(0x04)
	None PropertyName; // 0x90(0x08)
	None PosTrack; // 0x70(0x18)
	None EulerTrack; // 0x88(0x18)
	None LookupTrack; // 0xa0(0x10)
	None LookAtGroupName; // 0xb0(0x08)
	None LinCurveTension; // 0xb8(0x04)
	None AngCurveTension; // 0xbc(0x04)
	None bUseQuatInterpolation; // 0xc0(0x01)
	None bShowArrowAtKeys; // 0xc0(0x01)
	None bDisableMovement; // 0xc0(0x01)
	None bShowTranslationOnCurveEd; // 0xc0(0x01)
	None bShowRotationOnCurveEd; // 0xc0(0x01)
	None bHide3DTrack; // 0xc0(0x01)
	None RotMode; // 0xc4(0x01)
	None MoveAxis; // 0x90(0x01)
	None LookupTrack; // 0x98(0x10)
	None TrackKeys; // 0x70(0x10)
	None Sounds; // 0x90(0x10)
	None bPlayOnReverse; // 0xa0(0x01)
	None bContinueSoundOnMatineeEnd; // 0xa0(0x01)
	None bSuppressSubtitles; // 0xa0(0x01)
	None bTreatAsDialogue; // 0xa0(0x01)
	None bAttach; // 0xa0(0x01)
	None ToggleTrack; // 0x70(0x10)
	None bActivateSystemEachUpdate; // 0x80(0x01)
	None bActivateWithJustAttachedFlag; // 0x80(0x01)
	None bFireEventsWhenForwards; // 0x80(0x01)
	None bFireEventsWhenBackwards; // 0x80(0x01)
	None bFireEventsWhenJumpingForwards; // 0x80(0x01)
	None TargetMaterials; // 0x90(0x10)
	None ParamName; // 0xa0(0x08)
	None PropertyName; // 0x90(0x08)
	None VisibilityTrack; // 0x70(0x10)
	None bFireEventsWhenForwards; // 0x80(0x01)
	None bFireEventsWhenBackwards; // 0x80(0x01)
	None bFireEventsWhenJumpingForwards; // 0x80(0x01)
	None UnsignedInt16Variable; // 0x28(0x02)
	None UnsignedInt32Variable; // 0x2c(0x04)
	None UnsignedInt64Variable; // 0x30(0x08)
	None SignedInt8Variable; // 0x38(0x01)
	None SignedInt16Variable; // 0x3a(0x02)
	None SignedInt64Variable; // 0x40(0x08)
	None UnsignedInt8Variable; // 0x48(0x01)
	None SignedInt32Variable; // 0x4c(0x04)
	None LayerName; // 0x28(0x08)
	None bIsVisible; // 0x30(0x01)
	None ActorStats; // 0x38(0x10)
	None OwningWorld; // 0xb8(0x08)
	None Model; // 0xc0(0x08)
	None ModelComponents; // 0xc8(0x10)
	None ActorCluster; // 0xd8(0x08)
	None NumTextureStreamingUnbuiltComponents; // 0xe0(0x04)
	None NumTextureStreamingDirtyResources; // 0xe4(0x04)
	None LevelScriptActor; // 0xe8(0x08)
	None NavListStart; // 0xf0(0x08)
	None NavListEnd; // 0xf8(0x08)
	None NavDataChunks; // 0x100(0x10)
	None LightmapTotalSize; // 0x110(0x04)
	None ShadowmapTotalSize; // 0x114(0x04)
	None StaticNavigableGeometry; // 0x118(0x10)
	None StreamingTextureGuids; // 0x128(0x10)
	None LevelBuildDataId; // 0x1d0(0x10)
	None MapBuildData; // 0x1e0(0x08)
	None LightBuildLevelOffset; // 0x1e8(0x0c)
	None bIsLightingScenario; // 0x1f4(0x01)
	None bTextureStreamingRotationChanged; // 0x1f4(0x01)
	None bStaticComponentsRegisteredInStreamingManager; // 0x1f4(0x01)
	None bIsVisible; // 0x1f4(0x01)
	None WorldSettings; // 0x240(0x08)
	None AssetUserData; // 0x250(0x10)
	None DestroyedReplicatedStaticActors; // 0x270(0x10)
	None Actors; // 0x28(0x10)
	None BoxComponent; // 0x310(0x08)
	None bAutoUpdateBounds; // 0x318(0x01)
	None WorldAsset; // 0x28(0x28)
	None PackageNameToLoad; // 0x50(0x08)
	None LODPackageNames; // 0x58(0x10)
	None LevelTransform; // 0x80(0x30)
	None LevelLODIndex; // 0xb0(0x04)
	None StreamingPriority; // 0xb4(0x04)
	None bShouldBeVisible; // 0xc0(0x01)
	None bShouldBeLoaded; // 0xc0(0x01)
	None bLocked; // 0xc0(0x01)
	None bIsStatic; // 0xc0(0x01)
	None bShouldBlockOnLoad; // 0xc0(0x01)
	None bShouldBlockOnUnload; // 0xc0(0x01)
	None bDisableDistanceStreaming; // 0xc0(0x01)
	None bDrawOnLevelStatusMap; // 0xc0(0x01)
	None LevelColor; // 0xc4(0x10)
	None EditorStreamingVolumes; // 0xd8(0x10)
	None MinTimeBetweenVolumeUnloadRequests; // 0xe8(0x04)
	None OnLevelLoaded; // 0xf0(0x10)
	None OnLevelUnloaded; // 0x100(0x10)
	None OnLevelShown; // 0x110(0x10)
	None OnLevelHidden; // 0x120(0x10)
	None LoadedLevel; // 0x130(0x08)
	None PendingUnloadLevel; // 0x138(0x08)
	None bInitiallyLoaded; // 0x158(0x01)
	None bInitiallyVisible; // 0x158(0x01)
	None StreamingLevelNames; // 0x348(0x10)
	None bEditorPreVisOnly; // 0x358(0x01)
	None bDisabled; // 0x358(0x01)
	None StreamingUsage; // 0x35c(0x01)
	None SourceModel; // 0x28(0x08)
	None Surfaces; // 0x30(0x10)
	None PortalComponent; // 0x310(0x08)
	None PreviewBox; // 0x238(0x08)
	None LightmassSettings; // 0x28(0x18)
	None IntensityUnits; // 0x380(0x01)
	None Radius; // 0x384(0x04)
	None AttenuationRadius; // 0x388(0x04)
	None LightmassSettings; // 0x38c(0x0c)
	None StaticMeshComponent; // 0x310(0x08)
	None ImpostersStaticMeshComponents; // 0x318(0x50)
	None Proxy; // 0x368(0x08)
	None Key; // 0x370(0x08)
	None LODDrawDistance; // 0x378(0x04)
	None LODLevel; // 0x37c(0x04)
	None SubActors; // 0x380(0x10)
	None CachedNumHLODLevels; // 0x390(0x01)
	None LevelLightingQuality; // 0x28(0x01)
	None PhysMaterial; // 0x88(0x08)
	None PhysMaterialMask; // 0x90(0x08)
	None PhysicalMaterialMap; // 0x98(0x40)
	None Metallic; // 0xd8(0x0c)
	None Specular; // 0xec(0x0c)
	None Anisotropy; // 0x100(0x0c)
	None Normal; // 0x114(0x0c)
	None Tangent; // 0x128(0x0c)
	None EmissiveColor; // 0x13c(0x0c)
	None MaterialDomain; // 0x150(0x01)
	None BlendMode; // 0x151(0x01)
	None DecalBlendMode; // 0x152(0x01)
	None MaterialDecalResponse; // 0x153(0x01)
	None ShadingModel; // 0x154(0x01)
	None bCastDynamicShadowAsMasked; // 0x155(0x01)
	None ShadingModels; // 0x156(0x02)
	None OpacityMaskClipValue; // 0x158(0x04)
	None WorldPositionOffset; // 0x15c(0x0c)
	None Refraction; // 0x170(0x0c)
	None MaterialAttributes; // 0x184(0x10)
	None PixelDepthOffset; // 0x19c(0x0c)
	None ShadingModelFromMaterialExpression; // 0x1b0(0x0c)
	None bEnableSeparateTranslucency; // 0x1c4(0x01)
	None bEnableResponsiveAA; // 0x1c4(0x01)
	None bEnableTranslucentVelocity; // 0x1c8(0x01)
	None bScreenSpaceReflections; // 0x1cc(0x01)
	None bContactShadows; // 0x1cc(0x01)
	None TwoSided; // 0x1cc(0x01)
	None DitheredLODTransition; // 0x1cc(0x01)
	None DitherOpacityMask; // 0x1cc(0x01)
	None bAllowNegativeEmissiveColor; // 0x1cc(0x01)
	None TranslucencyLightingMode; // 0x1cd(0x01)
	None bEnableMobileSeparateTranslucency; // 0x1ce(0x01)
	None NumCustomizedUVs; // 0x1d0(0x04)
	None TranslucencyDirectionalLightingIntensity; // 0x1d4(0x04)
	None TranslucentShadowDensityScale; // 0x1d8(0x04)
	None TranslucentSelfShadowDensityScale; // 0x1dc(0x04)
	None TranslucentSelfShadowSecondDensityScale; // 0x1e0(0x04)
	None TranslucentSelfShadowSecondOpacity; // 0x1e4(0x04)
	None TranslucentBackscatteringExponent; // 0x1e8(0x04)
	None TranslucentMultipleScatteringExtinction; // 0x1ec(0x10)
	None TranslucentShadowStartOffset; // 0x1fc(0x04)
	None bDisableDepthTest; // 0x200(0x01)
	None bWriteOnlyAlpha; // 0x200(0x01)
	None bGenerateSphericalParticleNormals; // 0x200(0x01)
	None bTangentSpaceNormal; // 0x200(0x01)
	None bUseEmissiveForDynamicAreaLighting; // 0x200(0x01)
	None bBlockGI; // 0x200(0x01)
	None bUsedAsSpecialEngineMaterial; // 0x200(0x01)
	None bUsedWithSkeletalMesh; // 0x200(0x01)
	None bUsedWithEditorCompositing; // 0x201(0x01)
	None bUsedWithParticleSprites; // 0x201(0x01)
	None bUsedWithBeamTrails; // 0x201(0x01)
	None bUsedWithMeshParticles; // 0x201(0x01)
	None bUsedWithNiagaraSprites; // 0x201(0x01)
	None bUsedWithNiagaraRibbons; // 0x201(0x01)
	None bUsedWithNiagaraMeshParticles; // 0x201(0x01)
	None bUsedWithGeometryCache; // 0x201(0x01)
	None bUsedWithStaticLighting; // 0x202(0x01)
	None bUsedWithMorphTargets; // 0x202(0x01)
	None bUsedWithSplineMeshes; // 0x202(0x01)
	None bUsedWithInstancedStaticMeshes; // 0x202(0x01)
	None bUsedWithGeometryCollections; // 0x202(0x01)
	None bUsesDistortion; // 0x202(0x01)
	None bUsedWithClothing; // 0x202(0x01)
	None bUsedWithWater; // 0x204(0x01)
	None bUsedWithHairStrands; // 0x204(0x01)
	None bUsedWithLidarPointCloud; // 0x204(0x01)
	None bUsedWithUI; // 0x208(0x01)
	None bAutomaticallySetUsageInEditor; // 0x208(0x01)
	None bFullyRough; // 0x208(0x01)
	None bUseFullPrecision; // 0x208(0x01)
	None bUseLightmapDirectionality; // 0x208(0x01)
	None bForwardRenderUsePreintegratedGFForSimpleIBL; // 0x20c(0x01)
	None bUseHQForwardReflections; // 0x210(0x01)
	None bUsePlanarForwardReflections; // 0x210(0x01)
	None bNormalCurvatureToRoughness; // 0x210(0x01)
	None D3D11TessellationMode; // 0x211(0x01)
	None bEnableCrackFreeDisplacement; // 0x212(0x01)
	None bEnableAdaptiveTessellation; // 0x212(0x01)
	None AllowTranslucentCustomDepthWrites; // 0x212(0x01)
	None Wireframe; // 0x212(0x01)
	None bCanMaskedBeAssumedOpaque; // 0x212(0x01)
	None bIsMasked; // 0x212(0x01)
	None bIsPreviewMaterial; // 0x212(0x01)
	None bIsFunctionPreviewMaterial; // 0x212(0x01)
	None bUseMaterialAttributes; // 0x213(0x01)
	None bCastRayTracedShadows; // 0x213(0x01)
	None bUseTranslucencyVertexFog; // 0x213(0x01)
	None bIsSky; // 0x213(0x01)
	None bComputeFogPerPixel; // 0x213(0x01)
	None bOutputTranslucentVelocity; // 0x213(0x01)
	None bAllowDevelopmentShaderCompile; // 0x213(0x01)
	None bIsMaterialEditorStatsMaterial; // 0x213(0x01)
	None BlendableLocation; // 0x214(0x01)
	None BlendableOutputAlpha; // 0x215(0x01)
	None bEnableStencilTest; // 0x215(0x01)
	None StencilCompare; // 0x216(0x01)
	None StencilRefValue; // 0x217(0x01)
	None RefractionMode; // 0x218(0x01)
	None BlendablePriority; // 0x21c(0x04)
	None bIsBlendable; // 0x220(0x01)
	None UsageFlagWarnings; // 0x224(0x04)
	None RefractionDepthBias; // 0x228(0x04)
	None StateID; // 0x22c(0x10)
	None MaxDisplacement; // 0x23c(0x04)
	None CachedExpressionData; // 0x2c8(0x228)
	None Elements; // 0x4b8(0x10)
	None Input; // 0x40(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None threshold; // 0xf0(0x04)
	None Channel; // 0xf4(0x01)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Y; // 0x40(0x0c)
	None X; // 0x54(0x0c)
	None Y; // 0x40(0x0c)
	None X; // 0x54(0x0c)
	None Input; // 0x40(0x0c)
	None WorldPosition; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Temp; // 0x40(0x0c)
	None A; // 0x40(0x10)
	None B; // 0x58(0x10)
	None ALPHA; // 0x70(0x0c)
	None PixelAttributeBlendType; // 0x84(0x01)
	None VertexAttributeBlendType; // 0x85(0x01)
	None MaterialAttributes; // 0x40(0x10)
	None Coordinate; // 0x40(0x0c)
	None Height; // 0x54(0x0c)
	None HeightRatioInput; // 0x68(0x0c)
	None HeightRatio; // 0x7c(0x04)
	None ReferencePlane; // 0x80(0x04)
	None ConstCoordinate; // 0x84(0x04)
	None Input; // 0x40(0x0c)
	None ParameterName; // 0x40(0x08)
	None ExpressionGUID; // 0x48(0x10)
	None DefaultValue; // 0x58(0x10)
	None bUseCustomPrimitiveData; // 0x68(0x01)
	None PrimitiveDataIndex; // 0x69(0x01)
	None MaskChannel; // 0x70(0x01)
	None Input; // 0x74(0x0c)
	None Input; // 0x40(0x0c)
	None Min; // 0x54(0x0c)
	None MAX; // 0x68(0x0c)
	None ClampMode; // 0x7c(0x01)
	None MinDefault; // 0x80(0x04)
	None MaxDefault; // 0x84(0x04)
	None Input; // 0x40(0x0c)
	None Collection; // 0x40(0x08)
	None ParameterName; // 0x48(0x08)
	None ParameterId; // 0x50(0x10)
	None SizeX; // 0x40(0x04)
	None SizeY; // 0x44(0x04)
	None Text; // 0x48(0x10)
	None CommentColor; // 0x58(0x10)
	None FontSize; // 0x68(0x04)
	None Input; // 0x40(0x0c)
	None R; // 0x54(0x01)
	None G; // 0x54(0x01)
	None B; // 0x54(0x01)
	None A; // 0x54(0x01)
	None R; // 0x40(0x04)
	None R; // 0x40(0x04)
	None G; // 0x44(0x04)
	None Constant; // 0x40(0x10)
	None Constant; // 0x40(0x10)
	None Input; // 0x40(0x0c)
	None Bias; // 0x54(0x04)
	None Scale; // 0x58(0x04)
	None Input; // 0x40(0x0c)
	None Period; // 0x54(0x04)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None DefaultValue; // 0x58(0x04)
	None bUseCustomPrimitiveData; // 0x5c(0x01)
	None PrimitiveDataIndex; // 0x5d(0x01)
	None Curve; // 0x60(0x08)
	None Atlas; // 0x68(0x08)
	None InputTime; // 0x70(0x0c)
	None Code; // 0x40(0x10)
	None OutputType; // 0x50(0x01)
	None Description; // 0x58(0x10)
	None Inputs; // 0x68(0x10)
	None AdditionalDefines; // 0x78(0x10)
	None IncludeFilePaths; // 0x88(0x10)
	None Value; // 0x40(0x0c)
	None Value; // 0x40(0x0c)
	None TextureSize; // 0x40(0x0c)
	None ConstWidth; // 0x54(0x04)
	None ConstHeight; // 0x58(0x04)
	None InOpacity; // 0x40(0x0c)
	None FadeDistance; // 0x54(0x0c)
	None OpacityDefault; // 0x68(0x04)
	None FadeDistanceDefault; // 0x6c(0x04)
	None FunctionValue; // 0x40(0x01)
	None Depth; // 0x44(0x0c)
	None InXY; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Fraction; // 0x54(0x0c)
	None LuminanceFactors; // 0x68(0x10)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None Position; // 0x40(0x0c)
	None Position; // 0x40(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ParamNames; // 0x40(0x10)
	None DefaultValue; // 0x50(0x10)
	None ParameterIndex; // 0x60(0x04)
	None Default; // 0x40(0x0c)
	None Inputs; // 0x54(0x30)
	None Input; // 0x40(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None Font; // 0x40(0x08)
	None FontTexturePage; // 0x48(0x04)
	None ParameterName; // 0x50(0x08)
	None ExpressionGUID; // 0x58(0x10)
	None Group; // 0x68(0x08)
	None Input; // 0x40(0x0c)
	None ExponentIn; // 0x40(0x0c)
	None Exponent; // 0x54(0x04)
	None BaseReflectFractionIn; // 0x58(0x0c)
	None BaseReflectFraction; // 0x6c(0x04)
	None Normal; // 0x70(0x0c)
	None Preview; // 0x40(0x0c)
	None InputName; // 0x54(0x08)
	None Description; // 0x60(0x10)
	None ID; // 0x70(0x10)
	None InputType; // 0x80(0x01)
	None PreviewValue; // 0x90(0x10)
	None bUsePreviewValueAsDefault; // 0xa0(0x01)
	None SortPriority; // 0xa4(0x04)
	None bCompilingFunctionPreview; // 0xa8(0x01)
	None OutputName; // 0x40(0x08)
	None Description; // 0x48(0x10)
	None SortPriority; // 0x58(0x04)
	None A; // 0x5c(0x0c)
	None bLastPreviewed; // 0x70(0x01)
	None ID; // 0x74(0x10)
	None MaterialAttributes; // 0x40(0x10)
	None AttributeGetTypes; // 0x58(0x10)
	None Default; // 0x40(0x0c)
	None StaticIndirect; // 0x54(0x0c)
	None DynamicIndirect; // 0x68(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None AGreaterThanB; // 0x68(0x0c)
	None AEqualsB; // 0x7c(0x0c)
	None ALessThanB; // 0x90(0x0c)
	None EqualsThreshold; // 0xa4(0x04)
	None ConstB; // 0xa8(0x04)
	None ConstAEqualsB; // 0xac(0x04)
	None Realtime; // 0x40(0x0c)
	None Lightmass; // 0x54(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ALPHA; // 0x68(0x0c)
	None ConstA; // 0x7c(0x04)
	None ConstB; // 0x80(0x04)
	None ConstAlpha; // 0x84(0x04)
	None X; // 0x40(0x0c)
	None X; // 0x40(0x0c)
	None BaseColor; // 0x40(0x0c)
	None Metallic; // 0x54(0x0c)
	None Specular; // 0x68(0x0c)
	None Roughness; // 0x7c(0x0c)
	None Anisotropy; // 0x90(0x0c)
	None EmissiveColor; // 0xa4(0x0c)
	None Opacity; // 0xb8(0x0c)
	None OpacityMask; // 0xcc(0x0c)
	None Normal; // 0xe0(0x0c)
	None Tangent; // 0xf4(0x0c)
	None WorldPositionOffset; // 0x108(0x0c)
	None WorldDisplacement; // 0x11c(0x0c)
	None TessellationMultiplier; // 0x130(0x0c)
	None SubsurfaceColor; // 0x144(0x0c)
	None ClearCoat; // 0x158(0x0c)
	None ClearCoatRoughness; // 0x16c(0x0c)
	None AmbientOcclusion; // 0x180(0x0c)
	None Refraction; // 0x194(0x0c)
	None CustomizedUVs; // 0x1a8(0x60)
	None PixelDepthOffset; // 0x248(0x0c)
	None ShadingModel; // 0x25c(0x0c)
	None Coordinates; // 0x40(0x0c)
	None ParameterName; // 0x40(0x08)
	None ExpressionGUID; // 0x48(0x10)
	None Input; // 0x58(0x10)
	None DefaultLayers; // 0x70(0x40)
	None LayerCallers; // 0xb0(0x10)
	None NumActiveLayerCallers; // 0xc0(0x04)
	None BlendCallers; // 0xc8(0x10)
	None NumActiveBlendCallers; // 0xd8(0x04)
	None bIsLayerGraphBuilt; // 0xdc(0x01)
	None MaterialFunction; // 0x40(0x08)
	None FunctionParameterInfo; // 0x48(0x10)
	None Realtime; // 0x40(0x0c)
	None MaterialProxy; // 0x54(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None Position; // 0x40(0x0c)
	None FilterWidth; // 0x54(0x0c)
	None Scale; // 0x68(0x04)
	None Quality; // 0x6c(0x04)
	None NoiseFunction; // 0x70(0x01)
	None bTurbulence; // 0x74(0x01)
	None Levels; // 0x78(0x04)
	None OutputMin; // 0x7c(0x04)
	None OutputMax; // 0x80(0x04)
	None LevelScale; // 0x84(0x04)
	None bTiling; // 0x88(0x01)
	None RepeatSize; // 0x8c(0x04)
	None VectorInput; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Coordinate; // 0x40(0x0c)
	None Time; // 0x54(0x0c)
	None Speed; // 0x68(0x0c)
	None SpeedX; // 0x7c(0x04)
	None SpeedY; // 0x80(0x04)
	None ConstCoordinate; // 0x84(0x04)
	None bFractionalPart; // 0x88(0x01)
	None bBlend; // 0xd0(0x01)
	None DefaultValue; // 0x40(0x0c)
	None ConstDefaultValue; // 0x54(0x04)
	None DataIndex; // 0x58(0x04)
	None Base; // 0x40(0x0c)
	None Exponent; // 0x54(0x0c)
	None ConstExponent; // 0x68(0x04)
	None CurrentFrame; // 0x40(0x0c)
	None PreviousFrame; // 0x54(0x0c)
	None Default; // 0x40(0x0c)
	None Inputs; // 0x54(0x24)
	None Normal; // 0x40(0x0c)
	None RayTraced; // 0x54(0x0c)
	None InputVector; // 0x40(0x0c)
	None CustomWorldNormal; // 0x40(0x0c)
	None bNormalizeCustomWorldNormal; // 0x54(0x01)
	None Input; // 0x40(0x0c)
	None NormalizedRotationAxis; // 0x40(0x0c)
	None RotationAngle; // 0x54(0x0c)
	None PivotPoint; // 0x68(0x0c)
	None Position; // 0x7c(0x0c)
	None Period; // 0x90(0x04)
	None Coordinate; // 0x40(0x0c)
	None Time; // 0x54(0x0c)
	None CenterX; // 0x68(0x04)
	None CenterY; // 0x6c(0x04)
	None Speed; // 0x70(0x04)
	None ConstCoordinate; // 0x74(0x04)
	None Input; // 0x40(0x0c)
	None BaseColor; // 0x40(0x0c)
	None Specular; // 0x54(0x0c)
	None Roughness; // 0x68(0x0c)
	None Normal; // 0x7c(0x0c)
	None WorldHeight; // 0x90(0x0c)
	None Opacity; // 0xa4(0x0c)
	None Mask; // 0xb8(0x0c)
	None Default; // 0x40(0x0c)
	None VirtualTextureOutput; // 0x54(0x0c)
	None Coordinates; // 0x40(0x0c)
	None WorldPosition; // 0x54(0x0c)
	None MipValue; // 0x68(0x0c)
	None VirtualTexture; // 0x80(0x08)
	None MaterialType; // 0x88(0x01)
	None bSinglePhysicalSpace; // 0x89(0x01)
	None MipValueMode; // 0x8a(0x01)
	None ParameterName; // 0x90(0x08)
	None ExpressionGUID; // 0x98(0x10)
	None Group; // 0xa8(0x08)
	None Input; // 0x40(0x0c)
	None InputMode; // 0x40(0x01)
	None Input; // 0x44(0x0c)
	None OffsetFraction; // 0x58(0x0c)
	None ConstInput; // 0x6c(0x08)
	None InputMode; // 0x40(0x01)
	None Input; // 0x44(0x0c)
	None Coordinates; // 0x58(0x0c)
	None ConstInput; // 0x6c(0x08)
	None Coordinates; // 0x40(0x0c)
	None SceneTextureId; // 0x54(0x01)
	None bFiltered; // 0x55(0x01)
	None Inputs; // 0x40(0x10)
	None AttributeSetTypes; // 0x50(0x10)
	None PixelShader; // 0x40(0x0c)
	None VertexShader; // 0x54(0x0c)
	None ShadingModel; // 0x40(0x01)
	None Default; // 0x40(0x0c)
	None Inputs; // 0x54(0x24)
	None Default; // 0x40(0x0c)
	None Shadow; // 0x54(0x0c)
	None Input; // 0x40(0x0c)
	None Input; // 0x40(0x0c)
	None Period; // 0x54(0x04)
	None ScatteringCoefficients; // 0x40(0x0c)
	None AbsorptionCoefficients; // 0x54(0x0c)
	None PhaseG; // 0x68(0x0c)
	None LightIndex; // 0x40(0x04)
	None LightIndex; // 0x40(0x04)
	None WorldPosition; // 0x44(0x0c)
	None LightIndex; // 0x40(0x04)
	None WorldPosition; // 0x40(0x0c)
	None cell; // 0x40(0x0c)
	None Index; // 0x54(0x0c)
	None Seed; // 0x68(0x0c)
	None ConstIndex; // 0x7c(0x04)
	None ConstSeed; // 0x80(0x08)
	None GeometryInput; // 0x40(0x0c)
	None WindInput; // 0x54(0x0c)
	None LODInput; // 0x68(0x0c)
	None ExtraBendWS; // 0x7c(0x0c)
	None GeometryType; // 0x90(0x01)
	None WindType; // 0x91(0x01)
	None LODType; // 0x92(0x01)
	None BillboardThreshold; // 0x94(0x04)
	None bAccurateWindVelocities; // 0x98(0x01)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None Radius; // 0x68(0x0c)
	None Hardness; // 0x7c(0x0c)
	None AttenuationRadius; // 0x90(0x04)
	None HardnessPercent; // 0x94(0x04)
	None Density; // 0x40(0x0c)
	None ConstantDensity; // 0x54(0x04)
	None Input; // 0x40(0x0c)
	None Value; // 0x40(0x01)
	None DefaultValue; // 0x58(0x01)
	None Input; // 0x58(0x0c)
	None DefaultR; // 0x6c(0x01)
	None DefaultG; // 0x6c(0x01)
	None DefaultB; // 0x6c(0x01)
	None DefaultA; // 0x6c(0x01)
	None DefaultValue; // 0x40(0x01)
	None A; // 0x44(0x0c)
	None B; // 0x58(0x0c)
	None Value; // 0x6c(0x0c)
	None A; // 0x60(0x0c)
	None B; // 0x74(0x0c)
	None A; // 0x40(0x0c)
	None B; // 0x54(0x0c)
	None ConstA; // 0x68(0x04)
	None ConstB; // 0x6c(0x04)
	None Input; // 0x40(0x0c)
	None Period; // 0x54(0x04)
	None Input; // 0x40(0x0c)
	None Index; // 0x40(0x0c)
	None Seed; // 0x54(0x0c)
	None ConstIndex; // 0x68(0x04)
	None ConstSeed; // 0x6c(0x08)
	None CoordinateIndex; // 0x40(0x04)
	None UTiling; // 0x44(0x04)
	None VTiling; // 0x48(0x04)
	None UnMirrorU; // 0x4c(0x01)
	None UnMirrorV; // 0x4c(0x01)
	None TextureObject; // 0x40(0x0c)
	None Property; // 0x54(0x01)
	None bBlend; // 0xf0(0x01)
	None TransmittanceColor; // 0x40(0x0c)
	None bIgnorePause; // 0x40(0x01)
	None bOverride_Period; // 0x40(0x01)
	None Period; // 0x44(0x04)
	None Input; // 0x40(0x0c)
	None TransformSourceType; // 0x54(0x01)
	None TransformType; // 0x55(0x01)
	None Input; // 0x40(0x0c)
	None TransformSourceType; // 0x54(0x01)
	None TransformType; // 0x55(0x01)
	None Input; // 0x40(0x0c)
	None Position; // 0x40(0x0c)
	None NoiseFunction; // 0x54(0x01)
	None Quality; // 0x58(0x04)
	None bTiling; // 0x5c(0x01)
	None TileSize; // 0x60(0x04)
	None Input; // 0x40(0x0c)
	None Property; // 0x40(0x01)
	None No; // 0x40(0x0c)
	None Yes; // 0x54(0x0c)
	None WorldPositionShaderOffset; // 0x40(0x01)
	None StateID; // 0x28(0x10)
	None MaterialFunctionUsage; // 0x38(0x01)
	None Description; // 0x40(0x10)
	None bExposeToLibrary; // 0x50(0x01)
	None bPrefixParameterNames; // 0x50(0x01)
	None bReentrantFlag; // 0x50(0x01)
	None Parent; // 0x40(0x08)
	None Base; // 0x48(0x08)
	None ScalarParameterValues; // 0x50(0x10)
	None VectorParameterValues; // 0x60(0x10)
	None TextureParameterValues; // 0x70(0x10)
	None FontParameterValues; // 0x80(0x10)
	None StaticSwitchParameterValues; // 0x90(0x10)
	None StaticComponentMaskParameterValues; // 0xa0(0x10)
	None RuntimeVirtualTextureParameterValues; // 0xb0(0x10)
	None TargetActors; // 0x310(0x10)
	None StateID; // 0x28(0x10)
	None ScalarParameters; // 0x38(0x10)
	None VectorParameters; // 0x48(0x10)
	None Collection; // 0x30(0x08)
	None MatineeData; // 0x310(0x08)
	None MatineeControllerName; // 0x318(0x08)
	None PlayRate; // 0x320(0x04)
	None bPlayOnLevelLoad; // 0x324(0x01)
	None bForceStartPos; // 0x324(0x01)
	None ForceStartPosition; // 0x328(0x04)
	None bLooping; // 0x32c(0x01)
	None bRewindOnPlay; // 0x32c(0x01)
	None bNoResetOnRewind; // 0x32c(0x01)
	None bRewindIfAlreadyPlaying; // 0x32c(0x01)
	None bDisableRadioFilter; // 0x32c(0x01)
	None bClientSideOnly; // 0x32c(0x01)
	None bSkipUpdateIfNotVisible; // 0x32c(0x01)
	None bIsSkippable; // 0x32c(0x01)
	None PreferredSplitScreenNum; // 0x330(0x04)
	None bDisableMovementInput; // 0x334(0x01)
	None bDisableLookAtInput; // 0x334(0x01)
	None bHidePlayer; // 0x334(0x01)
	None bHideHud; // 0x334(0x01)
	None GroupActorInfos; // 0x338(0x10)
	None bShouldShowGore; // 0x348(0x01)
	None GroupInst; // 0x350(0x10)
	None CameraCuts; // 0x360(0x10)
	None bIsPlaying; // 0x370(0x01)
	None bReversePlayback; // 0x370(0x01)
	None bPaused; // 0x370(0x01)
	None bPendingStop; // 0x370(0x01)
	None InterpPosition; // 0x374(0x04)
	None ReplicationForceIsPlaying; // 0x37c(0x01)
	None OnPlay; // 0x380(0x10)
	None OnStop; // 0x390(0x10)
	None OnPause; // 0x3a0(0x10)
	None CameraAnim; // 0x3b8(0x08)
	None MeshReductionModuleName; // 0x38(0x08)
	None AvailableProducts; // 0x38(0x10)
	None LastError; // 0x48(0x10)
	None LastErrorSolution; // 0x58(0x10)
	None OnMK3DKillcamCompleteEvent; // 0xb0(0x10)
	None MK3DKillEvents; // 0xd8(0x10)
	None KillcamBeforeSec; // 0xe8(0x04)
	None KillcamAfterSec; // 0xec(0x04)
	None OnMK3DTargetcamCompleteEvent; // 0xb0(0x10)
	None MK3DTargetEvents; // 0xd8(0x10)
	None PendingNetObjectsHolder; // 0x2f0(0x10)
	None DataVersion; // 0x30(0x01)
	None Time; // 0x34(0x04)
	None ModelBodySetup; // 0x4d0(0x08)
	None BaseSkelMesh; // 0x28(0x08)
	None bIsDynamicObstacle; // 0x28(0x01)
	None NavigationDataName; // 0x28(0x08)
	None NavigationSystemClass; // 0x28(0x18)
	None SupportedAgentsMask; // 0x40(0x04)
	None DefaultAgentName; // 0x44(0x08)
	None bIsOverriden; // 0x4c(0x01)
	None LINKS; // 0x28(0x10)
	None SegmentLinks; // 0x38(0x10)
	None bVerifyPeer; // 0x38(0x01)
	None bEnableMultiplayerWorldOriginRebasing; // 0x38(0x01)
	None MaxRepArraySize; // 0x3c(0x04)
	None MaxRepArrayMemory; // 0x40(0x04)
	None NetworkEmulationProfiles; // 0x48(0x10)
	None SourceItems; // 0x28(0x50)
	None TargetItems; // 0x78(0x50)
	None SourceToTarget; // 0xc8(0x50)
	None SourceAsset; // 0x118(0x28)
	None TargetAsset; // 0x140(0x28)
	None ObjectBaseClass; // 0x28(0x08)
	None bHasBlueprintClasses; // 0x30(0x01)
	None Objects; // 0x38(0x10)
	None WeakObjects; // 0x48(0x10)
	None bUseWeakReferences; // 0x58(0x01)
	None bIsFullyLoaded; // 0x59(0x01)
	None ReferencedObjects; // 0x28(0x10)
	None bPainCausing; // 0x358(0x01)
	None DamagePerSec; // 0x35c(0x04)
	None DamageType; // 0x360(0x08)
	None PainInterval; // 0x368(0x04)
	None bEntryPain; // 0x36c(0x01)
	None BACKUP_bPainCausing; // 0x36c(0x01)
	None DamageInstigator; // 0x370(0x08)
	None EmitterName; // 0x28(0x08)
	None SubUVDataOffset; // 0x30(0x04)
	None EmitterRenderMode; // 0x34(0x01)
	None SignificanceLevel; // 0x35(0x01)
	None bUseLegacySpawningBehavior; // 0x37(0x01)
	None ConvertedModules; // 0x37(0x01)
	None bIsSoloing; // 0x37(0x01)
	None bCookedOut; // 0x37(0x01)
	None bDisabledLODsKeepEmitterAlive; // 0x37(0x01)
	None bDisableWhenInsignficant; // 0x38(0x01)
	None LODLevels; // 0x40(0x10)
	None PeakActiveParticles; // 0x50(0x04)
	None InitialAllocationCount; // 0x54(0x04)
	None QualityLevelSpawnRateScale; // 0x58(0x04)
	None DetailModeBitmask; // 0x5c(0x04)
	None Level; // 0x28(0x04)
	None bEnabled; // 0x2c(0x01)
	None RequiredModule; // 0x30(0x08)
	None Modules; // 0x38(0x10)
	None TypeDataModule; // 0x48(0x08)
	None SpawnModule; // 0x50(0x08)
	None EventGenerator; // 0x58(0x08)
	None SpawningModules; // 0x60(0x10)
	None SpawnModules; // 0x70(0x10)
	None UpdateModules; // 0x80(0x10)
	None OrbitModules; // 0x90(0x10)
	None EventReceiverModules; // 0xa0(0x10)
	None ConvertedModules; // 0xb0(0x01)
	None PeakActiveParticles; // 0xb4(0x04)
	None bSpawnModule; // 0x28(0x01)
	None bUpdateModule; // 0x28(0x01)
	None bFinalUpdateModule; // 0x28(0x01)
	None bUpdateForGPUEmitter; // 0x28(0x01)
	None bCurvesAsColor; // 0x28(0x01)
	None b3DDrawMode; // 0x28(0x01)
	None bSupported3DDrawMode; // 0x28(0x01)
	None bEnabled; // 0x28(0x01)
	None bEditable; // 0x29(0x01)
	None LODDuplicate; // 0x29(0x01)
	None bSupportsRandomSeed; // 0x29(0x01)
	None bRequiresLoopingNotification; // 0x29(0x01)
	None LODValidity; // 0x2a(0x01)
	None bAlwaysInWorldSpace; // 0x30(0x01)
	None Acceleration; // 0x38(0x48)
	None bApplyOwnerScale; // 0x80(0x01)
	None Acceleration; // 0x38(0x0c)
	None DragCoefficient; // 0x38(0x08)
	None DragCoefficientRaw; // 0x40(0x30)
	None DragScale; // 0x38(0x08)
	None DragScaleRaw; // 0x40(0x30)
	None AccelOverLife; // 0x38(0x48)
	None EndPoint0; // 0x30(0x0c)
	None EndPoint1; // 0x3c(0x0c)
	None Range; // 0x48(0x30)
	None Strength; // 0x78(0x30)
	None EmitterName; // 0x30(0x08)
	None Range; // 0x38(0x30)
	None bStrengthByDistance; // 0x68(0x01)
	None Strength; // 0x70(0x30)
	None bAffectBaseVelocity; // 0xa0(0x01)
	None SelectionMethod; // 0xa4(0x01)
	None bRenewSource; // 0xa8(0x01)
	None bInheritSourceVel; // 0xa8(0x01)
	None LastSelIndex; // 0xac(0x04)
	None Position; // 0x30(0x48)
	None Range; // 0x78(0x30)
	None Strength; // 0xa8(0x30)
	None StrengthByDistance; // 0xd8(0x01)
	None bAffectBaseVelocity; // 0xd8(0x01)
	None bOverrideVelocity; // 0xd8(0x01)
	None bUseWorldSpacePosition; // 0xd8(0x01)
	None Positive_X; // 0xd8(0x01)
	None Positive_Y; // 0xd8(0x01)
	None Positive_Z; // 0xd8(0x01)
	None Negative_X; // 0xd8(0x01)
	None Negative_Y; // 0xd9(0x01)
	None Negative_Z; // 0xd9(0x01)
	None Position; // 0x30(0x0c)
	None Radius; // 0x3c(0x04)
	None Strength; // 0x40(0x08)
	None StrengthRaw; // 0x48(0x30)
	None ModifierType; // 0x30(0x01)
	None PositionOptions; // 0x34(0x04)
	None Position; // 0x38(0x48)
	None TangentOptions; // 0x80(0x04)
	None Tangent; // 0x88(0x48)
	None bAbsoluteTangent; // 0xd0(0x01)
	None StrengthOptions; // 0xd4(0x04)
	None Strength; // 0xd8(0x30)
	None bLowFreq_Enabled; // 0x30(0x01)
	None Frequency; // 0x34(0x04)
	None Frequency_LowRange; // 0x38(0x04)
	None NoiseRange; // 0x40(0x48)
	None NoiseRangeScale; // 0x88(0x30)
	None bNRScaleEmitterTime; // 0xb8(0x01)
	None NoiseSpeed; // 0xc0(0x48)
	None bSmooth; // 0x108(0x01)
	None NoiseLockRadius; // 0x10c(0x04)
	None bNoiseLock; // 0x110(0x01)
	None bOscillate; // 0x110(0x01)
	None NoiseLockTime; // 0x114(0x04)
	None NoiseTension; // 0x118(0x04)
	None bUseNoiseTangents; // 0x11c(0x01)
	None NoiseTangentStrength; // 0x120(0x30)
	None NoiseTessellation; // 0x150(0x04)
	None bTargetNoise; // 0x154(0x01)
	None FrequencyDistance; // 0x158(0x04)
	None bApplyNoiseScale; // 0x15c(0x01)
	None NoiseScale; // 0x160(0x30)
	None SourceMethod; // 0x30(0x01)
	None SourceName; // 0x34(0x08)
	None bSourceAbsolute; // 0x3c(0x01)
	None Source; // 0x40(0x48)
	None bLockSource; // 0x88(0x01)
	None SourceTangentMethod; // 0x8c(0x01)
	None SourceTangent; // 0x90(0x48)
	None bLockSourceTangent; // 0xd8(0x01)
	None SourceStrength; // 0xe0(0x30)
	None bLockSourceStength; // 0x110(0x01)
	None TargetMethod; // 0x30(0x01)
	None TargetName; // 0x34(0x08)
	None Target; // 0x40(0x48)
	None bTargetAbsolute; // 0x88(0x01)
	None bLockTarget; // 0x88(0x01)
	None TargetTangentMethod; // 0x8c(0x01)
	None TargetTangent; // 0x90(0x48)
	None bLockTargetTangent; // 0xd8(0x01)
	None TargetStrength; // 0xe0(0x30)
	None bLockTargetStength; // 0x110(0x01)
	None LockRadius; // 0x114(0x04)
	None CameraOffset; // 0x30(0x30)
	None bSpawnTimeOnly; // 0x60(0x01)
	None UpdateMethod; // 0x64(0x01)
	None DampingFactor; // 0x30(0x48)
	None DampingFactorRotation; // 0x78(0x48)
	None MaxCollisions; // 0xc0(0x30)
	None CollisionCompletionOption; // 0xf0(0x01)
	None CollisionTypes; // 0xf8(0x10)
	None bApplyPhysics; // 0x110(0x01)
	None bIgnoreTriggerVolumes; // 0x110(0x01)
	None ParticleMass; // 0x118(0x30)
	None DirScalar; // 0x148(0x04)
	None bPawnsDoNotDecrementCount; // 0x14c(0x01)
	None bOnlyVerticalNormalsDecrementCount; // 0x14c(0x01)
	None VerticalFudgeFactor; // 0x150(0x04)
	None DelayAmount; // 0x158(0x30)
	None bDropDetail; // 0x188(0x01)
	None bCollideOnlyIfVisible; // 0x188(0x01)
	None bIgnoreSourceActor; // 0x188(0x01)
	None MaxCollisionDistance; // 0x18c(0x04)
	None Resilience; // 0x30(0x30)
	None ResilienceScaleOverLife; // 0x60(0x30)
	None Friction; // 0x90(0x04)
	None RandomSpread; // 0x94(0x04)
	None RandomDistribution; // 0x98(0x04)
	None RadiusScale; // 0x9c(0x04)
	None RadiusBias; // 0xa0(0x04)
	None Response; // 0xa4(0x01)
	None CollisionMode; // 0xa5(0x01)
	None StartColor; // 0x30(0x48)
	None StartAlpha; // 0x78(0x30)
	None bClampAlpha; // 0xa8(0x01)
	None RandomSeedInfo; // 0xb0(0x20)
	None ColorOverLife; // 0x30(0x48)
	None AlphaOverLife; // 0x78(0x30)
	None bClampAlpha; // 0xa8(0x01)
	None ColorScaleOverLife; // 0x30(0x48)
	None AlphaScaleOverLife; // 0x78(0x30)
	None bEmitterTime; // 0xa8(0x01)
	None Events; // 0x30(0x10)
	None EventGeneratorType; // 0x30(0x01)
	None EventName; // 0x34(0x08)
	None bStopSpawning; // 0x40(0x01)
	None SpawnCount; // 0x40(0x30)
	None bUseParticleTime; // 0x70(0x01)
	None bUsePSysLocation; // 0x70(0x01)
	None bInheritVelocity; // 0x70(0x01)
	None InheritVelocityScale; // 0x78(0x48)
	None PhysicalMaterials; // 0xc0(0x10)
	None bBanPhysicalMaterials; // 0xd0(0x01)
	None LowerLeftCorner; // 0x30(0x48)
	None UpperRightCorner; // 0x78(0x48)
	None bAbsolute; // 0xc0(0x01)
	None bKillInside; // 0xc0(0x01)
	None bAxisAlignedAndFixedSize; // 0xc0(0x01)
	None Height; // 0x30(0x30)
	None bAbsolute; // 0x60(0x01)
	None bFloor; // 0x60(0x01)
	None bApplyPSysScale; // 0x60(0x01)
	None LifeTime; // 0x30(0x30)
	None RandomSeedInfo; // 0x60(0x20)
	None bUseInverseSquaredFalloff; // 0x30(0x01)
	None bAffectsTranslucency; // 0x31(0x01)
	None bPreviewLightRadius; // 0x32(0x01)
	None SpawnFraction; // 0x34(0x04)
	None ColorScaleOverLife; // 0x38(0x48)
	None BrightnessOverLife; // 0x80(0x30)
	None RadiusScale; // 0xb0(0x30)
	None LightExponent; // 0xe0(0x30)
	None LightingChannels; // 0x110(0x01)
	None VolumetricScatteringIntensity; // 0x114(0x04)
	None bHighQualityLights; // 0x118(0x01)
	None bShadowCastingLights; // 0x119(0x01)
	None RandomSeedInfo; // 0x120(0x20)
	None StartLocation; // 0x30(0x48)
	None DistributeOverNPoints; // 0x78(0x04)
	None DistributeThreshold; // 0x7c(0x04)
	None RandomSeedInfo; // 0x80(0x20)
	None SourceType; // 0x30(0x01)
	None UniversalOffset; // 0x34(0x0c)
	None SourceLocations; // 0x40(0x10)
	None SelectionMethod; // 0x50(0x01)
	None bUpdatePositionEachFrame; // 0x54(0x01)
	None bOrientMeshEmitters; // 0x54(0x01)
	None bInheritBoneVelocity; // 0x54(0x01)
	None InheritVelocityScale; // 0x58(0x04)
	None SkelMeshActorParamName; // 0x5c(0x08)
	None NumPreSelectedIndices; // 0x64(0x04)
	None Location; // 0x30(0x48)
	None LocationOffset; // 0x78(0x48)
	None ScaleFactor; // 0xc0(0x48)
	None Direction; // 0x108(0x48)
	None EmitterName; // 0x30(0x08)
	None SelectionMethod; // 0x38(0x01)
	None InheritSourceVelocity; // 0x3c(0x01)
	None InheritSourceVelocityScale; // 0x40(0x04)
	None bInheritSourceRotation; // 0x44(0x01)
	None InheritSourceRotationScale; // 0x48(0x04)
	None EmitterName; // 0x30(0x08)
	None Positive_X; // 0x30(0x01)
	None Positive_Y; // 0x30(0x01)
	None Positive_Z; // 0x30(0x01)
	None Negative_X; // 0x30(0x01)
	None Negative_Y; // 0x30(0x01)
	None Negative_Z; // 0x30(0x01)
	None SurfaceOnly; // 0x30(0x01)
	None Velocity; // 0x30(0x01)
	None VelocityScale; // 0x38(0x30)
	None StartLocation; // 0x68(0x48)
	None RadialVelocity; // 0xb0(0x01)
	None StartRadius; // 0xb8(0x30)
	None StartHeight; // 0xe8(0x30)
	None HeightAxis; // 0x118(0x01)
	None RandomSeedInfo; // 0x120(0x20)
	None StartRadius; // 0xb0(0x30)
	None RandomSeedInfo; // 0xe0(0x20)
	None StartOffset; // 0x30(0x48)
	None Height; // 0x78(0x30)
	None Angle; // 0xa8(0x30)
	None Thickness; // 0xd8(0x30)
	None SourceType; // 0x30(0x01)
	None UniversalOffset; // 0x34(0x0c)
	None bUpdatePositionEachFrame; // 0x40(0x01)
	None bOrientMeshEmitters; // 0x40(0x01)
	None bInheritBoneVelocity; // 0x40(0x01)
	None InheritVelocityScale; // 0x44(0x04)
	None SkelMeshActorParamName; // 0x48(0x08)
	None ValidAssociatedBones; // 0x50(0x10)
	None bEnforceNormalCheck; // 0x60(0x01)
	None NormalToCompare; // 0x64(0x0c)
	None NormalCheckToleranceDegrees; // 0x70(0x04)
	None NormalCheckTolerance; // 0x74(0x04)
	None ValidMaterialIndices; // 0x78(0x10)
	None bInheritVertexColor; // 0x88(0x01)
	None bInheritUV; // 0x88(0x01)
	None InheritUVChannel; // 0x8c(0x04)
	None RandomSeedInfo; // 0x80(0x20)
	None MeshMaterials; // 0x30(0x10)
	None StartRotation; // 0x30(0x48)
	None bInheritParent; // 0x78(0x01)
	None RandomSeedInfo; // 0x80(0x20)
	None StartRotationRate; // 0x30(0x48)
	None RandomSeedInfo; // 0x78(0x20)
	None LifeMultiplier; // 0x30(0x48)
	None RotRate; // 0x30(0x48)
	None bScaleRotRate; // 0x78(0x01)
	None bUseEmitterTime; // 0x30(0x01)
	None ChainMode; // 0x38(0x01)
	None OffsetAmount; // 0x40(0x48)
	None OffsetOptions; // 0x88(0x04)
	None RotationAmount; // 0x90(0x48)
	None RotationOptions; // 0xd8(0x04)
	None RotationRateAmount; // 0xe0(0x48)
	None RotationRateOptions; // 0x128(0x04)
	None LockAxisFlags; // 0x30(0x01)
	None DynamicParams; // 0x30(0x10)
	None UpdateFlags; // 0x40(0x04)
	None bUsesVelocity; // 0x44(0x01)
	None RandomSeedInfo; // 0x48(0x20)
	None PivotOffset; // 0x30(0x08)
	None Material; // 0x30(0x08)
	None MinFacingCameraBlendDistance; // 0x38(0x04)
	None MaxFacingCameraBlendDistance; // 0x3c(0x04)
	None EmitterOrigin; // 0x40(0x0c)
	None EmitterRotation; // 0x4c(0x0c)
	None ScreenAlignment; // 0x58(0x01)
	None bUseLocalSpace; // 0x59(0x01)
	None bKillOnDeactivate; // 0x59(0x01)
	None bKillOnCompleted; // 0x59(0x01)
	None SortMode; // 0x5a(0x01)
	None bUseLegacyEmitterTime; // 0x5b(0x01)
	None bRemoveHMDRoll; // 0x5b(0x01)
	None bEmitterDurationUseRange; // 0x5b(0x01)
	None EmitterDuration; // 0x5c(0x04)
	None SpawnRate; // 0x60(0x30)
	None BurstList; // 0x90(0x10)
	None EmitterDelay; // 0xa0(0x04)
	None EmitterDelayLow; // 0xa4(0x04)
	None bDelayFirstLoopOnly; // 0xa8(0x01)
	None InterpolationMethod; // 0xa9(0x01)
	None bScaleUV; // 0xaa(0x01)
	None bEmitterDelayUseRange; // 0xaa(0x01)
	None ParticleBurstMethod; // 0xab(0x01)
	None bOverrideSystemMacroUV; // 0xac(0x01)
	None bUseMaxDrawCount; // 0xac(0x01)
	None OpacitySourceMode; // 0xad(0x01)
	None EmitterNormalsMode; // 0xae(0x01)
	None bOrbitModuleAffectsVelocityAlignment; // 0xaf(0x01)
	None SubImages_Horizontal; // 0xb0(0x04)
	None SubImages_Vertical; // 0xb4(0x04)
	None RandomImageTime; // 0xb8(0x04)
	None RandomImageChanges; // 0xbc(0x04)
	None MacroUVPosition; // 0xc0(0x0c)
	None MacroUVRadius; // 0xcc(0x04)
	None UVFlippingMode; // 0xd0(0x01)
	None BoundingMode; // 0xd1(0x01)
	None bDurationRecalcEachLoop; // 0xd2(0x01)
	None NormalsSphereCenter; // 0xd4(0x0c)
	None AlphaThreshold; // 0xe0(0x04)
	None EmitterLoops; // 0xe4(0x04)
	None CutoutTexture; // 0xe8(0x08)
	None MaxDrawCount; // 0xf0(0x04)
	None EmitterDurationLow; // 0xf4(0x04)
	None NormalsCylinderDirection; // 0xf8(0x0c)
	None NamedMaterialOverrides; // 0x108(0x10)
	None StartRotation; // 0x30(0x30)
	None RandomSeedInfo; // 0x60(0x20)
	None RotationOverLife; // 0x30(0x30)
	None Scale; // 0x60(0x01)
	None StartRotationRate; // 0x30(0x30)
	None RandomSeedInfo; // 0x60(0x20)
	None LifeMultiplier; // 0x30(0x30)
	None StartSize; // 0x30(0x48)
	None RandomSeedInfo; // 0x78(0x20)
	None LifeMultiplier; // 0x30(0x48)
	None MultiplyX; // 0x78(0x01)
	None MultiplyY; // 0x78(0x01)
	None MultiplyZ; // 0x78(0x01)
	None SizeScale; // 0x30(0x48)
	None EnableX; // 0x78(0x01)
	None EnableY; // 0x78(0x01)
	None EnableZ; // 0x78(0x01)
	None SpeedScale; // 0x30(0x08)
	None MaxScale; // 0x38(0x08)
	None SourceMovementScale; // 0x30(0x48)
	None bProcessSpawnRate; // 0x30(0x01)
	None bProcessBurstList; // 0x30(0x01)
	None Rate; // 0x38(0x30)
	None RateScale; // 0x68(0x30)
	None ParticleBurstMethod; // 0x98(0x01)
	None BurstList; // 0xa0(0x10)
	None BurstScale; // 0xb0(0x30)
	None bApplyGlobalSpawnRateScale; // 0xe0(0x01)
	None UnitScalar; // 0x38(0x04)
	None MovementTolerance; // 0x3c(0x04)
	None SpawnPerUnit; // 0x40(0x30)
	None MaxFrameDistance; // 0x70(0x04)
	None bIgnoreSpawnRateWhenMoving; // 0x74(0x01)
	None bIgnoreMovementAlongX; // 0x74(0x01)
	None bIgnoreMovementAlongY; // 0x74(0x01)
	None bIgnoreMovementAlongZ; // 0x74(0x01)
	None Animation; // 0x30(0x08)
	None SubImageIndex; // 0x38(0x30)
	None bUseRealTime; // 0x68(0x01)
	None bUseEmitterTime; // 0x70(0x01)
	None FrameRate; // 0x78(0x30)
	None StartingFrame; // 0xa8(0x04)
	None SourceMethod; // 0x30(0x01)
	None SourceName; // 0x34(0x08)
	None SourceStrength; // 0x40(0x30)
	None bLockSourceStength; // 0x70(0x01)
	None SourceOffsetCount; // 0x74(0x04)
	None SourceOffsetDefaults; // 0x78(0x10)
	None SelectionMethod; // 0x88(0x01)
	None bInheritRotation; // 0x8c(0x01)
	None bDeadTrailsOnDeactivate; // 0x30(0x01)
	None bEnablePreviousTangentRecalculation; // 0x30(0x01)
	None bTangentRecalculationEveryFrame; // 0x30(0x01)
	None TilingDistance; // 0x34(0x04)
	None DistanceTessellationStepSize; // 0x38(0x04)
	None TangentTessellationStepSize; // 0x3c(0x04)
	None WidthTessellationStepSize; // 0x40(0x04)
	None BeamMethod; // 0x30(0x01)
	None TextureTile; // 0x34(0x04)
	None TextureTileDistance; // 0x38(0x04)
	None Sheets; // 0x3c(0x04)
	None MaxBeamCount; // 0x40(0x04)
	None Speed; // 0x44(0x04)
	None InterpolationPoints; // 0x48(0x04)
	None bAlwaysOn; // 0x4c(0x01)
	None UpVectorStepSize; // 0x50(0x04)
	None BranchParentName; // 0x54(0x08)
	None Distance; // 0x60(0x30)
	None TaperMethod; // 0x90(0x01)
	None TaperFactor; // 0x98(0x30)
	None TaperScale; // 0xc8(0x30)
	None RenderGeometry; // 0xf8(0x01)
	None RenderDirectLine; // 0xf8(0x01)
	None RenderLines; // 0xf8(0x01)
	None RenderTessellation; // 0xf8(0x01)
	None EmitterInfo; // 0x30(0x280)
	None ResourceData; // 0x2b0(0x160)
	None CameraMotionBlurAmount; // 0x410(0x04)
	None bClearExistingParticlesOnInit; // 0x414(0x01)
	None Mesh; // 0x30(0x08)
	None LODSizeScale; // 0x40(0x04)
	None bUseStaticMeshLODs; // 0x44(0x01)
	None CastShadows; // 0x44(0x01)
	None DoCollisions; // 0x44(0x01)
	None MeshAlignment; // 0x45(0x01)
	None bOverrideMaterial; // 0x46(0x01)
	None bOverrideDefaultMotionBlurSettings; // 0x46(0x01)
	None bEnableMotionBlur; // 0x46(0x01)
	None RollPitchYawRange; // 0x48(0x48)
	None AxisLockOption; // 0x90(0x01)
	None bCameraFacing; // 0x91(0x01)
	None CameraFacingUpAxisOption; // 0x92(0x01)
	None CameraFacingOption; // 0x93(0x01)
	None bApplyParticleRotationAsSpin; // 0x94(0x01)
	None bFaceCameraDirectionRatherThanPosition; // 0x94(0x01)
	None bCollisionsConsiderPartilceSize; // 0x94(0x01)
	None MaxTessellationBetweenParticles; // 0x30(0x04)
	None SheetsPerTrail; // 0x34(0x04)
	None MaxTrailCount; // 0x38(0x04)
	None MaxParticleInTrailCount; // 0x3c(0x04)
	None bDeadTrailsOnDeactivate; // 0x40(0x01)
	None bDeadTrailsOnSourceLoss; // 0x40(0x01)
	None bClipSourceSegement; // 0x40(0x01)
	None bEnablePreviousTangentRecalculation; // 0x40(0x01)
	None bTangentRecalculationEveryFrame; // 0x40(0x01)
	None bSpawnInitialParticle; // 0x40(0x01)
	None RenderAxis; // 0x44(0x01)
	None TangentSpawningScalar; // 0x48(0x04)
	None bRenderGeometry; // 0x4c(0x01)
	None bRenderSpawnPoints; // 0x4c(0x01)
	None bRenderTangents; // 0x4c(0x01)
	None bRenderTessellation; // 0x4c(0x01)
	None TilingDistance; // 0x50(0x04)
	None DistanceTessellationStepSize; // 0x54(0x04)
	None bEnableTangentDiffInterpScale; // 0x58(0x01)
	None TangentTessellationScalar; // 0x5c(0x04)
	None bOverrideGlobalVectorFieldTightness; // 0x30(0x01)
	None GlobalVectorFieldScale; // 0x34(0x04)
	None GlobalVectorFieldTightness; // 0x38(0x04)
	None VectorField; // 0x30(0x08)
	None RelativeTranslation; // 0x38(0x0c)
	None RelativeRotation; // 0x44(0x0c)
	None RelativeScale3D; // 0x50(0x0c)
	None Intensity; // 0x5c(0x04)
	None Tightness; // 0x60(0x04)
	None bIgnoreComponentTransform; // 0x64(0x01)
	None bTileX; // 0x64(0x01)
	None bTileY; // 0x64(0x01)
	None bTileZ; // 0x64(0x01)
	None bUseFixDT; // 0x64(0x01)
	None MinInitialRotation; // 0x30(0x0c)
	None MaxInitialRotation; // 0x3c(0x0c)
	None RotationRate; // 0x30(0x0c)
	None VectorFieldScale; // 0x30(0x08)
	None VectorFieldScaleRaw; // 0x38(0x30)
	None VectorFieldScaleOverLife; // 0x30(0x08)
	None VectorFieldScaleOverLifeRaw; // 0x38(0x30)
	None bInWorldSpace; // 0x30(0x01)
	None bApplyOwnerScale; // 0x30(0x01)
	None StartVelocity; // 0x38(0x48)
	None StartVelocityRadial; // 0x80(0x30)
	None RandomSeedInfo; // 0xb0(0x20)
	None Angle; // 0x38(0x30)
	None Velocity; // 0x68(0x30)
	None Direction; // 0x98(0x0c)
	None Scale; // 0x38(0x48)
	None VelOverLife; // 0x38(0x48)
	None Absolute; // 0x80(0x01)
	None UpdateTime_FPS; // 0x30(0x04)
	None UpdateTime_Delta; // 0x34(0x04)
	None WarmupTime; // 0x38(0x04)
	None WarmupTickRate; // 0x3c(0x04)
	None Emitters; // 0x40(0x10)
	None PreviewComponent; // 0x50(0x08)
	None CurveEdSetup; // 0x58(0x08)
	None LODDistanceCheckTime; // 0x60(0x04)
	None MacroUVRadius; // 0x64(0x04)
	None LODDistances; // 0x68(0x10)
	None LODSettings; // 0x78(0x10)
	None FixedRelativeBoundingBox; // 0x88(0x1c)
	None SecondsBeforeInactive; // 0xa4(0x04)
	None Delay; // 0xa8(0x04)
	None DelayLow; // 0xac(0x04)
	None bOrientZAxisTowardCamera; // 0xb0(0x01)
	None bUseFixedRelativeBoundingBox; // 0xb0(0x01)
	None bShouldResetPeakCounts; // 0xb0(0x01)
	None bHasPhysics; // 0xb0(0x01)
	None bUseRealtimeThumbnail; // 0xb0(0x01)
	None ThumbnailImageOutOfDate; // 0xb0(0x01)
	None bUseDelayRange; // 0xb1(0x01)
	None bAllowManagedTicking; // 0xb1(0x01)
	None bAutoDeactivate; // 0xb1(0x01)
	None bRegenerateLODDuplicate; // 0xb1(0x01)
	None SystemUpdateMode; // 0xb2(0x01)
	None LODMethod; // 0xb3(0x01)
	None InsignificantReaction; // 0xb4(0x01)
	None OcclusionBoundsMethod; // 0xb5(0x01)
	None MaxSignificanceLevel; // 0xb7(0x01)
	None MinTimeBetweenTicks; // 0xb8(0x04)
	None InsignificanceDelay; // 0xbc(0x04)
	None MacroUVPosition; // 0xc0(0x0c)
	None CustomOcclusionBounds; // 0xcc(0x1c)
	None SoloTracking; // 0xe8(0x10)
	None NamedMaterialSlots; // 0xf8(0x10)
	None Template; // 0x4b8(0x08)
	None EmitterMaterials; // 0x4c0(0x10)
	None SkelMeshComponents; // 0x4d0(0x10)
	None bResetOnDetach; // 0x4e1(0x01)
	None bUpdateOnDedicatedServer; // 0x4e1(0x01)
	None bAllowRecycling; // 0x4e1(0x01)
	None bAutoManageAttachment; // 0x4e1(0x01)
	None bAutoAttachWeldSimulatedBodies; // 0x4e1(0x01)
	None bWarmingUp; // 0x4e2(0x01)
	None bOverrideLODMethod; // 0x4e2(0x01)
	None bSkipUpdateDynamicDataDuringTick; // 0x4e2(0x01)
	None LODMethod; // 0x4ed(0x01)
	None RequiredSignificance; // 0x4ee(0x01)
	None InstanceParameters; // 0x4f0(0x10)
	None OnParticleSpawn; // 0x500(0x10)
	None OnParticleBurst; // 0x510(0x10)
	None OnParticleDeath; // 0x520(0x10)
	None OnParticleCollide; // 0x530(0x10)
	None bOldPositionValid; // 0x540(0x01)
	None OldPosition; // 0x544(0x0c)
	None PartSysVelocity; // 0x550(0x0c)
	None WarmupTime; // 0x55c(0x04)
	None WarmupTickRate; // 0x560(0x04)
	None SecondsBeforeInactive; // 0x578(0x04)
	None MaxTimeBeforeForceUpdateTransform; // 0x580(0x04)
	None ReplayClips; // 0x5a0(0x10)
	None CustomTimeDilation; // 0x5b8(0x04)
	None AutoAttachParent; // 0x610(0x08)
	None AutoAttachSocketName; // 0x618(0x08)
	None AutoAttachLocationRule; // 0x620(0x01)
	None AutoAttachRotationRule; // 0x621(0x01)
	None AutoAttachScaleRule; // 0x622(0x01)
	None OnSystemFinished; // 0x650(0x10)
	None ClipIDNumber; // 0x28(0x04)
	None bAIPerceptionSystemCompatibilityMode; // 0xb0(0x01)
	None LastRemoteNoisePosition; // 0xb4(0x0c)
	None NoiseLifetime; // 0xc0(0x04)
	None LastRemoteNoiseVolume; // 0xc4(0x04)
	None LastRemoteNoiseTime; // 0xc8(0x04)
	None LastLocalNoiseVolume; // 0xcc(0x04)
	None LastLocalNoiseTime; // 0xd0(0x04)
	None StrengthMultiplyer; // 0xb0(0x04)
	None SkeletalMeshComponent; // 0xb8(0x08)
	None UVChannelIndex; // 0x28(0x04)
	None AddressX; // 0x2c(0x01)
	None AddressY; // 0x2d(0x01)
	None BoundsBodies; // 0x30(0x10)
	None SkeletalBodySetups; // 0x40(0x10)
	None ConstraintSetup; // 0x50(0x10)
	None SolverIterations; // 0x60(0x18)
	None bNotForDedicatedServer; // 0x78(0x01)
	None ThumbnailInfo; // 0x120(0x08)
	None BodySetup; // 0x128(0x10)
	None bSkipScaleFromAnimation; // 0x2d0(0x01)
	None PhysicalAnimationData; // 0x2d8(0x10)
	None ImpactThreshold; // 0x28(0x04)
	None ImpactReFireDelay; // 0x2c(0x04)
	None DefaultImpactSound; // 0x30(0x08)
	None LastImpactSoundTime; // 0x38(0x04)
	None ConstraintComp; // 0x310(0x08)
	None ConstraintActor1; // 0x318(0x08)
	None ConstraintActor2; // 0x320(0x08)
	None bDisableCollision; // 0x328(0x01)
	None ConstraintActor1; // 0x238(0x08)
	None ComponentName1; // 0x240(0x08)
	None ConstraintActor2; // 0x248(0x08)
	None ComponentName2; // 0x250(0x08)
	None ConstraintSetup; // 0x268(0x08)
	None OnConstraintBroken; // 0x270(0x10)
	None ConstraintInstance; // 0x280(0x1b8)
	None DefaultInstance; // 0x28(0x1b8)
	None ProfileHandles; // 0x1e0(0x10)
	None DefaultProfile; // 0x1f0(0x104)
	None GrabbedComponent; // 0xb0(0x08)
	None bSoftAngularConstraint; // 0xc0(0x01)
	None bSoftLinearConstraint; // 0xc0(0x01)
	None bInterpolateTarget; // 0xc0(0x01)
	None LinearDamping; // 0xc4(0x04)
	None LinearStiffness; // 0xc8(0x04)
	None AngularDamping; // 0xcc(0x04)
	None AngularStiffness; // 0xd0(0x04)
	None InterpolationSpeed; // 0x140(0x04)
	None DefaultGravityZ; // 0x38(0x04)
	None DefaultTerminalVelocity; // 0x3c(0x04)
	None DefaultFluidFriction; // 0x40(0x04)
	None SimulateScratchMemorySize; // 0x44(0x04)
	None RagdollAggregateThreshold; // 0x48(0x04)
	None TriangleMeshTriangleMinAreaThreshold; // 0x4c(0x04)
	None bEnableShapeSharing; // 0x50(0x01)
	None bEnablePCM; // 0x51(0x01)
	None bEnableStabilization; // 0x52(0x01)
	None bWarnMissingLocks; // 0x53(0x01)
	None bEnable2DPhysics; // 0x54(0x01)
	None PhysicErrorCorrection; // 0x58(0x34)
	None LockedAxis; // 0x8c(0x01)
	None DefaultDegreesOfFreedom; // 0x8d(0x01)
	None BounceThresholdVelocity; // 0x90(0x04)
	None FrictionCombineMode; // 0x94(0x01)
	None RestitutionCombineMode; // 0x95(0x01)
	None MaxAngularVelocity; // 0x98(0x04)
	None MaxDepenetrationVelocity; // 0x9c(0x04)
	None ContactOffsetMultiplier; // 0xa0(0x04)
	None MinContactOffset; // 0xa4(0x04)
	None MaxContactOffset; // 0xa8(0x04)
	None bSimulateSkeletalMeshOnDedicatedServer; // 0xac(0x01)
	None DefaultShapeComplexity; // 0xad(0x01)
	None bDefaultHasComplexCollision; // 0xae(0x01)
	None bSuppressFaceRemapTable; // 0xaf(0x01)
	None bSupportUVFromHitResults; // 0xb0(0x01)
	None bDisableActiveActors; // 0xb1(0x01)
	None bDisableKinematicStaticPairs; // 0xb2(0x01)
	None bDisableKinematicKinematicPairs; // 0xb3(0x01)
	None bDisableCCD; // 0xb4(0x01)
	None bEnableEnhancedDeterminism; // 0xb5(0x01)
	None AnimPhysicsMinDeltaTime; // 0xb8(0x04)
	None bSimulateAnimPhysicsAfterReset; // 0xbc(0x01)
	None MaxPhysicsDeltaTime; // 0xc0(0x04)
	None bSubstepping; // 0xc4(0x01)
	None bSubsteppingAsync; // 0xc5(0x01)
	None MaxSubstepDeltaTime; // 0xc8(0x04)
	None MaxSubsteps; // 0xcc(0x04)
	None SyncSceneSmoothingFactor; // 0xd0(0x04)
	None InitialAverageFrameRate; // 0xd4(0x04)
	None PhysXTreeRebuildRate; // 0xd8(0x04)
	None PhysicalSurfaces; // 0xe0(0x10)
	None DefaultBroadphaseSettings; // 0xf0(0x40)
	None ChaosSettings; // 0x130(0x03)
	None SpringStiffness; // 0x238(0x04)
	None SpringDamping; // 0x23c(0x04)
	None SpringLengthAtRest; // 0x240(0x04)
	None SpringRadius; // 0x244(0x04)
	None SpringChannel; // 0x248(0x01)
	None bIgnoreSelf; // 0x249(0x01)
	None SpringCompression; // 0x24c(0x04)
	None ThrusterComponent; // 0x310(0x08)
	None ThrustStrength; // 0x238(0x04)
	None PlanarReflectionComponent; // 0x320(0x08)
	None bShowPreviewPlane; // 0x328(0x01)
	None PreviewBox; // 0x2d0(0x08)
	None NormalDistortionStrength; // 0x2d8(0x04)
	None PrefilterRoughness; // 0x2dc(0x04)
	None PrefilterRoughnessDistance; // 0x2e0(0x04)
	None ScreenPercentage; // 0x2e4(0x04)
	None ExtraFOV; // 0x2e8(0x04)
	None DistanceFromPlaneFadeStart; // 0x2ec(0x04)
	None DistanceFromPlaneFadeEnd; // 0x2f0(0x04)
	None DistanceFromPlaneFadeoutStart; // 0x2f4(0x04)
	None DistanceFromPlaneFadeoutEnd; // 0x2f8(0x04)
	None AngleFromPlaneFadeStart; // 0x2fc(0x04)
	None AngleFromPlaneFadeEnd; // 0x300(0x04)
	None bShowPreviewPlane; // 0x304(0x01)
	None bRenderSceneTwoSided; // 0x305(0x01)
	None InfluenceRadiusScale; // 0x2c0(0x04)
	None PreviewInfluenceRadius; // 0x2c8(0x08)
	None PreviewCaptureBox; // 0x2d0(0x08)
	None PlatformChangedToLaptopModeDelegate; // 0xb0(0x10)
	None PlatformChangedToTabletModeDelegate; // 0xc0(0x10)
	None OriginalURL; // 0x28(0x10)
	None responsecode; // 0x38(0x04)
	None Tag; // 0x3c(0x04)
	None StringResponse; // 0x40(0x10)
	None BinaryResponse; // 0x50(0x10)
	None DebugExecBindings; // 0x120(0x10)
	None InvertedAxis; // 0x160(0x10)
	None PointLightComponent; // 0x320(0x08)
	None bUseInverseSquaredFalloff; // 0x398(0x01)
	None LightFalloffExponent; // 0x39c(0x04)
	None SourceRadius; // 0x3a0(0x04)
	None SoftSourceRadius; // 0x3a4(0x04)
	None SourceLength; // 0x3a8(0x04)
	None PoseContainer; // 0x80(0x90)
	None bAdditivePose; // 0x110(0x01)
	None BasePoseIndex; // 0x114(0x04)
	None RetargetSource; // 0x118(0x08)
	None Node; // 0x28(0x08)
	None PoseWatchColour; // 0x30(0x04)
	None Settings; // 0x240(0x5c0)
	None Priority; // 0x800(0x04)
	None BlendRadius; // 0x804(0x04)
	None BlendWeight; // 0x808(0x04)
	None bEnabled; // 0x80c(0x01)
	None bUnbound; // 0x80c(0x01)
	None Settings; // 0x350(0x5c0)
	None Priority; // 0x910(0x04)
	None BlendRadius; // 0x914(0x04)
	None BlendWeight; // 0x918(0x04)
	None bEnabled; // 0x91c(0x01)
	None bUnbound; // 0x91c(0x01)
	None OverrideVisibleActors; // 0x348(0x10)
	None OverrideInvisibleActors; // 0x358(0x10)
	None OverrideInvisibleLevels; // 0x368(0x10)
	None Skeleton; // 0x38(0x08)
	None SkeletalMeshes; // 0x40(0x10)
	None Rules; // 0x30(0x0c)
	None bLabelAssetsInMyDirectory; // 0x3c(0x01)
	None bIsRuntimeLabel; // 0x3c(0x01)
	None ExplicitAssets; // 0x40(0x10)
	None ExplicitBlueprints; // 0x50(0x10)
	None AssetCollection; // 0x60(0x08)
	None ProxyLODMeshReductionModuleName; // 0x38(0x08)
	None ForceComponent; // 0x310(0x08)
	None Radius; // 0x238(0x04)
	None Falloff; // 0x23c(0x01)
	None ImpulseStrength; // 0x240(0x04)
	None bImpulseVelChange; // 0x244(0x01)
	None bIgnoreOwningActor; // 0x244(0x01)
	None ForceStrength; // 0x248(0x04)
	None DestructibleDamage; // 0x24c(0x04)
	None ObjectTypesToAffect; // 0x250(0x10)
	None RectLightComponent; // 0x320(0x08)
	None SourceWidth; // 0x398(0x04)
	None SourceHeight; // 0x39c(0x04)
	None BarnDoorAngle; // 0x3a0(0x04)
	None BarnDoorLength; // 0x3a4(0x04)
	None SourceTexture; // 0x3a8(0x08)
	None bMobileDisableVertexFog; // 0x38(0x01)
	None MaxMobileCascades; // 0x3c(0x04)
	None MobileMSAASampleCount; // 0x40(0x01)
	None bMobileUseLegacyShadingModel; // 0x44(0x01)
	None bMobileAllowDitheredLODTransition; // 0x44(0x01)
	None bMobileAllowSoftwareOcclusionCulling; // 0x44(0x01)
	None bMobileVirtualTextures; // 0x44(0x01)
	None bDiscardUnusedQualityLevels; // 0x44(0x01)
	None bOcclusionCulling; // 0x44(0x01)
	None MinScreenRadiusForLights; // 0x48(0x04)
	None MinScreenRadiusForEarlyZPass; // 0x4c(0x04)
	None MinScreenRadiusForCSMdepth; // 0x50(0x04)
	None bPrecomputedVisibilityWarning; // 0x54(0x01)
	None bUseCullDistanceVolumes; // 0x54(0x01)
	None bTextureStreaming; // 0x54(0x01)
	None bUseDXT5NormalMaps; // 0x54(0x01)
	None bVirtualTextures; // 0x54(0x01)
	None bVirtualTexturedLightmaps; // 0x54(0x01)
	None VirtualTextureTileSize; // 0x58(0x04)
	None VirtualTextureTileBorderSize; // 0x5c(0x04)
	None VirtualTextureFeedbackFactor; // 0x60(0x04)
	None bVirtualTextureEnableCompressZlib; // 0x64(0x01)
	None bVirtualTextureEnableCompressCrunch; // 0x64(0x01)
	None bClearCoatEnableSecondNormal; // 0x64(0x01)
	None bPreIntegratedSkinBRDF; // 0x64(0x01)
	None bAnisotropicBRDF; // 0x64(0x01)
	None ReflectionCaptureResolution; // 0x68(0x04)
	None ReflectionEnvironmentLightmapMixBasedOnRoughness; // 0x6c(0x01)
	None bForwardShading; // 0x6c(0x01)
	None bVertexFoggingForOpaque; // 0x6c(0x01)
	None bAllowStaticLighting; // 0x6c(0x01)
	None bUseNormalMapsForStaticLighting; // 0x6c(0x01)
	None bGenerateMeshDistanceFields; // 0x6c(0x01)
	None bEightBitMeshDistanceFields; // 0x6c(0x01)
	None bGenerateLandscapeGIData; // 0x6c(0x01)
	None bCompressMeshDistanceFields; // 0x6d(0x01)
	None TessellationAdaptivePixelsPerTriangle; // 0x70(0x04)
	None bSeparateTranslucency; // 0x74(0x01)
	None TranslucentSortPolicy; // 0x78(0x01)
	None TranslucentSortAxis; // 0x7c(0x0c)
	None CustomDepthStencil; // 0x88(0x01)
	None bCustomDepthTaaJitter; // 0x8c(0x01)
	None bEnableAlphaChannelInPostProcessing; // 0x90(0x01)
	None bDefaultFeatureBloom; // 0x94(0x01)
	None bDefaultFeatureAmbientOcclusion; // 0x94(0x01)
	None bDefaultFeatureAmbientOcclusionStaticFraction; // 0x94(0x01)
	None bDefaultFeatureAutoExposure; // 0x94(0x01)
	None DefaultFeatureAutoExposure; // 0x98(0x01)
	None DefaultFeatureAutoExposureBias; // 0x9c(0x04)
	None bExtendDefaultLuminanceRangeInAutoExposureSettings; // 0xa0(0x01)
	None bUsePreExposure; // 0xa0(0x01)
	None bEnablePreExposureOnlyInTheEditor; // 0xa0(0x01)
	None bDefaultFeatureMotionBlur; // 0xa0(0x01)
	None bDefaultFeatureLensFlare; // 0xa0(0x01)
	None bTemporalUpsampling; // 0xa0(0x01)
	None bSSGI; // 0xa0(0x01)
	None DefaultFeatureAntiAliasing; // 0xa4(0x01)
	None DefaultLightUnits; // 0xa5(0x01)
	None DefaultBackBufferPixelFormat; // 0xa6(0x01)
	None bRenderUnbuiltPreviewShadowsInGame; // 0xa8(0x01)
	None bStencilForLODDither; // 0xa8(0x01)
	None EarlyZPass; // 0xac(0x01)
	None bEarlyZPassOnlyMaterialMasking; // 0xb0(0x01)
	None bDBuffer; // 0xb0(0x01)
	None ClearSceneMethod; // 0xb4(0x01)
	None bBasePassOutputsVelocity; // 0xb8(0x01)
	None bVertexDeformationOutputsVelocity; // 0xb8(0x01)
	None bSelectiveBasePassOutputs; // 0xb8(0x01)
	None bDefaultParticleCutouts; // 0xb8(0x01)
	None GPUSimulationTextureSizeX; // 0xbc(0x04)
	None GPUSimulationTextureSizeY; // 0xc0(0x04)
	None bGlobalClipPlane; // 0xc4(0x01)
	None GBufferFormat; // 0xc8(0x01)
	None bUseGPUMorphTargets; // 0xcc(0x01)
	None bNvidiaAftermathEnabled; // 0xcc(0x01)
	None bMultiView; // 0xcc(0x01)
	None bMobilePostProcessing; // 0xcc(0x01)
	None bMobileMultiView; // 0xcc(0x01)
	None bMobileUseHWsRGBEncoding; // 0xcc(0x01)
	None bRoundRobinOcclusion; // 0xcc(0x01)
	None bODSCapture; // 0xcc(0x01)
	None bMeshStreaming; // 0xcd(0x01)
	None WireframeCullThreshold; // 0xd0(0x04)
	None bEnableRayTracing; // 0xd4(0x01)
	None bEnableRayTracingTextureLOD; // 0xd4(0x01)
	None bSupportStationarySkylight; // 0xd4(0x01)
	None bSupportLowQualityLightmaps; // 0xd4(0x01)
	None bSupportPointLightWholeSceneShadows; // 0xd4(0x01)
	None bSupportAtmosphericFog; // 0xd4(0x01)
	None bSupportSkyAtmosphere; // 0xd4(0x01)
	None bSupportSkyAtmosphereAffectsHeightFog; // 0xd4(0x01)
	None bSupportSkinCacheShaders; // 0xd5(0x01)
	None DefaultSkinCacheBehavior; // 0xd8(0x01)
	None SkinCacheSceneMemoryLimitInMB; // 0xdc(0x04)
	None bMobileEnableStaticAndCSMShadowReceivers; // 0xe0(0x01)
	None bMobileEnableMovableLightCSMShaderCulling; // 0xe0(0x01)
	None bMobileAllowDistanceFieldShadows; // 0xe0(0x01)
	None bMobileAllowMovableDirectionalLights; // 0xe0(0x01)
	None MobileNumDynamicPointLights; // 0xe4(0x04)
	None bMobileDynamicPointLightsUseStaticBranch; // 0xe8(0x01)
	None bMobileAllowMovableSpotlights; // 0xe8(0x01)
	None bSupport16BitBoneIndex; // 0xe8(0x01)
	None bGPUSkinLimit2BoneInfluences; // 0xe8(0x01)
	None bSupportDepthOnlyIndexBuffers; // 0xe8(0x01)
	None bSupportReversedIndexBuffers; // 0xe8(0x01)
	None bSupportMaterialLayers; // 0xe8(0x01)
	None bLPV; // 0xe8(0x01)
	None bSupportAllShaderPermutations; // 0x38(0x01)
	None bForceRecomputeTangents; // 0x38(0x01)
	None Density; // 0x28(0x04)
	None Diffusion; // 0x2c(0x04)
	None Gain; // 0x30(0x04)
	None GainHF; // 0x34(0x04)
	None DecayTime; // 0x38(0x04)
	None DecayHFRatio; // 0x3c(0x04)
	None ReflectionsGain; // 0x40(0x04)
	None ReflectionsDelay; // 0x44(0x04)
	None LateGain; // 0x48(0x04)
	None LateDelay; // 0x4c(0x04)
	None AirAbsorptionGainHF; // 0x50(0x04)
	None RoomRolloffFactor; // 0x54(0x04)
	None TransformBases; // 0x30(0x10)
	None Nodes; // 0x40(0x10)
	None RotationRate; // 0xf0(0x0c)
	None PivotTranslation; // 0xfc(0x0c)
	None bRotationInLocalSpace; // 0x108(0x01)
	None MaterialType; // 0x28(0x01)
	None bCompressTextures; // 0x29(0x01)
	None bEnable; // 0x2a(0x01)
	None bClearTextures; // 0x2b(0x01)
	None bSinglePhysicalSpace; // 0x2c(0x01)
	None bPrivateSpace; // 0x2d(0x01)
	None bEnableScalability; // 0x2e(0x01)
	None Size; // 0x30(0x04)
	None TileCount; // 0x34(0x04)
	None TileSize; // 0x38(0x04)
	None TileBorderSize; // 0x3c(0x04)
	None StreamLowMips; // 0x40(0x04)
	None StreamingTexture; // 0x48(0x08)
	None bEnableCompressCrunch; // 0x50(0x01)
	None RemoveLowMips; // 0x54(0x04)
	None VirtualTexture; // 0x238(0x08)
	None bUseStreamingLowMipsInEditor; // 0x240(0x01)
	None BoundsSourceActor; // 0x248(0x08)
	None Settings; // 0xe8(0x0c)
	None bSinglePhysicalSpace; // 0xf4(0x01)
	None BuildHash; // 0xf8(0x04)
	None VirtualTextureComponent; // 0x310(0x08)
	None TextureTarget; // 0x2d0(0x08)
	None bCaptureRotation; // 0x2d8(0x01)
	None TextureTargetLeft; // 0x2e0(0x08)
	None TextureTargetRight; // 0x2e8(0x08)
	None TextureTargetODS; // 0x2f0(0x08)
	None IPD; // 0x2f8(0x04)
	None CaptureComponentCube; // 0x320(0x08)
	None ComponentClass; // 0x28(0x08)
	None ComponentTemplate; // 0x30(0x08)
	None CookedComponentInstancingData; // 0x38(0x48)
	None AttachToName; // 0x80(0x08)
	None ParentComponentOrVariableName; // 0x88(0x08)
	None ParentComponentOwnerClassName; // 0x90(0x08)
	None bIsParentComponentNative; // 0x98(0x01)
	None ChildNodes; // 0xa0(0x10)
	None MetaDataArray; // 0xb0(0x10)
	None VariableGuid; // 0xc0(0x10)
	None InternalVariableName; // 0xd0(0x08)
	None bUpdateStatNet; // 0x310(0x01)
	None bOverwriteClientStats; // 0x311(0x01)
	None Channels; // 0x314(0x04)
	None InRate; // 0x318(0x04)
	None OutRate; // 0x31c(0x04)
	None MaxPacketOverhead; // 0x324(0x04)
	None InRateClientMax; // 0x328(0x04)
	None InRateClientMin; // 0x32c(0x04)
	None InRateClientAvg; // 0x330(0x04)
	None InPacketsClientMax; // 0x334(0x04)
	None InPacketsClientMin; // 0x338(0x04)
	None InPacketsClientAvg; // 0x33c(0x04)
	None OutRateClientMax; // 0x340(0x04)
	None OutRateClientMin; // 0x344(0x04)
	None OutRateClientAvg; // 0x348(0x04)
	None OutPacketsClientMax; // 0x34c(0x04)
	None OutPacketsClientMin; // 0x350(0x04)
	None OutPacketsClientAvg; // 0x354(0x04)
	None NetNumClients; // 0x358(0x04)
	None InPackets; // 0x35c(0x04)
	None OutPackets; // 0x360(0x04)
	None InBunches; // 0x364(0x04)
	None OutBunches; // 0x368(0x04)
	None OutLoss; // 0x36c(0x04)
	None InLoss; // 0x370(0x04)
	None VoiceBytesSent; // 0x374(0x04)
	None VoiceBytesRecv; // 0x378(0x04)
	None VoicePacketsSent; // 0x37c(0x04)
	None VoicePacketsRecv; // 0x380(0x04)
	None PercentInVoice; // 0x384(0x04)
	None PercentOutVoice; // 0x388(0x04)
	None NumActorChannels; // 0x38c(0x04)
	None NumConsideredActors; // 0x390(0x04)
	None PrioritizedActors; // 0x394(0x04)
	None NumRelevantActors; // 0x398(0x04)
	None NumRelevantDeletedActors; // 0x39c(0x04)
	None NumReplicatedActorAttempts; // 0x3a0(0x04)
	None NumReplicatedActors; // 0x3a4(0x04)
	None NumActors; // 0x3a8(0x04)
	None NumNetActors; // 0x3ac(0x04)
	None NumDormantActors; // 0x3b0(0x04)
	None NumInitiallyDormantActors; // 0x3b4(0x04)
	None NumNetGUIDsAckd; // 0x3b8(0x04)
	None NumNetGUIDsPending; // 0x3bc(0x04)
	None NumNetGUIDsUnAckd; // 0x3c0(0x04)
	None ObjPathBytes; // 0x3c4(0x04)
	None NetGUIDOutRate; // 0x3c8(0x04)
	None NetGUIDInRate; // 0x3cc(0x04)
	None NetSaturated; // 0x3d0(0x04)
	None ShadowmapFlags; // 0xe8(0x01)
	None RootNodes; // 0x28(0x10)
	None AllNodes; // 0x38(0x10)
	None DefaultSceneRootNode; // 0x48(0x08)
	None MinLOD; // 0x30(0x04)
	None DisableBelowMinLodStripping; // 0x34(0x01)
	None bSupportLODStreaming; // 0x35(0x01)
	None MaxNumStreamedLODs; // 0x38(0x04)
	None MaxNumOptionalLODs; // 0x3c(0x04)
	None LODGroups; // 0x40(0x10)
	None SkeletalMeshReductionModuleName; // 0x38(0x08)
	None SocketName; // 0x28(0x08)
	None BoneName; // 0x30(0x08)
	None RelativeLocation; // 0x38(0x0c)
	None RelativeRotation; // 0x44(0x0c)
	None RelativeScale; // 0x50(0x0c)
	None bForceAlwaysAnimated; // 0x5c(0x01)
	None TransformMode; // 0x238(0x01)
	None BottomRadius; // 0x23c(0x04)
	None GroundAlbedo; // 0x240(0x04)
	None AtmosphereHeight; // 0x244(0x04)
	None MultiScatteringFactor; // 0x248(0x04)
	None RayleighScatteringScale; // 0x24c(0x04)
	None RayleighScattering; // 0x250(0x10)
	None RayleighExponentialDistribution; // 0x260(0x04)
	None MieScatteringScale; // 0x264(0x04)
	None MieScattering; // 0x268(0x10)
	None MieAbsorptionScale; // 0x278(0x04)
	None MieAbsorption; // 0x27c(0x10)
	None MieAnisotropy; // 0x28c(0x04)
	None MieExponentialDistribution; // 0x290(0x04)
	None OtherAbsorptionScale; // 0x294(0x04)
	None OtherAbsorption; // 0x298(0x10)
	None OtherTentDistribution; // 0x2a8(0x0c)
	None SkyLuminanceFactor; // 0x2b4(0x10)
	None AerialPespectiveViewDistanceScale; // 0x2c4(0x04)
	None HeightFogContribution; // 0x2c8(0x04)
	None TransmittanceMinLightElevationAngle; // 0x2cc(0x04)
	None bStaticLightingBuiltGUID; // 0x2f4(0x10)
	None SkyAtmosphereComponent; // 0x310(0x08)
	None SourceType; // 0x270(0x01)
	None Cubemap; // 0x278(0x08)
	None SourceCubemapAngle; // 0x280(0x04)
	None CubemapResolution; // 0x284(0x04)
	None SkyDistanceThreshold; // 0x288(0x04)
	None bCaptureEmissiveOnly; // 0x28c(0x01)
	None bLowerHemisphereIsBlack; // 0x28d(0x01)
	None LowerHemisphereColor; // 0x290(0x10)
	None bAffectDynamicIndirectLighting; // 0x2a0(0x01)
	None OcclusionMaxDistance; // 0x2a4(0x04)
	None Contrast; // 0x2a8(0x04)
	None OcclusionExponent; // 0x2ac(0x04)
	None OcclusionFoliageTint; // 0x2b0(0x04)
	None MinOcclusion; // 0x2b4(0x04)
	None OcclusionBarkTint; // 0x2b8(0x04)
	None OcclusionTint; // 0x2bc(0x04)
	None OcclusionCombineMode; // 0x2c0(0x01)
	None SpecularOcclusionMode; // 0x2c1(0x01)
	None SpecularOcclusionStrength; // 0x2c4(0x04)
	None SelfShadowBiasForObjectAO; // 0x2c8(0x04)
	None OcclusionTranslucencyForTwoSidedFoliages; // 0x2cc(0x04)
	None BlendDestinationCubemap; // 0x388(0x08)
	None Brush; // 0x28(0x88)
	None Attenuation; // 0x28(0x3a0)
	None Properties; // 0x28(0x58)
	None ChildClasses; // 0x80(0x10)
	None PassiveSoundMixModifiers; // 0x90(0x10)
	None Modulation; // 0xa0(0x10)
	None ParentClass; // 0xb0(0x08)
	None Concurrency; // 0x28(0x20)
	None bPrimeOnLoad; // 0x160(0x01)
	None FirstNode; // 0x168(0x08)
	None VolumeMultiplier; // 0x170(0x04)
	None PitchMultiplier; // 0x174(0x04)
	None AttenuationOverrides; // 0x178(0x3a0)
	None SubtitlePriority; // 0x518(0x04)
	None bOverrideAttenuation; // 0x520(0x01)
	None bExcludeFromRandomNodeBranchCulling; // 0x520(0x01)
	None CookedQualityIndex; // 0x524(0x04)
	None bHasPlayWhenSilent; // 0x528(0x01)
	None Chain; // 0x28(0x10)
	None bPlayEffectChainTails; // 0x38(0x01)
	None SoundGroupProfiles; // 0x28(0x10)
	None bApplyEQ; // 0x28(0x01)
	None EQPriority; // 0x2c(0x04)
	None EQSettings; // 0x30(0x40)
	None SoundClassEffects; // 0x70(0x10)
	None InitialDelay; // 0x80(0x04)
	None FadeInTime; // 0x84(0x04)
	None Duration; // 0x88(0x04)
	None FadeOutTime; // 0x8c(0x04)
	None ChildNodes; // 0x28(0x10)
	None AttenuationSettings; // 0x48(0x08)
	None AttenuationOverrides; // 0x50(0x3a0)
	None bOverrideAttenuation; // 0x3f0(0x01)
	None BoolParameterName; // 0x48(0x08)
	None InputVolume; // 0x48(0x10)
	None DelayMin; // 0x48(0x04)
	None DelayMax; // 0x4c(0x04)
	None DialogueWaveParameter; // 0x48(0x20)
	None bLooping; // 0x68(0x01)
	None CrossFadeInput; // 0x48(0x10)
	None DopplerIntensity; // 0x48(0x04)
	None bUseSmoothing; // 0x4c(0x01)
	None SmoothingInterpSpeed; // 0x50(0x04)
	None LoopStart; // 0x48(0x04)
	None LoopEnd; // 0x4c(0x04)
	None DurationAfterLoop; // 0x50(0x04)
	None LoopCount; // 0x54(0x04)
	None bLoopIndefinitely; // 0x58(0x01)
	None bLoop; // 0x58(0x01)
	None VolumeInterpCurve; // 0x60(0x08)
	None PitchInterpCurve; // 0x68(0x08)
	None VolumeCurve; // 0x70(0x88)
	None PitchCurve; // 0xf8(0x88)
	None PitchMin; // 0x180(0x04)
	None PitchMax; // 0x184(0x04)
	None VolumeMin; // 0x188(0x04)
	None VolumeMax; // 0x18c(0x04)
	None GroupSizes; // 0x48(0x10)
	None LoopCount; // 0x48(0x04)
	None bLoopIndefinitely; // 0x4c(0x01)
	None InputVolume; // 0x48(0x10)
	None PitchMin; // 0x48(0x04)
	None PitchMax; // 0x4c(0x04)
	None VolumeMin; // 0x50(0x04)
	None VolumeMax; // 0x54(0x04)
	None PitchModulationParams; // 0x48(0x20)
	None VolumeModulationParams; // 0x68(0x20)
	None bModulateVolume; // 0x48(0x01)
	None bModulatePitch; // 0x48(0x01)
	None AmplitudeMin; // 0x4c(0x04)
	None AmplitudeMax; // 0x50(0x04)
	None FrequencyMin; // 0x54(0x04)
	None FrequencyMax; // 0x58(0x04)
	None OffsetMin; // 0x5c(0x04)
	None OffsetMax; // 0x60(0x04)
	None CenterMin; // 0x64(0x04)
	None CenterMax; // 0x68(0x04)
	None ParamName; // 0x58(0x08)
	None Weights; // 0x48(0x10)
	None HasBeenUsed; // 0x58(0x10)
	None NumRandomUsed; // 0x68(0x04)
	None PreselectAtLevelLoad; // 0x6c(0x04)
	None bShouldExcludeFromBranchCulling; // 0x70(0x01)
	None bSoundCueExcludedFromBranchCulling; // 0x70(0x01)
	None bRandomizeWithoutReplacement; // 0x70(0x01)
	None SoundClassOverride; // 0x48(0x08)
	None IntParameterName; // 0x48(0x08)
	None WaveParameterName; // 0x48(0x08)
	None SoundWaveAssetPtr; // 0x48(0x28)
	None SoundWave; // 0x70(0x08)
	None bLooping; // 0x78(0x01)
	None SourceBusChannels; // 0x308(0x01)
	None SourceBusDuration; // 0x30c(0x04)
	None bAutoDeactivateWhenSilent; // 0x310(0x01)
	None ChildSubmixes; // 0x28(0x10)
	None ParentSubmix; // 0x38(0x08)
	None bMuteWhenBackgrounded; // 0x40(0x01)
	None SubmixEffectChain; // 0x48(0x10)
	None AmbisonicsPluginSettings; // 0x58(0x08)
	None EnvelopeFollowerAttackTime; // 0x60(0x04)
	None EnvelopeFollowerReleaseTime; // 0x64(0x04)
	None OutputVolume; // 0x68(0x04)
	None OnSubmixRecordedFileDone; // 0x70(0x10)
	None SoundfieldEncodingFormat; // 0x40(0x08)
	None EncodingSettings; // 0x48(0x08)
	None SoundfieldEffectChain; // 0x50(0x10)
	None EncodingSettingsClass; // 0x60(0x08)
	None EndpointType; // 0x38(0x08)
	None EndpointSettingsClass; // 0x40(0x08)
	None EndpointSettings; // 0x48(0x08)
	None SoundfieldEndpointType; // 0x38(0x08)
	None EndpointSettingsClass; // 0x40(0x08)
	None EndpointSettings; // 0x48(0x08)
	None EncodingSettingsClass; // 0x50(0x08)
	None EncodingSettings; // 0x58(0x08)
	None SoundfieldEffectChain; // 0x60(0x10)
	None bIgnoreTimeDilation; // 0x150(0x01)
	None DrawCaptureRadius; // 0x318(0x08)
	None InfluenceRadius; // 0x2c0(0x04)
	None CaptureDistanceScale; // 0x2c4(0x04)
	None PreviewInfluenceRadius; // 0x2c8(0x08)
	None SplineMeshComponent; // 0x310(0x08)
	None SplineParams; // 0x558(0x58)
	None SplineUpDir; // 0x5b0(0x0c)
	None SplineBoundaryMin; // 0x5bc(0x04)
	None CachedMeshBodySetupGuid; // 0x5c0(0x10)
	None BodySetup; // 0x5d0(0x08)
	None SplineBoundaryMax; // 0x5d8(0x04)
	None bAllowSplineEditingPerInstance; // 0x5dc(0x01)
	None bSmoothInterpRollScale; // 0x5dc(0x01)
	None bMeshDirty; // 0x5dc(0x01)
	None ForwardAxis; // 0x5dd(0x01)
	None VirtualTextureMainPassMaxDrawDistance; // 0x5e0(0x04)
	None InnerConeAngle; // 0x3b0(0x04)
	None OuterConeAngle; // 0x3b4(0x04)
	None LightShaftConeAngle; // 0x3b8(0x04)
	None bUsePCSS; // 0x3bc(0x01)
	None PCSSSharpness; // 0x3c0(0x04)
	None PCSSContrast; // 0x3c4(0x04)
	None TargetArmLength; // 0x238(0x04)
	None SocketOffset; // 0x23c(0x0c)
	None TargetOffset; // 0x248(0x0c)
	None ProbeSize; // 0x254(0x04)
	None ProbeChannel; // 0x258(0x01)
	None bDoCollisionTest; // 0x25c(0x01)
	None bUsePawnControlRotation; // 0x25c(0x01)
	None bInheritPitch; // 0x25c(0x01)
	None bInheritYaw; // 0x25c(0x01)
	None bInheritRoll; // 0x25c(0x01)
	None bEnableCameraLag; // 0x25c(0x01)
	None bEnableCameraRotationLag; // 0x25c(0x01)
	None bUseCameraLagSubstepping; // 0x25c(0x01)
	None bDrawDebugLagMarkers; // 0x25d(0x01)
	None CameraLagSpeed; // 0x260(0x04)
	None CameraRotationLagSpeed; // 0x264(0x04)
	None CameraLagMaxTimeStep; // 0x268(0x04)
	None CameraLagMaxDistance; // 0x26c(0x04)
	None bUseAsOccluderForSoftwareOcclusion; // 0x60(0x01)
	None LODGroup; // 0x64(0x08)
	None MeshStreamingGroup; // 0x6c(0x08)
	None MinLOD; // 0x80(0x04)
	None LpvBiasMultiplier; // 0x84(0x04)
	None StaticMaterials; // 0x88(0x10)
	None LightmapUVDensity; // 0x98(0x04)
	None LightMapResolution; // 0x9c(0x04)
	None LightMapCoordinateIndex; // 0xa0(0x04)
	None DistanceFieldSelfShadowBias; // 0xa4(0x04)
	None BodySetup; // 0xa8(0x08)
	None LODForCollision; // 0xb0(0x04)
	None bGenerateMeshDistanceField; // 0xb4(0x01)
	None bStripComplexCollisionForConsole; // 0xb4(0x01)
	None bHasNavigationData; // 0xb4(0x01)
	None bSupportUniformlyDistributedSampling; // 0xb4(0x01)
	None bSupportPhysicalMaterialMasks; // 0xb4(0x01)
	None bIsBuiltAtRuntime; // 0xb4(0x01)
	None bAllowCPUAccess; // 0xb4(0x01)
	None bSupportGpuUniformlyDistributedSampling; // 0xb5(0x01)
	None Sockets; // 0xd8(0x10)
	None PositiveBoundsExtension; // 0xf8(0x0c)
	None NegativeBoundsExtension; // 0x104(0x0c)
	None ExtendedBounds; // 0x110(0x1c)
	None ElementToIgnoreForTexFactor; // 0x12c(0x04)
	None AssetUserData; // 0x130(0x10)
	None EditableMesh; // 0x148(0x08)
	None NavCollision; // 0x150(0x08)
	None SocketName; // 0x28(0x08)
	None RelativeLocation; // 0x30(0x0c)
	None RelativeRotation; // 0x3c(0x0c)
	None RelativeScale; // 0x48(0x0c)
	None Tag; // 0x58(0x10)
	None bLiveTexture; // 0x238(0x01)
	None bSupportsDepth; // 0x238(0x01)
	None bNoAlphaChannel; // 0x238(0x01)
	None Texture; // 0x240(0x08)
	None LeftTexture; // 0x248(0x08)
	None bQuadPreserveTextureRatio; // 0x250(0x01)
	None QuadSize; // 0x254(0x08)
	None UVRect; // 0x25c(0x14)
	None CylinderRadius; // 0x270(0x04)
	None CylinderOverlayArc; // 0x274(0x04)
	None CylinderHeight; // 0x278(0x04)
	None EquirectProps; // 0x27c(0x48)
	None StereoLayerType; // 0x2c4(0x01)
	None StereoLayerShape; // 0x2c5(0x01)
	None Shape; // 0x2c8(0x08)
	None Priority; // 0x2d0(0x04)
	None Radius; // 0x28(0x04)
	None OverlayArc; // 0x2c(0x04)
	None Height; // 0x30(0x04)
	None LeftUVRect; // 0x28(0x14)
	None RightUVRect; // 0x3c(0x14)
	None LeftScale; // 0x50(0x08)
	None RightScale; // 0x58(0x08)
	None LeftBias; // 0x60(0x08)
	None RightBias; // 0x68(0x08)
	None Settings; // 0x28(0x8c)
	None SubUVTexture; // 0x28(0x08)
	None SubImages_Horizontal; // 0x30(0x04)
	None SubImages_Vertical; // 0x34(0x04)
	None BoundingMode; // 0x38(0x01)
	None OpacitySourceMode; // 0x39(0x01)
	None AlphaThreshold; // 0x3c(0x04)
	None FrameDelay; // 0x28(0x04)
	None FrameRate; // 0x30(0x08)
	None bGenerateFullFrame; // 0x38(0x01)
	None bUseHighPerformanceClock; // 0x39(0x01)
	None DefaultedText; // 0x28(0x18)
	None UndefaultedText; // 0x40(0x18)
	None TransientText; // 0x58(0x18)
	None TextRender; // 0x310(0x08)
	None Text; // 0x4b8(0x18)
	None TextMaterial; // 0x4d0(0x08)
	None Font; // 0x4d8(0x08)
	None HorizontalAlignment; // 0x4e0(0x01)
	None VerticalAlignment; // 0x4e1(0x01)
	None TextRenderColor; // 0x4e4(0x04)
	None XScale; // 0x4e8(0x04)
	None YScale; // 0x4ec(0x04)
	None WorldSize; // 0x4f0(0x04)
	None InvDefaultSize; // 0x4f4(0x04)
	None HorizSpacingAdjust; // 0x4f8(0x04)
	None VertSpacingAdjust; // 0x4fc(0x04)
	None bAlwaysRenderAsText; // 0x500(0x01)
	None Brightness; // 0xe8(0x04)
	None TextureMultiplier; // 0xec(0x04)
	None SizeX; // 0xc0(0x04)
	None ClearColor; // 0xc4(0x10)
	None OverrideFormat; // 0xd4(0x01)
	None bHDR; // 0xd5(0x01)
	None bForceLinearGamma; // 0xd5(0x01)
	None TheTimeline; // 0xb0(0x98)
	None bIgnoreTimeDilation; // 0x148(0x01)
	None TimelineLength; // 0x28(0x04)
	None LengthMode; // 0x2c(0x01)
	None bAutoPlay; // 0x2d(0x01)
	None bLoop; // 0x2d(0x01)
	None bReplicated; // 0x2d(0x01)
	None bIgnoreTimeDilation; // 0x2d(0x01)
	None EventTracks; // 0x30(0x10)
	None FloatTracks; // 0x40(0x10)
	None VectorTracks; // 0x50(0x10)
	None LinearColorTracks; // 0x60(0x10)
	None MetaDataArray; // 0x70(0x10)
	None TimelineGuid; // 0x80(0x10)
	None VariableName; // 0x90(0x08)
	None DirectionPropertyName; // 0x98(0x08)
	None UpdateFunctionName; // 0xa0(0x08)
	None FinishedFunctionName; // 0xa8(0x08)
	None FrictionScale; // 0x30(0x04)
	None Controls; // 0x28(0x10)
	None ActiveOpacity; // 0x38(0x04)
	None InactiveOpacity; // 0x3c(0x04)
	None TimeUntilDeactive; // 0x40(0x04)
	None TimeUntilReset; // 0x44(0x04)
	None ActivationDelay; // 0x48(0x04)
	None bPreventRecenter; // 0x4c(0x01)
	None StartupDelay; // 0x50(0x04)
	None CollisionComponent; // 0x310(0x08)
	None DisplayNameMap; // 0x60(0x50)
	None status; // 0xc0(0x01)
	None Guid; // 0xc4(0x10)
	None RenderFocusRule; // 0x38(0x01)
	None HardwareCursors; // 0x40(0x50)
	None SoftwareCursors; // 0x90(0x50)
	None DefaultCursor; // 0xe0(0x18)
	None TextEditBeamCursor; // 0xf8(0x18)
	None CrosshairsCursor; // 0x110(0x18)
	None HandCursor; // 0x128(0x18)
	None GrabHandCursor; // 0x140(0x18)
	None GrabHandClosedCursor; // 0x158(0x18)
	None SlashedCircleCursor; // 0x170(0x18)
	None ApplicationScale; // 0x188(0x04)
	None UIScaleRule; // 0x18c(0x01)
	None CustomScalingRuleClass; // 0x190(0x18)
	None UIScaleCurve; // 0x1a8(0x88)
	None bAllowHighDPIInGameMode; // 0x230(0x01)
	None bLoadWidgetsOnDedicatedServer; // 0x231(0x01)
	None CursorClasses; // 0x238(0x10)
	None CustomScalingRuleClassInstance; // 0x248(0x08)
	None CustomScalingRule; // 0x250(0x08)
	None Bounds; // 0x28(0x1c)
	None Intensity; // 0x44(0x04)
	None Texture; // 0x48(0x08)
	None ConstructionOp; // 0x50(0x01)
	None VolumeSizeX; // 0x54(0x04)
	None VolumeSizeY; // 0x58(0x04)
	None VolumeSizeZ; // 0x5c(0x04)
	None SubImagesX; // 0x60(0x04)
	None SubImagesY; // 0x64(0x04)
	None FrameCount; // 0x68(0x04)
	None FramesPerSecond; // 0x6c(0x04)
	None bLoop; // 0x70(0x01)
	None NoiseField; // 0x78(0x08)
	None NoiseScale; // 0x80(0x04)
	None NoiseMax; // 0x84(0x04)
	None VectorField; // 0x4b8(0x08)
	None Intensity; // 0x4c0(0x04)
	None Tightness; // 0x4c4(0x04)
	None bPreviewVectorField; // 0x4c8(0x01)
	None SizeX; // 0x48(0x04)
	None SizeY; // 0x4c(0x04)
	None SizeZ; // 0x50(0x04)
	None bAllowCPUAccess; // 0x54(0x01)
	None CPUData; // 0x80(0x10)
	None VectorFieldComponent; // 0x310(0x08)
	None TypeToLayer; // 0xe8(0x10)
	None DefaultSizeInMegabyte; // 0x28(0x04)
	None Pools; // 0x30(0x10)
	None Settings; // 0xb0(0x18)
	None AllowedMipLevelRange; // 0x348(0x08)
	None Component; // 0x310(0x08)
	None Strength; // 0x238(0x04)
	None Speed; // 0x23c(0x04)
	None MinGustAmount; // 0x240(0x04)
	None MaxGustAmount; // 0x244(0x04)
	None Radius; // 0x248(0x04)
	None bPointWind; // 0x24c(0x01)
	None TilesStreaming; // 0x130(0x10)
	None TilesStreamingTimeThreshold; // 0x140(0x08)
	None bLoadAllTilesDuringCinematic; // 0x148(0x01)
	None bRebaseOriginIn3DSpace; // 0x149(0x01)
	None RebaseOriginDistance; // 0x14c(0x04)
	None bApplyMinStreamingPriorityToLOD; // 0x150(0x01)
	None bApplyStreamingDistanceScaleToLOD; // 0x151(0x01)
	None DevFilterRule; // 0x158(0x10)
	None HierarchicalLODSetup; // 0x28(0x10)
	None OverrideBaseMaterial; // 0x38(0x28)
	None NumLOD; // 0x28(0x04)
	None LOD1; // 0x2c(0x13c)
	None LOD2; // 0x168(0x13c)
	None LOD3; // 0x2a4(0x13c)
	None LOD4; // 0x3e0(0x13c)
	None playerName; // 0x80(0x08)
	None FilePath; // 0x88(0x10)
	None PrecacheFile; // 0x98(0x01)
	None MediaTexture; // 0xb0(0x08)
	None MediaPlayer; // 0xb8(0x08)
	None OnEndReached; // 0x28(0x10)
	None OnMediaClosed; // 0x38(0x10)
	None OnMediaOpened; // 0x48(0x10)
	None OnMediaOpenFailed; // 0x58(0x10)
	None OnPlaybackResumed; // 0x68(0x10)
	None OnPlaybackSuspended; // 0x78(0x10)
	None OnSeekCompleted; // 0x88(0x10)
	None OnTracksChanged; // 0x98(0x10)
	None CacheAhead; // 0xa8(0x08)
	None CacheBehind; // 0xb0(0x08)
	None CacheBehindGame; // 0xb8(0x08)
	None NativeAudioOut; // 0xc0(0x01)
	None PlayOnOpen; // 0xc1(0x01)
	None Shuffle; // 0xc4(0x01)
	None Loop; // 0xc4(0x01)
	None Playlist; // 0xc8(0x08)
	None PlaylistIndex; // 0xd0(0x04)
	None TimeDelay; // 0xd8(0x08)
	None HorizontalFieldOfView; // 0xe0(0x04)
	None VerticalFieldOfView; // 0xe4(0x04)
	None ViewRotation; // 0xe8(0x0c)
	None playerGUID; // 0x120(0x10)
	None OwnerWidget; // 0x138(0x08)
	None Items; // 0x28(0x10)
	None Channels; // 0x710(0x04)
	None DynamicRateAdjustment; // 0x714(0x01)
	None RateAdjustmentFactor; // 0x718(0x04)
	None RateAdjustmentRange; // 0x71c(0x10)
	None MediaPlayer; // 0x730(0x08)
	None AddressX; // 0xb8(0x01)
	None AddressY; // 0xb9(0x01)
	None AutoClear; // 0xba(0x01)
	None ClearColor; // 0xbc(0x10)
	None EnableGenMips; // 0xcc(0x01)
	None NumMips; // 0xcd(0x01)
	None MediaPlayer; // 0xd0(0x08)
	None MediaSource; // 0x80(0x08)
	None StreamUrl; // 0x88(0x10)
	None bUseTimeSynchronization; // 0x88(0x01)
	None FrameDelay; // 0x8c(0x04)
	None TimeDelay; // 0x90(0x08)
	None Ani_MouseRight; // 0x248(0x08)
	None Image; // 0x250(0x08)
	None Image_2; // 0x258(0x08)
	None Image_292; // 0x260(0x08)
	None Image_503; // 0x268(0x08)
	None AllowNonStandardCodecs; // 0x28(0x01)
	None LowLatency; // 0x29(0x01)
	None NativeAudioOut; // 0x2a(0x01)
	None HardwareAcceleratedVideoDecoding; // 0x2b(0x01)
	None UniqueKey; // 0x320(0x10)
	None SideActors; // 0x330(0x10)
	None SideMeshes; // 0x340(0x10)
	None SplineMeshAxis; // 0x310(0x01)
	None LocalOffset; // 0x314(0x0c)
	None Father; // 0x320(0x08)
	None UniqueKey; // 0x328(0x10)
	None Spline; // 0x338(0x08)
	None Index; // 0x340(0x04)
	None Segmentation; // 0x344(0x04)
	None StepGeneration; // 0x348(0x04)
	None Size; // 0x34c(0x04)
	None RoadMesh; // 0x350(0x08)
	None RoadMeshesComp; // 0x358(0x10)
	None SideActors; // 0x368(0x10)
	None SideMeshes; // 0x378(0x10)
	None SideCurbs; // 0x388(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None FadeOut; // 0x250(0x08)
	None FadeIn; // 0x258(0x08)
	None Image_Effect; // 0x260(0x08)
	None NewVar_1; // 0x268(0x08)
	None IsFadeInOutEvent; // 0x270(0x01)
	None CurrentFade; // 0x274(0x04)
	None SocketErrorDisconnectDelay; // 0x1af0(0x04)
	None LogPortUnreach; // 0x748(0x01)
	None AllowPlayerPortUnreach; // 0x748(0x01)
	None MaxPortCountToTry; // 0x74c(0x04)
	None ServerDesiredSocketReceiveBufferBytes; // 0x75c(0x04)
	None ServerDesiredSocketSendBufferBytes; // 0x760(0x04)
	None ClientDesiredSocketReceiveBufferBytes; // 0x764(0x04)
	None ClientDesiredSocketSendBufferBytes; // 0x768(0x04)
	None MaxSecondsInReceive; // 0x770(0x08)
	None NbPacketsBetweenReceiveTimeTest; // 0x778(0x04)
	None ResolutionConnectionTimeout; // 0x77c(0x04)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x28(0x10)
	None OnFailure; // 0x38(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None BeaconConnectionInitialTimeout; // 0x318(0x04)
	None BeaconConnectionTimeout; // 0x31c(0x04)
	None NetDriver; // 0x320(0x08)
	None BeaconOwner; // 0x340(0x08)
	None BeaconConnection; // 0x348(0x08)
	None ConnectionState; // 0x350(0x01)
	None ListenPort; // 0x340(0x04)
	None ClientActors; // 0x348(0x10)
	None BeaconTypeName; // 0x310(0x10)
	None ClientBeaconActorClass; // 0x320(0x08)
	None ClientActors; // 0x328(0x10)
	None VoiceSubsystemNameOverride; // 0x28(0x08)
	None bOnlinePIEEnabled; // 0x38(0x01)
	None Logins; // 0x40(0x10)
	None bIsFromInvite; // 0x188(0x01)
	None bHandlingDisconnect; // 0x189(0x01)
	None DestSessionId; // 0x3d0(0x10)
	None PendingReservation; // 0x3e0(0x50)
	None RequestType; // 0x430(0x01)
	None bPendingReservationSent; // 0x431(0x01)
	None bCancelReservation; // 0x432(0x01)
	None State; // 0x338(0x08)
	None bLogoutOnSessionTimeout; // 0x3a0(0x01)
	None SessionTimeoutSecs; // 0x3a4(0x04)
	None TravelSessionTimeoutSecs; // 0x3a8(0x04)
	None SessionName; // 0x28(0x08)
	None NumConsumedReservations; // 0x30(0x04)
	None MaxReservations; // 0x34(0x04)
	None NumTeams; // 0x38(0x04)
	None NumPlayersPerTeam; // 0x3c(0x04)
	None TeamAssignmentMethod; // 0x40(0x08)
	None ReservedHostTeamNum; // 0x48(0x04)
	None ForceTeamNum; // 0x4c(0x04)
	None bRestrictCrossConsole; // 0x50(0x01)
	None bEnableRemovalRequests; // 0x51(0x01)
	None Reservations; // 0x58(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None DestSessionId; // 0x3d0(0x10)
	None PendingReservation; // 0x3e0(0x78)
	None RequestType; // 0x458(0x01)
	None bPendingReservationSent; // 0x459(0x01)
	None bCancelReservation; // 0x45a(0x01)
	None State; // 0x338(0x08)
	None bLogoutOnSessionTimeout; // 0x3a0(0x01)
	None SessionTimeoutSecs; // 0x3a4(0x04)
	None TravelSessionTimeoutSecs; // 0x3a8(0x04)
	None SessionName; // 0x28(0x08)
	None NumConsumedReservations; // 0x30(0x04)
	None MaxReservations; // 0x34(0x04)
	None bRestrictCrossConsole; // 0x38(0x01)
	None Reservations; // 0x40(0x10)
	None ListenerCode; // 0x38(0x08)
	None Host; // 0x40(0x10)
	None Port; // 0x50(0x04)
	None PortUdp; // 0x54(0x04)
	None SendingBytes; // 0x58(0x10)
	None ReceivedBytes; // 0x68(0x10)
	None ReceivingBuffer; // 0x78(0x10)
	None CanCallOnDisconnect; // 0x98(0x01)
	None OnConnectEvent; // 0x9c(0x10)
	None OnDisconnectEvent; // 0xac(0x10)
	None OnReceiveMessageEvent; // 0xbc(0x10)
	None OnReceiveUnreliableMessageEvent; // 0xcc(0x10)
	None Stopped; // 0x28(0x01)
	None RunExec; // 0x29(0x01)
	None ConnectionSuccess; // 0x2a(0x01)
	None JustConnected; // 0x38(0x01)
	None WaitingForConnectionTime; // 0x3c(0x04)
	None SocketConnection; // 0x40(0x08)
	None LatentUUID; // 0x48(0x04)
	None ListenerCode; // 0x38(0x08)
	None Host; // 0x40(0x10)
	None Port; // 0x50(0x04)
	None PortUdp; // 0x54(0x04)
	None NextConnectionValidationFunctionCallId; // 0x58(0x04)
	None NextFunctionCallId; // 0x5c(0x04)
	None NextLatentFunctionCallId; // 0xb0(0x04)
	None SendingBytes; // 0x108(0x10)
	None ReceivedBytes; // 0x118(0x10)
	None ReceivingBuffer; // 0x128(0x10)
	None ReceivingType; // 0x139(0x01)
	None ReceivingFunctionCallId; // 0x13c(0x04)
	None ReceivingPacketSize; // 0x140(0x04)
	None ReceivingPacket; // 0x148(0x10)
	None WaitingForConnectionValidationResponse; // 0x168(0x01)
	None ConnectionValidationResponseTime; // 0x16c(0x04)
	None ConnectionValidationDelayTime; // 0x170(0x04)
	None LatentFunctionConnectionValidationDelayTime; // 0x174(0x04)
	None ConnectionValidationFunctionCallId; // 0x178(0x04)
	None PeriodicConnectionValidationEnabled; // 0x17c(0x01)
	None CanCallOnDisconnect; // 0x17d(0x01)
	None OnConnectEvent; // 0x180(0x10)
	None OnDisconnectEvent; // 0x190(0x10)
	None OnReceiveMessageEvent; // 0x1a0(0x10)
	None OnReceiveUnreliableMessageEvent; // 0x1b0(0x10)
	None Stopped; // 0x28(0x01)
	None RunExec; // 0x29(0x01)
	None ConnectionSuccess; // 0x2a(0x01)
	None JustConnected; // 0x38(0x01)
	None WaitingForConnectionTime; // 0x3c(0x04)
	None SocketConnection; // 0x40(0x08)
	None LatentUUID; // 0x48(0x04)
	None Image; // 0x248(0x08)
	None Image_2; // 0x250(0x08)
	None Image_3; // 0x258(0x08)
	None Image_4; // 0x260(0x08)
	None Image_5; // 0x268(0x08)
	None Image_6; // 0x270(0x08)
	None Image_7; // 0x278(0x08)
	None Image_8; // 0x280(0x08)
	None Image_9; // 0x288(0x08)
	None Image_106; // 0x290(0x08)
	None T_Accuracy; // 0x298(0x08)
	None T_EffectiveRange; // 0x2a0(0x08)
	None T_FireRate; // 0x2a8(0x08)
	None T_MagSize; // 0x2b0(0x08)
	None T_Power; // 0x2b8(0x08)
	None FrameRateOverride; // 0x88(0x08)
	None ProxyOverride; // 0x90(0x10)
	None SequencePath; // 0xa0(0x10)
	None OnInstanceTakePointDamage; // 0x718(0x10)
	None OnInstanceTakeRadialDamage; // 0x728(0x10)
	None GenerationGuid; // 0x738(0x10)
	None CullDistancePresets; // 0x38(0x10)
	None DesiredMaxTrianglesToRender; // 0x48(0x04)
	None MinimumScreenSize; // 0x4c(0x04)
	None MaxOcclusionQueriesPerComponent; // 0x50(0x04)
	None MinOcclusionQueriesPerComponent; // 0x54(0x04)
	None MinInstancesPerOcclusionQuery; // 0x58(0x04)
	None UpdateGuid; // 0x28(0x10)
	None Density; // 0x38(0x04)
	None DensityAdjustmentFactor; // 0x3c(0x04)
	None Radius; // 0x40(0x04)
	None bSingleInstanceModeOverrideRadius; // 0x44(0x01)
	None SingleInstanceModeRadius; // 0x48(0x04)
	None Scaling; // 0x4c(0x01)
	None ScaleX; // 0x50(0x08)
	None ScaleY; // 0x58(0x08)
	None ScaleZ; // 0x60(0x08)
	None VertexColorMaskByChannel; // 0x68(0x30)
	None VertexColorMask; // 0x98(0x01)
	None VertexColorMaskThreshold; // 0x9c(0x04)
	None VertexColorMaskInvert; // 0xa0(0x01)
	None ZOffset; // 0xa4(0x08)
	None AlignToNormal; // 0xac(0x01)
	None AlignMaxAngle; // 0xb0(0x04)
	None RandomYaw; // 0xb4(0x01)
	None RandomPitchAngle; // 0xb8(0x04)
	None GroundSlopeAngle; // 0xbc(0x08)
	None Height; // 0xc4(0x08)
	None LandscapeLayers; // 0xd0(0x10)
	None MinimumLayerWeight; // 0xe0(0x04)
	None ExclusionLandscapeLayers; // 0xe8(0x10)
	None MinimumExclusionLayerWeight; // 0xf8(0x04)
	None LandscapeLayer; // 0xfc(0x08)
	None CollisionWithWorld; // 0x104(0x01)
	None CollisionScale; // 0x108(0x0c)
	None MeshBounds; // 0x114(0x1c)
	None LowBoundOriginRadius; // 0x130(0x0c)
	None Mobility; // 0x13c(0x01)
	None CullDistancePreset; // 0x13d(0x01)
	None bOverrideCullDistance; // 0x13e(0x01)
	None CullDistance; // 0x140(0x08)
	None MinScreenSizeScale; // 0x148(0x04)
	None bEnableStaticLighting; // 0x14c(0x01)
	None CastShadow; // 0x14c(0x01)
	None bAffectDynamicIndirectLighting; // 0x14c(0x01)
	None bAffectDistanceFieldLighting; // 0x14c(0x01)
	None bCastDynamicShadow; // 0x14c(0x01)
	None bCastStaticShadow; // 0x14c(0x01)
	None bCastShadowAsTwoSided; // 0x14c(0x01)
	None bReceivesDecals; // 0x14c(0x01)
	None bOverrideLightMapRes; // 0x14d(0x01)
	None OverriddenLightMapRes; // 0x150(0x04)
	None LightmapType; // 0x154(0x01)
	None bUseAsOccluder; // 0x158(0x01)
	None BodyInstance; // 0x160(0x190)
	None CustomNavigableGeometry; // 0x2f0(0x01)
	None InstanceBodiesSplitRatio; // 0x2f1(0x01)
	None LightingChannels; // 0x2f2(0x01)
	None bRenderCustomDepth; // 0x2f4(0x01)
	None CustomDepthStencilValue; // 0x2f8(0x04)
	None TranslucencySortPriority; // 0x2fc(0x04)
	None CollisionRadius; // 0x300(0x04)
	None ShadeRadius; // 0x304(0x04)
	None NumSteps; // 0x308(0x04)
	None InitialSeedDensity; // 0x30c(0x04)
	None AverageSpreadDistance; // 0x310(0x04)
	None SpreadVariance; // 0x314(0x04)
	None SeedsPerStep; // 0x318(0x04)
	None DistributionSeed; // 0x31c(0x04)
	None MaxInitialSeedOffset; // 0x320(0x04)
	None bCanGrowInShade; // 0x324(0x01)
	None bSpawnsInShade; // 0x325(0x01)
	None MaxInitialAge; // 0x328(0x04)
	None MaxAge; // 0x32c(0x04)
	None OverlapPriority; // 0x330(0x04)
	None ProceduralScale; // 0x334(0x08)
	None ScaleCurve; // 0x340(0x88)
	None ChangeCount; // 0x3c8(0x04)
	None ReapplyDensity; // 0x3cc(0x01)
	None ReapplyRadius; // 0x3cc(0x01)
	None ReapplyAlignToNormal; // 0x3cc(0x01)
	None ReapplyRandomYaw; // 0x3cc(0x01)
	None ReapplyScaling; // 0x3cc(0x01)
	None ReapplyScaleX; // 0x3cc(0x01)
	None ReapplyScaleY; // 0x3cc(0x01)
	None ReapplyScaleZ; // 0x3cc(0x01)
	None ReapplyRandomPitchAngle; // 0x3cd(0x01)
	None ReapplyGroundSlope; // 0x3cd(0x01)
	None ReapplyHeight; // 0x3cd(0x01)
	None ReapplyLandscapeLayers; // 0x3cd(0x01)
	None ReapplyZOffset; // 0x3cd(0x01)
	None ReapplyCollisionWithWorld; // 0x3cd(0x01)
	None ReapplyVertexColorMask; // 0x3cd(0x01)
	None bEnableDensityScaling; // 0x3cd(0x01)
	None RuntimeVirtualTextures; // 0x3d0(0x10)
	None VirtualTextureCullMips; // 0x3e0(0x04)
	None VirtualTextureRenderPassType; // 0x3e4(0x01)
	None ActorClass; // 0x3e8(0x08)
	None bShouldAttachToBaseComponent; // 0x3f0(0x01)
	None Mesh; // 0x3e8(0x08)
	None OverrideMaterials; // 0x3f0(0x10)
	None ComponentClass; // 0x400(0x08)
	None CapsuleComponent; // 0x320(0x08)
	None TouchingActorEntryPosition; // 0x328(0x0c)
	None FoliageVelocity; // 0x334(0x0c)
	None FoliageForce; // 0x340(0x0c)
	None FoliagePosition; // 0x34c(0x0c)
	None FoliageDamageImpulseScale; // 0x358(0x04)
	None FoliageTouchImpulseScale; // 0x35c(0x04)
	None FoliageStiffness; // 0x360(0x04)
	None FoliageStiffnessQuadratic; // 0x364(0x04)
	None FoliageDamping; // 0x368(0x04)
	None MaxDamageImpulse; // 0x36c(0x04)
	None MaxTouchImpulse; // 0x370(0x04)
	None MaxForce; // 0x374(0x04)
	None Mass; // 0x378(0x04)
	None ProceduralFoliageVolume; // 0x348(0x08)
	None FoliageSpawner; // 0xb0(0x08)
	None TileOverlap; // 0xb8(0x04)
	None SpawningVolume; // 0xc0(0x08)
	None ProceduralGuid; // 0xc8(0x10)
	None RandomSeed; // 0x28(0x04)
	None TileSize; // 0x2c(0x04)
	None NumUniqueTiles; // 0x30(0x04)
	None MinimumQuadTreeSize; // 0x34(0x04)
	None FoliageTypes; // 0x40(0x10)
	None FoliageSpawner; // 0x28(0x08)
	None InstancesArray; // 0xd0(0x10)
	None ProceduralComponent; // 0x348(0x08)
	None DefaultFrameRate; // 0x28(0x08)
	None CacheBehindPercentage; // 0x30(0x04)
	None CacheSizeGB; // 0x34(0x04)
	None CacheThreads; // 0x38(0x04)
	None CacheThreadStackSizeKB; // 0x3c(0x04)
	None GlobalCacheSizeGB; // 0x40(0x04)
	None UseGlobalCache; // 0x44(0x01)
	None ExrDecoderThreads; // 0x48(0x04)
	None DefaultProxy; // 0x50(0x10)
	None UseDefaultProxy; // 0x60(0x01)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None PackageURL; // 0x38(0x10)
	None ParentFactory; // 0x48(0x08)
	None ImageSources; // 0x50(0x50)
	None CreatedMaterial; // 0xa0(0x08)
	None ConstantCreatedMaterial; // 0xa8(0x08)
	None DynamicCreatedMaterial; // 0xb0(0x08)
	None OutputTextureLinkData; // 0xb8(0x50)
	None OutputInstances; // 0x108(0x50)
	None bIsFrozen; // 0x158(0x01)
	None mGraphInstances; // 0x28(0x10)
	None RelativeSourceFilePath; // 0x50(0x10)
	None AbsoluteSourceFilePath; // 0x60(0x10)
	None SourceFileTimestamp; // 0x70(0x10)
	None GenerationMode; // 0x80(0x01)
	None ConnectedObject; // 0x28(0x08)
	None ParamInfo; // 0x30(0x10)
	None ParentInstance; // 0x40(0x08)
	None CacheGuid; // 0x48(0x10)
	None MemoryBudgetMb; // 0x28(0x04)
	None CPUCores; // 0x2c(0x04)
	None AsyncLoadMipClip; // 0x30(0x04)
	None MaxAsyncSubstancesRenderedPerFrame; // 0x34(0x04)
	None SubstanceEngine; // 0x38(0x01)
	None DefaultSubstanceOutputSizeX; // 0x39(0x01)
	None DefaultSubstanceOutputSizeY; // 0x3a(0x01)
	None DefaultTemplateMaterial; // 0x40(0x28)
	None ParentInstance; // 0x100(0x08)
	None AddressX; // 0x108(0x01)
	None AddressY; // 0x109(0x01)
	None bCooked; // 0x10a(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_ToggleItemList; // 0x250(0x08)
	None Anim_TogglePlayerList; // 0x258(0x08)
	None Anim_ToggleTimeline; // 0x260(0x08)
	None UW-ReplayFreeCamSpeedWidget; // 0x268(0x08)
	None UW-ReplayGuideWidget; // 0x270(0x08)
	None UW-ReplayItemList; // 0x278(0x08)
	None UW-ReplayPlayerListWidget; // 0x280(0x08)
	None UW-ReplayTimelineBasic; // 0x288(0x08)
	None UW-ReplayWorldMapOption; // 0x290(0x08)
	None UW-SpectatingTargetInfo; // 0x298(0x08)
	None ReplayController; // 0x2a0(0x08)
	None UserNameTooltips; // 0x2a8(0x10)
	None MainWidget; // 0x2b8(0x08)
	None UserNameTooltipsNum; // 0x2c0(0x04)
	None Slot; // 0x28(0x08)
	None bIsEnabledDelegate; // 0x30(0x10)
	None ToolTipText; // 0x40(0x18)
	None ToolTipTextDelegate; // 0x58(0x10)
	None ToolTipWidget; // 0x68(0x08)
	None ToolTipWidgetDelegate; // 0x70(0x10)
	None VisibilityDelegate; // 0x80(0x10)
	None RenderTransform; // 0x90(0x1c)
	None RenderTransformPivot; // 0xac(0x08)
	None bIsVariable; // 0xb4(0x01)
	None bCreatedByConstructionScript; // 0xb4(0x01)
	None bIsEnabled; // 0xb4(0x01)
	None bOverride_Cursor; // 0xb4(0x01)
	None AccessibleWidgetData; // 0xb8(0x08)
	None bIsVolatile; // 0xc0(0x01)
	None Cursor; // 0xc1(0x01)
	None Clipping; // 0xc2(0x01)
	None Visibility; // 0xc3(0x01)
	None RenderOpacity; // 0xc4(0x04)
	None Navigation; // 0xc8(0x08)
	None FlowDirectionPreference; // 0xd0(0x01)
	None NativeBindings; // 0xf8(0x10)
	None ColorAndOpacity; // 0x110(0x10)
	None ColorAndOpacityDelegate; // 0x120(0x10)
	None ForegroundColor; // 0x130(0x28)
	None ForegroundColorDelegate; // 0x158(0x10)
	None Padding; // 0x168(0x10)
	None ActiveSequencePlayers; // 0x178(0x10)
	None StoppedSequencePlayers; // 0x188(0x10)
	None NoPixelSnapping; // 0x198(0x01)
	None NoPixelSnappingDelegate; // 0x19c(0x10)
	None NamedSlotBindings; // 0x1b0(0x10)
	None WidgetTree; // 0x1c0(0x08)
	None Priority; // 0x1c8(0x04)
	None bSupportsKeyboardFocus; // 0x1cc(0x01)
	None bIsFocusable; // 0x1cc(0x01)
	None bStopAction; // 0x1cc(0x01)
	None bHasScriptImplementedTick; // 0x1cc(0x01)
	None bHasScriptImplementedPaint; // 0x1cc(0x01)
	None bCookedWidgetTree; // 0x1cc(0x01)
	None TickFrequency; // 0x1d8(0x01)
	None InputComponent; // 0x1e0(0x08)
	None AnimationCallbacks; // 0x1e8(0x10)
	None Slots; // 0x108(0x10)
	None HorizontalAlignment; // 0x120(0x01)
	None VerticalAlignment; // 0x121(0x01)
	None bShowEffectWhenDisabled; // 0x122(0x01)
	None ContentColorAndOpacity; // 0x124(0x10)
	None ContentColorAndOpacityDelegate; // 0x134(0x10)
	None Padding; // 0x144(0x10)
	None Background; // 0x158(0x88)
	None BackgroundDelegate; // 0x1e0(0x10)
	None BrushColor; // 0x1f0(0x10)
	None BrushColorDelegate; // 0x200(0x10)
	None DesiredSizeScale; // 0x210(0x08)
	None bFlipForRightToLeftFlowDirection; // 0x218(0x01)
	None OnMouseButtonDownEvent; // 0x21c(0x10)
	None OnMouseButtonUpEvent; // 0x22c(0x10)
	None OnMouseMoveEvent; // 0x23c(0x10)
	None OnMouseDoubleClickEvent; // 0x24c(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFail; // 0x40(0x10)
	None Padding; // 0x120(0x10)
	None HorizontalAlignment; // 0x130(0x01)
	None VerticalAlignment; // 0x131(0x01)
	None bApplyAlphaToBlur; // 0x132(0x01)
	None BlurStrength; // 0x134(0x04)
	None bOverrideAutoRadiusCalculation; // 0x138(0x01)
	None BlurRadius; // 0x13c(0x04)
	None LowQualityFallbackBrush; // 0x140(0x88)
	None Parent; // 0x28(0x08)
	None Content; // 0x30(0x08)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None SourceObject; // 0x28(0x08)
	None SourcePath; // 0x30(0x28)
	None DestinationProperty; // 0x58(0x08)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None Style; // 0x160(0x08)
	None WidgetStyle; // 0x168(0x278)
	None ColorAndOpacity; // 0x3e0(0x10)
	None BackgroundColor; // 0x3f0(0x10)
	None ClickMethod; // 0x400(0x01)
	None TouchMethod; // 0x401(0x01)
	None PressMethod; // 0x402(0x01)
	None IsFocusable; // 0x403(0x01)
	None OnClicked; // 0x408(0x10)
	None OnPressed; // 0x418(0x10)
	None OnReleased; // 0x428(0x10)
	None OnHovered; // 0x438(0x10)
	None OnUnhovered; // 0x448(0x10)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None LayoutData; // 0x38(0x28)
	None bAutoSize; // 0x60(0x01)
	None ZOrder; // 0x64(0x04)
	None CheckedState; // 0x120(0x01)
	None CheckedStateDelegate; // 0x124(0x10)
	None WidgetStyle; // 0x138(0x580)
	None Style; // 0x6b8(0x08)
	None UncheckedImage; // 0x6c0(0x08)
	None UncheckedHoveredImage; // 0x6c8(0x08)
	None UncheckedPressedImage; // 0x6d0(0x08)
	None CheckedImage; // 0x6d8(0x08)
	None CheckedHoveredImage; // 0x6e0(0x08)
	None CheckedPressedImage; // 0x6e8(0x08)
	None UndeterminedImage; // 0x6f0(0x08)
	None UndeterminedHoveredImage; // 0x6f8(0x08)
	None UndeterminedPressedImage; // 0x700(0x08)
	None HorizontalAlignment; // 0x708(0x01)
	None Padding; // 0x70c(0x10)
	None BorderBackgroundColor; // 0x720(0x28)
	None IsFocusable; // 0x748(0x01)
	None OnCheckStateChanged; // 0x750(0x10)
	None NumberOfPieces; // 0x108(0x04)
	None Period; // 0x10c(0x04)
	None Radius; // 0x110(0x04)
	None PieceImage; // 0x118(0x08)
	None Image; // 0x120(0x88)
	None bEnableRadius; // 0x1a8(0x01)
	None Items; // 0x108(0x10)
	None OnGenerateWidgetEvent; // 0x118(0x10)
	None bIsFocusable; // 0x128(0x01)
	None DefaultOptions; // 0x108(0x10)
	None SelectedOption; // 0x118(0x10)
	None WidgetStyle; // 0x128(0x3f0)
	None ItemStyle; // 0x518(0x7c8)
	None ContentPadding; // 0xce0(0x10)
	None MaxListHeight; // 0xcf0(0x04)
	None HasDownArrow; // 0xcf4(0x01)
	None EnableGamepadNavigationMode; // 0xcf5(0x01)
	None Font; // 0xcf8(0x50)
	None ForegroundColor; // 0xd48(0x28)
	None bIsFocusable; // 0xd70(0x01)
	None OnGenerateWidgetEvent; // 0xd74(0x10)
	None OnSelectionChanged; // 0xd88(0x10)
	None OnOpening; // 0xd98(0x10)
	None Tag; // 0x28(0x10)
	None payload; // 0x38(0x08)
	None DefaultDragVisual; // 0x40(0x08)
	None Pivot; // 0x48(0x01)
	None Offset; // 0x4c(0x08)
	None bUseMoveAnimation; // 0x54(0x01)
	None OnDrop; // 0x58(0x10)
	None OnDragCancelled; // 0x68(0x10)
	None OnDragged; // 0x78(0x10)
	None EntryBoxType; // 0x108(0x01)
	None EntrySpacing; // 0x10c(0x08)
	None SpacingPattern; // 0x118(0x10)
	None EntrySizeRule; // 0x128(0x08)
	None EntryHorizontalAlignment; // 0x130(0x01)
	None EntryVerticalAlignment; // 0x131(0x01)
	None MaxElementSize; // 0x134(0x04)
	None EntryWidgetPool; // 0x148(0x80)
	None EntryWidgetClass; // 0x1c8(0x08)
	None Text; // 0x108(0x18)
	None TextDelegate; // 0x120(0x10)
	None HintText; // 0x130(0x18)
	None HintTextDelegate; // 0x148(0x10)
	None WidgetStyle; // 0x158(0x218)
	None Style; // 0x370(0x08)
	None BackgroundImageSelected; // 0x378(0x08)
	None BackgroundImageComposing; // 0x380(0x08)
	None CaretImage; // 0x388(0x08)
	None Font; // 0x390(0x50)
	None ColorAndOpacity; // 0x3e0(0x28)
	None IsReadOnly; // 0x408(0x01)
	None IsPassword; // 0x409(0x01)
	None MinimumDesiredWidth; // 0x40c(0x04)
	None IsCaretMovedWhenGainFocus; // 0x410(0x01)
	None SelectAllTextWhenFocused; // 0x411(0x01)
	None RevertTextOnEscape; // 0x412(0x01)
	None ClearKeyboardFocusOnCommit; // 0x413(0x01)
	None SelectAllTextOnCommit; // 0x414(0x01)
	None AllowContextMenu; // 0x415(0x01)
	None KeyboardType; // 0x416(0x01)
	None VirtualKeyboardOptions; // 0x417(0x01)
	None VirtualKeyboardTrigger; // 0x418(0x01)
	None VirtualKeyboardDismissAction; // 0x419(0x01)
	None Justification; // 0x41a(0x01)
	None ShapedTextOptions; // 0x41b(0x03)
	None OnTextChanged; // 0x420(0x10)
	None OnTextCommitted; // 0x430(0x10)
	None Text; // 0x108(0x18)
	None TextDelegate; // 0x120(0x10)
	None WidgetStyle; // 0x130(0x7f0)
	None Style; // 0x920(0x08)
	None HintText; // 0x928(0x18)
	None HintTextDelegate; // 0x940(0x10)
	None Font; // 0x950(0x50)
	None ForegroundColor; // 0x9a0(0x10)
	None BackgroundColor; // 0x9b0(0x10)
	None ReadOnlyForegroundColor; // 0x9c0(0x10)
	None IsReadOnly; // 0x9d0(0x01)
	None IsPassword; // 0x9d1(0x01)
	None MinimumDesiredWidth; // 0x9d4(0x04)
	None Padding; // 0x9d8(0x10)
	None IsCaretMovedWhenGainFocus; // 0x9e8(0x01)
	None SelectAllTextWhenFocused; // 0x9e9(0x01)
	None RevertTextOnEscape; // 0x9ea(0x01)
	None ClearKeyboardFocusOnCommit; // 0x9eb(0x01)
	None SelectAllTextOnCommit; // 0x9ec(0x01)
	None AllowContextMenu; // 0x9ed(0x01)
	None KeyboardType; // 0x9ee(0x01)
	None VirtualKeyboardOptions; // 0x9ef(0x01)
	None VirtualKeyboardTrigger; // 0x9f0(0x01)
	None VirtualKeyboardDismissAction; // 0x9f1(0x01)
	None Justification; // 0x9f2(0x01)
	None ShapedTextOptions; // 0x9f3(0x03)
	None OnTextChanged; // 0x9f8(0x10)
	None OnTextCommitted; // 0xa08(0x10)
	None Style; // 0x110(0x120)
	None BorderBrush; // 0x230(0x88)
	None BorderColor; // 0x2b8(0x28)
	None bIsExpanded; // 0x2e0(0x01)
	None MaxHeight; // 0x2e4(0x04)
	None HeaderPadding; // 0x2e8(0x10)
	None AreaPadding; // 0x2f8(0x10)
	None OnExpansionChanged; // 0x308(0x10)
	None HeaderContent; // 0x318(0x08)
	None BodyContent; // 0x320(0x08)
	None ColumnFill; // 0x120(0x10)
	None RowFill; // 0x130(0x10)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None Row; // 0x4c(0x04)
	None RowSpan; // 0x50(0x04)
	None Column; // 0x54(0x04)
	None ColumnSpan; // 0x58(0x04)
	None Layer; // 0x5c(0x04)
	None Nudge; // 0x60(0x08)
	None Padding; // 0x40(0x10)
	None Size; // 0x50(0x08)
	None HorizontalAlignment; // 0x58(0x01)
	None VerticalAlignment; // 0x59(0x01)
	None Brush; // 0x108(0x88)
	None BrushDelegate; // 0x190(0x10)
	None ColorAndOpacity; // 0x1a0(0x10)
	None ColorAndOpacityDelegate; // 0x1b0(0x10)
	None bFlipForRightToLeftFlowDirection; // 0x1c0(0x01)
	None OnMouseButtonDownEvent; // 0x1c4(0x10)
	None WidgetStyle; // 0x108(0x278)
	None TextStyle; // 0x380(0x268)
	None SelectedKey; // 0x5e8(0x20)
	None Font; // 0x608(0x50)
	None Margin; // 0x658(0x10)
	None ColorAndOpacity; // 0x668(0x10)
	None KeySelectionText; // 0x678(0x18)
	None NoKeySpecifiedText; // 0x690(0x18)
	None bAllowModifierKeys; // 0x6a8(0x01)
	None bAllowGamepadKeys; // 0x6a9(0x01)
	None EscapeKeys; // 0x6b0(0x10)
	None OnKeySelected; // 0x6c0(0x10)
	None OnIsSelectingKeyChanged; // 0x6d0(0x10)
	None bCanCache; // 0x120(0x01)
	None CacheRelativeTransforms; // 0x121(0x01)
	None EntryWidgetClass; // 0x108(0x08)
	None WheelScrollMultiplier; // 0x110(0x04)
	None bEnableScrollAnimation; // 0x114(0x01)
	None bEnableFixedLineOffset; // 0x115(0x01)
	None FixedLineScrollOffset; // 0x118(0x04)
	None BP_OnEntryGenerated; // 0x120(0x10)
	None BP_OnEntryReleased; // 0x130(0x10)
	None EntryWidgetPool; // 0x140(0x80)
	None Orientation; // 0x2d8(0x01)
	None SelectionMode; // 0x2d9(0x01)
	None ConsumeMouseWheel; // 0x2da(0x01)
	None bClearSelectionOnClick; // 0x2db(0x01)
	None bIsFocusable; // 0x2dc(0x01)
	None EntrySpacing; // 0x2e0(0x04)
	None bReturnFocusToSelection; // 0x2e4(0x01)
	None ListItems; // 0x2e8(0x10)
	None BP_OnEntryInitialized; // 0x308(0x10)
	None BP_OnItemClicked; // 0x318(0x10)
	None BP_OnItemDoubleClicked; // 0x328(0x10)
	None BP_OnItemIsHoveredChanged; // 0x338(0x10)
	None BP_OnItemSelectionChanged; // 0x348(0x10)
	None BP_OnItemScrolledIntoView; // 0x358(0x10)
	None MenuClass; // 0x120(0x08)
	None OnGetMenuContentEvent; // 0x128(0x10)
	None Placement; // 0x138(0x01)
	None bFitInWindow; // 0x139(0x01)
	None ShouldDeferPaintingAfterWindowContent; // 0x13a(0x01)
	None UseApplicationMenuStack; // 0x13b(0x01)
	None OnMenuOpenChanged; // 0x140(0x10)
	None TransformMask; // 0xe0(0x04)
	None Translation; // 0xe8(0x140)
	None Rotation; // 0x228(0xa0)
	None Scale; // 0x2c8(0x140)
	None Shear; // 0x408(0x140)
	None TopCurve; // 0xe0(0xa0)
	None LeftCurve; // 0x180(0xa0)
	None RightCurve; // 0x220(0xa0)
	None BottomCurve; // 0x2c0(0xa0)
	None BrushPropertyNamePath; // 0x68(0x10)
	None TrackName; // 0x78(0x08)
	None ShapedTextOptions; // 0x108(0x03)
	None Justification; // 0x10b(0x01)
	None WrappingPolicy; // 0x10c(0x01)
	None AutoWrapText; // 0x10d(0x01)
	None WrapTextAt; // 0x110(0x04)
	None Margin; // 0x114(0x10)
	None LineHeightPercentage; // 0x124(0x04)
	None Text; // 0x128(0x18)
	None HintText; // 0x140(0x18)
	None HintTextDelegate; // 0x158(0x10)
	None WidgetStyle; // 0x168(0x268)
	None bIsReadOnly; // 0x3d0(0x01)
	None Font; // 0x3d8(0x50)
	None SelectAllTextWhenFocused; // 0x428(0x01)
	None ClearTextSelectionOnFocusLoss; // 0x429(0x01)
	None RevertTextOnEscape; // 0x42a(0x01)
	None ClearKeyboardFocusOnCommit; // 0x42b(0x01)
	None AllowContextMenu; // 0x42c(0x01)
	None VirtualKeyboardOptions; // 0x42d(0x01)
	None VirtualKeyboardDismissAction; // 0x42e(0x01)
	None OnTextChanged; // 0x430(0x10)
	None OnTextCommitted; // 0x440(0x10)
	None Text; // 0x128(0x18)
	None HintText; // 0x140(0x18)
	None HintTextDelegate; // 0x158(0x10)
	None WidgetStyle; // 0x168(0x7f0)
	None TextStyle; // 0x958(0x268)
	None bIsReadOnly; // 0xbc0(0x01)
	None AllowContextMenu; // 0xbc1(0x01)
	None VirtualKeyboardOptions; // 0xbc2(0x01)
	None VirtualKeyboardDismissAction; // 0xbc3(0x01)
	None Style; // 0xbc8(0x08)
	None Font; // 0xbd0(0x50)
	None ForegroundColor; // 0xc20(0x10)
	None BackgroundColor; // 0xc30(0x10)
	None ReadOnlyForegroundColor; // 0xc40(0x10)
	None OnTextChanged; // 0xc50(0x10)
	None OnTextCommitted; // 0xc60(0x10)
	None Padding; // 0x40(0x10)
	None HorizontalAlignment; // 0x50(0x01)
	None VerticalAlignment; // 0x51(0x01)
	None WidgetStyle; // 0x108(0x1a0)
	None Style; // 0x2a8(0x08)
	None BackgroundImage; // 0x2b0(0x08)
	None FillImage; // 0x2b8(0x08)
	None MarqueeImage; // 0x2c0(0x08)
	None Percent; // 0x2c8(0x04)
	None BarFillType; // 0x2cc(0x01)
	None bIsMarquee; // 0x2cd(0x01)
	None BorderPadding; // 0x2d0(0x08)
	None PercentDelegate; // 0x2d8(0x10)
	None FillColorAndOpacity; // 0x2e8(0x10)
	None FillColorAndOpacityDelegate; // 0x2f8(0x10)
	None RenderOnInvalidation; // 0x120(0x01)
	None RenderOnPhase; // 0x121(0x01)
	None Phase; // 0x124(0x04)
	None PhaseCount; // 0x128(0x04)
	None EffectMaterial; // 0x130(0x08)
	None TextureParameter; // 0x138(0x08)
	None Text; // 0x128(0x18)
	None TextStyleSet; // 0x140(0x08)
	None DecoratorClasses; // 0x148(0x10)
	None bOverrideDefaultStyle; // 0x158(0x01)
	None DefaultTextStyleOverride; // 0x160(0x268)
	None MinDesiredWidth; // 0x3c8(0x04)
	None InstanceDecorators; // 0x638(0x10)
	None ImageSet; // 0x28(0x08)
	None PadLeft; // 0x120(0x01)
	None PadRight; // 0x121(0x01)
	None PadTop; // 0x122(0x01)
	None PadBottom; // 0x123(0x01)
	None bIsTitleSafe; // 0x38(0x01)
	None SafeAreaScale; // 0x3c(0x10)
	None HAlign; // 0x4c(0x01)
	None VAlign; // 0x4d(0x01)
	None Padding; // 0x50(0x10)
	None Stretch; // 0x120(0x01)
	None StretchDirection; // 0x121(0x01)
	None UserSpecifiedScale; // 0x124(0x04)
	None IgnoreInheritedScale; // 0x128(0x01)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None WidgetStyle; // 0x108(0x4d0)
	None Style; // 0x5d8(0x08)
	None bAlwaysShowScrollbar; // 0x5e0(0x01)
	None bAlwaysShowScrollbarTrack; // 0x5e1(0x01)
	None Orientation; // 0x5e2(0x01)
	None Thickness; // 0x5e4(0x08)
	None Padding; // 0x5ec(0x10)
	None WidgetStyle; // 0x120(0x228)
	None WidgetBarStyle; // 0x348(0x4d0)
	None Style; // 0x818(0x08)
	None BarStyle; // 0x820(0x08)
	None Orientation; // 0x828(0x01)
	None ScrollBarVisibility; // 0x829(0x01)
	None ConsumeMouseWheel; // 0x82a(0x01)
	None ScrollbarThickness; // 0x82c(0x08)
	None ScrollbarPadding; // 0x834(0x10)
	None AlwaysShowScrollbar; // 0x844(0x01)
	None AlwaysShowScrollbarTrack; // 0x845(0x01)
	None AllowOverscroll; // 0x846(0x01)
	None bAnimateWheelScrolling; // 0x847(0x01)
	None NavigationDestination; // 0x848(0x01)
	None NavigationScrollPadding; // 0x84c(0x04)
	None ScrollWhenFocusChanges; // 0x850(0x01)
	None bAllowRightClickDragScrolling; // 0x851(0x01)
	None WheelScrollMultiplier; // 0x854(0x04)
	None OnUserScrolled; // 0x858(0x10)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None WidthOverride; // 0x130(0x04)
	None HeightOverride; // 0x134(0x04)
	None MinDesiredWidth; // 0x138(0x04)
	None MinDesiredHeight; // 0x13c(0x04)
	None MaxDesiredWidth; // 0x140(0x04)
	None MaxDesiredHeight; // 0x144(0x04)
	None MinAspectRatio; // 0x148(0x04)
	None MaxAspectRatio; // 0x14c(0x04)
	None bOverride_WidthOverride; // 0x150(0x01)
	None bOverride_HeightOverride; // 0x150(0x01)
	None bOverride_MinDesiredWidth; // 0x150(0x01)
	None bOverride_MinDesiredHeight; // 0x150(0x01)
	None bOverride_MaxDesiredWidth; // 0x150(0x01)
	None bOverride_MaxDesiredHeight; // 0x150(0x01)
	None bOverride_MinAspectRatio; // 0x150(0x01)
	None bOverride_MaxAspectRatio; // 0x150(0x01)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x58(0x01)
	None VerticalAlignment; // 0x59(0x01)
	None VertexData; // 0x28(0x10)
	None IndexData; // 0x38(0x10)
	None Material; // 0x48(0x08)
	None ExtentMin; // 0x50(0x08)
	None ExtentMax; // 0x58(0x08)
	None bCanChildrenBeAccessible; // 0x28(0x01)
	None AccessibleBehavior; // 0x29(0x01)
	None AccessibleSummaryBehavior; // 0x2a(0x01)
	None AccessibleText; // 0x30(0x18)
	None AccessibleTextDelegate; // 0x48(0x10)
	None AccessibleSummaryText; // 0x58(0x18)
	None AccessibleSummaryTextDelegate; // 0x70(0x10)
	None Value; // 0x108(0x04)
	None ValueDelegate; // 0x10c(0x10)
	None MinValue; // 0x11c(0x04)
	None MaxValue; // 0x120(0x04)
	None WidgetStyle; // 0x128(0x340)
	None Orientation; // 0x468(0x01)
	None SliderBarColor; // 0x46c(0x10)
	None SliderHandleColor; // 0x47c(0x10)
	None IndentHandle; // 0x48c(0x01)
	None Locked; // 0x48d(0x01)
	None MouseUsesStep; // 0x48e(0x01)
	None RequiresControllerLock; // 0x48f(0x01)
	None StepSize; // 0x490(0x04)
	None IsFocusable; // 0x494(0x01)
	None OnMouseCaptureBegin; // 0x498(0x10)
	None OnMouseCaptureEnd; // 0x4a8(0x10)
	None OnControllerCaptureBegin; // 0x4b8(0x10)
	None OnControllerCaptureEnd; // 0x4c8(0x10)
	None OnValueChanged; // 0x4d8(0x10)
	None Size; // 0x108(0x08)
	None Value; // 0x108(0x04)
	None ValueDelegate; // 0x10c(0x10)
	None WidgetStyle; // 0x120(0x2e8)
	None Style; // 0x408(0x08)
	None MinFractionalDigits; // 0x410(0x04)
	None MaxFractionalDigits; // 0x414(0x04)
	None bAlwaysUsesDeltaSnap; // 0x418(0x01)
	None Delta; // 0x41c(0x04)
	None SliderExponent; // 0x420(0x04)
	None Font; // 0x428(0x50)
	None Justification; // 0x478(0x01)
	None MinDesiredWidth; // 0x47c(0x04)
	None ClearKeyboardFocusOnCommit; // 0x480(0x01)
	None SelectAllTextOnCommit; // 0x481(0x01)
	None ForegroundColor; // 0x488(0x28)
	None OnValueChanged; // 0x4b0(0x10)
	None OnValueCommitted; // 0x4c0(0x10)
	None OnBeginSliderMovement; // 0x4d0(0x10)
	None OnEndSliderMovement; // 0x4e0(0x10)
	None bOverride_MinValue; // 0x4f0(0x01)
	None bOverride_MaxValue; // 0x4f0(0x01)
	None bOverride_MinSliderValue; // 0x4f0(0x01)
	None bOverride_MaxSliderValue; // 0x4f0(0x01)
	None MinValue; // 0x4f4(0x04)
	None MaxValue; // 0x4f8(0x04)
	None MinSliderValue; // 0x4fc(0x04)
	None MaxSliderValue; // 0x500(0x04)
	None Text; // 0x128(0x18)
	None TextDelegate; // 0x140(0x10)
	None ColorAndOpacity; // 0x150(0x28)
	None ColorAndOpacityDelegate; // 0x178(0x10)
	None Font; // 0x188(0x50)
	None StrikeBrush; // 0x1d8(0x88)
	None ShadowOffset; // 0x260(0x08)
	None ShadowColorAndOpacity; // 0x268(0x10)
	None ShadowColorAndOpacityDelegate; // 0x278(0x10)
	None MinDesiredWidth; // 0x288(0x04)
	None bWrapWithInvalidationPanel; // 0x28c(0x01)
	None bAutoWrapText; // 0x28d(0x01)
	None bSimpleTextMode; // 0x28e(0x01)
	None NumberOfPieces; // 0x108(0x04)
	None bAnimateHorizontally; // 0x10c(0x01)
	None bAnimateVertically; // 0x10d(0x01)
	None bAnimateOpacity; // 0x10e(0x01)
	None PieceImage; // 0x110(0x08)
	None Image; // 0x118(0x88)
	None EntryHeight; // 0x368(0x04)
	None EntryWidth; // 0x36c(0x04)
	None TileAlignment; // 0x370(0x01)
	None bWrapHorizontalNavigation; // 0x371(0x01)
	None BP_OnGetItemChildren; // 0x378(0x10)
	None BP_OnItemExpansionChanged; // 0x388(0x10)
	None Animation; // 0x408(0x08)
	None SlotPadding; // 0x120(0x10)
	None MinDesiredSlotWidth; // 0x130(0x04)
	None MinDesiredSlotHeight; // 0x134(0x04)
	None HorizontalAlignment; // 0x38(0x01)
	None VerticalAlignment; // 0x39(0x01)
	None Row; // 0x3c(0x04)
	None Column; // 0x40(0x04)
	None Size; // 0x38(0x08)
	None Padding; // 0x40(0x10)
	None HorizontalAlignment; // 0x58(0x01)
	None VerticalAlignment; // 0x59(0x01)
	None BackgroundColor; // 0x120(0x10)
	None MovieScene; // 0x348(0x08)
	None AnimationBindings; // 0x350(0x10)
	None bLegacyFinishOnStop; // 0x360(0x01)
	None DisplayLabel; // 0x368(0x10)
	None WidgetAnimationDelegateBindings; // 0x28(0x10)
	None Finished; // 0x28(0x10)
	None WidgetTree; // 0x3c8(0x08)
	None bAllowTemplate; // 0x3d0(0x01)
	None bAllowDynamicCreation; // 0x3d0(0x01)
	None bValidTemplate; // 0x3d0(0x01)
	None bTemplateInitialized; // 0x3d0(0x01)
	None bCookedTemplate; // 0x3d0(0x01)
	None bClassRequiresNativeTick; // 0x3d0(0x01)
	None Bindings; // 0x3d8(0x10)
	None Animations; // 0x3e8(0x10)
	None NamedSlots; // 0x3f8(0x10)
	None TemplateAsset; // 0x408(0x28)
	None Template; // 0x430(0x08)
	None Space; // 0x4e8(0x01)
	None TimingPolicy; // 0x4e9(0x01)
	None WidgetClass; // 0x4f0(0x08)
	None DrawSize; // 0x4f8(0x08)
	None bManuallyRedraw; // 0x500(0x01)
	None bRedrawRequested; // 0x501(0x01)
	None RedrawTime; // 0x504(0x04)
	None CurrentDrawSize; // 0x510(0x08)
	None bDrawAtDesiredSize; // 0x518(0x01)
	None Pivot; // 0x51c(0x08)
	None bReceiveHardwareInput; // 0x524(0x01)
	None bWindowFocusable; // 0x525(0x01)
	None WindowVisibility; // 0x526(0x01)
	None bApplyGammaCorrection; // 0x527(0x01)
	None OwnerPlayer; // 0x528(0x08)
	None BackgroundColor; // 0x530(0x10)
	None TintColorAndOpacity; // 0x540(0x10)
	None OpacityFromTexture; // 0x550(0x04)
	None BlendMode; // 0x554(0x01)
	None bIsTwoSided; // 0x555(0x01)
	None TickWhenOffscreen; // 0x556(0x01)
	None Widget; // 0x558(0x08)
	None BodySetup; // 0x580(0x08)
	None TranslucentMaterial; // 0x588(0x08)
	None TranslucentMaterial_OneSided; // 0x590(0x08)
	None OpaqueMaterial; // 0x598(0x08)
	None OpaqueMaterial_OneSided; // 0x5a0(0x08)
	None MaskedMaterial; // 0x5a8(0x08)
	None MaskedMaterial_OneSided; // 0x5b0(0x08)
	None RenderTarget; // 0x5b8(0x08)
	None MaterialInstance; // 0x5c0(0x08)
	None bAddedToScreen; // 0x5c8(0x01)
	None bEditTimeUsable; // 0x5c9(0x01)
	None SharedLayerName; // 0x5cc(0x08)
	None LayerZOrder; // 0x5d4(0x04)
	None GeometryMode; // 0x5d8(0x01)
	None CylinderArcAngle; // 0x5dc(0x04)
	None OnHoveredWidgetChanged; // 0x238(0x10)
	None VirtualUserIndex; // 0x258(0x04)
	None PointerIndex; // 0x25c(0x04)
	None TraceChannel; // 0x260(0x01)
	None InteractionDistance; // 0x264(0x04)
	None InteractionSource; // 0x268(0x01)
	None bEnableHitTesting; // 0x269(0x01)
	None bShowDebug; // 0x26a(0x01)
	None DebugColor; // 0x26c(0x10)
	None CustomHitResult; // 0x2f8(0x88)
	None LocalHitLocation; // 0x380(0x08)
	None LastLocalHitLocation; // 0x388(0x08)
	None HoveredWidgetComponent; // 0x390(0x08)
	None LastHitResult; // 0x398(0x88)
	None bIsHoveredWidgetInteractable; // 0x420(0x01)
	None bIsHoveredWidgetFocusable; // 0x421(0x01)
	None bIsHoveredWidgetHitTestVisible; // 0x422(0x01)
	None Up; // 0x28(0x24)
	None Down; // 0x4c(0x24)
	None Left; // 0x70(0x24)
	None Right; // 0x94(0x24)
	None Next; // 0xb8(0x24)
	None Previous; // 0xdc(0x24)
	None ActiveWidgetIndex; // 0x120(0x04)
	None Padding; // 0x40(0x10)
	None HorizontalAlignment; // 0x50(0x01)
	None VerticalAlignment; // 0x51(0x01)
	None RootWidget; // 0x28(0x08)
	None bWindowButtonsEnabled; // 0x120(0x01)
	None bDoubleClickTogglesFullscreen; // 0x121(0x01)
	None Padding; // 0x38(0x10)
	None HorizontalAlignment; // 0x48(0x01)
	None VerticalAlignment; // 0x49(0x01)
	None InnerSlotPadding; // 0x120(0x08)
	None WrapWidth; // 0x128(0x04)
	None bExplicitWrapWidth; // 0x12c(0x01)
	None HorizontalAlignment; // 0x12d(0x01)
	None Padding; // 0x38(0x10)
	None bFillEmptySpace; // 0x48(0x01)
	None FillSpanWhenLessThan; // 0x4c(0x04)
	None HorizontalAlignment; // 0x50(0x01)
	None VerticalAlignment; // 0x51(0x01)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_LocalToComponentSpace; // 0x368(0x20)
	None AnimGraphNode_ComponentToLocalSpace; // 0x388(0x20)
	None AnimGraphNode_ModifyBone_3; // 0x3a8(0x108)
	None AnimGraphNode_BlendListByBool; // 0x4b0(0xa0)
	None AnimGraphNode_ModifyBone_2; // 0x550(0x108)
	None AnimGraphNode_Slot_5; // 0x658(0x48)
	None AnimGraphNode_ModifyBone; // 0x6a0(0x108)
	None AnimGraphNode_TwoWayBlend_2; // 0x7a8(0xc8)
	None AnimGraphNode_Slot_4; // 0x870(0x48)
	None AnimGraphNode_Slot_3; // 0x8b8(0x48)
	None AnimGraphNode_LayeredBoneBlend; // 0x900(0xc0)
	None AnimGraphNode_Slot_2; // 0x9c0(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0xa08(0x18)
	None AnimGraphNode_TwoWayBlend; // 0xa20(0xc8)
	None AnimGraphNode_Slot; // 0xae8(0x48)
	None AnimGraphNode_LocalRefPose; // 0xb30(0x18)
	None AnimGraphNode_SaveCachedPose_3; // 0xb48(0xb8)
	None AnimGraphNode_UseCachedPose_6; // 0xc00(0x28)
	None AnimGraphNode_UseCachedPose_5; // 0xc28(0x28)
	None AnimGraphNode_UseCachedPose_4; // 0xc50(0x28)
	None AnimGraphNode_SaveCachedPose_2; // 0xc78(0xb8)
	None AnimGraphNode_UseCachedPose_3; // 0xd30(0x28)
	None AnimGraphNode_SaveCachedPose; // 0xd58(0xb8)
	None AnimGraphNode_UseCachedPose_2; // 0xe10(0x28)
	None AnimGraphNode_UseCachedPose; // 0xe38(0x28)
	None Owner; // 0x28(0x08)
	None Sounds; // 0x30(0x50)
	None ReadyForBindings; // 0xb0(0x10)
	None BindingsReleased; // 0xc0(0x10)
	None FinishLoad; // 0xd0(0x10)
	None FailLoad; // 0xe0(0x10)
	None StartLoading; // 0xf0(0x10)
	None NavigateTo; // 0x100(0x10)
	None JavaScriptEvent; // 0x110(0x10)
	None UIGTScriptingReady; // 0x120(0x10)
	None LiveViewSizeRequested; // 0x130(0x10)
	None Texture; // 0x158(0x08)
	None Filter; // 0x160(0x01)
	None bReceiveInput; // 0x161(0x01)
	None bReceiveInputWhenTransparent; // 0x162(0x01)
	None AllowPerformanceWarnings; // 0x163(0x01)
	None ExecuteJSTimersThresholdMs; // 0x164(0x04)
	None UpdateStylesAndLayoutThresholdMs; // 0x168(0x04)
	None RecordRenderingCommandsThresholdMs; // 0x16c(0x04)
	None PaintWarningThresholdMs; // 0x170(0x04)
	None LayersCountThreshold; // 0x174(0x04)
	None LayerWidthThreshold; // 0x178(0x04)
	None LayerHeightThreshold; // 0x17c(0x04)
	None bEnableAdditionalDefaultStyles; // 0x180(0x01)
	None bDelayedUpdate; // 0x181(0x01)
	None AudioWrapper; // 0x1f8(0x08)
	None URL; // 0x230(0x10)
	None Width; // 0x240(0x04)
	None Height; // 0x244(0x04)
	None ManualTexture; // 0x248(0x01)
	None ClickThroughAlphaThreshold; // 0x24c(0x04)
	None Transparent; // 0x250(0x01)
	None CoherentUIGTHUD; // 0x400(0x08)
	None HUDMaterialName; // 0x230(0x18)
	None HUDMaterial; // 0x248(0x08)
	None HUDMaterialInstance; // 0x250(0x08)
	None OnCoherentUIGTInputActorMouseButtonDown; // 0x310(0x10)
	None OnCoherentUIGTInputActorMouseButtonUp; // 0x320(0x10)
	None OnCoherentUIGTInputActorKeyDown; // 0x330(0x10)
	None OnCoherentUIGTInputActorKeyUp; // 0x340(0x10)
	None StructTypes; // 0xa8(0x10)
	None EventName; // 0x28(0x10)
	None LinkName; // 0xb0(0x10)
	None Texture; // 0xc0(0x08)
	None EnableLiveReload; // 0x28(0x01)
	None InspectorPort; // 0x2c(0x04)
	None WebdriverPort; // 0x30(0x04)
	None EnableWebSecurity; // 0x34(0x01)
	None EnableLocalization; // 0x35(0x01)
	None RunAsynchronous; // 0x36(0x01)
	None AllowPerformanceWarningsInEditor; // 0x37(0x01)
	None ShowWarningsOnScreen; // 0x38(0x01)
	None LogSeverity; // 0x39(0x01)
	None bPaintToBackBuffer; // 0x3a(0x01)
	None bRespectTitleSafeZone; // 0x3b(0x01)
	None bRespectLetterboxing; // 0x3c(0x01)
	None HUDMaterialName; // 0x40(0x10)
	None CoUIResourcesRoot; // 0x50(0x10)
	None TickWhileGameIsPaused; // 0x60(0x01)
	None bUseLowerCaseNamesForAutoExposedProperties; // 0x61(0x01)
	None MSAA; // 0x62(0x01)
	None CookiesResource; // 0x68(0x10)
	None LocalStorageFolder; // 0x78(0x10)
	None UseCacheFile; // 0x88(0x01)
	None UseReceivedFromServerUrl; // 0x89(0x01)
	None Owner; // 0x120(0x08)
	None ReadyForBindings; // 0x128(0x10)
	None BindingsReleased; // 0x138(0x10)
	None FinishLoad; // 0x148(0x10)
	None FailLoad; // 0x158(0x10)
	None StartLoading; // 0x168(0x10)
	None NavigateTo; // 0x178(0x10)
	None JavaScriptEvent; // 0x188(0x10)
	None UIGTScriptingReady; // 0x198(0x10)
	None AkAudioEvent; // 0x1c0(0x10)
	None KeyUpDelegate; // 0x1d0(0x10)
	None KeyDownDelegate; // 0x1e0(0x10)
	None MouseEventDelegate; // 0x1f0(0x10)
	None Filter; // 0x200(0x01)
	None bReceiveInput; // 0x201(0x01)
	None InputPropagationBehaviour; // 0x202(0x01)
	None bReceiveInputWhenTransparent; // 0x203(0x01)
	None bGammaCorrectedMaterial; // 0x204(0x01)
	None TickPeriodInMinimizedGame; // 0x208(0x04)
	None AllowPerformanceWarnings; // 0x20c(0x01)
	None ExecuteJSTimersThresholdMs; // 0x210(0x04)
	None UpdateStylesAndLayoutThresholdMs; // 0x214(0x04)
	None RecordRenderingCommandsThresholdMs; // 0x218(0x04)
	None PaintWarningThresholdMs; // 0x21c(0x04)
	None LayersCountThreshold; // 0x220(0x04)
	None LayerWidthThreshold; // 0x224(0x04)
	None LayerHeightThreshold; // 0x228(0x04)
	None bEnableAdditionalDefaultStyles; // 0x22c(0x01)
	None AudioWrapper; // 0x2a0(0x08)
	None URL; // 0x328(0x10)
	None ClickThroughAlphaThreshold; // 0x338(0x04)
	None OffscreenCanvasRendering; // 0x33c(0x01)
	None Transparent; // 0x33d(0x01)
	None Layers; // 0x30(0x50)
	None Tags; // 0x80(0x50)
	None LightType; // 0x310(0x01)
	None LightShape; // 0x311(0x01)
	None Dimensions; // 0x314(0x08)
	None Intensity; // 0x31c(0x04)
	None IntensityUnits; // 0x320(0x01)
	None Color; // 0x324(0x10)
	None Temperature; // 0x334(0x04)
	None IESTexture; // 0x338(0x08)
	None bUseIESBrightness; // 0x340(0x01)
	None IESBrightnessScale; // 0x344(0x04)
	None Rotation; // 0x348(0x0c)
	None SourceRadius; // 0x354(0x04)
	None SourceLength; // 0x358(0x04)
	None AttenuationRadius; // 0x35c(0x04)
	None SpotlightInnerAngle; // 0x360(0x04)
	None SpotlightOuterAngle; // 0x364(0x04)
	None LightType; // 0x30(0x01)
	None LightShape; // 0x31(0x01)
	None Dimensions; // 0x34(0x08)
	None Color; // 0x3c(0x10)
	None Intensity; // 0x4c(0x04)
	None IntensityUnits; // 0x50(0x01)
	None Temperature; // 0x54(0x04)
	None IESTexture; // 0x58(0x28)
	None bUseIESBrightness; // 0x80(0x01)
	None IESBrightnessScale; // 0x84(0x04)
	None Rotation; // 0x88(0x0c)
	None SourceRadius; // 0x94(0x04)
	None SourceLength; // 0x98(0x04)
	None AttenuationRadius; // 0x9c(0x04)
	None Generator; // 0x28(0x10)
	None Version; // 0x38(0x04)
	None Author; // 0x40(0x10)
	None License; // 0x50(0x10)
	None Source; // 0x60(0x10)
	None SourceMeshName; // 0x28(0x10)
	None bGenerateLightmapUVs; // 0x28(0x01)
	None TexturesDir; // 0x30(0x10)
	None IntermediateSerialization; // 0x40(0x01)
	None bColorizeMaterials; // 0x41(0x01)
	None bMergeNodes; // 0x48(0x01)
	None bOptimizeDuplicatedNodes; // 0x49(0x01)
	None bRemoveInvisibleNodes; // 0x4a(0x01)
	None bSimplifyNodeHierarchy; // 0x4b(0x01)
	None bImportVar; // 0x4c(0x01)
	None VarPath; // 0x50(0x10)
	None bImportPos; // 0x60(0x01)
	None PosPath; // 0x68(0x10)
	None bImportTml; // 0x78(0x01)
	None TmlPath; // 0x80(0x10)
	None bMergeNodes; // 0x48(0x01)
	None bOptimizeDuplicatedNodes; // 0x49(0x01)
	None bImportMats; // 0x4a(0x01)
	None MatsPath; // 0x50(0x10)
	None bImportVar; // 0x60(0x01)
	None bCleanVar; // 0x61(0x01)
	None VarPath; // 0x68(0x10)
	None bImportLightInfo; // 0x78(0x01)
	None LightInfoPath; // 0x80(0x10)
	None bImportClipInfo; // 0x90(0x01)
	None ClipInfoPath; // 0x98(0x10)
	None SourceGlobalId; // 0x28(0x10)
	None MetaData; // 0x28(0x50)
	None LookatTrackingSettings; // 0x30(0x30)
	None FilmbackSettings; // 0x30(0x08)
	None LensSettings; // 0x38(0x04)
	None FocusSettings; // 0x3c(0x08)
	None CurrentFocalLength; // 0x44(0x04)
	None CurrentAperture; // 0x48(0x04)
	None PostProcessSettings; // 0x50(0x40)
	None ImportedSequences; // 0x310(0x10)
	None options; // 0x28(0x10)
	None SearchPackagePolicy; // 0x28(0x01)
	None MaterialConflictPolicy; // 0x29(0x01)
	None TextureConflictPolicy; // 0x2a(0x01)
	None StaticMeshActorImportPolicy; // 0x2b(0x01)
	None LightImportPolicy; // 0x2c(0x01)
	None CameraImportPolicy; // 0x2d(0x01)
	None OtherActorImportPolicy; // 0x2e(0x01)
	None MaterialQuality; // 0x2f(0x01)
	None BaseOptions; // 0x34(0x14)
	None ReimportOptions; // 0x48(0x02)
	None Filename; // 0x50(0x10)
	None FilePath; // 0x60(0x10)
	None LandscapeMaterial; // 0x30(0x08)
	None StaticLightingLOD; // 0x38(0x04)
	None bVisible; // 0x30(0x01)
	None CastShadows; // 0x34(0x01)
	None bUseTemperature; // 0x34(0x01)
	None bUseIESBrightness; // 0x34(0x01)
	None Intensity; // 0x38(0x04)
	None Temperature; // 0x3c(0x04)
	None IESBrightnessScale; // 0x40(0x04)
	None LightColor; // 0x44(0x10)
	None LightFunctionMaterial; // 0x58(0x08)
	None IESTexture; // 0x60(0x08)
	None ParentMaterial; // 0x30(0x28)
	None ScalarParameterValues; // 0x58(0x50)
	None VectorParameterValues; // 0xa8(0x50)
	None TextureParameterValues; // 0xf8(0x50)
	None StaticParameters; // 0x148(0x50)
	None IntensityUnits; // 0x30(0x01)
	None SourceRadius; // 0x34(0x04)
	None SourceLength; // 0x38(0x04)
	None AttenuationRadius; // 0x3c(0x04)
	None Settings; // 0x30(0x40)
	None bEnabled; // 0x70(0x01)
	None bUnbound; // 0x70(0x01)
	None Scene; // 0x310(0x08)
	None RelatedActors; // 0x318(0x50)
	None RelativeTransform; // 0x30(0x30)
	None Mobility; // 0x60(0x01)
	None AttachParent; // 0x68(0x28)
	None Tags; // 0x90(0x50)
	None SourceType; // 0x30(0x01)
	None CubemapResolution; // 0x34(0x04)
	None Cubemap; // 0x38(0x08)
	None InnerConeAngle; // 0x30(0x04)
	None OuterConeAngle; // 0x34(0x04)
	None StaticMesh; // 0x30(0x08)
	None OverrideMaterials; // 0x38(0x10)
	None SectionInfoMap; // 0x30(0x50)
	None LightMapCoordinateIndex; // 0x80(0x04)
	None LightMapResolution; // 0x84(0x04)
	None BuildSettings; // 0x88(0x10)
	None StaticMaterials; // 0x98(0x10)
	None NamedInterfaces; // 0x28(0x10)
	None NamedInterfaceDefs; // 0x38(0x10)
	None DirectorClass; // 0x28(0x08)
	None VariantSets; // 0x30(0x10)
	None LevelVariantSets; // 0x310(0x18)
	None Properties; // 0x88(0x10)
	None PropertyIndices; // 0x98(0x10)
	None CapturedPropSegments; // 0xa8(0x10)
	None FullDisplayString; // 0xb8(0x10)
	None PropertySetterName; // 0xc8(0x08)
	None PropertySetterParameterDefaults; // 0xd0(0x50)
	None bHasRecordedData; // 0x120(0x01)
	None LeafPropertyClass; // 0x128(0x08)
	None ValueBytes; // 0x138(0x10)
	None PropCategory; // 0x148(0x01)
	None SceneComponent; // 0x328(0x08)
	None LastSelectedOption; // 0x330(0x04)
	None DisplayText; // 0x28(0x18)
	None ObjectBindings; // 0x58(0x10)
	None Thumbnail; // 0x68(0x08)
	None CachedActorLabel; // 0x28(0x10)
	None ObjectPtr; // 0x38(0x18)
	None LazyObjectPtr; // 0x50(0x1c)
	None CapturedProperties; // 0x70(0x10)
	None FunctionCallers; // 0x80(0x10)
	None DisplayText; // 0x28(0x18)
	None bExpanded; // 0x58(0x01)
	None Variants; // 0x60(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Character_BG_Motion; // 0x250(0x08)
	None Image_130; // 0x258(0x08)
	None Image_308; // 0x260(0x08)
	None ScrollBox_KeepedList; // 0x268(0x08)
	None UW-Inventory_KeepedSlot; // 0x270(0x08)
	None UW-Inventory_KeepedSlot_74; // 0x278(0x08)
	None PlayerController; // 0x280(0x08)
	None State; // 0x50(0x01)
	None Filename; // 0x58(0x10)
	None IncludeRenderPasses; // 0x58(0x10)
	None bCaptureFramesInHDR; // 0x68(0x01)
	None HDRCompressionQuality; // 0x6c(0x04)
	None CaptureGamut; // 0x70(0x01)
	None PostProcessingMaterial; // 0x78(0x18)
	None bDisableScreenPercentage; // 0x90(0x01)
	None PostProcessingMaterialPtr; // 0x98(0x08)
	None CompressionQuality; // 0xd8(0x04)
	None bCompressed; // 0xd8(0x01)
	None CaptureGamut; // 0xd9(0x01)
	None ImageCaptureProtocolType; // 0x38(0x18)
	None AudioCaptureProtocolType; // 0x50(0x18)
	None ImageCaptureProtocol; // 0x68(0x08)
	None AudioCaptureProtocol; // 0x70(0x08)
	None Settings; // 0x78(0x70)
	None bUseSeparateProcess; // 0xe8(0x01)
	None bCloseEditorWhenCaptureStarts; // 0xe9(0x01)
	None AdditionalCommandLineArguments; // 0xf0(0x10)
	None InheritedCommandLineArguments; // 0x100(0x10)
	None bAutoStartCapture; // 0x220(0x01)
	None PrerequisiteActorId; // 0x22c(0x10)
	None World; // 0x58(0x08)
	None Format; // 0xd8(0x01)
	None bEnableCompression; // 0xd9(0x01)
	None CompressionQuality; // 0xdc(0x04)
	None bUseCompression; // 0x68(0x01)
	None CompressionQuality; // 0x6c(0x04)
	None bAutoDestroy; // 0x238(0x01)
	None bStopWhenOwnerDestroyed; // 0x238(0x01)
	None bAllowSpatialization; // 0x238(0x01)
	None bOverrideAttenuation; // 0x238(0x01)
	None bOutputToBusOnly; // 0x23c(0x01)
	None AttenuationSettings; // 0x240(0x08)
	None AttenuationOverrides; // 0x248(0x3a0)
	None ConcurrencySettings; // 0x5e8(0x08)
	None ConcurrencySet; // 0x5f0(0x50)
	None SoundClass; // 0x640(0x08)
	None SourceEffectChain; // 0x648(0x08)
	None SoundSubmix; // 0x650(0x08)
	None SoundSubmixSends; // 0x658(0x10)
	None BusSends; // 0x668(0x10)
	None Modulation; // 0x678(0x10)
	None PreEffectBusSends; // 0x688(0x10)
	None bIsUISound; // 0x698(0x01)
	None bIsPreviewSound; // 0x698(0x01)
	None EnvelopeFollowerAttackTime; // 0x69c(0x04)
	None EnvelopeFollowerReleaseTime; // 0x6a0(0x04)
	None OnAudioEnvelopeValue; // 0x6a8(0x10)
	None Synth; // 0x6d8(0x08)
	None AudioComponent; // 0x6e0(0x08)
	None Settings; // 0xb8(0x50)
	None Settings; // 0x78(0x10)
	None Settings; // 0x9c(0x34)
	None Settings; // 0xa0(0x38)
	None OwningSynthComponent; // 0x360(0x08)
	None Target; // 0x30(0x08)
	None StateName; // 0x38(0x08)
	None Timer; // 0x40(0x04)
	None Repeat; // 0x44(0x01)
	None TimerHandle; // 0x48(0x08)
	None OnSuccess; // 0x50(0x10)
	None OnAborted; // 0x60(0x10)
	None Target; // 0x30(0x08)
	None StateID; // 0x38(0x01)
	None Timer; // 0x3c(0x04)
	None Repeat; // 0x40(0x01)
	None TimerHandle; // 0x48(0x08)
	None OnSuccess; // 0x50(0x10)
	None OnAborted; // 0x60(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None StateName; // 0x3c(0x08)
	None Timer; // 0x44(0x04)
	None Repeat; // 0x48(0x01)
	None TimerHandle; // 0x50(0x08)
	None OnSuccess; // 0x58(0x10)
	None OnAborted; // 0x68(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None StateID; // 0x39(0x01)
	None Timer; // 0x3c(0x04)
	None Repeat; // 0x40(0x01)
	None TimerHandle; // 0x48(0x08)
	None OnSuccess; // 0x50(0x10)
	None OnAborted; // 0x60(0x10)
	None Target; // 0x30(0x08)
	None InBegin; // 0x38(0x10)
	None InExit; // 0x48(0x10)
	None StateName; // 0x58(0x08)
	None Timer; // 0x60(0x04)
	None Repeat; // 0x64(0x01)
	None TimerHandle; // 0x68(0x08)
	None OnSuccess; // 0x70(0x10)
	None OnAborted; // 0x80(0x10)
	None Target; // 0x30(0x08)
	None InBegin; // 0x38(0x10)
	None InExit; // 0x48(0x10)
	None StateID; // 0x58(0x01)
	None Timer; // 0x5c(0x04)
	None Repeat; // 0x60(0x01)
	None TimerHandle; // 0x68(0x08)
	None OnSuccess; // 0x70(0x10)
	None OnAborted; // 0x80(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None InBegin; // 0x3c(0x10)
	None InExit; // 0x4c(0x10)
	None StateName; // 0x5c(0x08)
	None Timer; // 0x64(0x04)
	None Repeat; // 0x68(0x01)
	None TimerHandle; // 0x70(0x08)
	None OnSuccess; // 0x78(0x10)
	None OnAborted; // 0x88(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None InBegin; // 0x3c(0x10)
	None InExit; // 0x4c(0x10)
	None StateID; // 0x5c(0x01)
	None Timer; // 0x60(0x04)
	None Repeat; // 0x64(0x01)
	None TimerHandle; // 0x68(0x08)
	None OnSuccess; // 0x70(0x10)
	None OnAborted; // 0x80(0x10)
	None Target; // 0x30(0x08)
	None Timer; // 0x38(0x04)
	None TimerHandle; // 0x40(0x08)
	None OnSuccess; // 0x48(0x10)
	None OnAborted; // 0x58(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None FallbackState; // 0x3c(0x08)
	None Timer; // 0x44(0x04)
	None TimerHandle; // 0x48(0x08)
	None OnSuccess; // 0x50(0x10)
	None OnAborted; // 0x60(0x10)
	None Target; // 0x30(0x08)
	None InBegin; // 0x38(0x10)
	None InExit; // 0x48(0x10)
	None Timer; // 0x58(0x04)
	None TimerHandle; // 0x60(0x08)
	None OnSuccess; // 0x68(0x10)
	None OnAborted; // 0x78(0x10)
	None Target; // 0x30(0x08)
	None Conditional; // 0x38(0x01)
	None InBegin; // 0x3c(0x10)
	None InExit; // 0x4c(0x10)
	None InFallback; // 0x5c(0x10)
	None FallbackState; // 0x6c(0x08)
	None Timer; // 0x74(0x04)
	None TimerHandle; // 0x78(0x08)
	None OnSuccess; // 0x80(0x10)
	None OnAborted; // 0x90(0x10)
	None FSM; // 0x98(0x08)
	None TargetFSM; // 0xa0(0x08)
	None NewStateName; // 0xa8(0x08)
	None Debug; // 0xb0(0x01)
	None ForceSuccess; // 0xb1(0x01)
	None FSM; // 0x98(0x08)
	None TargetFSM; // 0xa0(0x08)
	None StateName; // 0xa8(0x08)
	None Debug; // 0xb0(0x01)
	None ForceSuccess; // 0xb1(0x01)
	None FSM; // 0x98(0x08)
	None TargetFSM; // 0xa0(0x08)
	None StateName; // 0xa8(0x08)
	None Debug; // 0xb0(0x01)
	None ForceSuccess; // 0xb1(0x01)
	None FSM; // 0x98(0x08)
	None TargetFSM; // 0xa0(0x08)
	None StateName; // 0xa8(0x08)
	None Debug; // 0xb0(0x01)
	None ForceSuccess; // 0xb1(0x01)
	None SGUID; // 0x28(0x10)
	None PlayerId; // 0x38(0x04)
	None Owner; // 0x3c(0x08)
	None StateGraph; // 0x58(0x10)
	None MachineTime; // 0x68(0x04)
	None _OnEntry; // 0x70(0x10)
	None _OnExit; // 0x80(0x10)
	None MachineData; // 0x90(0x50)
	None EnableInterfaceStatePropagation; // 0x28(0x01)
	None SuppressRPCWarnings; // 0x29(0x01)
	None DefaultTickInterval; // 0x2c(0x04)
	None DefaultStates; // 0x30(0x10)
	None MachineStack; // 0x30(0x10)
	None FSM; // 0x268(0x08)
	None OverrideFSM; // 0x270(0x01)
	None TargetFSM; // 0x274(0x08)
	None TargetASM; // 0x27c(0x08)
	None FSM_ExitArguments; // 0xb8(0x0c)
	None FSM_BeginArguments; // 0xc4(0x0c)
	None FSM_UpdateArguments; // 0xd0(0x08)
	None IsOverriden; // 0xe0(0x01)
	None IsFullyInitialized; // 0xe1(0x01)
	None StateID; // 0xe2(0x01)
	None PreviousStateID; // 0xe3(0x01)
	None StateTime; // 0xe4(0x04)
	None STATE_Null; // 0xe8(0x40)
	None State; // 0x128(0x50)
	None InBegin; // 0x178(0x10)
	None InUpdate; // 0x188(0x10)
	None InExit; // 0x198(0x10)
	None StartupState; // 0x1a8(0x08)
	None States; // 0x1b0(0x10)
	None LINKS; // 0x1c0(0x50)
	None UseEnumFromCPP; // 0x210(0x01)
	None CPP_EnumName; // 0x218(0x10)
	None K2_Enumerator; // 0x228(0x08)
	None ReplicationMode; // 0x230(0x01)
	None BlueprintAutoFlowFSM; // 0x231(0x01)
	None BlueprintAutoFlowTransitions; // 0x232(0x01)
	None AlwaysTickFSM; // 0x233(0x01)
	None ReplicateStateID; // 0x234(0x01)
	None ReplicatePreviousStateID; // 0x235(0x01)
	None ReplicateStateTime; // 0x236(0x01)
	None Debug; // 0x237(0x01)
	None OnInitialized; // 0x238(0x10)
	None OnBegin; // 0x248(0x10)
	None OnUpdate; // 0x258(0x10)
	None OnExit; // 0x268(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None UW-Lobby_WeaponInfo_Option_Slot; // 0x250(0x08)
	None UW-Lobby_WeaponInfo_Option_Slot_2; // 0x258(0x08)
	None UW-Lobby_WeaponInfo_Option_Slot_3; // 0x260(0x08)
	None UW-Lobby_WeaponInfo_Option_Slot_4; // 0x268(0x08)
	None VerticalBox_OptionList; // 0x270(0x08)
	None NodeName; // 0x30(0x10)
	None TreeAsset; // 0x40(0x08)
	None ParentNode; // 0x48(0x08)
	None Services; // 0x58(0x10)
	None bIgnoreRestartSelf; // 0x68(0x01)
	None BlackboardKey; // 0x70(0x28)
	None bStartAILogicOnPossess; // 0x3e8(0x01)
	None bStopAILogicOnUnposses; // 0x3e8(0x01)
	None bLOSflag; // 0x3e8(0x01)
	None bSkipExtraLOSChecks; // 0x3e8(0x01)
	None bAllowStrafe; // 0x3e8(0x01)
	None bWantsPlayerState; // 0x3e8(0x01)
	None bSetControlRotationFromPawnOrientation; // 0x3e8(0x01)
	None PathFollowingComponent; // 0x3f0(0x08)
	None BrainComponent; // 0x3f8(0x08)
	None PerceptionComponent; // 0x400(0x08)
	None ActionsComp; // 0x408(0x08)
	None Blackboard; // 0x410(0x08)
	None CachedGameplayTasksComponent; // 0x418(0x08)
	None DefaultNavigationFilterClass; // 0x420(0x08)
	None ReceiveMoveCompleted; // 0x428(0x10)
	None Interval; // 0x60(0x04)
	None RandomDeviation; // 0x64(0x04)
	None bCallTickOnSearchStart; // 0x68(0x01)
	None bRestartTimerOnEachActivation; // 0x68(0x01)
	None OnSuccess; // 0x28(0x10)
	None OnFail; // 0x38(0x10)
	None ParamName; // 0x28(0x08)
	None FloatValue; // 0x30(0x04)
	None IntValue; // 0x34(0x04)
	None BoolValue; // 0x38(0x01)
	None Min; // 0x40(0x04)
	None MAX; // 0x44(0x04)
	None bInteger; // 0x48(0x01)
	None SensesConfig; // 0xb0(0x10)
	None DominantSense; // 0xc0(0x08)
	None AIOwner; // 0xd8(0x08)
	None OnPerceptionUpdated; // 0x160(0x10)
	None OnTargetPerceptionUpdated; // 0x170(0x10)
	None bAutoRegisterAsSource; // 0xb0(0x01)
	None RegisterAsSourceForSenses; // 0xb8(0x10)
	None AISystem; // 0x30(0x08)
	None Senses; // 0x88(0x10)
	None PerceptionAgingRate; // 0x98(0x04)
	None DefaultExpirationAge; // 0x28(0x04)
	None NotifyType; // 0x2c(0x01)
	None bWantsNewPawnNotification; // 0x30(0x01)
	None bAutoRegisterAllPawnsAsSources; // 0x30(0x01)
	None PerceptionSystemInstance; // 0x38(0x08)
	None ListenerDataType; // 0x80(0x08)
	None ListenerContainer; // 0x88(0x10)
	None UnprocessedEvents; // 0x98(0x10)
	None RegisteredEvents; // 0x80(0x10)
	None NoiseEvents; // 0x80(0x10)
	None SpeedOfSoundSq; // 0x90(0x04)
	None RegisteredEvents; // 0x80(0x10)
	None MaxTracesPerTick; // 0x148(0x04)
	None MinQueriesPerTimeSliceCheck; // 0x14c(0x04)
	None MaxTimeSlicePerTick; // 0x150(0x08)
	None HighImportanceQueryDistanceThreshold; // 0x158(0x04)
	None MaxQueryImportance; // 0x160(0x04)
	None SightLimitQueryImportance; // 0x164(0x04)
	None RegisteredEvents; // 0x80(0x10)
	None RegisteredEvents; // 0x80(0x10)
	None DebugColor; // 0x28(0x04)
	None MaxAge; // 0x2c(0x04)
	None bStartsEnabled; // 0x30(0x01)
	None Implementation; // 0x48(0x08)
	None Implementation; // 0x48(0x08)
	None Implementation; // 0x48(0x08)
	None HearingRange; // 0x50(0x04)
	None LoSHearingRange; // 0x54(0x04)
	None bUseLoSHearing; // 0x58(0x01)
	None DetectionByAffiliation; // 0x5c(0x04)
	None Implementation; // 0x48(0x08)
	None SightRadius; // 0x50(0x04)
	None LoseSightRadius; // 0x54(0x04)
	None PeripheralVisionAngleDegrees; // 0x58(0x04)
	None DetectionByAffiliation; // 0x5c(0x04)
	None AutoSuccessRangeFromLastSeenLocation; // 0x60(0x04)
	None Event; // 0x28(0x30)
	None Event; // 0x28(0x30)
	None PerceptionSystemClassName; // 0x58(0x18)
	None HotSpotManagerClassName; // 0x70(0x18)
	None AcceptanceRadius; // 0x88(0x04)
	None PathfollowingRegularPathPointAcceptanceRadius; // 0x8c(0x04)
	None PathfollowingNavLinkAcceptanceRadius; // 0x90(0x04)
	None bFinishMoveOnGoalOverlap; // 0x94(0x01)
	None bAcceptPartialPaths; // 0x95(0x01)
	None bAllowStrafing; // 0x96(0x01)
	None bEnableBTAITasks; // 0x97(0x01)
	None bAllowControllersAsEQSQuerier; // 0x98(0x01)
	None bEnableDebuggerPlugin; // 0x99(0x01)
	None bForgetStaleActors; // 0x9a(0x01)
	None DefaultSightCollisionChannel; // 0x9b(0x01)
	None BehaviorTreeManager; // 0xa0(0x08)
	None EnvironmentQueryManager; // 0xa8(0x08)
	None PerceptionSystem; // 0xb0(0x08)
	None AllProxyObjects; // 0xb8(0x10)
	None HotSpotManager; // 0xc8(0x08)
	None NavLocalGrids; // 0xd0(0x08)
	None OwnerController; // 0x68(0x08)
	None OnRequestFailed; // 0x70(0x10)
	None OnMoveFinished; // 0x80(0x10)
	None MoveRequest; // 0x90(0x40)
	None RootNode; // 0x30(0x08)
	None BlackboardAsset; // 0x38(0x08)
	None RootDecorators; // 0x40(0x10)
	None RootDecoratorOps; // 0x50(0x10)
	None BlackboardComp; // 0xb8(0x08)
	None AIOwner; // 0xc0(0x08)
	None NodeInstances; // 0x130(0x10)
	None DefaultBehaviorTreeAsset; // 0x268(0x08)
	None MaxDebuggerSteps; // 0x28(0x04)
	None LoadedTemplates; // 0x30(0x10)
	None ActiveComponents; // 0x40(0x10)
	None BrainComp; // 0xb0(0x08)
	None DefaultBlackboardAsset; // 0xb8(0x08)
	None BlackboardAsset; // 0xc0(0x08)
	None KeyInstances; // 0xe8(0x10)
	None Parent; // 0x30(0x08)
	None Keys; // 0x38(0x10)
	None bHasSynchronizedKeys; // 0x48(0x01)
	None BaseClass; // 0x30(0x08)
	None EnumType; // 0x30(0x08)
	None EnumName; // 0x38(0x10)
	None bIsEnumNameValid; // 0x48(0x01)
	None EnumName; // 0x30(0x10)
	None EnumType; // 0x40(0x08)
	None BaseClass; // 0x30(0x08)
	None StringValue; // 0x30(0x10)
	None Children; // 0x58(0x10)
	None Services; // 0x68(0x10)
	None bApplyDecoratorScope; // 0x88(0x01)
	None FinishMode; // 0x90(0x01)
	None bInverseCondition; // 0x60(0x01)
	None FlowAbortMode; // 0x64(0x01)
	None BlackboardKey; // 0x68(0x28)
	None IntValue; // 0x90(0x04)
	None FloatValue; // 0x94(0x04)
	None StringValue; // 0x98(0x10)
	None CachedDescription; // 0xa8(0x10)
	None OperationType; // 0xb8(0x01)
	None NotifyObserver; // 0xb9(0x01)
	None AIOwner; // 0x68(0x08)
	None ActorOwner; // 0x70(0x08)
	None ObservedKeyNames; // 0x78(0x10)
	None bShowPropertyDetails; // 0x98(0x01)
	None bCheckConditionOnlyBlackBoardChanges; // 0x98(0x01)
	None bIsObservingBB; // 0x98(0x01)
	None ActorToCheck; // 0x68(0x28)
	None TagsToMatch; // 0x90(0x01)
	None GameplayTags; // 0x98(0x20)
	None CachedDescription; // 0xb8(0x10)
	None Operator; // 0x68(0x01)
	None BlackboardKeyA; // 0x70(0x28)
	None BlackboardKeyB; // 0x98(0x28)
	None ConeHalfAngle; // 0x68(0x04)
	None ConeOrigin; // 0x70(0x28)
	None ConeDirection; // 0x98(0x28)
	None Observed; // 0xc0(0x28)
	None CoolDownTime; // 0x68(0x04)
	None BlackboardKeyA; // 0x68(0x28)
	None BlackboardKeyB; // 0x90(0x28)
	None bUseSelf; // 0xb8(0x01)
	None PathQueryType; // 0xbc(0x01)
	None FilterClass; // 0xc0(0x08)
	None AcceptableRadius; // 0x90(0x04)
	None ParametrizedAcceptableRadius; // 0x98(0x38)
	None GeometricDistanceType; // 0xd0(0x01)
	None bUseParametrizedRadius; // 0xd4(0x01)
	None bUseNavAgentGoalLocation; // 0xd4(0x01)
	None bPathFindingBasedTest; // 0xd4(0x01)
	None TestClass; // 0x90(0x08)
	None ConeHalfAngle; // 0x68(0x04)
	None ConeOrigin; // 0x70(0x28)
	None Observed; // 0x98(0x28)
	None bUseSelfAsOrigin; // 0xc0(0x01)
	None bUseSelfAsObserved; // 0xc0(0x01)
	None NumLoops; // 0x68(0x04)
	None bInfiniteLoop; // 0x6c(0x01)
	None InfiniteLoopTimeoutTime; // 0x70(0x04)
	None CooldownTag; // 0x68(0x08)
	None CooldownDuration; // 0x70(0x04)
	None bAddToExistingDuration; // 0x74(0x01)
	None CooldownTag; // 0x68(0x08)
	None CooldownDuration; // 0x70(0x04)
	None bAddToExistingDuration; // 0x74(0x01)
	None bActivatesCooldown; // 0x75(0x01)
	None TimeLimit; // 0x68(0x04)
	None BlackboardKey; // 0x70(0x28)
	None AIOwner; // 0x70(0x08)
	None ActorOwner; // 0x78(0x08)
	None bShowPropertyDetails; // 0x90(0x01)
	None bShowEventDetails; // 0x90(0x01)
	None FocusPriority; // 0x98(0x01)
	None EQSRequest; // 0x98(0x48)
	None AIOwner; // 0x70(0x08)
	None ActorOwner; // 0x78(0x08)
	None TickInterval; // 0x80(0x08)
	None bShowPropertyDetails; // 0xa0(0x01)
	None Result; // 0x70(0x01)
	None bWaitForGameplayTask; // 0x70(0x01)
	None Loudnes; // 0x70(0x04)
	None AcceptableRadius; // 0x98(0x04)
	None FilterClass; // 0xa0(0x08)
	None ObservedBlackboardValueTolerance; // 0xa8(0x04)
	None bObserveBlackboardValue; // 0xac(0x01)
	None bAllowStrafe; // 0xac(0x01)
	None bAllowPartialPath; // 0xac(0x01)
	None bTrackMovingGoal; // 0xac(0x01)
	None bProjectGoalLocation; // 0xac(0x01)
	None bReachTestIncludesAgentRadius; // 0xac(0x01)
	None bReachTestIncludesGoalRadius; // 0xac(0x01)
	None bStopOnOverlap; // 0xac(0x01)
	None bStopOnOverlapNeedsUpdate; // 0xad(0x01)
	None bDisablePathUpdateOnGoalLocationChange; // 0xb0(0x01)
	None bProjectVectorGoalToNavigation; // 0xb0(0x01)
	None bUpdatedDeprecatedProperties; // 0xb0(0x01)
	None AnimationToPlay; // 0x70(0x08)
	None bLooping; // 0x78(0x01)
	None bNonBlocking; // 0x78(0x01)
	None MyOwnerComp; // 0x80(0x08)
	None CachedSkelMesh; // 0x88(0x08)
	None SoundToPlay; // 0x70(0x08)
	None Action; // 0x70(0x08)
	None Precision; // 0x98(0x04)
	None BehaviorAsset; // 0x70(0x08)
	None InjectionTag; // 0x70(0x08)
	None DefaultBehaviorAsset; // 0x78(0x08)
	None BehaviorAsset; // 0x80(0x08)
	None QueryTemplate; // 0x98(0x08)
	None QueryParams; // 0xa0(0x10)
	None QueryConfig; // 0xb0(0x10)
	None RunMode; // 0xc0(0x01)
	None EQSQueryBlackboardKey; // 0xc8(0x28)
	None bUseBBKey; // 0xf0(0x01)
	None EQSRequest; // 0xf8(0x48)
	None CooldownTag; // 0x70(0x08)
	None bAddToExistingDuration; // 0x78(0x01)
	None CooldownDuration; // 0x7c(0x04)
	None WaitTime; // 0x70(0x04)
	None RandomDeviation; // 0x74(0x04)
	None BlackboardKey; // 0x78(0x28)
	None MovementComp; // 0xe8(0x08)
	None MyNavData; // 0xf8(0x08)
	None CharacterMovement; // 0x260(0x08)
	None CrowdAgentMoveDirection; // 0x268(0x0c)
	None MyNavData; // 0x28(0x08)
	None AvoidanceConfig; // 0x30(0x10)
	None SamplingPatterns; // 0x40(0x10)
	None MaxAgents; // 0x50(0x04)
	None MaxAgentRadius; // 0x54(0x04)
	None MaxAvoidedAgents; // 0x58(0x04)
	None MaxAvoidedWalls; // 0x5c(0x04)
	None NavmeshCheckInterval; // 0x60(0x04)
	None PathOptimizationInterval; // 0x64(0x04)
	None SeparationDirClamp; // 0x68(0x04)
	None PathOffsetRadiusMultiplier; // 0x6c(0x04)
	None bResolveCollisions; // 0x70(0x01)
	None QueryName; // 0x30(0x08)
	None options; // 0x38(0x10)
	None VerNum; // 0x28(0x04)
	None OptionName; // 0x30(0x10)
	None ItemType; // 0x40(0x08)
	None bAutoSortTests; // 0x48(0x01)
	None SearchedActorClass; // 0x50(0x08)
	None GenerateOnlyActorsInRadius; // 0x58(0x38)
	None SearchRadius; // 0x90(0x38)
	None SearchCenter; // 0xc8(0x08)
	None GeneratorsActionDescription; // 0x50(0x18)
	None Context; // 0x68(0x08)
	None GeneratedItemType; // 0x70(0x08)
	None Generators; // 0x50(0x10)
	None bAllowDifferentItemTypes; // 0x60(0x01)
	None bHasMatchingItemType; // 0x60(0x01)
	None ForcedItemType; // 0x68(0x08)
	None ProjectionData; // 0x50(0x30)
	None AlignedPointsDistance; // 0x80(0x38)
	None ConeDegrees; // 0xb8(0x38)
	None AngleStep; // 0xf0(0x38)
	None Range; // 0x128(0x38)
	None CenterActor; // 0x160(0x08)
	None bIncludeContextLocation; // 0x168(0x01)
	None QueryContext; // 0x50(0x08)
	None InnerRadius; // 0x80(0x38)
	None OuterRadius; // 0xb8(0x38)
	None NumberOfRings; // 0xf0(0x38)
	None PointsPerRing; // 0x128(0x38)
	None ArcDirection; // 0x160(0x20)
	None ArcAngle; // 0x180(0x38)
	None bUseSpiralPattern; // 0x1b8(0x01)
	None Center; // 0x1c0(0x08)
	None bDefineArc; // 0x1c8(0x01)
	None CircleRadius; // 0x80(0x38)
	None SpaceBetween; // 0xb8(0x38)
	None NumberOfPoints; // 0xf0(0x38)
	None PointOnCircleSpacingMethod; // 0x128(0x01)
	None ArcDirection; // 0x130(0x20)
	None ArcAngle; // 0x150(0x38)
	None AngleRadians; // 0x188(0x04)
	None CircleCenter; // 0x190(0x08)
	None bIgnoreAnyContextActorsWhenGeneratingCircle; // 0x198(0x01)
	None CircleCenterZOffset; // 0x1a0(0x38)
	None TraceData; // 0x1d8(0x30)
	None bDefineArc; // 0x208(0x01)
	None GridSize; // 0x80(0x38)
	None SpaceBetween; // 0xb8(0x38)
	None GenerateAround; // 0xf0(0x08)
	None PathToItem; // 0xf8(0x38)
	None NavigationFilter; // 0x130(0x08)
	None ScanRangeMultiplier; // 0x138(0x38)
	None QueryID; // 0x30(0x04)
	None ItemType; // 0x58(0x08)
	None OptionIndex; // 0x60(0x04)
	None OnQueryFinishedEvent; // 0x68(0x10)
	None InstanceCache; // 0xa8(0x10)
	None LocalContexts; // 0xb8(0x10)
	None GCShieldedWrappers; // 0xc8(0x10)
	None MaxAllowedTestingTime; // 0x12c(0x04)
	None bTestQueriesUsingBreadth; // 0x130(0x01)
	None QueryCountWarningThreshold; // 0x134(0x04)
	None QueryCountWarningInterval; // 0x138(0x08)
	None Generator; // 0x28(0x08)
	None Tests; // 0x30(0x10)
	None TestOrder; // 0x30(0x04)
	None TestPurpose; // 0x34(0x01)
	None TestComment; // 0x38(0x10)
	None MultipleContextFilterOp; // 0x48(0x01)
	None MultipleContextScoreOp; // 0x49(0x01)
	None FilterType; // 0x4a(0x01)
	None BoolValue; // 0x50(0x38)
	None FloatValueMin; // 0x88(0x38)
	None FloatValueMax; // 0xc0(0x38)
	None ScoringEquation; // 0xf9(0x01)
	None ClampMinType; // 0xfa(0x01)
	None ClampMaxType; // 0xfb(0x01)
	None NormalizationType; // 0xfc(0x01)
	None ScoreClampMin; // 0x100(0x38)
	None ScoreClampMax; // 0x138(0x38)
	None ScoringFactor; // 0x170(0x38)
	None ReferenceValue; // 0x1a8(0x38)
	None bDefineReferenceValue; // 0x1e0(0x01)
	None bWorkOnFloatValues; // 0x1f0(0x01)
	None TestMode; // 0x1f8(0x01)
	None DistanceTo; // 0x200(0x08)
	None LineA; // 0x1f8(0x20)
	None LineB; // 0x218(0x20)
	None TestMode; // 0x238(0x01)
	None bAbsoluteValue; // 0x239(0x01)
	None TagQueryToMatch; // 0x1f8(0x48)
	None bUpdatedToUseQuery; // 0x240(0x01)
	None TagsToMatch; // 0x241(0x01)
	None GameplayTags; // 0x248(0x20)
	None OverlapData; // 0x1f8(0x20)
	None TestMode; // 0x1f8(0x01)
	None Context; // 0x200(0x08)
	None PathFromContext; // 0x208(0x38)
	None SkipUnreachable; // 0x240(0x38)
	None FilterClass; // 0x278(0x08)
	None ScanRangeMultiplier; // 0x280(0x38)
	None ProjectionData; // 0x1f8(0x30)
	None TraceData; // 0x1f8(0x30)
	None TraceFromContext; // 0x228(0x38)
	None ItemHeightOffset; // 0x260(0x38)
	None ContextHeightOffset; // 0x298(0x38)
	None Context; // 0x2d0(0x08)
	None VolumeContext; // 0x1f8(0x08)
	None VolumeClass; // 0x200(0x08)
	None bDoComplexVolumeTest; // 0x208(0x01)
	None QueryTemplate; // 0x5e0(0x08)
	None QueryParams; // 0x5e8(0x10)
	None QueryConfig; // 0x5f8(0x10)
	None TimeLimitPerStep; // 0x608(0x04)
	None StepToDebugDraw; // 0x60c(0x04)
	None HighlightMode; // 0x610(0x01)
	None bDrawLabels; // 0x614(0x01)
	None bDrawFailedItems; // 0x614(0x01)
	None bReRunQueryOnlyOnFinishedMove; // 0x614(0x01)
	None bShouldBeVisibleInGame; // 0x614(0x01)
	None bTickDuringGame; // 0x614(0x01)
	None QueryingMode; // 0x618(0x01)
	None NavAgentProperties; // 0x620(0x30)
	None GridManager; // 0x258(0x08)
	None PointLinks; // 0x320(0x10)
	None SegmentLinks; // 0x330(0x10)
	None SmartLinkComp; // 0x340(0x08)
	None bSmartLinkIsRelevant; // 0x348(0x01)
	None OnSmartLinkReached; // 0x350(0x10)
	None ChildAction; // 0x28(0x08)
	None ParentAction; // 0x30(0x08)
	None OwnerComponent; // 0x38(0x08)
	None Instigator; // 0x40(0x08)
	None BrainComp; // 0x48(0x08)
	None bAllowNewSameClassInstance; // 0x80(0x01)
	None bReplaceActiveSameClassInstance; // 0x80(0x01)
	None bShouldPauseMovement; // 0x80(0x01)
	None bAlwaysNotifyOnFinished; // 0x80(0x01)
	None GoalActor; // 0x98(0x08)
	None GoalLocation; // 0xa0(0x0c)
	None AcceptableRadius; // 0xac(0x04)
	None FilterClass; // 0xb0(0x08)
	None bAllowStrafe; // 0xb8(0x01)
	None bFinishOnOverlap; // 0xb8(0x01)
	None bUsePathfinding; // 0xb8(0x01)
	None bAllowPartialPath; // 0xb8(0x01)
	None bProjectGoalToNavigation; // 0xb8(0x01)
	None bUpdatePathToGoal; // 0xb8(0x01)
	None bAbortChildActionOnPathChange; // 0xb8(0x01)
	None ActionToRepeat; // 0x98(0x08)
	None RecentActionCopy; // 0xa0(0x08)
	None ChildFailureHandlingMode; // 0xa8(0x01)
	None ActionSequence; // 0x98(0x10)
	None ChildFailureHandlingMode; // 0xa8(0x01)
	None RecentActionCopy; // 0xb0(0x08)
	None TimeToWait; // 0x98(0x04)
	None ControlledPawn; // 0xb0(0x08)
	None ActionStacks; // 0xb8(0x10)
	None ActionEvents; // 0xc8(0x10)
	None CurrentAction; // 0xd8(0x08)
	None HearingThreshold; // 0xb0(0x04)
	None LOSHearingThreshold; // 0xb4(0x04)
	None SightRadius; // 0xb8(0x04)
	None SensingInterval; // 0xbc(0x04)
	None HearingMaxSoundAge; // 0xc0(0x04)
	None bEnableSensingUpdates; // 0xc4(0x01)
	None bOnlySensePlayers; // 0xc4(0x01)
	None bSeePawns; // 0xc4(0x01)
	None bHearNoises; // 0xc4(0x01)
	None OnSeePawn; // 0xd0(0x10)
	None OnHearNoise; // 0xe0(0x10)
	None PeripheralVisionAngle; // 0xf0(0x04)
	None PeripheralVisionCosine; // 0xf4(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Hide; // 0x250(0x08)
	None Show; // 0x258(0x08)
	None Bg; // 0x260(0x08)
	None Button_OK; // 0x268(0x08)
	None Image_168; // 0x270(0x08)
	None Image_669; // 0x278(0x08)
	None Message; // 0x280(0x08)
	None TextBlock_Title; // 0x288(0x08)
	None UW-ItemRecipeTree; // 0x290(0x08)
	None Timer; // 0x298(0x08)
	None GridNode; // 0x5c8(0x08)
	None SpatializedClasses; // 0x5d0(0x10)
	None NonSpatializedChildClasses; // 0x5e0(0x10)
	None AlwaysRelevantNode; // 0x5f0(0x08)
	None ExplicitlySetClasses; // 0x940(0x10)
	None LastViewer; // 0x50(0x08)
	None LastViewTarget; // 0x58(0x08)
	None PingCounter; // 0xb0(0x04)
	None bEnabled; // 0xb4(0x01)
	None PlayerState; // 0xb8(0x08)
	None ForwardSettingMap; // 0x28(0x50)
	None QualityOverrides; // 0x28(0x1b)
	None UberGraphFrame; // 0x248(0x08)
	None EnemySkull; // 0x250(0x08)
	None Image_436; // 0x258(0x08)
	None Pawn; // 0x260(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None DropBoxPanel; // 0x250(0x08)
	None Image_1; // 0x258(0x08)
	None Image_2; // 0x260(0x08)
	None Image_3; // 0x268(0x08)
	None Image_4; // 0x270(0x08)
	None Image_5; // 0x278(0x08)
	None Image_9; // 0x280(0x08)
	None Image_10; // 0x288(0x08)
	None Image_11; // 0x290(0x08)
	None Image_12; // 0x298(0x08)
	None Image_13; // 0x2a0(0x08)
	None Image_14; // 0x2a8(0x08)
	None Image_15; // 0x2b0(0x08)
	None Image_16; // 0x2b8(0x08)
	None Image_17; // 0x2c0(0x08)
	None Image_18; // 0x2c8(0x08)
	None Image_19; // 0x2d0(0x08)
	None Image_20; // 0x2d8(0x08)
	None Image_21; // 0x2e0(0x08)
	None ScrollBox_2; // 0x2e8(0x08)
	None SizeBox_1; // 0x2f0(0x08)
	None WB-BoxList; // 0x2f8(0x08)
	None WrapBox_1; // 0x300(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None IMG_PerkLevelUpFx; // 0x250(0x08)
	None PerkSlot; // 0x258(0x01)
	None PerkFxTexture; // 0x260(0x08)
	None PlayAnimation_1; // 0x268(0x01)
	None CurrentAnimationTime; // 0x26c(0x04)
	None AnimLastTime; // 0x270(0x04)
	None PerkFxMaterialInstance; // 0x278(0x08)
	None UltimatePerkFxTexture; // 0x280(0x08)
	None ReplicationConnectionManagerClass; // 0x28(0x08)
	None NetDriver; // 0x30(0x08)
	None Connections; // 0x38(0x10)
	None PendingConnections; // 0x48(0x10)
	None GlobalGraphNodes; // 0x98(0x10)
	None PrepareForReplicationNodes; // 0xa8(0x10)
	None AllChildNodes; // 0x28(0x10)
	None GridNode; // 0x578(0x08)
	None AlwaysRelevantNode; // 0x580(0x08)
	None AlwaysRelevantForConnectionList; // 0x588(0x10)
	None ActorsWithoutNetConnection; // 0x598(0x10)
	None StaticNode; // 0x140(0x08)
	None DynamicNode; // 0x1d0(0x08)
	None DormancyNode; // 0x1d8(0x08)
	None ChildNode; // 0x50(0x08)
	None PastRelevantActors; // 0x110(0x10)
	None LastViewer; // 0x120(0x08)
	None LastViewTarget; // 0x128(0x08)
	None TearOffActors; // 0x50(0x10)
	None NetConnection; // 0x28(0x08)
	None DebugActor; // 0x180(0x08)
	None LastGatherLocations; // 0x1a0(0x10)
	None ConnectionGraphNodes; // 0x1b8(0x10)
	None TearOffNode; // 0x1c8(0x08)
	None ReplicationGraph; // 0x310(0x08)
	None ConnectionManager; // 0x318(0x08)
	None Image_1294; // 0x2f8(0x08)
	None CurveSourceBindingName; // 0x820(0x08)
	None CurveSyncOffset; // 0x828(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Image_1; // 0x250(0x08)
	None UberGraphFrame; // 0x260(0x08)
	None Img_TeamColor; // 0x268(0x08)
	None T_TeamNum; // 0x270(0x08)
	None VB_PlayerList; // 0x278(0x08)
	None PrefabComponent; // 0x310(0x08)
	None AssetReferences; // 0x28(0x50)
	None GeneratedBlueprintAssetReference; // 0x78(0x18)
	None SimplifiedMeshAssetReference; // 0x90(0x18)
	None PrefabId; // 0xa8(0x10)
	None PrefabContent; // 0xb8(0x10)
	None PrefabHash; // 0xc8(0x10)
	None NumActors; // 0xd8(0x04)
	None PrefabPivot; // 0xdc(0x0c)
	None Parent; // 0xe8(0x08)
	None bConnected; // 0x4b8(0x01)
	None bLockSelection; // 0x4b8(0x01)
	None Prefab; // 0x4c0(0x08)
	None GeneratedBlueprint; // 0x4c8(0x08)
	None SimplifiedMesh; // 0x4d0(0x08)
	None PrefabInstancesMap; // 0x4d8(0x50)
	None VariantRulesOverwrite; // 0x528(0x10)
	None bTransient; // 0x538(0x01)
	None ParentClass; // 0x540(0x08)
	None bInitialPivotToWorldOrigin; // 0x28(0x01)
	None bReplaceActorsWithCreatedPrefab; // 0x29(0x01)
	None bAutoIncludeAttachedActorsWhenCreateNewPrefab; // 0x2a(0x01)
	None bNestedPrefabSupport; // 0x2b(0x01)
	None bRestorePrefabActorCollapseStatusAfterPIE; // 0x2c(0x01)
	None bCollapseAllPrefabActorsAfterMapOpened; // 0x2d(0x01)
	None bMoveActorsInWorldAfterSetPrefabPivot; // 0x2e(0x01)
	None bDuplicateNoRevertWithOffset; // 0x2f(0x01)
	None NewPrefabNamePattern; // 0x30(0x10)
	None UITheme; // 0x40(0x04)
	None bUpdateAllPrefabActorsWhenOpenMap; // 0x44(0x01)
	None bCheckPrefabChangeBeforeUpdateAllPrefabActorsWhenOpenMap; // 0x45(0x01)
	None bUpdateAllPrefabActorsWhenApply; // 0x46(0x01)
	None bApplyToNestedPrefab; // 0x47(0x01)
	None bEnableApplyFromDisconnectedPrefabActor; // 0x48(0x01)
	None bAutoAddRemoveVariantActorPrefix; // 0x49(0x01)
	None VariantActorPrefix; // 0x50(0x10)
	None bEnablePrefabComponentVisualizer; // 0x60(0x01)
	None PrefabComponentVisualizerType; // 0x61(0x01)
	None bDisplayPrefabComponentVisualizerEvenNotSelected; // 0x62(0x01)
	None PrefabViewVisualizerColor; // 0x64(0x04)
	None TargetActorColor; // 0x68(0x04)
	None UnLockedConnectedColor; // 0x6c(0x04)
	None LockedConnectedColor; // 0x70(0x04)
	None UnLockedDisConnectedColor; // 0x74(0x04)
	None LockedDisConnectedColor; // 0x78(0x04)
	None UnLockedNoPrefabAssignedColor; // 0x7c(0x04)
	None LockedNoPrefabAssignedColor; // 0x80(0x04)
	None PrefabMaterialPath; // 0x88(0x18)
	None bShadedPrefabViewVisualizer; // 0xc8(0x01)
	None bLockPrefabSelectionByDefault; // 0xc9(0x01)
	None bDisableLockPrefabSelectionFeature; // 0xca(0x01)
	None bSupportGroupWhenPasting; // 0xcb(0x01)
	None bForceApplyPerInstanceVertexColor; // 0xcc(0x01)
	None bHideChildActorsInPIEIfHiddenInEditor; // 0xcd(0x01)
	None bCanToggleChildActorVisibilityInPIE; // 0xce(0x01)
	None bIgnoreLayersInPrefab; // 0xd0(0x01)
	None ChangeComponentActor; // 0xd8(0x10)
	None DefaultActorClass; // 0xe8(0x08)
	None bEnabledAutoThumbnail; // 0xf0(0x01)
	None bAutoOpenBlueprintEditor; // 0xf1(0x01)
	None InteriorActorClass; // 0xf8(0x08)
	None ExteriorActorClass; // 0x100(0x08)
	None InteriorShowActorClass; // 0x108(0x08)
	None HouseActorClass; // 0x110(0x08)
	None bSupportGenerateBlueprint; // 0x118(0x01)
	None bHarvestComponentsWhenGeneratingBlueprint; // 0x119(0x01)
	None bUseActorNameAsVariableNameWhenGeneratingBlueprint; // 0x11a(0x01)
	None bForceMobilityToMovableWhenGeneratingBlueprint; // 0x11b(0x01)
	None IgnoreActorClassesWhenGeneratingBlueprint; // 0x120(0x10)
	None IgnoreActorTagsWhenGeneratingBlueprint; // 0x130(0x10)
	None bFlashPrefabWindowForTargetPrefabActor; // 0x140(0x01)
	None bEnablePrefabTextEditor; // 0x141(0x01)
	None bDebugMode; // 0x142(0x01)
	None bDisableThumbnailRender; // 0x143(0x01)
	None bShowPrefabInstanceTagInPrefabToolWindow; // 0x144(0x01)
	None mSheets; // 0x28(0x10)
	None mActiveSheet; // 0x38(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Button_Tab; // 0x250(0x08)
	None Image_Check; // 0x258(0x08)
	None TextBlock_TabName; // 0x260(0x08)
	None BlackMarket_SubTab; // 0x268(0x08)
	None TabType; // 0x270(0x01)
	None TabName; // 0x278(0x18)
	None TabIndex; // 0x290(0x08)
	None Selected; // 0x298(0x01)
	None TextBlock_Gold; // 0x248(0x08)
	None TextBlock_Title; // 0x250(0x08)
	None ColorType1; // 0x258(0x28)
	None ColorType2; // 0x280(0x28)
	None SignificanceManagerClassName; // 0x158(0x18)
	None UberGraphFrame; // 0x248(0x08)
	None Ani_TutorialComplete_FadeOut; // 0x250(0x08)
	None Ani_TutorialComplete; // 0x258(0x08)
	None Idle; // 0x260(0x08)
	None CanvasPanel_1; // 0x268(0x08)
	None UW-ScenarioQuest; // 0x270(0x08)
	None UberGraphFrame; // 0x278(0x08)
	None btn_Cancel; // 0x280(0x08)
	None btn_report; // 0x288(0x08)
	None combobox_button_overlay; // 0x290(0x08)
	None combobox_string; // 0x298(0x08)
	None Image; // 0x2a0(0x08)
	None Image_2; // 0x2a8(0x08)
	None Image_545; // 0x2b0(0x08)
	None NormalArrow; // 0x2b8(0x08)
	None OpeningArrow; // 0x2c0(0x08)
	None popup-bg; // 0x2c8(0x08)
	None txt_description; // 0x2d0(0x08)
	None txt_nickname; // 0x2d8(0x08)
	None uw-bg; // 0x2e0(0x08)
	None DescriptionText; // 0x2e8(0x18)
	None ReportIndexText; // 0x300(0x10)
	None DefaultComboString; // 0x310(0x18)
	None CurrentSelectIndex; // 0x328(0x04)
	None SelectIndexFromProgram; // 0x32c(0x04)
	None CheckCloseComboArrow; // 0x330(0x01)
	None WidgetInfoArray; // 0x310(0x10)
	None ReplayWidgetMap; // 0x320(0x50)
	None Button_PlayerName; // 0x248(0x08)
	None Text_PlayerName; // 0x250(0x08)
	None SortMethodTextBlock; // 0x248(0x08)
	None PlayerListPrevButton; // 0x250(0x08)
	None PlayerListNextButton; // 0x258(0x08)
	None ScrollBox_PlayerName; // 0x260(0x08)
	None EventBorder; // 0x248(0x08)
	None VisualBorder; // 0x250(0x08)
	None EventInform; // 0x258(0x08)
	None KillEvent; // 0x270(0x30)
	None ClickToJumpDeltaSec; // 0x2a8(0x04)
	None ReplayListItemBtn; // 0x248(0x08)
	None TextName; // 0x250(0x08)
	None TextLive; // 0x258(0x08)
	None TextTime; // 0x260(0x08)
	None OnSelectedReplayListItemEvent; // 0x278(0x10)
	None ReplayListWidget; // 0x318(0x08)
	None ReplayListWidgetClass; // 0x320(0x08)
	None PageSizeTB; // 0x248(0x08)
	None CurrentPageTB; // 0x250(0x08)
	None ScrollBoxReplayList; // 0x258(0x08)
	None RefreshBtn; // 0x260(0x08)
	None PrevBtn; // 0x268(0x08)
	None NextBtn; // 0x270(0x08)
	None TotalReplaysTB; // 0x278(0x08)
	None TotalPageText; // 0x280(0x08)
	None ReplayItemInform; // 0x288(0x08)
	None ShouldKeepChkBox; // 0x290(0x08)
	None PlayBtn; // 0x298(0x08)
	None DeleteBtn; // 0x2a0(0x08)
	None DeleteOldReplaysBtn; // 0x2a8(0x08)
	None ReplaysToKeepTB; // 0x2b0(0x08)
	None TotalPages; // 0x2b8(0x04)
	None CurrentPage; // 0x2bc(0x04)
	None PageSize; // 0x2c0(0x04)
	None TotalReplays; // 0x2c4(0x04)
	None ReplaysToKeep; // 0x2c8(0x04)
	None ReplayTimelineScrollBox; // 0x248(0x08)
	None ReplayTimelineSizeBox; // 0x250(0x08)
	None ReplayTimelineBorder; // 0x258(0x08)
	None ReplayTimelineSlider; // 0x260(0x08)
	None ReplayTimeToGoBorder; // 0x268(0x08)
	None ReplayTimeToGoText; // 0x270(0x08)
	None ReplayCurrentTimeTextBlock; // 0x278(0x08)
	None ReplayTotalTimeTextBlock; // 0x280(0x08)
	None ReplayPauseButton; // 0x288(0x08)
	None ReplayResumeButton; // 0x290(0x08)
	None ReplaySpeedUpButton; // 0x298(0x08)
	None ReplaySpeedDownButton; // 0x2a0(0x08)
	None ReplaySpeedTextBlock; // 0x2a8(0x08)
	None ShowKillChkBox; // 0x2b0(0x08)
	None ShowKnockoutChkBox; // 0x2b8(0x08)
	None TimelineScaleUpButton; // 0x2c0(0x08)
	None TimelineScaleDownButton; // 0x2c8(0x08)
	None TimelineScaleTextBlock; // 0x2d0(0x08)
	None TimelineScaleDelta; // 0x2d8(0x04)
	None TimelineMaxScale; // 0x2dc(0x04)
	None KillEventMarkers; // 0x300(0x10)
	None KnockoutEventMarkers; // 0x310(0x10)
	None MK3DKillEvents; // 0x320(0x10)
	None MK3DKnockoutEvents; // 0x330(0x10)
	None OnMouseEnterEvent; // 0x270(0x10)
	None OnMouseEnterEvent; // 0x270(0x10)
	None OnMouseLeaveEvent; // 0x280(0x10)
	None UseGlobalAmbience; // 0xb0(0x01)
	None UseColorTemp; // 0xb1(0x01)
	None Filename; // 0x28(0x10)
	None NumberOfRows; // 0x38(0x04)
	None NumberOfColumns; // 0x3c(0x04)
	None NumberOfPoints; // 0x40(0x04)
	None SourceTitleRow; // 0x48(0x10)
	None ColumnTitleArray; // 0x58(0x10)
	None FloatCSVData; // 0x68(0x10)
	None SpawnTimes; // 0x78(0x10)
	None LifeValues; // 0x88(0x10)
	None PointTypes; // 0x98(0x10)
	None SpecialAttributesColumnIndexes; // 0xa8(0x10)
	None PointValueIndexes; // 0xb8(0x10)
	None UseCustomTitleRow; // 0xc8(0x01)
	None HoudiniCSVAsset; // 0x30(0x08)
	None LastSpawnedPointID; // 0x38(0x04)
	None LastSpawnTime; // 0x3c(0x04)
	None SharedWorldData; // 0x3f8(0x10)
	None OnNewLocalDataFromClients; // 0x408(0x10)
	None PinSelectionConfidenceThreshold; // 0x418(0x04)
	None ChosenOne; // 0x4c0(0x08)
	None SharedWorldData; // 0x380(0x10)
	None AlignmentTransforms; // 0x390(0x10)
	None OnSharedWorldDataUpdated; // 0x3a0(0x10)
	None OnAlignmentTransformsUpdated; // 0x3b0(0x10)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None CP-SlotInfo; // 0x3e8(0x08)
	None IMG-BG; // 0x3f0(0x08)
	None IMG-BG-Border; // 0x3f8(0x08)
	None IMG-Item; // 0x400(0x08)
	None IMG-Mask; // 0x408(0x08)
	None IMG-Over; // 0x410(0x08)
	None IMG-Over-Border; // 0x418(0x08)
	None Menu02; // 0x420(0x08)
	None Overlay_Mask; // 0x428(0x08)
	None TXT-ItemName; // 0x430(0x08)
	None TXT-Menu01; // 0x438(0x08)
	None TXT-Menu02; // 0x440(0x08)
	None InAppPurchaseLogMessage; // 0xb0(0x10)
	None GetItemsDetailsSuccess; // 0xc0(0x10)
	None GetItemsDetailsFailure; // 0xd0(0x10)
	None PurchaseConfirmationSuccess; // 0xe0(0x10)
	None PurchaseConfirmationFailure; // 0xf0(0x10)
	None GetPurchaseHistorySuccess; // 0x100(0x10)
	None GetPurchaseHistoryFailure; // 0x110(0x10)
	None DeviceHasReactivatedDelegate; // 0x140(0x10)
	None DeviceWillEnterRealityModeDelegate; // 0x150(0x10)
	None DeviceWillGoInStandbyDelegate; // 0x160(0x10)
	None FocusLostDelegate; // 0x170(0x10)
	None FocusGainedDelegate; // 0x180(0x10)
	None OnHeadTrackingLost; // 0x140(0x10)
	None OnHeadTrackingRecovered; // 0x150(0x10)
	None OnHeadTrackingRecoveryFailed; // 0x160(0x10)
	None OnHeadTrackingNewSessionStarted; // 0x170(0x10)
	None OnMeshTrackerUpdated; // 0x240(0x10)
	None ScanWorld; // 0x250(0x01)
	None MeshType; // 0x251(0x01)
	None BoundingVolume; // 0x258(0x08)
	None LevelOfDetail; // 0x260(0x01)
	None PerimeterOfGapsToFill; // 0x264(0x04)
	None Planarize; // 0x268(0x01)
	None DisconnectedSectionArea; // 0x26c(0x04)
	None RequestNormals; // 0x270(0x01)
	None RequestVertexConfidence; // 0x271(0x01)
	None VertexColorMode; // 0x272(0x01)
	None BlockVertexColors; // 0x278(0x10)
	None VertexColorFromConfidenceZero; // 0x288(0x10)
	None VertexColorFromConfidenceOne; // 0x298(0x10)
	None RemoveOverlappingTriangles; // 0x2a8(0x01)
	None MRMesh; // 0x2b0(0x08)
	None BricksPerFrame; // 0x2b8(0x04)
	None bEnableZI; // 0x28(0x01)
	None bUseVulkanForZI; // 0x29(0x01)
	None bUseMLAudioForZI; // 0x2a(0x01)
	None UberGraphFrame; // 0x520(0x08)
	None AnimGraphNode_BlendListByBool_21; // 0x528(0xa0)
	None AnimGraphNode_ModifyBone_21; // 0x5c8(0x108)
	None AnimGraphNode_TwoBoneIK_11; // 0x6d0(0x1e0)
	None AnimGraphNode_ModifyBone_20; // 0x8b0(0x108)
	None AnimGraphNode_TwoBoneIK_10; // 0x9c0(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_20; // 0xba0(0x20)
	None AnimGraphNode_ModifyBone_19; // 0xbc0(0x108)
	None AnimGraphNode_ComponentToLocalSpace_20; // 0xcc8(0x20)
	None AnimGraphNode_SaveCachedPose_20; // 0xce8(0xb8)
	None AnimGraphNode_SaveCachedPose_19; // 0xda0(0xb8)
	None AnimGraphNode_ModifyBone_18; // 0xe58(0x108)
	None AnimGraphNode_ComponentToLocalSpace_19; // 0xf60(0x20)
	None AnimGraphNode_BlendListByBool_20; // 0xf80(0xa0)
	None AnimGraphNode_SaveCachedPose_18; // 0x1020(0xb8)
	None AnimGraphNode_LocalToComponentSpace_19; // 0x10d8(0x20)
	None AnimGraphNode_UseCachedPose_43; // 0x10f8(0x28)
	None AnimGraphNode_UseCachedPose_42; // 0x1120(0x28)
	None AnimGraphNode_UseCachedPose_41; // 0x1148(0x28)
	None AnimGraphNode_BlendListByBool_19; // 0x1170(0xa0)
	None AnimGraphNode_UseCachedPose_40; // 0x1210(0x28)
	None AnimGraphNode_LocalToComponentSpace_18; // 0x1238(0x20)
	None AnimGraphNode_ModifyBone_17; // 0x1258(0x108)
	None AnimGraphNode_ComponentToLocalSpace_18; // 0x1360(0x20)
	None AnimGraphNode_ModifyBone_16; // 0x1380(0x108)
	None AnimGraphNode_ModifyBone_15; // 0x1488(0x108)
	None AnimGraphNode_ModifyBone_14; // 0x1590(0x108)
	None AnimGraphNode_SaveCachedPose_17; // 0x1698(0xb8)
	None AnimGraphNode_UseCachedPose_39; // 0x1750(0x28)
	None AnimGraphNode_LocalToComponentSpace_17; // 0x1778(0x20)
	None AnimGraphNode_BlendListByBool_18; // 0x1798(0xa0)
	None AnimGraphNode_BlendListByBool_17; // 0x1838(0xa0)
	None AnimGraphNode_UseCachedPose_38; // 0x18d8(0x28)
	None AnimGraphNode_ModifyBone_13; // 0x1900(0x108)
	None AnimGraphNode_BlendListByBool_16; // 0x1a08(0xa0)
	None AnimGraphNode_ComponentToLocalSpace_17; // 0x1aa8(0x20)
	None AnimGraphNode_LocalToComponentSpace_16; // 0x1ac8(0x20)
	None AnimGraphNode_UseCachedPose_37; // 0x1ae8(0x28)
	None AnimGraphNode_ModifyBone_12; // 0x1b10(0x108)
	None AnimGraphNode_ComponentToLocalSpace_16; // 0x1c18(0x20)
	None AnimGraphNode_LocalToComponentSpace_15; // 0x1c38(0x20)
	None AnimGraphNode_ComponentToLocalSpace_15; // 0x1c58(0x20)
	None AnimGraphNode_UseCachedPose_36; // 0x1c78(0x28)
	None AnimGraphNode_LocalToComponentSpace_14; // 0x1ca0(0x20)
	None AnimGraphNode_AnimDynamics_13; // 0x1cc0(0x440)
	None AnimGraphNode_AnimDynamics_12; // 0x2100(0x440)
	None AnimGraphNode_SaveCachedPose_16; // 0x2540(0xb8)
	None AnimGraphNode_ComponentToLocalSpace_14; // 0x25f8(0x20)
	None AnimGraphNode_ModifyBone_11; // 0x2618(0x108)
	None AnimGraphNode_ModifyBone_10; // 0x2720(0x108)
	None AnimGraphNode_ModifyBone_9; // 0x2828(0x108)
	None AnimGraphNode_LocalToComponentSpace_13; // 0x2930(0x20)
	None AnimGraphNode_SubInput; // 0x2950(0x78)
	None AnimGraphNode_Root; // 0x29c8(0x30)
	None AnimGraphNode_UseCachedPose_35; // 0x29f8(0x28)
	None AnimGraphNode_UseCachedPose_34; // 0x2a20(0x28)
	None AnimGraphNode_HandIKRetargeting_3; // 0x2a48(0x120)
	None AnimGraphNode_TwoBoneIK_9; // 0x2b70(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_12; // 0x2d50(0x20)
	None AnimGraphNode_ComponentToLocalSpace_13; // 0x2d70(0x20)
	None AnimGraphNode_SaveCachedPose_15; // 0x2d90(0xb8)
	None AnimGraphNode_BlendListByBool_15; // 0x2e48(0xa0)
	None AnimGraphNode_SaveCachedPose_14; // 0x2ee8(0xb8)
	None AnimGraphNode_TwoBoneIK_8; // 0x2fa0(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_11; // 0x3180(0x20)
	None AnimGraphNode_ComponentToLocalSpace_12; // 0x31a0(0x20)
	None AnimGraphNode_ModifyBone_8; // 0x31c0(0x108)
	None AnimGraphNode_ModifyBone_7; // 0x32c8(0x108)
	None AnimGraphNode_LocalToComponentSpace_10; // 0x33d0(0x20)
	None AnimGraphNode_TwoBoneIK_7; // 0x33f0(0x1e0)
	None AnimGraphNode_ComponentToLocalSpace_11; // 0x35d0(0x20)
	None AnimGraphNode_HandIKRetargeting_2; // 0x35f0(0x120)
	None AnimGraphNode_BlendListByBool_14; // 0x3710(0xa0)
	None AnimGraphNode_UseCachedPose_33; // 0x37b0(0x28)
	None AnimGraphNode_UseCachedPose_32; // 0x37d8(0x28)
	None AnimGraphNode_SaveCachedPose_13; // 0x3800(0xb8)
	None AnimGraphNode_ModifyBone_6; // 0x38b8(0x108)
	None AnimGraphNode_UseCachedPose_31; // 0x39c0(0x28)
	None AnimGraphNode_UseCachedPose_30; // 0x39e8(0x28)
	None AnimGraphNode_LayeredBoneBlend_2; // 0x3a10(0xc0)
	None AnimGraphNode_SequencePlayer_2; // 0x3ad0(0x78)
	None AnimGraphNode_SaveCachedPose_12; // 0x3b48(0xb8)
	None AnimGraphNode_UseCachedPose_29; // 0x3c00(0x28)
	None AnimGraphNode_UseCachedPose_28; // 0x3c28(0x28)
	None AnimGraphNode_LayeredBoneBlend; // 0x3c50(0xc0)
	None AnimGraphNode_SequencePlayer; // 0x3d10(0x78)
	None AnimGraphNode_BlendListByBool_13; // 0x3d88(0xa0)
	None AnimGraphNode_SaveCachedPose_11; // 0x3e28(0xb8)
	None AnimGraphNode_BlendListByEnum; // 0x3ee0(0xb0)
	None AnimGraphNode_UseCachedPose_27; // 0x3f90(0x28)
	None AnimGraphNode_UseCachedPose_26; // 0x3fb8(0x28)
	None AnimGraphNode_UseCachedPose_25; // 0x3fe0(0x28)
	None AnimGraphNode_UseCachedPose_24; // 0x4008(0x28)
	None AnimGraphNode_AnimDynamics_11; // 0x4030(0x440)
	None AnimGraphNode_AnimDynamics_10; // 0x4470(0x440)
	None AnimGraphNode_AnimDynamics_9; // 0x48b0(0x440)
	None AnimGraphNode_AnimDynamics_8; // 0x4cf0(0x440)
	None AnimGraphNode_AnimDynamics_7; // 0x5130(0x440)
	None AnimGraphNode_AnimDynamics_6; // 0x5570(0x440)
	None AnimGraphNode_AnimDynamics_5; // 0x59b0(0x440)
	None AnimGraphNode_ModifyBone_5; // 0x5df0(0x108)
	None AnimGraphNode_HandIKRetargeting; // 0x5ef8(0x120)
	None AnimGraphNode_TwoBoneIK_6; // 0x6020(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_9; // 0x6200(0x20)
	None AnimGraphNode_ComponentToLocalSpace_10; // 0x6220(0x20)
	None AnimGraphNode_SaveCachedPose_10; // 0x6240(0xb8)
	None AnimGraphNode_TwoBoneIK_5; // 0x6300(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_8; // 0x64e0(0x20)
	None AnimGraphNode_ComponentToLocalSpace_9; // 0x6500(0x20)
	None AnimGraphNode_SaveCachedPose_9; // 0x6520(0xb8)
	None AnimGraphNode_UseCachedPose_23; // 0x65d8(0x28)
	None AnimGraphNode_UseCachedPose_22; // 0x6600(0x28)
	None AnimGraphNode_BlendListByBool_12; // 0x6628(0xa0)
	None AnimGraphNode_UseCachedPose_21; // 0x66c8(0x28)
	None AnimGraphNode_BlendListByBool_11; // 0x66f0(0xa0)
	None AnimGraphNode_UseCachedPose_20; // 0x6790(0x28)
	None AnimGraphNode_UseCachedPose_19; // 0x67b8(0x28)
	None AnimGraphNode_LocalToComponentSpace_7; // 0x67e0(0x20)
	None AnimGraphNode_ComponentToLocalSpace_8; // 0x6800(0x20)
	None AnimGraphNode_SaveCachedPose_8; // 0x6820(0xb8)
	None AnimGraphNode_TwoBoneIK_4; // 0x68e0(0x1e0)
	None AnimGraphNode_TwoBoneIK_3; // 0x6ac0(0x1e0)
	None AnimGraphNode_TwoBoneIK_2; // 0x6ca0(0x1e0)
	None AnimGraphNode_TwoBoneIK; // 0x6e80(0x1e0)
	None AnimGraphNode_ModifyBone_4; // 0x7060(0x108)
	None AnimGraphNode_ModifyBone_3; // 0x7168(0x108)
	None AnimGraphNode_ModifyBone_2; // 0x7270(0x108)
	None AnimGraphNode_ModifyBone; // 0x7378(0x108)
	None AnimGraphNode_AnimDynamics_4; // 0x7480(0x440)
	None AnimGraphNode_AnimDynamics_3; // 0x78c0(0x440)
	None AnimGraphNode_KawaiiPhysics_26; // 0x7d00(0x250)
	None AnimGraphNode_KawaiiPhysics_25; // 0x7f50(0x250)
	None AnimGraphNode_KawaiiPhysics_24; // 0x81a0(0x250)
	None AnimGraphNode_KawaiiPhysics_23; // 0x83f0(0x250)
	None AnimGraphNode_KawaiiPhysics_22; // 0x8640(0x250)
	None AnimGraphNode_KawaiiPhysics_21; // 0x8890(0x250)
	None AnimGraphNode_BoneDrivenController_20; // 0x8ae0(0x118)
	None AnimGraphNode_BoneDrivenController_19; // 0x8bf8(0x118)
	None AnimGraphNode_BoneDrivenController_18; // 0x8d10(0x118)
	None AnimGraphNode_BoneDrivenController_17; // 0x8e28(0x118)
	None AnimGraphNode_BoneDrivenController_16; // 0x8f40(0x118)
	None AnimGraphNode_BoneDrivenController_15; // 0x9058(0x118)
	None AnimGraphNode_BoneDrivenController_14; // 0x9170(0x118)
	None AnimGraphNode_BoneDrivenController_13; // 0x9288(0x118)
	None AnimGraphNode_KawaiiPhysics_20; // 0x93a0(0x250)
	None AnimGraphNode_KawaiiPhysics_19; // 0x95f0(0x250)
	None AnimGraphNode_KawaiiPhysics_18; // 0x9840(0x250)
	None AnimGraphNode_KawaiiPhysics_17; // 0x9a90(0x250)
	None AnimGraphNode_KawaiiPhysics_16; // 0x9ce0(0x250)
	None AnimGraphNode_BoneDrivenController_12; // 0x9f30(0x118)
	None AnimGraphNode_BoneDrivenController_11; // 0xa048(0x118)
	None AnimGraphNode_KawaiiPhysics_15; // 0xa160(0x250)
	None AnimGraphNode_BoneDrivenController_10; // 0xa3b0(0x118)
	None AnimGraphNode_BoneDrivenController_9; // 0xa4c8(0x118)
	None AnimGraphNode_BoneDrivenController_8; // 0xa5e0(0x118)
	None AnimGraphNode_BoneDrivenController_7; // 0xa6f8(0x118)
	None AnimGraphNode_BoneDrivenController_6; // 0xa810(0x118)
	None AnimGraphNode_BoneDrivenController_5; // 0xa928(0x118)
	None AnimGraphNode_BoneDrivenController_4; // 0xaa40(0x118)
	None AnimGraphNode_BoneDrivenController_3; // 0xab58(0x118)
	None AnimGraphNode_BoneDrivenController_2; // 0xac70(0x118)
	None AnimGraphNode_BoneDrivenController; // 0xad88(0x118)
	None AnimGraphNode_KawaiiPhysics_14; // 0xaea0(0x250)
	None AnimGraphNode_KawaiiPhysics_13; // 0xb0f0(0x250)
	None AnimGraphNode_KawaiiPhysics_12; // 0xb340(0x250)
	None AnimGraphNode_KawaiiPhysics_11; // 0xb590(0x250)
	None AnimGraphNode_KawaiiPhysics_10; // 0xb7e0(0x250)
	None AnimGraphNode_KawaiiPhysics_9; // 0xba30(0x250)
	None AnimGraphNode_KawaiiPhysics_8; // 0xbc80(0x250)
	None AnimGraphNode_KawaiiPhysics_7; // 0xbed0(0x250)
	None AnimGraphNode_KawaiiPhysics_6; // 0xc120(0x250)
	None AnimGraphNode_KawaiiPhysics_5; // 0xc370(0x250)
	None AnimGraphNode_KawaiiPhysics_4; // 0xc5c0(0x250)
	None AnimGraphNode_KawaiiPhysics_3; // 0xc810(0x250)
	None AnimGraphNode_KawaiiPhysics_2; // 0xca60(0x250)
	None AnimGraphNode_KawaiiPhysics; // 0xccb0(0x250)
	None AnimGraphNode_AnimDynamics_2; // 0xcf00(0x440)
	None AnimGraphNode_AnimDynamics; // 0xd340(0x440)
	None AnimGraphNode_BlendListByBool_10; // 0xd780(0xa0)
	None AnimGraphNode_UseCachedPose_18; // 0xd820(0x28)
	None AnimGraphNode_BlendListByBool_9; // 0xd848(0xa0)
	None AnimGraphNode_UseCachedPose_17; // 0xd8e8(0x28)
	None AnimGraphNode_UseCachedPose_16; // 0xd910(0x28)
	None AnimGraphNode_BlendListByBool_8; // 0xd938(0xa0)
	None AnimGraphNode_ComponentToLocalSpace_7; // 0xd9d8(0x20)
	None AnimGraphNode_UseCachedPose_15; // 0xd9f8(0x28)
	None AnimGraphNode_SaveCachedPose_7; // 0xda20(0xb8)
	None AnimGraphNode_UseCachedPose_14; // 0xdad8(0x28)
	None AnimGraphNode_LocalToComponentSpace_6; // 0xdb00(0x20)
	None AnimGraphNode_BlendListByBool_7; // 0xdb20(0xa0)
	None AnimGraphNode_ComponentToLocalSpace_6; // 0xdbc0(0x20)
	None AnimGraphNode_UseCachedPose_13; // 0xdbe0(0x28)
	None AnimGraphNode_SaveCachedPose_6; // 0xdc08(0xb8)
	None AnimGraphNode_UseCachedPose_12; // 0xdcc0(0x28)
	None AnimGraphNode_LocalToComponentSpace_5; // 0xdce8(0x20)
	None AnimGraphNode_BlendListByBool_6; // 0xdd08(0xa0)
	None AnimGraphNode_ComponentToLocalSpace_5; // 0xdda8(0x20)
	None AnimGraphNode_UseCachedPose_11; // 0xddc8(0x28)
	None AnimGraphNode_SaveCachedPose_5; // 0xddf0(0xb8)
	None AnimGraphNode_BlendListByBool_5; // 0xdea8(0xa0)
	None AnimGraphNode_UseCachedPose_10; // 0xdf48(0x28)
	None AnimGraphNode_UseCachedPose_9; // 0xdf70(0x28)
	None AnimGraphNode_LocalToComponentSpace_4; // 0xdf98(0x20)
	None AnimGraphNode_BlendListByBool_4; // 0xdfb8(0xa0)
	None AnimGraphNode_ComponentToLocalSpace_4; // 0xe058(0x20)
	None AnimGraphNode_UseCachedPose_8; // 0xe078(0x28)
	None AnimGraphNode_SaveCachedPose_4; // 0xe0a0(0xb8)
	None AnimGraphNode_UseCachedPose_7; // 0xe158(0x28)
	None AnimGraphNode_UseCachedPose_6; // 0xe180(0x28)
	None AnimGraphNode_BlendListByBool_3; // 0xe1a8(0xa0)
	None AnimGraphNode_SaveCachedPose_3; // 0xe248(0xb8)
	None AnimGraphNode_LocalToComponentSpace_3; // 0xe300(0x20)
	None AnimGraphNode_ComponentToLocalSpace_3; // 0xe320(0x20)
	None AnimGraphNode_BlendListByBool_2; // 0xe340(0xa0)
	None AnimGraphNode_UseCachedPose_5; // 0xe3e0(0x28)
	None AnimGraphNode_SaveCachedPose_2; // 0xe408(0xb8)
	None AnimGraphNode_UseCachedPose_4; // 0xe4c0(0x28)
	None AnimGraphNode_LocalToComponentSpace_2; // 0xe4e8(0x20)
	None AnimGraphNode_ComponentToLocalSpace_2; // 0xe508(0x20)
	None AnimGraphNode_BlendListByBool; // 0xe528(0xa0)
	None AnimGraphNode_SaveCachedPose; // 0xe5c8(0xb8)
	None AnimGraphNode_UseCachedPose_3; // 0xe680(0x28)
	None AnimGraphNode_UseCachedPose_2; // 0xe6a8(0x28)
	None AnimGraphNode_LocalToComponentSpace; // 0xe6d0(0x20)
	None AnimGraphNode_ComponentToLocalSpace; // 0xe6f0(0x20)
	None AnimGraphNode_UseCachedPose; // 0xe710(0x28)
	None Sections; // 0x58(0x10)
	None Parameter; // 0x68(0x28)
	None SectionStartBehavior; // 0xe0(0x04)
	None SectionEvaluateBehavior; // 0xe4(0x04)
	None SectionEndBehavior; // 0xe8(0x04)
	None AgeUpdateMode; // 0xec(0x01)
	None ChannelsUsed; // 0x90(0x04)
	None NiagaraComponent; // 0x310(0x08)
	None bDestroyOnSystemFinish; // 0x318(0x01)
	None Asset; // 0x4b8(0x08)
	None TickBehavior; // 0x4c0(0x01)
	None OverrideParameters; // 0x4c8(0x108)
	None bForceSolo; // 0x5d0(0x01)
	None bAutoDestroy; // 0x5fc(0x01)
	None bRenderingEnabled; // 0x5fc(0x01)
	None bAutoManageAttachment; // 0x5fc(0x01)
	None bAutoAttachWeldSimulatedBodies; // 0x5fc(0x01)
	None MaxTimeBeforeForceUpdateTransform; // 0x600(0x04)
	None OnSystemFinished; // 0x608(0x10)
	None AutoAttachParent; // 0x618(0x08)
	None AutoAttachSocketName; // 0x620(0x08)
	None AutoAttachLocationRule; // 0x628(0x01)
	None AutoAttachRotationRule; // 0x629(0x01)
	None AutoAttachScaleRule; // 0x62a(0x01)
	None WorldParticleSystemPools; // 0x28(0x50)
	None Submix; // 0x30(0x08)
	None Submix; // 0x30(0x08)
	None Resolution; // 0x38(0x04)
	None ScopeInMilliseconds; // 0x3c(0x04)
	None Resolution; // 0x38(0x04)
	None MinimumFrequency; // 0x3c(0x04)
	None MaximumFrequency; // 0x40(0x04)
	None NoiseFloorDb; // 0x44(0x04)
	None PlayerControllerIndex; // 0x30(0x04)
	None ShaderLUT; // 0x30(0x10)
	None LUTMinTime; // 0x40(0x04)
	None LUTMaxTime; // 0x44(0x04)
	None LUTInvTimeRange; // 0x48(0x04)
	None LUTNumSamplesMinusOne; // 0x4c(0x04)
	None bUseLUT; // 0x50(0x01)
	None RedCurve; // 0x58(0x80)
	None GreenCurve; // 0xd8(0x80)
	None BlueCurve; // 0x158(0x80)
	None AlphaCurve; // 0x1d8(0x80)
	None Seed; // 0x30(0x04)
	None Curve; // 0x58(0x80)
	None CallbackHandlerParameter; // 0x30(0x28)
	None OutputShaderStages; // 0x30(0x50)
	None IterationShaderStages; // 0x80(0x50)
	None NumCellsX; // 0xd0(0x04)
	None NumCellsY; // 0xd4(0x04)
	None NumCellsMaxAxis; // 0xd8(0x04)
	None NumAttributes; // 0xdc(0x04)
	None SetGridFromMaxAxis; // 0xe0(0x01)
	None WorldBBoxSize; // 0xe4(0x08)
	None NumVoxels; // 0xd0(0x0c)
	None VoxelSize; // 0xdc(0x04)
	None SetGridFromVoxelSize; // 0xe0(0x01)
	None WorldBBoxSize; // 0xe4(0x0c)
	None MaxNeighborsPerVoxel; // 0xf0(0x04)
	None EmitterName; // 0x30(0x10)
	None Source; // 0x30(0x08)
	None MeshUserParameter; // 0x38(0x28)
	None SourceComponent; // 0x60(0x08)
	None SkinningMode; // 0x68(0x01)
	None SamplingRegions; // 0x70(0x10)
	None WholeMeshLOD; // 0x80(0x04)
	None FilteredBones; // 0x88(0x10)
	None FilteredSockets; // 0x98(0x10)
	None ExcludeBoneName; // 0xa8(0x08)
	None bExcludeBone; // 0xb0(0x01)
	None Source; // 0x30(0x08)
	None DefaultMesh; // 0x30(0x08)
	None Source; // 0x38(0x08)
	None SourceComponent; // 0x40(0x08)
	None SectionFilter; // 0x48(0x10)
	None Texture; // 0x30(0x08)
	None XCurve; // 0x58(0x80)
	None YCurve; // 0xd8(0x80)
	None XCurve; // 0x58(0x80)
	None YCurve; // 0xd8(0x80)
	None ZCurve; // 0x158(0x80)
	None WCurve; // 0x1d8(0x80)
	None XCurve; // 0x58(0x80)
	None YCurve; // 0xd8(0x80)
	None ZCurve; // 0x158(0x80)
	None Field; // 0x30(0x08)
	None bTileX; // 0x38(0x01)
	None bTileY; // 0x39(0x01)
	None bTileZ; // 0x3a(0x01)
	None Texture; // 0x30(0x08)
	None UpdateFrequency; // 0x28(0x04)
	None CullReaction; // 0x2c(0x04)
	None DetailLevelScalabilitySettings; // 0x30(0x10)
	None SystemScalabilitySettings; // 0x40(0x10)
	None EmitterScalabilitySettings; // 0x50(0x10)
	None bLocalSpace; // 0x28(0x01)
	None bDeterminism; // 0x29(0x01)
	None RandomSeed; // 0x2c(0x04)
	None AllocationMode; // 0x30(0x01)
	None PreAllocationCount; // 0x34(0x04)
	None UpdateScriptProps; // 0x38(0x28)
	None SpawnScriptProps; // 0x60(0x28)
	None EmitterSpawnScriptProps; // 0x88(0x28)
	None EmitterUpdateScriptProps; // 0xb0(0x28)
	None SimTarget; // 0xd8(0x01)
	None FixedBounds; // 0xdc(0x1c)
	None MinDetailLevel; // 0xf8(0x04)
	None MaxDetailLevel; // 0xfc(0x04)
	None GlobalSpawnCountScaleOverrides; // 0x100(0x14)
	None Platforms; // 0x118(0x20)
	None ScalabilityOverrides; // 0x138(0x10)
	None bInterpolatedSpawning; // 0x148(0x01)
	None bFixedBounds; // 0x148(0x01)
	None bUseMinDetailLevel; // 0x148(0x01)
	None bUseMaxDetailLevel; // 0x148(0x01)
	None bOverrideGlobalSpawnCountScale; // 0x148(0x01)
	None bRequiresPersistentIDs; // 0x148(0x01)
	None MaxDeltaTimePerTick; // 0x14c(0x04)
	None DefaultShaderStageIndex; // 0x150(0x04)
	None MaxUpdateIterations; // 0x154(0x04)
	None SpawnStages; // 0x158(0x50)
	None bSimulationStagesEnabled; // 0x1a8(0x01)
	None bDeprecatedShaderStagesEnabled; // 0x1a8(0x01)
	None bLimitDeltaTime; // 0x1a8(0x01)
	None UniqueEmitterName; // 0x1b0(0x10)
	None RendererProperties; // 0x1c0(0x10)
	None EventHandlerScriptProps; // 0x1d0(0x10)
	None SimulationStages; // 0x1e0(0x10)
	None GPUComputeScript; // 0x1f0(0x08)
	None SharedEventGeneratorIds; // 0x1f8(0x10)
	None NumParticles; // 0x28(0x04)
	None SortOrderHint; // 0x28(0x04)
	None bIsEnabled; // 0x2c(0x01)
	None bMotionBlurEnabled; // 0x2d(0x01)
	None bUseInverseSquaredFalloff; // 0x50(0x01)
	None bAffectsTranslucency; // 0x50(0x01)
	None bOverrideRenderingEnabled; // 0x50(0x01)
	None RadiusScale; // 0x54(0x04)
	None ColorAdd; // 0x58(0x0c)
	None LightRenderingEnabledBinding; // 0x68(0x78)
	None LightExponentBinding; // 0xe0(0x78)
	None PositionBinding; // 0x158(0x78)
	None ColorBinding; // 0x1d0(0x78)
	None RadiusBinding; // 0x248(0x78)
	None VolumetricScatteringBinding; // 0x2c0(0x78)
	None ParticleMesh; // 0x50(0x08)
	None SortMode; // 0x58(0x01)
	None bOverrideMaterials; // 0x5c(0x01)
	None bSortOnlyWhenTranslucent; // 0x5c(0x01)
	None OverrideMaterials; // 0x60(0x10)
	None SubImageSize; // 0x70(0x08)
	None bSubImageBlend; // 0x78(0x01)
	None FacingMode; // 0x7c(0x01)
	None bLockedAxisEnable; // 0x80(0x01)
	None LockedAxis; // 0x84(0x0c)
	None LockedAxisSpace; // 0x90(0x01)
	None PositionBinding; // 0x98(0x78)
	None ColorBinding; // 0x110(0x78)
	None VelocityBinding; // 0x188(0x78)
	None MeshOrientationBinding; // 0x200(0x78)
	None ScaleBinding; // 0x278(0x78)
	None SubImageIndexBinding; // 0x2f0(0x78)
	None DynamicMaterialBinding; // 0x368(0x78)
	None DynamicMaterial1Binding; // 0x3e0(0x78)
	None DynamicMaterial2Binding; // 0x458(0x78)
	None DynamicMaterial3Binding; // 0x4d0(0x78)
	None MaterialRandomBinding; // 0x548(0x78)
	None CustomSortingBinding; // 0x5c0(0x78)
	None NormalizedAgeBinding; // 0x638(0x78)
	None CameraOffsetBinding; // 0x6b0(0x78)
	None Collection; // 0x28(0x08)
	None OverridenParameters; // 0x30(0x10)
	None ParameterStorage; // 0x40(0xb8)
	None Namespace; // 0x28(0x08)
	None Parameters; // 0x30(0x10)
	None DefaultInstance; // 0x40(0x08)
	None CompileId; // 0x48(0x10)
	None Scripts; // 0x28(0x10)
	None System; // 0x38(0x08)
	None Param; // 0x28(0x08)
	None Count; // 0x30(0x04)
	None Min; // 0x38(0x04)
	None MAX; // 0x3c(0x04)
	None Min; // 0x38(0x04)
	None MAX; // 0x3c(0x04)
	None Min; // 0x38(0x08)
	None MAX; // 0x40(0x08)
	None Min; // 0x38(0x0c)
	None MAX; // 0x44(0x0c)
	None Min; // 0x40(0x10)
	None MAX; // 0x50(0x10)
	None Min; // 0x38(0x10)
	None MAX; // 0x48(0x10)
	None System; // 0x310(0x08)
	None ResetMode; // 0x318(0x01)
	None PreviewAxisX; // 0x320(0x08)
	None PreviewAxisY; // 0x328(0x08)
	None PreviewClass; // 0x330(0x08)
	None SpacingX; // 0x338(0x04)
	None SpacingY; // 0x33c(0x04)
	None NumX; // 0x340(0x04)
	None NumY; // 0x344(0x04)
	None PreviewComponents; // 0x348(0x10)
	None Material; // 0x50(0x08)
	None MaterialUserParamBinding; // 0x58(0x28)
	None FacingMode; // 0x80(0x01)
	None UV0TilingDistance; // 0x84(0x04)
	None UV0Scale; // 0x88(0x08)
	None UV0Offset; // 0x90(0x08)
	None UV0AgeOffsetMode; // 0x98(0x01)
	None UV1TilingDistance; // 0x9c(0x04)
	None UV1Scale; // 0xa0(0x08)
	None UV1Offset; // 0xa8(0x08)
	None UV1AgeOffsetMode; // 0xb0(0x01)
	None DrawDirection; // 0xb1(0x01)
	None CurveTension; // 0xb4(0x04)
	None TessellationMode; // 0xb8(0x01)
	None TessellationFactor; // 0xbc(0x04)
	None bUseConstantFactor; // 0xc0(0x01)
	None TessellationAngle; // 0xc4(0x04)
	None bScreenSpaceTessellation; // 0xc8(0x01)
	None PositionBinding; // 0xd0(0x78)
	None ColorBinding; // 0x148(0x78)
	None VelocityBinding; // 0x1c0(0x78)
	None NormalizedAgeBinding; // 0x238(0x78)
	None RibbonTwistBinding; // 0x2b0(0x78)
	None RibbonWidthBinding; // 0x328(0x78)
	None RibbonFacingBinding; // 0x3a0(0x78)
	None RibbonIdBinding; // 0x418(0x78)
	None RibbonLinkOrderBinding; // 0x490(0x78)
	None MaterialRandomBinding; // 0x508(0x78)
	None DynamicMaterialBinding; // 0x580(0x78)
	None DynamicMaterial1Binding; // 0x5f8(0x78)
	None DynamicMaterial2Binding; // 0x670(0x78)
	None DynamicMaterial3Binding; // 0x6e8(0x78)
	None Usage; // 0x28(0x01)
	None UsageIndex; // 0x2c(0x04)
	None UsageId; // 0x30(0x10)
	None RapidIterationParameters; // 0x40(0xb8)
	None ScriptExecutionParamStore; // 0xf8(0xd8)
	None ScriptExecutionBoundParameters; // 0x1d0(0x10)
	None CachedScriptVMId; // 0x1e0(0x48)
	None CachedScriptVM; // 0x3d8(0x128)
	None CachedParameterCollectionReferences; // 0x500(0x10)
	None CachedDefaultDataInterfaces; // 0x510(0x10)
	None AdditionalParameterTypes; // 0x38(0x10)
	None AdditionalPayloadTypes; // 0x48(0x10)
	None AdditionalParameterEnums; // 0x58(0x10)
	None DefaultEffectType; // 0x68(0x18)
	None QualityLevels; // 0x80(0x10)
	None DefaultEffectTypePtr; // 0x90(0x08)
	None Script; // 0x28(0x08)
	None SimulationStageName; // 0x30(0x08)
	None IterationSource; // 0x38(0x01)
	None Iterations; // 0x3c(0x04)
	None bSpawnOnly; // 0x40(0x01)
	None DataInterface; // 0x48(0x28)
	None Material; // 0x50(0x08)
	None MaterialUserParamBinding; // 0x58(0x28)
	None Alignment; // 0x80(0x01)
	None FacingMode; // 0x81(0x01)
	None PivotInUVSpace; // 0x84(0x08)
	None SortMode; // 0x8c(0x01)
	None SubImageSize; // 0x90(0x08)
	None bSubImageBlend; // 0x98(0x01)
	None bRemoveHMDRollInVR; // 0x98(0x01)
	None bSortOnlyWhenTranslucent; // 0x98(0x01)
	None MinFacingCameraBlendDistance; // 0x9c(0x04)
	None MaxFacingCameraBlendDistance; // 0xa0(0x04)
	None PositionBinding; // 0xa8(0x78)
	None ColorBinding; // 0x120(0x78)
	None VelocityBinding; // 0x198(0x78)
	None SpriteRotationBinding; // 0x210(0x78)
	None SpriteSizeBinding; // 0x288(0x78)
	None SpriteFacingBinding; // 0x300(0x78)
	None SpriteAlignmentBinding; // 0x378(0x78)
	None SubImageIndexBinding; // 0x3f0(0x78)
	None DynamicMaterialBinding; // 0x468(0x78)
	None DynamicMaterial1Binding; // 0x4e0(0x78)
	None DynamicMaterial2Binding; // 0x558(0x78)
	None DynamicMaterial3Binding; // 0x5d0(0x78)
	None CameraOffsetBinding; // 0x648(0x78)
	None UVScaleBinding; // 0x6c0(0x78)
	None MaterialRandomBinding; // 0x738(0x78)
	None CustomSortingBinding; // 0x7b0(0x78)
	None NormalizedAgeBinding; // 0x828(0x78)
	None bDumpDebugSystemInfo; // 0x31(0x01)
	None bDumpDebugEmitterInfo; // 0x32(0x01)
	None bFixedBounds; // 0x34(0x01)
	None EffectType; // 0x38(0x08)
	None bOverrideScalabilitySettings; // 0x40(0x01)
	None ScalabilityOverrides; // 0x48(0x10)
	None SystemScalabilityOverrides; // 0x58(0x10)
	None EmitterHandles; // 0x68(0x10)
	None ParameterCollectionOverrides; // 0x78(0x10)
	None SystemSpawnScript; // 0x88(0x08)
	None SystemUpdateScript; // 0x90(0x08)
	None SystemCompiledData; // 0xa8(0x258)
	None ExposedParameters; // 0x300(0x108)
	None FixedBounds; // 0x408(0x1c)
	None bAutoDeactivate; // 0x424(0x01)
	None WarmupTime; // 0x428(0x04)
	None WarmupTickCount; // 0x42c(0x04)
	None WarmupTickDelta; // 0x430(0x04)
	None bHasSystemScriptDIsWithPerInstanceData; // 0x434(0x01)
	None UserDINamesReadInSystemScripts; // 0x438(0x10)
	None UberGraphFrame; // 0x1360(0x08)
	None Anim_Material_Get; // 0x1368(0x08)
	None Anim_Material_Hover; // 0x1370(0x08)
	None Anim_Upgrade; // 0x1378(0x08)
	None Anim_Progress; // 0x1380(0x08)
	None Abillity; // 0x1388(0x08)
	None AbillityBG; // 0x1390(0x08)
	None AbillityValue; // 0x1398(0x08)
	None Bg; // 0x13a0(0x08)
	None Bg_3; // 0x13a8(0x08)
	None BorderBG; // 0x13b0(0x08)
	None BorderBG_3; // 0x13b8(0x08)
	None btn_HelmetTree; // 0x13c0(0x08)
	None ChoiceBG; // 0x13c8(0x08)
	None ChoiceBG_3; // 0x13d0(0x08)
	None DefenseBG; // 0x13d8(0x08)
	None DefenseBG_3; // 0x13e0(0x08)
	None DurabilityBar; // 0x13e8(0x08)
	None DurabilityBar_3; // 0x13f0(0x08)
	None EmptyBG; // 0x13f8(0x08)
	None EmptyBG_3; // 0x1400(0x08)
	None Image; // 0x1408(0x08)
	None Image_197; // 0x1410(0x08)
	None Image_234; // 0x1418(0x08)
	None Image_279; // 0x1420(0x08)
	None Image_491; // 0x1428(0x08)
	None Image_682; // 0x1430(0x08)
	None ItemImage; // 0x1438(0x08)
	None ItemImage_3; // 0x1440(0x08)
	None OverBG; // 0x1448(0x08)
	None OverBG_3; // 0x1450(0x08)
	None Overlay_1; // 0x1458(0x08)
	None UW-Inventory_MaterialIconSlot; // 0x1460(0x08)
	None UW-StatupWidget; // 0x1468(0x08)
	None WidgetSwitcher_3; // 0x1470(0x08)
	None WearableItemType; // 0x1478(0x01)
	None IsDefense; // 0x1479(0x01)
	None HoverWidget; // 0x1480(0x08)
	None HoverOwnerWidget; // 0x1488(0x08)
	None SwitcherIndex; // 0x1490(0x04)
	None UberGraphFrame; // 0x398(0x08)
	None TextureScale; // 0x3a0(0x04)
	None BurnArea; // 0x3a4(0x04)
	None Signature; // 0x28(0x10)
	None EvalOptions; // 0x50(0x04)
	None bIsEvalDisabled; // 0x55(0x01)
	None EvalOptions; // 0x50(0x02)
	None Easing; // 0x58(0x38)
	None SectionRange; // 0x90(0x10)
	None PreRollFrames; // 0xa0(0x04)
	None PostRollFrames; // 0xa4(0x04)
	None rowIndex; // 0xa8(0x04)
	None OverlapPriority; // 0xac(0x04)
	None bIsActive; // 0xb0(0x01)
	None bIsLocked; // 0xb0(0x01)
	None StartTime; // 0xb4(0x04)
	None EndTime; // 0xb8(0x04)
	None PrerollTime; // 0xbc(0x04)
	None PostrollTime; // 0xc0(0x04)
	None bIsInfinite; // 0xc4(0x01)
	None bSupportsInfiniteRange; // 0xc8(0x01)
	None BlendType; // 0xc9(0x02)
	None PrecompiledEvaluationTemplate; // 0x50(0x2f0)
	None DefaultCompletionMode; // 0x340(0x01)
	None bParentContextsAreSignificant; // 0x341(0x01)
	None bPlayableDirectly; // 0x342(0x01)
	None OnPlay; // 0x408(0x10)
	None OnPlayReverse; // 0x418(0x10)
	None OnStop; // 0x428(0x10)
	None OnPause; // 0x438(0x10)
	None OnFinished; // 0x448(0x10)
	None status; // 0x458(0x01)
	None bReversePlayback; // 0x45c(0x01)
	None Sequence; // 0x460(0x08)
	None StartTime; // 0x468(0x04)
	None DurationFrames; // 0x46c(0x04)
	None CurrentNumLoops; // 0x470(0x04)
	None PlaybackSettings; // 0x488(0x14)
	None RootTemplateInstance; // 0x4a0(0x320)
	None NetSyncProps; // 0x828(0x10)
	None PlaybackClient; // 0x838(0x10)
	None Parameters; // 0xe0(0x24)
	None StartOffset; // 0x104(0x04)
	None TimeScale; // 0x108(0x04)
	None PrerollTime; // 0x10c(0x04)
	None SubSequence; // 0x110(0x08)
	None ActorToRecord; // 0x118(0x1c)
	None TargetSequenceName; // 0x138(0x10)
	None TargetPathToRecordTo; // 0x148(0x10)
	None Sections; // 0x58(0x10)
	None Spawnables; // 0x50(0x10)
	None Possessables; // 0x60(0x10)
	None ObjectBindings; // 0x70(0x10)
	None BindingGroups; // 0x80(0x50)
	None MasterTracks; // 0xd0(0x10)
	None CameraCutTrack; // 0xe0(0x08)
	None SelectionRange; // 0xe8(0x10)
	None PlaybackRange; // 0xf8(0x10)
	None TickResolution; // 0x108(0x08)
	None DisplayRate; // 0x110(0x08)
	None EvaluationType; // 0x118(0x01)
	None ClockSource; // 0x119(0x01)
	None CustomClockSourcePath; // 0x120(0x18)
	None MarkedFrames; // 0x138(0x10)
	None BindingData; // 0x28(0x10)
	None Type; // 0x30(0x01)
	None Curve; // 0x30(0x08)
	None FolderName; // 0x28(0x08)
	None ChildFolders; // 0x30(0x10)
	None ChildMasterTracks; // 0x40(0x10)
	None ChildObjectBindingStrings; // 0x50(0x10)
	None bHighPassFilter; // 0x58(0x01)
	None SectionArray; // 0x60(0x10)
	None MovieScene; // 0x348(0x08)
	None SectionArray; // 0x68(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Image_92; // 0x250(0x08)
	None Image_253; // 0x258(0x08)
	None Image_774; // 0x260(0x08)
	None PerkInfo; // 0x268(0x2c)
	None PerkData; // 0x298(0xe0)
	None IconBrush; // 0x378(0x88)
	None Popup; // 0x400(0x08)
	None Template; // 0x38(0x08)
	None LocationOffset; // 0x40(0x0c)
	None RotationOffset; // 0x4c(0x0c)
	None Scale; // 0x58(0x0c)
	None Attached; // 0x80(0x01)
	None SocketName; // 0x84(0x08)
	None Template; // 0x30(0x08)
	None SocketName; // 0x38(0x08)
	None LocationOffset; // 0x40(0x0c)
	None RotationOffset; // 0x4c(0x0c)
	None bDestroyAtEnd; // 0x58(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None IconImage; // 0x250(0x08)
	None Hovered; // 0x258(0x10)
	None Unhovered; // 0x268(0x10)
	None Pressed; // 0x278(0x10)
	None SmartPingComponent; // 0x288(0x08)
	None Index; // 0x290(0x04)
	None TintColorToUse; // 0x294(0x10)
	None Found Setting; // 0x2a4(0x01)
	None Settings; // 0x2a8(0xb8)
	None TableID; // 0x360(0x08)
	None Image; // 0x368(0x28)
	None UberGraphFrame; // 0x248(0x08)
	None HorizontalBox_Rarity; // 0x250(0x08)
	None HorizontalBox_Rarity_NotOwn; // 0x258(0x08)
	None Image_310; // 0x260(0x08)
	None Image_Weapon_6Grade_bg; // 0x268(0x08)
	None Img_Icon; // 0x270(0x08)
	None RetainerBox_2; // 0x278(0x08)
	None T_CurrentCount; // 0x280(0x08)
	None T_Level; // 0x288(0x08)
	None T_MaxCount; // 0x290(0x08)
	None WidgetSwitcher_Rarity; // 0x298(0x08)
	None ItemWeaponID; // 0x2a0(0x04)
	None WeaponInfo; // 0x2a8(0xb30)
	None WeaponItemInfo; // 0xdd8(0x98)
	None CurrentCount; // 0xe70(0x04)
	None InitialState; // 0x348(0x01)
	None ObstructionRefreshInterval; // 0x34c(0x04)
	None ObstructionCollisionChannel; // 0x350(0x01)
	None ShortID; // 0x28(0x04)
	None UserData; // 0x30(0x10)
	None AkAudioEvent; // 0x310(0x08)
	None AkComponent; // 0x318(0x08)
	None StopWhenOwnerIsDestroyed; // 0x320(0x01)
	None AutoPost; // 0x321(0x01)
	None CommonSettings; // 0x28(0x68)
	None CommunicationSettings; // 0x90(0x28)
	None AdvancedSettings; // 0xb8(0x40)
	None CachedHash; // 0x28(0x04)
	None MediaList; // 0x60(0x10)
	None CurrentAssetData; // 0x28(0x08)
	None PlatformAssetData; // 0x40(0x08)
	None AutoLoad; // 0x50(0x01)
	None LocalizedPlatformAssetDataMap; // 0x58(0x50)
	None LinkedAkEvents; // 0xa8(0x50)
	None CurrentLocalizedPlatformAssetData; // 0xf8(0x08)
	None GroupValue; // 0x28(0x28)
	None DefaultGroupValue; // 0x50(0x08)
	None MediaList; // 0x58(0x10)
	None Children; // 0x68(0x10)
	None SwitchContainers; // 0x70(0x10)
	None DefaultGroupValue; // 0x80(0x08)
	None MaxAttenuationRadius; // 0x88(0x04)
	None IsInfinite; // 0x8c(0x01)
	None MinimumDuration; // 0x90(0x04)
	None MaximumDuration; // 0x94(0x04)
	None LocalizedMedia; // 0x98(0x50)
	None PostedEvents; // 0xe8(0x50)
	None UserDefinedSends; // 0x138(0x50)
	None PostedTriggers; // 0x188(0x50)
	None GroupValues; // 0x1d8(0x50)
	None LocalizedPlatformAssetDataMap; // 0x50(0x50)
	None RequiredBank; // 0xa0(0x08)
	None CurrentLocalizedPlatformData; // 0xb0(0x08)
	None MaxAttenuationRadius; // 0xb8(0x04)
	None IsInfinite; // 0xbc(0x01)
	None MinimumDuration; // 0xc0(0x04)
	None MaximumDuration; // 0xc4(0x04)
	None AkAudioEvent; // 0x238(0x08)
	None EventName; // 0x240(0x10)
	None bAutoRegisterWithWwise; // 0x250(0x01)
	None bUseSpatialAudio; // 0x258(0x01)
	None OcclusionCollisionChannel; // 0x260(0x01)
	None EnableSpotReflectors; // 0x264(0x01)
	None EarlyReflectionAuxBus; // 0x268(0x08)
	None EarlyReflectionAuxBusName; // 0x270(0x10)
	None EarlyReflectionOrder; // 0x280(0x04)
	None EarlyReflectionBusSendGain; // 0x284(0x04)
	None EarlyReflectionMaxPathLength; // 0x288(0x04)
	None roomReverbAuxBusGain; // 0x28c(0x04)
	None diffractionMaxEdges; // 0x290(0x04)
	None diffractionMaxPaths; // 0x294(0x04)
	None diffractionMaxPathLength; // 0x298(0x04)
	None DrawFirstOrderReflections; // 0x29c(0x01)
	None DrawSecondOrderReflections; // 0x29c(0x01)
	None DrawHigherOrderReflections; // 0x29c(0x01)
	None DrawDiffraction; // 0x29c(0x01)
	None StopWhenOwnerDestroyed; // 0x2a0(0x01)
	None RoomIterationInterval; // 0x2a4(0x04)
	None AttenuationScalingFactor; // 0x2a8(0x04)
	None OcclusionRefreshInterval; // 0x2ac(0x04)
	None bUseReverbVolumes; // 0x2b0(0x01)
	None Listeners; // 0x3a0(0x50)
	None Emitters; // 0x3f0(0x50)
	None RequiredBank; // 0x50(0x08)
	None CheckedState; // 0x4d0(0x01)
	None CheckedStateDelegate; // 0x4d4(0x10)
	None WidgetStyle; // 0x4e8(0x580)
	None HorizontalAlignment; // 0xa68(0x01)
	None IsFocusable; // 0xa69(0x01)
	None ThePropertyToControl; // 0xa70(0x10)
	None ItemToControl; // 0xa80(0x40)
	None AkOnCheckStateChanged; // 0xac0(0x10)
	None OnItemDropped; // 0xad0(0x10)
	None OnPropertyDropped; // 0xae0(0x10)
	None UnrealFolderPath; // 0x40(0x10)
	None WwiseFolderPath; // 0x50(0x10)
	None AkComponent; // 0x28(0x08)
	None PlayingID; // 0x30(0x04)
	None EventID; // 0x34(0x04)
	None Identifier; // 0x38(0x04)
	None Position; // 0x3c(0x04)
	None Label; // 0x40(0x10)
	None Duration; // 0x38(0x04)
	None EstimatedDuration; // 0x3c(0x04)
	None AudioNodeID; // 0x40(0x04)
	None MediaID; // 0x44(0x04)
	None bStreaming; // 0x48(0x01)
	None PlayingID; // 0x30(0x04)
	None SegmentInfo; // 0x34(0x24)
	None MusicSyncType; // 0x58(0x01)
	None UserCueName; // 0x60(0x10)
	None MeshType; // 0x238(0x01)
	None LOD; // 0x23c(0x04)
	None WeldingThreshold; // 0x240(0x04)
	None StaticMeshSurfaceOverride; // 0x248(0x50)
	None CollisionMeshSurfaceOverride; // 0x298(0x10)
	None bEnableDiffraction; // 0x2a8(0x01)
	None bEnableDiffractionOnBoundaryEdges; // 0x2a8(0x01)
	None AssociatedRoom; // 0x2b0(0x08)
	None GeometryData; // 0x2c8(0x50)
	None MediaDependencies; // 0x40(0x10)
	None GroupShortID; // 0x50(0x04)
	None CommonSettings; // 0x28(0x68)
	None CommunicationSettings; // 0x90(0x28)
	None AdvancedSettings; // 0xb8(0x40)
	None PluginInfos; // 0x70(0x10)
	None AvailableAudioCultures; // 0x50(0x10)
	None DefaultLanguage; // 0x60(0x10)
	None CommonSettings; // 0x28(0x68)
	None AudioSession; // 0x90(0x0c)
	None CommunicationSettings; // 0xa0(0x28)
	None AdvancedSettings; // 0xc8(0x34)
	None OnSelectionChanged; // 0x108(0x10)
	None OnPropertyDragged; // 0x118(0x10)
	None OnSelectionChanged; // 0x108(0x10)
	None OnPropertyDragged; // 0x118(0x10)
	None bEnable; // 0x238(0x01)
	None AuxBus; // 0x240(0x08)
	None AuxBusName; // 0x248(0x10)
	None SendLevel; // 0x258(0x04)
	None FadeRate; // 0x25c(0x04)
	None Priority; // 0x260(0x04)
	None NextLowerPriorityComponent; // 0x268(0x08)
	None CommonSettings; // 0x28(0x68)
	None CommunicationSettings; // 0x90(0x28)
	None AdvancedSettings; // 0xb8(0x38)
	None CommonSettings; // 0x28(0x68)
	None CommunicationSettings; // 0x90(0x28)
	None AdvancedSettings; // 0xb8(0x38)
	None CommonSettings; // 0x28(0x68)
	None CommunicationSettings; // 0x90(0x28)
	None AdvancedSettings; // 0xb8(0x38)
	None IsStreamed; // 0x28(0x01)
	None UseDeviceMemory; // 0x29(0x01)
	None ID; // 0x28(0x04)
	None AutoLoad; // 0x2c(0x01)
	None UserData; // 0x30(0x10)
	None CurrentMediaAssetData; // 0x40(0x08)
	None CommonSettings; // 0x28(0x60)
	None CommunicationSettings; // 0x88(0x28)
	None AdvancedSettings; // 0xb0(0x40)
	None bEnabled; // 0x348(0x01)
	None AuxBus; // 0x350(0x08)
	None AuxBusName; // 0x358(0x10)
	None SendLevel; // 0x368(0x04)
	None FadeRate; // 0x36c(0x04)
	None Priority; // 0x370(0x04)
	None LateReverbComponent; // 0x378(0x08)
	None bEnable; // 0x258(0x01)
	None NextLowerPriorityComponent; // 0x260(0x08)
	None Priority; // 0x268(0x04)
	None WallOcclusion; // 0x26c(0x04)
	None AuxSendLevel; // 0x270(0x04)
	None AutoPost; // 0x274(0x01)
	None MaxSimultaneousReverbVolumes; // 0x28(0x01)
	None WwiseProjectPath; // 0x30(0x10)
	None WwiseSoundDataFolder; // 0x40(0x10)
	None bAutoConnectToWAAPI; // 0x50(0x01)
	None DefaultOcclusionCollisionChannel; // 0x51(0x01)
	None AkGeometryMap; // 0x58(0x50)
	None SplitSwitchContainerMedia; // 0xa8(0x01)
	None SplitMediaPerFolder; // 0xa9(0x01)
	None UseEventBasedPackaging; // 0xaa(0x01)
	None EnableAutomaticAssetSynchronization; // 0xab(0x01)
	None ComponentClass; // 0xb0(0x28)
	None CommandletCommitMessage; // 0xd8(0x10)
	None UnrealCultureToWwiseCulture; // 0xe8(0x50)
	None AskedToUseNewAssetManagement; // 0x138(0x01)
	None bEnableMultiCoreRendering; // 0x139(0x01)
	None MigratedEnableMultiCoreRendering; // 0x13a(0x01)
	None FixupRedirectorsDuringMigration; // 0x13b(0x01)
	None WwiseWindowsInstallationPath; // 0x140(0x10)
	None WwiseMacInstallationPath; // 0x150(0x10)
	None WwiseProjectPath; // 0x28(0x10)
	None WwiseWindowsInstallationPath; // 0x38(0x10)
	None WwiseMacInstallationPath; // 0x48(0x10)
	None EnableAutomaticAssetSynchronization; // 0x58(0x01)
	None WaapiIPAddress; // 0x60(0x10)
	None WaapiPort; // 0x70(0x04)
	None bAutoConnectToWAAPI; // 0x74(0x01)
	None AutoSyncSelection; // 0x75(0x01)
	None SuppressWwiseProjectPathWarnings; // 0x76(0x01)
	None SoundDataGenerationSkipLanguage; // 0x77(0x01)
	None Value; // 0x108(0x04)
	None ValueDelegate; // 0x10c(0x10)
	None WidgetStyle; // 0x120(0x340)
	None Orientation; // 0x460(0x01)
	None SliderBarColor; // 0x464(0x10)
	None SliderHandleColor; // 0x474(0x10)
	None IndentHandle; // 0x484(0x01)
	None Locked; // 0x485(0x01)
	None StepSize; // 0x488(0x04)
	None IsFocusable; // 0x48c(0x01)
	None ThePropertyToControl; // 0x490(0x10)
	None ItemToControl; // 0x4a0(0x40)
	None OnValueChanged; // 0x4e0(0x10)
	None OnItemDropped; // 0x4f0(0x10)
	None OnPropertyDropped; // 0x500(0x10)
	None SurfaceReflectorSet; // 0x348(0x08)
	None LateReverb; // 0x350(0x08)
	None Room; // 0x358(0x08)
	None EarlyReflectionAuxBus; // 0x310(0x08)
	None EarlyReflectionAuxBusName; // 0x318(0x10)
	None AcousticTexture; // 0x328(0x08)
	None DistanceScalingFactor; // 0x330(0x04)
	None Level; // 0x334(0x04)
	None bEnableSurfaceReflectors; // 0x238(0x01)
	None AcousticPolys; // 0x240(0x10)
	None bEnableDiffraction; // 0x250(0x01)
	None bEnableDiffractionOnBoundaryEdges; // 0x250(0x01)
	None AssociatedRoom; // 0x258(0x08)
	None CommonSettings; // 0x28(0x68)
	None CommunicationSettings; // 0x90(0x28)
	None AdvancedSettings; // 0xb8(0x38)
	None CommonSettings; // 0x28(0x68)
	None AudioSession; // 0x90(0x0c)
	None CommunicationSettings; // 0xa0(0x28)
	None AdvancedSettings; // 0xc8(0x34)
	None CommonSettings; // 0x28(0x68)
	None CommunicationSettings; // 0x90(0x28)
	None AdvancedSettings; // 0xb8(0x40)
	None OnSelectionChanged; // 0x108(0x10)
	None OnItemDragged; // 0x118(0x10)
	None OnSelectionChanged; // 0x108(0x10)
	None OnItemDragged; // 0x118(0x10)
	None CommonSettings; // 0x28(0x60)
	None ApuHeapSettings; // 0x88(0x08)
	None CommunicationSettings; // 0x90(0x28)
	None AdvancedSettings; // 0xb8(0x3c)
	None Events; // 0x90(0x10)
	None bContinueEventOnMatineeEnd; // 0xa0(0x01)
	None Param; // 0x90(0x10)
	None bPlayOnReverse; // 0xa0(0x01)
	None bContinueRTPCOnMatineeEnd; // 0xa0(0x01)
	None LastUpdatePosition; // 0x28(0x04)
	None LastUpdatePosition; // 0x28(0x04)
	None Event; // 0x120(0x08)
	None RetriggerEvent; // 0x128(0x01)
	None ScrubTailLengthMs; // 0x12c(0x04)
	None StopAtSectionEnd; // 0x130(0x01)
	None EventName; // 0x138(0x10)
	None MaxSourceDuration; // 0x168(0x04)
	None MaxDurationSourceID; // 0x170(0x10)
	None Sections; // 0x58(0x10)
	None bIsAMasterTrack; // 0x68(0x01)
	None RTPC; // 0xe0(0x08)
	None Name; // 0xe8(0x10)
	None FloatCurve; // 0xf8(0x80)
	None FloatChannelSerializationHelper; // 0x178(0x30)
	None RTPCChannel; // 0x1a8(0xa0)
	None Completed; // 0x30(0x10)
	None Completed; // 0x30(0x10)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None BTN-Menu04; // 0x3f0(0x08)
	None BTN-Menu05; // 0x3f8(0x08)
	None CP-SlotInfo; // 0x400(0x08)
	None IMG-BG; // 0x408(0x08)
	None IMG-BG-Border; // 0x410(0x08)
	None IMG-Item; // 0x418(0x08)
	None IMG-Mask; // 0x420(0x08)
	None IMG-Over; // 0x428(0x08)
	None IMG-Over-Border; // 0x430(0x08)
	None Menu02; // 0x438(0x08)
	None Menu03; // 0x440(0x08)
	None Menu04; // 0x448(0x08)
	None Menu05; // 0x450(0x08)
	None Overlay_Mask; // 0x458(0x08)
	None TXT-Count; // 0x460(0x08)
	None TXT-ItemName; // 0x468(0x08)
	None TXT-Menu01; // 0x470(0x08)
	None TXT-Menu02; // 0x478(0x08)
	None TXT-Menu03; // 0x480(0x08)
	None TXT-Menu04; // 0x488(0x08)
	None TXT-Menu05; // 0x490(0x08)
	None TXT-TotalWeight; // 0x498(0x08)
	None TXT-Weight; // 0x4a0(0x08)
	None UberGraphFrame; // 0x2e8(0x08)
	None Anim_Healing; // 0x2f0(0x08)
	None HorizontalBox_Health; // 0x2f8(0x08)
	None Image_eager; // 0x300(0x08)
	None SizeBox_main; // 0x308(0x08)
	None Curve_ProgressMaxSizeRatio; // 0x310(0x08)
	None DefaultSlotSize; // 0x318(0x04)
	None MaxHealthSize; // 0x31c(0x04)
	None CurrentHealthSize; // 0x320(0x04)
	None CurrentMaxHealth; // 0x324(0x04)
	None Settings; // 0x28(0x1b0)
	None Settings; // 0x28(0x1c0)
	None ColorCasterSettings; // 0x28(0x50)
	None NormalCasterSettings; // 0x28(0x50)
	None Settings; // 0x28(0x230)
	None Settings; // 0x28(0x1c0)
	None Settings; // 0x28(0x1b0)
	None OpacityCasterSettings; // 0x28(0x48)
	None DisplacementCasterSettings; // 0x28(0x58)
	None AmbientOcclusionCasterSettings; // 0x28(0x58)
	None GeometryDataCasterSettings; // 0x30(0x90)
	None VertexColorCasterSettings; // 0x28(0x60)
	None UberGraphFrame; // 0x720(0x08)
	None BP-HUDInteractionComponentBase; // 0x728(0x08)
	None EventDispatcher_PlayLobbySound; // 0x730(0x10)
	None EventDispatcher_StopLobbySound; // 0x740(0x10)
	None MediaSoundComponent; // 0x750(0x08)
	None OperationMessageWidget; // 0x758(0x08)
	None CurrentSceneType; // 0x760(0x01)
	None LobbyWidgetRef; // 0x768(0x08)
	None PhysicsAsset; // 0x48(0x08)
	None ClothConfigs; // 0x50(0x50)
	None ClothSharedSimConfig; // 0xa0(0x08)
	None ClothSimConfig; // 0xa8(0x08)
	None ChaosClothSimConfig; // 0xb0(0x08)
	None ClothLODData; // 0xb8(0x10)
	None LODData; // 0xc8(0x10)
	None LodMap; // 0xd8(0x10)
	None UsedBoneNames; // 0xe8(0x10)
	None UsedBoneIndices; // 0xf8(0x10)
	None ReferenceBoneIndex; // 0x108(0x04)
	None CustomData; // 0x110(0x08)
	None ClothConfig; // 0x118(0xd4)
	None PhysicalMeshData; // 0x28(0x08)
	None ClothPhysicalMeshData; // 0x30(0xf8)
	None CollisionData; // 0x128(0x40)
	None UberGraphFrame; // 0x298(0x08)
	None ButtomButtonWidget; // 0x2a0(0x08)
	None Image_154; // 0x2a8(0x08)
	None Overlay_1; // 0x2b0(0x08)
	None ScrollBox_55; // 0x2b8(0x08)
	None UniformGridPanel_119; // 0x2c0(0x08)
	None Begin; // 0x2c8(0x01)
	None End; // 0x2c9(0x01)
	None PreSubType; // 0x2ca(0x01)
	None EventDispatcher_KeyNotiMessage; // 0x2d0(0x10)
	None ScrollBarTimer; // 0x2e0(0x08)
	None List; // 0x2e8(0x50)
	None SubTypeSort; // 0x338(0x10)
	None TempCount; // 0x348(0x04)
	None Hot; // 0x350(0x50)
	None Size; // 0x3a0(0x04)
	None Offset; // 0x3a8(0x50)
	None StaticMeshComponent; // 0x310(0x08)
	None Standins; // 0x28(0x10)
	None UberGraphFrame; // 0x7f0(0x08)
	None TextureScale; // 0x7f8(0x04)
	None CollisionSize; // 0x7fc(0x04)
	None ImportedFilePath; // 0x28(0x10)
	None AssetGuid; // 0x38(0x10)
	None Vertices; // 0x28(0x10)
	None Normals; // 0x38(0x10)
	None Indices; // 0x48(0x10)
	None InverseMasses; // 0x58(0x10)
	None BoneData; // 0x68(0x10)
	None NumFixedVerts; // 0x78(0x04)
	None MaxBoneWeights; // 0x7c(0x04)
	None SelfCollisionIndices; // 0x80(0x10)
	None UberGraphFrame; // 0x270(0x08)
	None BT_PlayerName; // 0x278(0x08)
	None PB_HP; // 0x280(0x08)
	None T_PlayerName; // 0x288(0x08)
	None T_PlayerNameHighlight; // 0x290(0x08)
	None T_SortInfo; // 0x298(0x08)
	None bIsTargetPawn; // 0x2a0(0x01)
	None bIsAlive; // 0x2a1(0x01)
	None EnableDLSSInEditorViewportsOverride; // 0x28(0x01)
	None EnableScreenpercentageManipulationInDLSSEditorViewportsOverride; // 0x29(0x01)
	None EnableDLSSInPlayInEditorViewportsOverride; // 0x2a(0x01)
	None bShowDLSSIncompatiblePluginsToolsWarnings; // 0x2b(0x01)
	None ShowDLSSSDebugOnScreenMessages; // 0x2c(0x01)
	None bEnableDLSSD3D12; // 0x28(0x01)
	None bEnableDLSSD3D11; // 0x29(0x01)
	None bEnableDLSSVulkan; // 0x2a(0x01)
	None bEnableDLSSInEditorViewports; // 0x2b(0x01)
	None bEnableScreenpercentageManipulationInDLSSEditorViewports; // 0x2c(0x01)
	None bEnableDLSSInPlayInEditorViewports; // 0x2d(0x01)
	None bShowDLSSSDebugOnScreenMessages; // 0x2e(0x01)
	None GenericDLSSBinaryPath; // 0x30(0x10)
	None bGenericDLSSBinaryExists; // 0x40(0x01)
	None NVIDIANGXApplicationId; // 0x44(0x04)
	None CustomDLSSBinaryPath; // 0x48(0x10)
	None bCustomDLSSBinaryExists; // 0x58(0x01)
	None InstanceName; // 0x30(0x08)
	None ResourceOverlapPolicy; // 0x3a(0x01)
	None ChildTask; // 0x60(0x08)
	None SUCCESS; // 0x68(0x10)
	None DidNotSpawn; // 0x78(0x10)
	None ClassToSpawn; // 0xa0(0x08)
	None OnFinished; // 0x68(0x10)
	None OnTimeExpired; // 0x78(0x10)
	None OnFinish; // 0x68(0x10)
	None ManualResourceID; // 0x28(0x04)
	None AutoResourceID; // 0x2c(0x01)
	None bManuallySetID; // 0x30(0x01)
	None bIsNetDirty; // 0xbc(0x01)
	None SimulatedTasks; // 0xc0(0x10)
	None TaskPriorityQueue; // 0xd0(0x10)
	None TickingTasks; // 0xf0(0x10)
	None KnownTasks; // 0x100(0x10)
	None OnClaimedResourcesChange; // 0x110(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None CanvasPanel_1; // 0x250(0x08)
	None Image_1; // 0x258(0x08)
	None NewVar_1; // 0x260(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None NewAnimation_2; // 0x250(0x08)
	None BackgroundBlur_1; // 0x258(0x08)
	None Blur; // 0x260(0x08)
	None CanvasPanel_1; // 0x268(0x08)
	None Focus; // 0x270(0x08)
	None FocusPanel; // 0x278(0x08)
	None Lobby; // 0x280(0x08)
	None UW-ArmoryWidget; // 0x288(0x08)
	None UW-CustomizedCharacter; // 0x290(0x08)
	None UW-Exit_Popup; // 0x298(0x08)
	None UW-Lobby_ArmoryMain; // 0x2a0(0x08)
	None UW-ReplayListWidget; // 0x2a8(0x08)
	None UW-Volume; // 0x2b0(0x08)
	None NormalTextColor; // 0x2b8(0x28)
	None HoverTextColor; // 0x2e0(0x28)
	None LobbyWidgetRef; // 0x308(0x08)
	None NormalSelectedTextColor; // 0x310(0x28)
	None HoverSelectedTextColor; // 0x338(0x28)
	None NormalOptionButtonColor; // 0x360(0x10)
	None HoverOptionButtonColor; // 0x370(0x10)
	None MatchingPopupTimerHandle; // 0x380(0x08)
	None PopupKey; // 0x388(0x18)
	None bExitPopupOpen; // 0x3a0(0x01)
	None bOptionPopupOpen; // 0x3a1(0x01)
	None BattleMode; // 0x3a2(0x01)
	None LobbyCoherentSprite; // 0x3a8(0x08)
	None SettingWidget; // 0x3b0(0x08)
	None LobbySound; // 0x3b8(0x08)
	None CurrentTab; // 0x3c0(0x10)
	None UW-Inventory_ItemSlotHover; // 0x3d0(0x08)
	None LobbyCoherent2DTexture; // 0x3d8(0x08)
	None DDGIVolumeComponent; // 0x310(0x08)
	None RaysPerProbe; // 0x240(0x01)
	None ProbeCounts; // 0x244(0x0c)
	None LightingPriority; // 0x250(0x04)
	None UpdatePriority; // 0x254(0x04)
	None ProbeMaxRayDistance; // 0x258(0x04)
	None ProbeHysteresis; // 0x25c(0x04)
	None ViewBias; // 0x260(0x04)
	None NormalBias; // 0x264(0x04)
	None LightingChannels; // 0x268(0x01)
	None VolumeBlendDistance; // 0x26c(0x04)
	None VolumeBlendDistanceBlack; // 0x270(0x04)
	None EnableProbeRelocation; // 0x274(0x01)
	None EnableProbeScrolling; // 0x275(0x01)
	None EnableViewDependentVolumeScrolling; // 0x276(0x01)
	None ViewDependentVolumeScrollingOffset; // 0x278(0x04)
	None EnableVolume; // 0x27c(0x01)
	None RuntimeStatic; // 0x27d(0x01)
	None probeDistanceExponent; // 0x280(0x04)
	None probeIrradianceEncodingGamma; // 0x284(0x04)
	None probeChangeThreshold; // 0x288(0x04)
	None probeBrightnessThreshold; // 0x28c(0x04)
	None ProbeMinFrontfaceDistance; // 0x290(0x04)
	None ProbeBackfaceThreshold; // 0x294(0x04)
	None LightMultiplier; // 0x298(0x04)
	None EmissiveMultiplier; // 0x29c(0x04)
	None IrradianceScalar; // 0x2a0(0x04)
	None SkyLight; // 0x2a4(0x01)
	None LastOrigin; // 0x2a8(0x0c)
	None ProbeScrollOffset; // 0x2b4(0x0c)
	None IrradianceBits; // 0x38(0x01)
	None DistanceBits; // 0x39(0x01)
	None DebugProbeRadius; // 0x3c(0x04)
	None ProbeUpdateRayBudget; // 0x40(0x04)
	None Materials; // 0x30(0x10)
	None Tracks; // 0x40(0x10)
	None StartFrame; // 0x60(0x04)
	None EndFrame; // 0x64(0x04)
	None GeometryCacheComponent; // 0x310(0x08)
	None TopologyRanges; // 0x28(0x10)
	None DummyProperty; // 0x38(0x04)
	None GeometryCache; // 0x4e8(0x08)
	None bRunning; // 0x4f0(0x01)
	None bLooping; // 0x4f1(0x01)
	None StartTimeOffset; // 0x4f4(0x04)
	None PlaybackSpeed; // 0x4f8(0x04)
	None NumTracks; // 0x4fc(0x04)
	None ElapsedTime; // 0x500(0x04)
	None Duration; // 0x534(0x04)
	None bManualTick; // 0x538(0x01)
	None Duration; // 0x28(0x04)
	None NumMeshSamples; // 0x58(0x04)
	None Codec; // 0x58(0x08)
	None StartSampleTime; // 0xc8(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Button; // 0x250(0x08)
	None Button_Text; // 0x258(0x08)
	None Overlay_Button; // 0x260(0x08)
	None ButtonText; // 0x268(0x18)
	None OnClicked; // 0x280(0x10)
	None OnPressed; // 0x290(0x10)
	None OnReleased; // 0x2a0(0x10)
	None OnHovered; // 0x2b0(0x10)
	None SphericalLimits; // 0x30(0x10)
	None CapsuleLimits; // 0x40(0x10)
	None PlanarLimits; // 0x50(0x10)
	None bUseComplexAsSimpleCollision; // 0x4f0(0x01)
	None bUseAsyncCooking; // 0x4f1(0x01)
	None ProcMeshBodySetup; // 0x4f8(0x08)
	None ProcMeshSections; // 0x500(0x10)
	None CollisionConvexElems; // 0x510(0x10)
	None LocalBounds; // 0x520(0x1c)
	None AsyncBodySetupQueue; // 0x540(0x10)
	None CompressionFormat; // 0x30(0x01)
	None File; // 0x38(0x10)
	None DestinationFolder; // 0x48(0x10)
	None FileIndex; // 0x58(0x04)
	None Callback; // 0x60(0x08)
	None bSingleFile; // 0x68(0x01)
	None bFileFound; // 0x69(0x01)
	None bUnzipto; // 0x6a(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None GoldImage; // 0x250(0x08)
	None Image_362; // 0x258(0x08)
	None Message; // 0x260(0x08)
	None PriceValue; // 0x268(0x08)
	None SizeBox_2; // 0x270(0x08)
	None bSampleAdditionalTextures; // 0xf0(0x01)
	None AdditionalSlotIndex; // 0xf4(0x04)
	None SlotDisplayName; // 0xf8(0x18)
	None Sprite; // 0x5d8(0x08)
	None FramesPerSecond; // 0x28(0x04)
	None KeyFrames; // 0x30(0x10)
	None DefaultMaterial; // 0x40(0x08)
	None CollisionSource; // 0x48(0x01)
	None RenderComponent; // 0x310(0x08)
	None SourceFlipbook; // 0x4e8(0x08)
	None Material; // 0x4f0(0x08)
	None PlayRate; // 0x4f8(0x04)
	None bLooping; // 0x4fc(0x01)
	None bReversePlayback; // 0x4fc(0x01)
	None bPlaying; // 0x4fc(0x01)
	None AccumulatedTime; // 0x500(0x04)
	None CachedFrameIndex; // 0x504(0x04)
	None SpriteColor; // 0x508(0x10)
	None CachedBodySetup; // 0x518(0x08)
	None OnFinishedPlaying; // 0x520(0x10)
	None RenderComponent; // 0x310(0x08)
	None InstanceMaterials; // 0x4e8(0x10)
	None PerInstanceSpriteData; // 0x4f8(0x10)
	None bEnableSpriteAtlasGroups; // 0x28(0x01)
	None bEnableTerrainSplineEditing; // 0x29(0x01)
	None bResizeSpriteDataToMatchTextures; // 0x2a(0x01)
	None AdditionalSourceTextures; // 0x38(0x10)
	None BakedSourceUV; // 0x48(0x08)
	None BakedSourceDimension; // 0x50(0x08)
	None BakedSourceTexture; // 0x58(0x08)
	None DefaultMaterial; // 0x60(0x08)
	None AlternateMaterial; // 0x68(0x08)
	None Sockets; // 0x70(0x10)
	None SpriteCollisionDomain; // 0x80(0x01)
	None PixelsPerUnrealUnit; // 0x84(0x04)
	None BodySetup; // 0x88(0x08)
	None AlternateMaterialSplitIndex; // 0x90(0x04)
	None BakedRenderData; // 0x98(0x10)
	None RenderComponent; // 0x310(0x08)
	None SourceSprite; // 0x4e8(0x08)
	None MaterialOverride; // 0x4f0(0x08)
	None SpriteColor; // 0x4f8(0x10)
	None DummyRoot; // 0x310(0x08)
	None SplineComponent; // 0x318(0x08)
	None RenderComponent; // 0x320(0x08)
	None TerrainMaterial; // 0x4b8(0x08)
	None bClosedSpline; // 0x4c0(0x01)
	None bFilledSpline; // 0x4c1(0x01)
	None AssociatedSpline; // 0x4c8(0x08)
	None RandomSeed; // 0x4d0(0x04)
	None SegmentOverlapAmount; // 0x4d4(0x04)
	None TerrainColor; // 0x4d8(0x10)
	None ReparamStepsPerSegment; // 0x4e8(0x04)
	None SpriteCollisionDomain; // 0x4ec(0x01)
	None CollisionThickness; // 0x4f0(0x04)
	None CachedBodySetup; // 0x4f8(0x08)
	None Rules; // 0x30(0x10)
	None InteriorFill; // 0x40(0x08)
	None LayerName; // 0x28(0x18)
	None LayerWidth; // 0x40(0x04)
	None LayerHeight; // 0x44(0x04)
	None bHiddenInGame; // 0x48(0x01)
	None bLayerCollides; // 0x48(0x01)
	None bOverrideCollisionThickness; // 0x48(0x01)
	None bOverrideCollisionOffset; // 0x48(0x01)
	None CollisionThicknessOverride; // 0x4c(0x04)
	None CollisionOffsetOverride; // 0x50(0x04)
	None LayerColor; // 0x54(0x10)
	None AllocatedWidth; // 0x64(0x04)
	None AllocatedHeight; // 0x68(0x04)
	None AllocatedCells; // 0x70(0x10)
	None TileSet; // 0x80(0x08)
	None AllocatedGrid; // 0x88(0x10)
	None MapWidth; // 0x28(0x04)
	None MapHeight; // 0x2c(0x04)
	None TileWidth; // 0x30(0x04)
	None TileHeight; // 0x34(0x04)
	None PixelsPerUnrealUnit; // 0x38(0x04)
	None SeparationPerTileX; // 0x3c(0x04)
	None SeparationPerTileY; // 0x40(0x04)
	None SeparationPerLayer; // 0x44(0x04)
	None SelectedTileSet; // 0x48(0x28)
	None Material; // 0x70(0x08)
	None TileLayers; // 0x78(0x10)
	None CollisionThickness; // 0x88(0x04)
	None SpriteCollisionDomain; // 0x8c(0x01)
	None ProjectionMode; // 0x8d(0x01)
	None HexSideLength; // 0x90(0x04)
	None BodySetup; // 0x98(0x08)
	None LayerNameIndex; // 0xa0(0x04)
	None RenderComponent; // 0x310(0x08)
	None MapWidth; // 0x4e8(0x04)
	None MapHeight; // 0x4ec(0x04)
	None TileWidth; // 0x4f0(0x04)
	None TileHeight; // 0x4f4(0x04)
	None DefaultLayerTileSet; // 0x4f8(0x08)
	None Material; // 0x500(0x08)
	None TileLayers; // 0x508(0x10)
	None TileMapColor; // 0x518(0x10)
	None UseSingleLayerIndex; // 0x528(0x04)
	None bUseSingleLayer; // 0x52c(0x01)
	None TileMap; // 0x530(0x08)
	None TileSize; // 0x28(0x08)
	None TileSheet; // 0x30(0x08)
	None AdditionalSourceTextures; // 0x38(0x10)
	None BorderMargin; // 0x48(0x10)
	None PerTileSpacing; // 0x58(0x08)
	None DrawingOffset; // 0x60(0x08)
	None WidthInTiles; // 0x68(0x04)
	None HeightInTiles; // 0x6c(0x04)
	None AllocatedWidth; // 0x70(0x04)
	None AllocatedHeight; // 0x74(0x04)
	None PerTileData; // 0x78(0x10)
	None Terrains; // 0x88(0x10)
	None TileWidth; // 0x98(0x04)
	None TileHeight; // 0x9c(0x04)
	None Margin; // 0xa0(0x04)
	None Spacing; // 0xa4(0x04)
	None Settings; // 0x30(0x70)
	None BlendWeight; // 0xa0(0x04)
	None bCompressionTest; // 0x80(0x01)
	None HashTableSize; // 0x84(0x04)
	None DictionarySize; // 0x88(0x04)
	None DictionaryTrials; // 0x8c(0x04)
	None TrialRandomness; // 0x90(0x04)
	None TrialGenerations; // 0x94(0x04)
	None bNoTrials; // 0x98(0x01)
	None AnimationToPlay; // 0x268(0x08)
	None PermutationTimeOffset; // 0x270(0x04)
	None PlayRate; // 0x274(0x04)
	None bStateBool; // 0x278(0x01)
	None Instance; // 0x280(0x08)
	None FromComponent; // 0x268(0x08)
	None ToComponent; // 0x270(0x08)
	None BlendTime; // 0x278(0x04)
	None bBlendBool; // 0x27c(0x01)
	None baseComponent; // 0x268(0x08)
	None AdditiveAnimation; // 0x270(0x08)
	None ALPHA; // 0x278(0x04)
	None bStateBool; // 0x27c(0x01)
	None RegisteredActors; // 0x28(0x10)
	None StateProcessor; // 0xa8(0x08)
	None UsedAnimationSequences; // 0xe8(0x10)
	None StateEnum; // 0x108(0x08)
	None SharingActor; // 0x110(0x08)
	None Skeletons; // 0x28(0x10)
	None PerSkeletonData; // 0x38(0x10)
	None SkeletonSetups; // 0x28(0x10)
	None ScalabilitySettings; // 0x38(0x10)
	None AnimationStateEnum; // 0x28(0x28)
	None MyStruct; // 0x28(0x10)
	None MassMode; // 0x28(0x01)
	None UniformMass; // 0x2c(0x04)
	None TotalMass; // 0x30(0x04)
	None Density; // 0x34(0x04)
	None MinPerParticleMass; // 0x38(0x04)
	None EdgeStiffness; // 0x3c(0x04)
	None BendingStiffness; // 0x40(0x04)
	None AreaStiffness; // 0x44(0x04)
	None VolumeStiffness; // 0x48(0x04)
	None StrainLimitingStiffness; // 0x4c(0x04)
	None LimitScale; // 0x50(0x04)
	None bUseGeodesicDistance; // 0x54(0x01)
	None ShapeTargetStiffness; // 0x58(0x04)
	None CollisionThickness; // 0x5c(0x04)
	None FrictionCoefficient; // 0x60(0x04)
	None DampingCoefficient; // 0x64(0x04)
	None DragCoefficient; // 0x68(0x04)
	None AnimDriveSpringStiffness; // 0x6c(0x04)
	None bUseBendingElements; // 0x70(0x01)
	None bUseTetrahedralConstraints; // 0x71(0x01)
	None bUseThinShellVolumeConstraints; // 0x72(0x01)
	None bUseSelfCollisions; // 0x73(0x01)
	None bUseContinuousCollisionDetection; // 0x74(0x01)
	None LinearVelocityScale; // 0x78(0x0c)
	None AngularVelocityScale; // 0x84(0x04)
	None IterationCount; // 0x28(0x04)
	None SubdivisionCount; // 0x2c(0x04)
	None SelfCollisionThickness; // 0x30(0x04)
	None CollisionThickness; // 0x34(0x04)
	None bUseDampingOverride; // 0x38(0x01)
	None Damping; // 0x3c(0x04)
	None bUseGravityOverride; // 0x40(0x01)
	None GravityScale; // 0x44(0x04)
	None Gravity; // 0x48(0x0c)
	None bUseLocalSpaceSimulation; // 0x54(0x01)
	None bUseXPBDConstraints; // 0x55(0x01)
	None GeometryCollection; // 0x28(0x08)
	None OriginalGeometryCollection; // 0x30(0x08)
	None GeometryCollectionLODIndex; // 0x38(0x04)
	None Adapters; // 0x3b8(0x10)
	None TextureCoordinateCount; // 0x3d0(0x04)
	None PendingCompactCounter; // 0x51c(0x04)
	None SubdivisionCount; // 0x520(0x04)
	None StaticMesh; // 0x28(0x08)
	None OriginalStaticMesh; // 0x30(0x08)
	None StaticMeshLODIndex; // 0x38(0x04)
	None Params; // 0xe0(0x30)
	None AnimationSections; // 0x58(0x10)
	None UberGraphFrame; // 0x268(0x08)
	None FuelGauge; // 0x270(0x08)
	None FuelIcon; // 0x278(0x08)
	None FuelText; // 0x280(0x08)
	None ChaosSolverActorSet; // 0x30(0x50)
	None DataSourceType; // 0x80(0x01)
	None DataProcessFrequency; // 0x84(0x04)
	None MaxNumberOfDataEntriesToSpawn; // 0x88(0x04)
	None DoSpawn; // 0x8c(0x01)
	None SpawnMultiplierMinMax; // 0x90(0x08)
	None SpawnChance; // 0x98(0x04)
	None ImpulseToSpawnMinMax; // 0x9c(0x08)
	None SpeedToSpawnMinMax; // 0xa4(0x08)
	None MassToSpawnMinMax; // 0xac(0x08)
	None ExtentMinToSpawnMinMax; // 0xb4(0x08)
	None ExtentMaxToSpawnMinMax; // 0xbc(0x08)
	None VolumeToSpawnMinMax; // 0xc4(0x08)
	None SolverTimeToSpawnMinMax; // 0xcc(0x08)
	None SurfaceTypeToSpawn; // 0xd4(0x04)
	None LocationFilteringMode; // 0xd8(0x01)
	None LocationXToSpawn; // 0xd9(0x01)
	None LocationXToSpawnMinMax; // 0xdc(0x08)
	None LocationYToSpawn; // 0xe4(0x01)
	None LocationYToSpawnMinMax; // 0xe8(0x08)
	None LocationZToSpawn; // 0xf0(0x01)
	None LocationZToSpawnMinMax; // 0xf4(0x08)
	None DataSortingType; // 0xfc(0x01)
	None bGetExternalCollisionData; // 0xfd(0x01)
	None DoSpatialHash; // 0xfe(0x01)
	None SpatialHashVolumeMin; // 0x100(0x0c)
	None SpatialHashVolumeMax; // 0x10c(0x0c)
	None SpatialHashVolumeCellSize; // 0x118(0x0c)
	None MaxDataPerCell; // 0x124(0x04)
	None bApplyMaterialsFilter; // 0x128(0x01)
	None ChaosBreakingMaterialSet; // 0x130(0x50)
	None bGetExternalBreakingData; // 0x180(0x01)
	None bGetExternalTrailingData; // 0x181(0x01)
	None RandomPositionMagnitudeMinMax; // 0x184(0x08)
	None InheritedVelocityMultiplier; // 0x18c(0x04)
	None RandomVelocityGenerationType; // 0x190(0x01)
	None RandomVelocityMagnitudeMinMax; // 0x194(0x08)
	None SpreadAngleMax; // 0x19c(0x04)
	None VelocityOffsetMin; // 0x1a0(0x0c)
	None VelocityOffsetMax; // 0x1ac(0x0c)
	None FinalVelocityMagnitudeMinMax; // 0x1b8(0x08)
	None MaxLatency; // 0x1c0(0x04)
	None DebugType; // 0x1c4(0x01)
	None LastSpawnedPointID; // 0x1c8(0x04)
	None LastSpawnTime; // 0x1cc(0x04)
	None SolverTime; // 0x1e0(0x04)
	None TimeStampOfLastProcessedData; // 0x1e4(0x04)
	None ObjectUID; // 0x238(0x10)
	None UserIndex; // 0x248(0x04)
	None AutoPinType; // 0x24c(0x01)
	None bShouldPinActor; // 0x24d(0x01)
	None PinDataClass; // 0x250(0x08)
	None OnPersistentEntityPinned; // 0x258(0x10)
	None OnPersistentEntityPinLost; // 0x268(0x10)
	None PinnedCFUID; // 0x278(0x10)
	None PinnedSceneComponent; // 0x288(0x08)
	None PinData; // 0x290(0x08)
	None UpdateCheckFrequency; // 0x28(0x04)
	None OnUpdatedEventTriggerDelta; // 0x2c(0x10)
	None PinnedID; // 0x28(0x10)
	None ComponentWorldTransform; // 0x40(0x30)
	None PinTransform; // 0x70(0x30)
	None HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate; // 0xb0(0x10)
	None HMDTrackingInitializedDelegate; // 0xc0(0x10)
	None HMDRecenteredDelegate; // 0xd0(0x10)
	None HMDLostDelegate; // 0xe0(0x10)
	None HMDReconnectedDelegate; // 0xf0(0x10)
	None HMDConnectCanceledDelegate; // 0x100(0x10)
	None HMDPutOnHeadDelegate; // 0x110(0x10)
	None HMDRemovedFromHeadDelegate; // 0x120(0x10)
	None VRControllerRecenteredDelegate; // 0x130(0x10)
	None PlayerIndex; // 0x4b8(0x04)
	None Hand; // 0x4bc(0x01)
	None MotionSource; // 0x4c0(0x08)
	None bDisableLowLatencyUpdate; // 0x4c8(0x01)
	None CurrentTrackingStatus; // 0x4cc(0x01)
	None bDisplayDeviceModel; // 0x4cd(0x01)
	None DisplayModelSource; // 0x4d0(0x08)
	None CustomDisplayMesh; // 0x4d8(0x08)
	None DisplayMeshMaterialOverrides; // 0x4e0(0x10)
	None DisplayComponent; // 0x550(0x08)
	None OnModelLoaded; // 0x30(0x10)
	None OnLoadFailure; // 0x40(0x10)
	None SpawnedComponent; // 0x58(0x08)
	None PlanesQuery; // 0xb0(0x60)
	None MaxPlaneQueryResults; // 0x110(0x04)
	None MinPlaneArea; // 0x114(0x04)
	None bArbitraryOrientationPlaneDetection; // 0x118(0x01)
	None PlaneSearchExtents; // 0x11c(0x0c)
	None PlaneQueryFlags; // 0x128(0x10)
	None bDiscardZeroExtentPlanes; // 0x138(0x01)
	None bDefaultUseUnreliablePose; // 0x139(0x01)
	None AmbientIntensityNits; // 0x40(0x10)
	None bUseUnreliablePose; // 0x58(0x01)
	None bImageIsStationary; // 0x59(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_OnShow; // 0x250(0x08)
	None Canvas_Move; // 0x258(0x08)
	None IconImage; // 0x260(0x08)
	None Overlay_1; // 0x268(0x08)
	None PlayerMarker; // 0x270(0x08)
	None SizeBox_IconImage; // 0x278(0x08)
	None TeamIndex; // 0x280(0x08)
	None UW-CompassWidget_Item_Resuscitation; // 0x288(0x08)
	None WidgetSwitcher_Icon; // 0x290(0x08)
	None IsShowingAnimReserved; // 0x298(0x01)
	None OnMarkerClicked; // 0x2a0(0x10)
	None CurrentMarker; // 0x2b0(0x08)
	None Map_PingTypeTexture; // 0x2b8(0x50)
	None Map_PingItemTypeTexture; // 0x308(0x50)
	None SupplyBoxNotOpen; // 0x358(0x08)
	None SupplyBoxOpened; // 0x360(0x08)
	None PlayerState; // 0x368(0x08)
	None IsOnMap; // 0x370(0x01)
	None Selected; // 0x371(0x01)
	None MyPing; // 0x372(0x01)
	None UberGraphFrame; // 0x360(0x08)
	None PhysicsSimulateTime; // 0x368(0x04)
	None LifeTime; // 0x36c(0x04)
	None AddImpulse; // 0x370(0x04)
	None Stance; // 0x374(0x01)
	None AddImpulse_Crouched; // 0x378(0x04)
	None AddImpulse_Proned; // 0x37c(0x04)
	None OnTouchpadGestureStart; // 0xb8(0x10)
	None OnTouchpadGestureContinue; // 0xc8(0x10)
	None OnTouchpadGestureEnd; // 0xd8(0x10)
	None UberGraphFrame; // 0x270(0x08)
	None Parachute_Loop; // 0x278(0x08)
	None Parachute_Open; // 0x280(0x08)
	None Canvas; // 0x288(0x08)
	None HorizontalBox_Ground; // 0x290(0x08)
	None HorizontalBox_Parachute; // 0x298(0x08)
	None HorizontalBox_Sea; // 0x2a0(0x08)
	None Image_797; // 0x2a8(0x08)
	None Image_798; // 0x2b0(0x08)
	None Overlay_Speed; // 0x2b8(0x08)
	None Parachute; // 0x2c0(0x08)
	None Player; // 0x2c8(0x08)
	None PlayerGroup; // 0x2d0(0x08)
	None SeaHeight; // 0x2d8(0x08)
	None Speed; // 0x2e0(0x08)
	None TerrainHeight; // 0x2e8(0x08)
	None IsParachute; // 0x2f0(0x01)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None CP-SlotInfo; // 0x3f0(0x08)
	None IMG-BG; // 0x3f8(0x08)
	None IMG-BG-Border; // 0x400(0x08)
	None IMG-Item; // 0x408(0x08)
	None IMG-Mask; // 0x410(0x08)
	None IMG-Over; // 0x418(0x08)
	None IMG-Over-Border; // 0x420(0x08)
	None Menu02; // 0x428(0x08)
	None Menu03; // 0x430(0x08)
	None Overlay_Mask; // 0x438(0x08)
	None TXT-ItemDesc; // 0x440(0x08)
	None TXT-ItemName; // 0x448(0x08)
	None TXT-Menu01; // 0x450(0x08)
	None TXT-Menu02; // 0x458(0x08)
	None TXT-Menu03; // 0x460(0x08)
	None Mode; // 0x28(0x01)
	None BufferSettings; // 0x30(0x50)
	None ConnectionString; // 0x80(0x10)
	None Factory; // 0x90(0x08)
	None CurveConversionSettings; // 0x98(0x50)
	None PreProcessors; // 0x28(0x10)
	None InterpolationProcessor; // 0x38(0x08)
	None Translators; // 0x40(0x10)
	None Role; // 0x50(0x08)
	None Role; // 0x30(0x08)
	None Subjects; // 0x38(0x10)
	None FrameTranslators; // 0x48(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Popup_Alpha_Bg_Black; // 0x250(0x08)
	None btn_OK; // 0x258(0x08)
	None Image_751; // 0x260(0x08)
	None Perk_List; // 0x268(0x08)
	None UW-Lobby_Craft_Success_Perk_Open; // 0x270(0x08)
	None UW-Lobby_Craft_Success_Perk_Open_2; // 0x278(0x08)
	None UW-Lobby_Craft_Success_Perk_Open_3; // 0x280(0x08)
	None EventDispatcher_OnClosePerkPopup; // 0x288(0x10)
	None TargetImageTexture; // 0x238(0x08)
	None Name; // 0x240(0x10)
	None LongerDimension; // 0x250(0x04)
	None bIsStationary; // 0x254(0x01)
	None bUseUnreliablePose; // 0x255(0x01)
	None OnSetImageTargetSucceeded; // 0x258(0x10)
	None OnSetImageTargetFailed; // 0x268(0x10)
	None OnImageTargetFound; // 0x278(0x10)
	None OnImageTargetLost; // 0x288(0x10)
	None OnImageTargetUnreliableTracking; // 0x298(0x10)
	None QueryFlags; // 0x238(0x10)
	None SearchVolume; // 0x248(0x08)
	None MaxResults; // 0x250(0x04)
	None MinHolePerimeter; // 0x254(0x04)
	None MinPlaneArea; // 0x258(0x04)
	None QueryType; // 0x25c(0x01)
	None SimilarityThreshold; // 0x260(0x04)
	None OnPlanesQueryResult; // 0x268(0x10)
	None OnPersistentPlanesQueryResult; // 0x278(0x10)
	None UberGraphFrame; // 0x360(0x08)
	None UW-MatchEnd_Animation_02; // 0x368(0x08)
	None UW-MatchEnd_Ranking2; // 0x370(0x08)
	None UW_SimpleResult; // 0x378(0x08)
	None MainWidgetRef; // 0x380(0x08)
	None PlayerHUDRef; // 0x388(0x08)
	None UW_FinalResult; // 0x390(0x08)
	None UW_Animation; // 0x398(0x08)
	None PlayerControllerRef; // 0x3a0(0x08)
	None NewResult; // 0x3a8(0x01)
	None ResultData; // 0x3a9(0x04)
	None IsGiveUp; // 0x3ad(0x01)
	None WinMatchEndResultShowTime; // 0x3b0(0x04)
	None ResultMatchEndAnimation; // 0x3b4(0x02)
	None UberGraphFrame; // 0x248(0x08)
	None EndQuest; // 0x250(0x08)
	None StartQuest; // 0x258(0x08)
	None Idle; // 0x260(0x08)
	None Bg; // 0x268(0x08)
	None Image_308; // 0x270(0x08)
	None Image_697; // 0x278(0x08)
	None Image_839; // 0x280(0x08)
	None TextBlock_QuestDesc; // 0x288(0x08)
	None TextBlock_QuestTitle; // 0x290(0x08)
	None UW-ScenarioQuestCell; // 0x298(0x08)
	None UW-ScenarioQuestCell_2; // 0x2a0(0x08)
	None UW-ScenarioQuestCell_94; // 0x2a8(0x08)
	None VerticalBox_Tasks; // 0x2b0(0x08)
	None QuestInfo; // 0x2b8(0x30)
	None QuestData; // 0x2e8(0x58)
	None ActiveQuest; // 0x340(0x01)
	None PendingQuestInfo; // 0x348(0x10)
	None UberGraphFrame; // 0x1360(0x08)
	None P_Upgrade_Arrow; // 0x1368(0x08)
	None C_SlotHover_ItemState_Hide; // 0x1370(0x08)
	None C_SlotHover_ItemState_Show; // 0x1378(0x08)
	None Hover_Gold; // 0x1380(0x08)
	None P_SlotHover; // 0x1388(0x08)
	None BGImage; // 0x1390(0x08)
	None BGImage_2; // 0x1398(0x08)
	None CanvasPanel_ITemState; // 0x13a0(0x08)
	None CanvasPanel_Unnecessary; // 0x13a8(0x08)
	None Count; // 0x13b0(0x08)
	None Crate_Default; // 0x13b8(0x08)
	None Crate_Hover; // 0x13c0(0x08)
	None DurabilityBar; // 0x13c8(0x08)
	None fill; // 0x13d0(0x08)
	None HorizontalBox_Rarity; // 0x13d8(0x08)
	None HoverImage; // 0x13e0(0x08)
	None HoverImage_Gold; // 0x13e8(0x08)
	None HoverImage_Round; // 0x13f0(0x08)
	None Image_1; // 0x13f8(0x08)
	None Image_2; // 0x1400(0x08)
	None Image_531; // 0x1408(0x08)
	None Image_539; // 0x1410(0x08)
	None Image_540; // 0x1418(0x08)
	None Image_541; // 0x1420(0x08)
	None Image_542; // 0x1428(0x08)
	None Image_543; // 0x1430(0x08)
	None Image_544; // 0x1438(0x08)
	None Image_Bindable; // 0x1440(0x08)
	None Image_Supply; // 0x1448(0x08)
	None ItemImage; // 0x1450(0x08)
	None ItemNameName; // 0x1458(0x08)
	None ItemState_Text; // 0x1460(0x08)
	None KeepedItem_List; // 0x1468(0x08)
	None KeepedItem_ListHover; // 0x1470(0x08)
	None LvColor; // 0x1478(0x08)
	None NeedMaterial; // 0x1480(0x08)
	None SizeBox_1; // 0x1488(0x08)
	None TextBlock_Range; // 0x1490(0x08)
	None UpgradeItem; // 0x1498(0x08)
	None UpgradeItem_Arrow01; // 0x14a0(0x08)
	None UpgradeItem_Arrow02; // 0x14a8(0x08)
	None UpgradeItem_default; // 0x14b0(0x08)
	None UpgradeItem_Hover; // 0x14b8(0x08)
	None weapon__; // 0x14c0(0x08)
	None WeaponColorBg; // 0x14c8(0x08)
	None WeaponEquipItem_Default; // 0x14d0(0x08)
	None WeaponEquipItem_Hover; // 0x14d8(0x08)
	None WeaponItemImage; // 0x14e0(0x08)
	None WeaponType; // 0x14e8(0x08)
	None PickupRef; // 0x14f0(0x08)
	None DroppedItemInfo; // 0x14f8(0x98)
	None DropBoxRef; // 0x1590(0x08)
	None bGold; // 0x1598(0x01)
	None SelectedHoverImage; // 0x15a0(0x08)
	None WeaponData; // 0x15a8(0xb30)
	None MedicalBGColor; // 0x20d8(0x10)
	None CurCount; // 0x20e8(0x04)
	None SetSlotInfo; // 0x20f0(0x10)
	None TargetActor; // 0x2100(0x08)
	None StealableCharacter; // 0x2108(0x08)
	None ShowRarityStar; // 0x2110(0x10)
	None ShowIconBG; // 0x2120(0x10)
	None UberGraphFrame; // 0x298(0x08)
	None Anti; // 0x2a0(0x08)
	None display; // 0x2a8(0x08)
	None DisplayMode; // 0x2b0(0x08)
	None DLSS; // 0x2b8(0x08)
	None DOF; // 0x2c0(0x08)
	None Effect; // 0x2c8(0x08)
	None Foliage; // 0x2d0(0x08)
	None FOV; // 0x2d8(0x08)
	None FSR; // 0x2e0(0x08)
	None LanguageSetting; // 0x2e8(0x08)
	None MaxFrameRate; // 0x2f0(0x08)
	None MaxLobbyFrameRate; // 0x2f8(0x08)
	None PP; // 0x300(0x08)
	None Reflex; // 0x308(0x08)
	None Resolution; // 0x310(0x08)
	None ResolutionScaling; // 0x318(0x08)
	None ScrollBox_55; // 0x320(0x08)
	None Shading; // 0x328(0x08)
	None Shadow; // 0x330(0x08)
	None Sharpen; // 0x338(0x08)
	None SlotItemWidget_C_1; // 0x340(0x08)
	None Smooth; // 0x348(0x08)
	None SubTitleSlotWidget; // 0x350(0x08)
	None Texture; // 0x358(0x08)
	None v-Sync; // 0x360(0x08)
	None ViewDistance; // 0x368(0x08)
	None ; // 0x370(0x08)
	None ; // 0x378(0x08)
	None OldDisplayModeValue; // 0x380(0x04)
	None OldDisplayResolutionValue; // 0x384(0x04)
	None ScrollBarTimer; // 0x388(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_Hide_Ima; // 0x250(0x08)
	None Anim_Hide_text; // 0x258(0x08)
	None Anim_Show_Ima; // 0x260(0x08)
	None Anim_Show_text; // 0x268(0x08)
	None Canvas_Main; // 0x270(0x08)
	None HorizontalBox_86; // 0x278(0x08)
	None Image_130; // 0x280(0x08)
	None Image_811; // 0x288(0x08)
	None Img_MapImage; // 0x290(0x08)
	None MatchType; // 0x298(0x08)
	None MaxPlayerCount; // 0x2a0(0x08)
	None Overlay_Text; // 0x2a8(0x08)
	None PersonType; // 0x2b0(0x08)
	None T_MapImageDesc; // 0x2b8(0x08)
	None T_MapImageTitle; // 0x2c0(0x08)
	None Ultimate; // 0x2c8(0x08)
	None IsShowText; // 0x2d0(0x01)
	None Timer_HideMapImage; // 0x2d8(0x08)
	None LastZoomLevel; // 0x2e0(0x04)
	None WantOpacity; // 0x2e4(0x04)
	None MainWidgetRef; // 0x2e8(0x08)
	None IsShowImage; // 0x2f0(0x01)
	None LastWidgetType; // 0x2f1(0x01)
	None UltimateText; // 0x2f8(0x18)
	None NativeAudioOut; // 0x28(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_TextBg; // 0x250(0x08)
	None HorizontalBox_Damage; // 0x258(0x08)
	None Image_145; // 0x260(0x08)
	None Image_155; // 0x268(0x08)
	None T_StatName; // 0x270(0x08)
	None T_Value; // 0x278(0x08)
	None Text_StatName; // 0x280(0x18)
	None MediaSource; // 0xe0(0x08)
	None bLoop; // 0xe8(0x01)
	None MediaSource; // 0xe0(0x08)
	None bLooping; // 0xe8(0x01)
	None StartFrameOffset; // 0xec(0x04)
	None MediaTexture; // 0xf0(0x08)
	None MediaSoundComponent; // 0xf8(0x08)
	None bUseExternalMediaPlayer; // 0x100(0x01)
	None ExternalMediaPlayer; // 0x108(0x08)
	None MediaSections; // 0x58(0x10)
	None HorizontalBox_Rarity; // 0x248(0x08)
	None T_WeaponName; // 0x250(0x08)
	None SectionToKey; // 0x58(0x08)
	None PropertyName; // 0x60(0x08)
	None PropertyPath; // 0x68(0x10)
	None Sections; // 0x78(0x10)
	None ConstraintId; // 0xe0(0x10)
	None ConstraintBindingID; // 0xf0(0x18)
	None AttachSocketName; // 0x108(0x08)
	None AttachComponentName; // 0x110(0x08)
	None AttachmentLocationRule; // 0x118(0x01)
	None AttachmentRotationRule; // 0x119(0x01)
	None AttachmentScaleRule; // 0x11a(0x01)
	None DetachmentLocationRule; // 0x11b(0x01)
	None DetachmentRotationRule; // 0x11c(0x01)
	None DetachmentScaleRule; // 0x11d(0x01)
	None ConstraintSections; // 0x58(0x10)
	None TimingCurve; // 0x108(0xa0)
	None FrontAxisEnum; // 0x1a8(0x01)
	None UpAxisEnum; // 0x1a9(0x01)
	None bFollow; // 0x1ac(0x01)
	None bReverse; // 0x1ac(0x01)
	None bForceUpright; // 0x1ac(0x01)
	None TransformMask; // 0xe0(0x04)
	None Translation; // 0xe8(0x1e0)
	None Rotation; // 0x2c8(0x1e0)
	None Scale; // 0x4a8(0x1e0)
	None ManualWeight; // 0x688(0xa0)
	None bUseQuaternionInterpolation; // 0x72c(0x01)
	None ActorReferenceData; // 0xe0(0xb0)
	None ActorGuidIndexCurve; // 0x190(0x80)
	None ActorGuidStrings; // 0x210(0x10)
	None Sound; // 0xe0(0x08)
	None StartFrameOffset; // 0xe8(0x04)
	None StartOffset; // 0xec(0x04)
	None AudioStartTime; // 0xf0(0x04)
	None AudioDilationFactor; // 0xf4(0x04)
	None AudioVolume; // 0xf8(0x04)
	None SoundVolume; // 0x100(0xa0)
	None PitchMultiplier; // 0x1a0(0xa0)
	None AttachActorData; // 0x240(0xb0)
	None bSuppressSubtitles; // 0x2f0(0x01)
	None bOverrideAttenuation; // 0x2f1(0x01)
	None AttenuationSettings; // 0x2f8(0x08)
	None OnQueueSubtitles; // 0x300(0x10)
	None OnAudioFinished; // 0x310(0x10)
	None OnAudioPlaybackPercent; // 0x320(0x10)
	None AudioSections; // 0x58(0x10)
	None DefaultValue; // 0xe0(0x01)
	None BoolCurve; // 0xe8(0x90)
	None ByteCurve; // 0xe0(0x98)
	None Enum; // 0x88(0x08)
	None AnimData; // 0xe0(0x20)
	None CameraAnim; // 0x100(0x08)
	None PlayRate; // 0x108(0x04)
	None PlayScale; // 0x10c(0x04)
	None BlendInTime; // 0x110(0x04)
	None BlendOutTime; // 0x114(0x04)
	None bLooping; // 0x118(0x01)
	None CameraAnimSections; // 0x58(0x10)
	None CameraGuid; // 0xe0(0x10)
	None CameraBindingID; // 0xf0(0x18)
	None bCanBlend; // 0x58(0x01)
	None Sections; // 0x60(0x10)
	None ShakeData; // 0xe0(0x20)
	None ShakeClass; // 0x100(0x08)
	None PlayScale; // 0x108(0x04)
	None PlaySpace; // 0x10c(0x01)
	None UserDefinedPlaySpace; // 0x110(0x0c)
	None CameraShakeSections; // 0x58(0x10)
	None ShotDisplayName; // 0x158(0x10)
	None DisplayName; // 0x168(0x18)
	None RedCurve; // 0xe0(0xa0)
	None GreenCurve; // 0x180(0xa0)
	None BlueCurve; // 0x220(0xa0)
	None AlphaCurve; // 0x2c0(0xa0)
	None bIsSlateColor; // 0x88(0x01)
	None EnumCurve; // 0xe0(0x98)
	None Enum; // 0x88(0x08)
	None Event; // 0xe0(0x28)
	None Events; // 0xe0(0x78)
	None eventData; // 0x158(0x88)
	None bFireEventsWhenForwards; // 0x58(0x01)
	None bFireEventsWhenBackwards; // 0x58(0x01)
	None EventPosition; // 0x5c(0x01)
	None EventReceivers; // 0x60(0x10)
	None Sections; // 0x70(0x10)
	None EventChannel; // 0xe0(0x88)
	None FloatCurve; // 0xe0(0xa0)
	None FadeColor; // 0x180(0x10)
	None bFadeAudio; // 0x190(0x01)
	None IntegerCurve; // 0xe0(0x90)
	None Visibility; // 0xe0(0x01)
	None LevelNames; // 0xe8(0x10)
	None Sections; // 0x58(0x10)
	None Sections; // 0x58(0x10)
	None MPC; // 0x68(0x08)
	None MaterialIndex; // 0x68(0x04)
	None ObjectChannel; // 0xe0(0xc0)
	None PropertyClass; // 0x88(0x08)
	None BoolParameterNamesAndCurves; // 0xe0(0x10)
	None ScalarParameterNamesAndCurves; // 0xf0(0x10)
	None Vector2DParameterNamesAndCurves; // 0x100(0x10)
	None VectorParameterNamesAndCurves; // 0x110(0x10)
	None ColorParameterNamesAndCurves; // 0x120(0x10)
	None TransformParameterNamesAndCurves; // 0x130(0x10)
	None Sections; // 0x58(0x10)
	None ParticleKeys; // 0xe0(0x98)
	None ParticleSections; // 0x58(0x10)
	None MaterialChannel; // 0xe0(0xc0)
	None MaterialIndex; // 0x88(0x04)
	None Params; // 0xe0(0xd8)
	None AnimSequence; // 0x1b8(0x08)
	None Animation; // 0x1c0(0x08)
	None StartOffset; // 0x1c8(0x04)
	None EndOffset; // 0x1cc(0x04)
	None PlayRate; // 0x1d0(0x04)
	None bReverse; // 0x1d4(0x01)
	None SlotName; // 0x1d8(0x08)
	None AnimationSections; // 0x58(0x10)
	None bUseLegacySectionIndexBlend; // 0x68(0x01)
	None Sections; // 0x58(0x10)
	None ObjectGuid; // 0x68(0x10)
	None StringCurve; // 0xe0(0xa0)
	None Curves; // 0xe0(0x280)
	None ChannelsUsed; // 0x360(0x04)
	None NumChannelsUsed; // 0x88(0x04)
	None EnableTransport; // 0x28(0x01)
	None ListenEndpoint; // 0x30(0x10)
	None ConnectToEndpoints; // 0x40(0x10)
	None ConnectionRetryDelay; // 0x50(0x04)
	None bStopServiceWhenAppDeactivates; // 0x54(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None BlockMouse; // 0x250(0x08)
	None Button_Accept; // 0x258(0x08)
	None Button_Cancel; // 0x260(0x08)
	None Button_Close; // 0x268(0x08)
	None Button_Max; // 0x270(0x08)
	None Button_Min; // 0x278(0x08)
	None Image_9; // 0x280(0x08)
	None Slider_137; // 0x288(0x08)
	None TextBlock_Accept; // 0x290(0x08)
	None TextBlock_MaxCount; // 0x298(0x08)
	None TextBlock_MinCount; // 0x2a0(0x08)
	None TextBlock_Title; // 0x2a8(0x08)
	None TextBox_DropCount; // 0x2b0(0x08)
	None CurrentCount; // 0x2b8(0x04)
	None MaxCount; // 0x2bc(0x04)
	None LastEnteredText; // 0x2c0(0x18)
	None ItemInfo; // 0x2d8(0x98)
	None ItemDetailInfo; // 0x370(0x490)
	None PickupRef; // 0x800(0x08)
	None DropBoxRef; // 0x808(0x08)
	None InventoryWidget; // 0x810(0x08)
	None bClosing; // 0x818(0x01)
	None MaterialSlot; // 0x820(0x08)
	None EnableTransport; // 0x28(0x01)
	None bAutoRepair; // 0x29(0x01)
	None bStopServiceWhenAppDeactivates; // 0x2a(0x01)
	None UnicastEndpoint; // 0x30(0x10)
	None MulticastEndpoint; // 0x40(0x10)
	None MessageFormat; // 0x50(0x01)
	None MulticastTimeToLive; // 0x51(0x01)
	None StaticEndpoints; // 0x58(0x10)
	None EnableTunnel; // 0x68(0x01)
	None TunnelUnicastEndpoint; // 0x70(0x10)
	None TunnelMulticastEndpoint; // 0x80(0x10)
	None RemoteTunnelEndpoints; // 0x90(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Ani_Countdown; // 0x250(0x08)
	None TextBlock_RemailTime; // 0x258(0x08)
	None PreTime; // 0x260(0x04)
	None ActiveTimer; // 0x264(0x01)
	None RemainTime; // 0x268(0x04)
	None MovieScene; // 0x348(0x08)
	None ObjectReferences; // 0x350(0x20)
	None PlaybackSettings; // 0xb0(0x14)
	None Sequence; // 0xc8(0x08)
	None SequencePlayer; // 0xd0(0x08)
	None MovieScene; // 0x348(0x08)
	None BoundActorClass; // 0x350(0x28)
	None BoundPreviewActor; // 0x378(0x28)
	None BoundActorComponents; // 0x3a0(0x50)
	None PlaybackSettings; // 0x318(0x14)
	None SequencePlayer; // 0x330(0x08)
	None TemplateSequence; // 0x338(0x18)
	None BindingOverride; // 0x350(0x0c)
	None OnPermissionsGrantedDynamicDelegate; // 0x28(0x10)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None ConversionResult; // 0x60(0x20)
	None LookUpAxisName; // 0x5d8(0x10)
	None LookUpAtRateAxisName; // 0x5e8(0x10)
	None TurnAxisName; // 0x5f8(0x10)
	None TurnAtRateAxisName; // 0x608(0x10)
	None MoveForwardAxisName; // 0x618(0x10)
	None MoveRightAxisName; // 0x628(0x10)
	None MouseSensitivityScale_Pitch; // 0x638(0x04)
	None MouseSensitivityScale_Yaw; // 0x63c(0x04)
	None RotationalAcceleration; // 0x6e8(0x0c)
	None RotationalDeceleration; // 0x6f4(0x0c)
	None MaxRotationalVelocity; // 0x700(0x0c)
	None MinPitch; // 0x70c(0x04)
	None MaxPitch; // 0x710(0x04)
	None WalkingFriction; // 0x714(0x04)
	None WalkingSpeed; // 0x718(0x04)
	None WalkingAcceleration; // 0x71c(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None ComboBoxString_Sort_2; // 0x250(0x08)
	None Down_2; // 0x258(0x08)
	None Image; // 0x260(0x08)
	None Img_BG; // 0x268(0x08)
	None Overlay_2; // 0x270(0x08)
	None SortText_2; // 0x278(0x08)
	None Up_2; // 0x280(0x08)
	None UW-Lobby_RecipeList_Category; // 0x288(0x08)
	None UW-Lobby_RecipeList_Category_2; // 0x290(0x08)
	None UW-Lobby_RecipeList_Category_3; // 0x298(0x08)
	None VerticalBox_Category; // 0x2a0(0x08)
	None CategoryList; // 0x2a8(0x50)
	None SortTypeList; // 0x2f8(0x10)
	None LastOpenedCategory; // 0x308(0x08)
	None IsOwn; // 0x310(0x01)
	None IsOwnAny; // 0x311(0x01)
	None CraftingID; // 0x314(0x04)
	None TextAll; // 0x318(0x18)
	None LanguageIndex; // 0x330(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Button_Focus; // 0x250(0x08)
	None HorizontalBox_1; // 0x258(0x08)
	None Image_223; // 0x260(0x08)
	None Img_Movie; // 0x268(0x08)
	None MediaPlayer; // 0x270(0x08)
	None bPopup; // 0x278(0x01)
	None Media; // 0x280(0x08)
	None MediaSoundComp; // 0x288(0x08)
	None Game Settings; // 0x290(0x08)
	None GammaIntensity; // 0x298(0x04)
	None SkipNoticeTimer; // 0x2a0(0x08)
	None MediaTexture; // 0x2a8(0x08)
	None OpeningFileName; // 0x2b0(0x08)
	None End; // 0x2b8(0x01)
	None JitterLatencyFrames; // 0x710(0x04)
	None CableComponent; // 0x310(0x08)
	None bAttachStart; // 0x4e8(0x01)
	None bAttachEnd; // 0x4e9(0x01)
	None AttachEndTo; // 0x4f0(0x28)
	None AttachEndToSocketName; // 0x518(0x08)
	None EndLocation; // 0x520(0x0c)
	None CableLength; // 0x52c(0x04)
	None NumSegments; // 0x530(0x04)
	None SubstepTime; // 0x534(0x04)
	None SolverIterations; // 0x538(0x04)
	None bEnableStiffness; // 0x53c(0x01)
	None bEnableCollision; // 0x53d(0x01)
	None CollisionFriction; // 0x540(0x04)
	None CableForce; // 0x544(0x0c)
	None CableGravityScale; // 0x550(0x04)
	None CableWidth; // 0x554(0x04)
	None NumSides; // 0x558(0x04)
	None TileMaterial; // 0x55c(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None WeaponPerk_ani; // 0x250(0x08)
	None Image_102; // 0x258(0x08)
	None Image_254; // 0x260(0x08)
	None Image_Grade_Color_Line; // 0x268(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None BackgroundBlurFadeIn; // 0x250(0x08)
	None Idle; // 0x258(0x08)
	None BackgroundBlur_1; // 0x260(0x08)
	None Btn-Exit; // 0x268(0x08)
	None Btn-NextTarget; // 0x270(0x08)
	None Btn-PreTarget; // 0x278(0x08)
	None Btn-Replay; // 0x280(0x08)
	None Canvas_Main; // 0x288(0x08)
	None KillcamBtns; // 0x290(0x08)
	None MemberChangeBox; // 0x298(0x08)
	None TextDepth_Replay; // 0x2a0(0x08)
	None UW-SpectatingTargetInfo; // 0x2a8(0x08)
	None bIsKillCam; // 0x2b0(0x01)
	None OnLocationChanged; // 0x28(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Fade_in_Black_Bg; // 0x250(0x08)
	None Anim_ShowPerk; // 0x258(0x08)
	None Image_319; // 0x260(0x08)
	None Img_Opened; // 0x268(0x08)
	None T_Desc; // 0x270(0x08)
	None T_Name; // 0x278(0x08)
	None UW-Lobby_Craft_Success_Perk_Slot; // 0x280(0x08)
	None RarityBGMaterialInstance; // 0x288(0x08)
	None CurrentAnim; // 0x290(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Button_306; // 0x250(0x08)
	None CanvasPanel_Line; // 0x258(0x08)
	None CanvasPanel_Position; // 0x260(0x08)
	None Image_Leader; // 0x268(0x08)
	None Image_Rank; // 0x270(0x08)
	None Img_Cut; // 0x278(0x08)
	None Img_MS; // 0x280(0x08)
	None Img_MS_2; // 0x288(0x08)
	None Img_MS_3; // 0x290(0x08)
	None Img_PlayerLine; // 0x298(0x08)
	None Img_PlayerPoint; // 0x2a0(0x08)
	None Img_Voice; // 0x2a8(0x08)
	None Img_VoiceElimination; // 0x2b0(0x08)
	None Overlay_OnReady; // 0x2b8(0x08)
	None Overlay_Position; // 0x2c0(0x08)
	None Overlay_TeamOnReady; // 0x2c8(0x08)
	None T_PlayerName; // 0x2d0(0x08)
	None T_PlayerName_2; // 0x2d8(0x08)
	None WidgetSwitcher_3; // 0x2e0(0x08)
	None WidgetSwitcher_IsTeam; // 0x2e8(0x08)
	None WidgetSwitcher_State; // 0x2f0(0x08)
	None LastSeaponTierId; // 0x2f8(0x04)
	None WidgetHalfSizeX; // 0x2fc(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Ellipsis_M; // 0x250(0x08)
	None CanvasPanel_123; // 0x258(0x08)
	None Enhancing; // 0x260(0x08)
	None Image_305; // 0x268(0x08)
	None Image_841; // 0x270(0x08)
	None InputEventBox; // 0x278(0x08)
	None Skip; // 0x280(0x08)
	None TextBlock_335; // 0x288(0x08)
	None TextBlock_336; // 0x290(0x08)
	None TextBlock_337; // 0x298(0x08)
	None TextBlock_362; // 0x2a0(0x08)
	None TextEnhanceing; // 0x2a8(0x08)
	None UW-ArmoryInput; // 0x2b0(0x08)
	None UW-ArmoryResultListWidget; // 0x2b8(0x08)
	None EnhanceResultTimerHandle; // 0x2c0(0x08)
	None bAutoEnabled; // 0x28(0x01)
	None SplashDescs; // 0x30(0x10)
	None bSupportsDash; // 0x40(0x01)
	None bCompositesDepth; // 0x41(0x01)
	None bHQDistortion; // 0x42(0x01)
	None PixelDensityMin; // 0x44(0x04)
	None PixelDensityMax; // 0x48(0x04)
	None CPULevel; // 0x4c(0x04)
	None GPULevel; // 0x50(0x04)
	None FFRLevel; // 0x54(0x01)
	None bChromaCorrection; // 0x55(0x01)
	None bRecenterHMDWithController; // 0x56(0x01)
	None CaptureComponents; // 0x38(0x10)
	None BoundaryMeshComponent; // 0x310(0x08)
	None BoundaryType; // 0x4e8(0x01)
	None BottomZ; // 0x4ec(0x04)
	None TopZ; // 0x4f0(0x04)
	None WhiteMaterial; // 0x4f8(0x08)
	None CastingCameraActor; // 0x500(0x08)
	None VRNotificationComponent; // 0x328(0x08)
	None CameraColorTexture; // 0x330(0x08)
	None CameraDepthTexture; // 0x338(0x08)
	None PlaneMeshComponent; // 0x340(0x08)
	None ChromaKeyMaterial; // 0x348(0x08)
	None ChromaKeyLitMaterial; // 0x350(0x08)
	None OpaqueColoredMaterial; // 0x358(0x08)
	None ChromaKeyMaterialInstance; // 0x360(0x08)
	None ChromaKeyLitMaterialInstance; // 0x368(0x08)
	None CameraFrameMaterialInstance; // 0x370(0x08)
	None BackdropMaterialInstance; // 0x378(0x08)
	None BoundaryActor; // 0x380(0x08)
	None BoundarySceneCaptureActor; // 0x388(0x08)
	None DefaultTexture_White; // 0x390(0x08)
	None BackgroundRenderTargets; // 0x3e8(0x10)
	None ForegroundCaptureActor; // 0x3f8(0x08)
	None ForegroundRenderTargets; // 0x400(0x10)
	None MRSettings; // 0x410(0x08)
	None MRState; // 0x418(0x08)
	None ClippingReference; // 0x28(0x01)
	None bUseTrackedCameraResolution; // 0x29(0x01)
	None WidthPerView; // 0x2c(0x04)
	None HeightPerView; // 0x30(0x04)
	None CastingLatency; // 0x34(0x04)
	None BackdropColor; // 0x38(0x04)
	None HandPoseStateLatency; // 0x3c(0x04)
	None ChromaKeyColor; // 0x40(0x04)
	None ChromaKeySimilarity; // 0x44(0x04)
	None ChromaKeySmoothRange; // 0x48(0x04)
	None ChromaKeySpillRange; // 0x4c(0x04)
	None VirtualGreenScreenType; // 0x50(0x01)
	None DynamicLightingDepthSmoothFactor; // 0x54(0x04)
	None DynamicLightingDepthVariationClampingValue; // 0x58(0x04)
	None ExternalCompositionPostProcessEffects; // 0x5c(0x01)
	None bIsCasting; // 0x5d(0x01)
	None CompositionMethod; // 0x5e(0x01)
	None CapturingCamera; // 0x5f(0x01)
	None bUseDynamicLighting; // 0x60(0x01)
	None DepthQuality; // 0x61(0x01)
	None TrackedCamera; // 0x28(0x70)
	None TrackingReferenceComponent; // 0x98(0x08)
	None ScalingFactor; // 0xa0(0x08)
	None ChangeCameraStateRequested; // 0xac(0x01)
	None BindToTrackedCameraIndexRequested; // 0xad(0x01)
	None bDeprecatedSpringOffsetMode; // 0x140(0x01)
	None bReverseAsBrake; // 0x140(0x01)
	None bUseRVOAvoidance; // 0x140(0x01)
	None bRawHandbrakeInput; // 0x140(0x01)
	None bRawGearUpInput; // 0x140(0x01)
	None bRawGearDownInput; // 0x140(0x01)
	None bWasAvoidanceUpdated; // 0x144(0x01)
	None Mass; // 0x148(0x04)
	None WheelSetups; // 0x150(0x10)
	None DragCoefficient; // 0x160(0x04)
	None ChassisWidth; // 0x164(0x04)
	None ChassisHeight; // 0x168(0x04)
	None DragArea; // 0x16c(0x04)
	None EstimatedMaxEngineSpeed; // 0x170(0x04)
	None MaxEngineRPM; // 0x174(0x04)
	None DebugDragMagnitude; // 0x178(0x04)
	None InertiaTensorScale; // 0x17c(0x0c)
	None MinNormalizedTireLoad; // 0x188(0x04)
	None MinNormalizedTireLoadFiltered; // 0x18c(0x04)
	None MaxNormalizedTireLoad; // 0x190(0x04)
	None MaxNormalizedTireLoadFiltered; // 0x194(0x04)
	None ThresholdLongitudinalSpeed; // 0x198(0x04)
	None LowForwardSpeedSubStepCount; // 0x19c(0x04)
	None HighForwardSpeedSubStepCount; // 0x1a0(0x04)
	None Wheels; // 0x1a8(0x10)
	None WheelsCollisionChannel; // 0x1b8(0x01)
	None RVOAvoidanceRadius; // 0x1d0(0x04)
	None RVOAvoidanceHeight; // 0x1d4(0x04)
	None AvoidanceConsiderationRadius; // 0x1d8(0x04)
	None RVOSteeringStep; // 0x1dc(0x04)
	None RVOThrottleStep; // 0x1e0(0x04)
	None AvoidanceUID; // 0x1e4(0x04)
	None AvoidanceGroup; // 0x1e8(0x04)
	None GroupsToAvoid; // 0x1ec(0x04)
	None GroupsToIgnore; // 0x1f0(0x04)
	None AvoidanceWeight; // 0x1f4(0x04)
	None PendingLaunchVelocity; // 0x1f8(0x0c)
	None ReplicatedState; // 0x204(0x14)
	None RawSteeringInput; // 0x21c(0x04)
	None RawThrottleInput; // 0x220(0x04)
	None RawBrakeInput; // 0x224(0x04)
	None SteeringInput; // 0x228(0x04)
	None ThrottleInput; // 0x22c(0x04)
	None BrakeInput; // 0x230(0x04)
	None HandbrakeInput; // 0x234(0x04)
	None IdleBrakeInput; // 0x238(0x04)
	None StopThreshold; // 0x23c(0x04)
	None WrongDirectionThreshold; // 0x240(0x04)
	None ThrottleInputRate; // 0x244(0x08)
	None BrakeInputRate; // 0x24c(0x08)
	None HandbrakeInputRate; // 0x254(0x08)
	None SteeringInputRate; // 0x25c(0x08)
	None OverrideController; // 0x288(0x08)
	None FrictionScale; // 0x30(0x04)
	None TireFrictionScales; // 0x38(0x10)
	None WheeledVehicleMovementComponent; // 0x970(0x08)
	None CollisionMesh; // 0x28(0x08)
	None bDontCreateShape; // 0x30(0x01)
	None bAutoAdjustCollisionSize; // 0x31(0x01)
	None Offset; // 0x34(0x0c)
	None ShapeRadius; // 0x40(0x04)
	None ShapeWidth; // 0x44(0x04)
	None Mass; // 0x48(0x04)
	None DampingRate; // 0x4c(0x04)
	None SteerAngle; // 0x50(0x04)
	None bAffectedByHandbrake; // 0x54(0x01)
	None TireType; // 0x58(0x08)
	None TireConfig; // 0x60(0x08)
	None LatStiffMaxLoad; // 0x68(0x04)
	None LatStiffValue; // 0x6c(0x04)
	None LongStiffValue; // 0x70(0x04)
	None SuspensionForceOffset; // 0x74(0x04)
	None SuspensionMaxRaise; // 0x78(0x04)
	None SuspensionMaxDrop; // 0x7c(0x04)
	None SuspensionNaturalFrequency; // 0x80(0x04)
	None SuspensionDampingRatio; // 0x84(0x04)
	None SweepType; // 0x88(0x01)
	None MaxBrakeTorque; // 0x8c(0x04)
	None MaxHandBrakeTorque; // 0x90(0x04)
	None VehicleSim; // 0x98(0x08)
	None WheelIndex; // 0xa0(0x04)
	None DebugLongSlip; // 0xa4(0x04)
	None DebugLatSlip; // 0xa8(0x04)
	None DebugNormalizedTireLoad; // 0xac(0x04)
	None DebugWheelTorque; // 0xb4(0x04)
	None DebugLongForce; // 0xb8(0x04)
	None DebugLatForce; // 0xbc(0x04)
	None Location; // 0xc0(0x0c)
	None OldLocation; // 0xcc(0x0c)
	None Velocity; // 0xd8(0x0c)
	None Mesh; // 0x380(0x08)
	None VehicleMovement; // 0x388(0x08)
	None EngineSetup; // 0x290(0xa0)
	None DifferentialSetup; // 0x330(0x1c)
	None AckermannAccuracy; // 0x34c(0x04)
	None TransmissionSetup; // 0x350(0x30)
	None SteeringCurve; // 0x380(0x88)
	None EngineSetup; // 0x290(0xa0)
	None TransmissionSetup; // 0x330(0x30)
	None SteeringCurve; // 0x360(0x88)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_MoveUp_HUD; // 0x250(0x08)
	None Anim_MoveRight; // 0x258(0x08)
	None Anim_MoveUp; // 0x260(0x08)
	None UW-StatupWidget_Item_Attack; // 0x268(0x08)
	None UW-StatupWidget_Item_Capacity; // 0x270(0x08)
	None UW-StatupWidget_Item_Damage; // 0x278(0x08)
	None UW-StatupWidget_Item_Decrement; // 0x280(0x08)
	None UW-StatupWidget_Item_Health; // 0x288(0x08)
	None UW-StatupWidget_Item_Speed; // 0x290(0x08)
	None VerticalBox_Stats; // 0x298(0x08)
	None Settings; // 0x28(0x08)
	None AmbisonicsOrder; // 0x28(0x04)
	None Presets; // 0x28(0x10)
	None VoiceCount; // 0x710(0x04)
	None Settings; // 0x70(0x08)
	None Settings; // 0x80(0x18)
	None Settings; // 0x90(0x28)
	None OnEnvelopeFollowerUpdate; // 0xb0(0x10)
	None Settings; // 0x74(0x0c)
	None Settings; // 0x78(0x10)
	None Settings; // 0x74(0x0c)
	None Settings; // 0x74(0x0c)
	None Settings; // 0x74(0x0c)
	None Settings; // 0x70(0x08)
	None Settings; // 0x78(0x10)
	None Settings; // 0x7c(0x14)
	None Settings; // 0x80(0x18)
	None Settings; // 0x7c(0x14)
	None Settings; // 0x70(0x08)
	None ImpulseResponse; // 0x28(0x10)
	None NumChannels; // 0x38(0x04)
	None SampleRate; // 0x3c(0x04)
	None NormalizationVolumeDb; // 0x40(0x04)
	None IRData; // 0x48(0x10)
	None Settings; // 0x40(0x20)
	None ImpulseResponse; // 0x60(0x08)
	None BlockSize; // 0x68(0x01)
	None bEnableHardwareAcceleration; // 0x69(0x01)
	None Settings; // 0x74(0x0c)
	None DynamicSettings; // 0x80(0x0c)
	None Settings; // 0x74(0x0c)
	None Settings; // 0x78(0x10)
	None Settings; // 0x80(0x18)
	None ValueX; // 0x108(0x04)
	None ValueY; // 0x10c(0x04)
	None ValueXDelegate; // 0x110(0x10)
	None ValueYDelegate; // 0x120(0x10)
	None WidgetStyle; // 0x130(0x2b8)
	None SliderHandleColor; // 0x3e8(0x10)
	None IndentHandle; // 0x3f8(0x01)
	None Locked; // 0x3f9(0x01)
	None StepSize; // 0x3fc(0x04)
	None IsFocusable; // 0x400(0x01)
	None OnMouseCaptureBegin; // 0x408(0x10)
	None OnMouseCaptureEnd; // 0x418(0x10)
	None OnControllerCaptureBegin; // 0x428(0x10)
	None OnControllerCaptureEnd; // 0x438(0x10)
	None OnValueChangedX; // 0x448(0x10)
	None OnValueChangedY; // 0x458(0x10)
	None GranulatedSoundWave; // 0x710(0x08)
	None PresetName; // 0x28(0x10)
	None bLockKeyframesToGridBool; // 0x38(0x01)
	None LockKeyframesToGrid; // 0x3c(0x04)
	None WaveTableResolution; // 0x40(0x04)
	None WaveTable; // 0x48(0x10)
	None bNormalizeWaveTables; // 0x58(0x01)
	None OnTableAltered; // 0x710(0x10)
	None OnNumTablesChanged; // 0x720(0x10)
	None CurrentPreset; // 0x730(0x08)
	None SoundWave; // 0x710(0x08)
	None OnSampleLoaded; // 0x718(0x10)
	None OnSamplePlaybackProgress; // 0x728(0x10)
	None Value; // 0x108(0x04)
	None StepSize; // 0x10c(0x04)
	None MouseSpeed; // 0x110(0x04)
	None MouseFineTuneSpeed; // 0x114(0x04)
	None ShowTooltipInfo; // 0x118(0x01)
	None ParameterName; // 0x120(0x18)
	None ParameterUnits; // 0x138(0x18)
	None ValueDelegate; // 0x150(0x10)
	None WidgetStyle; // 0x160(0x238)
	None Locked; // 0x398(0x01)
	None IsFocusable; // 0x399(0x01)
	None OnMouseCaptureBegin; // 0x3a0(0x10)
	None OnMouseCaptureEnd; // 0x3b0(0x10)
	None OnControllerCaptureBegin; // 0x3c0(0x10)
	None OnControllerCaptureEnd; // 0x3d0(0x10)
	None OnValueChanged; // 0x3e0(0x10)
	None Ambience; // 0x348(0x10)
	None Priority; // 0x358(0x04)
	None Sound; // 0x30(0x08)
	None VolumeMultiplier; // 0x38(0x04)
	None PitchMultiplier; // 0x3c(0x04)
	None bFollow; // 0x40(0x01)
	None AttachName; // 0x44(0x08)
	None bFriendlyFire; // 0x3fc(0x01)
	None PoolingActorComponent; // 0x400(0x08)
	None MapDataTableHandle; // 0x408(0x10)
	None PCReceivedPlayerInfos; // 0x418(0x50)
	None TestAIControllerClass; // 0x468(0x08)
	None UsingOuterBlueZone; // 0x4e1(0x01)
	None SelectedPlayZoneName; // 0x4e4(0x08)
	None BlueZoneClass; // 0x4f0(0x08)
	None CQRType; // 0x4f8(0x10)
	None BlueZone; // 0x570(0x08)
	None RemovePendingPlayerArray; // 0x578(0x10)
	None GameViewType; // 0x588(0x01)
	None MatchingType; // 0x589(0x01)
	None TeamSize; // 0x58c(0x04)
	None Training; // 0x590(0x10)
	None AIGrade; // 0x5a0(0x04)
	None UpdateSurvivalCircleDelegate; // 0x5a8(0x10)
	None TeamInfoMap; // 0x5f0(0x50)
	None WinnerTeamIndex; // 0x640(0x01)
	None SendPlayerEndedEvent; // 0x648(0x10)
	None SendPlayerRankedEvent; // 0x658(0x10)
	None AircraftViewPawnClass; // 0x680(0x08)
	None AircraftFlightPawnClass; // 0x688(0x08)
	None bAutoStart; // 0x690(0x01)
	None StartingPlayerCountRate; // 0x694(0x04)
	None WaitingTime; // 0x698(0x04)
	None ReadyTime; // 0x69c(0x04)
	None DescentDelay; // 0x6a0(0x04)
	None DescentableTime; // 0x6a4(0x04)
	None AircraftFlight; // 0x6a8(0x08)
	None bIsUseAircraft; // 0x6b0(0x01)
	None bUseAircraftViewPawn; // 0x6c5(0x01)
	None bEndlessGame; // 0x6c6(0x01)
	None DamageInfoArray; // 0x6e0(0x10)
	None RedZoneManagerClass; // 0x6f8(0x08)
	None RedZoneManager; // 0x700(0x08)
	None PersonalSupplyBoxManagerClass; // 0x788(0x08)
	None PersonalSupplyBoxManager; // 0x790(0x08)
	None DivisionItemCountResult; // 0x798(0x10)
	None DisivisonComplete; // 0x7a8(0x01)
	None StandardGroupKeyCountInfo; // 0x990(0x58)
	None AreaSpawnRateList; // 0x9e8(0x50)
	None BlueZoneSpawnRateInfo; // 0xa38(0x88)
	None BlueZoneSpawnRateKey; // 0xac0(0x08)
	None NoneData; // 0xac8(0x88)
	None VehicleAreaSpawnRateList; // 0xb50(0x50)
	None VehicleBlueZoneSpawnRateInfo; // 0xba0(0x78)
	None VehicleBlueZoneSpawnRateKey; // 0xc18(0x08)
	None NoneVehicleData; // 0xc20(0x78)
	None CustomBlueZoneSpawnRateInfo; // 0xc98(0x28)
	None CustomAreaSpawnRateList; // 0xcc0(0x50)
	None CustomVehicleBlueZoneSpawnRateInfo; // 0xd10(0x28)
	None CustomVehicleAreaSpawnRateList; // 0xd38(0x50)
	None ItemDivisionDelay; // 0xd90(0x04)
	None UsingWorldItemSpawnTalbeInBlueZone; // 0xd94(0x01)
	None ItemSpawnInBlueZone; // 0xd95(0x01)
	None UnlimitItemSpawnCnt; // 0xd96(0x01)
	None MaxItemDivisionCountAtOnce; // 0xd98(0x04)
	None ItemDivisionLevelLoadComplet; // 0xd9c(0x01)
	None ItemDivisionGameReady; // 0xd9d(0x01)
	None UsingMaxPickUpItemSpawnCount; // 0xd9e(0x01)
	None MaxPickUpItemSpawnCount; // 0xda0(0x04)
	None UsingMaxVehicleSpawnCount; // 0xda4(0x01)
	None MaxVehicleSpawnCount; // 0xda8(0x04)
	None MaxPickUpVehicleSpawnCount; // 0xdac(0x04)
	None UsingDynamicMaxPickUpItemSpawnCount; // 0xdb0(0x01)
	None ItemSpawnLimitInfo; // 0xdb4(0x14)
	None GCRecordData; // 0xdc8(0x01)
	None GCRecordDataTitle; // 0xdd0(0x10)
	None RecordBuildingData; // 0xde0(0x01)
	None RecordPersonalSupplyBoxData; // 0xde1(0x01)
	None ItemSpawnRateCurve; // 0xde8(0x08)
	None VehicleSpawnRateCurve; // 0xdf0(0x08)
	None CurrentSpawnVehicleCount; // 0xdf8(0x04)
	None CurrentDivisionItemCount; // 0xdfc(0x04)
	None CheckCharacters; // 0xe18(0x10)
	None LoadCompleteList; // 0xe38(0x10)
	None AutoBotIds; // 0xe50(0x10)
	None AutoBotInfoSendIDList; // 0xe60(0x10)
	None MatchingTimeout; // 0x3f8(0x04)
	None PlayerPawnList; // 0x400(0x10)
	None CustomizeCharacter; // 0x410(0x08)
	None RankingCharacter; // 0x418(0x08)
	None AppearingMotionCharacter; // 0x420(0x08)
	None Loading_TimerHandle; // 0x538(0x08)
	None PartyInfo_TimerHandle; // 0x540(0x08)
	None Ping_TimerHandle; // 0x548(0x08)
	None GeeGeeLoginToken_TimerHandle; // 0x550(0x08)
	None SteamLoginToken_TimerHandle; // 0x558(0x08)
	None AveragePingRequest_TimerHandle; // 0x560(0x08)
	None DuplicatedReconnectTimeout_TimerHandle; // 0x568(0x08)
	None OnLoginSucceeded; // 0x578(0x10)
	None OnLoginNotify; // 0x588(0x10)
	None OnLoginFailed; // 0x598(0x10)
	None OnMatchingPending; // 0x5a8(0x10)
	None OnMatchingStarted; // 0x5b8(0x10)
	None OnMatchingSucceeded; // 0x5c8(0x10)
	None OnMatchingFailed; // 0x5d8(0x10)
	None OnPartyInvited; // 0x5e8(0x10)
	None OnPartyInfoChanged; // 0x5f8(0x10)
	None OnPartyMemberInfoChanged; // 0x608(0x10)
	None OnMatchingSettingsChanged; // 0x618(0x10)
	None OnCreateCharacter; // 0x628(0x10)
	None MatchWinnerTeam; // 0x380(0x01)
	None WinnerPlayerState; // 0x388(0x08)
	None TimeRemaining; // 0x390(0x04)
	None CurrentSeasonID; // 0x394(0x08)
	None PerkMode; // 0x39c(0x04)
	None RecipeMode; // 0x3a0(0x04)
	None MaxPerkCount; // 0x3a4(0x04)
	None OverrideUltimateLevel; // 0x3a8(0x04)
	None PerkClassNumCap; // 0x3b0(0x50)
	None PerkClassWeightModifier; // 0x400(0x50)
	None PerkClassBlock; // 0x450(0x10)
	None bBlockSpawnVehicle; // 0x460(0x01)
	None bBlockRedZone; // 0x461(0x01)
	None PerkLevelUpAllUserSame; // 0x462(0x01)
	None CQRKey; // 0x468(0x10)
	None GameViewType; // 0x478(0x01)
	None MatchingType; // 0x479(0x01)
	None ExpertWeaponTableID; // 0x47c(0x08)
	None PersonalSupplyBoxPositionType; // 0x484(0x04)
	None NoDelaySpawnPersonalSupplyBox; // 0x488(0x01)
	None MustSpawnPersonalSupplyBox; // 0x489(0x01)
	None RetiredPlayerCount; // 0x48c(0x04)
	None UniqueIDPlayerStates; // 0x490(0x50)
	None MatchID; // 0x4e0(0x10)
	None GameServerID; // 0x4f0(0x10)
	None DefaultClassSelectInfo; // 0x510(0x28)
	None DefaultClassChangeInfo; // 0x538(0x48)
	None CurrentGameSettingInfo; // 0x580(0x88)
	None IsUsingOuterAreaBlueZone; // 0x608(0x01)
	None BlueZone; // 0x610(0x08)
	None OnBlueZoneDelegate; // 0x618(0x10)
	None OnChangePerkModeDelegate; // 0x628(0x10)
	None RecoilModifier_AR; // 0x654(0x04)
	None RecoilModifier_SMG; // 0x658(0x04)
	None RecoilModifier_SG; // 0x65c(0x04)
	None RecoilModifier_DMR; // 0x660(0x04)
	None RecoilModifier_SR; // 0x664(0x04)
	None IsNewItemSpawnMode; // 0x668(0x01)
	None TeamSize; // 0x66c(0x04)
	None GameRule; // 0x670(0x01)
	None BattleRoyaleState; // 0x671(0x01)
	None TotalPlayerCount; // 0x674(0x04)
	None TotalAIPlayerCount; // 0x678(0x04)
	None CurrentPlayerCount; // 0x67c(0x04)
	None CurrentTeamCount; // 0x680(0x04)
	None TotalTeamCount; // 0x684(0x04)
	None OnBattleRoyalStateChanged; // 0x688(0x10)
	None OnRocketLaunch; // 0x698(0x10)
	None OnItemSpawnModeChanged; // 0x6a8(0x10)
	None OnChangeRemainTime; // 0x6b8(0x10)
	None bCheckSeaLevelZ; // 0x6c8(0x01)
	None SeaLevelZ; // 0x6cc(0x04)
	None GhostPlayerCountForTest; // 0x6d4(0x04)
	None OnRepTeamSize; // 0x6d8(0x10)
	None CharacterDiedInfos; // 0x6e8(0x10)
	None TeamEndInfos; // 0x6f8(0x10)
	None AirCraftBoardingInfos; // 0x708(0x10)
	None redzone; // 0x718(0x08)
	None RedZoneManager; // 0x720(0x08)
	None AirCraftDescentPlayerInfoEvent; // 0x780(0x10)
	None EndAirCraftBoardingPlayerEvent; // 0x790(0x10)
	None AircraftFlightRef; // 0x7a0(0x08)
	None OnRepCurrentPlayerCount; // 0x7a8(0x10)
	None OnRepCurrentTeamCount; // 0x7b8(0x10)
	None OnUpdateClassCount; // 0x7c8(0x10)
	None RestoreList; // 0x7d8(0x10)
	None TimerHandle_MoveToLobbyLevel; // 0x7f0(0x08)
	None CurrentClassCounts; // 0x7f8(0x50)
	None AutoBotCount; // 0x848(0x04)
	None NeedInit; // 0x310(0x01)
	None RootBoxComponent; // 0x320(0x08)
	None InteractiveSphereComponent; // 0x328(0x08)
	None InteractiveCancleSphereComponent; // 0x330(0x08)
	None BoxName; // 0x338(0x08)
	None RelatedPlayerIds; // 0x340(0x10)
	None CurrentStateType; // 0x359(0x01)
	None CheckRePosition; // 0x35a(0x01)
	None TimeHandle_CheckRePosition; // 0x360(0x08)
	None CustomIndex; // 0x368(0x04)
	None TraceLand; // 0x36c(0x01)
	None TimerHandle_Destroy; // 0x370(0x08)
	None RootType; // 0x310(0x01)
	None RootBoxComponent; // 0x318(0x08)
	None InventoryComponent; // 0x320(0x08)
	None InteractiveSphereComponent; // 0x328(0x08)
	None InteractiveCancleSphereComponent; // 0x330(0x08)
	None DropperNickName; // 0x338(0x08)
	None BoxName; // 0x340(0x08)
	None RarityIndex; // 0x348(0x04)
	None DetectedCharacter; // 0x350(0x08)
	None playerGUID; // 0x390(0x04)
	None SupplyBoxClass; // 0x310(0x08)
	None ListPhaseInfo; // 0x318(0x10)
	None CurrentPhaseNum; // 0x328(0x04)
	None ListUsableSupplyBox; // 0x330(0x10)
	None MapSupplyBox; // 0x340(0x50)
	None TestRandomTableID; // 0x390(0x08)
	None UseTestRandom; // 0x398(0x01)
	None SpawnedSupplyBoxList; // 0x3b0(0x10)
	None ForceSpawnedSupplyBoxList; // 0x3c0(0x10)
	None AudioComponent; // 0x30e8(0x08)
	None CameraBase; // 0x2e40(0x08)
	None CameraAssistant3P; // 0x1390(0x08)
	None Camera3P; // 0x908(0x08)
	None CharacterBackLight; // 0x1e28(0x08)
	None CharacterBackLightSecond; // 0x36a8(0x08)
	None BackLightIntensity_FPP; // 0x3768(0x04)
	None BackLightIntensity_ADS; // 0x36d8(0x04)
	None BuffParticleComponents; // 0x24b8(0x10)
	None MutableComponent; // 0x24f8(0x08)
	None InteractiveSphereComponent; // 0x1a70(0x08)
	None InteractiveCancleSphereComponent; // 0x29b0(0x08)
	None Parachute; // 0x2718(0x08)
	None WaterParticleSystem; // 0x3830(0x08)
	None FlameDamageParticleComponent; // 0x3720(0x08)
	None FlameDamageParticle; // 0x36c0(0x08)
	None STMComponent; // 0x2d60(0x08)
	None ActionComponent; // 0xb58(0x08)
	None PerkComponent; // 0x1f80(0x08)
	None TeamInfoUpdaterComponentRef; // 0x10e8(0x08)
	None TimeHandle_MolotovDotDamage; // 0xb90(0x08)
	None Stand_FlameDotDamageAnim; // 0xee8(0x10)
	None Prone_FlameDotDamageAnim; // 0x850(0x10)
	None FlameDamageInfos; // 0x2820(0x10)
	None NPCNickName; // 0x1f60(0x10)
	None bAllowToggleCamera; // 0x1730(0x01)
	None bThirdPerson; // 0x1d18(0x01)
	None SprintingMoveRightModifier; // 0x11e0(0x04)
	None LeanValue; // 0x1168(0x04)
	None LeanDegreeMax; // 0x2ca4(0x04)
	None LeanUpdateSpeed; // 0x12bc(0x04)
	None SaveLeanState; // 0x29c4(0x01)
	None PrevLeanState; // 0x1684(0x01)
	None bFixLeanDegreeMax; // 0x20e0(0x01)
	None bFixFPPFoV; // 0x161c(0x01)
	None Health; // 0x10e0(0x04)
	None ShortTimeHealth; // 0x12f0(0x04)
	None TargetHealth; // 0x2d18(0x04)
	None BandageTargetHealth; // 0x11c8(0x04)
	None OverHealHealth; // 0xa80(0x04)
	None PP_Preset_ShortHealth; // 0x9a8(0x08)
	None PPInst_ShortHealth; // 0x2010(0x08)
	None TargetHealthMap; // 0x2040(0x50)
	None Oxygen; // 0x3208(0x04)
	None SteadyPoint; // 0x14b0(0x04)
	None BoostPercent; // 0xd50(0x01)
	None Default3PFOV; // 0x3708(0x04)
	None Default3PFOV_AOS; // 0x2784(0x04)
	None Default3PFOV_AMP; // 0xa94(0x04)
	None Default3PFOV_HeartBeatSensor; // 0xca8(0x04)
	None Default3PFOV_SkillMAP; // 0x16f8(0x04)
	None ForwardAxisValue; // 0x36b8(0x04)
	None RightAxisValue; // 0x2250(0x04)
	None InputMovementAttenuationTime; // 0x281c(0x04)
	None InputMovementAttenuationTimeIdleToCrouch; // 0x30d0(0x04)
	None InputMovementAttenuationTimeIdleToProne; // 0xc98(0x04)
	None InputMovementAttenuationTimeProneToIdle; // 0xe30(0x04)
	None InputMovementAttenuationValueIdleToCrouch; // 0x9b8(0x04)
	None InputMovementAttenuationValueIdleToProne; // 0x1524(0x04)
	None InputMovementAttenuationValueProneToIdle; // 0x20d0(0x04)
	None InputMovementAttenuationValue; // 0xf2c(0x04)
	None bMovementKeyPushed; // 0x29a8(0x01)
	None bLastMovementKeyPushed; // 0xb20(0x01)
	None bMovementInputLock; // 0x27d9(0x01)
	None InputAxisOnLockMovement; // 0x3358(0x08)
	None bInputKeyJump; // 0x27ed(0x01)
	None DoubleTapDelay_ToggleLean; // 0x2b0c(0x04)
	None bShouldSprint; // 0x1d08(0x01)
	None FireTypeComplete; // 0x21b8(0x01)
	None PerBoneDamageTable; // 0x3738(0x08)
	None MeleeDamageTable; // 0x2cf0(0x08)
	None PistolsDamageTable; // 0x1ae8(0x08)
	None ShotgunsDamageTable; // 0x2848(0x08)
	None SMGsDamageTable; // 0x1718(0x08)
	None ARsDamageTable; // 0x1460(0x08)
	None DMRsDamageTable; // 0xdc8(0x08)
	None SRsDamageTable; // 0x3668(0x08)
	None BrokenHelmetClass; // 0xbd0(0x08)
	None bNeedToSpawnBrokenEquipment; // 0x1ac8(0x01)
	None BrokenEquipmentLevel; // 0x1064(0x04)
	None BrokenEquipmentDamagedDirection; // 0x253c(0x0c)
	None BrokenEquipmentType; // 0x21d8(0x01)
	None InteractionType; // 0x3499(0x01)
	None InteractionTraceDistance; // 0x2fa4(0x04)
	None DetectedInteractionActor; // 0xca0(0x08)
	None DetectedInteractionComponet; // 0x26d8(0x08)
	None DetectedVehicleSeatComponent; // 0x1fa0(0x08)
	None DetectedInteractionCancleActors; // 0x2520(0x10)
	None InteractionDistRatioMap; // 0x1318(0x50)
	None ResurrectionCameraBlendTime; // 0x31a0(0x04)
	None PostProcessResurrectionClass; // 0x1458(0x08)
	None ResurrectionEffectCurve; // 0x13a8(0x08)
	None ResurrectionMaterialController; // 0x3368(0x10)
	None DetectedPickableItem; // 0x11d0(0x08)
	None DetectedItemList; // 0x2490(0x10)
	None DetectedBoxList; // 0x1050(0x10)
	None DetectedStealableList; // 0x26b0(0x10)
	None DetectedItemHideList; // 0x8d8(0x10)
	None TimerHandle_CheckDetectedItemList; // 0xf38(0x08)
	None InventoryComponent; // 0x1dd8(0x08)
	None AbilityComponent; // 0x1440(0x08)
	None DoorComponent; // 0x13e0(0x08)
	None ParkourComponent; // 0x1ba8(0x08)
	None BlueZoneGameRule; // 0x2008(0x08)
	None VoiceComponent; // 0x2440(0x08)
	None LadderComponent; // 0xf78(0x08)
	None StationaryCharInfo; // 0xb98(0x08)
	None CharacterReplication; // 0x2278(0x08)
	None CombineAnim_Stand; // 0x8b8(0x10)
	None CombineAnim_Prone; // 0x3810(0x10)
	None RepairAnim_Stand; // 0x2cf8(0x10)
	None RepairAnim_Prone; // 0x21a0(0x10)
	None CurrentPickupMontage; // 0x1188(0x08)
	None PickUpAnim_Unarmed_Floor; // 0x25f8(0x10)
	None PickUpAnim_Unarmed_Table; // 0x2ed8(0x10)
	None PickUpAnim_Unarmed_Crouch; // 0x3240(0x10)
	None PickUpAnim_Unarmed_Prone; // 0x2990(0x10)
	None PickUpAnim_Rifle_Floor; // 0x1070(0x10)
	None PickUpAnim_Rifle_Table; // 0x2b88(0x10)
	None PickUpAnim_Rifle_Crouch; // 0x25d8(0x10)
	None PickUpAnim_Rifle_Prone; // 0x31a8(0x10)
	None PickUpAnim_Pistol_Floor; // 0x2c20(0x10)
	None PickUpAnim_Pistol_Table; // 0x3110(0x10)
	None PickUpAnim_Pistol_Crouch; // 0x2168(0x10)
	None PickUpAnim_Pistol_Prone; // 0xe20(0x10)
	None DoorAnim_Open; // 0x10f0(0x10)
	None DoorAnim_Close; // 0x1590(0x10)
	None DoorAnim_Kick; // 0x2a48(0x10)
	None MovementAnim_GetUpFromBack; // 0x14f0(0x10)
	None MovementAnim_GetUpFromFront; // 0x33c8(0x10)
	None ConditionAnim_ShakeOut_Unarmed; // 0x2d78(0x10)
	None ConditionAnim_ShakeOut_Rifle; // 0x19d0(0x10)
	None MeleeAnim_Punch_Idle; // 0x2ef8(0x10)
	None MeleeAnim_Punch_Crouch; // 0x3758(0x10)
	None MeleeAnim_Punch_Jump; // 0x3560(0x10)
	None MeleeAnim_Rifle_Idle; // 0x21c0(0x10)
	None MeleeAnim_Rifle_Crouch; // 0x3268(0x10)
	None MeleeAnim_Pistol_Idle; // 0x2d28(0x10)
	None MeleeAnim_Pistol_Crouch; // 0x1408(0x10)
	None DeathAnim_Crouch; // 0x2790(0x10)
	None DeathAnim_FlameDamage; // 0x7c8(0x10)
	None DeathAnim_Grenade; // 0xd58(0x10)
	None DeathAnim_HeadShot; // 0x15d8(0x10)
	None DeathAnim_Natural; // 0x1b90(0x10)
	None DeathAnim_Rifle; // 0x1570(0x10)
	None DeathAnim_Shotgun; // 0x2468(0x10)
	None DeathAnim_Sprint; // 0x890(0x10)
	None DeathAnim_Falling; // 0xc28(0x10)
	None DeathAnim_ClosedEyes; // 0x1d00(0x08)
	None PickUpStartEvent; // 0x2d68(0x08)
	None PickUpBackpackEvent; // 0x10d8(0x08)
	None EquipAnim_MainWeapon1; // 0x26c8(0x10)
	None EquipAnim_MainWeapon1_Prone; // 0x2240(0x10)
	None EquipAnim_MainWeapon2; // 0x2a80(0x10)
	None EquipAnim_MainWeapon2_Prone; // 0x37b8(0x10)
	None EquipAnim_SubWeapon; // 0x2e48(0x10)
	None EquipAnim_SubWeapon_Prone; // 0x2680(0x10)
	None EquipAnim_Melee; // 0x1f70(0x10)
	None EquipAnim_Melee_Prone; // 0x1430(0x10)
	None EquipAnim_Amplifier; // 0x1b58(0x10)
	None EquipAnim_Amplifier_Prone; // 0x2310(0x10)
	None EquipAnim_HeartBeatSensor; // 0x33e8(0x10)
	None EquipAnim_HeartBeatSensor_Prone; // 0x1ad0(0x10)
	None SlidingAnim; // 0x8c8(0x10)
	None RollingAnim; // 0xb40(0x10)
	None KnockbackRollingAnim; // 0xa18(0x10)
	None EquipAnim_ThrowingWeapon; // 0x3740(0x10)
	None EquipAnim_Prone_ThrowingWeapon; // 0x10c8(0x10)
	None UnequipAnim_MainWeapon1; // 0x1398(0x10)
	None UnequipAnim_MainWeapon1_Prone; // 0x1858(0x10)
	None UnequipAnim_MainWeapon2; // 0x35b0(0x10)
	None UnequipAnim_MainWeapon2_Prone; // 0xb00(0x10)
	None UnequipAnim_SubWeapon; // 0x868(0x10)
	None UnequipAnim_SubWeapon_Prone; // 0x2f18(0x10)
	None UnequipAnim_Melee; // 0x2018(0x10)
	None UnequipAnim_Melee_Prone; // 0x1380(0x10)
	None UnequipAnim_Amplifier; // 0x2830(0x10)
	None UnequipAnim_Amplifier_Prone; // 0x1c90(0x10)
	None UnequipAnim_HeartBeatSensor; // 0x3190(0x10)
	None UnequipAnim_HeartBeatSensor_Prone; // 0x1bd8(0x10)
	None UnequipAnim_ThrowingWeapon; // 0x29e8(0x10)
	None UnequipAnim_Prone_ThrowingWeapon; // 0x20e8(0x10)
	None LandingAnim_LandStop; // 0x13b8(0x10)
	None LandingAnim_Parachute; // 0x3778(0x10)
	None LandingAnim_Unarmed; // 0x20a0(0x10)
	None LandingAnim_Rifle; // 0x2ae8(0x10)
	None LandingAnim_Pistol; // 0x11a8(0x10)
	None ResuscitationAnimSets; // 0xc08(0x10)
	None WeaponEquipEvents; // 0x2b58(0x10)
	None AttachmentEquipEvents; // 0x32c0(0x10)
	None WearableEquipEvents; // 0x37a0(0x10)
	None ConsumablesEvents; // 0x1128(0x10)
	None MedipackUseEvent; // 0x24d0(0x08)
	None ItemDropEvent; // 0xe40(0x08)
	None ADSEnterEvent; // 0x2090(0x08)
	None ADSEnterEvent_Digital; // 0xb80(0x08)
	None ADSExitEvent; // 0x2610(0x08)
	None ADSExitEvent_Digital; // 0x32e0(0x08)
	None AOSEnterEvent; // 0x3a38(0x08)
	None AOSExitEvent; // 0x37d8(0x08)
	None AMPEnterEvent; // 0x3730(0x08)
	None AMPExitEvent; // 0x3920(0x08)
	None AMPNoiseEvent; // 0xaa8(0x08)
	None AMPNoiseStopEvent; // 0x1090(0x08)
	None PlosiveSoundDetection3LvEvent; // 0x1a50(0x08)
	None HeartBeatSensorEnterEvent; // 0x1138(0x08)
	None HeartBeatSensorExitEvent; // 0x1f48(0x08)
	None HeartBeatSensorNoiseEvent; // 0x3018(0x08)
	None HeartBeatSensorNoiseStopEvent; // 0x22e0(0x08)
	None DamagedEvent; // 0x36d0(0x08)
	None HitEvent; // 0x31c8(0x08)
	None SnowAreaEnteringEvent; // 0x1220(0x08)
	None UltimateSprintEvent; // 0x33b0(0x08)
	None bIsParachuteLanding; // 0x36f0(0x01)
	None ParachuteLandingHeight; // 0x81c(0x04)
	None StartDescendingEvent; // 0x3a18(0x08)
	None ParachuteFoldEvent; // 0x20c8(0x08)
	None TimerHandle_Sequnce; // 0x3028(0x08)
	None TeamPosition; // 0xef8(0x08)
	None AdditionalTeamPositionWidgetHeight; // 0x2648(0x04)
	None TeamPositionWidgetInterpSpeed; // 0x2780(0x04)
	None CurrentTeamPositionHeight; // 0x31ec(0x04)
	None OnChangeDetectedItems; // 0x1880(0x10)
	None bIsArmedBeforeAction; // 0x2ca0(0x01)
	None Delegate_OnViewCameraInWater; // 0x23e8(0x10)
	None Delegate_OnViewCameraOutWater; // 0x3178(0x10)
	None bInSmoke; // 0x2a32(0x01)
	None Delegate_OnInSmoke; // 0xc38(0x10)
	None Delegate_OnOutSmoke; // 0x30f0(0x10)
	None SmokeActors; // 0x1f88(0x10)
	None SwimDiveEvent; // 0x1110(0x08)
	None bIsEnterIndoorVolume; // 0x1af4(0x01)
	None SkyLightRef; // 0x8a8(0x08)
	None PrevSkyLightIntensityCache; // 0x22d4(0x04)
	None PrevSkyLightOcclusionTintCache; // 0x36b4(0x04)
	None SkyLightCurrentPriority; // 0x3168(0x04)
	None OverlappedInDoorVolumes; // 0x2df8(0x10)
	None LastSteppedSurface; // 0x1c80(0x08)
	None SurfaceType; // 0x2428(0x01)
	None SurfaceType_LastTick; // 0x344c(0x01)
	None MP_SnowInterpSpeed; // 0xd88(0x04)
	None TimerHandle_BreathEffect; // 0x21d0(0x08)
	None BreathParticleComponent; // 0x1d70(0x08)
	None BreathParticle_Idle; // 0xd30(0x08)
	None BreathParticle_Moving; // 0x37e0(0x08)
	None InWaterParticle; // 0x2700(0x08)
	None OnUpdateMutableDelegate; // 0x2d88(0x10)
	None OverlapWaterVolume; // 0x3578(0x08)
	None bIsMelee; // 0xd78(0x01)
	None bIsMeleeJumpAttack; // 0x994(0x01)
	None bCanJumpMeleeAttack; // 0xd10(0x01)
	None bIsMeleeAttackBlocked; // 0x12b8(0x01)
	None LastMeleeAttackTime; // 0xd74(0x04)
	None CurrentMeleeAnimSlot; // 0x2c90(0x10)
	None ActorsToIgnore_Melee; // 0x2da8(0x10)
	None MeshesToIgnore_Melee; // 0x1208(0x10)
	None UnarmedMeleeDamage_Ground; // 0x36bc(0x04)
	None UnarmedMeleeDamage_Jump; // 0x28f0(0x04)
	None bIsFired; // 0x2290(0x01)
	None bWantsToFire; // 0x839(0x01)
	None bWantsToAOS; // 0x1069(0x01)
	None bIsLanded; // 0xfc0(0x01)
	None FiredTimeCount; // 0x9c4(0x04)
	None StartFireTime; // 0x1628(0x04)
	None bIsADSFireToCamera; // 0x3580(0x01)
	None FireToCameraLocationCorrection; // 0x2f80(0x04)
	None ArmsLagRotation; // 0x810(0x0c)
	None ArmsLagDeltaMin; // 0x2b70(0x04)
	None ArmsLagDeltaMax; // 0x13b0(0x04)
	None DefaultsArmsLagRotationMax; // 0xb64(0x04)
	None DefaultsArmsLagRotationSpeed; // 0x28bc(0x04)
	None ArmsLags; // 0x2a98(0x50)
	None ArmsLagBaseModify; // 0x1f50(0x04)
	None ArmsLagWeaponModify; // 0x11fc(0x04)
	None ArmsLagWeaponRotation; // 0xbb8(0x0c)
	None ADSDeltaRotation; // 0x1518(0x0c)
	None ADSEndLocation; // 0x320c(0x0c)
	None bSteadyAim; // 0x1dfc(0x01)
	None LastSwayRotationOnSteadyAim; // 0x1aa8(0x0c)
	None SteadyAimReadyEvent; // 0x1748(0x08)
	None SteadyAimStartEvent; // 0x25e8(0x08)
	None SteadyAimEndEvent; // 0x29e0(0x08)
	None HeadShotBloodEffectDistance; // 0x7f0(0x04)
	None HeadShotHelmetFxEmitterTemplate; // 0x1510(0x08)
	None BoltActionDelayTime; // 0x1ab4(0x04)
	None bWaitingADSReturn; // 0x2a31(0x01)
	None ADSReturnEnableTime; // 0x84c(0x04)
	None Delay_AOSToADS; // 0xb24(0x04)
	None bNeedToBeADS; // 0x3410(0x01)
	None TimerHandle_ADSProcess; // 0x2b80(0x08)
	None PP_Preset_ADS; // 0x2f58(0x08)
	None PPInst_ADS; // 0x28c0(0x08)
	None ReplayInputForwardAxisValue; // 0x12a0(0x04)
	None ReplayInputRightAxisValue; // 0x20c0(0x04)
	None CurrentInputAxis; // 0x26a0(0x08)
	None Delegate_OnCameraViewModeChanged; // 0x5e8(0x10)
	None ZoomInAudioEvent_Digital; // 0x2450(0x08)
	None ZoomOutAudioEvent_Digital; // 0x1dd0(0x08)
	None ZoomAudioEventRepeatDelay; // 0x25f4(0x04)
	None ZoomAudioEventLastPlayTime; // 0x3794(0x04)
	None OnPickableItemDetected; // 0x628(0x10)
	None OverHeadTraceDistance; // 0xf30(0x04)
	None bShouldAdjustOverHead; // 0x33d8(0x01)
	None UpdateAnimationDistance; // 0x1538(0x04)
	None bIsDisarming; // 0x658(0x01)
	None ResuscitationStopEvents; // 0xa88(0x08)
	None ResuscitatingCharacter; // 0x1fe8(0x08)
	None RequestResuscitationCoolTime; // 0xf20(0x04)
	None CurrentResuscitationAnimSlot; // 0xf88(0x10)
	None TimerHandle_SetIsFired; // 0x3a48(0x08)
	None KillAssistValidTime; // 0x3450(0x04)
	None KillAssistMaxCount; // 0xf28(0x04)
	None KnockOutAssistValidTime; // 0x2904(0x04)
	None KnockOutAssistMaxCount; // 0xc88(0x04)
	None AssistInfo; // 0x1950(0x10)
	None ThrowingWeaponFireDelay; // 0x2a64(0x04)
	None PreShootDeltaSecond; // 0xfd0(0x04)
	None bIsParachuteAvailable; // 0x1bd1(0x01)
	None ParachuteInputForward; // 0x2fe0(0x04)
	None ParachuteInputRight; // 0x7a8(0x04)
	None ParachuteForwardMomentum; // 0x13d4(0x04)
	None ParachuteLastRotator; // 0x3428(0x0c)
	None CurrentParachuteMaxMomentum; // 0x910(0x04)
	None ParachuteMaxMomentum; // 0xe94(0x04)
	None ParachuteMomentumAcc; // 0x15d0(0x04)
	None ParachuteMomentumDeacc; // 0x15e8(0x04)
	None ParachuteMomentumZ; // 0x1ba4(0x04)
	None DescentInputVectorAcc; // 0x26f8(0x04)
	None ParachuteInputVectorAcc; // 0x1f54(0x04)
	None ParachuteVelocityChangeFinalRate; // 0x32ac(0x04)
	None ParachuteVelocityChangeZDecRate; // 0xb3c(0x04)
	None ParachuteLandingVelocityZ; // 0x1930(0x04)
	None ParachuteLandingVelocityXY; // 0xf60(0x04)
	None ForwardMomentumRangeMin; // 0x1734(0x04)
	None ForwardMomentumRangeMax; // 0xaec(0x04)
	None CurrentYawSpeed; // 0x1ce0(0x04)
	None CurrentRollSpeed; // 0x2908(0x04)
	None CurrentPitchSpeed; // 0x2e58(0x04)
	None MinPitchInParachute; // 0x3128(0x04)
	None MaxPitchInParachute; // 0x2408(0x04)
	None GlidePitchInParachute; // 0x9e8(0x04)
	None MinRollInParachute; // 0x2a90(0x04)
	None MaxRollInParachute; // 0x3424(0x04)
	None MaxRollInParachuteVelocity; // 0x1378(0x04)
	None ParachuteTurnSpeedYaw; // 0x2b74(0x04)
	None ParachuteTurnSpeedPitch; // 0x2818(0x04)
	None ParachuteTurnSpeedRoll; // 0x2a00(0x04)
	None ParachuteTurnChangeSpeedYaw; // 0x2098(0x04)
	None ParachuteTurnChangeSpeedPitch; // 0x2178(0x04)
	None ParachuteTurnChangeSpeedRoll; // 0x386c(0x04)
	None HeightToGetInParachuteFromLand; // 0x2fa0(0x04)
	None ForceHeightToGetInParachuteFromLand; // 0x2a34(0x04)
	None ReplicatedParachuteVelocity; // 0x12d0(0x0c)
	None ParachutePitchCurve; // 0x14b8(0x08)
	None ParachuteSkinMaterials; // 0x1868(0x10)
	None CurrentParachuteSkin; // 0x1760(0x08)
	None bChangeNearClipPlane; // 0x2ca9(0x01)
	None DescentStartZPosition; // 0x2b78(0x04)
	None ParachuteAvailableFallingDistance; // 0xd28(0x04)
	None DescentZ; // 0xda0(0x04)
	None SeaLevelZ; // 0x800(0x04)
	None SaveMaxWalkSpeed; // 0x37d0(0x04)
	None SaveCameraBoomLocationZ; // 0x2d0c(0x04)
	None PosToGetInParachute; // 0x2c1c(0x04)
	None AccelerationPPClass; // 0x3130(0x08)
	None RadialOnDescentCurve; // 0x998(0x08)
	None RadialRate; // 0x3798(0x04)
	None DescentBlurWidth; // 0x15a0(0x04)
	None AccelerationPPInst; // 0x27b8(0x08)
	None TargetSpringArmLengthDescent; // 0x1850(0x04)
	None SpeedSpringArmLengthDesecnt; // 0x1a5c(0x04)
	None bDescentCameraShakeLoop; // 0x2a10(0x01)
	None DescentCameraShakeDelay; // 0x2590(0x04)
	None DescentCameraShake; // 0x1300(0x08)
	None CloudFxEmitterTemplate; // 0x1f58(0x08)
	None CloudFxInDescent; // 0x3438(0x08)
	None VelocityZ_LandStop; // 0x1a3c(0x04)
	None VelocityZ_Falling; // 0x3138(0x04)
	None PrevMeshRelativeZ; // 0x349c(0x04)
	None PronedEyeHeight; // 0x2ee8(0x04)
	None bIsProneWeaponIdle; // 0x316c(0x01)
	None bIsAutoSprint; // 0x2f38(0x01)
	None PronedDeltaHeightCamera3P; // 0x256c(0x04)
	None CrouchedDeltaHeightCamera3P; // 0x1154(0x04)
	None CrouchMovedDeltaHeightCamera3P; // 0x1cf8(0x04)
	None StandDeltaHeightCamera3P; // 0x20f8(0x04)
	None StandSprintDeltaHeightCamera3P; // 0x2708(0x04)
	None Camera1PInterpSrc; // 0x2154(0x0c)
	None Camera3PInterpSrc; // 0x928(0x0c)
	None Camera3PInterpDst; // 0x1678(0x0c)
	None TargetArmLength; // 0x3664(0x04)
	None TargetArmLengthInterpSpeed; // 0x2c30(0x04)
	None TargetArmLengthInterpSpeed_AMP; // 0x1084(0x04)
	None TargetArmLengthInterpSpeed_HeartBeatSensor; // 0x1acc(0x04)
	None TargetFieldOfView; // 0x3238(0x04)
	None TargetSocketOffset; // 0x1644(0x0c)
	None DefaultCameraLag; // 0x1098(0x04)
	None ReturnCameraLag; // 0xe58(0x04)
	None DefaultSocketOffset_VehicleAOS; // 0x289c(0x0c)
	None DefaultSocketOffset_LeftHipshot; // 0x31d4(0x0c)
	None DefaultSocketOffset_Hipshot; // 0xba0(0x0c)
	None DefaultSocketOffset_RightHipshot; // 0x20b4(0x0c)
	None DefaultSocketOffset_LeftLeanAOS; // 0x2f94(0x0c)
	None DefaultSocketOffset_RightLeanAOS; // 0x7ac(0x0c)
	None DefaultSocketOffset_LeftAOS_Idle; // 0x2554(0x0c)
	None DefaultSocketOffset_RightAOS_Idle; // 0x31e0(0x0c)
	None DefaultSocketOffset_LeftAOS_Crouch; // 0x9c8(0x0c)
	None DefaultSocketOffset_RightAOS_Crouch; // 0x2480(0x0c)
	None DefaultSocketOffset_LeftAOS_Prone; // 0x36e0(0x0c)
	None DefaultSocketOffset_RightAOS_Prone; // 0x2ba0(0x0c)
	None DefaultTargetOffset_HipShot; // 0x2f0c(0x0c)
	None DefaultTargetOffset_AOS_Stand_Idle; // 0x28c8(0x0c)
	None DefaultTargetOffset_AOS_Stand_Lean; // 0x1cb8(0x0c)
	None DefaultTargetOffset_AOS_Crouch_Idle; // 0x83c(0x0c)
	None DefaultTargetOffset_AOS_Crouch_Lean; // 0x1e08(0x0c)
	None DefaultTargetArmLength_Hipshot; // 0x2160(0x04)
	None DefaultTargetArmLength_AOS; // 0xa90(0x04)
	None Camera3P_FOV_InterpSpeed; // 0xa14(0x04)
	None Camera3P_AMP_FOV_InterpSpeed; // 0x1948(0x04)
	None Camera3P_HeartBeatSensor_FOV_InterpSpeed; // 0x2f8c(0x04)
	None Camera3P_Lean_InterpSpeed; // 0x2518(0x04)
	None DeathCamClass; // 0xc70(0x08)
	None DeathBeginTime; // 0x3a54(0x04)
	None BodyBaseSkeletalMesh; // 0x668(0x08)
	None bNeedToUpdatePreviewPawn; // 0x3544(0x01)
	None Mutable_MaleInstance; // 0x11c0(0x08)
	None Mutable_FemaleInstance; // 0x2b98(0x08)
	None InventoryCharacterClass; // 0x2300(0x08)
	None InventoryCharacter; // 0xbc8(0x08)
	None OnUpdateCastingDelegate; // 0x6b0(0x10)
	None UsingBackpackItemIndex; // 0xa28(0x04)
	None ItemInterruptInputSeconds; // 0x31b8(0x04)
	None CastingItemTimer; // 0x1298(0x08)
	None CastingSupplyTimer; // 0x1780(0x08)
	None CastingItemMontageTimer; // 0x23f8(0x08)
	None LastCastingItemAnimSlot_Stand; // 0x1560(0x10)
	None LastCastingItemAnimSlot_Prone; // 0x13e8(0x10)
	None CastingStopEvents; // 0x2bf0(0x10)
	None bIsCastingItem; // 0x1e14(0x01)
	None CompletedCastingInfo; // 0x2e5c(0x08)
	None BasicSetting_gender; // 0x2198(0x04)
	None BasicSetting_face; // 0x15c8(0x04)
	None BasicSetting_face_color; // 0x2028(0x04)
	None BasicSetting_hair; // 0x24ac(0x04)
	None BasicSetting_hair_color; // 0x142c(0x04)
	None BasicSetting_makeup; // 0x36dc(0x04)
	None BasicSettingItemInfos; // 0x1fd0(0x10)
	None CombineTargetRecipe; // 0x1a88(0x08)
	None CombineTargetMaterials; // 0x3550(0x10)
	None CombineCompleteAudioEvent; // 0x14a8(0x08)
	None bEnabledFur; // 0x1fa8(0x01)
	None WearableNameHasFur; // 0x32d0(0x08)
	None CooldownTimeForEnterVehicle; // 0x25d4(0x04)
	None CoolDownTimeForUseLadder; // 0x3728(0x04)
	None NearbyVehicles; // 0x2258(0x10)
	None Delegate_OnEnteredVehicle; // 0x6c0(0x10)
	None MaxVehicleEscapeSpeed; // 0x9a0(0x04)
	None PreviousVehicleSeat; // 0x2720(0x08)
	None ProjectileGrenades; // 0x2268(0x10)
	None OnChangeProjectilePredictPath; // 0x2d50(0x10)
	None IsBlind; // 0x141c(0x01)
	None OnAirCraftDelegate; // 0x21e0(0x10)
	None OnCharacterGroundStateChangeDelegate; // 0x15f8(0x10)
	None FlashBangAngle; // 0x820(0x04)
	None PostProcessFlashBangClass; // 0x2e70(0x08)
	None GrenadeFlashBangStartEvent; // 0x1370(0x08)
	None GrenadeFlashBangEndEvent; // 0x3710(0x08)
	None GrenadeFragmentExplosionSineStopEvent; // 0x9f0(0x08)
	None PostProcessBloodHitClass; // 0x31c0(0x08)
	None DamagedDissolveAnimationCurve; // 0x1dc0(0x08)
	None PostProcessBloodHit; // 0x2420(0x08)
	None DamagedDissolveRateTime; // 0x1268(0x04)
	None DamagedTermTime; // 0x1540(0x04)
	None DamagedDissolveAnimaitionMaxTime; // 0x2a60(0x04)
	None HitBlinkTime; // 0x32a8(0x04)
	None InternalDamagedTermTime; // 0xde4(0x04)
	None InternalHitBlinkTime; // 0x1fe0(0x04)
	None DamagedDissolveAnimationValue; // 0x27f0(0x04)
	None IsEndTermTime; // 0x1a38(0x01)
	None IsPlayingDamage; // 0xa98(0x01)
	None IsHit; // 0x12cc(0x01)
	None IsDissolve; // 0xc90(0x01)
	None DamageReset; // 0x26c0(0x01)
	None HitBlinkState; // 0x2608(0x04)
	None CurrentDamageCount; // 0x990(0x04)
	None DissolveCount; // 0x2504(0x04)
	None PostProcessOuterPlayZoneClass; // 0x22e8(0x08)
	None ShowTimePostProcessOuterPlayZone; // 0x11e8(0x04)
	None TimerHandle_OuterPlayZone; // 0x3100(0x08)
	None PostProcessBlueZoneHitClass; // 0x14e8(0x08)
	None TimerHandle_BlueZone; // 0x1df0(0x08)
	None PostProcessMagneticHitClass; // 0x2d20(0x08)
	None PostProcessMagneticHit; // 0xbd8(0x08)
	None MagneticDamagedDissolveAnimationCurve; // 0x2778(0x08)
	None MagneticDamagedTermTime; // 0x2a6c(0x04)
	None MagneticDamagedDissolveAnimaitionMaxTime; // 0x2f84(0x04)
	None MagneticHitBlinkTime; // 0x3414(0x04)
	None InternalMagneticDamagedTermTime; // 0x2888(0x04)
	None InternalMagneticHitBlinkTime; // 0x1af0(0x04)
	None MagneticDamagedDissolveAnimationValue; // 0x2be8(0x04)
	None BluezoneMaterialOnTime; // 0x830(0x04)
	None IsMagneticEndTermTime; // 0x1bd2(0x01)
	None IsMagneticDamage; // 0x27da(0x01)
	None IsMagneticHit; // 0x2840(0x01)
	None IsMagneticDissolve; // 0x2808(0x01)
	None MagneticDamageReset; // 0x3498(0x01)
	None PostProcessDustClass; // 0x26e8(0x08)
	None DustDissolveAnimationCurve; // 0x3980(0x08)
	None PostProcessDust; // 0x15b0(0x08)
	None DustDissolveAnimaitionMaxTime; // 0x17ac(0x04)
	None DustDissolveDelayTime; // 0xb88(0x04)
	None InternalDustDissolveDelayTime; // 0xb14(0x04)
	None DustDissolveAnimationValue; // 0x9d4(0x04)
	None IsOnDust; // 0x2b7c(0x01)
	None IsDustDissolve; // 0x23e0(0x01)
	None DustReset; // 0x1898(0x01)
	None PP_Preset_PickupOutline; // 0x1190(0x08)
	None PP_PickupOutlineRef; // 0x2560(0x08)
	None CurrentOutlineThickness; // 0x24a8(0x04)
	None MaxOutlineThickness; // 0x2568(0x04)
	None OutlineThicknessInterpSpeed; // 0x1f98(0x04)
	None CurrentCameraModifyerX; // 0x1d50(0x04)
	None CurrentCameraModifyerY; // 0x228c(0x04)
	None CurrentEMouseSensitivityState; // 0x33f8(0x01)
	None bPendingOpenDoor; // 0x2ca8(0x01)
	None KickTargetDoor; // 0x1160(0x08)
	None DoorBreachingParticle; // 0x3228(0x08)
	None WindowBreachingParticle; // 0x2a08(0x08)
	None BreachingAudioEvent; // 0x1698(0x08)
	None BreachingAudioEvent_Silence; // 0x3788(0x08)
	None AnimInstance; // 0x26f0(0x08)
	None PostprocessAnimInstance; // 0x16f0(0x08)
	None AnimInstance_FPP; // 0x1cd8(0x08)
	None BravoHotelGameState; // 0x2810(0x08)
	None BravoHotelPlayerController; // 0x3800(0x08)
	None IdleNum; // 0x34e0(0x04)
	None IdleWaitingTime; // 0x25d0(0x04)
	None LevelUpEffectBuffName; // 0x12b0(0x08)
	None DefaultBuffName; // 0x2430(0x10)
	None DefaultPerkInfo; // 0x1ab8(0x10)
	None UberUser; // 0x2458(0x10)
	None CurrentPerkInfos; // 0x3348(0x10)
	None UltimatePerkInfo; // 0x3278(0x28)
	None PerkUIInfos; // 0x1668(0x10)
	None UltimateUIInfo; // 0x3840(0x2c)
	None CurrentPerkCards; // 0x1198(0x10)
	None MutableBuffList; // 0x1750(0x10)
	None CurrentSkillType; // 0x1c10(0x01)
	None OnChangeFireType; // 0x1608(0x10)
	None CurrentReadyToSnipeGrade; // 0x260c(0x04)
	None Delegate_OnEndSearchInstinct; // 0x1d20(0x10)
	None UsedTrapList; // 0x2670(0x10)
	None PerkLevelUpType; // 0x3a40(0x01)
	None ActiveSkillInitIndex; // 0xc6c(0x04)
	None ActiveSkillCount; // 0x270c(0x04)
	None CurrentDisplayAbility; // 0x2984(0x0c)
	None LoadedClasses; // 0x1548(0x10)
	None PerkDeckChangingCount; // 0x2d38(0x04)
	None OnMovementInputPressedDelegate; // 0x708(0x10)
	None bIsMoving; // 0xbe0(0x01)
	None bForceMoving; // 0xc18(0x01)
	None LastDamagedType; // 0x31f0(0x08)
	None LastDamagedAmount; // 0x22d8(0x04)
	None LastHitType; // 0x3750(0x08)
	None LastSimulatedTakeDamageInfo; // 0x948(0x48)
	None DebuffHitResult; // 0x398c(0x88)
	None DebuffHitDamageType; // 0x28f8(0x08)
	None TakeDamageMontageList; // 0x10b8(0x10)
	None BloodSplatterEffect; // 0x36f8(0x08)
	None PunchEffect; // 0x1bf8(0x08)
	None ThrowingWeaponDirectHitEffect; // 0x1200(0x08)
	None BloodEffectNearbyDist; // 0x122c(0x04)
	None DefaultItemSetting; // 0x1000(0x38)
	None DefaultWearableSetting; // 0x2c00(0x18)
	None BlackMarketItemPresetList; // 0x37e8(0x10)
	None OnCanProneFailedDelegate; // 0x720(0x10)
	None MinDamageableFallingSpeed; // 0x211c(0x04)
	None MaxDamageableFallingSpeed; // 0xfe0(0x04)
	None MinDamageableFallingSpeedFromVehicle; // 0x2b10(0x04)
	None MaxDamageableFallingSpeedFromVehicle; // 0xb10(0x04)
	None LandingReason; // 0xd11(0x01)
	None Delegate_OnExitFallingState; // 0x14d8(0x10)
	None OverlappedPhysicMaterials; // 0x1248(0x10)
	None BushSoundSpawnDelay; // 0x17a8(0x04)
	None BushLandingDamageMultiplier; // 0x2e64(0x04)
	None OverlappedCantProneComponent; // 0x1c30(0x50)
	None bIsInsideBlueZone; // 0x178d(0x01)
	None bIsSpectated; // 0x1a58(0x01)
	None Camera3P_DeltaTargetOffsets; // 0x1980(0x50)
	None bReplaceFreeLook; // 0x924(0x01)
	None bUpdateDeathRotation; // 0x2a58(0x01)
	None RagdollLocation; // 0xd68(0x0c)
	None RagdollVelocity; // 0x8f0(0x0c)
	None LastDamageType; // 0x8e8(0x08)
	None Ragdoll_ZOffset; // 0x1d34(0x04)
	None bApplyRagdollForce; // 0x3014(0x01)
	None BravoHotelCharacterMovement; // 0x750(0x08)
	None PrevMovementMode; // 0x2b14(0x01)
	None NewMovementMode; // 0x11dc(0x01)
	None PrevCustomMovementMode; // 0x27d8(0x01)
	None NewCustomMovementMode; // 0xf08(0x01)
	None MovementInputVector; // 0x1f38(0x0c)
	None TimerHandle_HideParachute; // 0x758(0x08)
	None Timeline_TunnelEffect; // 0x35c0(0x98)
	None Curve_TunnelEffect; // 0x3930(0x50)
	None Timeline_CameraInterp; // 0x17b8(0x98)
	None Curve_CameraInterp; // 0x2e78(0x08)
	None Curve_AdsCameraInterp; // 0x918(0x08)
	None TimerHandle_MinTimeJumpingBeforeLand; // 0x3440(0x08)
	None MinTimeJumpingBeforeLand; // 0x2de4(0x04)
	None DescentXYAcc; // 0x2e18(0x04)
	None DescentAirControl; // 0x1a90(0x04)
	None DescentSpeed; // 0x1934(0x04)
	None DescentGravityScale; // 0x1d14(0x04)
	None DescentDeacceleration; // 0x8fc(0x04)
	None DescentMaxAcceleration; // 0x8a4(0x04)
	None DescentCameraLocation; // 0x2280(0x0c)
	None ParachuteAirControl; // 0x37cc(0x04)
	None ParachuteSpeed; // 0x2e68(0x04)
	None ParachuteGravity; // 0x1558(0x04)
	None ParachuteDeacceleration; // 0xfbc(0x04)
	None ParachuteMaxAcceleration; // 0xc94(0x04)
	None ParachuteCameraLocation; // 0x1448(0x0c)
	None ParachuteSocketOffsetY; // 0x1d0c(0x04)
	None ParachuteSocketDeltaOffsetZ; // 0x1c20(0x04)
	None ParachuteReadyToLandHeight; // 0x3548(0x04)
	None ParachuteQuickLandingStartHeight; // 0x2c48(0x04)
	None ParachuteQuickLandingStartRadius; // 0x392c(0x04)
	None ParachuteQuickLandingVelocityModifierXY; // 0x1978(0x04)
	None ParachuteQuickLandingVelocityModifierZ; // 0x11d8(0x04)
	None ParachuteQuickLandingDMGRate; // 0x1938(0x04)
	None bCanQuickLanding; // 0x2108(0x01)
	None LastQuickLandingAllowedLocation; // 0x3538(0x0c)
	None ParachuteTargetCameraLocation; // 0x3670(0x0c)
	None ParachuteTargetCameraSpeed; // 0x26fc(0x04)
	None ParachuteTargetArmLengthSpeedStart; // 0x8a0(0x04)
	None ParachuteTargetArmLengthSpeedEnd; // 0xfa8(0x04)
	None ParachuteUnfoldCameraShake; // 0x3418(0x08)
	None BreathStartEvent; // 0x29a0(0x08)
	None BreathEndEvent; // 0x1d38(0x08)
	None BreathStopEvent; // 0xfc8(0x08)
	None SprintingBeginRange; // 0x365c(0x08)
	None SprintingRange; // 0xb28(0x08)
	None ReduceCharacterSpeedTime; // 0x2db8(0x04)
	None InternalReduceCharacterSpeedTime; // 0x13c8(0x04)
	None IsInReduceSpeedExplosionRange; // 0x3188(0x01)
	None PostProcessEffectsTable; // 0xad0(0x08)
	None PostProcessAssignedList; // 0x16a0(0x50)
	None PostProcessBuffList; // 0x28a8(0x10)
	None RenderSettingsTable; // 0xfa0(0x08)
	None bUpdateRenderSettings; // 0x1c11(0x01)
	None CurrentTerrainType; // 0x15a8(0x04)
	None AttachInAircraftOffset; // 0x2a38(0x0c)
	None AttachInAircraftRotationOffset; // 0x33a4(0x0c)
	None AttachInAircraftCameraLocaiton; // 0x1720(0x0c)
	None InitSpringArmLengthInAircraft; // 0x3824(0x04)
	None TargetSpringArmLengthInAircraft; // 0xda4(0x04)
	None SpeedSpringArmLengthInAirCraft; // 0x2f08(0x04)
	None PrevBloomIntensity; // 0x29f8(0x04)
	None PrevBloomThreshold; // 0x2a5c(0x04)
	None TargetBloomIntensityInAirCraft; // 0x26c4(0x04)
	None SpeedBloomIntensityInAirCraft; // 0x1bb8(0x04)
	None BloomStartDelayTimeInAirCraft; // 0x1ba0(0x04)
	None CineDurationTimeMax; // 0x2710(0x04)
	None CineTextAnimationAppearTime; // 0x9c0(0x04)
	None GetPerkOnStartTime; // 0x32a0(0x04)
	None FPSK_Camera; // 0xd48(0x08)
	None ADSCameraScene; // 0x1b78(0x08)
	None FPSK_MutableArms; // 0x3108(0x08)
	None FPSK_Arms; // 0xbe8(0x08)
	None FPSK_CameraHeight; // 0x2e08(0x0c)
	None FPSK_CameraProbe; // 0x1cc4(0x04)
	None FPSK_CameraPitchDeltaX; // 0x3808(0x04)
	None FPSK_CameraLocation_Idle; // 0x2548(0x0c)
	None FPSK_CameraBone_Idle; // 0x11b8(0x08)
	None FPSK_CameraLocation_ADS; // 0xf54(0x0c)
	None FPSK_CameraLocation_Parkour; // 0x1420(0x0c)
	None FPSK_CameraBone_Parkour; // 0x2d70(0x08)
	None FPSK_CameraHeight_Stand; // 0x824(0x04)
	None FPSK_CameraHeight_Crouch; // 0x3390(0x04)
	None FPSK_CameraHeight_Prone; // 0x1ae0(0x04)
	None FPSK_CameraLocation_Collide; // 0x103c(0x0c)
	None FPSK_CameraLocation_LeftLeanDelta; // 0x263c(0x0c)
	None FPSK_CameraLocation_RightLeanDelta; // 0xff4(0x0c)
	None FPSK_CameraLocation_CollideAlpha; // 0x2a68(0x04)
	None FPSK_StartCameraHeight; // 0x2530(0x0c)
	None FPSK_DestCameraHeight; // 0xaf0(0x0c)
	None FPSK_WeaponShadow; // 0x37f8(0x08)
	None FPSK_SightShadow; // 0x27e0(0x08)
	None FPSK_GripShadow; // 0x1fc8(0x08)
	None FPSK_MagazineShadow; // 0x12c0(0x08)
	None FPSK_StockShadow; // 0x1d80(0x08)
	None FPSK_TacticalAttachmentShadow; // 0x1ce8(0x08)
	None FPSK_BarrelShadow; // 0x2ef0(0x08)
	None FPSK_MuzzleShadow; // 0x1aa0(0x08)
	None FPSK_WeaponAttachments; // 0x3900(0x10)
	None bFPSK_UseCustomCurve; // 0x9b0(0x01)
	None bFPSK_IsDefaultTransformUpdated; // 0x9bc(0x01)
	None bFPSK_IsFPSMode; // 0x2639(0x01)
	None FPSK_CurrentWeaponTransform; // 0x22a0(0x30)
	None FPSK_IdleWeaponTransform; // 0x2850(0x30)
	None FPSK_CollideWeaponTransform; // 0x2fb0(0x30)
	None FPSK_ADS_DefaultWeaponTransform; // 0x34b0(0x30)
	None FPSK_ADS_TargetWeaponTransform; // 0xdf0(0x30)
	None FPSK_ADS_DefaultWeaponTransform_BasicSightCache; // 0x2b20(0x30)
	None FPSK_ADS_DefaultWeaponTransform_CurrentSightCache; // 0x1d90(0x30)
	None FPSK_ADS_WeaponTransform; // 0x2cc0(0x30)
	None FPSK_ADSFOV; // 0x2bd4(0x04)
	None FPSK_AOSFOV; // 0x3434(0x04)
	None FPSK_DefaultFOV; // 0x36c8(0x04)
	None FPSK_CurrentMagnificationFactor; // 0x1100(0x04)
	None FPSK_TargetMagnificationFactor; // 0x1d30(0x04)
	None MPC_WeaponFov; // 0x28d8(0x08)
	None FPSK_CurrentCameraRelativeLocation; // 0xdd4(0x0c)
	None FPSK_ADSAlpha; // 0x31d0(0x04)
	None FPSK_StartFOV_Delta; // 0x1e18(0x04)
	None CameraInterpPlayRate; // 0x3570(0x04)
	None AdsCameraInterpPlayRate; // 0x1dc8(0x04)
	None FPSK_TargetADSAlpha; // 0xfac(0x04)
	None FPSK_Timeline_Sway_Idle; // 0x2338(0x98)
	None FPSK_Timeline_Sway_Move; // 0x3038(0x98)
	None FPSK_Curve_Sway_Idle_Default; // 0x1770(0x08)
	None FPSK_Curve_Sway_Move_Default; // 0x11f0(0x08)
	None FPSK_Curve_Sway_Scale_With_Fov; // 0x20d8(0x08)
	None FPSK_Curve_Sway_Idle; // 0x2a28(0x08)
	None FPSK_Curve_Sway_Move; // 0xd40(0x08)
	None bUseFPSK_Sway; // 0x1238(0x01)
	None FPSK_SwayAlpha; // 0x22d0(0x04)
	None FPSK_SwayAlphaMin; // 0x3820(0x04)
	None FPSK_SwayAlphaMax; // 0x1544(0x04)
	None FPSK_SwayScale; // 0xe90(0x04)
	None FPSK_SwayRotationIdle; // 0x15ec(0x0c)
	None FPSK_SwayRotationMove; // 0xed8(0x0c)
	None FPSK_SwayRotationDeltaForSteadyAim; // 0x2d98(0x0c)
	None FPSK_SwayInterpSpeed; // 0x1fc4(0x04)
	None FPSK_LeanRotation; // 0x123c(0x0c)
	None FPSK_LeanLocation; // 0x3148(0x0c)
	None FPSK_CurrentCollideWeaponTransform; // 0x2120(0x30)
	None FPSK_CollideAlpha; // 0x1878(0x04)
	None FPSK_CollideAngle; // 0x2bac(0x04)
	None FPSK_CollideAngle_LocalCache; // 0x2900(0x04)
	None bFPSK_IsCollide; // 0xb8c(0x01)
	None FPSK_Curves_TunnelEffect; // 0x19e8(0x50)
	None FPSK_TargetFOV; // 0x1088(0x04)
	None TimerHandle_NoCarLandingDamageToTeam; // 0x27c0(0x08)
	None InAircraftNearClipPlane; // 0x36ec(0x04)
	None AIBot_SearchedEnemyList; // 0x1b80(0x10)
	None bEnableCustomDepth; // 0x2f50(0x01)
	None TimerHandle_HurtCondition; // 0x3030(0x08)
	None ProneDamageScaleInRedZone; // 0x1e04(0x04)
	None BlueZoneFreezeEvent; // 0x3170(0x08)
	None BlueZoneFreezeStopEvent; // 0x1768(0x08)
	None BlueZoneDroneEvent; // 0x7f8(0x08)
	None BlueZoneDroneStopEvent; // 0x2298(0x08)
	None SupplyBoxNotifyAlertMe; // 0xb18(0x08)
	None SupplyBoxNotifyAlertOther; // 0x30d8(0x08)
	None CheckFreezeDistance; // 0xbf4(0x04)
	None CheckDroneDistance; // 0x3704(0x04)
	None DefaultSocketOffset_LeftLeanAMP; // 0x1ca0(0x0c)
	None DefaultSocketOffset_RightLeanAMP; // 0x1a60(0x0c)
	None DefaultSocketOffset_RightAMP; // 0xb30(0x0c)
	None DefaultSocketOffset_LeftAMP; // 0xabc(0x0c)
	None DefaultTargetArmLength_AMP; // 0xff0(0x04)
	None AmplifierFocusDistance; // 0x3250(0x04)
	None DefaultSocketOffset_LeftLeanHeartBeatSensor; // 0x1d60(0x0c)
	None DefaultSocketOffset_RightLeanHeartBeatSensor; // 0x202c(0x0c)
	None DefaultSocketOffset_RightHeartBeatSensor; // 0x27cc(0x0c)
	None DefaultSocketOffset_LeftHeartBeatSensor; // 0x2574(0x0c)
	None DefaultTargetArmLength_HeartBeatSensor; // 0x2f44(0x04)
	None HeartBeatSensorFocusDistance; // 0x1584(0x04)
	None CameraFocusDistanceAOS; // 0x8b0(0x04)
	None AirWalkStartTime; // 0xfd8(0x04)
	None TimerHandle_StopAirWalk; // 0x1ff8(0x08)
	None AirWalkBestRecord; // 0x1e00(0x04)
	None AirWalkTotalRecord; // 0x2570(0x04)
	None AirWalkAudioEvent; // 0x1cf0(0x08)
	None CurrentAirWalkVelocityZ; // 0x1400(0x04)
	None AirWalkDuration; // 0x2150(0x04)
	None AirWalkGravity; // 0x21bc(0x04)
	None PersonalSupplySystemComponent; // 0x3838(0x08)
	None PrevNetworkSmoothingMode; // 0xb60(0x01)
	None TimeHandle_SkyDive; // 0x778(0x08)
	None bActiveCriticalTime; // 0x3828(0x01)
	None CriticalTimeTickInterval; // 0x22f8(0x04)
	None CriticalTimeLimitTime; // 0x1790(0x04)
	None CriticalTimeMeshLocaiton; // 0x2e30(0x0c)
	None CriticalTimeComponentTickIntervals; // 0x32e8(0x50)
	None ParachuteEnableHieght; // 0x1290(0x04)
	None ParachuteTriggerBox; // 0x2000(0x08)
	None CurHit; // 0x3870(0x88)
	None Curve_Sliding; // 0x9e0(0x08)
	None ParticleSystem_Sliding; // 0x1308(0x08)
	None ParticleSystemComponent_Sliding; // 0x1048(0x08)
	None SlidingStartTime; // 0xdd0(0x04)
	None GroundStateBeforeSliding; // 0x29fc(0x01)
	None ReplicateIndexPerkMap; // 0x21f0(0x50)
	None SlidingBuffIndex; // 0x1bb4(0x02)
	None bPendingStopSliding; // 0x1588(0x01)
	None RollingStartTime; // 0x376c(0x04)
	None PostProcessWetFogClass; // 0x1960(0x08)
	None ActiveWetFogAreas; // 0x2de8(0x10)
	None WetFogInfo; // 0x3458(0x20)
	None WetFogZoneInfo; // 0xf64(0x0c)
	None TimerHandle_WetFog; // 0xd20(0x08)
	None PostProcessBlackOutClass; // 0x1108(0x08)
	None ActivePowerInterruptions; // 0x2dc0(0x10)
	None BlackOutInfo; // 0xe98(0x20)
	None TimerHandle_BlackOut; // 0xfe8(0x08)
	None StartBlackOutAudioEvent; // 0x1b00(0x08)
	None StartBlackOutParticle; // 0x1620(0x08)
	None StartBlackOutParticleComponent; // 0xe50(0x08)
	None OnSpawnBlackOutDelegate; // 0x2c80(0x10)
	None PostProcessForceFieldClass; // 0x9f8(0x08)
	None ActiveForceFields; // 0x3400(0x10)
	None ForceFieldInfo; // 0x2650(0x20)
	None TimerHandle_ForceField; // 0x3480(0x08)
	None SuperBarrierClass; // 0x12a8(0x08)
	None UsingSimulationBox; // 0x344d(0x01)
	None HiddenSimulationBox; // 0x27dc(0x01)
	None SimulationBoxHeight; // 0x2330(0x04)
	None SimulationBoxClass; // 0x3588(0x28)
	None OnCompleteActiveSkillDelegate; // 0x1a40(0x10)
	None BombingTargetActor; // 0x1fb8(0x08)
	None StartBomingEvent; // 0x22f0(0x08)
	None IsBombing; // 0x20e1(0x01)
	None BombingInfo; // 0x2ff0(0x24)
	None AutoAimRadius; // 0x3478(0x04)
	None AutoAimDistance; // 0xfe4(0x04)
	None bShowAutoAimDebug; // 0xde0(0x01)
	None TeleportFxTemplate; // 0x3770(0x08)
	None TeleportTraceFxTemplate; // 0x24e8(0x08)
	None TeleportDisappearTime; // 0xd94(0x04)
	None TeleportAppearTime; // 0x3140(0x04)
	None RocketJumpGravity; // 0x21b4(0x04)
	None RocketJumpAudioEvent; // 0xd80(0x08)
	None RocketJumpLandedAudioEvent; // 0x1af8(0x08)
	None ParticleSystem_RocketJump; // 0x17a0(0x08)
	None ParticleSystem_RocketJumpTrail; // 0x808(0x08)
	None ParticleSystem_RocketJumpLanded; // 0x2f60(0x08)
	None RocketJumpTrailEffect; // 0xc20(0x08)
	None bFinishMeteorJump; // 0xbc4(0x01)
	None MeteorJumpGravity; // 0x1fac(0x04)
	None bMeteorStrikeBlockingHit; // 0x1bd0(0x01)
	None MeteorGrenadeProjectileClass; // 0x2f28(0x10)
	None MeteorJumpAudioEvent; // 0x3230(0x08)
	None MeteorJumpLandedAudioEvent; // 0x7a0(0x08)
	None ParticleSystem_MeteorJump; // 0x7c0(0x08)
	None ParticleSystem_MeteorJumpTrail; // 0x2fe8(0x08)
	None ParticleSystem_MeteorJumpLanded; // 0x2d48(0x08)
	None MeteorJumpTrailEffect; // 0x2fa8(0x08)
	None MeteorTarget; // 0x1230(0x08)
	None ThrownFlashbangs; // 0x32b0(0x10)
	None ThrownMolotovCocktails; // 0xc78(0x10)
	None ThrownC4s; // 0x1528(0x10)
	None bIsUltimateSprint; // 0xab8(0x01)
	None IgnoreInteraction; // 0x1218(0x01)
	None OnChangeCharacterStateDelegate; // 0x2a18(0x10)
	None LogSize; // 0x1140(0x04)
	None TimeHandle_RequestBuildingInfo; // 0x1890(0x08)
	None LogIntervalTime; // 0x1df8(0x04)
	None LogRequestSize; // 0x3a58(0x04)
	None LogList; // 0x2e20(0x10)
	None LogJsonList; // 0x25b8(0x10)
	None GodEffect1; // 0x2410(0x08)
	None GodEffect2; // 0x940(0x08)
	None ParticleSystem_Knockout; // 0x1970(0x08)
	None RepSimulatedHittedDamage; // 0x31f8(0x10)
	None FirstTimeHittedDamage; // 0x25f0(0x04)
	None LastTimeHittedDamage; // 0x11e4(0x04)
	None GodParticle; // 0x2448(0x08)
	None NeedFindPersonalSupplyBoxLocation; // 0xa00(0x01)
	None PersonalSupplyBoxRePositionCount; // 0x34a0(0x04)
	None UsingPersonalSupplyBoxWeightMap; // 0x17b0(0x01)
	None UsingPersonalSupplyBoxRePosition; // 0x1583(0x01)
	None PersonalSupplyBoxRePositionDistance; // 0xfb4(0x04)
	None TimeHandle_Ultimate_Recon; // 0xc48(0x08)
	None AnimSlot_Ultimate_Recon; // 0x2a70(0x10)
	None bIsUltimate_Recon; // 0x1b70(0x01)
	None AvoidHeadShotMontage; // 0x1650(0x08)
	None SteelHelmetSound; // 0xf40(0x08)
	None StuntmanRollingDir; // 0x10a8(0x0c)
	None StuntmanStartTime; // 0x162c(0x04)
	None TimerHandle_Stuntman; // 0x3120(0x08)
	None bNeedToUpdateNitroBoost; // 0x21b0(0x01)
	None NitroBoostTorqueScale; // 0xd98(0x04)
	None NitroBoomTargetVehicle; // 0x13f8(0x08)
	None bNeedToUpdateNitroBoom; // 0x3700(0x01)
	None NitroBoomDuration; // 0xa9c(0x04)
	None bNeedToDrawNitroBoomTarget; // 0x1368(0x01)
	None NitroBoomTargetLocation; // 0x2cac(0x0c)
	None NitroBoomLastVehicleSetTime; // 0x172c(0x04)
	None bNeedToUpdateUltimate_Driver; // 0x22fc(0x01)
	None bNeedToCheckPlosiveSoundDetection; // 0x79c(0x01)
	None EnteredElevatorRef; // 0x37b0(0x08)
	None OuterDamage; // 0x780(0x04)
	None TimerHandle_InOuterArea; // 0x788(0x08)
	None TimerHandle_UpdateInOuterArea; // 0x790(0x08)
	None DelegateCheckSupplyCost; // 0x3218(0x10)
	None SecuredCache; // 0xfb0(0x04)
	None DamageCorrectValueByPenetrationDepthCurve; // 0x1d58(0x08)
	None AircraftFlightRef; // 0x2be0(0x08)
	None CurrentSupplyBox; // 0xc0(0x08)
	None CurrentSupplyBoxDummy; // 0xc8(0x08)
	None SupplyBoxClass; // 0xd0(0x08)
	None SupplyBoxDummyClass; // 0xd8(0x08)
	None CurrentAssignmentInfo; // 0xe0(0x30)
	None CountOpenSupplyBox; // 0x110(0x04)
	None SupplyBoxCost; // 0x114(0x04)
	None CurrentPSBState; // 0x118(0x01)
	None AssignReason; // 0x119(0x01)
	None ShowPingByHUD; // 0x122(0x01)
	None DefaultBalanceData; // 0x298(0x78)
	None CharacterBuffDataKeys; // 0x3f8(0x50)
	None DefaultFireCell; // 0x660(0x08)
	None SimulatedTickTime; // 0x460(0x04)
	None AbilityStates; // 0x188(0x50)
	None ConditionedAbilityStates; // 0x3a0(0x50)
	None ConditionStates; // 0x518(0x50)
	None ConditionFlags; // 0x450(0x08)
	None BuffUIInfos; // 0x568(0x50)
	None CurrentBuffKeys; // 0x6c0(0x118)
	None CurrentBuffInfos; // 0xe8(0x50)
	None BuffControls; // 0x468(0x50)
	None StackBuffInfos; // 0x1e8(0x10)
	None Loudness; // 0x45c(0x04)
	None LoudnessCrouchRatio; // 0x1f8(0x04)
	None LoudnessProneRatio; // 0x448(0x04)
	None LoudnessTime; // 0x668(0x04)
	None DebugWidgetClass; // 0xd8(0x08)
	None MaterialEffectInfos; // 0x350(0x50)
	None MaterialEffectCurve; // 0x288(0x08)
	None MaterialEffectStrCurve; // 0x290(0x08)
	None DebugWidget; // 0x1d8(0x08)
	None WeaponDebugTextWidget; // 0x1e0(0x08)
	None BuffEventDelegates; // 0x238(0x50)
	None BuffEndEventDelegates; // 0x670(0x50)
	None WeaponBuffEventDelegates; // 0x4c8(0x50)
	None ActiveBuffs; // 0x70(0x10)
	None BravoHotelCharacter; // 0x80(0x08)
	None BravoHotelAbilityComponent; // 0x88(0x08)
	None bWalking; // 0xc8(0x01)
	None bSprinting; // 0xc8(0x01)
	None bIsProned; // 0xc8(0x01)
	None bIsJumping; // 0xc8(0x01)
	None bIsKicking; // 0xc8(0x01)
	None bIsAirWalking; // 0xc8(0x01)
	None bWantsToRocketJump; // 0xc8(0x01)
	None bWantsToMeteorJump; // 0xc8(0x01)
	None bWantsToMeteorStrike; // 0xc9(0x01)
	None bWantsToJetpack; // 0xc9(0x01)
	None bWantsToJetpackAim; // 0xc9(0x01)
	None CustomBuoyancySwimMode; // 0xc9(0x01)
	None LeanState; // 0xca(0x01)
	None FireType; // 0xcb(0x01)
	None ThrowingType; // 0xcc(0x01)
	None ReplicatedAnimMontage; // 0xd0(0x08)
	None ReplicatedAnimMontage_FPP; // 0xd8(0x08)
	None bIsSliding; // 0xe0(0x01)
	None bIsRolling; // 0xe1(0x01)
	None BravoHotelCharacterMovement; // 0xe8(0x08)
	None AutoRotateSpeed; // 0x440(0x04)
	None DefaultWeaponName; // 0x444(0x08)
	None NearPlayerController; // 0x468(0x08)
	None NearTargetPawn; // 0x470(0x08)
	None AttackTargetPawn; // 0x478(0x08)
	None MovementComponent; // 0x310(0x08)
	None LoopCount; // 0x318(0x04)
	None FixedStartingPoint; // 0x5d8(0x08)
	None bScrambled; // 0x5e0(0x01)
	None AudioEmitter; // 0x5e8(0x08)
	None StartFlyingEvent; // 0x5f0(0x08)
	None StopFlyingEvent; // 0x5f8(0x08)
	None FlyingSoundHandle; // 0x600(0x04)
	None Aircrafts; // 0x608(0x10)
	None AircraftOrdersForEvenFormation; // 0x618(0x10)
	None AircraftOrdersForOddFormation; // 0x628(0x10)
	None MovementMethod; // 0x638(0x01)
	None ScramblingDuration; // 0x63c(0x04)
	None ScramblingSpeed; // 0x640(0x04)
	None DistanceFromBorder; // 0x644(0x04)
	None SpeedToChangeAltitude; // 0x648(0x04)
	None TargetAltitude; // 0x64c(0x04)
	None AltitudeFromTargetAtFirst; // 0x650(0x04)
	None CineCamera; // 0x658(0x08)
	None AircraftRoot; // 0x660(0x08)
	None CineParticle; // 0x668(0x08)
	None CineCameraSpline; // 0x670(0x08)
	None CineDeltaLocation; // 0x678(0x0c)
	None CineInterpSpeed; // 0x684(0x04)
	None CineInterpSpeedZ; // 0x688(0x04)
	None CinePawn; // 0x690(0x08)
	None CineController; // 0x698(0x08)
	None CineCameraBlendTime; // 0x6a0(0x04)
	None CineCameraBlendFunction; // 0x6a4(0x01)
	None CineCameraBlendExp; // 0x6a8(0x04)
	None bUseSplineAnimation; // 0x6ac(0x01)
	None SplineAnimationDelayTime; // 0x6b0(0x04)
	None SplineAnimationTime; // 0x6b4(0x04)
	None Timeline_SplineInterp; // 0x6c0(0x98)
	None Curve_SplineInterp; // 0x758(0x08)
	None OnStartCinematic; // 0x760(0x10)
	None OnEndCinematic; // 0x770(0x10)
	None CinematicSequenceList; // 0x780(0x10)
	None LevelSequenceActor; // 0x790(0x08)
	None OriginLocation; // 0x7a0(0x0c)
	None TargetLocation; // 0x7ac(0x0c)
	None SavedRotation; // 0x7b8(0x0c)
	None DescentStartPos; // 0x7c4(0x08)
	None DescentEndPos; // 0x7cc(0x08)
	None WeightMapInfo; // 0x838(0x08)
	None bUseUpdateBloom; // 0x868(0x01)
	None BloomSpeed; // 0x86c(0x04)
	None TargetBloomIntensity; // 0x870(0x04)
	None IsVisibleStartPoint; // 0x874(0x01)
	None IsVisibleEndPoint; // 0x875(0x01)
	None IsVisibleAircraf; // 0x876(0x01)
	None IsVisibleAircraftLine; // 0x877(0x01)
	None bWantsToDestroy; // 0x878(0x01)
	None State; // 0x879(0x01)
	None NextPoint; // 0x310(0x08)
	None AirCraftRef; // 0x2a8(0x08)
	None SpringArm; // 0x380(0x08)
	None Camera; // 0x388(0x08)
	None StartYaw; // 0x390(0x04)
	None Canvas_Aircraft; // 0x250(0x08)
	None T_BoardingCount; // 0x258(0x08)
	None T_MaxBoardingCount; // 0x260(0x08)
	None KillAliveInfo; // 0x270(0x14)
	None bUseMultiplePositions; // 0x350(0x01)
	None RelativeMultiplePositions; // 0x358(0x10)
	None bUseSynchronization; // 0x368(0x01)
	None LoopInterval; // 0x36c(0x04)
	None ReplicatedComponent; // 0x310(0x08)
	None StaticMesh; // 0x318(0x08)
	None SkelMesh; // 0x320(0x08)
	None ItemDetailInfo; // 0x328(0x490)
	None EquipTime_L; // 0x7b8(0x04)
	None EquipTime_R; // 0x7bc(0x04)
	None UnEquipTime; // 0x7c0(0x04)
	None EquipAnimationPlayRate_L; // 0x7c4(0x04)
	None EquipAnimationPlayRate_R; // 0x7c8(0x04)
	None UnequipAnimationPlayRate; // 0x7cc(0x04)
	None bPendingEquip; // 0x7d0(0x01)
	None bPendingUnEquip; // 0x7d0(0x01)
	None OverrideAttachSocketName; // 0x7f8(0x08)
	None OverrideAttachSocketName_Backpack; // 0x800(0x08)
	None OverrideEquipAnimMontage_StandSlot; // 0x808(0x10)
	None OverrideEquipAnimMontage_ProneSlot; // 0x818(0x10)
	None OverrideUnequipAnimMontage_StandSlot; // 0x828(0x10)
	None OverrideUnequipAnimMontage_ProneSlot; // 0x838(0x10)
	None bIsEquipped; // 0x850(0x01)
	None WeaponReplicatedComponent; // 0x948(0x08)
	None SkelMesh1P; // 0xab8(0x08)
	None WeaponDataTable; // 0x8c8(0x10)
	None AttachmentItems; // 0xf90(0x10)
	None AttachmentItemEnums; // 0xac8(0x10)
	None IdleHandAnim_3p; // 0x8c0(0x08)
	None ProneHandAnim_3p; // 0xb80(0x08)
	None IdleHandAnim_1p; // 0x950(0x08)
	None IdleHandAnim_Crouch; // 0xe68(0x08)
	None IdleHandAnim_InVehicle; // 0xfd8(0x08)
	None AOSAnim; // 0xd10(0x08)
	None ADSAnim; // 0xac0(0x08)
	None CollideUpsideAnim; // 0x1038(0x08)
	None CollideDownsideAnim; // 0x8b8(0x08)
	None CollideProneAnim; // 0xe18(0x08)
	None bAlwaysMaxCollideAlpha; // 0xfe8(0x01)
	None bUseSpecialProneAnimation; // 0x900(0x01)
	None bDisableHandAnimDuringCollide; // 0x1b78(0x01)
	None bDisableHandAnimDuringProneCollide; // 0xa58(0x01)
	None SpecialProneAnimation; // 0xb10(0x08)
	None SpecialProneAnimation_1P; // 0xe58(0x08)
	None bUseSpecialSprintAnimation; // 0xe60(0x01)
	None SpecialSprintAnimation; // 0x958(0x08)
	None SpecialSprintReadyAnimation; // 0x870(0x08)
	None bUseSpecialCrouchSprintAnimation; // 0xcd9(0x01)
	None SpecialCrouchSprintAnimation; // 0xf20(0x08)
	None SprintAnim_1P; // 0xdb8(0x08)
	None Anim_SecondaryWeapon_Stand_Idle; // 0xe70(0x08)
	None Anim_SecondaryWeapon_Crouch_Idle; // 0xff0(0x08)
	None bUseOneHandSprintAnimation; // 0x1040(0x01)
	None bDisableHandAnimDuringSprint; // 0xf38(0x01)
	None AimOffsetMinY_TPP; // 0xb20(0x04)
	None AimOffsetMaxY_TPP; // 0x8f0(0x04)
	None bHideMagazineWhenEmpty; // 0xed1(0x01)
	None bIsTrueDamageWeapon; // 0x940(0x01)
	None WeaponInfo; // 0x1048(0xb30)
	None WeaponBaseData; // 0xb88(0x110)
	None ShiningEffectComponent; // 0x8b0(0x08)
	None ShiningEffect; // 0xe78(0x08)
	None LastFireTime; // 0x8e8(0x04)
	None magazine; // 0x1030(0x04)
	None BackPackInTotalAmmoCount; // 0xfe4(0x04)
	None MagazineCapacity; // 0xad8(0x04)
	None UI_CurrentDamage; // 0xf28(0x04)
	None UI_CurrentRPM; // 0xdc0(0x04)
	None bIsPerkWeapon; // 0xe50(0x01)
	None PerkIndex; // 0xf3c(0x08)
	None bIsNoDamageWeapon; // 0xcd8(0x01)
	None ProhibitedforUseInVehicle; // 0xf19(0x01)
	None OnFireDelegate; // 0xd68(0x10)
	None CurrentPlayerMontage_1P; // 0xd78(0x08)
	None CurrentPlayerMontage_3P; // 0xf10(0x08)
	None CurrentWeaponMontage_1P; // 0x878(0x08)
	None CurrentWeaponMontage_3P; // 0x8f8(0x08)
	None CurrentMontageState; // 0x8ec(0x01)
	None PausedMontagePosition; // 0xab0(0x04)
	None AttachmentInfoModifier; // 0x968(0x48)
	None TimerHandle_UpdateActorHiddenInGame_TPPOnly; // 0xfd0(0x08)
	None IdlePositionDeltaArray_FPP; // 0xdc8(0x50)
	None AOSPositionDeltaArray_FPP; // 0xb28(0x50)
	None AOSPositionInterpSpeed_FPP; // 0xb7c(0x04)
	None bVisibleAbsolutely; // 0xf18(0x01)
	None AmplifierLength; // 0x1bd4(0x04)
	None TimerHandle_OnStartEffectEvent; // 0x1bd8(0x08)
	None DetectedCharacters; // 0x1be0(0x10)
	None Character; // 0x2c0(0x08)
	None CharacterMovementComponent; // 0x658(0x08)
	None bIsAccelerating; // 0x784(0x01)
	None ParachuteInputForward; // 0x2f0(0x04)
	None ParachuteInputRight; // 0x77c(0x04)
	None bIsParachuteLanding; // 0x740(0x01)
	None Direction; // 0x2ac(0x04)
	None bIsLocallyPlaying; // 0x2a8(0x01)
	None bIsFreeLook; // 0x311(0x01)
	None bIsProne; // 0x5f0(0x01)
	None bIsCrouch; // 0x458(0x01)
	None bIsMelee; // 0x620(0x01)
	None bIsJumpAttack; // 0x760(0x01)
	None bMoving; // 0xc4e(0x01)
	None bIsClimbing; // 0x4d9(0x01)
	None bIsKnockbackRolling; // 0x63c(0x01)
	None IdleNum; // 0x5a0(0x04)
	None CastingRemainTime; // 0x778(0x04)
	None bMovedWhileMontage; // 0x488(0x01)
	None bIsFallingOrLanding; // 0x6a2(0x01)
	None bIsSprintStop; // 0x6fc(0x01)
	None bUseSprintAnimation; // 0x290(0x01)
	None bUseSpecialSprintAnimation; // 0x3b8(0x01)
	None bUseSpecialCrouchSprintAnimation; // 0x2a9(0x01)
	None bUseSpecialProneAnimation; // 0x560(0x01)
	None bUseFallingAnimation; // 0x534(0x01)
	None bUseVehicleStandAnimation; // 0x7d0(0x01)
	None bIsAirWalking; // 0x7d8(0x01)
	None bIsAmplifier; // 0x5e0(0x01)
	None bIsCriticalTime; // 0x535(0x01)
	None bIsResuscitating; // 0x3e9(0x01)
	None bIsInVehicle; // 0x5ac(0x01)
	None bIsVehicleDriver; // 0x7d1(0x01)
	None bEnableDriverIK_HandL; // 0x622(0x01)
	None bEnableDriverIK_HandR; // 0x680(0x01)
	None DriverAimOffsetAlpha; // 0x370(0x04)
	None VehicleUnarmedAnimIdle; // 0x598(0x08)
	None VehicleUnarmedAnimStand; // 0x708(0x08)
	None VehicleAnimIdle; // 0x500(0x08)
	None VehicleAnimAOS; // 0x378(0x08)
	None VehicleAnimIdleForMontagePlay; // 0x5f8(0x08)
	None VehicleAimingAimOffset; // 0xc30(0x08)
	None VehicleIdleAimOffset; // 0x608(0x08)
	None VehicleUnderThrowAimOffset; // 0x7c8(0x08)
	None VehicleAimBlending; // 0x7b0(0x08)
	None VehicleHandlingIdleAnim; // 0x628(0x08)
	None VehicleHandlingLeftAnim; // 0x538(0x08)
	None VehicleHandlingRightAnim; // 0x5b8(0x08)
	None IsVehicleAimingMotion; // 0x6a1(0x01)
	None VehicleADSBlendTime; // 0x49c(0x04)
	None VehicleADSBlendDirectTime; // 0x41c(0x04)
	None VehicleAimingBlendTime; // 0x5c4(0x04)
	None VehicleAimingBlendDirectTime; // 0x42c(0x04)
	None bUseVehicleAimingAimOffset; // 0x591(0x01)
	None VehicleAOSBlendingAngle; // 0x650(0x04)
	None VehicleAOSBlendingPlayRate; // 0x5a4(0x04)
	None bIsHandlebar; // 0x754(0x01)
	None BS_HandlebarVehicle; // 0x408(0x08)
	None HandlebarDirection; // 0x530(0x04)
	None HandlebarSpeed; // 0x73c(0x04)
	None bIsLeftSteering; // 0x6ce(0x01)
	None bIsRightSteering; // 0x6e8(0x01)
	None LeftSteeringPlayRate; // 0x32c(0x04)
	None RightSteeringPlayRate; // 0x58c(0x04)
	None bIsIdleSteering; // 0x544(0x01)
	None IsLadderAnim; // 0x76c(0x01)
	None IsPawnOnLadder; // 0x39c(0x01)
	None IsLadderSliding; // 0x6b4(0x01)
	None LadderIdleMotion; // 0x728(0x01)
	None LadderIdleIsLeft; // 0x2b4(0x01)
	None LadderBlendTime; // 0x7a4(0x04)
	None EvaluateAnimSequence; // 0x724(0x04)
	None AS_Ladder_Up_Loop; // 0x5c8(0x08)
	None LadderIKLocation_HandL; // 0x3c4(0x0c)
	None LadderIKLocation_HandR; // 0x330(0x0c)
	None LadderIKLocation_FootL; // 0x57c(0x0c)
	None LadderIKLocation_FootR; // 0x48c(0x0c)
	None bEnableLadderIK_HandL; // 0x6d8(0x01)
	None bEnableLadderIK_HandR; // 0xc21(0x01)
	None bEnableLadderIK_FootL; // 0x6cc(0x01)
	None bEnableLadderIK_FootR; // 0x4e0(0x01)
	None AimOffset; // 0x474(0x08)
	None bEnableAimOffset; // 0x418(0x01)
	None bEnableSprintAimOffset; // 0x698(0x01)
	None bIsAimingDownside; // 0x428(0x01)
	None DownsideBlendTime; // 0xc40(0x04)
	None AimOffsetInterpSpeed; // 0xc00(0x04)
	None bIsPlayingWeaponMontage; // 0x301(0x01)
	None bIsPlayingCollideWeaponMontage; // 0x7a0(0x01)
	None bIsADS; // 0x738(0x01)
	None CollideUpsideAnim; // 0x748(0x08)
	None CollideDownsideAnim; // 0x6c0(0x08)
	None CollideProneAnim; // 0x4b8(0x08)
	None bIsWeaponColliding; // 0x755(0x01)
	None WeaponType; // 0x2b6(0x01)
	None WeaponAnimType; // 0x75f(0x01)
	None SimpleWeaponAnimType; // 0x621(0x01)
	None bIsEquippingThrowWeapon; // 0x661(0x01)
	None bIsProneColliding; // 0x663(0x01)
	None WeaponHandAnim; // 0x798(0x08)
	None WeaponHandAnim_Crouch; // 0x3f8(0x08)
	None WeaponHandAnim_Prone; // 0x730(0x08)
	None WeaponHandAnim_InVehicle; // 0x298(0x08)
	None WeaponHandAnimAlpha; // 0xc1c(0x04)
	None AOS_Weight; // 0x350(0x04)
	None AOS_Weight_InterpSpeed; // 0x2e4(0x04)
	None CurrentAOSAnim; // 0xc10(0x08)
	None CurrentADSAnim; // 0x568(0x08)
	None SecondaryWeapon_Stand_Idle; // 0x2f8(0x08)
	None SecondaryWeapon_Crouch_Idle; // 0x3b0(0x08)
	None ThrowingWeaponState; // 0x644(0x01)
	None GrenadeThrowingType; // 0x3e8(0x01)
	None ThrowingWeapon_Stand_Idle; // 0x2b8(0x08)
	None ThrowingWeapon_Stand_Idle_Under; // 0x3d8(0x08)
	None ThrowingWeapon_Stand_PinOff_Idle; // 0xbe8(0x08)
	None ThrowingWeapon_Stand_PinOff_Idle_Additive; // 0x340(0x08)
	None ThrowingWeapon_Stand_ThrowUnder_Idle; // 0x3a0(0x08)
	None ThrowingWeapon_Stand_ThrowUnder_Idle_Additive; // 0x480(0x08)
	None ThrowingWeapon_Crouch_Idle; // 0x548(0x08)
	None ThrowingWeapon_Crouch_PinOff_Idle; // 0x4a8(0x08)
	None ThrowingWeapon_Crouch_PinOff_Idle_Additive; // 0xc38(0x08)
	None ThrowingWeapon_Crouch_ThrowUnder_Idle; // 0x2d8(0x08)
	None ThrowingWeapon_Crouch_ThrowUnder_Idle_Additive; // 0x4e8(0x08)
	None ThrowingWeapon_Prone_Idle; // 0x318(0x08)
	None ThrowingWeapon_Prone_PinOff_Idle_ThrowOver; // 0x410(0x08)
	None ThrowingWeapon_Prone_PinOff_Idle_ThrowUnder; // 0x3e0(0x08)
	None MeleeWeapon_Stand_Idle; // 0x710(0x08)
	None MeleeWeapon_Crouch_Idle; // 0x280(0x08)
	None MeleeWeapon_Prone_Idle; // 0x448(0x08)
	None BS_SprintSpeed; // 0x684(0x04)
	None BS_IdleSpeed; // 0x43c(0x04)
	None BS_SprintSpeedLimit; // 0x420(0x04)
	None FallSpeed; // 0x700(0x04)
	None AimOffsetBlendTime; // 0x4b0(0x04)
	None UseSprintAnimBlendTime; // 0x594(0x04)
	None WeaponCollideAlpha; // 0x524(0x04)
	None WeaponMontageCollideAlpha; // 0x2d0(0x04)
	None AimOffsetAlpha; // 0x5a8(0x04)
	None DoorAnimAlpha; // 0x4dc(0x04)
	None FootPosition; // 0x5dc(0x04)
	None FootPositionDirection; // 0x308(0x04)
	None bUseRightFootAnimation; // 0x76d(0x01)
	None LeanRotation; // 0x450(0x04)
	None LeanAcceleration; // 0x4a4(0x04)
	None bLockRotation; // 0x2b5(0x01)
	None MovementDirection; // 0x33c(0x01)
	None SpecialSprintAnimation; // 0x358(0x08)
	None SpecialCrouchSprintAnimation; // 0x348(0x08)
	None SpecialSprintReadyAnimation; // 0x430(0x08)
	None SpecialProneAnimation; // 0x268(0x08)
	None FallingAnimParams; // 0x4c8(0x0c)
	None LeanInAir; // 0x2a0(0x04)
	None JumpAnimSequence_Unarmed; // 0x648(0x08)
	None JumpAnimSequence_Rifle; // 0x6e0(0x08)
	None JumpAnimSequence_Pistol; // 0x6a8(0x08)
	None JumpAnim_Unarmed_NotMoving; // 0xbf8(0x08)
	None JumpAnim_Unarmed_Moving; // 0x3f0(0x08)
	None JumpAnim_Rifle_NotMoving; // 0x668(0x08)
	None JumpAnim_Rifle_Moving; // 0x320(0x08)
	None JumpAnim_Pistol_NotMoving; // 0x528(0x08)
	None JumpAnim_Pistol_Moving; // 0x6f0(0x08)
	None ToCriticalTime; // 0x7b8(0x08)
	None CriticalTimeIdle; // 0x5e8(0x08)
	None Resuscitated; // 0x678(0x08)
	None bUnderWaterSurface; // 0x5f1(0x01)
	None SwimDirection; // 0x6a4(0x04)
	None FinalSwimRotation; // 0x570(0x0c)
	None TurnInPlaceInfo; // 0x7e8(0x400)
	None TurnInPlaceRepeatTriggerTime; // 0x670(0x04)
	None TurnInPlaceRepeatTriggerAngle; // 0x3a8(0x04)
	None TurnInPlaceRepeatTime; // 0x2cc(0x04)
	None TurnInPlaceRepeatAngle; // 0x2d4(0x04)
	None TurnInPlaceRepeatTimeCrouch; // 0x2e8(0x04)
	None TurnInPlaceRepeatTimeProne; // 0x71c(0x04)
	None TurnInPlaceBlendInTime; // 0x6b0(0x04)
	None TurnInPlaceBlendOutTime; // 0x69c(0x04)
	None bTurnInPlaceRepeatCheat; // 0x5e1(0x01)
	None ParticleSystem_WaterDust; // 0x518(0x08)
	None bUsePredictedAirTime; // 0x545(0x01)
	None bHitPredictedInAirTime; // 0x537(0x01)
	None HitPredictedZ; // 0x454(0x04)
	None WaterSurfaceHeight; // 0xc08(0x04)
	None SwimTransformAlpha; // 0x470(0x04)
	None SprintReadyEnteredTime; // 0x30c(0x04)
	None bCanEnterSprintReadyState; // 0x288(0x01)
	None DebuffAlpha_Burn_FullBody; // 0x7d4(0x04)
	None DebuffAlpha_Burn_UpperBody; // 0x328(0x04)
	None DebuffAlpha_Hurt_Additive; // 0x294(0x04)
	None DebuffAlpha_Hurt_Layered; // 0x2e0(0x04)
	None Hurt_Additive_RightHandAlpha; // 0x5c0(0x04)
	None ExplicitTime_FallingAnim; // 0x274(0x04)
	None bIsUnarmedHeadBanging; // 0x5e3(0x01)
	None HeadBangingAlpha; // 0x424(0x04)
	None HeadBangingAnimIndex; // 0x600(0x04)
	None HeadBangingCurrentPlayRate; // 0x718(0x04)
	None DescentForwardPicthMin; // 0x4d4(0x04)
	None DescentIdlePicthMin; // 0x638(0x04)
	None DescentBackwardMontage; // 0x390(0x08)
	None BS_DescentRotationInput; // 0x2ec(0x04)
	None RightArmAnimAlpha; // 0x468(0x04)
	None ThrowWeaponCookingAnimAlpha; // 0x304(0x04)
	None EquipAnimAlpha; // 0x554(0x04)
	None UpperBodySlotAlpha; // 0x6c8(0x04)
	None CharacterRotationCorrectionValueByLeanState; // 0x764(0x08)
	None CharacterRef; // 0x268(0x08)
	None CurrentWeaponRef; // 0x270(0x08)
	None AnimInstanceRef; // 0x278(0x08)
	None AnimInstancePostProsessRef; // 0x280(0x08)
	None MeshComponent_3P; // 0x288(0x08)
	None DeltaTime; // 0x290(0x04)
	None CurrentScopeAngle; // 0x294(0x04)
	None CurrentCameraTransform; // 0x2a0(0x30)
	None BaseGripAnimation; // 0x2d0(0x08)
	None WeaponHandAnim; // 0x2d8(0x08)
	None WeaponSprintAnim; // 0x2e0(0x08)
	None WeaponType; // 0x2e8(0x01)
	None WeaponAnimType; // 0x2e9(0x01)
	None FireType; // 0x2ea(0x01)
	None IdleNum; // 0x2ec(0x04)
	None CharacterDirection; // 0x2f0(0x04)
	None CharacterSpeed; // 0x2f4(0x04)
	None SpinePosition; // 0x2f8(0x0c)
	None SpineJointPosition; // 0x304(0x0c)
	None SpineRotation; // 0x310(0x0c)
	None bUpdateProneSlope; // 0x31c(0x01)
	None ProneSlopeRotation; // 0x320(0x0c)
	None ProneRootOffset; // 0x32c(0x0c)
	None PrevSurfaceDegrees; // 0x338(0x04)
	None RecoilVector; // 0x33c(0x0c)
	None RecoilRotator; // 0x348(0x0c)
	None bEnableModifySpine; // 0x354(0x01)
	None bEnableGenderIK; // 0x355(0x01)
	None bEnableWeaponMontageGenderIK; // 0x356(0x01)
	None ADSAlpha; // 0x358(0x04)
	None bIsNoWeapon; // 0x35c(0x01)
	None bIsNoRangedWeapon; // 0x35d(0x01)
	None bUseFirstPersonSM; // 0x35e(0x01)
	None bUseThirdPersonLowerBody; // 0x35f(0x01)
	None BlendTime_NoWeapon; // 0x360(0x04)
	None BlendTime_ADS; // 0x364(0x04)
	None bIsFreeLook; // 0x368(0x01)
	None bIsMoving; // 0x369(0x01)
	None bIsProne; // 0x36a(0x01)
	None bCrouching; // 0x36b(0x01)
	None bIsSprint; // 0x36c(0x01)
	None bIsJumping; // 0x36d(0x01)
	None bIsSwimming; // 0x36e(0x01)
	None bUnderWaterSurface; // 0x36f(0x01)
	None bIsLandStop; // 0x370(0x01)
	None bIsAirWalking; // 0x371(0x01)
	None bIsClimbing; // 0x372(0x01)
	None bIsADS; // 0x373(0x01)
	None bIsAOS; // 0x374(0x01)
	None bIsFiring; // 0x375(0x01)
	None bUseSpecialProneAnimation; // 0x376(0x01)
	None SpecialProneAnimation; // 0x378(0x08)
	None bIsAmplifier; // 0x380(0x01)
	None bIsReviving; // 0x381(0x01)
	None bIsKnockedOut; // 0x382(0x01)
	None CastingRemainTime; // 0x384(0x04)
	None bHoldWeaponPosition; // 0x388(0x01)
	None bLastHoldWeaponPosition; // 0x389(0x01)
	None bUseTPPUpper; // 0x38a(0x01)
	None bEnableHandIK; // 0x38b(0x01)
	None bUseLeftHandIK; // 0x38c(0x01)
	None bIsWeaponAttachedToCamera; // 0x38d(0x01)
	None bUseGrip; // 0x38e(0x01)
	None bUseLeanRotation; // 0x38f(0x01)
	None bAttachWeaponToLHand; // 0x390(0x01)
	None DisableHandIKTimer; // 0x394(0x04)
	None AttachWeaponToLHandTimer; // 0x398(0x04)
	None bUseLeftArmBlendSlot; // 0x39c(0x01)
	None BlendTime_HandIK; // 0x3a0(0x04)
	None AttachWeaponBoneToLHand; // 0x3a4(0x08)
	None AttachWeaponToLHandTransform; // 0x3b0(0x30)
	None AttachLHandIK_Location; // 0x3e0(0x0c)
	None AttachLHandIK_Rotation; // 0x3ec(0x0c)
	None bReloading; // 0x3f8(0x01)
	None bBoltAction; // 0x3f9(0x01)
	None MovementMode; // 0x3fa(0x01)
	None bIsInVehicle; // 0x3fb(0x01)
	None bIsVehiclePassenger; // 0x3fc(0x01)
	None bIsVehicleDriver; // 0x3fd(0x01)
	None VehicleRef; // 0x400(0x08)
	None VehicleAimOffsetYaw; // 0x408(0x04)
	None VehicleAimOffsetPitch; // 0x40c(0x04)
	None bUseHandlebarAnim; // 0x410(0x01)
	None bUseOnlyRightHandInADS; // 0x411(0x01)
	None BS_DriverHandleBar; // 0x418(0x08)
	None VehicleHandlingIdleAnim; // 0x420(0x08)
	None VehicleHandlingLeftAnim; // 0x428(0x08)
	None VehicleHandlingRightAnim; // 0x430(0x08)
	None DriverAimOffsetBasePose; // 0x438(0x08)
	None DriverAimOffset; // 0x440(0x08)
	None VehicleLeftHandIK; // 0x450(0x30)
	None VehicleLeftHandIK_Location; // 0x480(0x0c)
	None VehicleLeftHandIK_Rotation; // 0x48c(0x0c)
	None VehicleRightHandIK; // 0x4a0(0x30)
	None VehicleRightHandIK_Location; // 0x4d0(0x0c)
	None VehicleRightHandIK_Rotation; // 0x4dc(0x0c)
	None VehicleLeftFootIK; // 0x4f0(0x30)
	None VehicleRightFootIK; // 0x520(0x30)
	None bHasFootIKSocket; // 0x550(0x01)
	None bUseVehicleLeftHandIK; // 0x551(0x01)
	None bUseVehicleRightHandIK; // 0x552(0x01)
	None bIsLeftSteering; // 0x553(0x01)
	None bIsRightSteering; // 0x554(0x01)
	None LeftSteeringPlayRate; // 0x558(0x04)
	None RightSteeringPlayRate; // 0x55c(0x04)
	None bIsIdleSteering; // 0x560(0x01)
	None DriverIdlePoseBlendAlpha; // 0x564(0x04)
	None WeaponTransformTimer; // 0x568(0x04)
	None WeaponTransformMaxTime; // 0x56c(0x04)
	None AOSAlpha; // 0x570(0x04)
	None SprintSpeedModifier; // 0x574(0x04)
	None CurrentWeaponWorldTransform; // 0x580(0x30)
	None LeftHandComponentIK; // 0x5b0(0x30)
	None RightHandComponentIK; // 0x5e0(0x30)
	None LeftHandIK_Location; // 0x610(0x0c)
	None LeftHandIK_Rotation; // 0x61c(0x0c)
	None RightHandIK_Location; // 0x628(0x0c)
	None RightHandIK_Rotation; // 0x634(0x0c)
	None FemaleLeftHandIKModify; // 0x640(0x0c)
	None IdleCameraPosition; // 0x64c(0x0c)
	None LeanRotation; // 0x658(0x0c)
	None ThrowingWeaponType; // 0x664(0x01)
	None ThrowingWeaponState; // 0x665(0x01)
	None GrenadeThrowingType; // 0x666(0x01)
	None bIsUnderThrowType; // 0x667(0x01)
	None ThrowingWeapon_Stand_Idle; // 0x668(0x08)
	None ThrowingWeapon_Stand_Idle_Under; // 0x670(0x08)
	None ThrowingWeapon_Stand_PinOff_Idle; // 0x678(0x08)
	None ThrowingWeapon_Stand_PinOff_Idle_Additive; // 0x680(0x08)
	None ThrowingWeapon_Stand_ThrowUnder_Idle; // 0x688(0x08)
	None ThrowingWeapon_Stand_ThrowUnder_Idle_Additive; // 0x690(0x08)
	None ThrowingWeapon_Crouch_Idle; // 0x698(0x08)
	None ThrowingWeapon_Crouch_PinOff_Idle; // 0x6a0(0x08)
	None ThrowingWeapon_Crouch_PinOff_Idle_Additive; // 0x6a8(0x08)
	None ThrowingWeapon_Crouch_ThrowUnder_Idle; // 0x6b0(0x08)
	None ThrowingWeapon_Crouch_ThrowUnder_Idle_Additive; // 0x6b8(0x08)
	None ThrowingWeapon_Prone_Idle; // 0x6c0(0x08)
	None ThrowingWeapon_Prone_PinOff_Idle_ThrowOver; // 0x6c8(0x08)
	None ThrowingWeapon_Prone_PinOff_Idle_ThrowUnder; // 0x6d0(0x08)
	None MontageListWithoutHandIK; // 0x6d8(0x10)
	None bIsCold; // 0x6e9(0x01)
	None bIsBurning; // 0x6ea(0x01)
	None HurtAlpha; // 0x6ec(0x04)
	None HeadBangingAlpha; // 0x6f0(0x04)
	None bUseFallingAnimation; // 0x6f4(0x01)
	None CharacterRef; // 0x268(0x08)
	None DeltaTime; // 0x270(0x04)
	None InputForward; // 0x274(0x04)
	None InputRight; // 0x278(0x04)
	None CharacterState; // 0x27c(0x01)
	None bIsDescentFalling; // 0x27d(0x01)
	None LeftHandleTransition; // 0x280(0x0c)
	None RightHandleTransition; // 0x28c(0x0c)
	None bNeedToSkipTransitionBlend; // 0x298(0x01)
	None Transition_InDescentToStart; // 0x299(0x01)
	None Transition_Stand_NotMovingToMoving; // 0x29a(0x01)
	None Transition_StartToMovement_3; // 0x29b(0x01)
	None Transition_MovementToEnd; // 0x29c(0x01)
	None Transition_EndToInDescent; // 0x29d(0x01)
	None ParachuteSeparationAnim_OnLand; // 0x2a0(0x08)
	None ParachuteSeparationAnim_OnAir; // 0x2a8(0x08)
	None SpawnedParachuteActor; // 0x2b0(0x08)
	None SpawnedParachuteDissolveValue; // 0x2b8(0x04)
	None SpawnedParachuteDissolveStartTime; // 0x2bc(0x04)
	None SpawnedParachuteDissolveDuration; // 0x2c0(0x04)
	None ParachuteSpawnTime; // 0x2c4(0x04)
	None Character; // 0x268(0x08)
	None CharacterMovementComponent; // 0x270(0x08)
	None DeltaTime; // 0x278(0x04)
	None AM_CheckMontageIsPlaying; // 0x280(0x10)
	None PelvisZOffset; // 0x290(0x0c)
	None LeftFootZOffset; // 0x29c(0x0c)
	None RightFootZOffset; // 0x2a8(0x0c)
	None LeftFootRotationOffset; // 0x2b4(0x0c)
	None RightFootRotationOffset; // 0x2c0(0x0c)
	None RootRotationOffset; // 0x2cc(0x0c)
	None RootZOffset; // 0x2d8(0x0c)
	None bEnablePelvisZOffset; // 0x2e4(0x01)
	None bEnableLeftFootIK; // 0x2e5(0x01)
	None bEnableRightFootIK; // 0x2e6(0x01)
	None ZOffsetMaxLimit; // 0x2ec(0x04)
	None ZOffsetMinLimit; // 0x2f0(0x04)
	None RollOffsetMaxLimit; // 0x2f4(0x04)
	None RollOffsetMinLimit; // 0x2f8(0x04)
	None PitchOffsetMaxLimit; // 0x2fc(0x04)
	None PitchOffsetMinLimit; // 0x300(0x04)
	None ZOffsetFastInterpSpeed; // 0x304(0x04)
	None ZOffsetSlowinterpSpeed; // 0x308(0x04)
	None RotationOffsetInterpSpeed; // 0x30c(0x04)
	None RootRotationOffsetInterpSpeed; // 0x310(0x04)
	None LeftFootName; // 0x314(0x08)
	None RightFootName; // 0x31c(0x08)
	None RootName; // 0x324(0x08)
	None TraceStartHeight; // 0x32c(0x04)
	None TraceLengthBelowCapsule; // 0x330(0x04)
	None EnableHandIK; // 0x334(0x01)
	None bDisableHandIK_ByAnimNotifyState; // 0x335(0x01)
	None IsEquippingNormalGrip; // 0x336(0x01)
	None IdleHandAnim; // 0x338(0x08)
	None bIsPlayingWeaponMontage; // 0x340(0x01)
	None bForceUseGripPose; // 0x341(0x01)
	None HandL_Location; // 0x344(0x0c)
	None HandL_Rotation; // 0x350(0x0c)
	None Collide_HandR_Rotation; // 0x35c(0x0c)
	None bEnableCollideHandR_Rotation; // 0x368(0x01)
	None HandR_Rotation_Alpha; // 0x36c(0x04)
	None HandIK_BlendTime; // 0x370(0x04)
	None GripType; // 0x374(0x01)
	None LeanValue; // 0x378(0x04)
	None Spine01_LeanRotation; // 0x37c(0x0c)
	None Lowerarm_r_LeanRotation; // 0x388(0x0c)
	None Pelvis_CrouchLeanTranslation; // 0x394(0x0c)
	None UpperarmR_LeanRotation; // 0x3a0(0x0c)
	None bUpdateLeanNodes; // 0x3ac(0x01)
	None LeftHandActionPos; // 0x3b0(0x0c)
	None RightHandActionPos; // 0x3bc(0x0c)
	None bIsInVehicle; // 0x3c8(0x01)
	None bUseDriverTwoHandIK; // 0x3c9(0x01)
	None bEnableDriverIK_HandL; // 0x3ca(0x01)
	None bEnableDriverIK_HandR; // 0x3cb(0x01)
	None bUsePassengerTwoHandIK; // 0x3cc(0x01)
	None VehicleFootIKAlpha; // 0x3d0(0x04)
	None VehicleLeftHandIK_Location; // 0x3d4(0x0c)
	None VehicleLeftHandIK_Rotation; // 0x3e0(0x0c)
	None VehicleRightHandIK_Location; // 0x3ec(0x0c)
	None VehicleRightHandIK_Rotation; // 0x3f8(0x0c)
	None VehicleLeftFootIK_Location; // 0x404(0x0c)
	None VehicleLeftFootIK_Rotation; // 0x410(0x0c)
	None VehicleRightFootIK_Location; // 0x41c(0x0c)
	None VehicleRightFootIK_Rotation; // 0x428(0x0c)
	None bIsParkourArmIK; // 0x434(0x01)
	None bIsAimingDownside; // 0x435(0x01)
	None bIsIdleWeaponColliding; // 0x436(0x01)
	None bIsProneWeaponColliding; // 0x437(0x01)
	None CollideAlpha; // 0x438(0x04)
	None EnableFootIK; // 0x43c(0x01)
	None LeftFootTarget; // 0x440(0x04)
	None RightFootTarget; // 0x444(0x04)
	None LeftFootLocation; // 0x448(0x0c)
	None RightFootLocation; // 0x454(0x0c)
	None bUseTwoHandIK; // 0x47c(0x01)
	None MovementMode; // 0x47d(0x01)
	None CustomMovementMode; // 0x47e(0x01)
	None JointTargetLocationR; // 0x480(0x0c)
	None JointTargetLocationL; // 0x48c(0x0c)
	None EffectorLocationR; // 0x498(0x0c)
	None PakourIKLocationR; // 0x4a4(0x0c)
	None PakourIKLocationL; // 0x4b0(0x0c)
	None bIsProned; // 0x4bc(0x01)
	None Pelvis_LeanTranslation; // 0x4c0(0x0c)
	None bIsCrouch; // 0x4cc(0x01)
	None bIsLocallyControlled; // 0x4cd(0x01)
	None IsEquippingRangedWeapon; // 0x4ce(0x01)
	None UpperarmL_LeanRotation; // 0x4d0(0x0c)
	None LeanLeftSide; // 0x4dc(0x01)
	None bIsOneHandSprint; // 0x4dd(0x01)
	None OneHandSprintLastTime; // 0x4e0(0x04)
	None bEnableAnimDynamics; // 0x4e4(0x01)
	None bUsePonytailDynamics; // 0x4e5(0x01)
	None PonytailDynamicsAlpha; // 0x4e8(0x04)
	None bUseHairDynamics; // 0x4ec(0x01)
	None HairDynamicsAlpha; // 0x4f0(0x04)
	None bUseSkirtDynamics; // 0x4f4(0x01)
	None SkirtDynamicsAlpha; // 0x4f8(0x04)
	None bUseBackpackDynamics; // 0x4fc(0x01)
	None BackpackDynamicsAlpha; // 0x500(0x04)
	None bUseBreastDynamics; // 0x504(0x01)
	None bUseCoatDynamics; // 0x505(0x01)
	None bUseGhillieDynamics; // 0x506(0x01)
	None KawaiiAlpha; // 0x508(0x04)
	None BoneDrivenAlpha; // 0x50c(0x04)
	None TargetKawaiiAlpha; // 0x510(0x04)
	None TargetBoneDrivenAlpha; // 0x514(0x04)
	None OwningActorRef; // 0x268(0x08)
	None CharacterRef; // 0x270(0x08)
	None DeltaTime; // 0x278(0x04)
	None bIsCharacterProned; // 0x27c(0x01)
	None bIsThirdPerson; // 0x27d(0x01)
	None bIsOwnerPlayingAnimation; // 0x27e(0x01)
	None AnimStartPosition; // 0x280(0x04)
	None AnimPlayRate; // 0x284(0x04)
	None OwnerCastingRemainTime; // 0x288(0x04)
	None CharacterRef; // 0x268(0x08)
	None WeaponRef; // 0x270(0x08)
	None CharacterAnimInstance1PRef; // 0x278(0x08)
	None DeltaTime; // 0x280(0x04)
	None ArmsOffset; // 0x284(0x0c)
	None RootJointScale; // 0x290(0x0c)
	None ItemRecoilPitchAngle; // 0x29c(0x04)
	None ItemRecoilYawAngle; // 0x2a0(0x04)
	None CollideRotation; // 0x2a4(0x0c)
	None CollideAlpha; // 0x2b0(0x04)
	None bIsDefaultTransformUpdated; // 0x2b4(0x01)
	None SightSocketDeltaLocation; // 0x2b8(0x0c)
	None SightSocketDeltaRotation; // 0x2c4(0x0c)
	None bIsADS; // 0x2d0(0x01)
	None WeaponLocation; // 0x2d4(0x0c)
	None WeaponRotation; // 0x2e0(0x0c)
	None WeaponTransform; // 0x2f0(0x30)
	None FireMode; // 0x320(0x01)
	None bIsAimingDownside; // 0x321(0x01)
	None WeaponBone; // 0x30(0x08)
	None UpdateFrequency; // 0x30(0x04)
	None CheckBoneName; // 0x34(0x08)
	None TraceRadius; // 0x3c(0x04)
	None UpdateFrequency; // 0x30(0x04)
	None TraceStartSocketName; // 0x34(0x08)
	None TraceEndSocketName; // 0x3c(0x08)
	None TraceRadius; // 0x44(0x04)
	None ApplyDamage_EndTime; // 0x48(0x04)
	None PSTemplate; // 0x30(0x08)
	None PSTemplate_OnlyOtherPlayerSee; // 0x38(0x08)
	None SocketName; // 0x40(0x08)
	None LocationOffset; // 0x48(0x0c)
	None RotationOffset; // 0x54(0x0c)
	None Scale3D; // 0x60(0x0c)
	None bDestroyAtEnd; // 0x6c(0x01)
	None StaticMesh; // 0x38(0x28)
	None SkeletalMesh; // 0x60(0x28)
	None bUsePhysics; // 0x88(0x01)
	None AttachSocketName; // 0x8c(0x08)
	None AttachDuration; // 0x94(0x04)
	None ScalarParamDatas; // 0x98(0x10)
	None WeaponSlotNameForSpawn; // 0x38(0x08)
	None MagazineClass; // 0x40(0x08)
	None ConditionedSound; // 0x38(0x10)
	None bFollow; // 0x48(0x01)
	None bPlayOnServer; // 0x49(0x01)
	None bPlayWhileFalling; // 0x4a(0x01)
	None bPlayOnlyForPawnMesh; // 0x4b(0x01)
	None bPlayOnlyLocalPlayer; // 0x4c(0x01)
	None bForced2D; // 0x4d(0x01)
	None bUseConditionProvider; // 0x4e(0x01)
	None TargetMontage; // 0x38(0x08)
	None PlayRate; // 0x40(0x04)
	None StartSectionName; // 0x44(0x08)
	None EffectRowName; // 0x38(0x08)
	None Duration; // 0x40(0x04)
	None bFPPOnly; // 0x44(0x01)
	None SoundIdx; // 0x38(0x08)
	None StateConditionMap; // 0x28(0x50)
	None SphereCollision; // 0x310(0x08)
	None AreaParticle; // 0x318(0x08)
	None AreaParticleOwner; // 0x320(0x08)
	None AreaSkillInfo; // 0x328(0x08)
	None OverlappedCharacters; // 0x330(0x10)
	None AreaSkillZoneInfo; // 0x340(0x20)
	None WetFogZoneInfo; // 0x368(0x0c)
	None EffectActiveCharacters; // 0x378(0x10)
	None CoherentWidget; // 0x28(0x08)
	None ArmoryMeshMap; // 0x30(0x50)
	None ChangeSceneDelegate; // 0x80(0x10)
	None MouseEventDelegate; // 0x90(0x10)
	None ResultInfo; // 0xa0(0x38)
	None CurrentMaterialCount; // 0xd8(0x04)
	None SkipIdentifiedDelegate; // 0xe0(0x10)
	None ArmoryTabDelegate; // 0xf0(0x10)
	None ArmoryMesh; // 0x310(0x08)
	None DefaultTransform; // 0x320(0x30)
	None LocationOffset; // 0x350(0x0c)
	None RotationOffset; // 0x35c(0x0c)
	None ScaleOffset; // 0x368(0x0c)
	None WorldStaticMesh; // 0x310(0x08)
	None WorldSkelMesh; // 0x318(0x08)
	None ShadowStaticMesh; // 0x320(0x08)
	None ShadowSkelMesh; // 0x328(0x08)
	None bTurnOnPhysicsWhenDetach; // 0x330(0x01)
	None LoadedAssets; // 0x338(0x10)
	None Enemy_DamageFadeIn; // 0x248(0x08)
	None Enemy_DamageFadeOut; // 0x250(0x08)
	None Enemy_DamageBroken; // 0x258(0x08)
	None TimerHandle_EventRemoveWidget; // 0x260(0x08)
	None PlayerControllerRef; // 0x268(0x08)
	None WidgetSwitcher_1; // 0x270(0x08)
	None TextBlock_1; // 0x278(0x08)
	None TextBlock_3; // 0x280(0x08)
	None TextBlock_457; // 0x288(0x08)
	None Image_1; // 0x290(0x08)
	None Image_2; // 0x298(0x08)
	None Image_145; // 0x2a0(0x08)
	None Image_147; // 0x2a8(0x08)
	None Image_177; // 0x2b0(0x08)
	None AttackDamageWidgetInfo; // 0x2b8(0x50)
	None bIsTrueDamage; // 0x308(0x01)
	None bIsDestructed; // 0x309(0x01)
	None WidgetLocation; // 0x30c(0x0c)
	None Delegate_OnEnemy_DamageFadeIn_Finished; // 0x318(0x10)
	None Texture_Helmet; // 0x368(0x08)
	None Texture_HelmetBroken; // 0x370(0x08)
	None Texture_Chest; // 0x378(0x08)
	None Texture_ChestBroken; // 0x380(0x08)
	None Texture_Tire; // 0x388(0x08)
	None Font_Heavy; // 0x390(0x08)
	None Font_Regular; // 0x398(0x08)
	None Enemy_Lv_Motion_FadeIn; // 0x248(0x08)
	None Enemy_Lv_Motion_FadeOut; // 0x250(0x08)
	None TimerHandle_EventRemoveWidget; // 0x258(0x08)
	None PawnRef; // 0x260(0x08)
	None Enemy_Name; // 0x268(0x08)
	None TextBlock_Level; // 0x270(0x08)
	None TextBlock_Level2; // 0x278(0x08)
	None TextBlock_Name; // 0x280(0x08)
	None TextBlock_Name2; // 0x288(0x08)
	None Image_Icon; // 0x290(0x08)
	None Image_Icon2; // 0x298(0x08)
	None StateColors; // 0x30(0x50)
	None NewStateColors; // 0x80(0x50)
	None WorldSize; // 0xd0(0x08)
	None WorldCenter; // 0xd8(0x08)
	None BaseMapSize; // 0xe0(0x08)
	None BitDataArray; // 0xe8(0x10)
	None bUseEventRadiusAsMinBounds; // 0x488(0x01)
	None MinBoundsRadius; // 0x48c(0x04)
	None EmitterRegisteredEvent; // 0x4a0(0x10)
	None EmitterUnregisteredEvent; // 0x4b0(0x10)
	None EventAssetDataMap; // 0x30(0x50)
	None AmbientMapData; // 0x4c0(0x08)
	None bEnable; // 0x4f0(0x01)
	None InitialState; // 0x4f1(0x01)
	None ParentMeshComponent; // 0x290(0x08)
	None OcclusionMethod; // 0x298(0x04)
	None AmbienceState; // 0x2a0(0x10)
	None bIsOnRoof; // 0x2b0(0x01)
	None OcclusionHeightLevel; // 0x2b1(0x01)
	None OcclusionDepthLevel; // 0x2b2(0x01)
	None IndoorConditionTargets; // 0x2b3(0x01)
	None HighestLevelInGroup; // 0x2c8(0x01)
	None MeshType; // 0x2e1(0x01)
	None LOD; // 0x2e4(0x04)
	None WeldingThreshold; // 0x2e8(0x04)
	None StaticMeshSurfaceOverride; // 0x2f0(0x50)
	None CollisionMeshSurfaceOverride; // 0x340(0x10)
	None bEnableDiffraction; // 0x350(0x01)
	None bEnableDiffractionOnBoundaryEdges; // 0x350(0x01)
	None GeometryData; // 0x358(0x60)
	None AuxBus; // 0x408(0x08)
	None AuxBusName; // 0x410(0x10)
	None SendLevel; // 0x420(0x04)
	None FadeRate; // 0x424(0x04)
	None StartPos; // 0x28(0x0c)
	None RotationKeyTime; // 0x38(0x10)
	None RotationData; // 0x48(0x10)
	None MoveKeyTime; // 0x58(0x10)
	None MoveData; // 0x68(0x10)
	None RunKeyTime; // 0x78(0x10)
	None RunData; // 0x88(0x10)
	None ActionKeyTime; // 0x98(0x10)
	None ActionData; // 0xa8(0x10)
	None ActionLocationData; // 0xb8(0x10)
	None MainWidgetClass; // 0x400(0x08)
	None MainWidget; // 0x408(0x08)
	None BlueZoneMesh; // 0x310(0x08)
	None PainCausingComponent; // 0x318(0x08)
	None TransportPawnClass; // 0x320(0x08)
	None CurrentPhase; // 0x328(0x04)
	None OriginSurvivalCirclePos; // 0x32c(0x0c)
	None OriginSurvivalCircleRadius; // 0x338(0x04)
	None TargetSurvivalCirclePos; // 0x33c(0x0c)
	None TargetSurvivalCircleRadius; // 0x348(0x04)
	None TimeToStartShrinking; // 0x34c(0x04)
	None TimeToEndShrinking; // 0x350(0x04)
	None eState; // 0x354(0x01)
	None IsVisibleTargetCircle; // 0x355(0x01)
	None IsVisibleBlueZone; // 0x356(0x01)
	None CurrentSurvivalCirclePos; // 0x368(0x0c)
	None CurrentSurvivalCircleRadius; // 0x374(0x04)
	None OnBlueZoneStateChanged; // 0x378(0x10)
	None OnSurvivalCirclePhaseChanged; // 0x388(0x10)
	None OnBlueZoneEnd; // 0x398(0x10)
	None DefaultRadiusRate; // 0x3a8(0x04)
	None GameData; // 0x3b0(0x320)
	None SetVisibleBlueZone; // 0x6d0(0x01)
	None WeightMapInfo; // 0x6e8(0x08)
	None InBlueZoneCharacters; // 0x728(0x10)
	None OutBlueZoneCharacters; // 0x738(0x10)
	None OuterCirclePos; // 0x798(0x08)
	None SelectedPlayZoneName; // 0x7a0(0x08)
	None SelectedPlayZoneInfoIndex; // 0x7a8(0x04)
	None ClientPlayZonePhaseList; // 0x7b0(0x10)
	None bIsFollowingRule; // 0xb0(0x01)
	None BluezoneStartEvent; // 0xd0(0x08)
	None BluezoneEndEvent; // 0xd8(0x08)
	None RarityParticle; // 0x390(0x08)
	None RarityParticleComponent; // 0x398(0x08)
	None HighestRarityOfCurrentItems; // 0x3a0(0x01)
	None TimerHandle_Deactivate; // 0x3b0(0x08)
	None WorldStaticMesh; // 0x310(0x08)
	None WorldSkelMesh; // 0x318(0x08)
	None Equipmentlevel; // 0x320(0x04)
	None DamageImpulseDir; // 0x324(0x0c)
	None BlackboardComponent; // 0x70(0x08)
	None BravoHotelCharacter; // 0x240(0x08)
	None BravoHotelAbilityComponent; // 0x248(0x08)
	None TimerHandles; // 0x280(0x10)
	None CharacterParticles; // 0x290(0x10)
	None AttackerPC; // 0x2a0(0x08)
	None AttackerActor; // 0x2a8(0x08)
	None HeadBangingStartTime; // 0x2c8(0x04)
	None HeadBangingEndTime; // 0x2cc(0x04)
	None TimerHandle_EndBuff; // 0x2b8(0x08)
	None TimerHandle_EndBuff; // 0x2b8(0x08)
	None AnimInstanceArray; // 0x2b8(0x10)
	None MaxReadyToSnipeTime; // 0x3a0(0x04)
	None BuffMutableString; // 0x2b8(0x10)
	None BuffMutableString; // 0x2b8(0x10)
	None CameraPostProcessPreset; // 0x380(0x08)
	None TargetMeshs; // 0x388(0x10)
	None TargetWeapon; // 0x420(0x08)
	None CrosshairTableRow; // 0x2b8(0x08)
	None CurrentActiveCount; // 0x2c0(0x04)
	None MaxActiveCount; // 0x2c4(0x04)
	None ExteriorMaxDrawDistance; // 0x310(0x04)
	None InteriorMaxDrawDistance; // 0x314(0x04)
	None ItemWorldSpawnTableIndex; // 0x318(0x04)
	None ItemWorldSpawnInfo; // 0x320(0x10)
	None SpawnBoxList; // 0x330(0x10)
	None SaveDetectingUserName; // 0x340(0x08)
	None SpawnedItemList; // 0x348(0x10)
	None LogItemData; // 0x358(0xa0)
	None IgnorePersonalSpawnBox; // 0x3f8(0x01)
	None EnableItemSpawn; // 0x3f9(0x01)
	None AreaSpawnRateTableKey; // 0x3fc(0x08)
	None AreaOverrideStandardGroupDatas; // 0x408(0x50)
	None EnableUnImportantItemSpawn; // 0x45b(0x01)
	None ActiveAnim; // 0x1bd0(0x10)
	None ActiveSound; // 0x1be0(0x08)
	None RemoteControlState; // 0x1be8(0x01)
	None SwitchOnSimulation; // 0x1bec(0x04)
	None ThrownC4; // 0x1bf0(0x08)
	None EnableDistance; // 0x1bf8(0x04)
	None UpdateCheckTime; // 0x1c08(0x04)
	None bEnableRemoteController; // 0x1c0c(0x01)
	None ResetCameraMovementFOVThreshold; // 0x978(0x04)
	None FindVehicles; // 0x1bf0(0x10)
	None CarKeySound; // 0x1c00(0x08)
	None TimerHandle_DeactiveCarKey; // 0x1c08(0x08)
	None Timer_UpdateUltimateVehicleLocation; // 0x1c10(0x08)
	None UltimateParticleComponent; // 0x1c18(0x08)
	None UltimateDecalComponent; // 0x1c20(0x08)
	None UltimateParticle; // 0x1c28(0x08)
	None UltimateDecal; // 0x1c30(0x08)
	None CanSpawnColor; // 0x1c38(0x50)
	None CannotSpawnColor; // 0x1c88(0x50)
	None UltimateParticle_DeltaHeight; // 0x1cd8(0x04)
	None ActiveBuffs; // 0x1ce0(0x10)
	None UltimateActiveBuffs; // 0x1cf0(0x10)
	None UltimateSpawnVehicle; // 0x1d00(0x08)
	None UltimateSpawnVehicleLocation; // 0x1d08(0x0c)
	None bLocalCharacterInReplay; // 0xc0(0x01)
	None CurrentPerkDeckSelectInfo; // 0xc8(0x18)
	None SavedPlayerState; // 0xe0(0x08)
	None ParachuteSkinIndex; // 0xe8(0x04)
	None bDisconnected; // 0xec(0x01)
	None DisconnectedPlayerState; // 0xf0(0x08)
	None IsClientTeam; // 0xf8(0x01)
	None bIsFreeLook; // 0xc0(0x01)
	None bFPSK_WantToFPSMode; // 0xc0(0x01)
	None bIsFlameDamaged; // 0xc0(0x01)
	None bIsChargingGauge; // 0xc0(0x01)
	None bIsShowingLandingPosition; // 0xc0(0x01)
	None KnockOutCount; // 0xc4(0x04)
	None CriticalTimeCount; // 0xc8(0x04)
	None ReplicatedStateID; // 0xcc(0x01)
	None CastingItemInfo; // 0xd0(0x98)
	None SearchInstinctLocation; // 0x168(0x0c)
	None CastingInfo; // 0x178(0x18)
	None RevivingActor; // 0x190(0x08)
	None ResuscitatedTargetActor; // 0x198(0x08)
	None InteractedTargetActor; // 0x1a0(0x08)
	None Revivers; // 0x1a8(0x10)
	None Resuscitaters; // 0x1b8(0x10)
	None OccupyingVehicleSeat; // 0x1c8(0x08)
	None MoveRightSpeedModifier; // 0x7d0(0x04)
	None MoveBackSpeedModifier; // 0x724(0x04)
	None WalkInNoProneWaterSpeedModifier; // 0x80c(0x04)
	None WalkInWaterSpeedModifier; // 0x6e8(0x04)
	None MoveSlopeSpeedModifierCurve; // 0x700(0x08)
	None ReduceCharacterSpeedInGrenadeExplosionRangeModifier; // 0x760(0x04)
	None LastMaxSpeed; // 0x798(0x04)
	None MaxWalkSpeedProned; // 0x744(0x04)
	None MaxRunSpeed; // 0x788(0x04)
	None MaxRunSpeedCrouched; // 0x748(0x04)
	None MaxRunSpeedProned; // 0x7f0(0x04)
	None MaxSprintSpeed; // 0x71c(0x04)
	None MaxSprintSpeedCrouched; // 0x7a0(0x04)
	None MaxSprintSpeedProned; // 0x790(0x04)
	None MaxWalkSpeedAMP; // 0x728(0x04)
	None MaxWalkSpeedHeartBeatSensor; // 0x7a8(0x04)
	None PronedHalfHeight; // 0x7dc(0x04)
	None SwimHalfHeight; // 0x804(0x04)
	None bCanWalkOffLedgesWhenProning; // 0x708(0x01)
	None bWantsToProne; // 0x7a4(0x01)
	None bProneMaintainsBaseLocation; // 0x7cc(0x01)
	None bSwimMaintainsBaseLocation; // 0x708(0x01)
	None FallingDecelerationDuration; // 0x770(0x04)
	None SkydivingKValueRange; // 0x70c(0x10)
	None SkydivingPitchRange; // 0x774(0x10)
	None MaxParachuteSpeed; // 0x7d4(0x04)
	None ParachuteKValue; // 0x78c(0x04)
	None MaxRocketJumpSpeed; // 0x740(0x04)
	None DepthWaterNoProne; // 0x73c(0x04)
	None DepthWaterNoCrouch; // 0x784(0x04)
	None DepthWaterSuface; // 0x800(0x04)
	None DepthUnderWater; // 0x7bc(0x04)
	None AngleUnderWater; // 0x7ac(0x04)
	None CurrentWaterDepth; // 0x74c(0x04)
	None MoveParameter; // 0x7e4(0x08)
	None ServerControlRotationInveral; // 0x750(0x04)
	None ClientNetSendMoveDeltaTimeScaleBySpectator; // 0x7c8(0x04)
	None LastGroundStateChangedTime; // 0x7c4(0x04)
	None BravoHotelCharacterOwner; // 0x768(0x08)
	None ClientServerSyncSpeed; // 0x6f8(0x04)
	None OpenedWidget; // 0x78(0x08)
	None CoherentWidget; // 0x248(0x08)
	None AudioEvent; // 0x250(0x08)
	None ObjectArray; // 0x258(0x10)
	None WidgetName; // 0x270(0x10)
	None bInvisibleAfterLoading; // 0x280(0x01)
	None MyWidgetClass; // 0x418(0x08)
	None ChangeCloseInvenDelegate; // 0x430(0x10)
	None ChangeWeaponDelegate; // 0x440(0x10)
	None SendTriggerDelegate; // 0x450(0x10)
	None Angle; // 0x248(0x04)
	None Length; // 0x250(0x04)
	None ArragnedAngle; // 0x254(0x04)
	None AngleBetweenUnits; // 0x258(0x04)
	None DefaultLengthRate; // 0x25c(0x04)
	None AdditionalLengthRate; // 0x260(0x04)
	None PersonalSupplyBoxMarkerInfo; // 0x278(0x28)
	None MarkerInfos; // 0x2a0(0x10)
	None MaterialItemMarkerInfos; // 0x2b0(0x10)
	None LocalPingMarkerInfos; // 0x2c0(0x10)
	None ResuscitationMarkerInfos; // 0x2d0(0x10)
	None ExpertWeaponItemMarkerInfo; // 0x2e0(0x40)
	None UnitArray; // 0x320(0x10)
	None UnitArray2; // 0x330(0x10)
	None ScaleCurve; // 0x340(0x08)
	None ParantWidget; // 0x248(0x08)
	None ConversationWidgetClass; // 0xc8(0x08)
	None CurrentConversationWidget; // 0xd0(0x08)
	None CurrentConversationKey; // 0xd8(0x08)
	None CurrentSentenceIndex; // 0xe0(0x04)
	None VoiceChannelInfo; // 0x100(0x50)
	None CustomizedCharacterComponent; // 0x298(0x08)
	None CrosshairDataMap; // 0x40(0x50)
	None CrosshairDataMap_ADS; // 0x90(0x50)
	None Map; // 0x28(0x50)
	None AdditiveMap; // 0x78(0x50)
	None ActiveAdditiveCroshairList; // 0xc8(0x10)
	None MoveLobbyCharacterWearableDelegate; // 0x30(0x10)
	None MoveLobbyCharacterAppearanceDelegate; // 0x40(0x10)
	None MouseEventDelegate; // 0x50(0x10)
	None WearableMenu; // 0x60(0x10)
	None WearableList; // 0x248(0x10)
	None Data; // 0x248(0x1a8)
	None PhaseInfo; // 0x3f0(0x10)
	None Name; // 0x40(0x08)
	None Names; // 0x48(0x10)
	None bApplyHurtCondition; // 0x58(0x01)
	None bShouldCalculatePerBoneDamage; // 0x58(0x01)
	None bSpawnBlood; // 0x58(0x01)
	None bSpawnDust; // 0x58(0x01)
	None bPlayDamageEffect; // 0x58(0x01)
	None bDrawBloodPostProcess; // 0x58(0x01)
	None IconPath; // 0x60(0x10)
	None Icon; // 0x70(0x28)
	None CauserText; // 0x98(0x18)
	None MultiplyRatio; // 0xb0(0x04)
	None BattleRoyalGameMode; // 0x3e0(0x08)
	None ClientLogCharacter; // 0x5b8(0x08)
	None DebugString; // 0x248(0x10)
	None AllowedDamageType; // 0x570(0x10)
	None bForceDestructionByVehicleDamage; // 0x580(0x01)
	None ImpulseStrength; // 0x584(0x04)
	None hp; // 0x588(0x04)
	None CurrentHP; // 0x58c(0x04)
	None DestructedSound; // 0x590(0x08)
	None bIsWindowComponent; // 0x598(0x01)
	None DestructibleActorClass; // 0x5a0(0x08)
	None DestructibleMesh; // 0x5a8(0x28)
	None bIsDestruct; // 0x60d(0x01)
	None bHiddenInReplay; // 0x318(0x01)
	None SpawnItemList; // 0x4e0(0x10)
	None CheckItemSpawnDistance; // 0x504(0x04)
	None CheckUnImportanttemSpawnDistance; // 0x508(0x04)
	None WeaponList; // 0x248(0x10)
	None AmmoList; // 0x258(0x10)
	None AttachmentList; // 0x268(0x10)
	None WearableList; // 0x278(0x10)
	None ConsumableList; // 0x288(0x10)
	None CustomList; // 0x298(0x10)
	None VehicleList; // 0x2a8(0x10)
	None GearList; // 0x2b8(0x10)
	None PerkList; // 0x2c8(0x10)
	None PresetList; // 0x2d8(0x10)
	None RootNode; // 0x318(0x08)
	None MoveNode; // 0x320(0x08)
	None StaticMesh; // 0x328(0x08)
	None PlayerInteractiveBox; // 0x330(0x08)
	None PushBox; // 0x338(0x08)
	None ForwardArrow; // 0x340(0x08)
	None InDoorNetCullDistanceSquared; // 0x348(0x04)
	None OutDoorNetCullDistanceSquared; // 0x34c(0x04)
	None DestructibleMesh; // 0x350(0x08)
	None DestructibleMeshTest; // 0x358(0x08)
	None DestructibleMeshRef; // 0x360(0x28)
	None bIsDestructible; // 0x388(0x01)
	None MaxHp; // 0x38c(0x04)
	None CurrentHP; // 0x390(0x04)
	None bIsMeshCreated; // 0x394(0x01)
	None ChunkCount; // 0x395(0x01)
	None DestructPointStack; // 0x398(0x10)
	None DestructedPoint; // 0x3a8(0x10)
	None bOverrideMaterial; // 0x3b8(0x01)
	None DestructibleMaterial; // 0x3c0(0x08)
	None TimerHandle_DestroyComponents; // 0x3c8(0x08)
	None FadeAlphaCurve; // 0x3d0(0x08)
	None FadeTimeline; // 0x3d8(0x98)
	None FadeMaterial; // 0x470(0x08)
	None DoorState; // 0x478(0x01)
	None bIsOpenedFromFront; // 0x479(0x01)
	None OpenCurve; // 0x480(0x08)
	None CloseCurve; // 0x488(0x08)
	None DefaultDoorRotation; // 0x5c4(0x0c)
	None AkSound_Open; // 0x648(0x08)
	None AkSound_StartClose; // 0x650(0x08)
	None AkSound_Melee; // 0x658(0x08)
	None AKSound_Kicked; // 0x660(0x08)
	None AKSound_Destructed; // 0x668(0x08)
	None DoorSoundType; // 0x670(0x01)
	None AudioPortalComponent; // 0x678(0x08)
	None bKeepOpenAudioPortal; // 0x680(0x01)
	None KickedParticle; // 0x688(0x08)
	None KickedParticleSystem; // 0x690(0x08)
	None KickImpulseStrength; // 0x698(0x04)
	None OverlappingPlayersInPushBox; // 0x6b0(0x10)
	None DamageCorrectValues; // 0x6e8(0x50)
	None StaticMeshComponent; // 0x310(0x08)
	None ProjectileType; // 0x318(0x01)
	None HitSurfaceEvent; // 0x320(0x08)
	None CurrentSoundPlayCount; // 0x328(0x01)
	None MaxSoundPlayCount; // 0x329(0x01)
	None EjectingSound; // 0x330(0x08)
	None ElevatorBody; // 0x310(0x08)
	None DoorList; // 0x318(0x10)
	None InnerDoorList; // 0x328(0x10)
	None InnerDoorPivotList; // 0x338(0x10)
	None TargetDoor; // 0x348(0x08)
	None CurrentDoor; // 0x350(0x08)
	None DoorQueue; // 0x358(0x10)
	None CurrentStateType; // 0x368(0x01)
	None DefaultDoorID; // 0x36c(0x04)
	None MoveSpeed; // 0x370(0x04)
	None DefaultDelayTime; // 0x374(0x04)
	None CurrentDelayTime; // 0x378(0x04)
	None AkAudioComponent; // 0x380(0x08)
	None SoundEventForMoving; // 0x388(0x08)
	None SoundEventForMoved; // 0x390(0x08)
	None bDoorUIEnable; // 0x358(0x01)
	None BoxTrigger; // 0x360(0x08)
	None PushBox; // 0x368(0x08)
	None LeftDoorPivot; // 0x370(0x08)
	None RightDoorPivot; // 0x378(0x08)
	None ElevatorPivot; // 0x380(0x08)
	None ElevatorUI; // 0x388(0x08)
	None ButtonUI; // 0x390(0x08)
	None CurrentStateType; // 0x398(0x01)
	None DoorID; // 0x39c(0x04)
	None MatchingDoorID; // 0x3a0(0x04)
	None LeftOpenLocation; // 0x3a4(0x0c)
	None RightOpenLocation; // 0x3b0(0x0c)
	None DoorSpeed; // 0x3bc(0x04)
	None bCalled; // 0x3c0(0x01)
	None AkAudioComponent; // 0x3c8(0x08)
	None SoundEventForOpening; // 0x3d0(0x08)
	None SoundEventForOpened; // 0x3d8(0x08)
	None SoundEventForClosing; // 0x3e0(0x08)
	None SoundEventForClosed; // 0x3e8(0x08)
	None ParentGameInstance; // 0x28(0x08)
	None DamageCorrectValues; // 0x328(0x50)
	None Image_Buff; // 0x248(0x08)
	None ProgressBar_Slot; // 0x250(0x08)
	None BuffUIInfo; // 0x258(0x98)
	None LastTimer; // 0x2f0(0x04)
	None CharacterTeleport; // 0x250(0x01)
	None EnableChatting; // 0x251(0x01)
	None AllowReconnect; // 0x252(0x01)
	None bIsInHouseDevBuild; // 0x253(0x01)
	None DefaultFontFamilyAsset; // 0x258(0x10)
	None DefaultFontFamily; // 0x268(0x08)
	None LoadingScreenIndex; // 0x270(0x04)
	None LoadingScreenWidget; // 0x278(0x08)
	None CurLoadingScreenInfo; // 0x280(0x40)
	None bWinnerCam; // 0x2c0(0x01)
	None ForceLoadingType; // 0x2c1(0x01)
	None bIsPlayingKillCam; // 0x2c2(0x01)
	None KillerUniquePlayerId; // 0x2c8(0x04)
	None MyUniquePlayerId; // 0x2cc(0x04)
	None ReplayListChangedCallBack; // 0x2d0(0x10)
	None bCheatable; // 0x2e0(0x01)
	None bEnableMakeAccount; // 0x2e1(0x01)
	None GameSettingManager; // 0x2e8(0x08)
	None LoadingScreenWidgetClass; // 0x300(0x10)
	None CohWidgetList; // 0x368(0x10)
	None PopupWidgetClass; // 0x458(0x10)
	None OnChangedLanguageCallBack; // 0x468(0x10)
	None LobbyMemberVoiceStateList; // 0x480(0x50)
	None MemberVoiceStateList; // 0x4d0(0x50)
	None ReconnectWidget; // 0x598(0x08)
	None ZOrder; // 0x28(0x04)
	None WidgetList; // 0x30(0x10)
	None CurrentGameResultWidgetMode; // 0x250(0x01)
	None bIsShowingSimpleResult; // 0x251(0x01)
	None TimerHandle_ShowSimpleResult; // 0x258(0x08)
	None SimpleResultData; // 0x270(0xa8)
	None bIsShowingFinalResult; // 0x318(0x01)
	None FinalResultData; // 0x319(0x04)
	None TimerHandle_ShowFinalResult; // 0x320(0x08)
	None bIsShowingMatchEndAnimation; // 0x338(0x01)
	None TimerHandle_ShowMatchEndAnimation; // 0x340(0x08)
	None MatchEndAnimationData; // 0x358(0x02)
	None HitScore; // 0x28(0x02)
	None PickUpCoin; // 0x2c(0x04)
	None ExpPoint; // 0x30(0x10)
	None TotalDistanceTraveled; // 0x40(0x04)
	None OnChangedFinalRankDelegate; // 0x48(0x10)
	None FinalRank; // 0x5a(0x02)
	None GainedRP; // 0x5c(0x04)
	None GoldPoint; // 0x60(0x10)
	None RewardItemList; // 0x70(0x10)
	None DropedItemList; // 0x80(0x10)
	None TotalDamage; // 0x90(0x04)
	None LifeTime; // 0x94(0x04)
	None BravoHotelNetworkManager; // 0x28(0x08)
	None BravoHotelItemSpawnStatisticManager; // 0x30(0x08)
	None BravoHotelDataManager; // 0x128(0x08)
	None BravoHotelReportDataManager; // 0x130(0x08)
	None BravoHotelOutGameDataManager; // 0x138(0x08)
	None BravoHotelQuestManager; // 0x140(0x08)
	None BravoHotelAchievementManager; // 0x148(0x08)
	None BravoHotelAppAudioStateManager; // 0x158(0x08)
	None CachedLocalSaves; // 0x178(0x50)
	None GrenadeProjectileClass; // 0x1bd0(0x08)
	None bNeedAssistantWeapon; // 0x1bd8(0x01)
	None StartFireBoneName; // 0x1bdc(0x08)
	None AssistantWeaponClass; // 0x1be8(0x08)
	None HandSocketName; // 0x1bf0(0x08)
	None GrenadeDamage; // 0x1bf8(0x04)
	None GrenadeHitDamage; // 0x1bfc(0x04)
	None GrenadeHitDamageToCharacter; // 0x1c00(0x04)
	None GrenadeCookingTime; // 0x1c04(0x04)
	None OverThrowDegreeValue; // 0x1c08(0x04)
	None UnderThrowDegreeValue; // 0x1c0c(0x04)
	None OverThrowGrenadeVelocity; // 0x1c10(0x04)
	None UnderThrowGrenadeVelocity; // 0x1c14(0x04)
	None GrenadeThrowDirectionCorrectionValue; // 0x1c18(0x04)
	None ThrowVelocityModifierByCharacterMovement; // 0x1c1c(0x04)
	None CookEvent; // 0x1c20(0x08)
	None ThrowEvent; // 0x1c28(0x08)
	None bEnableCooking; // 0x1c30(0x01)
	None bIsCooked; // 0x1c31(0x01)
	None GrenadeType; // 0x1c32(0x01)
	None GrenadeState; // 0x1c33(0x01)
	None ThrowingType; // 0x1c34(0x01)
	None ProjectileGrenade; // 0x1c38(0x08)
	None DrawPredictProjectileLine; // 0x1c40(0x01)
	None FireLocation; // 0x1c44(0x0c)
	None FireDirection; // 0x1c50(0x0c)
	None FireRotation; // 0x1c5c(0x0c)
	None FireVelocity; // 0x1c68(0x04)
	None FireLocationOffset; // 0x1c6c(0x0c)
	None FireRotationOffset; // 0x1c78(0x0c)
	None ThrowStartedTime; // 0x1c84(0x04)
	None OverThrowLocationCompensationValue; // 0x1c88(0x04)
	None UnderThrowLocationCompensationValue; // 0x1c8c(0x04)
	None RightHandOffset; // 0x1c90(0x04)
	None FireWeaponLocationOffset; // 0x1c94(0x0c)
	None PredictPathThrowingType; // 0x1ca0(0x01)
	None bEnableUnderThrow; // 0x1ca1(0x01)
	None AfterThrowAnimDelay; // 0x1ca4(0x04)
	None OverThrowGrenade; // 0x1cb8(0x10)
	None UnderThrowGrenade; // 0x1cc8(0x10)
	None PinOffGrenade; // 0x1cd8(0x10)
	None LeverOffGrenade; // 0x1ce8(0x10)
	None UnderThrow_LeverOffGrenade; // 0x1cf8(0x10)
	None Crouch_OverThrowGrenade; // 0x1d08(0x10)
	None Crouch_UnderThrowGrenade; // 0x1d18(0x10)
	None Crouch_PinOffGrenade; // 0x1d28(0x10)
	None Crouch_UnderThrow_LeverOffGrenade; // 0x1d38(0x10)
	None Prone_OverThrow_LeverOffGrenade; // 0x1d48(0x10)
	None Prone_UnderThrow_LeverOffGrenade; // 0x1d58(0x10)
	None Prone_OverThrow; // 0x1d68(0x10)
	None Prone_UnderThrow; // 0x1d78(0x10)
	None Locomotion_Stand_Idle; // 0x1d88(0x08)
	None Locomotion_Stand_Idle_Under; // 0x1d90(0x08)
	None Locomotion_Stand_PinOff_Idle; // 0x1d98(0x08)
	None Locomotion_Stand_PinOff_Idle_Additive; // 0x1da0(0x08)
	None Locomotion_Stand_ThrowUnder_Idle; // 0x1da8(0x08)
	None Locomotion_Stand_ThrowUnder_Idle_Additive; // 0x1db0(0x08)
	None Locomotion_Crouch_Idle; // 0x1db8(0x08)
	None Locomotion_Crouch_PinOff_Idle; // 0x1dc0(0x08)
	None Locomotion_Crouch_PinOff_Idle_Additive; // 0x1dc8(0x08)
	None Locomotion_Crouch_ThrowUnder_Idle; // 0x1dd0(0x08)
	None Locomotion_Crouch_ThrowUnder_Idle_Additive; // 0x1dd8(0x08)
	None Locomotion_Prone_Idle; // 0x1de0(0x08)
	None Locomotion_Prone_PinOff_Idle_ThrowOver; // 0x1de8(0x08)
	None Locomotion_Prone_PinOff_Idle_ThrowUnder; // 0x1df0(0x08)
	None Locomotion_Stand_Idle_1P; // 0x1df8(0x08)
	None Locomotion_Stand_Idle_Under_1P; // 0x1e00(0x08)
	None Locomotion_Stand_PinOff_Idle_1P; // 0x1e08(0x08)
	None Locomotion_Stand_PinOff_Idle_Additive_1P; // 0x1e10(0x08)
	None Locomotion_Stand_ThrowUnder_Idle_1P; // 0x1e18(0x08)
	None Locomotion_Stand_ThrowUnder_Idle_Additive_1P; // 0x1e20(0x08)
	None Locomotion_Crouch_Idle_1P; // 0x1e28(0x08)
	None Locomotion_Crouch_PinOff_Idle_1P; // 0x1e30(0x08)
	None Locomotion_Crouch_PinOff_Idle_Additive_1P; // 0x1e38(0x08)
	None Locomotion_Crouch_ThrowUnder_Idle_1P; // 0x1e40(0x08)
	None Locomotion_Crouch_ThrowUnder_Idle_Additive_1P; // 0x1e48(0x08)
	None Locomotion_Prone_Idle_1P; // 0x1e50(0x08)
	None Locomotion_Prone_PinOff_Idle_ThrowOver_1P; // 0x1e58(0x08)
	None Locomotion_Prone_PinOff_Idle_ThrowUnder_1P; // 0x1e60(0x08)
	None OnChangeThrowingWeaponStateDelegate; // 0x1e68(0x10)
	None OnChangeThrowingTypeDelegate; // 0x1e78(0x10)
	None ThrowingWeaponCameraShakeDelayTime; // 0x1e88(0x04)
	None ThrowingWeaponCameraShake; // 0x1e90(0x08)
	None DestroyDelayTime; // 0x1e98(0x04)
	None ThrowingWeaponCameraShakeScale; // 0x1e9c(0x04)
	None InterpProjectilePredictPathJumpCurve; // 0x1ea0(0x08)
	None InterpProjectilePredictPathNormalCurve; // 0x1ea8(0x08)
	None CalcProjectilePredictPathRot; // 0x1eb0(0x0c)
	None ProjectilePredictTime; // 0x1ebc(0x04)
	None FireWeaponDelayTime; // 0x1ec0(0x04)
	None bOverrideSpawnGrenadeCount; // 0x1ec4(0x01)
	None OverrideSpawnGrenadeCount; // 0x1ec8(0x04)
	None PredictTimeHandle; // 0x1ee0(0x08)
	None PinOffParticle; // 0x1ee8(0x08)
	None SpawnGrenadeCount; // 0x1ef8(0x04)
	None SpawnPositionDelta; // 0x1efc(0x04)
	None SpawnRotationDelta; // 0x1f00(0x04)
	None bEnableGuidedShot; // 0x1f04(0x01)
	None GuidedShotDistance; // 0x1f08(0x04)
	None GuidedShotRadius; // 0x1f0c(0x04)
	None FireCorrectLocationHitBlock; // 0x1f10(0x04)
	None HeartBeatSensorLength; // 0x1bd4(0x04)
	None TimerHandle_OnStartEffectEvent; // 0x1bd8(0x08)
	None DetectedCharacters; // 0x1be0(0x10)
	None MeshClassType; // 0x730(0x08)
	None AllowedDamageType; // 0x738(0x10)
	None ImpulseStrength; // 0x748(0x04)
	None HpList; // 0x750(0x10)
	None CurrentHpList; // 0x760(0x10)
	None DestructedSound; // 0x770(0x08)
	None DestructedEffect; // 0x778(0x08)
	None EffectPositionDelta; // 0x780(0x0c)
	None EffectRotationDelta; // 0x78c(0x0c)
	None bOverrideMaterial; // 0x798(0x01)
	None DestructibleMaterialIndex; // 0x79c(0x04)
	None DestructibleMaterial; // 0x7a0(0x08)
	None bIsWindowComponent; // 0x7a8(0x01)
	None DestructibleActorClass; // 0x7b0(0x08)
	None DestructibleMesh; // 0x7b8(0x28)
	None DisableInstanceArray; // 0x848(0x10)
	None RootNode; // 0x310(0x08)
	None ActionLink; // 0x318(0x01)
	None Image_133; // 0x248(0x08)
	None Icon; // 0x250(0x08)
	None Bg; // 0x258(0x08)
	None Overlay_36; // 0x260(0x08)
	None NewAnimation; // 0x268(0x08)
	None MutableComponent; // 0x310(0x08)
	None InventoryCharacterMesh; // 0x318(0x08)
	None BackgroundWidgetComponent; // 0x320(0x08)
	None PostProcessComponet; // 0x328(0x08)
	None LightsRootComponent; // 0x330(0x08)
	None SpotLight; // 0x338(0x08)
	None OwnCharacter; // 0x340(0x08)
	None BodyBaseSkeletalMesh; // 0x348(0x08)
	None LocationOffset; // 0x360(0x0c)
	None DefaultMeshScale; // 0x36c(0x0c)
	None ScreenPosition; // 0x378(0x08)
	None CharacterFOV; // 0x380(0x04)
	None MoveScaleModify; // 0x384(0x04)
	None RotationInterpSpeed; // 0x388(0x04)
	None DragWidgetClass; // 0x390(0x08)
	None DragWidget; // 0x398(0x08)
	None CanvasItemSlotHover; // 0x248(0x08)
	None CanvasWeaponItemSlotHover; // 0x250(0x08)
	None CanvasPerkSlotHover; // 0x258(0x08)
	None CanvasStatSlotHover; // 0x260(0x08)
	None CanvasMaterialSlotHover; // 0x268(0x08)
	None CanvasTooltipSlotHover; // 0x270(0x08)
	None bNeedUpdateHover; // 0x278(0x01)
	None HoverType; // 0x27c(0x04)
	None PlayerCharacter; // 0x248(0x08)
	None PerkInfo; // 0x250(0x2c)
	None bIsJustVisual; // 0x27c(0x01)
	None OverlayCoolTime; // 0x280(0x08)
	None TextCoolTime; // 0x288(0x08)
	None ImgCoolTime; // 0x290(0x08)
	None Img_Active; // 0x298(0x08)
	None PlayerCharacter; // 0x248(0x08)
	None UltimatePerkInfo; // 0x250(0x2c)
	None LastHoverWidget; // 0x280(0x08)
	None OverlayUltimate; // 0x288(0x08)
	None VerticalBoxHealth; // 0x290(0x08)
	None VerticalBoxPower; // 0x298(0x08)
	None VerticalBoxSpeed; // 0x2a0(0x08)
	None Over_CoolTime; // 0x2a8(0x08)
	None T_CoolTime; // 0x2b0(0x08)
	None IMG_CoolTime; // 0x2b8(0x08)
	None Img_Active; // 0x2c0(0x08)
	None IMG_CanActive; // 0x2c8(0x08)
	None T_RemainCount; // 0x2d8(0x08)
	None bCanChangePerkDeck; // 0x2e0(0x01)
	None WeaponAmmoDelegate; // 0x250(0x10)
	None BoxComponent; // 0x318(0x08)
	None SphereComponent; // 0x320(0x08)
	None WorldStaticMesh; // 0x328(0x08)
	None WorldSkelMesh; // 0x330(0x08)
	None AudioComponent; // 0x340(0x08)
	None ItemInfo; // 0x348(0x98)
	None DetailItemInfo; // 0x3e0(0x490)
	None AttachmentItems; // 0x870(0x10)
	None bDrawDebugInfo; // 0x880(0x01)
	None LoadedAssets; // 0x888(0x10)
	None bLoadMesh; // 0x8a1(0x01)
	None bPlaceOnTheGround; // 0x8a2(0x01)
	None OnChangeItemInfoDelegate; // 0x8a8(0x10)
	None IsSpawnBook; // 0x8b8(0x01)
	None BookSpawnEffectComponent; // 0x8c0(0x08)
	None BookSpawnEffect; // 0x8c8(0x08)
	None RootParticleComponent; // 0x8d0(0x08)
	None MeshParticleComponent; // 0x8d8(0x08)
	None PassiveChildParticleComponents; // 0x8e0(0x10)
	None ActiveChildParticleComponents; // 0x8f0(0x10)
	None RootParticle; // 0x908(0x08)
	None ItemRecipeTreeInfo; // 0x248(0x10)
	None BoxID; // 0x4e0(0x04)
	None UsingRandomRotation; // 0x4e4(0x01)
	None IsCompleteSpawn; // 0x4e5(0x01)
	None NoneItem; // 0x588(0x18)
	None ParentsStandardGroupBoxComponent; // 0x5d0(0x08)
	None LoadedClasses; // 0x5d8(0x10)
	None WorldCenter; // 0x248(0x0c)
	None WorldSize; // 0x254(0x08)
	None BaseMapSize; // 0x25c(0x08)
	None RecordInfo; // 0x268(0x188)
	None ItemDataInfoData; // 0x3f0(0xe8)
	None SlotList; // 0x4d8(0x10)
	None BuildingData; // 0x4e8(0x50)
	None ItemDivisionCnt; // 0x538(0x50)
	None ItemSpawnCnt; // 0x588(0x50)
	None ItemRateAddCnt; // 0x5d8(0x50)
	None ItemRateRemoveCnt; // 0x628(0x50)
	None SelectedBuildingName; // 0x678(0x10)
	None SelectedStandardGroupName; // 0x688(0x10)
	None SelectAreaKey; // 0x248(0x08)
	None IsBlueZoneSpawnRate; // 0x250(0x01)
	None AreaSpawnRateList; // 0x258(0x50)
	None BlueZoneSpawnRate; // 0x2a8(0x28)
	None SpawnPerkData; // 0x310(0x60)
	None OnEndSimulationDelegate; // 0x370(0x10)
	None PreLocation; // 0x380(0x0c)
	None CheckCount; // 0x38c(0x04)
	None MaxCount; // 0x390(0x04)
	None Box; // 0x398(0x08)
	None ItemStandardGroupInfo; // 0x4e0(0x10)
	None AllBoxInfos; // 0x4f0(0x10)
	None GauageProgress; // 0x248(0x08)
	None GauageText; // 0x250(0x08)
	None KillcamWorld; // 0x28(0x08)
	None KillcamWorldPackage; // 0x30(0x08)
	None HideTime; // 0x248(0x04)
	None ArrayIndex; // 0x24c(0x04)
	None ParentWidget; // 0x250(0x08)
	None SlotWidgetClass; // 0x248(0x08)
	None MaxSlotCount; // 0x250(0x04)
	None MaxVisibleCount; // 0x254(0x04)
	None SlotList; // 0x258(0x10)
	None KillDataList; // 0x268(0x50)
	None AddIndex; // 0x2b8(0x04)
	None RootScene; // 0x310(0x08)
	None InteractiveCheckBox; // 0x318(0x08)
	None UpStart; // 0x320(0x08)
	None UpEnd; // 0x328(0x08)
	None DownStart; // 0x330(0x08)
	None DownEnd; // 0x338(0x08)
	None LadderPoint; // 0x340(0x08)
	None StepMinCount; // 0x348(0x04)
	None StepCount; // 0x34c(0x04)
	None StepHeight; // 0x350(0x04)
	None StepHalfWidth; // 0x354(0x04)
	None StepWidthScale; // 0x358(0x04)
	None StepWidthMargin; // 0x35c(0x04)
	None StepMesh; // 0x360(0x08)
	None OnlySnapToCenter; // 0x368(0x01)
	None TestLadderHiddenInGame; // 0x369(0x01)
	None DebugMode; // 0x36a(0x01)
	None AvailableDistanceAtTop; // 0x36c(0x04)
	None AvailableDistanceAtBottom; // 0x370(0x04)
	None AvailableDistanceInAir; // 0x374(0x04)
	None AvailableMinYawAtTop; // 0x378(0x04)
	None AvailableMaxYawAtTop; // 0x37c(0x04)
	None AvailableMinYawAtBottom; // 0x380(0x04)
	None AvailableMaxYawAtBottom; // 0x384(0x04)
	None BottomAdjustedHeight; // 0x388(0x04)
	None TopRelativeX; // 0x38c(0x04)
	None BottomRelativeX; // 0x390(0x04)
	None IsTopOccupied; // 0x394(0x01)
	None IsBottomOccupied; // 0x395(0x01)
	None UsingPlayers; // 0x3b0(0x10)
	None bLightOn; // 0x310(0x01)
	None bLightFlicker; // 0x311(0x01)
	None LightOnIntensity; // 0x314(0x04)
	None LightOnTemperture; // 0x318(0x04)
	None LightOnAttenuationRadius; // 0x31c(0x04)
	None LightOnMaterial; // 0x320(0x08)
	None LightOffMaterial; // 0x328(0x08)
	None LightFlickerFunctionMaterial; // 0x330(0x08)
	None SceneRootComponent; // 0x338(0x08)
	None LoadingScreenIndex; // 0x248(0x04)
	None LoadingScreenCount; // 0x24c(0x04)
	None FromLoading; // 0x250(0x10)
	None MutableList; // 0x270(0x10)
	None TargetPawn; // 0x288(0x08)
	None CurrentLobbyPawnIndex; // 0x6f8(0x04)
	None ParachuteActor; // 0x700(0x08)
	None DefaultMapSetting; // 0x248(0x10)
	None MousePos; // 0x364(0x08)
	None CheckPreLoad; // 0x36c(0x01)
	None bShowReconnectAlarm; // 0x36d(0x01)
	None ExitDelegate; // 0x370(0x10)
	None OptionDelegate; // 0x380(0x10)
	None UIButtonOverSoundDelegate; // 0x390(0x10)
	None UIButtonClickSoundDelegate; // 0x3a0(0x10)
	None StoreDelegate; // 0x3b0(0x10)
	None PartyInfoDelegate; // 0x3c0(0x10)
	None DefaultMapSetting; // 0x3d0(0x10)
	None DevMapSetting; // 0x3e0(0x10)
	None MapSetting; // 0x3f0(0x10)
	None CustomizedCharacterComponent; // 0x400(0x08)
	None SupplyBoxComponent; // 0x408(0x08)
	None ArmoryComponent; // 0x410(0x08)
	None SeasonComponent; // 0x418(0x08)
	None TabDelegate; // 0x420(0x10)
	None OnPrefetchingProgress; // 0x430(0x10)
	None SupplyBoxSpawnEffect; // 0x440(0x08)
	None PP_Preset_PickupOutline; // 0x448(0x08)
	None GamePlayTime_Hours; // 0x450(0x04)
	None PrefetchingProgressPercentage; // 0x454(0x04)
	None SoftReplayWidgetClass; // 0x460(0x28)
	None ReMatchingByDS_TimerHandle; // 0x488(0x08)
	None Gold; // 0x4a0(0x04)
	None WeaponList; // 0x4a8(0x10)
	None MaterialList; // 0x4b8(0x10)
	None UniquePlayerId; // 0x258(0x04)
	None KillcamPlayback; // 0x260(0x08)
	None UserName; // 0x28(0x08)
	None MouseSensitivityStates; // 0x30(0x50)
	None bRememberMe; // 0x80(0x01)
	None MatchingSettings; // 0x88(0x20)
	None FireModeSettings; // 0xa8(0x50)
	None bAutoReload; // 0xf8(0x01)
	None OpeningMovieName; // 0xfc(0x08)
	None bFirstRun; // 0x104(0x01)
	None CoherentSettings; // 0x108(0x18)
	None MagazineMeshComponent; // 0x310(0x08)
	None SpawnedSocketTransform; // 0x320(0x30)
	None OwnerWeaponRef; // 0x350(0x08)
	None WorldCenter; // 0x260(0x0c)
	None WorldSize; // 0x26c(0x08)
	None BaseMapSize; // 0x274(0x08)
	None ParentWidgetSize; // 0x27c(0x08)
	None TargetCharacterRef; // 0x288(0x08)
	None TargetPlayerStateRef; // 0x290(0x08)
	None BattleRoyaleGameStateRef; // 0x298(0x08)
	None PlayerHUDRef; // 0x2a0(0x08)
	None PlayerControllerRef; // 0x2a8(0x08)
	None TargetPawnTeamPlayers; // 0x2b0(0x10)
	None ViewportSize; // 0x2cc(0x08)
	None ViewportScale; // 0x2d4(0x04)
	None TopInfoWidgetClass; // 0x2d8(0x08)
	None SightInfoWidgetClass; // 0x2e0(0x08)
	None TeamPositionWidgetArray; // 0x2e8(0x10)
	None TeamPositionWidgetClass; // 0x2f8(0x08)
	None bWantShowTeamPositionWidget; // 0x300(0x01)
	None MinViewportPosition; // 0x304(0x08)
	None MaxViewportPosition; // 0x30c(0x08)
	None RedCircleVisibility; // 0x31c(0x01)
	None IsMouseCursorWidgetChanged; // 0x31d(0x01)
	None SkillMapRadarPosition; // 0x320(0x08)
	None SkillMapRadarScaleRate; // 0x328(0x04)
	None AudioEvent_FindLandingPositionStart; // 0x338(0x08)
	None AudioEvent_FindLandingPositionEnd; // 0x340(0x08)
	None AudioEvent_SearchInstinctStart; // 0x368(0x08)
	None AudioEvent_SearchInstinctEnd; // 0x370(0x08)
	None SearchInstinctAlpha; // 0x378(0x04)
	None bIsSetSearchInstinctWidget; // 0x37c(0x01)
	None bIsSetVehicleSearchWidget; // 0x37d(0x01)
	None SpatialSenseUIInfoMap; // 0x380(0x50)
	None CarScanCurrentTime; // 0x3d0(0x04)
	None AttackDamageInfoList; // 0x3d8(0x10)
	None AttackDamageWidgetClass; // 0x3f0(0x08)
	None AttackUserWidgetClass; // 0x3f8(0x08)
	None HitWidgetList; // 0x400(0x10)
	None TopInfoWidget; // 0x410(0x08)
	None SightInfoWidget; // 0x418(0x08)
	None AliveInfoWidget; // 0x420(0x08)
	None KillInfoWidget; // 0x428(0x08)
	None CompassWidget; // 0x430(0x08)
	None VehicleWidget; // 0x438(0x08)
	None TeamInfoWidget; // 0x440(0x08)
	None JetpackWidget; // 0x448(0x08)
	None BattleRoyaleGameState; // 0x248(0x08)
	None BravoHotelGameState; // 0x250(0x08)
	None TeamSize; // 0x258(0x04)
	None bForceUpdateAllWidgets; // 0x260(0x01)
	None MapPlayerInfos; // 0x268(0x10)
	None LocalMapPlayerInfo; // 0x278(0x58)
	None PersonalSupplyBoxInfo; // 0x2d0(0x10)
	None WorldCenter; // 0x2e0(0x0c)
	None WorldSize; // 0x2ec(0x08)
	None BaseMapSize; // 0x2f4(0x08)
	None ParentWidgetSize; // 0x2fc(0x08)
	None ScaleFactor; // 0x304(0x04)
	None BaseScaleFactor; // 0x308(0x04)
	None TargetScaleFactor; // 0x30c(0x04)
	None TargetMapPos; // 0x310(0x08)
	None PivotPosOnViewport; // 0x318(0x08)
	None bNeedToTranslateMapToPlayerPos; // 0x320(0x01)
	None GridLevel; // 0x324(0x04)
	None CurrentGridLevel; // 0x328(0x04)
	None GridUnits; // 0x330(0x10)
	None GridColors; // 0x340(0x10)
	None LineP2CAngle; // 0x350(0x04)
	None LineP2CHeight; // 0x354(0x04)
	None LineP2CPosonMap; // 0x358(0x08)
	None MapCompBlueZoneInfo; // 0x360(0x2c)
	None IsUsingOuterAreaBlueZone; // 0x38c(0x01)
	None UsingOuterAreaBlueZoneVisible; // 0x38d(0x01)
	None AircraftWidget; // 0x390(0x08)
	None ReplayCircleInfo; // 0x39c(0x10)
	None bIsFreeCamVisible; // 0x3ac(0x01)
	None FreeCamPosition; // 0x3b0(0x08)
	None FreeCamAngle; // 0x3b8(0x04)
	None MaterialItemList; // 0x3c0(0x50)
	None LocalPingList; // 0x410(0x50)
	None ExpertWeaponItem; // 0x460(0x08)
	None bShowWorldMap; // 0x468(0x01)
	None ParentWidgetRef; // 0x470(0x08)
	None AreaWidgetsRef; // 0x478(0x10)
	None UW_MapDrawWidget_Circle; // 0x488(0x08)
	None UW_MapDrawWidget_Grid; // 0x490(0x08)
	None LinePlayerToCircle; // 0x498(0x08)
	None LineRouteDefault; // 0x4a0(0x08)
	None LineRouteDotline; // 0x4a8(0x08)
	None DescentStartPoint; // 0x4b0(0x08)
	None DescentEndPoint; // 0x4b8(0x08)
	None CircleMask; // 0x4c0(0x08)
	None ReplayCircleMask; // 0x4c8(0x08)
	None MiniMapLevel; // 0x4d0(0x04)
	None DefaultCircleTexture; // 0x4d8(0x08)
	None CircleMaskMaterial; // 0x4e0(0x08)
	None ReplayMaskMaterial; // 0x4e8(0x08)
	None CircleMaterialInstance; // 0x4f0(0x08)
	None ReplayMaterialInstance; // 0x4f8(0x08)
	None MapCompRef; // 0x248(0x08)
	None CircleClicedCount; // 0x250(0x04)
	None CurrentCircleColor; // 0x254(0x10)
	None TargetCircleColor; // 0x264(0x10)
	None ReplayCircleColor; // 0x274(0x10)
	None DestructTime; // 0x310(0x04)
	None ColorValues; // 0x318(0x50)
	None FloatValues; // 0x368(0x50)
	None ColorCurves; // 0x3b8(0x50)
	None FloatCurves; // 0x408(0x50)
	None DelegateMediaState; // 0x248(0x10)
	None MeleeAttack_Stand; // 0x1bd0(0x10)
	None MeleeAttack_Crouch; // 0x1be0(0x10)
	None MeleeAttach_Jump; // 0x1bf0(0x10)
	None Locomotion_Stand_Idle_3P; // 0x1c00(0x08)
	None Locomotion_Crouch_Idle_3P; // 0x1c08(0x08)
	None Locomotion_Prone_Idle_3P; // 0x1c10(0x08)
	None Locomotion_Stand_Idle_1P; // 0x1c18(0x08)
	None Locomotion_Crouch_Idle_1P; // 0x1c20(0x08)
	None Locomotion_Prone_Idle_1P; // 0x1c28(0x08)
	None RemaingTimeToActivate; // 0x250(0x08)
	None MaxViewportSize; // 0x930(0x08)
	None bIsShowingTimelineWidget; // 0x938(0x01)
	None bIsShowingPlayerListWidget; // 0x939(0x01)
	None bIsShowingItemListWidget; // 0x93a(0x01)
	None DuplicatedReconnectTimeout_TimerHandle; // 0x940(0x08)
	None MainWidgetRef; // 0x948(0x08)
	None ReplayMainWidgetRef; // 0x950(0x08)
	None KillMessageAdditionalEffectiveTime; // 0x958(0x04)
	None LastViewTarget; // 0x960(0x08)
	None GameOverlayWidget; // 0x970(0x08)
	None GameSettingWidget; // 0x978(0x08)
	None DebugInfo; // 0x980(0x08)
	None ReplayZone; // 0x988(0x08)
	None CurrentRecordingPawn; // 0x990(0x08)
	None TargetVehicle; // 0xa70(0x08)
	None K2_AfterKillcamHUD; // 0xa80(0x08)
	None RecordingPlayerState; // 0xa88(0x08)
	None ReplayController; // 0x3a8(0x08)
	None DefaultSpeed; // 0x3b0(0x04)
	None CurrentSpeedLevel; // 0x3b4(0x04)
	None MinSpeedLevel; // 0x3b8(0x04)
	None MaxSpeedLevel; // 0x3bc(0x04)
	None CurrentStateType; // 0x318(0x01)
	None CurrentMovingTime; // 0x31c(0x04)
	None RootNode; // 0x310(0x08)
	None SendController; // 0x318(0x08)
	None BoxMesh; // 0x360(0x08)
	None LoopAction; // 0x368(0x01)
	None StartAction; // 0x369(0x01)
	None RepMoveTransform; // 0x370(0x30)
	None MuzzleAttachPoint; // 0xb0(0x08)
	None ChancePool; // 0xb8(0x10)
	None BulletCountToSpawnMultiFireEffect; // 0xc8(0x04)
	None SpawnInterval; // 0xcc(0x04)
	None MuzzleAttachPoint_1P; // 0xe0(0x08)
	None MuzzleAttachPoint_ADS; // 0xe8(0x08)
	None MuzzleEffects; // 0xf0(0x50)
	None ReadyEffect; // 0x140(0x08)
	None WarmupEffect; // 0x148(0x08)
	None WarmupAlphaParameter; // 0x150(0x08)
	None WarmupAlphaTime; // 0x158(0x04)
	None WarmupAlphaCurve; // 0x160(0x08)
	None TimerHandle_WarmupOff; // 0x168(0x08)
	None TimerHandle_WarmupUpdate; // 0x170(0x08)
	None CurrentMuzzleType; // 0x178(0x01)
	None MuzzleFlashComponent; // 0x180(0x08)
	None MuzzleSmokeComponent; // 0x188(0x08)
	None ReadyEffectComponent; // 0x190(0x08)
	None WarmupEffectComponent; // 0x198(0x08)
	None PrevSpawnTime; // 0x1a0(0x04)
	None bAttachSpawnedEffect; // 0x1a4(0x01)
	None bUsePreShootRotationToFlash; // 0x1a5(0x01)
	None IsParentsSync; // 0x238(0x01)
	None IsSimulatePhysics; // 0x239(0x01)
	None IsCollisionEnabled; // 0x23a(0x01)
	None IsEverTick; // 0x23b(0x01)
	None DefaultTableIndex; // 0x250(0x04)
	None T_DelayMessage; // 0x258(0x08)
	None NetworkSocket; // 0x28(0x10)
	None NetworkWebSocket; // 0x38(0x20)
	None HttpService; // 0x58(0x08)
	None bHttpServiceEnable; // 0x60(0x01)
	None UserInfo; // 0x220(0x90)
	None FriendList; // 0x2b0(0x10)
	None PartyInfo; // 0x2d8(0x28)
	None PartyInvitaion; // 0x300(0x30)
	None OnlineSubsystemFriends; // 0x330(0x30)
	None ParentGameInstance; // 0x4f8(0x08)
	None SyncInfo; // 0x310(0x04)
	None MannagedPool; // 0x318(0x50)
	None DamagePerSec; // 0xb0(0x04)
	None DamageType; // 0xb8(0x08)
	None PainInterval; // 0xc0(0x04)
	None bEntryPain; // 0xc4(0x01)
	None DamageInstigator; // 0xc8(0x08)
	None DamagedActors; // 0xd8(0x10)
	None BoxComponent; // 0x310(0x08)
	None ArrowComponent; // 0x318(0x08)
	None bLaunch; // 0x320(0x01)
	None LaunchForce; // 0x324(0x04)
	None ParachuteDelayTime; // 0x328(0x04)
	None ParachuteDelayTimeByFalling; // 0x32c(0x04)
	None RepPerkInfos; // 0xc0(0x118)
	None OnPerkInfoChanged; // 0x1d8(0x10)
	None IsWeaponData; // 0x248(0x01)
	None IsConsumableItemData; // 0x249(0x01)
	None WeaponItemData; // 0x250(0x98)
	None ConsumableItemData; // 0x2e8(0x100)
	None HaveWeaponList; // 0x248(0x10)
	None ConsumableItemList; // 0x258(0x10)
	None CurSortType; // 0x268(0x01)
	None CurConsumableItemDatas; // 0x270(0x50)
	None CurWeapon; // 0x2c0(0x98)
	None DefaultWeapon; // 0x358(0x98)
	None IsFreeSupply; // 0x3f0(0x01)
	None bIsDefaultWeapon; // 0x3f1(0x01)
	None Friction_OutBlueZone; // 0x80(0x04)
	None AllowPenetration; // 0x84(0x01)
	None bAllowPenetrationToThrowWeapon; // 0x85(0x01)
	None Toughness; // 0x88(0x04)
	None RefrationOnPenetration; // 0x8c(0x04)
	None bUseDefaultNoImpactEffect; // 0x90(0x01)
	None ImpactEffect; // 0x98(0x08)
	None ImpactDecalMaterial; // 0xa0(0x10)
	None ImpactEffect_OutBlueZone; // 0xb0(0x08)
	None ImpactDecalMaterial_OutBlueZone; // 0xb8(0x10)
	None ImpactDecalSize; // 0xc8(0x04)
	None ImpactDecalScale; // 0xcc(0x0c)
	None PlayFootstepEffectWhenMovementInteractionTriggered; // 0xd8(0x01)
	None OverrideFootstepEffects; // 0xe0(0x50)
	None FootstepEffect; // 0x130(0x08)
	None FootstepEffect_OutBlueZone; // 0x138(0x08)
	None FootstepDecalMaterial; // 0x140(0x10)
	None FootstepDecalMaterial_OutBlueZone; // 0x150(0x10)
	None VehicleEffect; // 0x160(0x08)
	None VehicleEffect_OutBlueZone; // 0x168(0x08)
	None VehicleWreckEffect; // 0x170(0x08)
	None VehicleWreckEffect_OutBlueZone; // 0x178(0x08)
	None OverlapSound; // 0x180(0x08)
	None bUseSurfaceAsSnowfield; // 0x188(0x01)
	None bCanProne; // 0x189(0x01)
	None SlopeSpeedModifier; // 0x18c(0x04)
	None TerrainType; // 0x190(0x04)
	None ImpactAudioEvents; // 0x198(0x50)
	None ServerUpdateCameraInterval; // 0x2b28(0x04)
	None TimedCameraPostProcessDatas; // 0x2b50(0x10)
	None TimedCameraEffectDatas; // 0x2b60(0x10)
	None ConversationComponent; // 0x6f8(0x08)
	None QuestComponent; // 0x700(0x08)
	None SavedCharacterPawn; // 0xbc8(0x08)
	None OnDamagedCameraShake; // 0xe38(0x08)
	None OnDamagedADSCameraShake; // 0x1298(0x08)
	None ThrowingWeaponExplosionCameraShake; // 0xd98(0x08)
	None RedZoneExplosionCameraShake; // 0xbf8(0x08)
	None FragmentCloseExplosionCameraShakeScale; // 0xbb8(0x04)
	None FragmentMidExplosionCameraShakeScale; // 0x12cc(0x04)
	None FragmentFarExplosionCameraShakeScale; // 0x1328(0x04)
	None FragmentCloseExplosionDistance; // 0xcb0(0x04)
	None FragmentMidExplosionDistance; // 0x1350(0x04)
	None FragmentFarExplosionDistance; // 0xef8(0x04)
	None FragmentChangeStateDelayTime; // 0xcf0(0x04)
	None FragmentCloseExplosionSoundDistance; // 0x12d8(0x04)
	None FragmentMidExplosionSoundDistance; // 0xfac(0x04)
	None FragmentFarExplosionSoundDistance; // 0x1160(0x04)
	None FragmentCloseExplosionSoundTime; // 0xf50(0x04)
	None FragmentMidExplosionSoundTime; // 0xbbc(0x04)
	None FragmentFarExplosionSoundTime; // 0x1304(0x04)
	None bIsTeamSpectator; // 0xcc6(0x01)
	None SpectatorHUDClass; // 0xba8(0x08)
	None LoseWidgetShowDelay; // 0xb9c(0x04)
	None MatchEndSimpleResult; // 0x11e8(0xa8)
	None CurrentSpectatingMode; // 0xd40(0x01)
	None LastSpectatorTargetPawn; // 0x1388(0x08)
	None WatchingPCs; // 0x1318(0x10)
	None RadialDamageInfos; // 0xec0(0x10)
	None ItemRecipeTreeWidgetClass; // 0xee0(0x08)
	None Delegate_OnFinishMatchEndAnimation; // 0x708(0x10)
	None SpectatingPlayerHUD; // 0x1358(0x08)
	None TimerHandle_SetStateSpectator; // 0xe08(0x08)
	None PerkDeckPopup; // 0xda0(0x08)
	None OnResetTeamPlayersInfo; // 0x718(0x10)
	None ResetTeamPlayersInfo; // 0xd41(0x01)
	None ClientBlueZone; // 0xd00(0x08)
	None PP_BlueZone; // 0x10e8(0x08)
	None bInfiniteAmmo; // 0x12a4(0x01)
	None PlayerStateList; // 0xbd0(0x10)
	None DeathCamFocus; // 0x1290(0x08)
	None DeathCamTime; // 0x10e0(0x04)
	None bEnableLevelStreamimngDistanceScaleByZ; // 0x1109(0x01)
	None bUseLevelStreamimngPriorityByZ; // 0x10b0(0x01)
	None LevelStreamingPrioritiesByZ; // 0xd58(0x10)
	None MovePointList; // 0xee8(0x10)
	None TeleportPointList; // 0xce0(0x10)
	None bEnableHideGun; // 0x10c0(0x01)
	None bEnableDestroyGun; // 0xccc(0x01)
	None bHideActorMode; // 0x1378(0x01)
	None PingComponent; // 0xff0(0x08)
	None UseItemMenuList; // 0x1198(0x50)
	None HideObjectStack; // 0x1180(0x10)
	None AuthorizedRigidBodiesOnClient; // 0x10a0(0x10)
	None DeathCamClass; // 0xfc8(0x08)
	None SpawnedWinCam; // 0xd10(0x08)
	None SpawnedDeathCam; // 0x12a8(0x08)
	None SpawnedFieldViewCam; // 0x1100(0x08)
	None SpawnedResusciatedCam; // 0xcd0(0x08)
	None DelegatePayGoldOnChangeDeck; // 0xfd0(0x10)
	None DelegatePayGoldOnSelectDeck; // 0xe90(0x10)
	None DelegatePayGoldOnChangeDeckList; // 0xd88(0x10)
	None DelegateChoosePerkDeck; // 0xca0(0x10)
	None ChangeDeckBasePrice; // 0x1134(0x04)
	None ChangeDeckMultiflier; // 0xcfc(0x04)
	None MaxChangeDeckCount; // 0xc88(0x04)
	None SelectDeckPrice; // 0x1394(0x04)
	None MaxChangeDeckListCount; // 0x12a0(0x04)
	None DelegateAddLog; // 0x730(0x10)
	None AccountGold; // 0xe2c(0x04)
	None PaidAccountGold; // 0xd34(0x04)
	None DebugInfo; // 0xe00(0x08)
	None DelegateDataEventCharacte; // 0x8c8(0x10)
	None DelegateDataEventCharacteUidList; // 0x8d8(0x10)
	None DelegateOnKillOtherPlayer; // 0x8e8(0x10)
	None DelegateOnKnockDownOtherPlayer; // 0x8f8(0x10)
	None DelegateOnWhoKilledMe; // 0x908(0x10)
	None SoftCheatWidgetClass; // 0x1078(0x28)
	None CheatWidget; // 0xfc0(0x08)
	None SmartPingMenuDelayTime; // 0xd84(0x04)
	None HasSpawnBook; // 0xcc5(0x01)
	None SpawnBookLocation; // 0x1128(0x0c)
	None NameTooltips; // 0x1308(0x10)
	None AutoNameTooltipDistance; // 0xd44(0x04)
	None AutoNameTooltipSecond; // 0xcd8(0x04)
	None TimeHandle_ScreenCapture; // 0xdf8(0x08)
	None DuplicatedReconnectTimeout_TimerHandle; // 0x918(0x08)
	None RequestResuscitationTimeStamp; // 0x924(0x04)
	None bIsResuscitated; // 0x928(0x01)
	None Resuscitater; // 0x12e0(0x08)
	None TempResuscitater; // 0xff8(0x08)
	None TempResuscitatedTarget; // 0xfe0(0x08)
	None CurrentVictimPlayerState; // 0xd68(0x08)
	None SuspectController; // 0x1168(0x08)
	None SpawnedItemList; // 0xe40(0x50)
	None MinMaterialItemSearchDistance; // 0xe28(0x04)
	None MaxMaterialItemSearchDistance; // 0xba0(0x04)
	None RemoveMaterialItemDistance; // 0x12ec(0x04)
	None MaterialItemSearchShowCount; // 0x1074(0x04)
	None ReSearchWaitingTime; // 0xcc8(0x04)
	None MaterialItemPingLifeTime; // 0xcb4(0x04)
	None ImmediatelyRemovePing; // 0xbf4(0x01)
	None EquipItemMaterialItemAutorSearchTime; // 0x1164(0x04)
	None LastEquipItemLifeTime; // 0x114c(0x04)
	None IgnoreStartStateSearchMaterial; // 0xbb5(0x01)
	None SearchDelayTime; // 0x1390(0x04)
	None TimeHandle_MaterialSearchDelay; // 0xfe8(0x08)
	None TimeHandle_RemoveMaterialPing; // 0xed8(0x08)
	None TimeHandle_SearchMaterialPing; // 0x1380(0x08)
	None TimeHandle_CheckEquipItemMaterialItemAutorSearch; // 0xbe8(0x08)
	None TimeHandle_CheckLastEquipItemInit; // 0x1110(0x08)
	None LastEquipItem; // 0xcf4(0x08)
	None SelectRecipeItem; // 0xc8c(0x10)
	None bForceCheckSearchMaterialItems; // 0xefd(0x01)
	None DelegateSelectSearchMaterialItem; // 0x1118(0x10)
	None DelegateEnableMaterialSearch; // 0x10f0(0x10)
	None DelegateEnableExpertWeaponMaterialSearch; // 0xc68(0x10)
	None DelegateMaterialSearchNoti; // 0x1360(0x10)
	None DelegateShowWeightMap; // 0xb78(0x10)
	None DelegateInventoryState; // 0xb88(0x10)
	None PreSpectatorTargetPawn; // 0xe20(0x08)
	None NoResponseNetworkClass; // 0x1060(0x08)
	None SpawnedSupplyBoxList; // 0xda8(0x50)
	None SelectedPersonalSupplyBoxOwnerID; // 0x106c(0x04)
	None ShowUseBoostItemMenuDelayTime; // 0xb98(0x04)
	None bIgnoreInputCloseUI; // 0x1300(0x01)
	None CrosshairMgr; // 0x418(0x08)
	None LastTargetPawn; // 0x420(0x08)
	None PlayerInfos; // 0x428(0x10)
	None BattleRoyaleGameState; // 0x438(0x08)
	None BravoHotelGameState; // 0x440(0x08)
	None OnChangedPlayerInfosDelegate; // 0x450(0x10)
	None CurrentSkillRadius; // 0x46c(0x04)
	None bReplayOptionFireDirection; // 0x470(0x01)
	None bReplayOptionHitted; // 0x471(0x01)
	None bReplayOptionDeathPosition; // 0x472(0x01)
	None bReplayOptionPersonalSupplyBox; // 0x473(0x01)
	None bReplayOptionTransportDropBox; // 0x474(0x01)
	None OnToggleWidgetDelegate; // 0x478(0x10)
	None FireModeSound; // 0x490(0x08)
	None PlayerKillSound; // 0x498(0x08)
	None PlayerDuoKillSound; // 0x4a0(0x08)
	None LastPlayerInSquardKillSound; // 0x4a8(0x08)
	None LastPlayerInDuoKillSound; // 0x4b0(0x08)
	None PlayerAssistSound; // 0x4b8(0x08)
	None PlayerDiedSound; // 0x4c0(0x08)
	None RequestResuscitationEvent; // 0x4c8(0x08)
	None InventoryWidgetClass; // 0x4d0(0x08)
	None InventoryWidget; // 0x4d8(0x08)
	None SoftInventoryInfoWidgetClass; // 0x4e0(0x28)
	None InventoryWidget_Ori; // 0x508(0x08)
	None InventoryWidget_Web; // 0x510(0x08)
	None BravoHotelMainWidget; // 0x518(0x08)
	None SoftMainWidgetClass; // 0x520(0x28)
	None CustomMatchWidget; // 0x548(0x08)
	None MainWidgetEx; // 0x550(0x08)
	None MainWidgetExClass; // 0x558(0x08)
	None SoftMainWidgetExClass; // 0x560(0x28)
	None SpectatorWidget; // 0x588(0x08)
	None SpectatorWidgetClass; // 0x590(0x08)
	None SoftSpectatorWidgetClass; // 0x598(0x28)
	None ReplayWidget; // 0x5c0(0x08)
	None ReplayWidgetClass; // 0x5c8(0x08)
	None SoftReplayWidgetClass; // 0x5d0(0x28)
	None WorldMapWidget; // 0x5f8(0x08)
	None WorldMapWidgetClass; // 0x600(0x08)
	None SoftWorldMapWidgetClass; // 0x608(0x28)
	None SkillMapWidget; // 0x630(0x08)
	None SkillMapWidgetClass; // 0x638(0x08)
	None SoftSkillMapWidgetClass; // 0x640(0x28)
	None BlackMarketWidget; // 0x668(0x08)
	None MatchEndWidget; // 0x670(0x08)
	None MatchEndWidgetClass; // 0x678(0x08)
	None SoftMatchEndWidgetClass; // 0x680(0x28)
	None bEnableWorldmap; // 0x6f0(0x01)
	None bEnableMinimap; // 0x6f1(0x01)
	None SoftTestWidgetClass; // 0x6f8(0x28)
	None SoftWorldTeleportWidgetClass; // 0x720(0x28)
	None SoftReplayZoneClass; // 0x748(0x28)
	None SoftItemSpawnDebugWidgetClass; // 0x770(0x28)
	None SoftItemSpawnRateWidgetClass; // 0x798(0x28)
	None TestWidget; // 0x7c0(0x08)
	None SoftCustomMatchWidgetClass; // 0x7c8(0x28)
	None CinematicWidget; // 0x7f0(0x08)
	None CinematicWidgetClass; // 0x7f8(0x28)
	None MediaPlayerWidget; // 0x820(0x08)
	None MediaPlayerWidgetClass; // 0x828(0x28)
	None Canvas_Main; // 0x248(0x08)
	None RotationGroup; // 0x250(0x08)
	None Canvas_Replay; // 0x258(0x08)
	None IconSwitcher; // 0x260(0x08)
	None Text_PlayerNum; // 0x268(0x08)
	None Text_PlayerName; // 0x270(0x08)
	None Img_Disconnect; // 0x278(0x08)
	None Img_KnockDown; // 0x280(0x08)
	None Img_Alive; // 0x288(0x08)
	None Img_Death; // 0x290(0x08)
	None Img_Vehicle; // 0x298(0x08)
	None Img_Parachute; // 0x2a0(0x08)
	None Img_Critical; // 0x2a8(0x08)
	None Img_Sight; // 0x2b0(0x08)
	None Img_Arrow; // 0x2b8(0x08)
	None Img_BackRound; // 0x2c0(0x08)
	None Img_TargetCam; // 0x2c8(0x08)
	None Img_TargetCamDummy; // 0x2d0(0x08)
	None SizeBox_RequestResuscitation; // 0x2d8(0x08)
	None BT_UserName; // 0x2e0(0x08)
	None Anim_Bouncing; // 0x2e8(0x08)
	None PlayerStateRef; // 0x2f0(0x08)
	None TeamColorTableRef; // 0x2f8(0x08)
	None bIsFreeCam; // 0x300(0x01)
	None bIsReplaying; // 0x301(0x01)
	None bIsKillCam; // 0x302(0x01)
	None bIsInNetCullDistance; // 0x303(0x01)
	None bIsRequestResuscitation; // 0x304(0x01)
	None SizeBox_main; // 0x248(0x08)
	None Image_bg; // 0x250(0x08)
	None MainProgressBar; // 0x258(0x08)
	None CureLimitProgressBar; // 0x260(0x08)
	None TargetProgressBar; // 0x268(0x08)
	None BeforeProgressBar; // 0x270(0x08)
	None ShortTimeProgressBar; // 0x278(0x08)
	None DangerHp; // 0x280(0x08)
	None Anim_Increase; // 0x288(0x08)
	None Anim_AdditionalHP; // 0x290(0x08)
	None DefaultSlotSprite; // 0x298(0x08)
	None FirstSlotSprite; // 0x2a0(0x08)
	None LastSlotSprite; // 0x2a8(0x08)
	None MaxHealth; // 0x2b0(0x04)
	None bIsKnockOutMode; // 0x2b4(0x01)
	None TargetPawn; // 0x248(0x08)
	None CurrentHealthIncreaseSpeed; // 0x250(0x04)
	None CurrentHealthDecreaseSpeed; // 0x254(0x04)
	None BeforeHealthInterpSpeedRate; // 0x258(0x04)
	None BeforeHealthTimerDelayRate; // 0x25c(0x04)
	None HorizontalBox_Main; // 0x2a0(0x08)
	None T_CurrentHealth; // 0x2a8(0x08)
	None T_MaxHealth; // 0x2b0(0x08)
	None LastMaxHealth; // 0x2b8(0x04)
	None HealthPerSlot; // 0x2bc(0x04)
	None CureLimitPercent; // 0x2c0(0x04)
	None AnimAdditionalHealth; // 0x2c4(0x04)
	None bIsDangerHP; // 0x2c8(0x01)
	None PlayerInfoProgressSlotWidgetClass; // 0x2d0(0x08)
	None Delegate_OnPlayerInfoSlotSizeChanged; // 0x2d8(0x10)
	None WidgetSwitcher_Lung; // 0x248(0x08)
	None ProgressBar_Lung; // 0x250(0x08)
	None BuffListPanel; // 0x2b0(0x08)
	None GameBuffSlot_Boost; // 0x2b8(0x08)
	None UID; // 0xc0(0x08)
	None UniquePlayerId; // 0xc8(0x04)
	None SeasonInfo; // 0xcc(0x18)
	None CurrentPCTypeID; // 0xe4(0x04)
	None TeamIndex; // 0xe8(0x01)
	None TeamSize; // 0xe9(0x01)
	None TeamPlayerIconIndex; // 0xec(0x04)
	None CurrentPerkDeckInfo; // 0xf0(0x70)
	None SupplyInfoFromServer; // 0x160(0x48)
	None SupplyWeaponInfo; // 0x1a8(0x30)
	None bIsSuspiciousUser; // 0x1d8(0x01)
	None NewbieData; // 0x1e0(0x20)
	None bAlive; // 0xc0(0x01)
	None InOuterArea; // 0xc1(0x01)
	None kills; // 0xc2(0x02)
	None assists; // 0xc4(0x02)
	None Deaths; // 0xc6(0x02)
	None Revives; // 0xc8(0x02)
	None Resuscitates; // 0xca(0x02)
	None CurrentPerkClassLevel; // 0xcc(0x04)
	None WatchedCount; // 0xd0(0x01)
	None AppearanceInfo; // 0xc0(0x14)
	None TimerHandle_ReplicatedAppearanceInfo; // 0xd8(0x08)
	None bCriticalTime; // 0x418(0x01)
	None MatchingTeamID; // 0x420(0x10)
	None MatchingTeamIdHash; // 0x430(0x04)
	None MatchableCountByDS; // 0x434(0x01)
	None PlayerSessionId; // 0x438(0x10)
	None LoginMemberIndex; // 0x458(0x04)
	None TeamPlayers; // 0x460(0x10)
	None ReplicatedPlayerInfo; // 0x598(0x08)
	None ReplicatedPlayStat; // 0x5a0(0x08)
	None ReplicatedAppearanceInfo; // 0x5a8(0x08)
	None OnChangePlayerState; // 0x5b0(0x10)
	None OwnerCharacter; // 0x5c8(0x08)
	None InNmPerkVechicleInfo; // 0x5d0(0x28)
	None SubState; // 0x5f8(0x08)
	None DummyInfo; // 0x600(0x58)
	None GamePlayStatistics; // 0x658(0x08)
	None CurrentState; // 0x661(0x01)
	None bIsTalking; // 0x67a(0x01)
	None PersonalSupplyBoxAdditionalItemList; // 0x680(0x10)
	None MaterialItemPingIndex; // 0x74c(0x04)
	None MaterialPingList; // 0x750(0x50)
	None LocalPingIndex; // 0x7a0(0x04)
	None LocalPingList; // 0x7a8(0x50)
	None ExpertWeaponPing; // 0x7f8(0x28)
	None PingInfo; // 0x310(0x38)
	None PingLocalLocation; // 0x348(0x0c)
	None RoutePingInfo; // 0x358(0x10)
	None Location; // 0x380(0x0c)
	None RotationYaw; // 0x38c(0x02)
	None Health; // 0x390(0x04)
	None bIsDisconnect; // 0x394(0x01)
	None bIsRetired; // 0x395(0x01)
	None MaxHealth; // 0x398(0x04)
	None CurrentState; // 0x39c(0x01)
	None CharacterState; // 0x39d(0x01)
	None FireCount; // 0x3a0(0x04)
	None CurrentEquipWeaponID; // 0x3a4(0x04)
	None bIsFireWeapon; // 0x3a8(0x01)
	None RemainGoldentime; // 0x3ac(0x04)
	None MaxGoldentime; // 0x3b0(0x04)
	None bRequestResuscitation; // 0x3b4(0x01)
	None VoiceTeamTalk; // 0x3b5(0x01)
	None VoiceAreaTalk; // 0x3b6(0x01)
	None DefaultPoolingActor; // 0xb0(0x50)
	None ActorPoolInfos; // 0x100(0x50)
	None WidgetLayer; // 0x30(0x10)
	None NetworkDelayPopupWidgetRef; // 0x40(0x08)
	None SphereCollision; // 0x310(0x08)
	None Projectile; // 0x318(0x08)
	None RealisticProjectile; // 0x320(0x08)
	None BulletEffect; // 0x328(0x08)
	None TrailEffectInWater; // 0x330(0x08)
	None Damage; // 0x338(0x04)
	None StartLocation; // 0x33c(0x0c)
	None bInWater; // 0x348(0x01)
	None TrailEffectsList; // 0x350(0x50)
	None BulletEffectsList; // 0x3a0(0x50)
	None StopEffectsList; // 0x3f0(0x50)
	None bSpawnTrailEffect; // 0x440(0x01)
	None TrailNames; // 0x448(0x10)
	None TrailLocation; // 0x458(0x0c)
	None TrailRotation; // 0x464(0x0c)
	None bChangeBulletEffect; // 0x470(0x01)
	None BulletEffectName; // 0x478(0x10)
	None StopEffectNames; // 0x488(0x10)
	None AuthorityController; // 0x498(0x08)
	None BeginOverlapHitResults; // 0x4a8(0x10)
	None HitActors; // 0x4c0(0x10)
	None ImpulsePowerRate; // 0x4d0(0x04)
	None ProjectileDamageType; // 0x4d8(0x08)
	None FlybyAudioEvent; // 0x4e0(0x08)
	None BulletSpawnLocation; // 0x4e8(0x0c)
	None FlybyTargetActor; // 0x4f8(0x08)
	None bStopUpdateFlyby; // 0x500(0x01)
	None TimerHandle_UpdateFlyby; // 0x508(0x08)
	None TargetPawn; // 0x518(0x08)
	None bIgnoreOwner; // 0x310(0x01)
	None Damage; // 0x314(0x04)
	None MinimumDamage; // 0x318(0x04)
	None DamageFalloff; // 0x31c(0x04)
	None ImpulseStrength; // 0x320(0x04)
	None bCanApplyImpulseByBounce; // 0x324(0x01)
	None bOverrideDropSpeed; // 0x325(0x01)
	None DropSpeed; // 0x328(0x04)
	None HitDamageTypeClass; // 0x330(0x08)
	None DamageTypeClass; // 0x338(0x08)
	None SphereCollision; // 0x340(0x08)
	None Projectile; // 0x348(0x08)
	None TrailParticleComponent; // 0x350(0x08)
	None ProjectileMovement; // 0x358(0x08)
	None TimerHandle_GrenadeExplosion; // 0x360(0x08)
	None GrenadeExplosionEffectScale; // 0x368(0x0c)
	None bUseActorRotationGrenadeExplosionEffect; // 0x374(0x01)
	None GrenadeExplosionEffect; // 0x378(0x08)
	None GrenadeExplosionEffectInWater; // 0x380(0x08)
	None TrailEffectInWater; // 0x388(0x08)
	None SuperTrailEffect; // 0x390(0x08)
	None NormalTrailEffect; // 0x398(0x08)
	None bNeedToDeactiveTrailParticle; // 0x3a0(0x01)
	None SuperTrailViewDistance; // 0x3a4(0x04)
	None ShiningEffectComponent; // 0x3a8(0x08)
	None ShiningEffect; // 0x3b0(0x08)
	None ShiningEffectViewDistance; // 0x3b8(0x04)
	None GrenadeTrailEffectInWater; // 0x3c0(0x08)
	None AkAudioComponent; // 0x3c8(0x08)
	None ExplodeEvent; // 0x3d0(0x08)
	None ExplodeEventInWater; // 0x3d8(0x08)
	None BoundEvent; // 0x3e0(0x08)
	None RemainExplodeTime; // 0x3e8(0x04)
	None InsideEffectRange; // 0x3ec(0x04)
	None EffectRange; // 0x3f0(0x04)
	None TriggerRange; // 0x3f4(0x04)
	None LoopSoundHandle; // 0x3f8(0x04)
	None bEnableActiveGrenade; // 0x3fc(0x01)
	None bLocalSameTeam; // 0x3fd(0x01)
	None OverlapCharacters; // 0x400(0x10)
	None DotDamagedActors; // 0x410(0x10)
	None GrenadeWeaponName; // 0x420(0x08)
	None HitDamage; // 0x428(0x04)
	None HitDamageToCharacter; // 0x42c(0x04)
	None PenetrateDamage; // 0x430(0x04)
	None bInWater; // 0x434(0x01)
	None BounceCount; // 0x438(0x04)
	None bUseCookingTime; // 0x43c(0x01)
	None bUseBoobyTrap; // 0x43d(0x01)
	None bActiveByHit; // 0x43e(0x01)
	None bNeedServerDamage; // 0x43f(0x01)
	None BoobyTrapDelayTime; // 0x440(0x04)
	None InitialSpeed; // 0x444(0x04)
	None InitialVelocity; // 0x448(0x0c)
	None bUseRotaionProjectileMesh; // 0x454(0x01)
	None RotationSpeed; // 0x458(0x0c)
	None bIsStopSimulate; // 0x464(0x01)
	None GuidedLocation; // 0x468(0x0c)
	None TimerHandle_BoobyTrap; // 0x478(0x08)
	None ProjectileGrenadeState; // 0x480(0x01)
	None bUseActiveTriggerActorLocation; // 0x481(0x01)
	None TriggerActor; // 0x488(0x08)
	None bApplyShortRangeHitDamage; // 0x4a8(0x01)
	None ShortRangeHitDamageDistance; // 0x4ac(0x04)
	None ShortRangeHitDamageMultiply; // 0x4b0(0x04)
	None WeaponId; // 0x4b8(0x08)
	None ItemId; // 0x4c0(0x08)
	None bMarkActiveGrenade; // 0x4c8(0x01)
	None DamageAffectedByObstacle; // 0x578(0x01)
	None ExplosionEffectRange; // 0x57c(0x04)
	None ExplosionCameraShakeScaleMin; // 0x580(0x04)
	None ExplosionCameraShakeScaleMax; // 0x584(0x04)
	None ExplosionDeafenDurationMin; // 0x588(0x04)
	None ExplosionDeafenDutationMax; // 0x58c(0x04)
	None ExplosionDeafenDistanceLevelClose; // 0x590(0x04)
	None ExplosionDeafenDistanceLevelMid; // 0x594(0x04)
	None ExplosionCameraShake; // 0x598(0x08)
	None ConditionedWeaponInfo; // 0x5a0(0x20)
	None DecalRotation; // 0x5c0(0x0c)
	None AllowedDamageType; // 0x5e0(0x10)
	None Health; // 0x5f0(0x04)
	None OnExplosion; // 0x5f8(0x10)
	None OnActiveBoobyTrapDelegate; // 0x608(0x10)
	None TimerHandle_CheckWarningVoiceEvent; // 0x618(0x08)
	None ExplosionOriginDeltaLocation; // 0x620(0x0c)
	None SimulationActorClass; // 0x638(0x08)
	None bAttachAbsolutely; // 0x640(0x01)
	None FlybyEvent; // 0x648(0x08)
	None FlybySoundHandle; // 0x650(0x04)
	None OverlappedVehicles; // 0x4a8(0x50)
	None FlameParticle; // 0x4f8(0x08)
	None FlameEndParticle; // 0x500(0x08)
	None AkAudioComponent; // 0x508(0x08)
	None FireCellClass; // 0x510(0x08)
	None LifeTime; // 0x518(0x04)
	None DamageTime; // 0x51c(0x04)
	None FireDamage; // 0x520(0x04)
	None FireShrinkTime; // 0x524(0x04)
	None FireCellSpawnTime; // 0x528(0x04)
	None FirePropagationRange; // 0x52c(0x04)
	None FirePropagationLevelMax; // 0x530(0x04)
	None FirePropagationLevelWidth; // 0x534(0x04)
	None FirePropagationDivideAnglePerLevel; // 0x538(0x10)
	None FlybyEvent; // 0x548(0x08)
	None FlybySoundHandle; // 0x550(0x04)
	None WeaponName; // 0x554(0x08)
	None NewWeaponName; // 0x560(0x10)
	None LandHeight; // 0x638(0x04)
	None bUsingActiveGrenadeByTick; // 0x63c(0x01)
	None DamageCollisionType; // 0x63d(0x01)
	None bIgnoreCollision; // 0x63e(0x01)
	None ExplosionGroundDecalMaterial; // 0x650(0x08)
	None ExplosionGroundDecalSize; // 0x658(0x0c)
	None ExplosionGroundDecalComponent; // 0x668(0x08)
	None AuthorController; // 0x670(0x08)
	None ExplosionGroundDecalMaterial; // 0x638(0x08)
	None ExplosionGroundDecalSize; // 0x640(0x0c)
	None ExplosionGroundDecalComponent; // 0x650(0x08)
	None ActiveDelayTime; // 0x660(0x04)
	None TrapEffect; // 0x668(0x08)
	None TrapTriggerEffect; // 0x670(0x08)
	None TrapDestoryEffect; // 0x678(0x08)
	None TrapLoopStartEvent; // 0x680(0x08)
	None TrapLoopStopEvent; // 0x688(0x08)
	None TrapTriggerEvent; // 0x690(0x08)
	None AttachEvent; // 0x698(0x08)
	None TrapLoopSoundHandle; // 0x6a0(0x04)
	None AttachedComponent; // 0x6a8(0x08)
	None TimerHandle_CheckAttachedComponent; // 0x6b0(0x08)
	None HitItem; // 0x6b8(0x04)
	None ExplosionOriginDeltaLocationUp; // 0x6bc(0x04)
	None ExplosionGroundDecalMaterial; // 0x638(0x08)
	None ExplosionGroundDecalSize; // 0x640(0x0c)
	None ExplosionGroundDecalComponent; // 0x650(0x08)
	None AngleCurve; // 0x638(0x08)
	None TimeCurve; // 0x640(0x08)
	None PostProcessFlashBangClass; // 0x648(0x08)
	None PostProcessDurationTime; // 0x650(0x04)
	None PostProcessRateTime; // 0x654(0x04)
	None BlindCharacters; // 0x658(0x10)
	None TimeHandler_ActiveFlashBang; // 0x668(0x08)
	None BoobyTrapEffect; // 0x680(0x08)
	None BoobyTrapTriggerEffect; // 0x688(0x08)
	None BoobyTrapDestoryEffect; // 0x690(0x08)
	None BoobyTrapLoopStartEvent; // 0x698(0x08)
	None BoobyTrapLoopStopEvent; // 0x6a0(0x08)
	None BoobyTrapTriggerEvent; // 0x6a8(0x08)
	None BoobyTrapLoopSoundHandle; // 0x6b0(0x04)
	None ExplosionGroundDecalMaterial; // 0x638(0x08)
	None ExplosionGroundDecalSize; // 0x640(0x0c)
	None ExplosionGroundDecalComponent; // 0x650(0x08)
	None GroundDecalDynamicMaterial; // 0x658(0x08)
	None FlybyEvent; // 0x668(0x08)
	None FlybySoundHandle; // 0x670(0x04)
	None FireStartSound; // 0x638(0x08)
	None FireEndSound; // 0x640(0x08)
	None FireLoopSoundHandle; // 0x648(0x04)
	None TimeHandle_EndFirewallSound; // 0x650(0x08)
	None MolotovFireTrailParticle; // 0x658(0x08)
	None BoobyTrapEffect; // 0x660(0x08)
	None BoobyTrapTriggerEffect; // 0x668(0x08)
	None BoobyTrapDestoryEffect; // 0x670(0x08)
	None BoobyTrapLoopStartEvent; // 0x678(0x08)
	None BoobyTrapLoopStopEvent; // 0x680(0x08)
	None BoobyTrapTriggerEvent; // 0x688(0x08)
	None BoobyTrapLoopSoundHandle; // 0x690(0x04)
	None TimeHandler_ActiveMolotovCocktail; // 0x698(0x08)
	None FireCellClass; // 0x6a8(0x08)
	None MolotovFireCells; // 0x6b0(0x10)
	None TimeHandle_SpreadingMolotov; // 0x6c8(0x08)
	None TimeHandle_ShrinkingMolotov; // 0x6d0(0x08)
	None FireLocations; // 0x6d8(0x10)
	None FirePropagations; // 0x6e8(0x10)
	None FireSpreadFirstDelayTime; // 0x778(0x04)
	None FireSpreadTime; // 0x77c(0x04)
	None FireShrinkTime; // 0x780(0x04)
	None bEnableFireWall; // 0x7c8(0x01)
	None FireWallCellCount; // 0x7cc(0x04)
	None FireWallCellWidth; // 0x7d0(0x04)
	None FirePropagationLevelMax; // 0x7d4(0x04)
	None FirePropagationLevelWidth; // 0x7d8(0x04)
	None FirePropagationDivideAnglePerLevel; // 0x7e0(0x10)
	None ExplosionGroundDecalMaterial; // 0x638(0x08)
	None ExplosionGroundDecalSize; // 0x640(0x0c)
	None FallingEvent; // 0x650(0x08)
	None FallingSoundDelayTime; // 0x658(0x04)
	None ExplosionGroundDecalComponent; // 0x660(0x08)
	None LandHeight; // 0x680(0x04)
	None AuthorController; // 0x688(0x08)
	None SmokeTrailEffectComponent; // 0x638(0x08)
	None SpawnedSmokeFxComponent; // 0x640(0x08)
	None SmokeLifeTime; // 0x648(0x04)
	None SmokeTranslucencySortPriority; // 0x64c(0x04)
	None SmokeStartEvent; // 0x650(0x08)
	None SmokeEndEvent; // 0x658(0x08)
	None SeeThroughSmokeOpacity; // 0x660(0x04)
	None OpacityInSpeed; // 0x664(0x04)
	None OpacityOutSpeed; // 0x668(0x04)
	None SmokeCheckTime; // 0x66c(0x04)
	None PoisonCheckTime; // 0x670(0x04)
	None PoisonCheckRange; // 0x674(0x04)
	None SmokeDebuffs; // 0x678(0x10)
	None bActiveSmokeGrenade; // 0x688(0x01)
	None bActiveSmokeEffect; // 0x689(0x01)
	None SpawnLocations; // 0x690(0x10)
	None AICharacters; // 0x7a8(0x10)
	None FireRoot; // 0x310(0x08)
	None FireEffect; // 0x318(0x08)
	None LifeTime; // 0x320(0x04)
	None DamagedCharacters; // 0x328(0x10)
	None Attacker; // 0x338(0x08)
	None OwnerProjectileGrenade; // 0x340(0x08)
	None DamageTime; // 0x348(0x04)
	None FireDamage; // 0x34c(0x04)
	None LimitRange; // 0x350(0x04)
	None bIgnoreAttacker; // 0x354(0x01)
	None HitComponent; // 0x358(0x08)
	None TimerHandle_CheckHitComponent; // 0x360(0x08)
	None TimeHandle_LifeTime; // 0x368(0x08)
	None TimeHandle_CheckDistanceToPlayer; // 0x370(0x08)
	None DamageTypeClass; // 0x378(0x08)
	None LocalPlayingCharacter; // 0x384(0x08)
	None SeasonQuestInfos; // 0xb0(0x10)
	None OnScenarioQuestStartDelegate; // 0xc0(0x10)
	None OnScenarioQuestUpdateDelegate; // 0xd0(0x10)
	None OnScenarioQuestStopDelegate; // 0xe0(0x10)
	None ScenarioQuestInfo; // 0xf0(0x30)
	None ScenarioWidgetClass; // 0x138(0x08)
	None CurrentScenarioWidget; // 0x140(0x08)
	None AddQuestEventDelegates; // 0xa8(0x50)
	None AttachmentComponent; // 0x2130(0x08)
	None MainWidgetRef; // 0x1fb8(0x08)
	None bLoopedFireAnim; // 0x1d9c(0x01)
	None FireAnim; // 0x2250(0x10)
	None FireWeaponAnim; // 0x1f58(0x10)
	None BoltActionPlayerAnim; // 0x22c0(0x10)
	None BoltActionWeaponAnim; // 0x1ea8(0x10)
	None BoltActionPronePlayerAnim; // 0x21d8(0x10)
	None BoltActionProneWeaponAnim; // 0x1c18(0x10)
	None bIsEquippingVerticalgrip; // 0x1c28(0x01)
	None JointTargetLocationL; // 0x2280(0x0c)
	None JointTargetLocationR; // 0x2100(0x0c)
	None EffectorLocationR; // 0x2148(0x0c)
	None DeltaCollideHandIKDistance; // 0x2168(0x04)
	None bAttachToCamera; // 0x2080(0x01)
	None FiringCountToLoop; // 0x2268(0x04)
	None FireSounds1P; // 0x1da8(0x20)
	None FireSounds3P; // 0x2178(0x20)
	None NoAmmoEvent; // 0x2170(0x08)
	None bIsADS; // 0x1e70(0x01)
	None bIsKeepingADS_WhileBoltAction; // 0x2070(0x01)
	None bIsGatlingWeapon; // 0x2298(0x01)
	None DamgeCorrectCurveByVelocity; // 0x2078(0x08)
	None MuzzleEffectComponent; // 0x1c38(0x08)
	None OverrideMuzzleFlashList; // 0x1ec8(0x50)
	None OverrideMuzzleSmokeList; // 0x2088(0x50)
	None CurrentOverrideMuzzleFlash_NoAttach; // 0x2118(0x08)
	None CurrentOverrideMuzzleSmoke_NoAttach; // 0x1de8(0x08)
	None ShellCasingArrows; // 0x1e60(0x10)
	None FireLoopSoundHandle; // 0x1c14(0x04)
	None WarmupPlayingHandle; // 0x2158(0x04)
	None BulletParticleSpawnArrow; // 0x2160(0x08)
	None bSpawnBulletParticleOnFire; // 0x1c68(0x01)
	None RecoilComponent; // 0x22b0(0x08)
	None ProjectileClass; // 0x1dd0(0x08)
	None bServerShot; // 0x1da0(0x01)
	None RecoilCurve; // 0x1f18(0x08)
	None DamageDistanceCurve; // 0x1f40(0x08)
	None SpreadScaleFactorsOnDefault; // 0x1c70(0x10)
	None SpreadScaleFactorsOnFiring; // 0x1e90(0x10)
	None FireSocketName; // 0x1f34(0x08)
	None WeaponRecoilType; // 0x1e58(0x01)
	None ZeroPointAngles; // 0x21c8(0x10)
	None DefaultZeroingDistance; // 0x2138(0x10)
	None ProjectileRandomSeed; // 0x21b4(0x04)
	None IncendiaryInfo; // 0x2238(0x14)
	None SpawnedFireCells; // 0x1cd8(0x10)
	None ExplosionInfo; // 0x20dc(0x10)
	None bCanSkipSpawnProjectile; // 0x1e5a(0x01)
	None CurrentZeroPointIndex; // 0x21a0(0x04)
	None bIsColliding; // 0x2154(0x01)
	None bIsADSColliding; // 0x1c50(0x01)
	None bIsAimingDownside; // 0x1c10(0x01)
	None CollideAlpha; // 0x229c(0x04)
	None CollideTraceLength; // 0x1f94(0x04)
	None CollideTraceStartDelta; // 0x1fa0(0x0c)
	None CrouchCollideTraceStartDelta; // 0x1f6c(0x0c)
	None ProneCollideTraceStartDelta; // 0x2120(0x0c)
	None bDrawCollideTraceSphereForDebug; // 0x1ec0(0x01)
	None HorizontalRecoilGetter; // 0x2068(0x08)
	None VerticalRecoilGetter; // 0x2198(0x08)
	None SwayGetter; // 0x1c48(0x08)
	None AccuracyGetter; // 0x21c0(0x08)
	None FireModePlayerAnim; // 0x1df8(0x50)
	None FireModeWeaponAnim; // 0x2010(0x50)
	None bWantsToFire; // 0x1d89(0x01)
	None bIsFiring; // 0x1ea0(0x01)
	None bPendingReload; // 0x1dd8(0x01)
	None bPendingBoltAction; // 0x1e59(0x01)
	None bPendingBurstFire; // 0x1f48(0x01)
	None CurrentState; // 0x1e89(0x01)
	None FireMode; // 0x1d21(0x01)
	None bSpawnTrailEffect; // 0x21b8(0x01)
	None TrailEffectName; // 0x1cf0(0x10)
	None bSpawnAutoAimTrailEffect; // 0x1d8a(0x01)
	None bAutoAim; // 0x1ced(0x01)
	None bIsNeedBoltAction; // 0x20d8(0x01)
	None BoltActionDelayTime; // 0x1f90(0x04)
	None AutoReloadTimeStamp; // 0x1f30(0x04)
	None bIsOneByOneReloading; // 0x1dc8(0x01)
	None FPSK_DeltaSocketLocation; // 0x1d78(0x0c)
	None FPSK_DeltaSocketRotation; // 0x22d4(0x0c)
	None OnAmmoReloadedDelegate; // 0x1f20(0x10)
	None OnReloadDelegate; // 0x22a0(0x10)
	None OnFinishSimulateReload; // 0x1c58(0x10)
	None OnFinishSimulateBoltAction; // 0x20f0(0x10)
	None OnStartSimulateFire; // 0x1d08(0x10)
	None OnEndSimulateFire; // 0x1f78(0x10)
	None bUseOverrideReloadMessage; // 0x1c29(0x01)
	None OverrideReloadSuccessMessageTableIndex; // 0x1c40(0x04)
	None OverrideReloadFailMessageTableIndex; // 0x1c2c(0x04)
	None WarmupTime; // 0x1f8c(0x04)
	None bIsHeatScanActive; // 0x1d88(0x01)
	None bWarmingUp; // 0x1d18(0x01)
	None bReady; // 0x1e88(0x01)
	None OwningWeaponRef; // 0xb0(0x08)
	None CharacterRef; // 0xb8(0x08)
	None GameStateRef; // 0xc0(0x08)
	None DeltaTime; // 0xc8(0x04)
	None RecoilLocation; // 0xcc(0x0c)
	None RecoilRotation; // 0xd8(0x0c)
	None BackRecoilLocation; // 0xe4(0x04)
	None VerticalRecoilLocation; // 0xe8(0x04)
	None HorizonRecoilLocation; // 0xec(0x04)
	None VerticalRecoilRotation; // 0xf0(0x04)
	None HorizonRecoilRotation; // 0xf4(0x04)
	None bIsOnHold; // 0xf8(0x01)
	None bNeedToInterp_BackRecoilLocation; // 0xf9(0x01)
	None Timeline_BackRecoilLocation; // 0x100(0x98)
	None bNeedToInterp_VerticalRecoilLocation; // 0x198(0x01)
	None bNeedToInterp_VerticalRecoilRotation; // 0x199(0x01)
	None Timeline_VerticalRecoilLocation; // 0x1a0(0x98)
	None Timeline_VerticalRecoilRotation; // 0x238(0x98)
	None bIsLeftSideRecoil; // 0x2d0(0x01)
	None bNeedToInterp_HorizonRecoilLocation; // 0x2d1(0x01)
	None bNeedToInterp_HorizonRecoilRotation; // 0x2d2(0x01)
	None Timeline_HorizonRecoilLocation; // 0x2d8(0x98)
	None Timeline_HorizonRecoilRotation; // 0x370(0x98)
	None BombData; // 0x310(0x40)
	None ResetAndStart; // 0x350(0x01)
	None RemainingWarningTime; // 0x354(0x04)
	None CurrentRange; // 0x358(0x04)
	None RemainingBombing; // 0x35c(0x04)
	None AkAudioComponent; // 0x370(0x08)
	None StartAudioEvent; // 0x378(0x08)
	None EndAudioEvent; // 0x380(0x08)
	None pBottonInfoWidget; // 0x388(0x08)
	None pTopInfoWidget; // 0x390(0x08)
	None Usable; // 0x310(0x01)
	None TableRedZoneID; // 0x314(0x08)
	None DefaultRedZoneData; // 0x320(0x58)
	None ArrayRedZoneData; // 0x378(0x10)
	None BeginPhase; // 0x388(0x04)
	None EndPhase; // 0x38c(0x04)
	None CurrentRedZone; // 0x3f0(0x08)
	None TotalPages; // 0x248(0x04)
	None CurrentPage; // 0x24c(0x04)
	None PageSize; // 0x250(0x04)
	None TotalReplays; // 0x254(0x04)
	None ReplaysToKeep; // 0x258(0x04)
	None PlayerState; // 0x250(0x08)
	None VBPlayerList; // 0x258(0x08)
	None ReplayController; // 0x250(0x08)
	None PlayerState; // 0x258(0x08)
	None playerName; // 0x260(0x10)
	None ReplayController; // 0x248(0x08)
	None SB_PlayerList; // 0x250(0x08)
	None PlayerListSortType; // 0x258(0x01)
	None PlayerListItemArray; // 0x260(0x10)
	None PlayerListGroupMap; // 0x270(0x50)
	None PlayerListGroupArrayForSort; // 0x2c0(0x10)
	None ReplayController; // 0x248(0x08)
	None KillEvent; // 0x250(0x30)
	None CurrentTimeMS; // 0x248(0x04)
	None TotalTimeMS; // 0x24c(0x04)
	None SliderValue; // 0x250(0x04)
	None bIsCapturedSlider; // 0x254(0x01)
	None NormalizedMousePosInX; // 0x258(0x04)
	None ToolTipDefaultPosition; // 0x25c(0x08)
	None ReplayController; // 0x268(0x08)
	None TextReplaySpeed; // 0x270(0x18)
	None TimelineScaleDelta; // 0x288(0x04)
	None TimelineMaxScale; // 0x28c(0x04)
	None TimelineScale; // 0x290(0x04)
	None KillEventMarkers; // 0x298(0x10)
	None KnockoutEventMarkers; // 0x2a8(0x10)
	None ResuscitatedEventMarkers; // 0x2b8(0x10)
	None ReportedEventMarkers; // 0x2c8(0x10)
	None bShowKillChkBox; // 0x2d8(0x01)
	None bShowMyKillChkBox; // 0x2d9(0x01)
	None bShowKnockChkBox; // 0x2da(0x01)
	None bShowMyKnockChkBox; // 0x2db(0x01)
	None bShowResusChkBox; // 0x2dc(0x01)
	None bShowMyResusChkBox; // 0x2dd(0x01)
	None MK3DKillEvents; // 0x2e0(0x10)
	None MK3DKnockoutEvents; // 0x2f0(0x10)
	None MK3DResuscitatedEvents; // 0x300(0x10)
	None MK3DReportedEvents; // 0x310(0x10)
	None CurrWorldContext; // 0x368(0x08)
	None ConfirmButton; // 0x248(0x08)
	None ConfirmButton; // 0x248(0x08)
	None CancelButton; // 0x250(0x08)
	None ReportButton; // 0x248(0x08)
	None CancelButton; // 0x250(0x08)
	None SelectedUserNickName; // 0x258(0x08)
	None ReportButton; // 0x248(0x08)
	None CancelButton; // 0x250(0x08)
	None SelectedUserNickName; // 0x258(0x08)
	None RotorActor; // 0x310(0x08)
	None RotorSpeed; // 0x318(0x04)
	None TickEnableDistance; // 0x31c(0x04)
	None OwnerActor; // 0x28(0x08)
	None bActiveOnStart; // 0x338(0x01)
	None Finished; // 0x28(0x10)
	None StartScenarioClass; // 0xb0(0x08)
	None CurrentScenario; // 0xb8(0x08)
	None TimeHandle_ForceStart; // 0x118(0x08)
	None TickRate; // 0x938(0x04)
	None DefaultSightViewRatio; // 0x30(0x08)
	None HoloSightViewRatio; // 0x38(0x08)
	None ReddotViewRatio; // 0x40(0x08)
	None DigitalViewRatio; // 0x48(0x08)
	None X2ViewRatio; // 0x50(0x08)
	None X4ViewRatio; // 0x58(0x08)
	None X8ViewRatio; // 0x60(0x08)
	None X15ViewRatio; // 0x68(0x08)
	None OnSeasonChangedSubTabDelegate; // 0x30(0x10)
	None DelegateShowInfo; // 0x248(0x10)
	None DelegateChangeValue; // 0x258(0x10)
	None DelegateChangeValueDirect; // 0x268(0x10)
	None DelegateChangeKeyValue; // 0x278(0x10)
	None DelegateButtonClick; // 0x288(0x10)
	None ParentWidget; // 0x298(0x08)
	None ActionName; // 0x2a0(0x08)
	None AxisActionName; // 0x2a8(0x08)
	None AxisScale; // 0x2b0(0x04)
	None SettingData; // 0x2b8(0x88)
	None SettingType; // 0x340(0x10)
	None CurValue; // 0x350(0x04)
	None OrgValue; // 0x354(0x04)
	None OrgKeyInfo; // 0x358(0x28)
	None CurKeyInfo; // 0x380(0x28)
	None SubOrgKeyInfo; // 0x3a8(0x28)
	None SubCurKeyInfo; // 0x3d0(0x28)
	None OrgAxisKeyInfo; // 0x3f8(0x30)
	None CurAxisKeyInfo; // 0x428(0x30)
	None SubOrgAxisKeyInfo; // 0x458(0x30)
	None SubCurAxisKeyInfo; // 0x488(0x30)
	None SettingWidget; // 0x4b8(0x08)
	None EnableKeyInputState; // 0x4c0(0x04)
	None DelegateKeyChangedNotiMessage; // 0x4c8(0x10)
	None DelegateChangeInput; // 0x4d8(0x10)
	None BackupSlots; // 0x298(0x10)
	None SettingList; // 0x2b0(0x50)
	None ChangeSettingList; // 0x300(0x50)
	None ChangeSettingKeyList; // 0x350(0x50)
	None SubList; // 0x3a0(0x10)
	None SlotList; // 0x3b0(0x10)
	None ChangingTotalGraphic; // 0x3c0(0x01)
	None IsInitState; // 0x3c1(0x01)
	None SelectedTyp; // 0x3c2(0x01)
	None ShellCasingClass; // 0x4c8(0x08)
	None SpawnPowerMin; // 0x4d0(0x04)
	None SpawnPowerMax; // 0x4d4(0x04)
	None EjectAngleMin; // 0x4d8(0x04)
	None EjectAngleMax; // 0x4dc(0x04)
	None SpinAngleMin; // 0x4e0(0x04)
	None SpinAngleMax; // 0x4e4(0x04)
	None bSpawnLastShotOnly; // 0x4e8(0x01)
	None WeaponSight; // 0x310(0x08)
	None bUpdateScopeWidgetScaling; // 0x318(0x01)
	None SightType; // 0x319(0x01)
	None LensMaterial_1P; // 0x320(0x08)
	None LensMaterial_3P; // 0x328(0x08)
	None ScopeWidget; // 0x330(0x08)
	None InitialScopeWidgetDistance; // 0x338(0x04)
	None BP_ScopeWidgets; // 0x340(0x10)
	None ChildPrimitiveComponents; // 0x350(0x10)
	None WidgetClass; // 0x360(0x08)
	None WidgetDrawSize; // 0x368(0x08)
	None DefaultWidgetComponentLocation; // 0x370(0x0c)
	None bUseHighMagnificationMesh; // 0x37c(0x01)
	None HighMagnificationSightMesh; // 0x380(0x28)
	None DefaultSightMesh; // 0x3a8(0x28)
	None LoadedHighMagnificationSightMesh; // 0x3d0(0x08)
	None LoadedDefaultSightMesh; // 0x3d8(0x08)
	None TimerHandle_ScopeVisible; // 0x3e0(0x08)
	None VisibleDelayTime; // 0x3e8(0x04)
	None ViewportRatioMax; // 0x3ec(0x04)
	None ViewportSizeMax; // 0x3f0(0x04)
	None bIsADSMode; // 0x3f4(0x01)
	None ScaleMultiplier_ZoomInOut; // 0x3f8(0x04)
	None bKeepMagnifierIndex; // 0x3fc(0x01)
	None MagnifierList; // 0x400(0x10)
	None CurrentMagnifier; // 0x410(0x04)
	None InitialMagnifierIndex; // 0x414(0x02)
	None ScopeWidgetDefaultSize; // 0x418(0x08)
	None DefaultCriteriaSetup; // 0x170(0x28)
	None bIsEnabled; // 0x198(0x01)
	None CachedCameraManager; // 0x1a0(0x08)
	None Root; // 0x310(0x08)
	None SimulationStaticMesh; // 0x318(0x08)
	None LifeTime; // 0x320(0x04)
	None MissileLineParticle; // 0x310(0x08)
	None MissileParticle; // 0x318(0x08)
	None TargetDecal; // 0x320(0x08)
	None TargetRadius; // 0x328(0x04)
	None BombingSound; // 0x330(0x08)
	None NuclearInfo; // 0x330(0x0c)
	None NuclearWarningEvent; // 0x340(0x08)
	None BroadcastDelayTime; // 0x348(0x04)
	None NuclearDelayTime; // 0x34c(0x04)
	None NuclearHeight; // 0x350(0x04)
	None bBroadcastNuclear; // 0x354(0x01)
	None LocationActor; // 0x310(0x08)
	None LightPoleMesh; // 0x318(0x08)
	None IsBook; // 0x320(0x01)
	None IsTempActor; // 0x321(0x01)
	None IsPersonalSupplyBoxActor; // 0x322(0x01)
	None IsMaterialItemActor; // 0x323(0x01)
	None bIsExpertWeaponItemActor; // 0x324(0x01)
	None bIsLocalActor; // 0x325(0x01)
	None MaterialPingInfo; // 0x328(0x30)
	None ExpertWeaponPingInfo; // 0x358(0x28)
	None LocalPingInfo; // 0x380(0x30)
	None OwnerState; // 0x3b0(0x08)
	None PingInfo; // 0x3b8(0x38)
	None PlayerController; // 0x3f0(0x08)
	None PingSettings; // 0x3f8(0xb8)
	None ScreenRot; // 0x4b0(0x04)
	None TargetPingLocation; // 0x4b8(0x0c)
	None Active; // 0x4c4(0x01)
	None PingWidget; // 0x4c8(0x08)
	None WidgetSize; // 0x4d0(0x04)
	None ShowLine; // 0x4d4(0x01)
	None InNm; // 0x4d5(0x01)
	None CurrentWidgetSpace; // 0x4d6(0x01)
	None PingWidgetCompentSapceWorld; // 0x4d8(0x08)
	None PingWidgetCompentSapceScreen; // 0x4e0(0x08)
	None PingIconWidgetWorld; // 0x4e8(0x08)
	None PingIconWidgetScreen; // 0x4f0(0x08)
	None SmartPingLineScale; // 0x4f8(0x08)
	None CheckHieght; // 0x500(0x04)
	None CheckDistance; // 0x504(0x04)
	None SmartPingSystem; // 0x508(0x08)
	None CompleteBindingOptin; // 0x57a(0x01)
	None PingAlphaCurve; // 0x580(0x08)
	None PingLightAimPoleAlphaCurve; // 0x588(0x08)
	None PingLightPoleDistanceAlphaCurve; // 0x590(0x08)
	None PingLightPoleDistanceRadiusCurve; // 0x598(0x08)
	None PingLightPoleFovRadiusCurve; // 0x5a0(0x08)
	None ForceOpacity1DurationTime; // 0x5a8(0x04)
	None AddCenterPoint; // 0x5ac(0x08)
	None WidgetSpace; // 0x248(0x01)
	None SmartPingScaleWorld; // 0x250(0x08)
	None SmartPingScale; // 0x258(0x08)
	None Exit_Slide; // 0x260(0x08)
	None Exit_Bounce; // 0x268(0x08)
	None Exit_Scale; // 0x270(0x08)
	None Enter_Slide; // 0x278(0x08)
	None Enter_Bounce; // 0x280(0x08)
	None Enter_Scale; // 0x288(0x08)
	None SmartPingLineScale; // 0x290(0x08)
	None IconImage; // 0x298(0x08)
	None IconBgImage; // 0x2a0(0x08)
	None IconIndicator; // 0x2a8(0x08)
	None ParentPingActor; // 0x2b0(0x08)
	None PingDistance; // 0x2b8(0x04)
	None TimerHandle_Update; // 0x2c0(0x08)
	None TimerHandle_OnActive; // 0x2c8(0x08)
	None PingIconSettings; // 0x2d0(0xb8)
	None MaterialItemPingInfo; // 0x388(0x30)
	None ExpertWeaponItemPingInfo; // 0x3b8(0x28)
	None LocalPingInfo; // 0x3e0(0x30)
	None AnimationType; // 0x410(0x01)
	None StartTime; // 0x414(0x04)
	None TimeSinceStart; // 0x418(0x04)
	None TransitionState; // 0x41c(0x04)
	None PingOpacity; // 0x420(0x04)
	None DefaultScale; // 0x424(0x04)
	None Seed; // 0x428(0x04)
	None PreDistance; // 0x42c(0x04)
	None DistanceText; // 0x430(0x08)
	None EnableAnimation; // 0x438(0x01)
	None IgnoreScale; // 0x439(0x01)
	None bEnableShowDebugLightPole; // 0x43a(0x01)
	None PingActorList; // 0xb0(0x10)
	None PersonalSupplyBoxActor; // 0xc0(0x08)
	None GuideActor; // 0xc8(0x08)
	None BookActor; // 0xd0(0x08)
	None ExpertWeaponActor; // 0xd8(0x08)
	None MaterialActors; // 0xe0(0x10)
	None LocalPingActors; // 0xf0(0x10)
	None DetectedInteractionCancleActors; // 0x100(0x10)
	None LightPoleHeight; // 0x110(0x04)
	None LightPoleRadius; // 0x114(0x04)
	None DelayAfterLanding; // 0x118(0x04)
	None LightPoleEffect; // 0x120(0x08)
	None TargetPawn; // 0x3a8(0x08)
	None StaticMeshComponent; // 0x310(0x08)
	None CreationEffectMeshComponent; // 0x318(0x08)
	None bIsLifeSpanExpired; // 0x320(0x01)
	None DestructibleMeshComponent; // 0x328(0x08)
	None DestructibleMeshRef; // 0x330(0x08)
	None MaxHp; // 0x338(0x04)
	None CurrentHP; // 0x33c(0x04)
	None ImpactPointOnDestruct; // 0x340(0x0c)
	None BarrierDissolveValue; // 0x358(0x04)
	None ParticleSystem_OnSpawn; // 0x360(0x08)
	None AkSound_OnSpawn; // 0x368(0x08)
	None AKSound_Destructed; // 0x370(0x08)
	None AkSound_Melee; // 0x378(0x08)
	None ParticleSystemComponent_OnSpawn; // 0x380(0x08)
	None SupplyBoxSpawnEffect; // 0x38(0x08)
	None PP_Preset_PickupOutline; // 0x40(0x08)
	None EffectEquipmentTransitionDelegate; // 0x48(0x10)
	None EquipmentSounedDelegate; // 0x58(0x10)
	None SlotHoverSounedDelegate; // 0x68(0x10)
	None SupplyItemList; // 0x78(0x10)
	None TargetPointList; // 0x88(0x10)
	None PP_PickupOutlineRef; // 0x98(0x08)
	None CurrentActor; // 0xa0(0x30)
	None CurrentSlot; // 0xd0(0x10)
	None TransitionList; // 0xe0(0x10)
	None TraceLand; // 0x4e0(0x01)
	None CustomIndex; // 0x4e8(0x04)
	None TimerHandle_CheckValue; // 0x248(0x08)
	None SlotIndex; // 0x2dc(0x04)
	None PlayerState; // 0x2e0(0x08)
	None PlayedFireAnimationCnt; // 0x2e8(0x04)
	None bPlayingFireAnimation; // 0x2ec(0x01)
	None FireCnt; // 0x2f0(0x04)
	None StartDownTime; // 0x2f4(0x04)
	None TotalDownTime; // 0x2f8(0x04)
	None DownTickTime; // 0x2fc(0x04)
	None CurrentState; // 0x300(0x01)
	None bIsLocalState; // 0x301(0x01)
	None SlotList; // 0x248(0x10)
	None SpawnLocationBoxComponent; // 0x340(0x08)
	None CharacterHalfHeight; // 0x348(0x04)
	None bUseAreaSystem; // 0x34c(0x01)
	None AreaName; // 0x358(0x10)
	None MaxPlayerCountInArea; // 0x378(0x04)
	None PlayerStartName; // 0x380(0x10)
	None MaxPlayerCount; // 0x390(0x04)
	None bUseSpawnBound; // 0x394(0x01)
	None SpawnBoundScale; // 0x398(0x04)
	None AreaWeight; // 0x39c(0x04)
	None PlayerState; // 0x248(0x08)
	None Canvas_Main; // 0x250(0x08)
	None Canvas_Rot; // 0x258(0x08)
	None bIsLocalPlayer; // 0x288(0x01)
	None bIsInViewport; // 0x289(0x01)
	None IsDisconnected; // 0x28a(0x01)
	None PlayerBehavior; // 0x28b(0x01)
	None LastIconIndex; // 0x28c(0x04)
	None SpawnResultInfo; // 0x248(0x10)
	None SpawnResultData; // 0x258(0x10)
	None SpawnActorInfos; // 0x268(0x10)
	None SpawnActors; // 0x278(0x50)
	None SpawnActorList; // 0x2c8(0x10)
	None SpawnBuildingList; // 0x2d8(0x10)
	None SpawnBuildingList2; // 0x2e8(0x10)
	None TotalLogCnt; // 0x2f8(0x04)
	None CurPercent; // 0x2fc(0x04)
	None CurCount; // 0x300(0x04)
	None OnProjectilePenetrate; // 0x1d0(0x10)
	None bIsFluidFriction; // 0x1e0(0x01)
	None bInFluid; // 0x1e1(0x01)
	None FluidFriction; // 0x1e4(0x04)
	None BuoyancyZ; // 0x1e8(0x04)
	None bEnableGuidedForce; // 0x1ec(0x01)
	None GuidedForce; // 0x1f0(0x04)
	None GuidedLocation; // 0x1f4(0x0c)
	None CurrentTimeOfDayType; // 0x310(0x01)
	None bUseClearFog; // 0x311(0x01)
	None PostSimulationAlpha; // 0x314(0x04)
	None TimeOfDaySettings; // 0x318(0x50)
	None DirectionalLightRef; // 0x368(0x08)
	None SkyLightRef; // 0x370(0x08)
	None ExponentialHeightFogRef; // 0x378(0x08)
	None AtmosphericFogRef; // 0x380(0x08)
	None PostProcessVolumeRef; // 0x388(0x08)
	None SimulateInformations; // 0x390(0x10)
	None SimulationStartTime; // 0x3a0(0x04)
	None bIsSimulating; // 0x3a4(0x01)
	None CurrentSimulationTOD; // 0x3a8(0x98)
	None TargetSimulationTOD; // 0x440(0x98)
	None TargetSimulateTimeOfDay; // 0x4d8(0x01)
	None DL_RotationTransitionTime; // 0x4dc(0x04)
	None PostTransitionDelayTime; // 0x4e0(0x04)
	None PostTransitionTime; // 0x4e4(0x04)
	None StartTimeOfDayType; // 0x500(0x01)
	None LobbyWidgetClass; // 0x420(0x08)
	None CreateCharacterWidgetClass; // 0x428(0x08)
	None LobbyWidget; // 0x430(0x08)
	None CreateCharacterWidget; // 0x438(0x08)
	None ChangedSceneDelegate; // 0x440(0x10)
	None ChangedLoginDelegate; // 0x450(0x10)
	None WaitingUserDelegate; // 0x460(0x10)
	None CharacterState; // 0x250(0x01)
	None PreCharacterState; // 0x251(0x01)
	None FallingWidget; // 0x258(0x08)
	None UW_AliveInfoWidget; // 0x260(0x08)
	None DamageLogWidgetRef; // 0x268(0x08)
	None bPerkDeckInitialized; // 0x270(0x01)
	None bCanDrawTrajectory; // 0xb0(0x01)
	None bUseDebugLine; // 0xb1(0x01)
	None bIsTrajectorySegmentsCreated; // 0xb2(0x01)
	None DesiredStartLocation; // 0xb4(0x0c)
	None Gravity; // 0xc0(0x0c)
	None InitialVelocity; // 0xcc(0x0c)
	None TrajectorySegmentCount; // 0xd8(0x04)
	None TrajectorySegmentLength; // 0xdc(0x04)
	None HitSegmentIndex; // 0xe0(0x04)
	None ParticleColor; // 0xe4(0x10)
	None ParticleColorMultiplier; // 0xf4(0x04)
	None MPC_Trajectory; // 0xf8(0x08)
	None TrajectoryParticleSystem; // 0x100(0x08)
	None SpawnedParticleArray; // 0x108(0x10)
	None DecalComponent; // 0x118(0x08)
	None DecalScale; // 0x120(0x0c)
	None DecalColor; // 0x12c(0x10)
	None DecalMaterial; // 0x140(0x08)
	None PrevDropBoxState; // 0x390(0x01)
	None CurrentDropBoxState; // 0x391(0x01)
	None bLandedOnWater; // 0x392(0x01)
	None LandingSeconds; // 0x3a4(0x04)
	None DropBoxMesh; // 0x3c0(0x08)
	None ParachuteMesh; // 0x3c8(0x08)
	None DropBoxAudioComponent; // 0x3d0(0x08)
	None BoxSmokeParticleFX; // 0x3d8(0x08)
	None WaterParticleFX; // 0x3e0(0x08)
	None BoxSmokeParticle; // 0x3e8(0x08)
	None WaterParticle; // 0x3f0(0x08)
	None SmokeStartSound; // 0x3f8(0x28)
	None SmokeStopSound; // 0x420(0x28)
	None LandOnGroundSound; // 0x448(0x28)
	None LandOnWaterSound; // 0x470(0x28)
	None SmokeRemainTime; // 0x498(0x04)
	None SmokeEeffectDuration; // 0x49c(0x04)
	None StaticMesh; // 0x30(0x28)
	None LocationOffset; // 0x58(0x0c)
	None RotationOffset; // 0x64(0x0c)
	None ScaleOffset; // 0x70(0x0c)
	None ItemTables; // 0x30(0x10)
	None ItemValueTables; // 0x40(0x10)
	None TotalGraphicQuality; // 0x154(0x04)
	None MasterVolumeOnOff; // 0x158(0x01)
	None PreMasterVolume; // 0x15c(0x04)
	None MasterVolume; // 0x160(0x04)
	None EffectVolume; // 0x164(0x04)
	None UIVolume; // 0x168(0x04)
	None MusicVolume; // 0x16c(0x04)
	None VoiceInputVolume; // 0x170(0x04)
	None VoiceOutputVolume; // 0x174(0x04)
	None VoiceInputMode; // 0x178(0x04)
	None VoiceChanel; // 0x17c(0x04)
	None VerticalSensitivity; // 0x180(0x04)
	None GeneralSensitivity; // 0x184(0x04)
	None VehicleDriverSensitivity; // 0x188(0x04)
	None AOSSensitivity; // 0x18c(0x04)
	None TotalSensitivity; // 0x190(0x04)
	None bUsingDetailSensitivity; // 0x194(0x01)
	None ADSSensitivity; // 0x198(0x04)
	None ADS2xSensitivity; // 0x19c(0x04)
	None ADS4xSensitivity; // 0x1a0(0x04)
	None ADS6xSensitivity; // 0x1a4(0x04)
	None ADS8xSensitivity; // 0x1a8(0x04)
	None ADS15xSensitivity; // 0x1ac(0x04)
	None bReverseLeftAndRight; // 0x1b0(0x01)
	None bReverseUpAndDown; // 0x1b1(0x01)
	None CrossHairIndex; // 0x1b4(0x04)
	None FireModeSettings; // 0x1b8(0x50)
	None autoReload; // 0x208(0x01)
	None ImmediateAttachment; // 0x209(0x01)
	None InheritAttachment; // 0x20a(0x01)
	None ShowPerkSlot; // 0x20b(0x01)
	None ShowSmartPing; // 0x20c(0x01)
	None ShowSmartPingSupplyBox; // 0x20d(0x01)
	None ShowSmartPingLightPole; // 0x210(0x04)
	None NetworkDebugStatistics; // 0x214(0x01)
	None EnableShowClassUI; // 0x215(0x01)
	None bShowUseaableItemEffect; // 0x216(0x01)
	None AmmoEffect; // 0x218(0x04)
	None MedicalLv3Effect; // 0x21c(0x04)
	None MedicalLv2Effect; // 0x220(0x04)
	None MedicalLv1Effect; // 0x224(0x04)
	None RedBoostEffect; // 0x228(0x04)
	None GreenBoostEffect; // 0x22c(0x04)
	None BlueBoostEffect; // 0x230(0x04)
	None AutoUseItem_MedicalLv1; // 0x234(0x01)
	None AutoUseItem_MedicalLv2; // 0x235(0x01)
	None AutoUseItem_MedicalLv3; // 0x236(0x01)
	None AutoLadder; // 0x237(0x01)
	None ShowGuideWidget; // 0x238(0x01)
	None SearchMaterialItem; // 0x239(0x01)
	None SearchExpertWeaponItem; // 0x23a(0x01)
	None ShowDamageLog; // 0x23b(0x01)
	None CustomUseItem1; // 0x23c(0x04)
	None CustomUseItem2; // 0x240(0x04)
	None CustomUseItem3; // 0x244(0x04)
	None CustomUseItem4; // 0x248(0x04)
	None CustomUseItem5; // 0x24c(0x04)
	None CustomUseItem6; // 0x250(0x04)
	None CustomUseItem7; // 0x254(0x04)
	None CustomUseItem8; // 0x258(0x04)
	None ToggleCrouch; // 0x25c(0x01)
	None ToggleWalk; // 0x25d(0x01)
	None ToggleSprint; // 0x25e(0x01)
	None ToggleFreeLook; // 0x25f(0x01)
	None ToggleSteadyAim; // 0x260(0x01)
	None ToggleExLean; // 0x264(0x04)
	None ToggleAOS; // 0x268(0x01)
	None ToggleADS; // 0x269(0x01)
	None GraphicsVersion; // 0x26c(0x04)
	None DefaultLanguageType; // 0x274(0x04)
	None LanguageType; // 0x278(0x04)
	None Gamma; // 0x27c(0x04)
	None Sharpen; // 0x280(0x04)
	None ShowInventoryCharacter; // 0x284(0x01)
	None FieldOfView; // 0x290(0x04)
	None ReflexQuality; // 0x294(0x04)
	None DLSSQuality; // 0x298(0x04)
	None bUseDepthOfField; // 0x29c(0x01)
	None FSRQuality; // 0x2a0(0x04)
	None KeySettings; // 0x2a8(0x50)
	None SubKeySettings; // 0x2f8(0x50)
	None AxisKeySettings; // 0x348(0x50)
	None AxisSubKeySettings; // 0x398(0x50)
	None SettingDataFromTable; // 0x3e8(0x50)
	None OnGameUserSettingsApply_Audio; // 0x438(0x10)
	None OnGameUserSettingsApply_Controll; // 0x448(0x10)
	None OnGameUserSettingsApply_Graphic; // 0x458(0x10)
	None OnGameUserSettingsApply_GamePlay; // 0x468(0x10)
	None OnGameUserSettingsApply_Key; // 0x478(0x10)
	None OnChangedDediSettings; // 0x488(0x10)
	None OnChangeVolumeState; // 0x4f8(0x10)
	None bCheckValidSettingDataFromTable; // 0x508(0x01)
	None bNeedDefaultSettingWithTabelData; // 0x509(0x01)
	None bCheckLoadComplete; // 0x50a(0x01)
	None TeamInfoUpdaterComponentRef; // 0x3a0(0x08)
	None SpringArm; // 0x3a8(0x08)
	None RearCamera; // 0x3b0(0x08)
	None VehicleSeats; // 0x3b8(0x08)
	None WreckedMeshComponent; // 0x3c0(0x08)
	None AppearComponent; // 0x3c8(0x08)
	None SeatInfos; // 0x3d0(0x10)
	None DriverSeatComponent; // 0x3e0(0x08)
	None DamagedEffectComponent; // 0x3e8(0x08)
	None AkComponent; // 0x3f0(0x08)
	None CachedVehicleSeats; // 0x3f8(0x10)
	None bFreecam; // 0x408(0x01)
	None SaveYawValue; // 0x40c(0x04)
	None bWannaFreecamInterpToOrigin; // 0x410(0x01)
	None StartReplaceFreeLookTime; // 0x414(0x04)
	None ReplaceFreeLookDurationTime; // 0x418(0x04)
	None bWannaInterpCam; // 0x41c(0x01)
	None SavedArmLength; // 0x420(0x04)
	None InterpTargetArmLength; // 0x424(0x04)
	None BoosterCameraInterpSpeed; // 0x428(0x04)
	None BoosterTargetArmLength; // 0x42c(0x04)
	None AdditionalFxs; // 0x430(0x10)
	None WaterPlaneFx; // 0x440(0x08)
	None WaterSurfaceOffsetZ; // 0x448(0x04)
	None FrontLightValue; // 0x44c(0x04)
	None RearLightValue; // 0x450(0x04)
	None BrakeLightValue; // 0x454(0x04)
	None LightTurnOnSpeed; // 0x458(0x04)
	None ImpulseDamageType; // 0x470(0x08)
	None NetDormantComponent; // 0x478(0x08)
	None PreSeatInfos; // 0x480(0x10)
	None bIsFlameDamaged; // 0x504(0x01)
	None FlameDamageInfos; // 0x508(0x10)
	None PostPhysicsTick; // 0x518(0x30)
	None ReplicatedBaseAimRotation; // 0x554(0x0c)
	None bUseInterpCameraRot; // 0x568(0x01)
	None bUseInterpCameraRot_Pitch; // 0x569(0x01)
	None OccupiedLocalPawn; // 0x590(0x08)
	None bOverridePhysicsErrorCorrection; // 0x5a0(0x01)
	None VehicleErrorCorrection; // 0x5a4(0x34)
	None bIsFPPMode; // 0x5d8(0x01)
	None CurrentInputMoveRight; // 0x5dc(0x04)
	None AnimRate_LODToFrameSkipMap; // 0x5e8(0x50)
	None AnimRate_BaseNonRenderedUpdateRate; // 0x638(0x04)
	None bResetPhysicsOnWater; // 0x649(0x01)
	None bIsOnTheWater; // 0x64a(0x01)
	None bAllOfWheelsInTheWater; // 0x64b(0x01)
	None ModeChangingTime; // 0x660(0x04)
	None bIsAmphibiousMode; // 0x665(0x01)
	None HealthPoint; // 0x678(0x04)
	None IsHandlebar; // 0x67c(0x01)
	None OnEnterToWaterParticle; // 0x680(0x08)
	None OnExitFromWaterParticle; // 0x688(0x08)
	None WaterPlaneParticle; // 0x690(0x08)
	None AdditionalWaterParticle; // 0x698(0x50)
	None BeforeExplosionEffects; // 0x6e8(0x10)
	None AfterExplosionEffects; // 0x6f8(0x10)
	None AfterExplosionEffectLifeTimes; // 0x708(0x10)
	None DamagedEffects; // 0x718(0x10)
	None DamagedEffectSocketName; // 0x728(0x08)
	None ExplosionEffect; // 0x730(0x08)
	None ExplosionEffectSocketName; // 0x738(0x08)
	None ExplosionSound; // 0x740(0x08)
	None DamagedSounds; // 0x748(0x10)
	None DamagedStopSound; // 0x758(0x08)
	None EngineStartEvent; // 0x760(0x08)
	None EngineStopEvent; // 0x768(0x08)
	None TiringPauseAudioEvent; // 0x770(0x08)
	None TiringResumeAudioEvent; // 0x778(0x08)
	None VehicleHorn; // 0x780(0x08)
	None VehicleHornStop; // 0x788(0x08)
	None VehicleHornMute; // 0x790(0x08)
	None OnEnterToWaterSound; // 0x798(0x08)
	None OnExitFromWaterSound; // 0x7a0(0x08)
	None CrashCameraShake; // 0x7a8(0x08)
	None CameraShakeScale; // 0x7b0(0x04)
	None NearbyCharacaters; // 0x7d0(0x10)
	None ExplosionUpwardSpeed; // 0x834(0x04)
	None CrashAudioEvent; // 0x838(0x08)
	None LandingAudioEvent; // 0x840(0x08)
	None HandbrakeAudioEvent; // 0x848(0x08)
	None HandbrakeStopAudioEvent; // 0x850(0x08)
	None MinCrashSoundImpulse; // 0x858(0x04)
	None MaxCrashSoundImpulse; // 0x85c(0x04)
	None HandbrakeSoundVolumeCurve; // 0x860(0x08)
	None SuspensionSoundVolumeCurve; // 0x868(0x08)
	None FuelAmount; // 0x8c0(0x04)
	None BoosterParticleComponents; // 0x8d0(0x10)
	None OnBoosterChangedDelegate; // 0x8e8(0x10)
	None TireHealthPoints; // 0x8f8(0x10)
	None CachedTireComponents; // 0x908(0x10)
	None OnWheelWrecked; // 0x918(0x10)
	None LongSlipThreshold; // 0x928(0x04)
	None LatSlipThreshold; // 0x92c(0x04)
	None BravoHotelWheeledVehicleMovementComponent; // 0x930(0x08)
	None VehicleData; // 0x940(0x08)
	None TimerHandle_TurnOnFrontBackLight; // 0x958(0x08)
	None WaterLevelZ; // 0x960(0x04)
	None WheelPhysicalMaterials; // 0x970(0x10)
	None LastPhysicalMaterial; // 0x980(0x08)
	None ExplosionImpulseStrength; // 0x9b0(0x04)
	None LastDamageInstigator; // 0x9b8(0x08)
	None NitroJumpEndParticle; // 0x9c0(0x08)
	None NitroJumpImpulseModifier; // 0x9c8(0x04)
	None NitroJumpMaxSpeedKmH; // 0x9cc(0x04)
	None NitroJumpRotationInterpSpeed; // 0x9d0(0x04)
	None bIsNitroJumping; // 0x9d4(0x01)
	None NitroJumpStartRotationCache; // 0x9d8(0x0c)
	None TimerHandle_NitroBoom; // 0x9e8(0x08)
	None NitroBoomAlarmSound; // 0xa00(0x08)
	None NitroBoomParticle; // 0xa08(0x08)
	None NitroBoomTargetUiOffset; // 0xa10(0x0c)
	None TimerHandle_FlashingLights; // 0xa20(0x08)
	None Timeline_FlashingLights; // 0xa28(0x98)
	None Curve_FlashingLights; // 0xac0(0x08)
	None TimerHandle_UpdateFrontBackLight; // 0xac8(0x08)
	None AppearTime; // 0xad0(0x04)
	None AppearEffectActorClass; // 0xad8(0x08)
	None DisappearEffectActorClass; // 0xae0(0x08)
	None OnAppearLanding; // 0xaf0(0x08)
	None OnAppearLandingSound; // 0xaf8(0x08)
	None STMComponent; // 0xb10(0x08)
	None ReplicatedVehicleState; // 0xb18(0x01)
	None FloodedCheckSocketNames; // 0xc10(0x10)
	None FloodedTimeForBreakDown; // 0xc24(0x04)
	None CurInstigator; // 0xc58(0x08)
	None CurrentDirtColor; // 0xc68(0x10)
	None UpdateDirtMatTargetSeconds; // 0xc78(0x04)
	None InBlueZoneDirtColor; // 0xc7c(0x10)
	None OutBlueZoneDirtColor; // 0xc8c(0x10)
	None Vehicle; // 0x978(0x08)
	None VehicleMovementComponent; // 0x980(0x08)
	None DeltaTime; // 0x988(0x04)
	None SteeringModifier; // 0x994(0x04)
	None SteeringWheelRotation; // 0x998(0x0c)
	None bIsMoving; // 0x9a4(0x01)
	None TwoWheelVehicleWheelRotation_Front; // 0x9a8(0x0c)
	None TwoWheelVehicleWheelRotation_Rear; // 0x9b4(0x0c)
	None TwoWheelVehicleWheelLocation_Front; // 0x9c0(0x0c)
	None TwoWheelVehicleWheelLocation_Rear; // 0x9cc(0x0c)
	None TwoWheelVehicleSuspension_Front; // 0x9d8(0x0c)
	None TwoWheelVehicleSuspension_Rear; // 0x9e4(0x0c)
	None FrontWheelSocketName; // 0x9f0(0x08)
	None RearWheelSocketName; // 0x9f8(0x08)
	None FrontSuspensionSocketName; // 0xa00(0x08)
	None RearSuspensionSocketName; // 0xa08(0x08)
	None bIsFPPMode; // 0xa10(0x01)
	None bIsLeftSteering; // 0xa11(0x01)
	None bIsRightSteering; // 0xa12(0x01)
	None LeftSteeringPlayRate; // 0xa14(0x04)
	None RightSteeringPlayRate; // 0xa18(0x04)
	None bIsIdleSteering; // 0xa1c(0x01)
	None bHoldUpdateTransition; // 0xa1d(0x01)
	None DisplayName; // 0x30(0x18)
	None MaxHealthPoint; // 0x48(0x04)
	None AllowedWeaponTypes; // 0x50(0x10)
	None TakenWeaponDamageModifiers; // 0x60(0x10)
	None DefaultFuelAmountMin; // 0x70(0x04)
	None DefaultFuelAmountMax; // 0x74(0x04)
	None MaxFuelAmount; // 0x78(0x04)
	None FuelConsumptionSpeed; // 0x7c(0x04)
	None BoostFuelConsumptionSpeed; // 0x80(0x04)
	None FuelConsumptionRatioByGear; // 0x88(0x10)
	None MaxTireHealthPoint; // 0x98(0x04)
	None ItemUseMaxSpeed; // 0x9c(0x04)
	None ItemUseMinCrashSpeed; // 0xa0(0x04)
	None bCanDriverUseWeapon; // 0xa4(0x01)
	None BoosterParticlesOnGround; // 0xa8(0x50)
	None BoosterParticleOnWater; // 0xf8(0x50)
	None NitroBoostParticle; // 0x148(0x50)
	None StartBoostSound; // 0x198(0x08)
	None StopBoostSound; // 0x1a0(0x08)
	None NitroBoostStartSound; // 0x1a8(0x08)
	None NitroBoostStopSound; // 0x1b0(0x08)
	None CrashDamages; // 0x1b8(0x10)
	None ExplosionDamageToCharacter; // 0x1c8(0x04)
	None ExplosionDamageToDriver; // 0x1cc(0x04)
	None ExplosionDamageToPassenger; // 0x1d0(0x04)
	None ExplosionDamageToRigidBody; // 0x1d4(0x04)
	None ExplosionDamageMin; // 0x1d8(0x04)
	None ExplosionDamageFalloff; // 0x1dc(0x04)
	None ExplosionInnerRadius; // 0x1e0(0x04)
	None ExplosionDamageRadius; // 0x1e4(0x04)
	None NitroBoomExplosionMultiplyRate; // 0x1e8(0x04)
	None CollisionDeltaSpeedForCharacter; // 0x1f0(0x08)
	None CollisionDeltaSpeedForDestructible; // 0x1f8(0x08)
	None BaseMassForDestructible; // 0x200(0x04)
	None bUseAutoEscape; // 0x204(0x01)
	None EscapePitch; // 0x208(0x04)
	None EscapeRoll; // 0x20c(0x04)
	None EscapeDamageBySpeed; // 0x210(0x08)
	None SubInfoWidget; // 0x218(0x08)
	None OnWheelFloated; // 0x3f8(0x10)
	None OnWheelLanded; // 0x408(0x10)
	None OnFloatingInAirChanged; // 0x418(0x10)
	None OnWheelTypeChanged; // 0x428(0x10)
	None OnSteeringInputChanged; // 0x438(0x10)
	None RepControlStates; // 0x480(0x07)
	None PxAuthority; // 0x490(0x08)
	None GroundWheelClasses; // 0x498(0x10)
	None InwaterWheelClasses; // 0x4a8(0x10)
	None WreckedWheelClasses; // 0x4b8(0x10)
	None DefaultWheelType; // 0x4c8(0x01)
	None ParticleIntoWater; // 0x4d0(0x08)
	None DefaultDamping; // 0x4d8(0x04)
	None DefaultAngularDamping; // 0x4dc(0x04)
	None DefaultDampSpeed; // 0x4e0(0x04)
	None WaterDamping; // 0x4e4(0x04)
	None WaterDampSpeed; // 0x4e8(0x04)
	None WaterFloodedDamping; // 0x4ec(0x04)
	None ChangingModeDamping; // 0x4f0(0x04)
	None ChangingModeDampSpeed; // 0x4f4(0x04)
	None StuntDamping; // 0x4f8(0x04)
	None StuntDampSpeed; // 0x4fc(0x04)
	None bUseAirControl; // 0x500(0x01)
	None InAirRollForce; // 0x504(0x04)
	None InAirPitchForce; // 0x508(0x04)
	None bIsInWater; // 0x522(0x01)
	None bOverridesPhysicsNetCorrection; // 0x523(0x01)
	None NetErrorCorrection; // 0x524(0x34)
	None AliveWheelMask; // 0x570(0x01)
	None ParkingBrakeInput; // 0x574(0x04)
	None SideBrakeInput; // 0x578(0x04)
	None WheelProxies; // 0x580(0x10)
	None bUseBooster; // 0x5e0(0x01)
	None MinNormalizedTireloadFilteredCurveOnBoosting; // 0x5e8(0x08)
	None MaxNormalizedTireloadFilteredCurveOnBoosting; // 0x5f0(0x08)
	None TorqueScaleOnBoosting; // 0x5f8(0x04)
	None MaxRPMOnBoosting; // 0x5fc(0x04)
	None bIsBoosting; // 0x600(0x01)
	None LastOverrideController; // 0x608(0x08)
	None DifferentialSetup; // 0x618(0x1c)
	None WreckedDifferentialLateralWeights; // 0x638(0x10)
	None AckermannAccuracy; // 0x648(0x04)
	None SeatNum; // 0x4d8(0x04)
	None bShouldUseTwoHandIK; // 0x30(0x01)
	None IdleAimOffset; // 0x38(0x08)
	None UnarmedIdleAnim; // 0x40(0x08)
	None UnarmedStandAnim; // 0x48(0x08)
	None RifleIdleAnim; // 0x50(0x08)
	None RifleAimingAOSAnim; // 0x58(0x08)
	None RifleAimOffset; // 0x60(0x08)
	None RifleAOSBlendingAnim; // 0x68(0x08)
	None PistolIdleAnim; // 0x70(0x08)
	None PistolAimingAOSAnim; // 0x78(0x08)
	None PistolAimOffset; // 0x80(0x08)
	None PistolAOSBlendingAnim; // 0x88(0x08)
	None ThrowingWeaponIdleAnim; // 0x90(0x08)
	None ThrowingWeaponAimingAOSAnim; // 0x98(0x08)
	None OverThrow_ThrowingWeaponAimOffset; // 0xa0(0x08)
	None UnderThrow_ThrowingWeaponAimOffset; // 0xa8(0x08)
	None ThrowingWeaponOverThrowBlendingAnim; // 0xb0(0x08)
	None ThrowingWeaponUnderThrowBlendingAnim; // 0xb8(0x08)
	None OverThrowAnim; // 0xc0(0x10)
	None UnderThrowAnim; // 0xd0(0x10)
	None RPGIdleAnim; // 0xe0(0x08)
	None OccupantAOSBlendingCurve; // 0xe8(0x08)
	None AimingCameraTargetLocation; // 0xf0(0x0c)
	None MinimumCameraPitchCurve; // 0x100(0x08)
	None MinimumCameraYaw; // 0x108(0x04)
	None MaximumCameraYaw; // 0x10c(0x04)
	None IdleViewPitchMin; // 0x110(0x04)
	None IdleViewPitchMax; // 0x114(0x04)
	None IdleViewYawMin; // 0x118(0x04)
	None IdleViewYawMax; // 0x11c(0x04)
	None BS_DriverHandlebar_1P; // 0x120(0x08)
	None BS_DriverHandlebar_3P; // 0x128(0x08)
	None DriverHandlingIdleAnim_1P; // 0x130(0x08)
	None DriverHandlingIdleAnim_3P; // 0x138(0x08)
	None DriverHandlingLeftAnim_1P; // 0x140(0x08)
	None DriverHandlingLeftAnim_3P; // 0x148(0x08)
	None DriverHandlingRightAnim_1P; // 0x150(0x08)
	None DriverHandlingRightAnim_3P; // 0x158(0x08)
	None bCheckRightHandAimOffset; // 0x160(0x01)
	None DriverAimOffsetBasePose_1P; // 0x168(0x08)
	None DriverAimOffset_1P; // 0x170(0x08)
	None SeatSocketName; // 0x4e0(0x08)
	None bIsForDriver; // 0x4e8(0x01)
	None Index; // 0x4ec(0x04)
	None Occupant; // 0x4f0(0x08)
	None SortedSeats; // 0x4f8(0x10)
	None OccupantCollision; // 0x508(0x08)
	None OnOccupantEntered; // 0x510(0x10)
	None OnOccupantExited; // 0x520(0x10)
	None Data; // 0x530(0x08)
	None ExitSideWeight; // 0x53c(0x04)
	None ExitDistanceFromSeatBound; // 0x540(0x04)
	None CheckVehicleSpawnDistance; // 0x310(0x04)
	None VehicleAreaSpawnRateTableKey; // 0x314(0x08)
	None SpawnProbability; // 0x4e0(0x04)
	None SpawnVehiclesInBoxList; // 0x4e8(0x10)
	None StandardGroupName; // 0x4f8(0x08)
	None ParentsStandardGroupBoxComponent; // 0x500(0x08)
	None DivisionVehicleKey; // 0x508(0x08)
	None SpawnedVehicle; // 0x310(0x08)
	None bActivated; // 0x318(0x01)
	None VehicleStandardGroupInfo; // 0x4e0(0x10)
	None EmptyBoxInfos; // 0x4f0(0x10)
	None DivisionBoxInfos; // 0x500(0x10)
	None AllBoxInfos; // 0x510(0x10)
	None ConnectedWheelIndices; // 0x550(0x10)
	None OriginalAttachBoneName; // 0x560(0x08)
	None SurfaceFxBoneName; // 0x568(0x08)
	None SurfaceFxScale; // 0x570(0x0c)
	None SurfaceFxMaxDrawDistance; // 0x57c(0x04)
	None SurfaceFxComponent; // 0x580(0x08)
	None WreckedEffect; // 0x588(0x08)
	None WreckedSound; // 0x590(0x08)
	None OwnerVehicle; // 0x5a0(0x08)
	None DriftingLatStiffMaxLoadCurve; // 0xf0(0x08)
	None DriftingLatStiffValueCurve; // 0xf8(0x08)
	None DriftingLongStiffValueCurve; // 0x100(0x08)
	None bUseDriftingLifeTime; // 0x108(0x01)
	None DriftingLifeTime; // 0x10c(0x04)
	None VehicleMovement; // 0x120(0x08)
	None IsShow; // 0x248(0x01)
	None Fuel; // 0x24c(0x04)
	None hp; // 0x250(0x04)
	None Speed; // 0x258(0x10)
	None Name; // 0x268(0x10)
	None SeatInfoList; // 0x278(0x10)
	None WheelInfoList; // 0x288(0x10)
	None Vehicle; // 0x298(0x08)
	None Table; // 0x1a0(0x08)
	None InWaterParticle; // 0x358(0x08)
	None BitDataArray; // 0x30(0x10)
	None WorldSize; // 0x40(0x08)
	None WorldCenter; // 0x48(0x08)
	None BaseMapSize; // 0x50(0x08)
	None WeightMapRadiusCheckCount; // 0x58(0x04)
	None HIWindowComponents; // 0x320(0x10)
	None WindowComponents; // 0x330(0x10)
	None bCreateAudioPortal; // 0x340(0x01)
	None SpawnedAudioPortalsOnClient; // 0x348(0x10)
	None redzone; // 0x248(0x08)
	None Nuclear; // 0x250(0x08)
	None FindLandingPosition; // 0x258(0x08)
	None FindLandingPositionTry; // 0x260(0x08)
	None SearchInstinct; // 0x268(0x08)
	None SpatialSense; // 0x270(0x08)
	None CarScan; // 0x278(0x08)
	None CarScanTry; // 0x280(0x08)
	None UltimateVehicle; // 0x288(0x08)
	None NitroBoom; // 0x290(0x08)
	None TransportAircraft; // 0x298(0x08)
	None TransportDropBox; // 0x2a0(0x08)
	None MaterialItem; // 0x2a8(0x08)
	None Amplifier; // 0x2b0(0x08)
	None HeartBeatSensor; // 0x2b8(0x08)
	None Trap; // 0x2c0(0x08)
	None Driver_Sounds; // 0x2c8(0x08)
	None LocalPing; // 0x2d0(0x08)
	None ExpertWeaponItem; // 0x2d8(0x08)
	None Img_RedZone; // 0x2e0(0x08)
	None Img_Nuclear; // 0x2e8(0x08)
	None Img_FindLandingPosition; // 0x2f0(0x08)
	None Img_FindLandingPositionTry; // 0x2f8(0x08)
	None Img_FindLandingPositionAnim; // 0x300(0x08)
	None Img_SearchInstinct; // 0x308(0x08)
	None Img_SpatialSense; // 0x310(0x08)
	None Img_CarScan; // 0x318(0x08)
	None Img_CarScanTry; // 0x320(0x08)
	None Img_UltimateVehicle; // 0x328(0x08)
	None Img_NitroBoom; // 0x330(0x08)
	None Img_Amplifier; // 0x338(0x08)
	None Img_HeartBeatSensor; // 0x340(0x08)
	None Img_DropBoxCap_Open; // 0x348(0x08)
	None Img_DropBoxCap_Close; // 0x350(0x08)
	None LocalPingImg; // 0x358(0x08)
	None Img_DropBoxChute; // 0x360(0x08)
	None IconImage; // 0x368(0x08)
	None IconImage_2; // 0x370(0x08)
	None Overlay_TransportAircraft; // 0x378(0x08)
	None WidgetType; // 0x380(0x08)
	None WidgetSwitcher_TrapState; // 0x388(0x08)
	None WidgetSwitcher_Icon; // 0x390(0x08)
	None WidgetSwitcher_Icon2; // 0x398(0x08)
	None WidgetSwitcher_DropBoxCap; // 0x3a0(0x08)
	None WidgetSwitcher_Icon2_2; // 0x3a8(0x08)
	None Anim_RedZone; // 0x3b0(0x08)
	None Anim_Nuclear; // 0x3b8(0x08)
	None Anim_FindLandingPosition; // 0x3c0(0x08)
	None Anim_SearchInstinct; // 0x3c8(0x08)
	None Anim_SpatialSense; // 0x3d0(0x08)
	None Anim_Propeller; // 0x3d8(0x08)
	None Anim_TrapStick; // 0x3e0(0x08)
	None Anim_Trapped; // 0x3e8(0x08)
	None Anim_DriverSounds; // 0x3f0(0x08)
	None AudioEvent_ActiveTrap; // 0x3f8(0x08)
	None TimerHandle_UpdateLocation; // 0x400(0x08)
	None TimerHandle_CheckValid; // 0x418(0x08)
	None TimerHandle_OnAnimationFinished; // 0x430(0x08)
	None TimerHandle_OnAutoRemove; // 0x438(0x08)
	None SpatialSenseDuration; // 0x440(0x04)
	None CurrentWidget; // 0x448(0x08)
	None CurrentImg; // 0x450(0x08)
	None CurrentAnim; // 0x458(0x08)
	None AreaWidgetType; // 0x460(0x01)
	None AreaWidgetInfo; // 0x468(0x88)
	None MapCompWidgetRef; // 0x4f0(0x08)
	None MainWidgetRef; // 0x4f8(0x08)
	None PlayerHUDRef; // 0x500(0x08)
	None CarScanTime; // 0x508(0x04)
	None OnChangeWorldMapZoomLevelDelegate; // 0x250(0x10)
	None ServerTestPoint; // 0x260(0x58)
	None bUseRedZone; // 0x498(0x01)
	None SeaLevelZ; // 0x49c(0x04)
	None ProjectileHeightLimit; // 0x4a0(0x04)
	None bUseMatchEndSequence; // 0x4a4(0x01)
	None MatchEndSequenceRef; // 0x4a8(0x08)
	None AudioEventDescription; // 0x4b0(0x08)
	None WorldCenter; // 0x248(0x0c)
	None WorldSize; // 0x254(0x08)
	None BaseMapSize; // 0x25c(0x08)
	None PresetInstances; // 0x48(0x10)
	None Materials; // 0x28(0x10)
	None Settings; // 0x40(0x5c0)
	None MaterialControllers; // 0x600(0x10)
	None bBindItem; // 0xc0(0x01)
	None bKeepItem; // 0xc1(0x01)
	None NumInventorySlots; // 0xc4(0x04)
	None BackPackItems; // 0xc8(0x10)
	None BootyBoxClass; // 0xd8(0x08)
	None CurrentlyHealthItemCount; // 0xe0(0x04)
	None OverrideItems; // 0xe8(0x50)
	None MaxLoad; // 0x138(0x04)
	None ReplicationBackPackItems; // 0x190(0x10)
	None CurrentlyLoaded; // 0x1a0(0x04)
	None SortType; // 0x1a4(0x04)
	None bNoDropItem; // 0x1a8(0x01)
	None bNoDropYesBox; // 0x1a9(0x01)
	None LoadInventoryFromServer; // 0x1b0(0x10)
	None ChangeRepBackpackItemDelegate; // 0x1c0(0x10)
	None ChangeBackpackItemDelegate; // 0x1d0(0x10)
	None NotEnoughSpaceDelegate; // 0x1e0(0x10)
	None InventoryItemSortOrder; // 0x230(0x08)
	None InventoryItemSortOrderSoftAsset; // 0x238(0x28)
	None PickupItemSortOrder; // 0x260(0x08)
	None PickupItemSortOrderSoftAsset; // 0x268(0x28)
	None Watchers; // 0x298(0x10)
	None OwningPawn; // 0xc0(0x08)
	None ItemInfo; // 0xc8(0x98)
	None OriginItemIndex; // 0x160(0x02)
	None EquippedSlotIndex; // 0x164(0x04)
	None AttachedSlotIndex; // 0x168(0x04)
	None PopupManager; // 0xb0(0x08)
	None MoveWorldMapToPlayer; // 0xb8(0x01)
	None SaveIgnoredWidgets; // 0xc0(0x10)
	None IgnoredWidgets; // 0xe0(0x10)
	None AdjustmentTargets; // 0x4e0(0x01)
	None Data; // 0x28(0x05)
	None SortOrder; // 0x30(0x50)
	None OwnerPawn; // 0xc0(0x08)
	None LadderState; // 0xc8(0x01)
	None UsingLadder; // 0xd0(0x08)
	None IsPawnOnLadder; // 0xd8(0x01)
	None IsTopStart; // 0xd9(0x01)
	None LadderPos; // 0xdc(0x04)
	None LadderInteractionType; // 0xe0(0x01)
	None LadderSlideLoopEvent; // 0xe8(0x08)
	None LadderSlideStopEvent; // 0xf0(0x08)
	None PreMaxFlySpeed; // 0x100(0x04)
	None PreBrakingDecelerationFlying; // 0x104(0x04)
	None DefaultMaxFlySpeed; // 0x108(0x04)
	None SpeedScaleByBuff; // 0x10c(0x04)
	None WantedBrakingDecelerationFlying; // 0x110(0x04)
	None SprintingSpeedScale; // 0x114(0x04)
	None SlidingSpeedScale; // 0x118(0x04)
	None IsSnapping; // 0x11c(0x01)
	None IsDirectSnap; // 0x11d(0x01)
	None SnappingSpeed; // 0x120(0x04)
	None SnappingTime; // 0x124(0x04)
	None MinSnappingTime; // 0x128(0x04)
	None CrntSnappingTime; // 0x12c(0x04)
	None OriginLocation; // 0x130(0x0c)
	None TargetLocation; // 0x13c(0x0c)
	None OriginRotation; // 0x148(0x0c)
	None TargetRotation; // 0x154(0x0c)
	None IsMoveInMotion; // 0x160(0x01)
	None AnimBlendTime; // 0x164(0x04)
	None AM_DownIn; // 0x168(0x08)
	None AM_UpIn; // 0x170(0x08)
	None AM_DownOut; // 0x178(0x08)
	None AM_DownOut_R; // 0x180(0x08)
	None AM_UpOut; // 0x188(0x08)
	None AM_UpOut_R; // 0x190(0x08)
	None AM_SlideOut; // 0x198(0x08)
	None CrntMontage; // 0x1a0(0x08)
	None CurveVector_DownIn; // 0x1a8(0x08)
	None CurveVector_UpIn; // 0x1b0(0x08)
	None CurveVector_DownOut; // 0x1b8(0x08)
	None CurveVector_DownOut_R; // 0x1c0(0x08)
	None CurveVector_UpOut; // 0x1c8(0x08)
	None CurveVector_UpOut_R; // 0x1d0(0x08)
	None CurveVector_SlideOut; // 0x1d8(0x08)
	None CrntCurveVector; // 0x1e0(0x08)
	None Curve_CameraIn; // 0x1e8(0x08)
	None Curve_CameraInHeight; // 0x1f0(0x08)
	None Curve_CameraSecond; // 0x1f8(0x08)
	None Curve_CameraSecondHeight; // 0x200(0x08)
	None Curve_CameraOut; // 0x208(0x08)
	None RelatedMID; // 0x30(0x08)
	None DelayTimeToSleep; // 0xb0(0x04)
	None DrawDebugTrace; // 0xb1(0x01)
	None ShowLog; // 0xb2(0x01)
	None ParkourDebugTypes; // 0xb3(0x01)
	None bNoCameraMove; // 0xb4(0x01)
	None DefaultParkourWindowComponent; // 0xb8(0x08)
	None bOffReplicateMovement; // 0xc0(0x01)
	None bEnableMidJump; // 0xc1(0x01)
	None bNoInputMove; // 0xc2(0x01)
	None ParkourSocketNames; // 0xc8(0x10)
	None TraceObjectTypes; // 0xd8(0x10)
	None CheckWide; // 0xe8(0x04)
	None WindowCheckWide; // 0xec(0x04)
	None LimiteNormalAngle; // 0xf0(0x04)
	None DetectNormalAngle; // 0xf4(0x04)
	None BottomCheckPlus; // 0xf8(0x04)
	None ThicknessCheckPlus; // 0xfc(0x04)
	None WindowBreakRange; // 0x100(0x04)
	None SprintSpeed; // 0x104(0x04)
	None BaseTraceLength; // 0x108(0x04)
	None SprintTraceLength; // 0x10c(0x04)
	None CheckHoldRadius; // 0x110(0x04)
	None CheckHoldDepth; // 0x114(0x04)
	None BaseJumpOverThickness; // 0x118(0x04)
	None SprintJumpOverThickness; // 0x11c(0x04)
	None JumpOverPlaceDepth; // 0x120(0x04)
	None ClimbUpHighHeight; // 0x124(0x04)
	None ClimbUpBaseHeight; // 0x128(0x04)
	None ClimbUpFallingHeight; // 0x12c(0x04)
	None SlideSpeed; // 0x130(0x04)
	None LedgeGrabTranceLength; // 0x134(0x04)
	None LedgeGrabMinHeight; // 0x138(0x04)
	None LedgeGrabMinAttachTime; // 0x13c(0x04)
	None BackDistance; // 0x140(0x04)
	None DisableCollisionTime; // 0x144(0x04)
	None SkipJumpVector; // 0x148(0x0c)
	None InnerEdgeRange; // 0x154(0x04)
	None ArmIKPosition; // 0x158(0x0c)
	None Curve_SlideSpeed; // 0x168(0x08)
	None Curve_CameraIn; // 0x170(0x08)
	None Curve_CameraInHeight; // 0x178(0x08)
	None Curve_CameraSecond; // 0x180(0x08)
	None Curve_CameraSecondHeight; // 0x188(0x08)
	None Curve_CameraOut; // 0x190(0x08)
	None ClimbTargetPosition; // 0x198(0x0c)
	None ClimbWallNormal; // 0x1a4(0x0c)
	None LastWallThickness; // 0x1b0(0x04)
	None bClimbing; // 0x1b4(0x01)
	None bRevertingClimb; // 0x1b5(0x01)
	None bCanRevertClimb; // 0x1b6(0x01)
	None bBreakWindow; // 0x1b7(0x01)
	None bCanJump; // 0x1b8(0x01)
	None bArmIK; // 0x1b9(0x01)
	None ClimbOverDatas; // 0x1c0(0x10)
	None ClimbUpDatas; // 0x1d0(0x10)
	None SprintOverDatas; // 0x1e0(0x10)
	None SprintUpDatas; // 0x1f0(0x10)
	None LedgeGrabClimbOverDatas; // 0x200(0x10)
	None LedgeGrabClimbUpDatas; // 0x210(0x10)
	None LedgeGrabBlockedClimbOverDatas; // 0x220(0x10)
	None LedgeGrabBlockedClimbUpDatas; // 0x230(0x10)
	None GroundingDatas; // 0x240(0x10)
	None SlideData; // 0x250(0x98)
	None OverrideDatas; // 0x2e8(0x50)
	None bUseFootInParkour; // 0x388(0x01)
	None bUseDummyInParkour; // 0x389(0x01)
	None bIsSlideOn; // 0x38a(0x01)
	None ParkourEvents; // 0x5c0(0x10)
	None ClimbOverDatas; // 0x238(0x10)
	None ClimbUpDatas; // 0x248(0x10)
	None SprintOverDatas; // 0x258(0x10)
	None SprintUpDatas; // 0x268(0x10)
	None GroundingDatas; // 0x278(0x10)
	None OnChangeCurrentWeaponDelegate; // 0x2b0(0x10)
	None OnChangeWeaponAttachmentsDelgate; // 0x2c0(0x10)
	None OnChangeWeaponsDelegate; // 0x2d0(0x10)
	None OnChangeWearableItemDelegate; // 0x2e0(0x10)
	None OnChangeMaterialDelegate; // 0x2f0(0x10)
	None DefaultWeaponSlots; // 0x320(0x10)
	None AllowedWeaponSlots; // 0x330(0x10)
	None WearableItemSlots; // 0x340(0x10)
	None KeepedItemSlots; // 0x350(0x10)
	None DefualtKeepedItemSlotCount; // 0x360(0x04)
	None MaterialItemSlots; // 0x368(0x10)
	None DefaultMaterialItemSlotCount; // 0x378(0x04)
	None TopArmorName; // 0x37c(0x08)
	None TopHelmetName; // 0x384(0x08)
	None TopBagName; // 0x38c(0x08)
	None CombinableRecipeList; // 0x398(0x10)
	None PrimaryRecipeList; // 0x3a8(0x10)
	None PrimaryMaterialList; // 0x3b8(0x50)
	None PrimaryMaterialTargetTextList; // 0x408(0x50)
	None PickupTraceDistance; // 0x4f8(0x04)
	None CurrentWearableKeys; // 0x530(0x50)
	None CompleteCombineItemList; // 0x580(0x10)
	None WeaponActorSlots; // 0x590(0x10)
	None CurrentWeapon; // 0x5a0(0x08)
	None PendingWeapon; // 0x5a8(0x08)
	None CurrentAbilityWeapon; // 0x5b0(0x08)
	None bPendingEquipWeapon; // 0x5b8(0x01)
	None bPendingUnEquipWeapon; // 0x5b9(0x01)
	None bEquippingWeapon; // 0x5ba(0x01)
	None DropToFloorSound; // 0x5c0(0x08)
	None NewWeaponSlotArray; // 0x5c8(0x10)
	None StatupAnimData; // 0x5e8(0x14)
	None CurrentEquipAnimSlot; // 0x600(0x10)
	None bIsPlayingEquipAnimMontage; // 0x610(0x01)
	None InventorySettingData; // 0x611(0x05)
	None LoadedClasses; // 0x618(0x10)
	None BravoHotelThrowingWeaponItemInfoList; // 0x628(0x10)
	None TryPickUpMaterialItemKey; // 0x698(0x08)
	None ChangeEquipResultList; // 0x6a0(0x10)
	None PaidGold; // 0x6b0(0x04)
	None CurrentGold; // 0x6b4(0x04)
	None DefaultItemDropRateRange; // 0x6b8(0x08)
	None ItemDropRateRangeByRank; // 0x6c0(0x50)
	None ItemDropRateByRank; // 0x710(0x08)
	None ItemDropRateByTime; // 0x718(0x08)
	None ItemDropDistance; // 0x720(0x08)
	None bDropWeaponWithAttachment; // 0x728(0x01)
	None bDropAttachmentToGroundWhenDropWeapon; // 0x729(0x01)
	None MaterialPropertiesTable; // 0xf0(0x28)
	None InitialConditions; // 0x118(0x4c)
	None InitialConditionHistory; // 0x168(0x10)
	None TrajectoryNumber; // 0x178(0x04)
	None CurrentPenetrationDeceleration; // 0x17c(0x04)
	None AngularVelocity; // 0x180(0x0c)
	None ObjectsPenetrated; // 0x190(0x10)
	None IgnoreActors; // 0x1a0(0x10)
	None TerminalVelocity; // 0x1b0(0x04)
	None CurrentGravity; // 0x1b4(0x04)
	None bUseEmbed; // 0x1b8(0x01)
	None EmbedDepth; // 0x1bc(0x04)
	None ImpulseScale; // 0x1c0(0x04)
	None InitialSpeed; // 0x1c4(0x04)
	None MaxSpeed; // 0x1c8(0x04)
	None PenetrationModifier; // 0x1cc(0x04)
	None bRotationFollowsVelocity; // 0x1d0(0x01)
	None AngularVelocityMin; // 0x1d4(0x0c)
	None AngularVelocityMax; // 0x1e0(0x0c)
	None ProjectileBehavior; // 0x1ec(0x01)
	None bInitialVelocityInLocalSpace; // 0x1f0(0x01)
	None bForceSubStepping; // 0x1f0(0x01)
	None bDrawDebugLine; // 0x1f0(0x01)
	None bDebugLineColorFromVelocity; // 0x1f0(0x01)
	None DebugLineThickness; // 0x1f4(0x04)
	None DebugLineDuration; // 0x1f8(0x04)
	None DebugLineAuxiliaryColor; // 0x1fc(0x04)
	None Bounciness; // 0x200(0x04)
	None bUseFriction; // 0x204(0x01)
	None Friction; // 0x208(0x04)
	None FrictionVelocityLimit; // 0x20c(0x04)
	None BounceVelocityMin; // 0x210(0x04)
	None OnProjectileAnyHit; // 0x218(0x10)
	None OnProjectileBounce; // 0x228(0x10)
	None OnProjectilePenetrate; // 0x238(0x10)
	None OnPenetrationExit; // 0x248(0x10)
	None OnProjectileStop; // 0x258(0x10)
	None OnProjectileEmbed; // 0x268(0x10)
	None OnComponentBeginOverlap; // 0x278(0x10)
	None RandStream; // 0x288(0x08)
	None bIsFluidFriction; // 0x290(0x01)
	None bInFluid; // 0x291(0x01)
	None FluidFriction; // 0x294(0x04)
	None MaxSimulationTimeStep; // 0x298(0x04)
	None ScenarioComponent; // 0x578(0x08)
	None DefaultCharacterDeck; // 0x580(0x08)
	None OnSuccess; // 0x30(0x10)
	None OnFailure; // 0x40(0x10)
	None OnTeamPlayerIndexChanged; // 0xb0(0x10)
	None OnWidgetUpdateDelegate; // 0xc0(0x10)
	None TeamPlayerIndex; // 0xd0(0x04)
	None OldTargetPlayerState; // 0xd8(0x08)
	None HealthPoint; // 0x5d8(0x04)
	None MaxHealthPoint; // 0x5dc(0x04)
	None DropBoxActorClass; // 0x5e0(0x08)
	None FlightSpeed; // 0x5e8(0x04)
	None HeightSpeed; // 0x5ec(0x04)
	None FlightHeight; // 0x5f0(0x04)
	None SpawnDistance; // 0x5f4(0x04)
	None DamagedEffectComponent; // 0x600(0x08)
	None AudioComponent; // 0x608(0x08)
	None DamagedLevelRatios; // 0x610(0x10)
	None DamagedEffects; // 0x620(0x10)
	None DamagedSounds; // 0x630(0x10)
	None DamagedEffectSocketName; // 0x640(0x08)
	None ExplosionEffect; // 0x648(0x08)
	None ExplosionSound; // 0x650(0x08)
	None ExplosionEffectSocketName; // 0x658(0x08)
	None FlyingSoundHandle; // 0x660(0x04)
	None DropDistances; // 0x6b0(0x10)
	None DropBoxes; // 0x6c0(0x10)
	None SoftMeshPtr; // 0x550(0x28)
	None SoftMeshPtr; // 0xb90(0x28)
	None OwningWeapon; // 0xb0(0x08)
	None FrontSight; // 0xb8(0x08)
	None Rail; // 0xc0(0x08)
	None grip; // 0xc8(0x08)
	None magazine; // 0xd0(0x08)
	None ButtStock; // 0xd8(0x08)
	None Tactical; // 0xe0(0x08)
	None muzzledevice; // 0xe8(0x08)
	None Barrel; // 0xf0(0x08)
	None bIsInitialized; // 0x258(0x01)
	None GripType; // 0x259(0x01)
	None MagazineType; // 0x25a(0x01)
	None StockType; // 0x25b(0x01)
	None MuzzleType; // 0x25c(0x01)
	None BarrelType; // 0x25d(0x01)
	None FPSK_SightAttachmentList; // 0x2a0(0x50)
	None FPSK_SightClassList; // 0x2f0(0x50)
	None AttachmentIndices; // 0x170(0x10)
	None FilmbackSettings; // 0x880(0x0c)
	None Filmback; // 0x88c(0x0c)
	None LensSettings; // 0x898(0x18)
	None FocusSettings; // 0x8b0(0x58)
	None CurrentFocalLength; // 0x908(0x04)
	None CurrentAperture; // 0x90c(0x04)
	None CurrentFocusDistance; // 0x910(0x04)
	None FilmbackPresets; // 0x920(0x10)
	None LensPresets; // 0x930(0x10)
	None DefaultFilmbackPresetName; // 0x940(0x10)
	None DefaultFilmbackPreset; // 0x950(0x10)
	None DefaultLensPresetName; // 0x960(0x10)
	None DefaultLensFocalLength; // 0x970(0x04)
	None DefaultLensFStop; // 0x974(0x04)
	None CranePitch; // 0x310(0x04)
	None CraneYaw; // 0x314(0x04)
	None CraneArmLength; // 0x318(0x04)
	None bLockMountPitch; // 0x31c(0x01)
	None bLockMountYaw; // 0x31d(0x01)
	None TransformComponent; // 0x320(0x08)
	None CraneYawControl; // 0x328(0x08)
	None CranePitchControl; // 0x330(0x08)
	None CraneCameraMount; // 0x338(0x08)
	None CurrentPositionOnRail; // 0x310(0x04)
	None bLockOrientationToRail; // 0x314(0x01)
	None TransformComponent; // 0x318(0x08)
	None RailSplineComponent; // 0x320(0x08)
	None RailCameraMount; // 0x328(0x08)
	None LookatTrackingSettings; // 0x900(0x50)
	None UberGraphFrame; // 0x248(0x08)
	None Canvas_Recipe1; // 0x250(0x08)
	None Canvas_Recipe2; // 0x258(0x08)
	None UW-Lobby_Craft_Recipe_Weapon; // 0x260(0x08)
	None UW-Lobby_Weapon_Recipe_Item_2; // 0x268(0x08)
	None UW-Lobby_Weapon_Recipe_Item_3; // 0x270(0x08)
	None UW-Lobby_Weapon_Recipe_Item_4; // 0x278(0x08)
	None UW-Lobby_Weapon_Recipe_Item_5; // 0x280(0x08)
	None UW-Lobby_Weapon_Recipe_Item_6; // 0x288(0x08)
	None UW-Lobby_Weapon_Recipe_Item_7; // 0x290(0x08)
	None UW-Lobby_Weapon_Recipe_Item_8; // 0x298(0x08)
	None UW-Lobby_Weapon_Recipe_Item_9; // 0x2a0(0x08)
	None UW-Lobby_Weapon_Recipe_Item_10; // 0x2a8(0x08)
	None UW-Lobby_Weapon_Recipe_Item_11; // 0x2b0(0x08)
	None WidgetSwitcher_68; // 0x2b8(0x08)
	None Recipe_ItemArray; // 0x2c0(0x10)
	None Recipe_ItemArray2; // 0x2d0(0x10)
	None HasWeapon; // 0x2e0(0x01)
	None ArmoryInputRef; // 0x2e8(0x08)
	None CurrentOpacity; // 0x2f0(0x04)
	None PatchService; // 0x268(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None btn_Cancel; // 0x250(0x08)
	None btn_Cancel_3; // 0x258(0x08)
	None btn_OK; // 0x260(0x08)
	None HorizontalBox_WeaponList; // 0x268(0x08)
	None Image_68; // 0x270(0x08)
	None Image_128; // 0x278(0x08)
	None UW-Lobby_Craft_WeaponSelect_Slot; // 0x280(0x08)
	None UW-Lobby_Craft_WeaponSelect_Slot_2; // 0x288(0x08)
	None UW-Lobby_Craft_WeaponSelect_Slot_3; // 0x290(0x08)
	None EventDispatcher_RequestItemCraft; // 0x298(0x10)
	None SelectedWidget; // 0x2a8(0x08)
	None EventDispatcher_Cancel; // 0x2b0(0x10)
	None CustomStyle; // 0x28(0x08)
	None ButtonStyle; // 0x30(0x278)
	None CheckBoxStyle; // 0x30(0x580)
	None ComboBoxStyle; // 0x30(0x3f0)
	None ComboButtonStyle; // 0x30(0x3b8)
	None EditableTextBoxStyle; // 0x30(0x7f0)
	None EditableTextStyle; // 0x30(0x218)
	None ProgressBarStyle; // 0x30(0x1a0)
	None ScrollBarStyle; // 0x30(0x4d0)
	None ScrollBoxStyle; // 0x30(0x228)
	None bExplicitCanvasChildZOrder; // 0x28(0x01)
	None SpinBoxStyle; // 0x30(0x2e8)
	None TextBlockStyle; // 0x30(0x268)
	None Look Horizontal Sensitivity; // 0x120(0x04)
	None Look Vertical Sensitivity; // 0x124(0x04)
	None Look Horizontal Invert; // 0x128(0x01)
	None Look Vertical Invert; // 0x129(0x01)
	None Game Settings Interface; // 0x130(0x10)
	None Save File Name; // 0x140(0x10)
	None Save File User Index; // 0x150(0x04)
	None AudioEmittors; // 0x158(0x10)
	None Audio Multiplier Master; // 0x168(0x04)
	None Audio Multiplier Music; // 0x16c(0x04)
	None Audio Multiplier Voice; // 0x170(0x04)
	None Audio Multiplier Effect; // 0x174(0x04)
	None Audio Multiplier Ambient; // 0x178(0x04)
	None Audio Multiplier UI; // 0x17c(0x04)
	None Volume Master; // 0x180(0x04)
	None Volume Music; // 0x184(0x04)
	None Volume Voice; // 0x188(0x04)
	None Volume Effect; // 0x18c(0x04)
	None Volume Ambient; // 0x190(0x04)
	None Video X Resolution; // 0x194(0x04)
	None Video Y Resolution; // 0x198(0x04)
	None Camera List; // 0x1a0(0x10)
	None Screen Mode; // 0x1b0(0x01)
	None Resolution Scale Quality; // 0x1b4(0x04)
	None View Distance Scale; // 0x1b8(0x04)
	None Anti Aliasing Quality; // 0x1bc(0x04)
	None Post Processing Quality; // 0x1c0(0x04)
	None Shadow Quality; // 0x1c4(0x04)
	None Texture Quality; // 0x1c8(0x04)
	None Effect Quality; // 0x1cc(0x04)
	None Foliage Quality; // 0x1d0(0x04)
	None Field Of View FOV; // 0x1d4(0x04)
	None Motion Blur Strength; // 0x1d8(0x04)
	None VSync Enabled; // 0x1dc(0x01)
	None My Custom Checkbox; // 0x1dd(0x01)
	None My Custom RadioBox; // 0x1e0(0x04)
	None My Custom Slider; // 0x1e4(0x04)
	None Bloom Intensity; // 0x1e8(0x04)
	None Gamma Intensity; // 0x1ec(0x04)
	None Gain Intensity; // 0x1f0(0x04)
	None Previous Setting State; // 0x1f8(0x08)
	None My Custom Combobox; // 0x200(0x10)
	None Current Frame Time; // 0x210(0x04)
	None Key Actions; // 0x218(0x10)
	None Input Float Axis List; // 0x228(0x10)
	None Saved Key Inputs; // 0x238(0x10)
	None Volume UI; // 0x248(0x04)
	None Old ScreenMode State; // 0x24c(0x01)
	None TemporalAAFilterSize; // 0x250(0x04)
	None TemporalAACatmullRom; // 0x254(0x01)
	None TemporalAAPauseCorrect; // 0x255(0x01)
	None TemporalAACurrentFrameWeight; // 0x258(0x04)
	None TemporalAASamples; // 0x25c(0x04)
	None TonemapperSharpen; // 0x260(0x04)
	None MinBrightness; // 0x264(0x04)
	None MaxBrightness; // 0x268(0x04)
	None Contrast; // 0x26c(0x04)
	None PostProcessVolume; // 0x270(0x01)
	None ScreenModeChange; // 0x271(0x01)
	None FilmToe; // 0x272(0x01)
	None ColorGrading Global Gamma; // 0x274(0x04)
	None ClearFog; // 0x278(0x01)
	None ViewDistanceQuality; // 0x27c(0x04)
	None ScalabilityQuality; // 0x280(0x04)
	None CurrentFileVersion; // 0x284(0x04)
	None UpdateFileVersion; // 0x288(0x04)
	None Smooth Frame Enabled; // 0x28c(0x01)
	None MaxScrollbackSize; // 0x28(0x04)
	None ManualAutoCompleteList; // 0x30(0x10)
	None AutoCompleteMapPaths; // 0x40(0x10)
	None BackgroundOpacityPercentage; // 0x50(0x04)
	None bOrderTopToBottom; // 0x54(0x01)
	None bDisplayHelpInAutoComplete; // 0x55(0x01)
	None InputColor; // 0x58(0x04)
	None HistoryColor; // 0x5c(0x04)
	None AutoCompleteCommandColor; // 0x60(0x04)
	None AutoCompleteCVarColor; // 0x64(0x04)
	None AutoCompleteFadedColor; // 0x68(0x04)
	None LocalMapOptions; // 0x28(0x10)
	None TransitionMap; // 0x38(0x18)
	None bUseSplitscreen; // 0x50(0x01)
	None TwoPlayerSplitscreenLayout; // 0x51(0x01)
	None ThreePlayerSplitscreenLayout; // 0x52(0x01)
	None FourPlayerSplitscreenLayout; // 0x53(0x01)
	None bOffsetPlayerGamepadIds; // 0x54(0x01)
	None GameInstanceClass; // 0x58(0x18)
	None ServerGameInstanceClass; // 0x70(0x18)
	None GameDefaultMap; // 0x88(0x18)
	None ServerDefaultMap; // 0xa0(0x18)
	None GlobalDefaultGameMode; // 0xb8(0x18)
	None GlobalDefaultServerGameMode; // 0xd0(0x18)
	None GameModeMapPrefixes; // 0xe8(0x10)
	None GameModeClassAliases; // 0xf8(0x10)
	None MinDynamicBandwidth; // 0x28(0x04)
	None MaxDynamicBandwidth; // 0x2c(0x04)
	None TotalNetBandwidth; // 0x30(0x04)
	None BadPingThreshold; // 0x34(0x04)
	None bIsStandbyCheckingEnabled; // 0x38(0x01)
	None StandbyRxCheatTime; // 0x3c(0x04)
	None StandbyTxCheatTime; // 0x40(0x04)
	None PercentMissingForRxStandby; // 0x44(0x04)
	None PercentMissingForTxStandby; // 0x48(0x04)
	None PercentForBadPing; // 0x4c(0x04)
	None JoinInProgressStandbyWaitTime; // 0x50(0x04)
	None MaxSpectators; // 0x28(0x04)
	None MaxPlayers; // 0x2c(0x04)
	None bRequiresPushToTalk; // 0x30(0x01)
	None CompanyName; // 0x28(0x10)
	None CompanyDistinguishedName; // 0x38(0x10)
	None CopyrightNotice; // 0x48(0x10)
	None Description; // 0x58(0x10)
	None Homepage; // 0x68(0x10)
	None LicensingTerms; // 0x78(0x10)
	None PrivacyPolicy; // 0x88(0x10)
	None ProjectID; // 0x98(0x10)
	None ProjectName; // 0xa8(0x10)
	None ProjectVersion; // 0xb8(0x10)
	None SupportContact; // 0xc8(0x10)
	None ProjectDisplayedTitle; // 0xd8(0x18)
	None ProjectDebugTitleInfo; // 0xf0(0x18)
	None bShouldWindowPreserveAspectRatio; // 0x108(0x01)
	None bUseBorderlessWindow; // 0x109(0x01)
	None bStartInVR; // 0x10a(0x01)
	None bStartInAR; // 0x10b(0x01)
	None bSupportAR; // 0x10c(0x01)
	None bAllowWindowResize; // 0x10d(0x01)
	None bAllowClose; // 0x10e(0x01)
	None bAllowMaximize; // 0x10f(0x01)
	None bAllowMinimize; // 0x110(0x01)
	None bShowHUD; // 0x28(0x01)
	None DebugDisplay; // 0x30(0x10)
	None OnMeshTrackerUpdated; // 0x238(0x10)
	None ScanWorld; // 0x248(0x01)
	None RequestNormals; // 0x249(0x01)
	None RequestVertexConfidence; // 0x24a(0x01)
	None VertexColorMode; // 0x24b(0x01)
	None BlockVertexColors; // 0x250(0x10)
	None VertexColorFromConfidenceZero; // 0x260(0x10)
	None VertexColorFromConfidenceOne; // 0x270(0x10)
	None UpdateInterval; // 0x280(0x04)
	None MRMesh; // 0x288(0x08)
	None Material; // 0x4c0(0x08)
	None bCreateMeshProxySections; // 0x4c8(0x01)
	None bUpdateNavMeshOnMeshUpdate; // 0x4c9(0x01)
	None bNeverCreateCollisionMesh; // 0x4ca(0x01)
	None CachedBodySetup; // 0x4d0(0x08)
	None BodySetups; // 0x4d8(0x10)
	None WireframeMaterial; // 0x4e8(0x08)
	None ManifestFileVersion; // 0x28(0x01)
	None bIsFileData; // 0x29(0x01)
	None AppID; // 0x2c(0x04)
	None AppName; // 0x30(0x10)
	None BuildVersion; // 0x40(0x10)
	None LaunchExe; // 0x50(0x10)
	None LaunchCommand; // 0x60(0x10)
	None PrereqIds; // 0x70(0x50)
	None PrereqName; // 0xc0(0x10)
	None PrereqPath; // 0xd0(0x10)
	None PrereqArgs; // 0xe0(0x10)
	None FileManifestList; // 0xf0(0x10)
	None ChunkList; // 0x100(0x10)
	None CustomFields; // 0x110(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Spectator_Ani; // 0x250(0x08)
	None Button_Report; // 0x258(0x08)
	None Canvas_Finding; // 0x260(0x08)
	None Canvas_Target; // 0x268(0x08)
	None Deco; // 0x270(0x08)
	None Image_351; // 0x278(0x08)
	None IMG_ClassIcon; // 0x280(0x08)
	None NickName; // 0x288(0x08)
	None Overlay_Report; // 0x290(0x08)
	None ReportDescriptionText; // 0x298(0x08)
	None Text_Report; // 0x2a0(0x08)
	None TextBlock_3; // 0x2a8(0x08)
	None TextBlock_208; // 0x2b0(0x08)
	None VerticalBox_Report; // 0x2b8(0x08)
	None WidgetSwitcher_136; // 0x2c0(0x08)
	None IsReportAbleDateTime; // 0x2c8(0x01)
	None TargetPlayerState; // 0x2d0(0x08)
	None UberGraphFrame; // 0x308(0x08)
	None CoherentUIGTWidget_90; // 0x310(0x08)
	None UW-CustomizedCharacter; // 0x318(0x08)
	None CurrentSceneType; // 0x320(0x01)
	None ControlPointMeshComponent; // 0x310(0x08)
	None VirtualTextureMainPassMaxDrawDistance; // 0x550(0x04)
	None SplineComponent; // 0x310(0x08)
	None LandscapeGuid; // 0x318(0x10)
	None LandscapeSectionOffset; // 0x338(0x08)
	None MaxLODLevel; // 0x340(0x04)
	None LODDistanceFactor; // 0x344(0x04)
	None LODFalloff; // 0x348(0x01)
	None ComponentScreenSizeToUseSubSections; // 0x34c(0x04)
	None LOD0ScreenSize; // 0x350(0x04)
	None LOD0DistributionSetting; // 0x354(0x04)
	None LODDistributionSetting; // 0x358(0x04)
	None TessellationComponentScreenSize; // 0x35c(0x04)
	None UseTessellationComponentScreenSizeFalloff; // 0x360(0x01)
	None TessellationComponentScreenSizeFalloff; // 0x364(0x04)
	None OccluderGeometryLOD; // 0x368(0x04)
	None StaticLightingLOD; // 0x36c(0x04)
	None DefaultPhysMaterial; // 0x370(0x08)
	None StreamingDistanceMultiplier; // 0x378(0x04)
	None LandscapeMaterial; // 0x380(0x08)
	None LandscapeHoleMaterial; // 0x3a8(0x08)
	None LandscapeMaterialsOverride; // 0x3b0(0x10)
	None bMeshHoles; // 0x3c0(0x01)
	None MeshHolesMaxLod; // 0x3c1(0x01)
	None RuntimeVirtualTextures; // 0x3c8(0x10)
	None VirtualTextureNumLods; // 0x3d8(0x04)
	None VirtualTextureLodBias; // 0x3dc(0x04)
	None VirtualTextureRenderPassType; // 0x3e0(0x01)
	None NegativeZBoundsExtension; // 0x3e4(0x04)
	None PositiveZBoundsExtension; // 0x3e8(0x04)
	None LandscapeComponents; // 0x3f0(0x10)
	None CollisionComponents; // 0x400(0x10)
	None FoliageComponents; // 0x410(0x10)
	None bHasLandscapeGrass; // 0x484(0x01)
	None StaticLightingResolution; // 0x488(0x04)
	None bCastStaticShadow; // 0x48c(0x01)
	None bCastShadowAsTwoSided; // 0x48c(0x01)
	None bCastFarShadow; // 0x48c(0x01)
	None bAffectDistanceFieldLighting; // 0x490(0x01)
	None LightingChannels; // 0x491(0x01)
	None bUseMaterialPositionOffsetInStaticLighting; // 0x494(0x01)
	None bRenderCustomDepth; // 0x494(0x01)
	None CustomDepthStencilValue; // 0x498(0x04)
	None LDMaxDrawDistance; // 0x49c(0x04)
	None LightmassSettings; // 0x4a0(0x18)
	None CollisionMipLevel; // 0x4b8(0x04)
	None SimpleCollisionMipLevel; // 0x4bc(0x04)
	None CollisionThickness; // 0x4c0(0x04)
	None BodyInstance; // 0x4c8(0x190)
	None bGenerateOverlapEvents; // 0x658(0x01)
	None bBakeMaterialPositionOffsetIntoCollision; // 0x658(0x01)
	None ComponentSizeQuads; // 0x65c(0x04)
	None SubsectionSizeQuads; // 0x660(0x04)
	None NumSubsections; // 0x664(0x04)
	None bUsedForNavigation; // 0x668(0x01)
	None bFillCollisionUnderLandscapeForNavmesh; // 0x668(0x01)
	None bUseDynamicMaterialInstance; // 0x66c(0x01)
	None NavigationGeometryGatheringMode; // 0x66d(0x01)
	None bUseLandscapeForCullingInvisibleHLODVertices; // 0x66e(0x01)
	None bHasLayersContent; // 0x66f(0x01)
	None WeightmapUsageMap; // 0x670(0x50)
	None SectionBaseX; // 0x4b8(0x04)
	None SectionBaseY; // 0x4bc(0x04)
	None ComponentSizeQuads; // 0x4c0(0x04)
	None SubsectionSizeQuads; // 0x4c4(0x04)
	None NumSubsections; // 0x4c8(0x04)
	None OverrideMaterial; // 0x4d0(0x08)
	None OverrideHoleMaterial; // 0x4d8(0x08)
	None OverrideMaterials; // 0x4e0(0x10)
	None MaterialInstances; // 0x4f0(0x10)
	None MaterialInstancesDynamic; // 0x500(0x10)
	None LODIndexToMaterialIndex; // 0x510(0x10)
	None MaterialIndexToDisabledTessellationMaterial; // 0x520(0x10)
	None XYOffsetmapTexture; // 0x530(0x08)
	None WeightmapScaleBias; // 0x540(0x10)
	None WeightmapSubsectionOffset; // 0x550(0x04)
	None HeightmapScaleBias; // 0x560(0x10)
	None CachedLocalBox; // 0x570(0x1c)
	None CollisionComponent; // 0x58c(0x1c)
	None HeightmapTexture; // 0x5a8(0x08)
	None WeightmapLayerAllocations; // 0x5b0(0x10)
	None WeightmapTextures; // 0x5c0(0x10)
	None MapBuildDataId; // 0x5d0(0x10)
	None IrrelevantLights; // 0x5e0(0x10)
	None CollisionMipLevel; // 0x5f0(0x04)
	None SimpleCollisionMipLevel; // 0x5f4(0x04)
	None NegativeZBoundsExtension; // 0x5f8(0x04)
	None PositiveZBoundsExtension; // 0x5fc(0x04)
	None StaticLightingResolution; // 0x600(0x04)
	None ForcedLOD; // 0x604(0x04)
	None LODBias; // 0x608(0x04)
	None StateID; // 0x60c(0x10)
	None BakedTextureMaterialGuid; // 0x61c(0x10)
	None GIBakedBaseColorTexture; // 0x630(0x08)
	None MobileBlendableLayerMask; // 0x638(0x01)
	None MobileMaterialInterface; // 0x640(0x08)
	None MobileMaterialInterfaces; // 0x648(0x10)
	None MobileWeightmapTextures; // 0x658(0x10)
	None GrassVarieties; // 0x28(0x10)
	None bEnableDensityScaling; // 0x38(0x01)
	None GrassMesh; // 0x40(0x08)
	None GrassDensity; // 0x48(0x04)
	None PlacementJitter; // 0x4c(0x04)
	None StartCullDistance; // 0x50(0x04)
	None EndCullDistance; // 0x54(0x04)
	None RandomRotation; // 0x58(0x01)
	None AlignToSurface; // 0x59(0x01)
	None ComponentLayerInfos; // 0x4b8(0x10)
	None SectionBaseX; // 0x4c8(0x04)
	None SectionBaseY; // 0x4cc(0x04)
	None CollisionSizeQuads; // 0x4d0(0x04)
	None CollisionScale; // 0x4d4(0x04)
	None SimpleCollisionSizeQuads; // 0x4d8(0x04)
	None CollisionQuadFlags; // 0x4e0(0x10)
	None HeightfieldGuid; // 0x4f0(0x10)
	None CachedLocalBox; // 0x500(0x1c)
	None RenderComponent; // 0x51c(0x1c)
	None CookedPhysicalMaterials; // 0x548(0x10)
	None LandscapeActor; // 0x28(0x1c)
	None LandscapeGuid; // 0x44(0x10)
	None ComponentSizeQuads; // 0x54(0x04)
	None SubsectionSizeQuads; // 0x58(0x04)
	None ComponentNumSubsections; // 0x5c(0x04)
	None DrawScale; // 0x60(0x0c)
	None Proxies; // 0x110(0x10)
	None LayerName; // 0x28(0x08)
	None PhysMaterial; // 0x30(0x08)
	None Hardness; // 0x38(0x04)
	None LayerUsageDebugColor; // 0x3c(0x10)
	None TextureStreamingInfo; // 0x410(0x10)
	None bIsLayerThumbnail; // 0x420(0x01)
	None bDisableTessellation; // 0x420(0x01)
	None bMobile; // 0x420(0x01)
	None bEditorToolUsage; // 0x420(0x01)
	None MeshGuid; // 0x598(0x10)
	None LandscapeMeshProxyComponent; // 0x310(0x08)
	None LandscapeGuid; // 0x550(0x10)
	None ProxyComponentBases; // 0x560(0x10)
	None ProxyLOD; // 0x570(0x01)
	None MaxNumberOfLayers; // 0x38(0x04)
	None ControlPoints; // 0x4b8(0x10)
	None Segments; // 0x4c8(0x10)
	None CookedForeignMeshComponents; // 0x4d8(0x10)
	None Location; // 0x28(0x0c)
	None Rotation; // 0x34(0x0c)
	None Width; // 0x40(0x04)
	None LayerWidthRatio; // 0x44(0x04)
	None SideFalloff; // 0x48(0x04)
	None LeftSideFalloffFactor; // 0x4c(0x04)
	None RightSideFalloffFactor; // 0x50(0x04)
	None LeftSideLayerFalloffFactor; // 0x54(0x04)
	None RightSideLayerFalloffFactor; // 0x58(0x04)
	None EndFalloff; // 0x5c(0x04)
	None ConnectedSegments; // 0x60(0x10)
	None Points; // 0x70(0x10)
	None Bounds; // 0x80(0x1c)
	None LocalMeshComponent; // 0xa0(0x08)
	None Connections; // 0x28(0x30)
	None SplineInfo; // 0x58(0x18)
	None Points; // 0x70(0x10)
	None Bounds; // 0x80(0x1c)
	None LocalMeshComponents; // 0xa0(0x10)
	None LandscapeActor; // 0x6c0(0x1c)
	None ChannelUsage; // 0x28(0x20)
	None LayerGuid; // 0x48(0x10)
	None GrassTypes; // 0x40(0x10)
	None Layers; // 0x40(0x10)
	None ExpressionGUID; // 0x50(0x10)
	None MappingType; // 0x40(0x01)
	None CustomUVType; // 0x41(0x01)
	None MappingScale; // 0x44(0x04)
	None MappingRotation; // 0x48(0x04)
	None MappingPanU; // 0x4c(0x04)
	None MappingPanV; // 0x50(0x04)
	None ParameterName; // 0x40(0x08)
	None PreviewWeight; // 0x48(0x04)
	None ExpressionGUID; // 0x4c(0x10)
	None LayerUsed; // 0x40(0x0c)
	None LayerNotUsed; // 0x54(0x0c)
	None ParameterName; // 0x68(0x08)
	None PreviewUsed; // 0x70(0x01)
	None ExpressionGUID; // 0x74(0x10)
	None Base; // 0x40(0x0c)
	None Layer; // 0x54(0x0c)
	None ParameterName; // 0x68(0x08)
	None PreviewWeight; // 0x70(0x04)
	None ConstBase; // 0x74(0x0c)
	None ExpressionGUID; // 0x80(0x10)
	None ExpressionGUID; // 0x40(0x10)
	None UberGraphFrame; // 0xcd0(0x08)
	None TeamInfoUpdater; // 0xcd8(0x08)
	None Timeline_0_NewTrack_0_FB4F6B44434A25E409AE66987076220A; // 0xce0(0x04)
	None Timeline_0__Direction_FB4F6B44434A25E409AE66987076220A; // 0xce4(0x01)
	None Timeline_1; // 0xce8(0x08)
	None EngineSound; // 0xcf0(0x08)
	None FixedFrameRate; // 0x28(0x08)
	None bUseForSynchronization; // 0x28(0x01)
	None FrameOffset; // 0x2c(0x04)
	None DataSources; // 0x28(0x50)
	None UberGraphFrame; // 0x398(0x08)
	None TextureScale; // 0x3a0(0x04)
	None BurnArea; // 0x3a4(0x04)
	None NotifyName; // 0x38(0x08)
	None NotifyName; // 0x30(0x08)
	None OnCompleted; // 0x28(0x10)
	None OnBlendOut; // 0x38(0x10)
	None OnInterrupted; // 0x48(0x10)
	None OnNotifyBegin; // 0x58(0x10)
	None OnNotifyEnd; // 0x68(0x10)
	None UberGraphFrame; // 0x318(0x08)
	None Anim_OnNotifyPos; // 0x320(0x08)
	None Anim_OnAttacked; // 0x328(0x08)
	None Canvas_Attacked; // 0x330(0x08)
	None Canvas_Fire; // 0x338(0x08)
	None Canvas_NotifyPos; // 0x340(0x08)
	None Img_FreeCam; // 0x348(0x08)
	None PlayerState; // 0x350(0x08)
	None NetAnalyticsData; // 0x28(0x10)
	None UberGraphFrame; // 0x350(0x08)
	None CanvasPanel_3; // 0x358(0x08)
	None CanvasPanel_4; // 0x360(0x08)
	None grid; // 0x368(0x08)
	None Image; // 0x370(0x08)
	None Image_1; // 0x378(0x08)
	None Image_2; // 0x380(0x08)
	None Image_234; // 0x388(0x08)
	None Image_582; // 0x390(0x08)
	None InvalidationBox_1; // 0x398(0x08)
	None RetainerBox_108; // 0x3a0(0x08)
	None SupplyBoxMarker; // 0x3a8(0x08)
	None UnitParent; // 0x3b0(0x08)
	None UW-CompassUnitWidget; // 0x3b8(0x08)
	None UW-CompassUnitWidget_C_2; // 0x3c0(0x08)
	None UW-CompassUnitWidget_C_3; // 0x3c8(0x08)
	None UW-CompassUnitWidget_C_4; // 0x3d0(0x08)
	None UW-CompassUnitWidget_C_5; // 0x3d8(0x08)
	None UW-CompassUnitWidget_C_6; // 0x3e0(0x08)
	None UW-CompassUnitWidget_C_7; // 0x3e8(0x08)
	None UW-CompassUnitWidget_C_8; // 0x3f0(0x08)
	None UW-CompassUnitWidget_C_9; // 0x3f8(0x08)
	None UW-CompassUnitWidget_C_10; // 0x400(0x08)
	None UW-CompassUnitWidget_C_11; // 0x408(0x08)
	None UW-CompassUnitWidget_C_12; // 0x410(0x08)
	None UW-CompassUnitWidget_C_13; // 0x418(0x08)
	None UW-CompassUnitWidget_C_14; // 0x420(0x08)
	None UW-PlayerMarkerWidget_C_1; // 0x428(0x08)
	None ViewAngle; // 0x430(0x08)
	None ScaleForAngleToDistance; // 0x438(0x04)
	None PositionCurveOffset; // 0x43c(0x04)
	None PositionCurve; // 0x440(0x08)
	None PositionCurveWeight; // 0x448(0x04)
	None ScaleCurveWeight; // 0x44c(0x04)
	None ScaleCurveOffset; // 0x450(0x04)
	None NormalDirectionFontSize; // 0x454(0x04)
	None SpecialDirectionFontSize; // 0x458(0x04)
	None ArrayPlayerMarkerWidget; // 0x460(0x10)
	None NorthColor; // 0x470(0x10)
	None Angle0To360; // 0x480(0x04)
	None TempMarkerPosition; // 0x484(0x04)
	None ArrangedAngle; // 0x488(0x04)
	None UserDescription; // 0x28(0x10)
	None RootExpression; // 0x48(0x08)
	None TagQueryExportText_Helper; // 0x50(0x48)
	None Tags; // 0x28(0x20)
	None Tags; // 0x28(0x20)
	None Tags; // 0x28(0x20)
	None Expressions; // 0x28(0x10)
	None Expressions; // 0x28(0x10)
	None Expressions; // 0x28(0x10)
	None TagSources; // 0xc0(0x10)
	None GameplayTagTables; // 0x1b0(0x10)
	None ConfigFileName; // 0x28(0x10)
	None GameplayTagList; // 0x38(0x10)
	None ConfigFileName; // 0x28(0x10)
	None RestrictedGameplayTagList; // 0x38(0x10)
	None ImportTagsFromConfig; // 0x48(0x01)
	None WarnOnInvalidTags; // 0x49(0x01)
	None FastReplication; // 0x4a(0x01)
	None InvalidTagCharacters; // 0x50(0x10)
	None CategoryRemapping; // 0x60(0x10)
	None GameplayTagTableList; // 0x70(0x10)
	None GameplayTagRedirects; // 0x80(0x10)
	None CommonlyReplicatedTags; // 0x90(0x10)
	None NumBitsForContainerSize; // 0xa0(0x04)
	None NetIndexFirstBitSegment; // 0xa4(0x04)
	None RestrictedConfigFiles; // 0xa8(0x10)
	None DeveloperConfigName; // 0x28(0x10)
	None UberGraphFrame; // 0x260(0x08)
	None PlayerIconOnDamagingAnimation; // 0x268(0x08)
	None ShirinkingAnimation; // 0x270(0x08)
	None AlertIcon; // 0x278(0x08)
	None BP-CheckWeightMap; // 0x280(0x08)
	None BP-MapComp; // 0x288(0x08)
	None CircleInfoGroup; // 0x290(0x08)
	None CP-MapComp; // 0x298(0x08)
	None CurrentProgressBar; // 0x2a0(0x08)
	None Image_174; // 0x2a8(0x08)
	None Image_766; // 0x2b0(0x08)
	None InvalidationBox_2; // 0x2b8(0x08)
	None LulledGroup; // 0x2c0(0x08)
	None PhaseText; // 0x2c8(0x08)
	None PlayerIconGroup; // 0x2d0(0x08)
	None SB-MapComp; // 0x2d8(0x08)
	None SB_CircleInfo; // 0x2e0(0x08)
	None ShrinkingGroup; // 0x2e8(0x08)
	None Switcher; // 0x2f0(0x08)
	None UW-Inventory_Recipe; // 0x2f8(0x08)
	None UW-SearchingMaterial; // 0x300(0x08)
	None State; // 0x308(0x04)
	None MapSize_Default; // 0x30c(0x08)
	None MapSize_Extend; // 0x314(0x08)
	None InitializeCount; // 0x31c(0x04)
	None bExtendMode; // 0x320(0x01)
	None RecipeCount; // 0x324(0x04)
	None TargetCharacter; // 0x328(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Button_96; // 0x250(0x08)
	None Image; // 0x258(0x08)
	None Image_193; // 0x260(0x08)
	None Image_395; // 0x268(0x08)
	None Image_Arrow_Guide; // 0x270(0x08)
	None Img_hover; // 0x278(0x08)
	None Img_Pressed; // 0x280(0x08)
	None UW-Lobby_Craft_Success_Perk_Slot; // 0x288(0x08)
	None WidgetSwitcher_263; // 0x290(0x08)
	None EventDispatcher_EndOpen; // 0x298(0x10)
	None ItemOption; // 0x2a8(0xb8)
	None IsOpened; // 0x360(0x01)
	None CurrentHoverOpacity; // 0x364(0x04)
	None PressedMaterialInstance; // 0x368(0x08)
	None CurrentPressedAnim; // 0x370(0x04)
	None EventDispatcher_StartOpen; // 0x378(0x10)
	None UberGraphFrame; // 0x2e8(0x08)
	None AllItem; // 0x2f0(0x08)
	None Button_1004; // 0x2f8(0x08)
	None CheckBox_1; // 0x300(0x08)
	None CP-Column; // 0x308(0x08)
	None IMG-Ammo; // 0x310(0x08)
	None IMG-Attachment; // 0x318(0x08)
	None IMG-Consumable; // 0x320(0x08)
	None IMG-Custom; // 0x328(0x08)
	None IMG-Gear; // 0x330(0x08)
	None IMG-Perk; // 0x338(0x08)
	None IMG-Preset; // 0x340(0x08)
	None IMG-TopBG; // 0x348(0x08)
	None IMG-Vehicle; // 0x350(0x08)
	None IMG-Weapon; // 0x358(0x08)
	None IMG-Wearable; // 0x360(0x08)
	None Text_culture; // 0x368(0x08)
	None UW-BlackMarket_Character; // 0x370(0x08)
	None UW-BlackMarket_SubTab; // 0x378(0x08)
	None WB-ItemList; // 0x380(0x08)
	None WrapBox_6; // 0x388(0x08)
	None CurrentTab; // 0x390(0x01)
	None SelectTabColor; // 0x394(0x10)
	None UnSelectTabColor; // 0x3a4(0x10)
	None ShowWorkInProcess; // 0x3b4(0x01)
	None ItemList; // 0x3b8(0x10)
	None SelectedWeaponSubTab; // 0x3c8(0x01)
	None SelectedAttachmentSubTab; // 0x3c9(0x01)
	None SelectedWearableSubTab; // 0x3ca(0x01)
	None SelectedGearSubTab; // 0x3cb(0x01)
	None SelectedCustomSubTab; // 0x3cc(0x01)
	None SortTypeList; // 0x3d0(0x10)
	None WeaponAscendList; // 0x3e0(0x10)
	None CurrentWeaponSortType; // 0x3f0(0x04)
	None AmmoAscendList; // 0x3f8(0x10)
	None CurrentAmmoSortType; // 0x408(0x04)
	None AttachmentAscendList; // 0x410(0x10)
	None CurrentAttachmentSortType; // 0x420(0x04)
	None CurrentWearableSortType; // 0x424(0x04)
	None CurrentConsumableSortType; // 0x428(0x04)
	None CurrentCustomSortType; // 0x42c(0x04)
	None CurrentVehicleSortType; // 0x430(0x04)
	None WearableAscendList; // 0x438(0x10)
	None ConsumableAscendList; // 0x448(0x10)
	None CustomAscendList; // 0x458(0x10)
	None VehicleAscendList; // 0x468(0x10)
	None SaveData; // 0x478(0x08)
	None GearAscendList; // 0x480(0x10)
	None CurrentGearSortType; // 0x490(0x04)
	None BlackmarketSaveSlotName; // 0x498(0x10)
	None TestIndex; // 0x4a8(0x04)
	None PerkAscendList; // 0x4b0(0x10)
	None CurrentPerkSortType; // 0x4c0(0x04)
	None SelectedPerkSubTab; // 0x4c4(0x01)
	None CurrentPresetSortType; // 0x4c8(0x04)
	None PresetAscendList; // 0x4d0(0x10)
	None SelectedPerkClass; // 0x4e0(0x08)
	None SelectedConsumableSubTab; // 0x4e8(0x01)
	None TransformOriginActor; // 0x30(0x08)
	None TransformOrigin; // 0x40(0x30)
	None MovieScene; // 0x348(0x08)
	None ObjectReferences; // 0x350(0x50)
	None BindingReferences; // 0x3a0(0xa0)
	None PossessedObjects; // 0x440(0x50)
	None DirectorClass; // 0x490(0x08)
	None bUseBurnIn; // 0x28(0x01)
	None BurnInClass; // 0x30(0x18)
	None Settings; // 0x48(0x08)
	None PlaybackSettings; // 0x320(0x14)
	None SequencePlayer; // 0x338(0x08)
	None LevelSequence; // 0x340(0x18)
	None AdditionalEventReceivers; // 0x358(0x10)
	None CameraSettings; // 0x368(0x02)
	None BurnInOptions; // 0x370(0x08)
	None BindingOverrides; // 0x378(0x08)
	None bAutoPlay; // 0x380(0x01)
	None bOverrideInstanceData; // 0x380(0x01)
	None bReplicatePlayback; // 0x380(0x01)
	None DefaultInstanceData; // 0x388(0x08)
	None BurnInInstance; // 0x390(0x08)
	None bShowBurnin; // 0x398(0x01)
	None FrameInformation; // 0x248(0xb8)
	None LevelSequenceActor; // 0x300(0x08)
	None Player; // 0x28(0x08)
	None OnCameraCut; // 0x890(0x10)
	None Sequence; // 0x318(0x08)
	None MediaComponent; // 0x320(0x08)
	None ServerStartTimeSeconds; // 0x328(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None FadeIn3; // 0x250(0x08)
	None FadeIn2; // 0x258(0x08)
	None RankDown; // 0x260(0x08)
	None RankUp; // 0x268(0x08)
	None FadeOut; // 0x270(0x08)
	None FadeIn; // 0x278(0x08)
	None Button_DeathCam; // 0x280(0x08)
	None Button_Exit; // 0x288(0x08)
	None Button_Report; // 0x290(0x08)
	None Button_Spectate; // 0x298(0x08)
	None Image; // 0x2a0(0x08)
	None Image_2; // 0x2a8(0x08)
	None Image_3; // 0x2b0(0x08)
	None Image_4; // 0x2b8(0x08)
	None Image_5; // 0x2c0(0x08)
	None Image_6; // 0x2c8(0x08)
	None Image_7; // 0x2d0(0x08)
	None Image_8; // 0x2d8(0x08)
	None Image_135; // 0x2e0(0x08)
	None Image_149; // 0x2e8(0x08)
	None Image_239; // 0x2f0(0x08)
	None Image_314; // 0x2f8(0x08)
	None Image_377; // 0x300(0x08)
	None Image_444; // 0x308(0x08)
	None Image_477; // 0x310(0x08)
	None Image_518; // 0x318(0x08)
	None Image_531; // 0x320(0x08)
	None Image_745; // 0x328(0x08)
	None Image_992; // 0x330(0x08)
	None Image_1373; // 0x338(0x08)
	None Image_1459; // 0x340(0x08)
	None Image_1506; // 0x348(0x08)
	None Image_1508; // 0x350(0x08)
	None Image_1925; // 0x358(0x08)
	None Image_NextTireIcon; // 0x360(0x08)
	None Light_01; // 0x368(0x08)
	None Light_02; // 0x370(0x08)
	None Light_03; // 0x378(0x08)
	None Light_04; // 0x380(0x08)
	None Light_05; // 0x388(0x08)
	None Light_06; // 0x390(0x08)
	None Light_07; // 0x398(0x08)
	None Light_08; // 0x3a0(0x08)
	None Overlay_Rank; // 0x3a8(0x08)
	None Overlay_Report; // 0x3b0(0x08)
	None Overlay_Spectate; // 0x3b8(0x08)
	None ProgressBar_Current; // 0x3c0(0x08)
	None ProgressBar_Down; // 0x3c8(0x08)
	None ProgressBar_Up; // 0x3d0(0x08)
	None ScrollBox_GoldList; // 0x3d8(0x08)
	None ScrollBox_ItemList; // 0x3e0(0x08)
	None SizeBox_8; // 0x3e8(0x08)
	None Spacer_6018; // 0x3f0(0x08)
	None Spacer_6217; // 0x3f8(0x08)
	None Spacer_Center; // 0x400(0x08)
	None T_RemainTime; // 0x408(0x08)
	None team_kill; // 0x410(0x08)
	None Team_Revives; // 0x418(0x08)
	None Text_Report; // 0x420(0x08)
	None TextBlock_1425; // 0x428(0x08)
	None TextBlock_CurrentRP; // 0x430(0x08)
	None TextBlock_ItemCount; // 0x438(0x08)
	None TextBlock_Kill; // 0x440(0x08)
	None TextBlock_MatchRP; // 0x448(0x08)
	None TextBlock_NextRP; // 0x450(0x08)
	None TextBlock_Rank; // 0x458(0x08)
	None TextBlock_Resuscitates; // 0x460(0x08)
	None TextBlock_Title; // 0x468(0x08)
	None TextBlock_TotalGold; // 0x470(0x08)
	None TextBlock_TotalTeamCount; // 0x478(0x08)
	None UW-MatchEnd_RewardSlot; // 0x480(0x08)
	None UW-MatchEnd_RewardSlot_C; // 0x488(0x08)
	None UW-MatchEnd_RewardSlot_C_1; // 0x490(0x08)
	None UW-MatchEnd_RewardSlot_C_2; // 0x498(0x08)
	None UW-RewardGoldSlot; // 0x4a0(0x08)
	None VerticalBox_188; // 0x4a8(0x08)
	None FinalResultData; // 0x4b0(0x04)
	None PlayerState; // 0x4b8(0x08)
	None Timehandle_Rank; // 0x4c0(0x08)
	None PlayerOriRP; // 0x4c8(0x04)
	None TargetRP; // 0x4cc(0x04)
	None CurrentRP; // 0x4d0(0x04)
	None NextTireRP; // 0x4d4(0x04)
	None Increase; // 0x4d8(0x01)
	None CurrentTierID; // 0x4dc(0x04)
	None bMaxPrograssbar; // 0x4e0(0x01)
	None MatchEndWidgetRef; // 0x4e8(0x08)
	None RandomGold; // 0x4f0(0x04)
	None GoldHandle; // 0x4f8(0x08)
	None IsWinningCam; // 0x500(0x01)
	None GainGoldValue; // 0x504(0x04)
	None GainGoldHandle; // 0x508(0x08)
	None StartSound; // 0x510(0x04)
	None bWaitForMoviesToComplete; // 0x28(0x01)
	None bMoviesAreSkippable; // 0x29(0x01)
	None StartupMovies; // 0x30(0x10)
	None Overlays; // 0x28(0x10)
	None DefaultOverlays; // 0x28(0x08)
	None LocaleToOverlaysMap; // 0x30(0x50)
	None UberGraphFrame; // 0x3e8(0x08)
	None Over; // 0x3f0(0x08)
	None Bg; // 0x3f8(0x08)
	None CanvasPanel_2; // 0x400(0x08)
	None CanvasPanel_4; // 0x408(0x08)
	None Cont; // 0x410(0x08)
	None DropHoverImage; // 0x418(0x08)
	None Image; // 0x420(0x08)
	None Image_86; // 0x428(0x08)
	None Image_187; // 0x430(0x08)
	None Image_675; // 0x438(0x08)
	None Image_874; // 0x440(0x08)
	None ItemImage; // 0x448(0x08)
	None ItemName; // 0x450(0x08)
	None Lock; // 0x458(0x08)
	None Price_Value; // 0x460(0x08)
	None ProgressBar_65; // 0x468(0x08)
	None Repair; // 0x470(0x08)
	None WeaponName; // 0x478(0x08)
	None WeaponName_2; // 0x480(0x08)
	None WeaponName_3; // 0x488(0x08)
	None WidgetSwitcher_1; // 0x490(0x08)
	None DraggedWidget; // 0x498(0x08)
	None DragItemBrush; // 0x4a0(0x88)
	None EnableDrag; // 0x528(0x01)
	None ItemIconImg; // 0x530(0x28)
	None AmmorKey; // 0x558(0x08)
	None OnHoverStateEventDispatcher; // 0x560(0x10)
	None OnRightClickEventDispatcher; // 0x570(0x10)
	None SaveKey; // 0x580(0x18)
	None ClickNum; // 0x598(0x04)
	None RandomPerk; // 0x59c(0x01)
	None ClothingWindMethod; // 0x28(0x01)
	None VerticalConstraint; // 0x2c(0x10)
	None HorizontalConstraint; // 0x3c(0x10)
	None BendConstraint; // 0x4c(0x10)
	None ShearConstraint; // 0x5c(0x10)
	None SelfCollisionRadius; // 0x6c(0x04)
	None SelfCollisionStiffness; // 0x70(0x04)
	None SelfCollisionCullScale; // 0x74(0x04)
	None Damping; // 0x78(0x0c)
	None Friction; // 0x84(0x04)
	None WindDragCoefficient; // 0x88(0x04)
	None WindLiftCoefficient; // 0x8c(0x04)
	None LinearDrag; // 0x90(0x0c)
	None AngularDrag; // 0x9c(0x0c)
	None LinearInertiaScale; // 0xa8(0x0c)
	None AngularInertiaScale; // 0xb4(0x0c)
	None CentrifugalInertiaScale; // 0xc0(0x0c)
	None SolverFrequency; // 0xcc(0x04)
	None StiffnessFrequency; // 0xd0(0x04)
	None GravityScale; // 0xd4(0x04)
	None GravityOverride; // 0xd8(0x0c)
	None bUseGravityOverride; // 0xe4(0x01)
	None TetherStiffness; // 0xe8(0x04)
	None TetherLimit; // 0xec(0x04)
	None CollisionThickness; // 0xf0(0x04)
	None AnimDriveSpringStiffness; // 0xf4(0x04)
	None AnimDriveDamperStiffness; // 0xf8(0x04)
	None WindMethod; // 0xfc(0x01)
	None VerticalConstraintConfig; // 0x100(0x10)
	None HorizontalConstraintConfig; // 0x110(0x10)
	None BendConstraintConfig; // 0x120(0x10)
	None ShearConstraintConfig; // 0x130(0x10)
	None MaxDistances; // 0xe0(0x10)
	None BackstopDistances; // 0xf0(0x10)
	None BackstopRadiuses; // 0x100(0x10)
	None AnimDriveMultipliers; // 0x110(0x10)
	None Image_91; // 0x248(0x08)
	None InventoryCharacterRef; // 0x250(0x08)
	None Visible; // 0x258(0x01)
	None RenderingComp; // 0x318(0x08)
	None NavDataConfig; // 0x320(0x78)
	None bEnableDrawing; // 0x398(0x01)
	None bForceRebuildOnLoad; // 0x398(0x01)
	None bAutoDestroyWhenNoNavigation; // 0x398(0x01)
	None bCanBeMainNavData; // 0x398(0x01)
	None bCanSpawnOnRebuild; // 0x398(0x01)
	None bRebuildAtRuntime; // 0x398(0x01)
	None RuntimeGeneration; // 0x39c(0x01)
	None ObservedPathsTickInterval; // 0x3a0(0x04)
	None DataVersion; // 0x3a4(0x04)
	None SupportedAreas; // 0x488(0x10)
	None DefaultCost; // 0x30(0x04)
	None FixedAreaEnteringCost; // 0x34(0x04)
	None DrawColor; // 0x38(0x04)
	None SupportedAgents; // 0x3c(0x04)
	None bSupportsAgent0; // 0x40(0x01)
	None bSupportsAgent1; // 0x40(0x01)
	None bSupportsAgent2; // 0x40(0x01)
	None bSupportsAgent3; // 0x40(0x01)
	None bSupportsAgent4; // 0x40(0x01)
	None bSupportsAgent5; // 0x40(0x01)
	None bSupportsAgent6; // 0x40(0x01)
	None bSupportsAgent7; // 0x40(0x01)
	None bSupportsAgent8; // 0x41(0x01)
	None bSupportsAgent9; // 0x41(0x01)
	None bSupportsAgent10; // 0x41(0x01)
	None bSupportsAgent11; // 0x41(0x01)
	None bSupportsAgent12; // 0x41(0x01)
	None bSupportsAgent13; // 0x41(0x01)
	None bSupportsAgent14; // 0x41(0x01)
	None bSupportsAgent15; // 0x41(0x01)
	None Agent0Area; // 0x48(0x08)
	None Agent1Area; // 0x50(0x08)
	None Agent2Area; // 0x58(0x08)
	None Agent3Area; // 0x60(0x08)
	None Agent4Area; // 0x68(0x08)
	None Agent5Area; // 0x70(0x08)
	None Agent6Area; // 0x78(0x08)
	None Agent7Area; // 0x80(0x08)
	None Agent8Area; // 0x88(0x08)
	None Agent9Area; // 0x90(0x08)
	None Agent10Area; // 0x98(0x08)
	None Agent11Area; // 0xa0(0x08)
	None Agent12Area; // 0xa8(0x08)
	None Agent13Area; // 0xb0(0x08)
	None Agent14Area; // 0xb8(0x08)
	None Agent15Area; // 0xc0(0x08)
	None CylinderCollision; // 0x80(0x10)
	None BoxCollision; // 0x90(0x10)
	None AreaClass; // 0xa0(0x08)
	None bGatherConvexGeometry; // 0xa8(0x01)
	None bCreateOnClient; // 0xa8(0x01)
	None Node; // 0x238(0x18)
	None NextNodeComponent; // 0x250(0x08)
	None PrevNodeComponent; // 0x258(0x08)
	None TileGenerationRadius; // 0xb0(0x04)
	None TileRemovalRadius; // 0xb4(0x04)
	None PathUpdatedNotifier; // 0x28(0x10)
	None PathPoints; // 0x38(0x10)
	None RecalculateOnInvalidation; // 0x48(0x01)
	None Areas; // 0x28(0x10)
	None IncludeFlags; // 0x38(0x04)
	None ExcludeFlags; // 0x3c(0x04)
	None MainNavData; // 0x28(0x08)
	None AbstractNavData; // 0x30(0x08)
	None DefaultAgentName; // 0x38(0x08)
	None CrowdManagerClass; // 0x40(0x28)
	None bAutoCreateNavigationData; // 0x68(0x01)
	None bSpawnNavDataInNavBoundsLevel; // 0x68(0x01)
	None bAllowClientSideNavigation; // 0x68(0x01)
	None bShouldDiscardSubLevelNavData; // 0x68(0x01)
	None bTickWhilePaused; // 0x68(0x01)
	None bSupportRebuilding; // 0x68(0x01)
	None bInitialBuildingLocked; // 0x68(0x01)
	None bSkipAgentHeightCheckWhenPickingNavData; // 0x69(0x01)
	None DataGatheringMode; // 0x6c(0x01)
	None bGenerateNavigationOnlyAroundNavigationInvokers; // 0x70(0x01)
	None ActiveTilesUpdateInterval; // 0x74(0x04)
	None SupportedAgents; // 0x78(0x10)
	None SupportedAgentsMask; // 0x88(0x04)
	None NavDataSet; // 0x90(0x10)
	None NavDataRegistrationQueue; // 0xa0(0x10)
	None OnNavDataRegisteredEvent; // 0xc0(0x10)
	None OnNavigationGenerationFinishedDelegate; // 0xd0(0x10)
	None OperationMode; // 0x1bc(0x01)
	None DirtyAreasUpdateFreq; // 0x514(0x04)
	None bStrictlyStatic; // 0x50(0x01)
	None bCreateOnClient; // 0x50(0x01)
	None bAutoSpawnMissingNavData; // 0x50(0x01)
	None bSpawnNavDataInNavBoundsLevel; // 0x50(0x01)
	None CapsuleComponent; // 0x320(0x08)
	None InvokerComponent; // 0x328(0x08)
	None bActAsNavigationInvoker; // 0x330(0x01)
	None NavAgentProps; // 0x338(0x30)
	None QueryingExtent; // 0x368(0x0c)
	None MyNavData; // 0x378(0x08)
	None ProjectedLocation; // 0x380(0x0c)
	None bProjectedLocationValid; // 0x38c(0x01)
	None bSearchStart; // 0x38c(0x01)
	None CostLimitFactor; // 0x390(0x04)
	None MinimumCostLimit; // 0x394(0x04)
	None bBacktracking; // 0x398(0x01)
	None bUseHierarchicalPathfinding; // 0x398(0x01)
	None bGatherDetailedInfo; // 0x398(0x01)
	None bDrawDistanceToWall; // 0x398(0x01)
	None bShowNodePool; // 0x398(0x01)
	None bShowBestPath; // 0x398(0x01)
	None bShowDiffWithPreviousStep; // 0x398(0x01)
	None bShouldBeVisibleInGame; // 0x398(0x01)
	None CostDisplayMode; // 0x39c(0x01)
	None TextCanvasOffset; // 0x3a0(0x08)
	None bPathExist; // 0x3a8(0x01)
	None bPathIsPartial; // 0x3a8(0x01)
	None bPathSearchOutOfNodes; // 0x3a8(0x01)
	None PathfindingTime; // 0x3ac(0x04)
	None PathCost; // 0x3b0(0x04)
	None PathfindingSteps; // 0x3b4(0x04)
	None OtherActor; // 0x3b8(0x08)
	None FilterClass; // 0x3c0(0x08)
	None ShowStepIndex; // 0x3c8(0x04)
	None OffsetFromCornersDistance; // 0x3cc(0x04)
	None LINKS; // 0x4c0(0x10)
	None bAttachToOwnersRoot; // 0xd4(0x01)
	None CachedNavParent; // 0xd8(0x08)
	None NavLinkUserId; // 0xe8(0x04)
	None EnabledAreaClass; // 0xf0(0x08)
	None DisabledAreaClass; // 0xf8(0x08)
	None SupportedAgents; // 0x100(0x04)
	None LinkRelativeStart; // 0x104(0x0c)
	None LinkRelativeEnd; // 0x110(0x0c)
	None LinkDirection; // 0x11c(0x01)
	None bLinkEnabled; // 0x120(0x01)
	None bNotifyWhenEnabled; // 0x120(0x01)
	None bNotifyWhenDisabled; // 0x120(0x01)
	None bCreateBoxObstacle; // 0x120(0x01)
	None ObstacleOffset; // 0x124(0x0c)
	None ObstacleExtent; // 0x130(0x0c)
	None ObstacleAreaClass; // 0x140(0x08)
	None BroadcastRadius; // 0x148(0x04)
	None BroadcastInterval; // 0x14c(0x04)
	None BroadcastChannel; // 0x150(0x01)
	None SupportedAgents; // 0x348(0x04)
	None AreaClass; // 0xe0(0x08)
	None FailsafeExtent; // 0xe8(0x0c)
	None bIncludeAgentHeight; // 0xf4(0x01)
	None AreaClass; // 0x350(0x08)
	None NavigationSystemConfig; // 0x310(0x08)
	None OverridePolicy; // 0x318(0x01)
	None bLoadOnClient; // 0x319(0x01)
	None bDrawTriangleEdges; // 0x4f0(0x01)
	None bDrawPolyEdges; // 0x4f0(0x01)
	None bDrawFilledPolys; // 0x4f0(0x01)
	None bDrawNavMeshEdges; // 0x4f0(0x01)
	None bDrawTileBounds; // 0x4f0(0x01)
	None bDrawPathCollidingGeometry; // 0x4f0(0x01)
	None bDrawTileLabels; // 0x4f0(0x01)
	None bDrawPolygonLabels; // 0x4f0(0x01)
	None bDrawDefaultPolygonCost; // 0x4f1(0x01)
	None bDrawLabelsOnPathNodes; // 0x4f1(0x01)
	None bDrawNavLinks; // 0x4f1(0x01)
	None bDrawFailedNavLinks; // 0x4f1(0x01)
	None bDrawClusters; // 0x4f1(0x01)
	None bDrawOctree; // 0x4f1(0x01)
	None bDrawOctreeDetails; // 0x4f1(0x01)
	None bDrawMarkedForbiddenPolys; // 0x4f1(0x01)
	None bDistinctlyDrawTilesBeingBuilt; // 0x4f2(0x01)
	None bDrawNavMesh; // 0x4f2(0x01)
	None DrawOffset; // 0x4f4(0x04)
	None bFixedTilePoolSize; // 0x4f8(0x01)
	None TilePoolSize; // 0x4fc(0x04)
	None TileSizeUU; // 0x500(0x04)
	None CellSize; // 0x504(0x04)
	None CellHeight; // 0x508(0x04)
	None AgentRadius; // 0x50c(0x04)
	None AgentHeight; // 0x510(0x04)
	None AgentMaxHeight; // 0x514(0x04)
	None AgentMaxSlope; // 0x518(0x04)
	None AgentMaxStepHeight; // 0x51c(0x04)
	None MinRegionArea; // 0x520(0x04)
	None MergeRegionSize; // 0x524(0x04)
	None MaxSimplificationError; // 0x528(0x04)
	None MaxSimultaneousTileGenerationJobsCount; // 0x52c(0x04)
	None TileNumberHardLimit; // 0x530(0x04)
	None PolyRefTileBits; // 0x534(0x04)
	None PolyRefNavPolyBits; // 0x538(0x04)
	None PolyRefSaltBits; // 0x53c(0x04)
	None NavMeshOriginOffset; // 0x540(0x0c)
	None DefaultDrawDistance; // 0x54c(0x04)
	None DefaultMaxSearchNodes; // 0x550(0x04)
	None DefaultMaxHierarchicalSearchNodes; // 0x554(0x04)
	None RegionPartitioning; // 0x558(0x01)
	None LayerPartitioning; // 0x559(0x01)
	None RegionChunkSplits; // 0x55c(0x04)
	None LayerChunkSplits; // 0x560(0x04)
	None bSortNavigationAreasByCost; // 0x564(0x01)
	None bPerformVoxelFiltering; // 0x564(0x01)
	None bMarkLowHeightAreas; // 0x564(0x01)
	None bFilterLowSpanSequences; // 0x564(0x01)
	None bFilterLowSpanFromTileCache; // 0x564(0x01)
	None bDoFullyAsyncNavDataGathering; // 0x564(0x01)
	None bUseBetterOffsetsFromCorners; // 0x564(0x01)
	None bStoreEmptyTileLayers; // 0x564(0x01)
	None bUseVirtualFilters; // 0x565(0x01)
	None bAllowNavLinkAsPathEnd; // 0x565(0x01)
	None bUseVoxelCache; // 0x565(0x01)
	None TileSetUpdateInterval; // 0x568(0x04)
	None HeuristicScale; // 0x56c(0x04)
	None VerticalDeviationFromGroundCompensation; // 0x570(0x04)
	None CollisionEventRegistrations; // 0x1c8(0x50)
	None BreakEventRegistrations; // 0x218(0x50)
	None TimeStepMultiplier; // 0x310(0x04)
	None CollisionIterations; // 0x314(0x04)
	None PushOutIterations; // 0x318(0x04)
	None PushOutPairIterations; // 0x31c(0x04)
	None ClusterConnectionFactor; // 0x320(0x04)
	None ClusterUnionConnectionType; // 0x324(0x01)
	None DoGenerateCollisionData; // 0x325(0x01)
	None CollisionFilterSettings; // 0x328(0x10)
	None DoGenerateBreakingData; // 0x338(0x01)
	None BreakingFilterSettings; // 0x33c(0x10)
	None DoGenerateTrailingData; // 0x34c(0x01)
	None TrailingFilterSettings; // 0x350(0x10)
	None bHasFloor; // 0x360(0x01)
	None FloorHeight; // 0x364(0x04)
	None MassScale; // 0x368(0x04)
	None bGenerateContactGraph; // 0x36c(0x01)
	None ChaosDebugSubstepControl; // 0x36d(0x03)
	None SpriteComponent; // 0x370(0x08)
	None GameplayEventDispatcherComponent; // 0x390(0x08)
	None DefaultChaosSolverActorClass; // 0x40(0x18)
	None UberGraphFrame; // 0x248(0x08)
	None Button_Crapting_Btn; // 0x250(0x08)
	None Button_Crapting_Btn_dis; // 0x258(0x08)
	None Image_112; // 0x260(0x08)
	None Img_Gold; // 0x268(0x08)
	None Img_Gold_Inert; // 0x270(0x08)
	None Img_Gold_Inert_2; // 0x278(0x08)
	None RichTextBlock_578; // 0x280(0x08)
	None T_GoldCost; // 0x288(0x08)
	None T_GoldCost_2; // 0x290(0x08)
	None UW-Lobby_Craft_GuideWidget; // 0x298(0x08)
	None UW-Lobby_Craft_List; // 0x2a0(0x08)
	None UW-Lobby_Weapon_Recipe; // 0x2a8(0x08)
	None UW-Lobby_WeaponInfo; // 0x2b0(0x08)
	None UW-Lobby_WeaponInfo_RandomOption; // 0x2b8(0x08)
	None WidgetSwitcher_179; // 0x2c0(0x08)
	None WidgetSwitcher_Gold; // 0x2c8(0x08)
	None CraftingInfo; // 0x2d0(0x128)
	None SelectedButton; // 0x3f8(0x08)
	None FieldSystemComponent; // 0x310(0x08)
	None FieldSystem; // 0x4b8(0x08)
	None SupportedSolvers; // 0x4d0(0x10)
	None Iterations; // 0xb0(0x04)
	None ResolutionType; // 0xb0(0x01)
	None Magnitude; // 0xb0(0x04)
	None Radius; // 0xb0(0x04)
	None Position; // 0xb4(0x0c)
	None InteriorValue; // 0xc0(0x04)
	None ExteriorValue; // 0xc4(0x04)
	None SetMaskCondition; // 0xc8(0x01)
	None Magnitude; // 0xb0(0x04)
	None Magnitude; // 0xb0(0x04)
	None MinRange; // 0xb4(0x04)
	None MaxRange; // 0xb8(0x04)
	None Default; // 0xbc(0x04)
	None Radius; // 0xc0(0x04)
	None Position; // 0xc4(0x0c)
	None Falloff; // 0xd0(0x01)
	None Magnitude; // 0xb0(0x04)
	None MinRange; // 0xb4(0x04)
	None MaxRange; // 0xb8(0x04)
	None Default; // 0xbc(0x04)
	None Distance; // 0xc0(0x04)
	None Position; // 0xc4(0x0c)
	None Normal; // 0xd0(0x0c)
	None Falloff; // 0xdc(0x01)
	None Magnitude; // 0xb0(0x04)
	None MinRange; // 0xb4(0x04)
	None MaxRange; // 0xb8(0x04)
	None Default; // 0xbc(0x04)
	None Transform; // 0xc0(0x30)
	None Falloff; // 0xf0(0x01)
	None MinRange; // 0xb0(0x04)
	None MaxRange; // 0xb4(0x04)
	None Transform; // 0xc0(0x30)
	None Magnitude; // 0xb0(0x04)
	None Direction; // 0xb4(0x0c)
	None Magnitude; // 0xb0(0x04)
	None Position; // 0xb4(0x0c)
	None Magnitude; // 0xb0(0x04)
	None Magnitude; // 0xb0(0x04)
	None RightField; // 0xb8(0x08)
	None LeftField; // 0xc0(0x08)
	None Operation; // 0xc8(0x01)
	None FloatField; // 0xb0(0x08)
	None IntField; // 0xb0(0x08)
	None Culling; // 0xb0(0x08)
	None Field; // 0xb8(0x08)
	None Operation; // 0xc0(0x01)
	None bIsCollisionEventListeningEnabled; // 0x238(0x01)
	None bIsBreakingEventListeningEnabled; // 0x238(0x01)
	None bIsTrailingEventListeningEnabled; // 0x238(0x01)
	None CollisionEventRequestSettings; // 0x23c(0x18)
	None BreakingEventRequestSettings; // 0x254(0x18)
	None TrailingEventRequestSettings; // 0x26c(0x18)
	None ChaosSolverActors; // 0x288(0x50)
	None GeometryCollectionActors; // 0x2d8(0x50)
	None OnCollisionEvents; // 0x328(0x10)
	None OnBreakingEvents; // 0x338(0x10)
	None OnTrailingEvents; // 0x348(0x10)
	None GeometryCollectionComponent; // 0x310(0x08)
	None GeometryCollectionDebugDrawComponent; // 0x318(0x08)
	None RecordedData; // 0x28(0x10)
	None SupportedCollection; // 0x38(0x08)
	None CompatibleCollectionState; // 0x40(0x10)
	None ChaosSolverActor; // 0x4f0(0x08)
	None RestCollection; // 0x5d8(0x08)
	None InitializationFields; // 0x5e0(0x10)
	None Simulating; // 0x5f0(0x01)
	None ObjectType; // 0x5f8(0x01)
	None EnableClustering; // 0x5f9(0x01)
	None ClusterGroupIndex; // 0x5fc(0x04)
	None MaxClusterLevel; // 0x600(0x04)
	None DamageThreshold; // 0x608(0x10)
	None ClusterConnectionType; // 0x618(0x01)
	None CollisionGroup; // 0x61c(0x04)
	None CollisionSampleFraction; // 0x620(0x04)
	None LinearEtherDrag; // 0x624(0x04)
	None AngularEtherDrag; // 0x628(0x04)
	None PhysicalMaterial; // 0x630(0x08)
	None InitialVelocityType; // 0x638(0x01)
	None InitialLinearVelocity; // 0x63c(0x0c)
	None InitialAngularVelocity; // 0x648(0x0c)
	None CacheParameters; // 0x658(0x50)
	None NotifyGeometryCollectionPhysicsStateChange; // 0x6a8(0x10)
	None NotifyGeometryCollectionPhysicsLoadingStateChange; // 0x6b8(0x10)
	None OnChaosBreakEvent; // 0x6e0(0x10)
	None DesiredCacheTime; // 0x6f0(0x04)
	None CachePlayback; // 0x6f4(0x01)
	None OnChaosPhysicsCollision; // 0x6f8(0x10)
	None bNotifyBreaks; // 0x708(0x01)
	None bNotifyCollisions; // 0x709(0x01)
	None DummyBodySetup; // 0x968(0x08)
	None WarningMessage; // 0x310(0x01)
	None SelectedRigidBody; // 0x318(0x18)
	None bDebugDrawWholeCollection; // 0x330(0x01)
	None bDebugDrawHierarchy; // 0x331(0x01)
	None bDebugDrawClustering; // 0x332(0x01)
	None HideGeometry; // 0x333(0x01)
	None bShowRigidBodyId; // 0x334(0x01)
	None bShowRigidBodyCollision; // 0x335(0x01)
	None bCollisionAtOrigin; // 0x336(0x01)
	None bShowRigidBodyTransform; // 0x337(0x01)
	None bShowRigidBodyInertia; // 0x338(0x01)
	None bShowRigidBodyVelocity; // 0x339(0x01)
	None bShowRigidBodyForce; // 0x33a(0x01)
	None bShowRigidBodyInfos; // 0x33b(0x01)
	None bShowTransformIndex; // 0x33c(0x01)
	None bShowTransform; // 0x33d(0x01)
	None bShowParent; // 0x33e(0x01)
	None bShowLevel; // 0x33f(0x01)
	None bShowConnectivityEdges; // 0x340(0x01)
	None bShowGeometryIndex; // 0x341(0x01)
	None bShowGeometryTransform; // 0x342(0x01)
	None bShowBoundingBox; // 0x343(0x01)
	None bShowFaces; // 0x344(0x01)
	None bShowFaceIndices; // 0x345(0x01)
	None bShowFaceNormals; // 0x346(0x01)
	None bShowSingleFace; // 0x347(0x01)
	None SingleFaceIndex; // 0x348(0x04)
	None bShowVertices; // 0x34c(0x01)
	None bShowVertexIndices; // 0x34d(0x01)
	None bShowVertexNormals; // 0x34e(0x01)
	None bUseActiveVisualization; // 0x34f(0x01)
	None PointThickness; // 0x350(0x04)
	None LineThickness; // 0x354(0x04)
	None bTextShadow; // 0x358(0x01)
	None TextScale; // 0x35c(0x04)
	None NormalScale; // 0x360(0x04)
	None AxisScale; // 0x364(0x04)
	None ArrowScale; // 0x368(0x04)
	None RigidBodyIdColor; // 0x36c(0x04)
	None RigidBodyTransformScale; // 0x370(0x04)
	None RigidBodyCollisionColor; // 0x374(0x04)
	None RigidBodyInertiaColor; // 0x378(0x04)
	None RigidBodyVelocityColor; // 0x37c(0x04)
	None RigidBodyForceColor; // 0x380(0x04)
	None RigidBodyInfoColor; // 0x384(0x04)
	None TransformIndexColor; // 0x388(0x04)
	None TransformScale; // 0x38c(0x04)
	None LevelColor; // 0x390(0x04)
	None ParentColor; // 0x394(0x04)
	None ConnectivityEdgeThickness; // 0x398(0x04)
	None GeometryIndexColor; // 0x39c(0x04)
	None GeometryTransformScale; // 0x3a0(0x04)
	None BoundingBoxColor; // 0x3a4(0x04)
	None FaceColor; // 0x3a8(0x04)
	None FaceIndexColor; // 0x3ac(0x04)
	None FaceNormalColor; // 0x3b0(0x04)
	None SingleFaceColor; // 0x3b4(0x04)
	None VertexColor; // 0x3b8(0x04)
	None VertexIndexColor; // 0x3bc(0x04)
	None VertexNormalColor; // 0x3c0(0x04)
	None SpriteComponent; // 0x3c8(0x08)
	None GeometryCollectionDebugDrawActor; // 0xb0(0x08)
	None GeometryCollectionRenderLevelSetActor; // 0xb8(0x08)
	None Materials; // 0x30(0x10)
	None CollisionType; // 0x40(0x01)
	None ImplicitType; // 0x41(0x01)
	None MinLevelSetResolution; // 0x44(0x04)
	None MaxLevelSetResolution; // 0x48(0x04)
	None MinClusterLevelSetResolution; // 0x4c(0x04)
	None MaxClusterLevelSetResolution; // 0x50(0x04)
	None CollisionObjectReductionPercentage; // 0x54(0x04)
	None bMassAsDensity; // 0x58(0x01)
	None Mass; // 0x5c(0x04)
	None MinimumMassClamp; // 0x60(0x04)
	None CollisionParticlesFraction; // 0x64(0x04)
	None MaximumCollisionParticles; // 0x68(0x04)
	None SizeSpecificData; // 0x70(0x10)
	None EnableRemovePiecesOnFracture; // 0x80(0x01)
	None RemoveOnFractureMaterials; // 0x88(0x10)
	None PersistentGuid; // 0x98(0x10)
	None StateGuid; // 0xa8(0x10)
	None BoneSelectedMaterialIndex; // 0xb8(0x04)
	None TargetVolumeTexture; // 0x310(0x08)
	None RayMarchMaterial; // 0x318(0x08)
	None SurfaceTolerance; // 0x320(0x04)
	None Isovalue; // 0x324(0x04)
	None Enabled; // 0x328(0x01)
	None RenderVolumeBoundingBox; // 0x329(0x01)
	None PhysicalMaterial; // 0xb8(0x08)
	None ChaosSolverActor; // 0xc0(0x08)
	None OverridePhysicsAsset; // 0xc8(0x08)
	None bSimulating; // 0xd0(0x01)
	None bNotifyCollisions; // 0xd1(0x01)
	None ObjectType; // 0xd2(0x01)
	None Density; // 0xd4(0x04)
	None MinMass; // 0xd8(0x04)
	None MaxMass; // 0xdc(0x04)
	None CollisionType; // 0xe0(0x01)
	None ImplicitShapeParticlesPerUnitArea; // 0xe4(0x04)
	None ImplicitShapeMinNumParticles; // 0xe8(0x04)
	None ImplicitShapeMaxNumParticles; // 0xec(0x04)
	None MinLevelSetResolution; // 0xf0(0x04)
	None MaxLevelSetResolution; // 0xf4(0x04)
	None CollisionGroup; // 0xf8(0x04)
	None InitialVelocityType; // 0xfc(0x01)
	None InitialLinearVelocity; // 0x100(0x0c)
	None InitialAngularVelocity; // 0x10c(0x0c)
	None OnChaosPhysicsCollision; // 0x118(0x10)
	None Simulating; // 0xb8(0x01)
	None bNotifyCollisions; // 0xb9(0x01)
	None ObjectType; // 0xba(0x01)
	None Mass; // 0xbc(0x04)
	None CollisionType; // 0xc0(0x01)
	None ImplicitType; // 0xc1(0x01)
	None MinLevelSetResolution; // 0xc4(0x04)
	None MaxLevelSetResolution; // 0xc8(0x04)
	None InitialVelocityType; // 0xcc(0x01)
	None InitialLinearVelocity; // 0xd0(0x0c)
	None InitialAngularVelocity; // 0xdc(0x0c)
	None DamageThreshold; // 0xe8(0x04)
	None PhysicalMaterial; // 0xf0(0x08)
	None ChaosSolverActor; // 0xf8(0x08)
	None OnChaosPhysicsCollision; // 0x100(0x10)
	None SimulatedComponents; // 0x120(0x10)
	None UberGraphFrame; // 0x1360(0x08)
	None Bg; // 0x1368(0x08)
	None BGImage; // 0x1370(0x08)
	None BorderImage; // 0x1378(0x08)
	None EmptyImage; // 0x1380(0x08)
	None ItemImage; // 0x1388(0x08)
	None OverImage; // 0x1390(0x08)
	None SizeBox_1; // 0x1398(0x08)
	None WeaponAttachmentType; // 0x13a0(0x01)
	None WeaponSlotIndex; // 0x13a4(0x04)
	None IsHover; // 0x13a8(0x01)
	None WeaponSlotWidget; // 0x13b0(0x08)
	None WeaponAttachmentUseType; // 0x13b8(0x01)
	None SlotMode; // 0x13bc(0x04)
	None HoverWidget; // 0x13c0(0x08)
	None InputBehaviors; // 0x30(0x08)
	None AxisSource; // 0x48(0x10)
	None AngleSource; // 0x58(0x10)
	None HitTarget; // 0x68(0x10)
	None StateTarget; // 0x78(0x10)
	None bInInteraction; // 0x88(0x01)
	None RotationOrigin; // 0x8c(0x0c)
	None RotationAxis; // 0x98(0x0c)
	None RotationPlaneX; // 0xa4(0x0c)
	None RotationPlaneY; // 0xb0(0x0c)
	None InteractionStartPoint; // 0xbc(0x0c)
	None InteractionCurPoint; // 0xc8(0x0c)
	None InteractionStartAngle; // 0xd4(0x04)
	None InteractionCurAngle; // 0xd8(0x04)
	None AxisSource; // 0x48(0x10)
	None ParameterSource; // 0x58(0x10)
	None HitTarget; // 0x68(0x10)
	None StateTarget; // 0x78(0x10)
	None bEnableSignedAxis; // 0x88(0x01)
	None bInInteraction; // 0x89(0x01)
	None InteractionOrigin; // 0x8c(0x0c)
	None InteractionAxis; // 0x98(0x0c)
	None InteractionStartPoint; // 0xa4(0x0c)
	None InteractionCurPoint; // 0xb0(0x0c)
	None InteractionStartParameter; // 0xbc(0x04)
	None InteractionCurParameter; // 0xc0(0x04)
	None ParameterSign; // 0xc4(0x04)
	None Origin; // 0x30(0x0c)
	None Direction; // 0x3c(0x0c)
	None Origin; // 0x30(0x0c)
	None Direction; // 0x3c(0x0c)
	None TangentX; // 0x48(0x0c)
	None TangentY; // 0x54(0x0c)
	None Origin; // 0x30(0x0c)
	None AxisIndex; // 0x3c(0x04)
	None Component; // 0x30(0x08)
	None AxisIndex; // 0x38(0x04)
	None bLocalAxes; // 0x3c(0x01)
	None CachedProperties; // 0x40(0x08)
	None bIsPropertySetEnabled; // 0x48(0x01)
	None BrushSize; // 0x50(0x04)
	None bSpecifyRadius; // 0x54(0x01)
	None BrushRadius; // 0x58(0x04)
	None BrushStrength; // 0x5c(0x04)
	None BrushFalloffAmount; // 0x60(0x04)
	None bShowStrength; // 0x64(0x01)
	None bShowFalloff; // 0x65(0x01)
	None InputBehaviors; // 0x48(0x08)
	None ToolPropertyObjects; // 0x50(0x10)
	None BrushProperties; // 0xc0(0x08)
	None bInBrushStroke; // 0xc8(0x01)
	None LastBrushStamp; // 0xcc(0xa8)
	None PropertyClass; // 0x188(0x28)
	None BrushStampIndicator; // 0x1b0(0x08)
	None BrushRadius; // 0x38(0x04)
	None BrushFalloff; // 0x3c(0x04)
	None BrushPosition; // 0x40(0x0c)
	None BrushNormal; // 0x4c(0x0c)
	None bDrawIndicatorLines; // 0x58(0x01)
	None bDrawRadiusCircle; // 0x59(0x01)
	None bDrawFalloffCircle; // 0x5a(0x01)
	None SampleStepCount; // 0x5c(0x04)
	None LineColor; // 0x60(0x10)
	None LineThickness; // 0x70(0x04)
	None bDepthTested; // 0x74(0x01)
	None bDrawSecondaryLines; // 0x75(0x01)
	None SecondaryLineThickness; // 0x78(0x04)
	None SecondaryLineColor; // 0x7c(0x10)
	None AttachedComponent; // 0x90(0x08)
	None bUpdateModifiersDuringDrag; // 0x120(0x01)
	None Color; // 0x4b8(0x10)
	None HoverSizeMultiplier; // 0x4c8(0x04)
	None PixelHitDistanceThreshold; // 0x4cc(0x04)
	None Direction; // 0x4d8(0x0c)
	None Gap; // 0x4e4(0x04)
	None Length; // 0x4e8(0x04)
	None Thickness; // 0x4ec(0x04)
	None Origin; // 0x4d8(0x0c)
	None Rotation; // 0x4f0(0x10)
	None Dimensions; // 0x500(0x0c)
	None LineThickness; // 0x50c(0x04)
	None bRemoveHiddenLines; // 0x510(0x01)
	None bEnableAxisFlip; // 0x511(0x01)
	None Normal; // 0x4d8(0x0c)
	None Radius; // 0x4e4(0x04)
	None Thickness; // 0x4e8(0x04)
	None NumSides; // 0x4ec(0x04)
	None bViewAligned; // 0x4f0(0x01)
	None bOnlyAllowFrontFacingHits; // 0x4f1(0x01)
	None Normal; // 0x4d8(0x0c)
	None HandleSize; // 0x4e4(0x04)
	None Thickness; // 0x4e8(0x04)
	None Direction; // 0x4ec(0x0c)
	None Length; // 0x4f8(0x04)
	None bImageScale; // 0x4fc(0x01)
	None DirectionX; // 0x4d8(0x0c)
	None DirectionY; // 0x4e4(0x0c)
	None OffsetX; // 0x4f0(0x04)
	None OffsetY; // 0x4f4(0x04)
	None LengthX; // 0x4f8(0x04)
	None LengthY; // 0x4fc(0x04)
	None Thickness; // 0x500(0x04)
	None SegmentFlags; // 0x504(0x01)
	None Component; // 0x30(0x08)
	None Behaviors; // 0x28(0x10)
	None bAutoInvalidateOnHover; // 0x28(0x01)
	None bAutoInvalidateOnCapture; // 0x29(0x01)
	None ActiveInputBehaviors; // 0x38(0x08)
	None ActiveGizmos; // 0x30(0x10)
	None GizmoBuilders; // 0x58(0x50)
	None ActiveLeftTool; // 0x30(0x08)
	None ActiveRightTool; // 0x38(0x08)
	None ToolBuilders; // 0x90(0x50)
	None InputRouter; // 0x58(0x08)
	None ToolManager; // 0x60(0x08)
	None GizmoManager; // 0x68(0x08)
	None ToolManagerClass; // 0x70(0x28)
	None UpIntervalComponent; // 0x310(0x08)
	None DownIntervalComponent; // 0x318(0x08)
	None ForwardIntervalComponent; // 0x320(0x08)
	None StateTarget; // 0x38(0x08)
	None TransformProxy; // 0x50(0x08)
	None ActiveComponents; // 0x58(0x10)
	None ActiveGizmos; // 0x68(0x10)
	None AxisYSource; // 0x90(0x08)
	None AxisZSource; // 0x98(0x08)
	None FloatParameterSource; // 0x48(0x10)
	None MinParameter; // 0x58(0x04)
	None MaxParameter; // 0x5c(0x04)
	None Value; // 0x48(0x04)
	None LastChange; // 0x4c(0x08)
	None Value; // 0x48(0x08)
	None LastChange; // 0x50(0x10)
	None AxisSource; // 0x90(0x10)
	None TransformSource; // 0xa0(0x10)
	None Parameter; // 0xb0(0x04)
	None LastChange; // 0xb4(0x08)
	None CurTranslationAxis; // 0xbc(0x0c)
	None CurTranslationOrigin; // 0xc8(0x0c)
	None InitialTransform; // 0xe0(0x30)
	None AxisSource; // 0x90(0x10)
	None TransformSource; // 0xa0(0x10)
	None Parameter; // 0xb0(0x08)
	None LastChange; // 0xb8(0x10)
	None CurTranslationOrigin; // 0xc8(0x0c)
	None CurTranslationNormal; // 0xd4(0x0c)
	None CurTranslationAxisX; // 0xe0(0x0c)
	None CurTranslationAxisY; // 0xec(0x0c)
	None InitialTransform; // 0x100(0x30)
	None AxisSource; // 0x48(0x10)
	None TransformSource; // 0x58(0x10)
	None Angle; // 0x68(0x04)
	None LastChange; // 0x6c(0x08)
	None CurRotationAxis; // 0x74(0x0c)
	None CurRotationOrigin; // 0x80(0x0c)
	None InitialTransform; // 0x90(0x30)
	None AxisSource; // 0x48(0x10)
	None TransformSource; // 0x58(0x10)
	None ScaleMultiplier; // 0x68(0x04)
	None Parameter; // 0x6c(0x08)
	None LastChange; // 0x74(0x10)
	None CurScaleOrigin; // 0x84(0x0c)
	None CurScaleNormal; // 0x90(0x0c)
	None CurScaleAxisX; // 0x9c(0x0c)
	None CurScaleAxisY; // 0xa8(0x0c)
	None InitialTransform; // 0xc0(0x30)
	None AxisSource; // 0x48(0x10)
	None TransformSource; // 0x58(0x10)
	None ScaleMultiplier; // 0x68(0x04)
	None Parameter; // 0x6c(0x04)
	None LastChange; // 0x70(0x08)
	None CurScaleAxis; // 0x78(0x0c)
	None CurScaleOrigin; // 0x84(0x0c)
	None InitialTransform; // 0x90(0x30)
	None AxisSource; // 0x90(0x10)
	None TransformSource; // 0xa0(0x10)
	None ScaleMultiplier; // 0xb0(0x04)
	None Parameter; // 0xb4(0x08)
	None LastChange; // 0xbc(0x10)
	None CurScaleOrigin; // 0xcc(0x0c)
	None CurScaleNormal; // 0xd8(0x0c)
	None CurScaleAxisX; // 0xe4(0x0c)
	None CurScaleAxisY; // 0xf0(0x0c)
	None InitialTransform; // 0x100(0x30)
	None AxisSource; // 0x48(0x10)
	None ParameterSource; // 0x58(0x10)
	None HitTarget; // 0x68(0x10)
	None StateTarget; // 0x78(0x10)
	None bEnableSignedAxis; // 0x88(0x01)
	None bFlipX; // 0x89(0x01)
	None bFlipY; // 0x8a(0x01)
	None bInInteraction; // 0x8b(0x01)
	None InteractionOrigin; // 0x8c(0x0c)
	None InteractionNormal; // 0x98(0x0c)
	None InteractionAxisX; // 0xa4(0x0c)
	None InteractionAxisY; // 0xb0(0x0c)
	None InteractionStartPoint; // 0xbc(0x0c)
	None InteractionCurPoint; // 0xc8(0x0c)
	None InteractionStartParameter; // 0xd4(0x08)
	None InteractionCurParameter; // 0xdc(0x08)
	None ParameterSigns; // 0xe4(0x08)
	None Vertices; // 0x40(0x10)
	None Edges; // 0x50(0x10)
	None Faces; // 0x60(0x10)
	None Groups; // 0x70(0x10)
	None HitTestOnRelease; // 0xc0(0x01)
	None TransactionManager; // 0x50(0x10)
	None TranslateX; // 0x310(0x08)
	None TranslateY; // 0x318(0x08)
	None TranslateZ; // 0x320(0x08)
	None TranslateYZ; // 0x328(0x08)
	None TranslateXZ; // 0x330(0x08)
	None TranslateXY; // 0x338(0x08)
	None RotateX; // 0x340(0x08)
	None RotateY; // 0x348(0x08)
	None RotateZ; // 0x350(0x08)
	None UniformScale; // 0x358(0x08)
	None AxisScaleX; // 0x360(0x08)
	None AxisScaleY; // 0x368(0x08)
	None AxisScaleZ; // 0x370(0x08)
	None PlaneScaleYZ; // 0x378(0x08)
	None PlaneScaleXZ; // 0x380(0x08)
	None PlaneScaleXY; // 0x388(0x08)
	None ActiveTarget; // 0x40(0x08)
	None bSnapToWorldGrid; // 0x48(0x01)
	None bUseContextCoordinateSystem; // 0x49(0x01)
	None CurrentCoordinateSystem; // 0x4c(0x04)
	None ActiveComponents; // 0xe0(0x10)
	None NonuniformScaleComponents; // 0xf0(0x10)
	None ActiveGizmos; // 0x100(0x10)
	None CameraAxisSource; // 0x120(0x08)
	None AxisXSource; // 0x128(0x08)
	None AxisYSource; // 0x130(0x08)
	None AxisZSource; // 0x138(0x08)
	None UnitAxisXSource; // 0x140(0x08)
	None UnitAxisYSource; // 0x148(0x08)
	None UnitAxisZSource; // 0x150(0x08)
	None StateTarget; // 0x158(0x08)
	None ScaledTransformSource; // 0x160(0x08)
	None bRotatePerObject; // 0x70(0x01)
	None bSetPivotMode; // 0x71(0x01)
	None SharedTransform; // 0x90(0x30)
	None InitialSharedTransform; // 0xc0(0x30)
	None Component; // 0x48(0x08)
	None bModifyComponentOnTransform; // 0x50(0x01)
	None ChildTransformSource; // 0x48(0x10)
	None Proxy; // 0x48(0x08)
	None Box; // 0x310(0x08)
	None PackageName; // 0x28(0x10)
	None ApplicationDisplayName; // 0x38(0x10)
	None FrameTimingHint; // 0x48(0x01)
	None bProtectedContent; // 0x49(0x01)
	None bManualCallToAppReady; // 0x4a(0x01)
	None bUseMobileRendering; // 0x4b(0x01)
	None bUseVulkan; // 0x4c(0x01)
	None Certificate; // 0x50(0x10)
	None IconModelPath; // 0x60(0x10)
	None IconPortalPath; // 0x70(0x10)
	None LocalizedIconInfos; // 0x80(0x10)
	None VersionCode; // 0x90(0x04)
	None MinimumAPILevel; // 0x94(0x04)
	None AppPrivileges; // 0x98(0x10)
	None ExtraComponentSubElements; // 0xa8(0x10)
	None ExtraComponentElements; // 0xb8(0x10)
	None SpatializationPlugin; // 0xc8(0x10)
	None ReverbPlugin; // 0xd8(0x10)
	None OcclusionPlugin; // 0xe8(0x10)
	None SoundCueCookQualityIndex; // 0xf8(0x04)
	None bRemoveDebugInfo; // 0xfc(0x01)
	None VulkanValidationLayerLibs; // 0x100(0x10)
	None bFrameVignette; // 0x110(0x01)
	None LocalizedAppNames; // 0x118(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None HeartBeat; // 0x250(0x08)
	None FadeOut; // 0x258(0x08)
	None FadeIn; // 0x260(0x08)
	None Image; // 0x268(0x08)
	None Image_95; // 0x270(0x08)
	None Image_140; // 0x278(0x08)
	None NewVar_1; // 0x280(0x08)
	None IsFadeInOutEvent; // 0x288(0x01)
	None CurrentFade; // 0x28c(0x04)
	None T_Desc; // 0x248(0x08)
	None UW-Lobby_WeaponInfo_RandomOption_Slot_3; // 0x250(0x08)
	None ItemOption; // 0x258(0xb8)
	None UberGraphFrame; // 0x250(0x08)
	None Bg; // 0x258(0x08)
	None btn_Cancel; // 0x260(0x08)
	None btn_OK; // 0x268(0x08)
	None Image_2; // 0x270(0x08)
	None Overlay_2; // 0x278(0x08)
	None TextBlock_1; // 0x280(0x08)
	None TextBlock_17; // 0x288(0x08)
	None TextBlock_18; // 0x290(0x08)
	None TextBlock_19; // 0x298(0x08)
	None PopupType; // 0x2a0(0x01)
	None SettingWidget; // 0x2a8(0x08)
	None CurrentSelectIndex; // 0x2b0(0x04)
	None CurrentSelectType; // 0x2b4(0x01)
	None BackupSlots; // 0x2b8(0x10)
	None Timer; // 0x2c8(0x08)
	None TimerCount; // 0x2d0(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Escape_Cursor_Reset; // 0x250(0x08)
	None MiniNuke_Cursor_Reset; // 0x258(0x08)
	None Escape_Cursor; // 0x260(0x08)
	None MiniNuke_Cursor; // 0x268(0x08)
	None Image_390; // 0x270(0x08)
	None Image_519; // 0x278(0x08)
	None Img_CursorNuclear; // 0x280(0x08)
	None SizeBox_Nuclear; // 0x288(0x08)
	None WidgetSwitcher_1; // 0x290(0x08)
	None Anim_MouseClicked; // 0x298(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Character_BG_Motion; // 0x250(0x08)
	None Image_308; // 0x258(0x08)
	None ScrollBox_KeepedList; // 0x260(0x08)
	None TextBlock_Count; // 0x268(0x08)
	None PlayerController; // 0x270(0x08)
	None UberGraphFrame; // 0x268(0x08)
	None Bg; // 0x270(0x08)
	None btn_Cancel; // 0x278(0x08)
	None btn_OK; // 0x280(0x08)
	None Desc; // 0x288(0x08)
	None Image_2; // 0x290(0x08)
	None Overlay; // 0x298(0x08)
	None Overlay_1; // 0x2a0(0x08)
	None Overlay_2; // 0x2a8(0x08)
	None RichTextBlock_244; // 0x2b0(0x08)
	None TextBlock_17; // 0x2b8(0x08)
	None Throbber_159; // 0x2c0(0x08)
	None Title; // 0x2c8(0x08)
	None WidgetSwitcher_1; // 0x2d0(0x08)
	None MapNameToExit; // 0x2d8(0x08)
	None IsExitGame; // 0x2e0(0x01)
	None ControllerRef; // 0x2e8(0x08)
	None IsTutorial; // 0x2f0(0x01)
	None IsDeathCam; // 0x2f1(0x01)
	None EventDispatcher_MoveToDeathCam; // 0x2f8(0x10)
	None ErrorType; // 0x308(0x01)
	None IsPerkDeckSelectMode; // 0x309(0x01)
	None EventDispatcher_TrySelectMode; // 0x310(0x10)
	None OkayType; // 0x320(0x01)
	None UberGraphFrame; // 0x2f8(0x08)
	None Anim_Boost_Off; // 0x300(0x08)
	None Anim_Boost_On; // 0x308(0x08)
	None CanvasPanel_BoostInfo; // 0x310(0x08)
	None Image_Active; // 0x318(0x08)
	None IMG_CoolTime; // 0x320(0x08)
	None T_CoolTime; // 0x328(0x08)
	None MI_CoolTimeDynamicInstance; // 0x330(0x08)
	None MI_BuffActive; // 0x338(0x08)
	None BoostOffAnimTime; // 0x340(0x04)
	None IsActive; // 0x344(0x01)
	None BoostBuffInfo; // 0x348(0x188)
	None Players in Chat; // 0x5c0(0x10)
	None Chat Groups; // 0x5d0(0x10)
	None Sphere; // 0x420(0x08)
	None UberGraphFrame; // 0x378(0x08)
	None StaticMeshUnassigned; // 0x380(0x08)
	None StaticMeshAssigned; // 0x388(0x08)
	None LandingTimer; // 0x390(0x04)
	None bLanding; // 0x394(0x01)
	None ItemResult; // 0x398(0x10)
	None ParachuteTimer; // 0x3a8(0x04)
	None VisibleValue; // 0x3ac(0x04)
	None VisibleAnimationState; // 0x3b0(0x01)
	None UberGraphFrame; // 0x258(0x08)
	None Anim_Hide; // 0x260(0x08)
	None Anim_Down; // 0x268(0x08)
	None HorizontalBox_Killer; // 0x270(0x08)
	None ScaleBox_KillerIcon; // 0x278(0x08)
	None T_ClassIcon; // 0x280(0x08)
	None T_Level; // 0x288(0x08)
	None T_LV; // 0x290(0x08)
	None T_Name; // 0x298(0x08)
	None OnTimeOut; // 0x2a0(0x10)
	None LocalPlayerState; // 0x2b0(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None ChatWidget; // 0x250(0x08)
	None Chat System; // 0x258(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None RichTextBlock_52; // 0x250(0x08)
	None SetText; // 0x258(0x18)
	None UberGraphFrame; // 0x248(0x08)
	None TextBlock; // 0x250(0x08)
	None SetText; // 0x258(0x18)
	None UberGraphFrame; // 0x398(0x08)
	None TextureScale; // 0x3a0(0x04)
	None BurnArea; // 0x3a4(0x04)
	None UberGraphFrame; // 0x358(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Bg; // 0x250(0x08)
	None btn_Cancel; // 0x258(0x08)
	None btn_OK; // 0x260(0x08)
	None Button_Focus; // 0x268(0x08)
	None Button_Focus2; // 0x270(0x08)
	None CanvasPanel_Exit; // 0x278(0x08)
	None HorizontalBox_1; // 0x280(0x08)
	None Image_2; // 0x288(0x08)
	None Image_223; // 0x290(0x08)
	None Img_Movie; // 0x298(0x08)
	None RichTextBlock_244; // 0x2a0(0x08)
	None MediaPlayer; // 0x2a8(0x08)
	None bPopup; // 0x2b0(0x01)
	None MediaSoundComp; // 0x2b8(0x08)
	None GammaIntensity; // 0x2c0(0x04)
	None Game Settings; // 0x2c8(0x08)
	None SkipNoticeTimer; // 0x2d0(0x08)
	None MediaTexture; // 0x2d8(0x08)
	None Media; // 0x2e0(0x08)
	None UberGraphFrame; // 0x1360(0x08)
	None Anim_LoopHintMainWeapon; // 0x1368(0x08)
	None Anim_Material_Get; // 0x1370(0x08)
	None Anim_Material_Hover; // 0x1378(0x08)
	None Anim_Upgrade; // 0x1380(0x08)
	None Anim_Progress; // 0x1388(0x08)
	None WeaponPerk_fadeIn; // 0x1390(0x08)
	None Anim_LoopNotifySubWeapon; // 0x1398(0x08)
	None Anim_StartNotifySubWeapon; // 0x13a0(0x08)
	None Anim_LoopNotifyMainWeapon; // 0x13a8(0x08)
	None Anim_StartNotifyMainWeapon; // 0x13b0(0x08)
	None Ammo01; // 0x13b8(0x08)
	None Ammo02; // 0x13c0(0x08)
	None AmmoInfo01; // 0x13c8(0x08)
	None AmmoInfo02; // 0x13d0(0x08)
	None Barrel01; // 0x13d8(0x08)
	None BG01; // 0x13e0(0x08)
	None BG02; // 0x13e8(0x08)
	None BorderImage02; // 0x13f0(0x08)
	None btn_RecipeTree; // 0x13f8(0x08)
	None ButtStockSlot01; // 0x1400(0x08)
	None ButtStockSlot02; // 0x1408(0x08)
	None Canvas_AnimMain; // 0x1410(0x08)
	None Canvas_AnimMain_Progress; // 0x1418(0x08)
	None Canvas_AnimMain_Upgrade; // 0x1420(0x08)
	None Canvas_AnimSub; // 0x1428(0x08)
	None Choice_BG01; // 0x1430(0x08)
	None Choice_BG02; // 0x1438(0x08)
	None GripSlot01; // 0x1440(0x08)
	None HorizontalBox_Perk; // 0x1448(0x08)
	None HorizontalBox_Rarity1; // 0x1450(0x08)
	None HorizontalBox_Rarity2; // 0x1458(0x08)
	None Image_2; // 0x1460(0x08)
	None Image_3; // 0x1468(0x08)
	None Image_5; // 0x1470(0x08)
	None Image_7; // 0x1478(0x08)
	None Image_48; // 0x1480(0x08)
	None Image_85; // 0x1488(0x08)
	None Image_86; // 0x1490(0x08)
	None Image_175; // 0x1498(0x08)
	None Image_202; // 0x14a0(0x08)
	None Image_212; // 0x14a8(0x08)
	None Image_214; // 0x14b0(0x08)
	None Image_217; // 0x14b8(0x08)
	None Image_219; // 0x14c0(0x08)
	None Image_234; // 0x14c8(0x08)
	None Image_356; // 0x14d0(0x08)
	None Image_369; // 0x14d8(0x08)
	None Image_371; // 0x14e0(0x08)
	None Image_372; // 0x14e8(0x08)
	None Image_682; // 0x14f0(0x08)
	None Image_805; // 0x14f8(0x08)
	None Image_807; // 0x1500(0x08)
	None Image_808; // 0x1508(0x08)
	None Image_809; // 0x1510(0x08)
	None Image_1071; // 0x1518(0x08)
	None Image_Bindable; // 0x1520(0x08)
	None Image_Supply; // 0x1528(0x08)
	None ImageAmmo01; // 0x1530(0x08)
	None ImageAmmo02; // 0x1538(0x08)
	None Info01; // 0x1540(0x08)
	None Info02; // 0x1548(0x08)
	None Line01; // 0x1550(0x08)
	None Line02; // 0x1558(0x08)
	None MagazineSlot01; // 0x1560(0x08)
	None MagazineSlot02; // 0x1568(0x08)
	None MainWeaponSlot; // 0x1570(0x08)
	None MuzzleDeviceSlot01; // 0x1578(0x08)
	None MuzzleDeviceSlot02; // 0x1580(0x08)
	None Overlay_2; // 0x1588(0x08)
	None Perk01; // 0x1590(0x08)
	None Perk01_Sub; // 0x1598(0x08)
	None Perk02; // 0x15a0(0x08)
	None Perk02_Sub; // 0x15a8(0x08)
	None Perk03; // 0x15b0(0x08)
	None Perk03_Sub; // 0x15b8(0x08)
	None Perk04; // 0x15c0(0x08)
	None Perk04_Sub; // 0x15c8(0x08)
	None SightSlot01; // 0x15d0(0x08)
	None SightSlot02; // 0x15d8(0x08)
	None SubWeaponSlot; // 0x15e0(0x08)
	None TextBlock_1; // 0x15e8(0x08)
	None TextBlock_Range01; // 0x15f0(0x08)
	None TopNameBG01; // 0x15f8(0x08)
	None TopNameBG02; // 0x1600(0x08)
	None UW-Inventory_MaterialIconSlot; // 0x1608(0x08)
	None UW-Inventory_WeaponPerkSlot; // 0x1610(0x08)
	None UW-Inventory_WeaponPerkSlot_C_2; // 0x1618(0x08)
	None UW-Inventory_WeaponPerkSlot_C_3; // 0x1620(0x08)
	None UW-StatupWidget; // 0x1628(0x08)
	None WeaponImage01; // 0x1630(0x08)
	None WeaponImage02; // 0x1638(0x08)
	None WeaponIndex01; // 0x1640(0x08)
	None WeaponIndex02; // 0x1648(0x08)
	None WeaponName01; // 0x1650(0x08)
	None WeaponName02; // 0x1658(0x08)
	None WeaponTitle01; // 0x1660(0x08)
	None WeaponTitle02; // 0x1668(0x08)
	None WidgetSwitcher_1; // 0x1670(0x08)
	None WidgetSwitcher_Rarity; // 0x1678(0x08)
	None WidgetSwitcher_SpecialWeapon; // 0x1680(0x08)
	None WeaponType; // 0x1688(0x01)
	None SlotIndex; // 0x168c(0x04)
	None WeaponBase; // 0x1690(0x08)
	None bCanEquip; // 0x1698(0x01)
	None WeaponAttachmentSlots01; // 0x16a0(0x50)
	None WeaponAttachmentSlots02; // 0x16f0(0x50)
	None WeaponIconHeight; // 0x1740(0x04)
	None bHover; // 0x1744(0x01)
	None HoverWidget; // 0x1748(0x08)
	None NotifyAnimLoopNum; // 0x1750(0x04)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x248(0x08)
	None IconImage; // 0x250(0x08)
	None Hovered; // 0x258(0x10)
	None Unhovered; // 0x268(0x10)
	None Pressed; // 0x278(0x10)
	None SmartPingComponent; // 0x288(0x08)
	None Index; // 0x290(0x04)
	None TintColorToUse; // 0x294(0x10)
	None Found Setting; // 0x2a4(0x01)
	None Settings; // 0x2a8(0xb8)
	None TableID; // 0x360(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None perk_Icon_Scale; // 0x250(0x08)
	None HorizontalBox_Rarity; // 0x258(0x08)
	None Image; // 0x260(0x08)
	None Image_2; // 0x268(0x08)
	None Image_3; // 0x270(0x08)
	None Image_4; // 0x278(0x08)
	None Image_5; // 0x280(0x08)
	None Image_6; // 0x288(0x08)
	None Image_7; // 0x290(0x08)
	None Image_328; // 0x298(0x08)
	None Img_GradeBG; // 0x2a0(0x08)
	None Img_Icon; // 0x2a8(0x08)
	None ItemOptionInfo; // 0x2b0(0xb8)
	None UberGraphFrame; // 0x268(0x08)
	None ToolTipVerticalList; // 0x270(0x08)
	None UberGraphFrame; // 0x28(0x08)
	None Game Settings; // 0x30(0x08)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_BlendListByEnum; // 0x338(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x3e8(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x460(0x78)
	None AnimGraphNode_SequencePlayer; // 0x4d8(0x78)
	None AnimGraphNode_Slot_4; // 0x550(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x598(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x660(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x720(0x18)
	None AnimGraphNode_Root; // 0x738(0x30)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_Slot_2; // 0x7b0(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7f8(0x18)
	None AnimGraphNode_LocalRefPose; // 0x810(0x18)
	None AnimGraphNode_Slot; // 0x828(0x48)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x258(0x08)
	None Anim_9WarningMessage; // 0x260(0x08)
	None Anim_10SupplyMessage; // 0x268(0x08)
	None Anim_8LevelUpMessage; // 0x270(0x08)
	None Anim_4GameStartMessage; // 0x278(0x08)
	None Anim_27Revival; // 0x280(0x08)
	None Anim_TeamKillWarning; // 0x288(0x08)
	None 0BlueZoneDesc; // 0x290(0x08)
	None 10SupplyMessage; // 0x298(0x08)
	None 11BroadcastMessage; // 0x2a0(0x08)
	None 12TeamKillWarning; // 0x2a8(0x08)
	None 13ActionDescription; // 0x2b0(0x08)
	None 14Action; // 0x2b8(0x08)
	None 15CastingMessage; // 0x2c0(0x08)
	None 16CastingCount; // 0x2c8(0x08)
	None 17CastingCancelInfo; // 0x2d0(0x08)
	None 18ActionMessage; // 0x2d8(0x08)
	None 19CoreInfo; // 0x2e0(0x08)
	None 1BlueZoneName; // 0x2e8(0x08)
	None 20ZeroingDistance; // 0x2f0(0x08)
	None 21PlayerReportInfo; // 0x2f8(0x08)
	None 22SpectatorCount; // 0x300(0x08)
	None 23PlayerInfo; // 0x308(0x08)
	None 24RoundOverInfo; // 0x310(0x08)
	None 25RoundOver; // 0x318(0x08)
	None 26GuideWidget; // 0x320(0x08)
	None 27Revival; // 0x328(0x08)
	None 28RequestMessageInfo_2; // 0x330(0x08)
	None 29EndResuscitated; // 0x338(0x08)
	None 2GameCountDown; // 0x340(0x08)
	None 30ItemCancelMessage; // 0x348(0x08)
	None 3GameCountDownNum; // 0x350(0x08)
	None 4GameStartMessage; // 0x358(0x08)
	None 5ChangeClassInfo; // 0x360(0x08)
	None 6KillMessage; // 0x368(0x08)
	None 7KillCount; // 0x370(0x08)
	None 8LevelUpMessage; // 0x378(0x08)
	None 9WarningMessage; // 0x380(0x08)
	None HUDList; // 0x388(0x08)
	None Image; // 0x390(0x08)
	None Image_1; // 0x398(0x08)
	None Image_2; // 0x3a0(0x08)
	None Image_4; // 0x3a8(0x08)
	None Image_5; // 0x3b0(0x08)
	None Image_8; // 0x3b8(0x08)
	None Image_248; // 0x3c0(0x08)
	None RichT_ResustingOwnerName; // 0x3c8(0x08)
	None ShowMessage<Red18>Free<>; // 0x3d0(0x08)
	None UW-CoreInfoWidget; // 0x3d8(0x08)
	None UW-CoreInfoWidget_2; // 0x3e0(0x08)
	None UW-CoreInfoWidget_243; // 0x3e8(0x08)
	None UW-GuideWidget; // 0x3f0(0x08)
	None UW-MyKillCountMessageWidget; // 0x3f8(0x08)
	None UW-Timer; // 0x400(0x08)
	None LastPriority; // 0x408(0x50)
	None ShowAnimList; // 0x458(0x10)
	None HideAnimList; // 0x468(0x10)
	None ShowAnimTime; // 0x478(0x04)
	None HideAnimTime; // 0x47c(0x04)
	None TimerList; // 0x480(0x50)
	None TeamKillWarningAnimLoopNum; // 0x4d0(0x04)
	None CheatMessage; // 0x4d8(0x18)
	None UberGraphFrame; // 0x248(0x08)
	None Image_51; // 0x250(0x08)
	None InitSize; // 0x258(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Image_66; // 0x250(0x08)
	None Image_113; // 0x258(0x08)
	None Image_181; // 0x260(0x08)
	None Image_246; // 0x268(0x08)
	None Image_312; // 0x270(0x08)
	None Image_314; // 0x278(0x08)
	None Image_315; // 0x280(0x08)
	None Image_316; // 0x288(0x08)
	None Image_317; // 0x290(0x08)
	None Image_318; // 0x298(0x08)
	None Image_319; // 0x2a0(0x08)
	None UberGraphFrame; // 0x310(0x08)
	None Widget1; // 0x318(0x08)
	None DefaultSceneRoot; // 0x320(0x08)
	None Conflicting Combination; // 0x28(0x08)
	None Conflict Type; // 0x30(0x01)
	None Name; // 0x28(0x10)
	None Scale; // 0x38(0x04)
	None Primary Combination; // 0x40(0x08)
	None Secondary Combination; // 0x48(0x08)
	None Parent Action; // 0x50(0x08)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_4; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_3; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x508(0x78)
	None AnimGraphNode_SequencePlayer; // 0x580(0x78)
	None AnimGraphNode_Slot_4; // 0x5f8(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x640(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x708(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x7c8(0x18)
	None AnimGraphNode_Slot_3; // 0x7e0(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x828(0x18)
	None AnimGraphNode_Slot_2; // 0x840(0x48)
	None AnimGraphNode_Slot; // 0x888(0x48)
	None AnimGraphNode_LocalRefPose; // 0x8d0(0x18)
	None AnimGraphNode_BlendListByBool; // 0x8e8(0xa0)
	None Key Input; // 0x28(0x18)
	None Analog Use Negative Axis; // 0x40(0x01)
	None Analog Previous Axis Value; // 0x44(0x04)
	None Analog Current Axis Value; // 0x48(0x04)
	None World Delta Seconds; // 0x4c(0x04)
	None Input is Using Delta; // 0x50(0x01)
	None Display Name; // 0x58(0x10)
	None Image_2; // 0x248(0x08)
	None InvalidationBox_1; // 0x250(0x08)
	None Switcher; // 0x258(0x08)
	None OwnDirection; // 0x260(0x04)
	None UberGraphFrame; // 0x6d0(0x08)
	None Name; // 0x28(0x10)
	None Key Inputs; // 0x38(0x10)
	None Default Combination; // 0x48(0x10)
	None Can't Be None; // 0x58(0x01)
	None Conflicting Mappings Blocked; // 0x60(0x10)
	None Conflicting Mappings Info; // 0x70(0x10)
	None Combination Updated; // 0x80(0x10)
	None Parent Mapping; // 0x90(0x08)
	None Action Name; // 0x28(0x10)
	None Category; // 0x38(0x10)
	None Key Mappings; // 0x48(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None CurrentAccel; // 0x250(0x0c)
	None TargetAccel; // 0x25c(0x0c)
	None CurrentCameraActor; // 0x268(0x08)
	None OldCameraLocation; // 0x270(0x0c)
	None CurrentCameraLocation; // 0x27c(0x0c)
	None OriginCameraLocation; // 0x288(0x0c)
	None TargetCameraLocation; // 0x294(0x0c)
	None DataAsset; // 0x2a0(0x08)
	None ResetOriginTransform; // 0x2a8(0x01)
	None BeginFocusDist; // 0x2ac(0x04)
	None EndFocusDist; // 0x2b0(0x04)
	None CurrentFocusDist; // 0x2b4(0x04)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None BTN-Menu04; // 0x3f0(0x08)
	None BTN-Menu05; // 0x3f8(0x08)
	None BTN-Menu06; // 0x400(0x08)
	None CP-SlotInfo; // 0x408(0x08)
	None IMG-BG; // 0x410(0x08)
	None IMG-BG-Border; // 0x418(0x08)
	None IMG-Item; // 0x420(0x08)
	None IMG-Mask; // 0x428(0x08)
	None IMG-Over; // 0x430(0x08)
	None IMG-Over-Border; // 0x438(0x08)
	None Menu02; // 0x440(0x08)
	None Menu03; // 0x448(0x08)
	None Menu04; // 0x450(0x08)
	None Menu05; // 0x458(0x08)
	None Menu06; // 0x460(0x08)
	None Overlay_Mask; // 0x468(0x08)
	None TXT-Adrenaline; // 0x470(0x08)
	None TXT-Fuel; // 0x478(0x08)
	None TXT-Health; // 0x480(0x08)
	None TXT-ItemName; // 0x488(0x08)
	None TXT-Menu01; // 0x490(0x08)
	None TXT-Menu02; // 0x498(0x08)
	None TXT-Menu03; // 0x4a0(0x08)
	None TXT-Menu04; // 0x4a8(0x08)
	None TXT-Menu05; // 0x4b0(0x08)
	None TXT-Menu06; // 0x4b8(0x08)
	None TXT-Weight; // 0x4c0(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Action; // 0x250(0x08)
	None Image_14; // 0x258(0x08)
	None LeftBtn; // 0x260(0x08)
	None MidBtn; // 0x268(0x08)
	None Mouse; // 0x270(0x08)
	None RightBtn; // 0x278(0x08)
	None ScaleBox_2; // 0x280(0x08)
	None SideDown; // 0x288(0x08)
	None SideUp; // 0x290(0x08)
	None Text_Action; // 0x298(0x08)
	None Text_Action_UsingAlphaBg; // 0x2a0(0x08)
	None Turn; // 0x2a8(0x08)
	None WheelDown; // 0x2b0(0x08)
	None WheelUp; // 0x2b8(0x08)
	None WidgetSwitcher_TextStyle; // 0x2c0(0x08)
	None X; // 0x2c8(0x08)
	None Y; // 0x2d0(0x08)
	None Temp; // 0x2d8(0x08)
	None NewVar_1; // 0x2e0(0x01)
	None DefalutScale; // 0x2e4(0x04)
	None InvalidationBox_1; // 0x250(0x08)
	None InvalidationBox_2; // 0x258(0x08)
	None SpecialText; // 0x260(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Image_350; // 0x250(0x08)
	None Image_585; // 0x258(0x08)
	None Image_Grade_Color_Line; // 0x260(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Msg_open; // 0x250(0x08)
	None POPUP_OPEN; // 0x258(0x08)
	None Idle; // 0x260(0x08)
	None btn_Choose; // 0x268(0x08)
	None btn_OK; // 0x270(0x08)
	None btn_OK_6; // 0x278(0x08)
	None btn_PerkDeck; // 0x280(0x08)
	None Button_CloseMovie; // 0x288(0x08)
	None Button_PlayMovie; // 0x290(0x08)
	None Button_Refresh; // 0x298(0x08)
	None Button_Reselect; // 0x2a0(0x08)
	None Button_SelectMode; // 0x2a8(0x08)
	None Canvas_CantSelectMessage; // 0x2b0(0x08)
	None Canvas_MovieScreen; // 0x2b8(0x08)
	None CanvasPanel_ClassList; // 0x2c0(0x08)
	None CanvasPanel_NewbieAdvantage; // 0x2c8(0x08)
	None CheckBox_PerkDeckNotReOpen; // 0x2d0(0x08)
	None GoldLack; // 0x2d8(0x08)
	None HorizontalBox_ClassList; // 0x2e0(0x08)
	None HorizontalBox_PerkDeckReOpen; // 0x2e8(0x08)
	None Image_1; // 0x2f0(0x08)
	None Image_2; // 0x2f8(0x08)
	None Image_5; // 0x300(0x08)
	None Image_10; // 0x308(0x08)
	None Image_11; // 0x310(0x08)
	None Image_13; // 0x318(0x08)
	None Image_134; // 0x320(0x08)
	None Image_213; // 0x328(0x08)
	None Image_247; // 0x330(0x08)
	None Image_271; // 0x338(0x08)
	None Image_276; // 0x340(0x08)
	None Image_335; // 0x348(0x08)
	None Image_342; // 0x350(0x08)
	None Image_484; // 0x358(0x08)
	None Image_566; // 0x360(0x08)
	None Image_1200; // 0x368(0x08)
	None Image_1511; // 0x370(0x08)
	None Image_Class; // 0x378(0x08)
	None Image_ClassIcon; // 0x380(0x08)
	None Image_Cycle; // 0x388(0x08)
	None Image_Cycle_2; // 0x390(0x08)
	None Image_Cycle_4; // 0x398(0x08)
	None Image_Weapon; // 0x3a0(0x08)
	None Img_Movie; // 0x3a8(0x08)
	None ReseletTextGroup1; // 0x3b0(0x08)
	None ReseletTextGroup1_2; // 0x3b8(0x08)
	None ReseletTextGroup2; // 0x3c0(0x08)
	None ReseletTextGroup2_2; // 0x3c8(0x08)
	None ReseletTextGroup2_4; // 0x3d0(0x08)
	None ScaleBox_ClassList; // 0x3d8(0x08)
	None ScaleBox_SelectNotifyMessage; // 0x3e0(0x08)
	None SizeBox_Choose; // 0x3e8(0x08)
	None SizeBox_Ok; // 0x3f0(0x08)
	None SizeBox_Ok2; // 0x3f8(0x08)
	None SizeBox_Random; // 0x400(0x08)
	None SizeBox_Refrest; // 0x408(0x08)
	None SizeBox_Select; // 0x410(0x08)
	None T_AmmoName; // 0x418(0x08)
	None T_ClassDeckName; // 0x420(0x08)
	None T_ClassDesc; // 0x428(0x08)
	None T_CurrentGold; // 0x430(0x08)
	None T_WeaponDesc; // 0x438(0x08)
	None T_WeaponName; // 0x440(0x08)
	None TextBlock_Close; // 0x448(0x08)
	None TextBlock_Close_2; // 0x450(0x08)
	None TextBlock_Close_7; // 0x458(0x08)
	None TextBlock_MaxReset; // 0x460(0x08)
	None TextBlock_MaxReset_2; // 0x468(0x08)
	None TextBlock_Price_ChangeDeckList; // 0x470(0x08)
	None TextBlock_Price_Random; // 0x478(0x08)
	None TextBlock_Price_Select; // 0x480(0x08)
	None TextBlock_RandomRemainCount; // 0x488(0x08)
	None TextBlock_RefreshRemainCount; // 0x490(0x08)
	None TextBlock_Reselect; // 0x498(0x08)
	None TextBlock_Reselect_2; // 0x4a0(0x08)
	None TextBlock_Reselect_4; // 0x4a8(0x08)
	None UW-Inventory_Perk; // 0x4b0(0x08)
	None UW-Timer; // 0x4b8(0x08)
	None WidgetSwitcher_ChangeDeck; // 0x4c0(0x08)
	None WidgetSwitcher_ChangeDeck_2; // 0x4c8(0x08)
	None WidgetSwitcher_Reselect; // 0x4d0(0x08)
	None WidgetSwitcher_Reselect_2; // 0x4d8(0x08)
	None WidgetSwitcher_Reselect_4; // 0x4e0(0x08)
	None InventoryWidget; // 0x4e8(0x08)
	None Slots; // 0x4f0(0x10)
	None IconBrush; // 0x500(0x88)
	None HoverWidget; // 0x588(0x08)
	None HoverTimerHandle; // 0x590(0x08)
	None LocalTemp; // 0x598(0x08)
	None MediaPlayer; // 0x5a0(0x08)
	None ClassVideo_Map; // 0x5a8(0x50)
	None bBlockButton; // 0x5f8(0x01)
	None bButtonEnabled; // 0x5f9(0x01)
	None bCanRemainCount; // 0x5fa(0x01)
	None bCanCurrentGold; // 0x5fb(0x01)
	None bWaitingResponse; // 0x5fc(0x01)
	None CurrentGold; // 0x600(0x08)
	None ChangeDeckCount; // 0x608(0x04)
	None ChangeDeckListCount; // 0x60c(0x04)
	None PerkDeckID; // 0x610(0x04)
	None DisableTime; // 0x614(0x04)
	None ClassInfoWidgetMap; // 0x618(0x50)
	None CurrentPerkDeckSelectInfo; // 0x668(0x18)
	None LocalPerkMode; // 0x680(0x04)
	None ClassListPadding; // 0x684(0x04)
	None Handle_PlayMovie; // 0x688(0x08)
	None CurrentClassVideo; // 0x690(0x08)
	None Handle_SetPerkInfoByHoverClassButton; // 0x698(0x08)
	None LastClassButtonHovered; // 0x6a0(0x01)
	None LastClassIndex; // 0x6a4(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None FadeOut; // 0x250(0x08)
	None HitImage; // 0x258(0x08)
	None SizeBox_1; // 0x260(0x08)
	None InstigatorLocation; // 0x268(0x0c)
	None InstigatorCharacter; // 0x278(0x08)
	None FadeOut; // 0x3a0(0x08)
	None UberGraphFrame; // 0x1360(0x08)
	None Complete_ani; // 0x1368(0x08)
	None Searching_ani; // 0x1370(0x08)
	None Blank_SkillBG; // 0x1378(0x08)
	None Border_507; // 0x1380(0x08)
	None Button_332; // 0x1388(0x08)
	None Get_SkillBG; // 0x1390(0x08)
	None Get_SkillBG_lv5; // 0x1398(0x08)
	None Get_SkillBG_lv6; // 0x13a0(0x08)
	None Get_SkillBG_lv7; // 0x13a8(0x08)
	None HorizontalBox_Rarity; // 0x13b0(0x08)
	None Image; // 0x13b8(0x08)
	None Image_2; // 0x13c0(0x08)
	None Image_3; // 0x13c8(0x08)
	None Image_4; // 0x13d0(0x08)
	None Image_5; // 0x13d8(0x08)
	None Image_6; // 0x13e0(0x08)
	None Image_7; // 0x13e8(0x08)
	None Image_8; // 0x13f0(0x08)
	None Image_9; // 0x13f8(0x08)
	None Image_10; // 0x1400(0x08)
	None Image_12; // 0x1408(0x08)
	None Image_16; // 0x1410(0x08)
	None Image_332; // 0x1418(0x08)
	None Image_689; // 0x1420(0x08)
	None Image_690; // 0x1428(0x08)
	None Image_Full; // 0x1430(0x08)
	None Image_Have; // 0x1438(0x08)
	None Img_Active; // 0x1440(0x08)
	None IMG_Complete; // 0x1448(0x08)
	None IMG_ItemIcon; // 0x1450(0x08)
	None MouseHover_2; // 0x1458(0x08)
	None MouseHover_; // 0x1460(0x08)
	None MousePress_2; // 0x1468(0x08)
	None MousePress_; // 0x1470(0x08)
	None MyWeapon; // 0x1478(0x08)
	None Searching; // 0x1480(0x08)
	None Searching_; // 0x1488(0x08)
	None SizeBox_1; // 0x1490(0x08)
	None SizeBox_8; // 0x1498(0x08)
	None T_PerkName; // 0x14a0(0x08)
	None T_PerkName_2; // 0x14a8(0x08)
	None T_PerkName_3; // 0x14b0(0x08)
	None T_PerkName_4; // 0x14b8(0x08)
	None VerticalBox_1; // 0x14c0(0x08)
	None HoverWidget; // 0x14c8(0x08)
	None Selected; // 0x14d0(0x01)
	None SelectItem; // 0x14d4(0x10)
	None NewVar_1; // 0x14e8(0x08)
	None EnableSearch; // 0x14f0(0x01)
	None TempData; // 0x14f4(0x10)
	None IsComplete; // 0x1504(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None BTN-Amplifier; // 0x250(0x08)
	None BTN-Attachment-ALL; // 0x258(0x08)
	None BTN-Attachment-Barrel; // 0x260(0x08)
	None BTN-Attachment-Grip; // 0x268(0x08)
	None BTN-Attachment-Mag; // 0x270(0x08)
	None BTN-Attachment-Muzzle; // 0x278(0x08)
	None BTN-Attachment-Sight; // 0x280(0x08)
	None BTN-Attachment-Stock; // 0x288(0x08)
	None BTN-Consumable_Chest; // 0x290(0x08)
	None BTN-Consumable_Material; // 0x298(0x08)
	None BTN-Consumable_Recipe; // 0x2a0(0x08)
	None BTN-Consumable_Usable; // 0x2a8(0x08)
	None BTN-Custom-ALL; // 0x2b0(0x08)
	None BTN-Custom-Face; // 0x2b8(0x08)
	None BTN-Custom-Hair; // 0x2c0(0x08)
	None BTN-Gear-All; // 0x2c8(0x08)
	None BTN-Gear-Armor; // 0x2d0(0x08)
	None BTN-Gear-Bag; // 0x2d8(0x08)
	None BTN-Gear-Ghillie; // 0x2e0(0x08)
	None BTN-Gear-Helmet; // 0x2e8(0x08)
	None BTN-ResetHair; // 0x2f0(0x08)
	None BTN-WeaponALL; // 0x2f8(0x08)
	None BTN-Wearable-ALL; // 0x300(0x08)
	None BTN-Wearable-Bottom; // 0x308(0x08)
	None BTN-Wearable-EyeWear; // 0x310(0x08)
	None BTN-Wearable-Gloves; // 0x318(0x08)
	None BTN-Wearable-Hat; // 0x320(0x08)
	None BTN-Wearable-Mask; // 0x328(0x08)
	None BTN-Wearable-Outer; // 0x330(0x08)
	None BTN-Wearable-Shoes; // 0x338(0x08)
	None BTN-Wearable-Top; // 0x340(0x08)
	None BTN-WepaonAR; // 0x348(0x08)
	None BTN-WepaonDMR; // 0x350(0x08)
	None BTN-WepaonMelee; // 0x358(0x08)
	None BTN-WepaonPistol; // 0x360(0x08)
	None BTN-WepaonShotgun; // 0x368(0x08)
	None BTN-WepaonSMG; // 0x370(0x08)
	None BTN-WepaonSR; // 0x378(0x08)
	None BTN-WepaonThrowing; // 0x380(0x08)
	None Button_1; // 0x388(0x08)
	None Button_2; // 0x390(0x08)
	None Button_3; // 0x398(0x08)
	None Button_4; // 0x3a0(0x08)
	None Image_1; // 0x3a8(0x08)
	None Image_2; // 0x3b0(0x08)
	None Image_3; // 0x3b8(0x08)
	None Image_4; // 0x3c0(0x08)
	None IMG-Attach-Check01; // 0x3c8(0x08)
	None IMG-Attach-Check02; // 0x3d0(0x08)
	None IMG-Attach-Check03; // 0x3d8(0x08)
	None IMG-Attach-Check04; // 0x3e0(0x08)
	None IMG-Attach-Check05; // 0x3e8(0x08)
	None IMG-Attach-Check06; // 0x3f0(0x08)
	None IMG-Attachment-ALL; // 0x3f8(0x08)
	None IMG-Check02; // 0x400(0x08)
	None IMG-Check03; // 0x408(0x08)
	None IMG-Check04; // 0x410(0x08)
	None IMG-Check05; // 0x418(0x08)
	None IMG-Check06; // 0x420(0x08)
	None IMG-Check07; // 0x428(0x08)
	None IMG-Check08; // 0x430(0x08)
	None IMG-Check09; // 0x438(0x08)
	None IMG-Check10; // 0x440(0x08)
	None IMG-Check11; // 0x448(0x08)
	None IMG-Consumable_Chest_Check; // 0x450(0x08)
	None IMG-Consumable_Material_Check; // 0x458(0x08)
	None IMG-Consumable_Recipe_Check; // 0x460(0x08)
	None IMG-Consumable_Usable_Check; // 0x468(0x08)
	None IMG-Custom-ALL; // 0x470(0x08)
	None IMG-Custom-Face; // 0x478(0x08)
	None IMG-Custom-Hair; // 0x480(0x08)
	None IMG-Gear-All; // 0x488(0x08)
	None IMG-Gear-Armor; // 0x490(0x08)
	None IMG-Gear-Bag; // 0x498(0x08)
	None IMG-Gear-Ghillie; // 0x4a0(0x08)
	None IMG-Gear-Helmet; // 0x4a8(0x08)
	None IMG-Wearable-Check01; // 0x4b0(0x08)
	None IMG-Wearable-Check02; // 0x4b8(0x08)
	None IMG-Wearable-Check03; // 0x4c0(0x08)
	None IMG-Wearable-Check04; // 0x4c8(0x08)
	None IMG-Wearable-Check05; // 0x4d0(0x08)
	None IMG-Wearable-Check06; // 0x4d8(0x08)
	None IMG-Wearable-Check09; // 0x4e0(0x08)
	None IMG-Wearable-Check10; // 0x4e8(0x08)
	None IMG-Wearable-Check12; // 0x4f0(0x08)
	None SB-Attachment; // 0x4f8(0x08)
	None SB-Consumable; // 0x500(0x08)
	None SB-Custom; // 0x508(0x08)
	None SB-Gear; // 0x510(0x08)
	None SB-Perk; // 0x518(0x08)
	None SB-Weapon; // 0x520(0x08)
	None SB-Wearable; // 0x528(0x08)
	None TextBlock_2; // 0x530(0x08)
	None TextBlock_3; // 0x538(0x08)
	None TextBlock_4; // 0x540(0x08)
	None TextBlock_5; // 0x548(0x08)
	None TXT-Attachment-ALL; // 0x550(0x08)
	None TXT-Attachment-Barrel; // 0x558(0x08)
	None TXT-Attachment-Grip; // 0x560(0x08)
	None TXT-Attachment-Mag; // 0x568(0x08)
	None TXT-Attachment-Muzzle; // 0x570(0x08)
	None TXT-Attachment-Sight; // 0x578(0x08)
	None TXT-Attachment-Stock; // 0x580(0x08)
	None TXT-Consumable_Chest; // 0x588(0x08)
	None TXT-Consumable_Material; // 0x590(0x08)
	None TXT-Consumable_Recipe; // 0x598(0x08)
	None TXT-Consumable_Usable; // 0x5a0(0x08)
	None TXT-Custom-ALL; // 0x5a8(0x08)
	None TXT-Custom-Face; // 0x5b0(0x08)
	None TXT-Custom-Hair; // 0x5b8(0x08)
	None TXT-Gear-All; // 0x5c0(0x08)
	None TXT-Gear-Armor; // 0x5c8(0x08)
	None TXT-Gear-Bag; // 0x5d0(0x08)
	None TXT-Gear-Ghillie; // 0x5d8(0x08)
	None TXT-Gear-Helmet; // 0x5e0(0x08)
	None TXT-Wearable-ALL; // 0x5e8(0x08)
	None TXT-Wearable-Bottom; // 0x5f0(0x08)
	None TXT-Wearable-Eyewear; // 0x5f8(0x08)
	None TXT-Wearable-Gloves; // 0x600(0x08)
	None TXT-Wearable-Mask; // 0x608(0x08)
	None TXT-Wearable-Outer; // 0x610(0x08)
	None TXT-Wearable-Shoes; // 0x618(0x08)
	None TXT-Wearable-Top; // 0x620(0x08)
	None TXT-Wearable_Hat; // 0x628(0x08)
	None TXT-WepaonALL; // 0x630(0x08)
	None TXT-WepaonAmplifier; // 0x638(0x08)
	None TXT-WepaonAR; // 0x640(0x08)
	None TXT-WepaonDMR; // 0x648(0x08)
	None TXT-WepaonMelee; // 0x650(0x08)
	None TXT-WepaonPistol; // 0x658(0x08)
	None TXT-WepaonShotgun; // 0x660(0x08)
	None TXT-WepaonSMG; // 0x668(0x08)
	None TXT-WepaonSR; // 0x670(0x08)
	None TXT-WepaonThrowing; // 0x678(0x08)
	None VerticalBox_Perk; // 0x680(0x08)
	None NormalSlateColor; // 0x688(0x28)
	None SelectedSlateColor; // 0x6b0(0x28)
	None BlackMarketMainRef; // 0x6d8(0x08)
	None Enemy_Lv_Motion_FadeOut_Inert; // 0x2a0(0x08)
	None Enemy_Lv_Motion_FadeIn_Inert; // 0x2a8(0x08)
	None FadeOut; // 0x2b0(0x08)
	None Enemy_Inert; // 0x2b8(0x08)
	None HorizontalBox_1; // 0x2c0(0x08)
	None HorizontalBox_2; // 0x2c8(0x08)
	None Image_2; // 0x2d0(0x08)
	None Image_145; // 0x2d8(0x08)
	None Overlay_2; // 0x2e0(0x08)
	None Overlay_98; // 0x2e8(0x08)
	None Pawn; // 0x2f0(0x08)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None BTN-Menu04; // 0x3f0(0x08)
	None BTN-Menu05; // 0x3f8(0x08)
	None BTN-Menu06; // 0x400(0x08)
	None BTN-Menu07; // 0x408(0x08)
	None BTN-Menu08; // 0x410(0x08)
	None BTN-Menu09; // 0x418(0x08)
	None BTN-Menu10; // 0x420(0x08)
	None BTN-Menu11; // 0x428(0x08)
	None CP-SlotInfo; // 0x430(0x08)
	None IMG-BG; // 0x438(0x08)
	None IMG-BG-Border; // 0x440(0x08)
	None IMG-Item; // 0x448(0x08)
	None IMG-Mask; // 0x450(0x08)
	None IMG-Over; // 0x458(0x08)
	None IMG-Over-Border; // 0x460(0x08)
	None Menu02; // 0x468(0x08)
	None Menu03; // 0x470(0x08)
	None Menu04; // 0x478(0x08)
	None Menu05; // 0x480(0x08)
	None Menu06; // 0x488(0x08)
	None Menu07; // 0x490(0x08)
	None Menu08; // 0x498(0x08)
	None Menu09; // 0x4a0(0x08)
	None Menu10; // 0x4a8(0x08)
	None Menu11; // 0x4b0(0x08)
	None Overlay_Mask; // 0x4b8(0x08)
	None TXT-Ammo; // 0x4c0(0x08)
	None TXT-Damage; // 0x4c8(0x08)
	None TXT-FireMode; // 0x4d0(0x08)
	None TXT-FireRate; // 0x4d8(0x08)
	None TXT-ItemName; // 0x4e0(0x08)
	None TXT-MagSize; // 0x4e8(0x08)
	None TXT-Menu01; // 0x4f0(0x08)
	None TXT-Menu02; // 0x4f8(0x08)
	None TXT-Menu03; // 0x500(0x08)
	None TXT-Menu04; // 0x508(0x08)
	None TXT-Menu05; // 0x510(0x08)
	None TXT-Menu06; // 0x518(0x08)
	None TXT-Menu07; // 0x520(0x08)
	None TXT-Menu08; // 0x528(0x08)
	None TXT-Menu09; // 0x530(0x08)
	None TXT-Menu10; // 0x538(0x08)
	None TXT-Menu11; // 0x540(0x08)
	None TXT-MoveSpeed; // 0x548(0x08)
	None TXT-ProjectileVelocity; // 0x550(0x08)
	None TXT-ReloadTime; // 0x558(0x08)
	None TXT-Weight; // 0x560(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Image; // 0x250(0x08)
	None Image_1; // 0x258(0x08)
	None Image_2; // 0x260(0x08)
	None Image_3; // 0x268(0x08)
	None Image_4; // 0x270(0x08)
	None Image_5; // 0x278(0x08)
	None Image_6; // 0x280(0x08)
	None Image_7; // 0x288(0x08)
	None Image_773; // 0x290(0x08)
	None WeaponSlot01; // 0x298(0x08)
	None WeaponSlot02; // 0x2a0(0x08)
	None WeaponSlot03; // 0x2a8(0x08)
	None WeaponSlot04; // 0x2b0(0x08)
	None WeaponSlot05; // 0x2b8(0x08)
	None WeaponSlots; // 0x2c0(0x50)
	None UberGraphFrame; // 0x248(0x08)
	None Image_350; // 0x250(0x08)
	None Image_585; // 0x258(0x08)
	None Image_Grade_Color_Line; // 0x260(0x08)
	None TextBlock_445; // 0x268(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None TextField; // 0x250(0x08)
	None Text; // 0x258(0x18)
	None Image_81; // 0x248(0x08)
	None Image_86; // 0x250(0x08)
	None Image_88; // 0x258(0x08)
	None Image_89; // 0x260(0x08)
	None Image_90; // 0x268(0x08)
	None Image_91; // 0x270(0x08)
	None Image_92; // 0x278(0x08)
	None Image_93; // 0x280(0x08)
	None Image_94; // 0x288(0x08)
	None Image_95; // 0x290(0x08)
	None Image_96; // 0x298(0x08)
	None Image_97; // 0x2a0(0x08)
	None Image_98; // 0x2a8(0x08)
	None Image_99; // 0x2b0(0x08)
	None Image_100; // 0x2b8(0x08)
	None Image_101; // 0x2c0(0x08)
	None Image_102; // 0x2c8(0x08)
	None Image_103; // 0x2d0(0x08)
	None Image_104; // 0x2d8(0x08)
	None Image_107; // 0x2e0(0x08)
	None Image_108; // 0x2e8(0x08)
	None Image_119; // 0x2f0(0x08)
	None Image_120; // 0x2f8(0x08)
	None Image_121; // 0x300(0x08)
	None Image_122; // 0x308(0x08)
	None Image_123; // 0x310(0x08)
	None Image_134; // 0x318(0x08)
	None Image_137; // 0x320(0x08)
	None Image_138; // 0x328(0x08)
	None Image_139; // 0x330(0x08)
	None Image_140; // 0x338(0x08)
	None Image_141; // 0x340(0x08)
	None Image_142; // 0x348(0x08)
	None Image_143; // 0x350(0x08)
	None Image_144; // 0x358(0x08)
	None Image_145; // 0x360(0x08)
	None Image_146; // 0x368(0x08)
	None Image_147; // 0x370(0x08)
	None Image_148; // 0x378(0x08)
	None Image_149; // 0x380(0x08)
	None Image_152; // 0x388(0x08)
	None Image_153; // 0x390(0x08)
	None Image_154; // 0x398(0x08)
	None Image_155; // 0x3a0(0x08)
	None Image_156; // 0x3a8(0x08)
	None Image_157; // 0x3b0(0x08)
	None Image_158; // 0x3b8(0x08)
	None Image_159; // 0x3c0(0x08)
	None Image_160; // 0x3c8(0x08)
	None Image_161; // 0x3d0(0x08)
	None Image_162; // 0x3d8(0x08)
	None Image_163; // 0x3e0(0x08)
	None Image_164; // 0x3e8(0x08)
	None WidgetSwitcher_1; // 0x3f0(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None VB_CoreList; // 0x250(0x08)
	None MaxWidgetCount; // 0x258(0x04)
	None bStartFromTop; // 0x25c(0x01)
	None Alignment; // 0x25d(0x01)
	None SetWidgetSwitcherIndex; // 0x260(0x04)
	None UberGraphFrame; // 0x3d0(0x08)
	None Camera; // 0x3d8(0x08)
	None SpringArm; // 0x3e0(0x08)
	None bKillCam; // 0x3e8(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Level_Up_New; // 0x250(0x08)
	None VSkill_Motion; // 0x258(0x08)
	None FinalitySkill_Motion; // 0x260(0x08)
	None LEVEL_UP; // 0x268(0x08)
	None CanvasPanel_294; // 0x270(0x08)
	None FSkill_Info; // 0x278(0x08)
	None FSkill_Title; // 0x280(0x08)
	None HorizontalBox_290; // 0x288(0x08)
	None Image_1; // 0x290(0x08)
	None Image_2; // 0x298(0x08)
	None Image_4; // 0x2a0(0x08)
	None Image_5; // 0x2a8(0x08)
	None Image_6; // 0x2b0(0x08)
	None Image_9; // 0x2b8(0x08)
	None Image_10; // 0x2c0(0x08)
	None Image_245; // 0x2c8(0x08)
	None Image_247; // 0x2d0(0x08)
	None Image_413; // 0x2d8(0x08)
	None Image_458; // 0x2e0(0x08)
	None Image_602; // 0x2e8(0x08)
	None Image_UltimateGetMat; // 0x2f0(0x08)
	None IMG_FinalitySkill; // 0x2f8(0x08)
	None Img_UltimateMaterial; // 0x300(0x08)
	None Light; // 0x308(0x08)
	None T_Desc; // 0x310(0x08)
	None T_Level; // 0x318(0x08)
	None T_PerkName; // 0x320(0x08)
	None TextBlock_LevelUpNewText; // 0x328(0x08)
	None UW-Inventory_PerkSlot_LevelUp; // 0x330(0x08)
	None UW-Inventory_PerkSlot_VSkill; // 0x338(0x08)
	None VSkill_Info; // 0x340(0x08)
	None VSkill_Titile; // 0x348(0x08)
	None VSkillThumbStroke_02; // 0x350(0x08)
	None WidgetSwitcher_LevelUpInfo; // 0x358(0x08)
	None Handle_LevelUpEffect; // 0x360(0x08)
	None EffectDelay; // 0x368(0x04)
	None PerkInfoQue; // 0x370(0x10)
	None CurrentPerkInfo; // 0x380(0x2c)
	None PerkLevelUpInfo; // 0x3b0(0x10)
	None PerkLevelUpData; // 0x3c0(0x178)
	None CurrentPerkData; // 0x538(0xe0)
	None CurrentLevel; // 0x618(0x04)
	None IsAlreadyUnlockedUltimate; // 0x61c(0x01)
	None CurrentLevelUpInfo; // 0x61d(0x01)
	None CurrentLevelQue; // 0x620(0x10)
	None CurrentUltimateMaterialValue; // 0x630(0x04)
	None UltimateUpdate; // 0x634(0x01)
	None UltimateMaterialInstance; // 0x638(0x08)
	None UltimateAnimTime; // 0x640(0x04)
	None UltimateGetMaterialInstance; // 0x648(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Alt; // 0x250(0x08)
	None Alt+; // 0x258(0x08)
	None Ctrl; // 0x260(0x08)
	None Ctrl+; // 0x268(0x08)
	None HorizontalBox_169; // 0x270(0x08)
	None Key; // 0x278(0x08)
	None ScaleBox_1; // 0x280(0x08)
	None Shift; // 0x288(0x08)
	None Shift+; // 0x290(0x08)
	None Horizontal Alignment; // 0x298(0x01)
	None vertical Alignment; // 0x299(0x01)
	None UsingAlphaBg; // 0x29a(0x01)
	None PreKeyType; // 0x29b(0x01)
	None PreKeyMappingData; // 0x2a0(0x28)
	None UsingKeyMappingData; // 0x2c8(0x01)
	None DefaultScale; // 0x2cc(0x04)
	None OverrideFontSize; // 0x2d0(0x01)
	None FontSize; // 0x2d4(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None BGImage; // 0x250(0x08)
	None BorderImage; // 0x258(0x08)
	None DisableImage; // 0x260(0x08)
	None Image_177; // 0x268(0x08)
	None ItemCount; // 0x270(0x08)
	None ItemImage; // 0x278(0x08)
	None WidgetReference; // 0x280(0x08)
	None Lock; // 0x288(0x01)
	None InventoryDragType; // 0x289(0x01)
	None ChangeTarget; // 0x290(0x08)
	None PlayerHUDRef; // 0x298(0x08)
	None TextBlock_DebugString; // 0x258(0x08)
	None MySeatColor; // 0x248(0x10)
	None WheelGroup; // 0x258(0x08)
	None SeatGroup; // 0x260(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Image_73; // 0x250(0x08)
	None KeyImageWidget; // 0x258(0x08)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None BTN-Menu04; // 0x3f0(0x08)
	None BTN-Menu05; // 0x3f8(0x08)
	None BTN-Menu06; // 0x400(0x08)
	None CP-SlotInfo; // 0x408(0x08)
	None IMG-BG; // 0x410(0x08)
	None IMG-BG-Border; // 0x418(0x08)
	None IMG-Item; // 0x420(0x08)
	None IMG-Mask; // 0x428(0x08)
	None IMG-Over; // 0x430(0x08)
	None IMG-Over-Border; // 0x438(0x08)
	None Menu02; // 0x440(0x08)
	None Menu03; // 0x448(0x08)
	None Menu04; // 0x450(0x08)
	None Menu05; // 0x458(0x08)
	None Menu06; // 0x460(0x08)
	None Overlay_Mask; // 0x468(0x08)
	None TXT-Armor; // 0x470(0x08)
	None TXT-Capacity; // 0x478(0x08)
	None TXT-DecreaseReloadTime; // 0x480(0x08)
	None TXT-ItemName; // 0x488(0x08)
	None TXT-Menu01; // 0x490(0x08)
	None TXT-Menu02; // 0x498(0x08)
	None TXT-Menu03; // 0x4a0(0x08)
	None TXT-Menu04; // 0x4a8(0x08)
	None TXT-Menu05; // 0x4b0(0x08)
	None TXT-Menu06; // 0x4b8(0x08)
	None TXT-Type; // 0x4c0(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Button_1; // 0x250(0x08)
	None death; // 0x258(0x08)
	None Image_168; // 0x260(0x08)
	None Image_216; // 0x268(0x08)
	None Image_506; // 0x270(0x08)
	None Image_623; // 0x278(0x08)
	None Img_LogOut; // 0x280(0x08)
	None Img_Voice; // 0x288(0x08)
	None Img_Voice_2; // 0x290(0x08)
	None Overlay_Death; // 0x298(0x08)
	None Slider_139; // 0x2a0(0x08)
	None T_PlayerIndex; // 0x2a8(0x08)
	None T_PlayerName; // 0x2b0(0x08)
	None TextBlock_209; // 0x2b8(0x08)
	None VerticalBox_1; // 0x2c0(0x08)
	None WidgetSwitcher; // 0x2c8(0x08)
	None EventDispatcher_ChangeVolumeState; // 0x2d0(0x10)
	None CurVoiceTalkState; // 0x2e0(0x20)
	None PingImage; // 0x300(0x08)
	None UberGraphFrame; // 0x2a8(0x08)
	None FuelGauge; // 0x2b0(0x08)
	None FuelIcon; // 0x2b8(0x08)
	None HPFaint; // 0x2c0(0x08)
	None HPGauge; // 0x2c8(0x08)
	None HPIcon; // 0x2d0(0x08)
	None SpeedText; // 0x2d8(0x08)
	None SubInfoParent; // 0x2e0(0x08)
	None UW-VehicleSeatWidget; // 0x2e8(0x08)
	None CachedVehicle; // 0x2f0(0x08)
	None MySeatColor; // 0x2f8(0x10)
	None EmptyFuelColor; // 0x308(0x10)
	None InterpTargetHpRate; // 0x318(0x04)
	None InterpCurrentHpRate; // 0x31c(0x04)
	None InterpSpeed; // 0x320(0x04)
	None HPFaintCurve; // 0x328(0x08)
	None HPColorCurve; // 0x330(0x08)
	None SubInfoWidget; // 0x338(0x08)
	None EnableBind; // 0x340(0x01)
	None NewVar_1; // 0x348(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_MS; // 0x250(0x08)
	None Image_78; // 0x258(0x08)
	None PingImage; // 0x260(0x08)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None UberGraphFrame; // 0x2a0(0x08)
	None LevelUp; // 0x2a8(0x08)
	None Blank_SkillBG; // 0x2b0(0x08)
	None Get_SkillBG; // 0x2b8(0x08)
	None IMG_CoolTime; // 0x2c0(0x08)
	None IMG_PerkIcon; // 0x2c8(0x08)
	None KeyImageWidget; // 0x2d0(0x08)
	None Lv1; // 0x2d8(0x08)
	None Lv2; // 0x2e0(0x08)
	None Lv3; // 0x2e8(0x08)
	None Over_CoolTime; // 0x2f0(0x08)
	None T_CoolTime; // 0x2f8(0x08)
	None T_PerkName; // 0x300(0x08)
	None WidgetSwitcher_Icon; // 0x308(0x08)
	None bHover; // 0x310(0x01)
	None CurrentExpPercent; // 0x314(0x04)
	None CurrentLevel; // 0x318(0x04)
	None LastLevel; // 0x31c(0x04)
	None TargetExpPercent; // 0x320(0x04)
	None ExpSpeed; // 0x324(0x04)
	None PerkData; // 0x328(0xe0)
	None CurrentLevelPercent; // 0x408(0x04)
	None MaxLevel; // 0x40c(0x04)
	None HoverWidget; // 0x410(0x08)
	None LvArray; // 0x418(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None FadeIn; // 0x250(0x08)
	None FadeOut; // 0x258(0x08)
	None Image; // 0x260(0x08)
	None Image_2; // 0x268(0x08)
	None Image_69; // 0x270(0x08)
	None UberGraphFrame; // 0xab0(0x08)
	None BP-HUDInteractionComponent; // 0xab8(0x08)
	None OpenedWidgetNum; // 0xac0(0x04)
	None ViewMode; // 0xac4(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None ADS_Pannel; // 0x250(0x08)
	None ADSZoom; // 0x258(0x08)
	None CanvasPanel_Main; // 0x260(0x08)
	None Descent; // 0x268(0x08)
	None Descent_Pannel; // 0x270(0x08)
	None Drive; // 0x278(0x08)
	None Drive_Pannel; // 0x280(0x08)
	None Key_ADSZeroingM; // 0x288(0x08)
	None Key_ADSZeroingP; // 0x290(0x08)
	None Key_ADSZoomIn; // 0x298(0x08)
	None Key_ADSZoomOut; // 0x2a0(0x08)
	None Ladder; // 0x2a8(0x08)
	None Ladder_Pannel; // 0x2b0(0x08)
	None Parachuting; // 0x2b8(0x08)
	None Parachuting_Pannel; // 0x2c0(0x08)
	None SmartPing; // 0x2c8(0x08)
	None SmartPing_Pannel; // 0x2d0(0x08)
	None Spectate; // 0x2d8(0x08)
	None Spectate_Pannel; // 0x2e0(0x08)
	None Swim; // 0x2e8(0x08)
	None Swim_Pannel; // 0x2f0(0x08)
	None T_ADSZeroingM; // 0x2f8(0x08)
	None T_ADSZeroingP; // 0x300(0x08)
	None T_ADSZoomIn; // 0x308(0x08)
	None T_ADSZoomOut; // 0x310(0x08)
	None UseItem; // 0x318(0x08)
	None UseItem_Pannel; // 0x320(0x08)
	None WidgetSwitcher_Guide; // 0x328(0x08)
	None WorldMap; // 0x330(0x08)
	None WorldMap_Always; // 0x338(0x08)
	None WorldMap_Pannel; // 0x340(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None B_Value; // 0x250(0x08)
	None Check; // 0x258(0x08)
	None G_Value; // 0x260(0x08)
	None Image_166; // 0x268(0x08)
	None Land; // 0x270(0x08)
	None Land_2; // 0x278(0x08)
	None Land_3; // 0x280(0x08)
	None Land_4; // 0x288(0x08)
	None Land_5; // 0x290(0x08)
	None Land_6; // 0x298(0x08)
	None R_5; // 0x2a0(0x08)
	None R_7; // 0x2a8(0x08)
	None R_9; // 0x2b0(0x08)
	None R_Value; // 0x2b8(0x08)
	None TextBlock_4; // 0x2c0(0x08)
	None TextBlock_5; // 0x2c8(0x08)
	None TextBlock_6; // 0x2d0(0x08)
	None TextBlock_8; // 0x2d8(0x08)
	None TextBlock_9; // 0x2e0(0x08)
	None TextBlock_10; // 0x2e8(0x08)
	None Timer; // 0x2f0(0x08)
	None StaticMesh; // 0x3b8(0x08)
	None UberGraphFrame; // 0x2a0(0x08)
	None HorizontalBox_1; // 0x2a8(0x08)
	None Image_bg; // 0x2b0(0x08)
	None RichTextBlock; // 0x2b8(0x08)
	None RichTextBlock_Title; // 0x2c0(0x08)
	None Throbber_1; // 0x2c8(0x08)
	None VerticalBox_2; // 0x2d0(0x08)
	None Textures; // 0x2d8(0x10)
	None Game Settings; // 0x2e8(0x08)
	None TempString; // 0x2f0(0x10)
	None Key; // 0x300(0x01)
	None RandomTemp; // 0x304(0x04)
	None ImageIndex; // 0x308(0x04)
	None TitleIndex; // 0x30c(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None ApplyBtn; // 0x250(0x08)
	None ApplyDisable; // 0x258(0x08)
	None ApplyNormalBg; // 0x260(0x08)
	None ApplyOverBg; // 0x268(0x08)
	None ApplyPressBg; // 0x270(0x08)
	None Button_31; // 0x278(0x08)
	None Lock; // 0x280(0x08)
	None NormalBg; // 0x288(0x08)
	None NormalBtn; // 0x290(0x08)
	None OverBG; // 0x298(0x08)
	None PressBg; // 0x2a0(0x08)
	None Title_Text; // 0x2a8(0x08)
	None Title; // 0x2b0(0x18)
	None OnClickEventDispatcher; // 0x2c8(0x10)
	None IsDisableBnt; // 0x2d8(0x01)
	None CurType; // 0x2dc(0x04)
	None ColorType; // 0x2e0(0x01)
	None Applytype; // 0x2e1(0x01)
	None NewVar_1; // 0x2e2(0x01)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_Slot_2; // 0x490(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x4d8(0x18)
	None AnimGraphNode_BlendListByBool; // 0x4f0(0xa0)
	None AnimGraphNode_Slot; // 0x590(0x48)
	None AnimGraphNode_LocalRefPose; // 0x5d8(0x18)
	None UberGraphFrame; // 0x278(0x08)
	None Anim_HideWidget; // 0x280(0x08)
	None Canvas; // 0x288(0x08)
	None Canvas_Minimap; // 0x290(0x08)
	None CanvasPanel_StatupFirst; // 0x298(0x08)
	None CanvasPanel_StatupThird; // 0x2a0(0x08)
	None T_GameVersion; // 0x2a8(0x08)
	None UW-CastingWidget; // 0x2b0(0x08)
	None UW-DamageLogWidget; // 0x2b8(0x08)
	None UW-HUDMessageWidget; // 0x2c0(0x08)
	None UW-Inventory_Perk; // 0x2c8(0x08)
	None UW-KillInfoWidget; // 0x2d0(0x08)
	None UW-MinimapWidget; // 0x2d8(0x08)
	None UW-PlayerInfoWidget_02; // 0x2e0(0x08)
	None UW-StatupWidget; // 0x2e8(0x08)
	None UW-TeamInfoWidget; // 0x2f0(0x08)
	None UW-Volume; // 0x2f8(0x08)
	None Vertical_MinimapAndTeamInfo; // 0x300(0x08)
	None PlayerController; // 0x308(0x08)
	None UW-Inventory_ItemSlotHover; // 0x310(0x08)
	None MainWidget; // 0x318(0x08)
	None CurrentState; // 0x320(0x01)
	None LastDisplayAbility; // 0x324(0x0c)
	None UberGraphFrame; // 0x248(0x08)
	None BT_UserName; // 0x250(0x08)
	None CP_Main; // 0x258(0x08)
	None HB_ItemInfo; // 0x260(0x08)
	None Image_264; // 0x268(0x08)
	None Image_265; // 0x270(0x08)
	None Image_1163; // 0x278(0x08)
	None IMG_Frontbar; // 0x280(0x08)
	None IMG_Item; // 0x288(0x08)
	None Img_TeamColor; // 0x290(0x08)
	None PB_HP; // 0x298(0x08)
	None PB_ItemCasting; // 0x2a0(0x08)
	None T_Item; // 0x2a8(0x08)
	None T_Quantity; // 0x2b0(0x08)
	None T_TeamNum; // 0x2b8(0x08)
	None T_UserName; // 0x2c0(0x08)
	None PlayerState; // 0x2c8(0x08)
	None ReplayController; // 0x2d0(0x08)
	None TargetCharacter; // 0x2d8(0x08)
	None MaxViewportSize; // 0x2e0(0x08)
	None LocalScreenPosition; // 0x2e8(0x08)
	None IsPositionUpdated; // 0x2f0(0x01)
	None DefaultCharacterZLocation; // 0x2f4(0x04)
	None UberGraphFrame; // 0x298(0x08)
	None Effect; // 0x2a0(0x08)
	None Master; // 0x2a8(0x08)
	None MasterOnOff; // 0x2b0(0x08)
	None Music; // 0x2b8(0x08)
	None ScrollBox_55; // 0x2c0(0x08)
	None UI; // 0x2c8(0x08)
	None VoiceChanel; // 0x2d0(0x08)
	None VoiceInput; // 0x2d8(0x08)
	None VoiceInputMode; // 0x2e0(0x08)
	None VoiceOutput; // 0x2e8(0x08)
	None ; // 0x2f0(0x08)
	None ; // 0x2f8(0x08)
	None ScrollBarTimer; // 0x300(0x08)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None BTN-Menu04; // 0x3f0(0x08)
	None BTN-Menu05; // 0x3f8(0x08)
	None BTN-Menu06; // 0x400(0x08)
	None CP-SlotInfo; // 0x408(0x08)
	None IMG-BG; // 0x410(0x08)
	None IMG-BG-Border; // 0x418(0x08)
	None IMG-Item; // 0x420(0x08)
	None IMG-Mask; // 0x428(0x08)
	None IMG-Over; // 0x430(0x08)
	None IMG-Over-Border; // 0x438(0x08)
	None Menu02; // 0x440(0x08)
	None Menu03; // 0x448(0x08)
	None Menu04; // 0x450(0x08)
	None Menu05; // 0x458(0x08)
	None Menu06; // 0x460(0x08)
	None Overlay_Mask; // 0x468(0x08)
	None TXT-Armor; // 0x470(0x08)
	None TXT-Capacity; // 0x478(0x08)
	None TXT-DecreaseReloadTime; // 0x480(0x08)
	None TXT-ItemName; // 0x488(0x08)
	None TXT-Menu01; // 0x490(0x08)
	None TXT-Menu02; // 0x498(0x08)
	None TXT-Menu03; // 0x4a0(0x08)
	None TXT-Menu04; // 0x4a8(0x08)
	None TXT-Menu05; // 0x4b0(0x08)
	None TXT-Menu06; // 0x4b8(0x08)
	None TXT-Type; // 0x4c0(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Message TextBlock; // 0x250(0x08)
	None Username TextBlock; // 0x258(0x08)
	None UserName; // 0x260(0x18)
	None Text; // 0x278(0x18)
	None Username Color; // 0x290(0x10)
	None Message Color; // 0x2a0(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Button; // 0x250(0x08)
	None Button Text Block; // 0x258(0x08)
	None Button Text; // 0x260(0x18)
	None Active Text Color; // 0x278(0x10)
	None Inactive Text Color; // 0x288(0x10)
	None Tab Is Active?; // 0x298(0x01)
	None Current Text Color; // 0x29c(0x10)
	None Parent Widget; // 0x2b0(0x08)
	None Chat Switcher Widget; // 0x2b8(0x08)
	None Notification Text Color; // 0x2c0(0x10)
	None Interp Time; // 0x2d0(0x04)
	None Notification Color Hold Time; // 0x2d4(0x04)
	None Notification Fade Time; // 0x2d8(0x04)
	None Fading to Notification?; // 0x2dc(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Chat Input; // 0x250(0x08)
	None Chat Switcher; // 0x258(0x08)
	None Tab Scrollbox; // 0x260(0x08)
	None Whole Widget Container; // 0x268(0x08)
	None Chat System; // 0x270(0x08)
	None CurrentDialogBox; // 0x278(0x08)
	None Chat Inactivity Hide Delay; // 0x280(0x04)
	None Faded?; // 0x284(0x01)
	None Was Previously Faded?; // 0x285(0x01)
	None Use Autohide?; // 0x286(0x01)
	None Message Character Limit; // 0x288(0x04)
	None Text Input - Inactive Hint Text; // 0x290(0x10)
	None Text Input - Active Hint Text; // 0x2a0(0x10)
	None # Messages to Keep; // 0x2b0(0x04)
	None Clear Messages at # Messages; // 0x2b4(0x04)
	None Show Mouse on Enter?; // 0x2b8(0x01)
	None Chat Scrollbox; // 0x248(0x08)
	None Group; // 0x250(0x10)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None StaticMesh; // 0x310(0x08)
	None DefaultSceneRoot; // 0x318(0x08)
	None Image_112; // 0x248(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Image_2; // 0x250(0x08)
	None Notice; // 0x258(0x08)
	None WidgetSwitcher_1; // 0x260(0x08)
	None UberGraphFrame; // 0x5a0(0x08)
	None Game Settings Wrapper; // 0x5a8(0x08)
	None LastPCPosition; // 0x5b0(0x0c)
	None UberGraphFrame; // 0x310(0x08)
	None DefaultSceneRoot; // 0x318(0x08)
	None Muted Players; // 0x320(0x10)
	None Two-way Mute?; // 0x330(0x01)
	None Player Name; // 0x338(0x10)
	None Players to Message; // 0x348(0x10)
	None Game Instance Blueprint; // 0x358(0x08)
	None Joined Groups; // 0x360(0x10)
	None Banned Groups; // 0x370(0x10)
	None Owned Groups; // 0x380(0x10)
	None Chat Widget; // 0x390(0x08)
	None HUD Widget; // 0x398(0x08)
	None UberGraphFrame; // 0x13b8(0x08)
	None Observer; // 0x13c0(0x08)
	None PlayingKillCam; // 0x13c8(0x01)
	None AfterGameHUD; // 0x13d0(0x08)
	None GameInstanceRef; // 0x13d8(0x08)
	None bKillCamFinish; // 0x13e0(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Title; // 0x250(0x08)
	None WB-ItemList; // 0x258(0x08)
	None TitleText; // 0x260(0x18)
	None TitleVisible; // 0x278(0x01)
	None TargetActor; // 0x280(0x08)
	None ItemInfos; // 0x288(0x10)
	None InventoryWidget; // 0x298(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Image_94; // 0x250(0x08)
	None Image_224; // 0x258(0x08)
	None RichTextBlock_321; // 0x260(0x08)
	None InventoryRef; // 0x268(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Button_43; // 0x250(0x08)
	None Off; // 0x258(0x08)
	None On; // 0x260(0x08)
	None TextBlock_67; // 0x268(0x08)
	None Text; // 0x270(0x18)
	None Image_362; // 0x248(0x08)
	None Image_552; // 0x250(0x08)
	None RichTextBlock_74; // 0x258(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Character_BG_Motion; // 0x250(0x08)
	None ArmorSlot; // 0x258(0x08)
	None BagSlot; // 0x260(0x08)
	None BottomSlot; // 0x268(0x08)
	None Character_BG; // 0x270(0x08)
	None EyeWearSlot; // 0x278(0x08)
	None GhillieSlot; // 0x280(0x08)
	None GlovesSlot; // 0x288(0x08)
	None HatSlot; // 0x290(0x08)
	None HelmetSlot; // 0x298(0x08)
	None MaskSlot; // 0x2a0(0x08)
	None OuterSlot; // 0x2a8(0x08)
	None ShoesSlot; // 0x2b0(0x08)
	None TopSlot; // 0x2b8(0x08)
	None UW-Inventory_CharacterPreView; // 0x2c0(0x08)
	None PlayerController; // 0x2c8(0x08)
	None EquipedSlots; // 0x2d0(0x50)
	None UberGraphFrame; // 0x248(0x08)
	None HoverBG; // 0x250(0x08)
	None ScrollBox_1; // 0x258(0x08)
	None WB-CarriedList; // 0x260(0x08)
	None ShowPerkSlot; // 0x30(0x01)
	None Image_SupplyBoxMarker; // 0x248(0x08)
	None PersonalSupplyBox; // 0x250(0x08)
	None WidgetSwitcher_2; // 0x258(0x08)
	None OnMarkerClicked; // 0x260(0x10)
	None CurrentMarker; // 0x270(0x08)
	None MapCompRef; // 0x278(0x08)
	None TmpPingTypeTexture; // 0x280(0x08)
	None UberGraphFrame; // 0x258(0x08)
	None HorizontalBox_11; // 0x260(0x08)
	None HorizontalBox_12; // 0x268(0x08)
	None HorizontalBox_13; // 0x270(0x08)
	None HorizontalBox_14; // 0x278(0x08)
	None HorizontalBox_15; // 0x280(0x08)
	None HorizontalBox_16; // 0x288(0x08)
	None HorizontalBox_00; // 0x290(0x08)
	None HorizontalBox_02; // 0x298(0x08)
	None HorizontalBox_03; // 0x2a0(0x08)
	None HorizontalBox_04; // 0x2a8(0x08)
	None HorizontalBox_05; // 0x2b0(0x08)
	None HorizontalBox_06; // 0x2b8(0x08)
	None HorizontalBox_07; // 0x2c0(0x08)
	None HorizontalBox_08; // 0x2c8(0x08)
	None HorizontalBox_09; // 0x2d0(0x08)
	None Line00; // 0x2d8(0x08)
	None Line01; // 0x2e0(0x08)
	None Line02; // 0x2e8(0x08)
	None Line03; // 0x2f0(0x08)
	None Line04; // 0x2f8(0x08)
	None Line05; // 0x300(0x08)
	None Line06; // 0x308(0x08)
	None Line07; // 0x310(0x08)
	None Line08; // 0x318(0x08)
	None Line09; // 0x320(0x08)
	None Line10; // 0x328(0x08)
	None Line11; // 0x330(0x08)
	None Line12; // 0x338(0x08)
	None Line13; // 0x340(0x08)
	None Line14; // 0x348(0x08)
	None Line15; // 0x350(0x08)
	None Overlay_Main; // 0x358(0x08)
	None Slot00; // 0x360(0x08)
	None Slot01; // 0x368(0x08)
	None Slot02; // 0x370(0x08)
	None Slot03; // 0x378(0x08)
	None Slot04; // 0x380(0x08)
	None Slot05; // 0x388(0x08)
	None Slot06; // 0x390(0x08)
	None Slot07; // 0x398(0x08)
	None Slot08; // 0x3a0(0x08)
	None Slot09; // 0x3a8(0x08)
	None Slot10; // 0x3b0(0x08)
	None Slot11; // 0x3b8(0x08)
	None Slot12; // 0x3c0(0x08)
	None Slot13; // 0x3c8(0x08)
	None Slot14; // 0x3d0(0x08)
	None Slot15; // 0x3d8(0x08)
	None Slot16; // 0x3e0(0x08)
	None Slot17; // 0x3e8(0x08)
	None Slot18; // 0x3f0(0x08)
	None Slot19; // 0x3f8(0x08)
	None Slot20; // 0x400(0x08)
	None Slot21; // 0x408(0x08)
	None Slot22; // 0x410(0x08)
	None Slot23; // 0x418(0x08)
	None Slot24; // 0x420(0x08)
	None Slot25; // 0x428(0x08)
	None Slot26; // 0x430(0x08)
	None Slot27; // 0x438(0x08)
	None Slot28; // 0x440(0x08)
	None Slot29; // 0x448(0x08)
	None Slot30; // 0x450(0x08)
	None Slot31; // 0x458(0x08)
	None VerticalBox_2438; // 0x460(0x08)
	None HoverWidget; // 0x468(0x08)
	None HaveItemKey; // 0x470(0x08)
	None TargetItemKey; // 0x478(0x08)
	None IsSearchExpertWeapon; // 0x480(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None AmmoImage; // 0x250(0x08)
	None AmmoText; // 0x258(0x08)
	None Button_2; // 0x260(0x08)
	None CanvasPanel_98; // 0x268(0x08)
	None HorizontalBox_Perk; // 0x270(0x08)
	None HorizontalBox_Rarity; // 0x278(0x08)
	None Image; // 0x280(0x08)
	None Image_369; // 0x288(0x08)
	None Image_704; // 0x290(0x08)
	None Image_874; // 0x298(0x08)
	None Image_924; // 0x2a0(0x08)
	None Image_1262; // 0x2a8(0x08)
	None Image_1400; // 0x2b0(0x08)
	None Reinforce; // 0x2b8(0x08)
	None TextBlock_291; // 0x2c0(0x08)
	None UW-Inventory_WeaponPerkSlot; // 0x2c8(0x08)
	None UW-Inventory_WeaponPerkSlot_C_2; // 0x2d0(0x08)
	None UW-Inventory_WeaponPerkSlot_C_3; // 0x2d8(0x08)
	None WeaponBg; // 0x2e0(0x08)
	None WeaponImage01; // 0x2e8(0x08)
	None WeaponName; // 0x2f0(0x08)
	None WidgetSwitcher_1; // 0x2f8(0x08)
	None DraggedWidget; // 0x300(0x08)
	None WeaponData; // 0x308(0x98)
	None OnDropEventDispatcher; // 0x3a0(0x10)
	None AmmorKey; // 0x3b0(0x08)
	None ShowToolTipEventDispatcher; // 0x3b8(0x10)
	None IsDefaultWeapon; // 0x3c8(0x01)
	None ClickNum; // 0x3cc(0x04)
	None OnDefaultWeaponEventDispatcher; // 0x3d0(0x10)
	None SaveKey; // 0x3e0(0x18)
	None UberGraphFrame; // 0x248(0x08)
	None Cont; // 0x250(0x08)
	None DropHoverImage; // 0x258(0x08)
	None EmptyImage; // 0x260(0x08)
	None EquipImage; // 0x268(0x08)
	None HoverImage2; // 0x270(0x08)
	None ItemImage; // 0x278(0x08)
	None WidgetSwitcher_2; // 0x280(0x08)
	None Index; // 0x288(0x04)
	None OnDropEventDispatcher; // 0x290(0x10)
	None Data; // 0x2a0(0x100)
	None DraggedWidget; // 0x3a0(0x08)
	None IsEmpty; // 0x3a8(0x01)
	None ShowToolTipEventDispatcher; // 0x3b0(0x10)
	None OnChangeSlotEventDispatcher; // 0x3c0(0x10)
	None OnRightClickEventDispatcher; // 0x3d0(0x10)
	None SaveKey; // 0x3e0(0x18)
	None ClickNum; // 0x3f8(0x04)
	None UberGraphFrame; // 0x298(0x08)
	None ButtonClearStats; // 0x2a0(0x08)
	None ButtonDebugVehicle; // 0x2a8(0x08)
	None ButtonEngine; // 0x2b0(0x08)
	None ButtonFPS; // 0x2b8(0x08)
	None ButtonGameplayTick; // 0x2c0(0x08)
	None ButtonMemory; // 0x2c8(0x08)
	None ButtonNetwork; // 0x2d0(0x08)
	None ButtonParticles; // 0x2d8(0x08)
	None ButtonSceneRendering; // 0x2e0(0x08)
	None ButtonStatSlow; // 0x2e8(0x08)
	None ButtonUnitGraph; // 0x2f0(0x08)
	None ComboBoxViewModes; // 0x2f8(0x08)
	None ComboBoxViewModes1; // 0x300(0x08)
	None DeleteSettingsSaveFile; // 0x308(0x08)
	None GameSpeed; // 0x310(0x08)
	None GameSpeedEdit; // 0x318(0x08)
	None HorizontalBox_8; // 0x320(0x08)
	None HorizontalBox_9; // 0x328(0x08)
	None HorizontalBox_10; // 0x330(0x08)
	None HorizontalBox_11; // 0x338(0x08)
	None HorizontalBox_12; // 0x340(0x08)
	None HorizontalBox_13; // 0x348(0x08)
	None PauseGame; // 0x350(0x08)
	None TemporalAACatmullRomCheck; // 0x358(0x08)
	None TemporalAACurrentFrameWeightEdit; // 0x360(0x08)
	None TemporalAAFilterSizeEdit; // 0x368(0x08)
	None TemporalAAPauseCorrectChek; // 0x370(0x08)
	None TemporalAASamplesEdit; // 0x378(0x08)
	None TonemapperSharpenEdit; // 0x380(0x08)
	None ToolTip_DeleteSettings; // 0x388(0x08)
	None ToolTip_GameSpeed; // 0x390(0x08)
	None ToolTip_PauseGame; // 0x398(0x08)
	None ToolTip_StatCommands; // 0x3a0(0x08)
	None ToolTip_ViewModes; // 0x3a8(0x08)
	None ToolTip_ViewModes_2; // 0x3b0(0x08)
	None Game Settings; // 0x3b8(0x08)
	None Time Dilation Value Binding; // 0x3c0(0x04)
	None Time Dilation Text Binding; // 0x3c8(0x18)
	None Settings File Deleted; // 0x3e0(0x10)
	None Pause Game When Menu Open; // 0x3f0(0x10)
	None TemporalAAFilterSizeTextBinding; // 0x400(0x18)
	None TemporalAACurrentFrameWeightTextBinding; // 0x418(0x18)
	None TemporalAASamplesTextBinding; // 0x430(0x18)
	None TonemapperSharpenTextBinding; // 0x448(0x18)
	None TemporalAAFilterSizeValue; // 0x460(0x04)
	None TemporalAACurrentFrameWeightValue; // 0x464(0x04)
	None TemporalAASamplesValue; // 0x468(0x04)
	None TonemapperSharpenValue; // 0x46c(0x04)
	None TempKey; // 0x470(0x08)
	None Temp; // 0x478(0x50)
	None Type; // 0x4c8(0x01)
	None TempValue2; // 0x4cc(0x04)
	None IsOnDebugVehicle; // 0x4d0(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Bg; // 0x250(0x08)
	None Button_Cancle; // 0x258(0x08)
	None Button_OK; // 0x260(0x08)
	None Image; // 0x268(0x08)
	None Image_168; // 0x270(0x08)
	None Image_423; // 0x278(0x08)
	None Image_853; // 0x280(0x08)
	None Image_1449; // 0x288(0x08)
	None Image_1451; // 0x290(0x08)
	None Image_1452; // 0x298(0x08)
	None Image_1453; // 0x2a0(0x08)
	None Image_1454; // 0x2a8(0x08)
	None Image_1965; // 0x2b0(0x08)
	None Image_1967; // 0x2b8(0x08)
	None Image_1968; // 0x2c0(0x08)
	None Image_1969; // 0x2c8(0x08)
	None Image_1970; // 0x2d0(0x08)
	None Image_1971; // 0x2d8(0x08)
	None Image_1972; // 0x2e0(0x08)
	None Image_1973; // 0x2e8(0x08)
	None Image_1974; // 0x2f0(0x08)
	None Image_1975; // 0x2f8(0x08)
	None Image_1976; // 0x300(0x08)
	None Image_1977; // 0x308(0x08)
	None Image_1978; // 0x310(0x08)
	None Image_2324; // 0x318(0x08)
	None TextBlock_CurrentGold; // 0x320(0x08)
	None TextBlock_Price; // 0x328(0x08)
	None TargetCharacter; // 0x330(0x08)
	None UberGraphFrame; // 0x2e0(0x08)
	None Bt_ListNext; // 0x2e8(0x08)
	None BT_ListPrev; // 0x2f0(0x08)
	None ScrollBox_PlayerItem; // 0x2f8(0x08)
	None T_SortType; // 0x300(0x08)
	None VB_ListMain; // 0x308(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Button_ItemSlotHover_4; // 0x250(0x08)
	None UW-Inventory_ItemSlotHover_4; // 0x258(0x08)
	None ItemWeaponInfo; // 0x260(0x88)
	None ParentWidget; // 0x2e8(0x08)
	None UberGraphFrame; // 0x7c0(0x08)
	None StaticMesh; // 0x7c8(0x08)
	None MagneticDecal; // 0x7d0(0x08)
	None Puls_PulsScale_0F5B0359412DDBACBDF407BB69788854; // 0x7d8(0x04)
	None Puls__Direction_0F5B0359412DDBACBDF407BB69788854; // 0x7dc(0x01)
	None Puls; // 0x7e0(0x08)
	None Height; // 0x7e8(0x04)
	None SeaLevelZ; // 0x7ec(0x04)
	None bIsMatchEnded; // 0x7f0(0x01)
	None ModifyingOpacityTime; // 0x7f4(0x04)
	None CurrentOpacity; // 0x7f8(0x04)
	None ScaleModifier; // 0x7fc(0x04)
	None ParametersCurve; // 0x800(0x08)
	None MaterialParameterRadius; // 0x808(0x04)
	None bWasMpUpdated; // 0x80c(0x01)
	None PreRadius; // 0x810(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_Show_classinfo; // 0x250(0x08)
	None Button_SpreadList; // 0x258(0x08)
	None Image_323; // 0x260(0x08)
	None UW-ClassinfoitemWidget; // 0x268(0x08)
	None UW-ClassinfoitemWidget_2; // 0x270(0x08)
	None UW-ClassinfoitemWidget_3; // 0x278(0x08)
	None UW-ClassinfoitemWidget_4; // 0x280(0x08)
	None UW-ClassinfoitemWidget_5; // 0x288(0x08)
	None UW-ClassinfoitemWidget_6; // 0x290(0x08)
	None UW-ClassinfoitemWidget_7; // 0x298(0x08)
	None UW-ClassinfoitemWidget_8; // 0x2a0(0x08)
	None UW-ClassinfoitemWidget_9; // 0x2a8(0x08)
	None UW-ClassinfoitemWidget_10; // 0x2b0(0x08)
	None UW-ClassinfoitemWidget_11; // 0x2b8(0x08)
	None UW-ClassinfoitemWidget_12; // 0x2c0(0x08)
	None VerticalBox_ClassBox; // 0x2c8(0x08)
	None VerticalBox_ClassList; // 0x2d0(0x08)
	None VerticalBox_Description; // 0x2d8(0x08)
	None VerticalBox_Main; // 0x2e0(0x08)
	None LastTableRow; // 0x2e8(0x04)
	None ClassInfoItemMap; // 0x2f0(0x50)
	None ListVisibility; // 0x340(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Img_Voice; // 0x250(0x08)
	None Img_VoiceX; // 0x258(0x08)
	None SizeBox_2; // 0x260(0x08)
	None TextBlock; // 0x268(0x08)
	None WidgetSwitcher_LogOut; // 0x270(0x08)
	None Timer; // 0x278(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_LoopHintSpecialWeapon; // 0x250(0x08)
	None Button_183; // 0x258(0x08)
	None Button_283; // 0x260(0x08)
	None CanvasPanel; // 0x268(0x08)
	None CanvasPanel_2; // 0x270(0x08)
	None Image_2; // 0x278(0x08)
	None Image_3; // 0x280(0x08)
	None Image_4; // 0x288(0x08)
	None Image_185; // 0x290(0x08)
	None Image_186; // 0x298(0x08)
	None Image_189; // 0x2a0(0x08)
	None Image_297; // 0x2a8(0x08)
	None Img_Find; // 0x2b0(0x08)
	None Overlay_2; // 0x2b8(0x08)
	None SizeBox_3; // 0x2c0(0x08)
	None T_SerchButton; // 0x2c8(0x08)
	None TextBlock_5; // 0x2d0(0x08)
	None TextBlock_495; // 0x2d8(0x08)
	None Throbber; // 0x2e0(0x08)
	None UW-Inventory_MaterialIconSlot; // 0x2e8(0x08)
	None UW-Inventory_MaterialIconSlot_2; // 0x2f0(0x08)
	None UW-Inventory_MaterialIconSlot_3; // 0x2f8(0x08)
	None UW-Inventory_MaterialIconSlot_4; // 0x300(0x08)
	None UW-Inventory_MaterialIconSlot_5; // 0x308(0x08)
	None UW-Inventory_MaterialIconSlot_6; // 0x310(0x08)
	None UW-Inventory_MaterialIconSlot_7; // 0x318(0x08)
	None UW-Inventory_MaterialIconSlot_8; // 0x320(0x08)
	None UW-Inventory_MaterialIconSlot_9; // 0x328(0x08)
	None UW-Inventory_MaterialIconSlot_10; // 0x330(0x08)
	None UW-Inventory_MaterialIconSlot_11; // 0x338(0x08)
	None UW-Inventory_MaterialIconSlot_12; // 0x340(0x08)
	None VerticalBox_2; // 0x348(0x08)
	None VerticalBox_4; // 0x350(0x08)
	None ShowButton; // 0x358(0x01)
	None Index; // 0x35c(0x04)
	None TempList; // 0x360(0x10)
	None MaxSlotCount; // 0x370(0x04)
	None EnableShowExpertWeapon; // 0x374(0x01)
	None Image_273; // 0x248(0x08)
	None UW-Lobby_ItemName; // 0x250(0x08)
	None UW-Lobby_WeaponInfo_Stat; // 0x258(0x08)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x248(0x08)
	None Character_BG_Motion; // 0x250(0x08)
	None Image_308; // 0x258(0x08)
	None ScrollBox_KeepedList; // 0x260(0x08)
	None SizeBox_KeepedList; // 0x268(0x08)
	None PlayerController; // 0x270(0x08)
	None SlotMaxHeight; // 0x278(0x04)
	None UberGraphFrame; // 0x13a0(0x08)
	None BP-HUDInteractionComponent; // 0x13a8(0x08)
	None SmartPingSystemComponent; // 0x13b0(0x08)
	None MapSize; // 0x13b8(0x0c)
	None IsInWidget; // 0x13c4(0x01)
	None InputActionsToBlock; // 0x13c8(0x10)
	None BlueZone; // 0x13d8(0x08)
	None PhoneticAlphabetTable_NATO; // 0x13e0(0x10)
	None bHasJustClosed; // 0x13f0(0x01)
	None bLineTrace; // 0x13f1(0x01)
	None UI-BlackMarket; // 0x13f8(0x08)
	None LocalScreenPosition; // 0x1400(0x08)
	None MaxViewportSize; // 0x1408(0x08)
	None ReverseSide; // 0x1410(0x01)
	None SavedInventory; // 0x1418(0x08)
	None DefaultItemList; // 0x1420(0x10)
	None SavedInventorySlotName; // 0x1430(0x10)
	None bLoadInventoryData; // 0x1440(0x01)
	None bOpenSystemMenu; // 0x1441(0x01)
	None MinBrightness; // 0x1444(0x04)
	None MaxBrightness; // 0x1448(0x04)
	None Contrast; // 0x144c(0x04)
	None bUsePostProcessVolumeOption; // 0x1450(0x01)
	None FilmToeIntensity; // 0x1454(0x04)
	None ColorGradingGlobalGamma; // 0x1458(0x04)
	None bInputModeUI; // 0x145c(0x01)
	None Timer; // 0x1460(0x08)
	None DoubleclickTimer; // 0x1468(0x08)
	None CheckTime; // 0x1470(0x04)
	None DoubleClickTime; // 0x1474(0x04)
	None CheckDoubleClick; // 0x1478(0x01)
	None TempLocation; // 0x147c(0x0c)
	None NameWidgets; // 0x1488(0x10)
	None CurrentNameWidgetCount; // 0x1498(0x04)
	None bNameTooltipMode; // 0x149c(0x01)
	None SmartPingTypeIndex; // 0x14a0(0x04)
	None EableSmartPing; // 0x14a4(0x01)
	None PingLock; // 0x14a5(0x01)
	None OperationMessageWidget; // 0x14a8(0x08)
	None SelectionMenu; // 0x14b0(0x08)
	None IsVisibleSelectionMenu; // 0x14b8(0x01)
	None BoostItemList; // 0x14c0(0x50)
	None IgnoreMenu; // 0x1510(0x01)
	None UberGraphFrame; // 0x2e8(0x08)
	None Anim_Glow; // 0x2f0(0x08)
	None HideFreeSupply; // 0x2f8(0x08)
	None ShowFreeSupply; // 0x300(0x08)
	None LevelUp; // 0x308(0x08)
	None Ability_Defense; // 0x310(0x08)
	None Ability_Speed; // 0x318(0x08)
	None Ability_Power; // 0x320(0x08)
	None Survive_FadeInOut; // 0x328(0x08)
	None Anim_LevelUpDefense; // 0x330(0x08)
	None Anim_LevelUpSpeed; // 0x338(0x08)
	None Anim_LevelUpPower; // 0x340(0x08)
	None btn_ItemTree; // 0x348(0x08)
	None btn_PerkDeckDisabled; // 0x350(0x08)
	None btn_PerkDeckDisabled_2; // 0x358(0x08)
	None btn_PerkDeckEnabled; // 0x360(0x08)
	None btn_PerkDeckEnabled_2; // 0x368(0x08)
	None Canvas_BG; // 0x370(0x08)
	None Canvas_ChangeClass; // 0x378(0x08)
	None Canvas_ChangeDisable; // 0x380(0x08)
	None Canvas_ChangeDisable_2; // 0x388(0x08)
	None Canvas_ChangeEnable; // 0x390(0x08)
	None Canvas_ChangeEnable_2; // 0x398(0x08)
	None Canvas_ChangeSupply; // 0x3a0(0x08)
	None Canvas_LevelupEffect; // 0x3a8(0x08)
	None Canvas_Main; // 0x3b0(0x08)
	None Canvas_Perk; // 0x3b8(0x08)
	None Canvas_SupplyButton; // 0x3c0(0x08)
	None Canvas_UltimateEffect; // 0x3c8(0x08)
	None Canvas_UltimateLightEffect; // 0x3d0(0x08)
	None HorizontalBox_300; // 0x3d8(0x08)
	None HorizontalBox_303; // 0x3e0(0x08)
	None HorizontalBox_Stat; // 0x3e8(0x08)
	None HorizontalBox_UnlockLevel; // 0x3f0(0x08)
	None Image; // 0x3f8(0x08)
	None Image_5; // 0x400(0x08)
	None Image_86; // 0x408(0x08)
	None Image_126; // 0x410(0x08)
	None Image_163; // 0x418(0x08)
	None Image_180; // 0x420(0x08)
	None Image_200; // 0x428(0x08)
	None Image_203; // 0x430(0x08)
	None Image_222; // 0x438(0x08)
	None Image_384; // 0x440(0x08)
	None Image_387; // 0x448(0x08)
	None Image_388; // 0x450(0x08)
	None Image_389; // 0x458(0x08)
	None Image_485; // 0x460(0x08)
	None Image_571; // 0x468(0x08)
	None Image_1098; // 0x470(0x08)
	None Image_1100; // 0x478(0x08)
	None Image_1104; // 0x480(0x08)
	None Image_Cycle; // 0x488(0x08)
	None Image_Cycle_2; // 0x490(0x08)
	None IMG_ClassIcon; // 0x498(0x08)
	None Img_PerkDeckIcon; // 0x4a0(0x08)
	None IMG_Supply; // 0x4a8(0x08)
	None IMG_UltimatedSkill; // 0x4b0(0x08)
	None InvalidationBox_1; // 0x4b8(0x08)
	None KeyImageWidget; // 0x4c0(0x08)
	None NotEnoughGold; // 0x4c8(0x08)
	None Over_Ultimate; // 0x4d0(0x08)
	None Overlay_UltimateKey; // 0x4d8(0x08)
	None Spacer_251; // 0x4e0(0x08)
	None T_ClassName; // 0x4e8(0x08)
	None T_Defense; // 0x4f0(0x08)
	None T_DefenseAnim; // 0x4f8(0x08)
	None T_Power; // 0x500(0x08)
	None T_PowerAnim; // 0x508(0x08)
	None T_Speed; // 0x510(0x08)
	None T_SpeedAnim; // 0x518(0x08)
	None T_UltimateName; // 0x520(0x08)
	None T_UnlockLevel; // 0x528(0x08)
	None T_UnlockLevel2; // 0x530(0x08)
	None T_WeaponName; // 0x538(0x08)
	None TextBlock_2; // 0x540(0x08)
	None TextBlock_3; // 0x548(0x08)
	None TextBlock_4; // 0x550(0x08)
	None TextBlock_9; // 0x558(0x08)
	None TextBlock_ClassLevel; // 0x560(0x08)
	None TextBlock_Count_Blue; // 0x568(0x08)
	None TextBlock_Count_Green; // 0x570(0x08)
	None TextBlock_Count_Red; // 0x578(0x08)
	None TextBlock_Defense; // 0x580(0x08)
	None TextBlock_Power; // 0x588(0x08)
	None TextBlock_Price; // 0x590(0x08)
	None TextBlock_Price_2; // 0x598(0x08)
	None TextBlock_Select; // 0x5a0(0x08)
	None TextBlock_Select_2; // 0x5a8(0x08)
	None TextBlock_Speed; // 0x5b0(0x08)
	None TextBlock_SurviveMessage01; // 0x5b8(0x08)
	None TextBlock_SurviveMessage02; // 0x5c0(0x08)
	None TextBlock_UltimateDesc; // 0x5c8(0x08)
	None Title; // 0x5d0(0x08)
	None UltiLight_001; // 0x5d8(0x08)
	None UltiLight_002; // 0x5e0(0x08)
	None UltiLight_003; // 0x5e8(0x08)
	None UW-Inventory_PerkSlot; // 0x5f0(0x08)
	None UW-Inventory_PerkSlot_2; // 0x5f8(0x08)
	None UW-Inventory_PerkSlot_3; // 0x600(0x08)
	None UW-Inventory_PerkSlot_4; // 0x608(0x08)
	None UW-Inventory_PerkSlot_5; // 0x610(0x08)
	None UW-Inventory_PerkSlot_6; // 0x618(0x08)
	None UW-Inventory_PerkSlot_7; // 0x620(0x08)
	None UW-Inventory_PerkSlot_8; // 0x628(0x08)
	None UW-Inventory_PerkSlot_9; // 0x630(0x08)
	None VB_Health; // 0x638(0x08)
	None VB_Power; // 0x640(0x08)
	None VB_Speed; // 0x648(0x08)
	None VerticalBox_Blue; // 0x650(0x08)
	None VerticalBox_Green; // 0x658(0x08)
	None VerticalBox_Red; // 0x660(0x08)
	None WidgetSwitcher_ChangeClass; // 0x668(0x08)
	None WidgetSwitcher_ChangeSupply; // 0x670(0x08)
	None WidgetSwitcher_TreeAndClass; // 0x678(0x08)
	None WidgetSwitcher_Ultimate; // 0x680(0x08)
	None CurrentPerkDeckName; // 0x688(0x08)
	None CurrentPerkInfos; // 0x690(0x10)
	None ExpertWeaponKey; // 0x6a0(0x08)
	None CurrentPerkCells; // 0x6a8(0x50)
	None PerkMode; // 0x6f8(0x04)
	None HoverWidget; // 0x700(0x08)
	None PowerValue; // 0x708(0x04)
	None TimerHandle_Power; // 0x710(0x08)
	None SpeedValue; // 0x718(0x04)
	None TimerHandle_Speed; // 0x720(0x08)
	None DefenseValue; // 0x728(0x04)
	None TimerHandle_Defense; // 0x730(0x08)
	None bPlayAbilityCountSoundStart; // 0x738(0x01)
	None bPlayAbilityCountSoundEnd; // 0x739(0x01)
	None LevelUpSound; // 0x740(0x08)
	None EnableSupplyBtn; // 0x748(0x01)
	None FreeSupplyTimer; // 0x750(0x08)
	None NotEnoughtGoldTimer; // 0x758(0x08)
	None GainPerkPopups; // 0x760(0x10)
	None IsPlayingUltimateSound; // 0x770(0x01)
	None LastLevel; // 0x774(0x04)
	None PerkDeckClassInfo; // 0x778(0x28)
	None UberGraphFrame; // 0x258(0x08)
	None UW-TeamInfoItemWidget; // 0x260(0x08)
	None UW-TeamInfoItemWidget_C_2; // 0x268(0x08)
	None VerticalBox_InfoList; // 0x270(0x08)
	None UberGraphFrame; // 0x268(0x08)
	None BT_UserName; // 0x270(0x08)
	None CP_Main; // 0x278(0x08)
	None HB_ItemInfo; // 0x280(0x08)
	None Image_264; // 0x288(0x08)
	None Image_265; // 0x290(0x08)
	None Image_1163; // 0x298(0x08)
	None IMG_Frontbar; // 0x2a0(0x08)
	None IMG_Item; // 0x2a8(0x08)
	None Img_TeamColor; // 0x2b0(0x08)
	None PB_HP; // 0x2b8(0x08)
	None PB_ItemCasting; // 0x2c0(0x08)
	None PB_Message; // 0x2c8(0x08)
	None SizeBox_Message; // 0x2d0(0x08)
	None Switcher_Casting; // 0x2d8(0x08)
	None T_Item; // 0x2e0(0x08)
	None T_Message; // 0x2e8(0x08)
	None T_Quantity; // 0x2f0(0x08)
	None T_TeamNum; // 0x2f8(0x08)
	None T_UserName; // 0x300(0x08)
	None PlayerState; // 0x308(0x08)
	None ReplayController; // 0x310(0x08)
	None TargetCharacter; // 0x318(0x08)
	None MaxViewportSize; // 0x320(0x08)
	None LocalScreenPosition; // 0x328(0x08)
	None IsPositionUpdated; // 0x330(0x01)
	None DefaultCharacterZLocation; // 0x334(0x04)
	None TargetPawn; // 0x338(0x08)
	None UberGraphFrame; // 0x308(0x08)
	None Anim_IconBouncing; // 0x310(0x08)
	None Progress_Stroke; // 0x318(0x08)
	None Shoot_ani; // 0x320(0x08)
	None CanvasPanel_Main; // 0x328(0x08)
	None death; // 0x330(0x08)
	None Image_126; // 0x338(0x08)
	None Image_168; // 0x340(0x08)
	None Image_280; // 0x348(0x08)
	None Image_623; // 0x350(0x08)
	None Image_624; // 0x358(0x08)
	None Image_1058; // 0x360(0x08)
	None Image_Firing; // 0x368(0x08)
	None Image_Heart; // 0x370(0x08)
	None Image_Outline; // 0x378(0x08)
	None Image_TeamInfoClassIcon; // 0x380(0x08)
	None Img_LogOut; // 0x388(0x08)
	None Img_Voice; // 0x390(0x08)
	None Img_VoiceMute; // 0x398(0x08)
	None InvalidationBox_1; // 0x3a0(0x08)
	None Overlay_447; // 0x3a8(0x08)
	None Overlay_Death; // 0x3b0(0x08)
	None Overlay_RemainGoldenTimeSelf; // 0x3b8(0x08)
	None Overlay_RequestResus; // 0x3c0(0x08)
	None ProgressBar_440; // 0x3c8(0x08)
	None ProgressBar_443; // 0x3d0(0x08)
	None SizeBox_132; // 0x3d8(0x08)
	None StateGoldenTime; // 0x3e0(0x08)
	None StateKnockdown; // 0x3e8(0x08)
	None T_ClassName; // 0x3f0(0x08)
	None T_ClassWeapon; // 0x3f8(0x08)
	None T_PlayerIndex; // 0x400(0x08)
	None T_PlayerName; // 0x408(0x08)
	None TeamColor; // 0x410(0x08)
	None TextBlock_4; // 0x418(0x08)
	None TextBlock_297; // 0x420(0x08)
	None TextBlock_590; // 0x428(0x08)
	None TextBlock_591; // 0x430(0x08)
	None TextBlock_1016; // 0x438(0x08)
	None TextBlock_RemainGoldenTimeSelf; // 0x440(0x08)
	None TextBlock_RequestResus; // 0x448(0x08)
	None TextBlock_Resuscitating; // 0x450(0x08)
	None UW-RequestResuscitation; // 0x458(0x08)
	None WidgetSwitcher_LogOut; // 0x460(0x08)
	None WidgetSwitcher_Resuscitate; // 0x468(0x08)
	None Index; // 0x470(0x04)
	None Behavior; // 0x474(0x01)
	None hp; // 0x478(0x04)
	None Name; // 0x480(0x18)
	None ColorList; // 0x498(0x10)
	None bPin; // 0x4a8(0x01)
	None PrevHP; // 0x4ac(0x04)
	None bReduceHP; // 0x4b0(0x01)
	None TimerHandleReduceHP; // 0x4b8(0x08)
	None bIncreaseHP; // 0x4c0(0x01)
	None HealthChangeCurve; // 0x4c8(0x08)
	None HealthDangerCurve; // 0x4d0(0x08)
	None HealTimer; // 0x4d8(0x08)
	None FaintTimer; // 0x4e0(0x08)
	None BaseHealth; // 0x4e8(0x04)
	None TargetHealth; // 0x4ec(0x04)
	None HealthWeight; // 0x4f0(0x04)
	None TargetFaint; // 0x4f4(0x04)
	None BaseFaint; // 0x4f8(0x04)
	None FaintWeight; // 0x4fc(0x04)
	None CurrentHPPercent; // 0x500(0x04)
	None HealHPPercent; // 0x504(0x04)
	None FaintPercent; // 0x508(0x04)
	None CurrentAlpha; // 0x50c(0x04)
	None AlphaTimer; // 0x510(0x04)
	None AlphaCurve; // 0x518(0x08)
	None KnockDown; // 0x520(0x01)
	None HeartBeat; // 0x524(0x04)
	None DisConnectSprite; // 0x528(0x08)
	None KnockDownSprite; // 0x530(0x08)
	None DeathSprite; // 0x538(0x08)
	None VehicleSprite; // 0x540(0x08)
	None HpTimer; // 0x548(0x08)
	None EndTime; // 0x550(0x04)
	None StartTime; // 0x554(0x04)
	None TotalTime; // 0x558(0x04)
	None ResultValue; // 0x55c(0x04)
	None AddTme; // 0x560(0x04)
	None PreStart; // 0x564(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Button_Request; // 0x250(0x08)
	None Image_955; // 0x258(0x08)
	None Image_1208; // 0x260(0x08)
	None SizeBox_77; // 0x268(0x08)
	None SizeBox_78; // 0x270(0x08)
	None Text_Price; // 0x278(0x08)
	None TextBlock_767; // 0x280(0x08)
	None WidgetSwitcher_Price; // 0x288(0x08)
	None PlayerControllerRef; // 0x290(0x08)
	None bCanRequest; // 0x298(0x01)
	None bRequest; // 0x299(0x01)
	None RequstingResuscitationText; // 0x2a0(0x18)
	None RequestingSizeBoxWidth; // 0x2b8(0x04)
	None RequestTextColor; // 0x2c0(0x28)
	None RequestingTextColor; // 0x2e8(0x28)
	None RequestingSizeBoxInitWidth; // 0x310(0x04)
	None RequstingResuscitationInitText; // 0x318(0x18)
	None InitButtonStyle; // 0x330(0x278)
	None RequestingButtonStyle; // 0x5a8(0x278)
	None CanRequestButtonStyle; // 0x820(0x278)
	None UberGraphFrame; // 0x258(0x08)
	None Anim_Hide; // 0x260(0x08)
	None Anim_Down; // 0x268(0x08)
	None CanvasPanel_Main; // 0x270(0x08)
	None Img_Back; // 0x278(0x08)
	None Img_BroadType; // 0x280(0x08)
	None Img_DamegeType; // 0x288(0x08)
	None Img_Weapon; // 0x290(0x08)
	None ScaleBox_Weapon; // 0x298(0x08)
	None SizeBox_BroadType; // 0x2a0(0x08)
	None SizeBox_DamageType; // 0x2a8(0x08)
	None SizeBox_HeadShot; // 0x2b0(0x08)
	None T_Context; // 0x2b8(0x08)
	None UW-DiedInfoWidget; // 0x2c0(0x08)
	None UW-KillerInfoWidget; // 0x2c8(0x08)
	None OnTimeOut; // 0x2d0(0x10)
	None BroadcastDamageType; // 0x2e0(0x50)
	None MyTeamColor; // 0x330(0x28)
	None MyTeamKnockOutColor; // 0x358(0x28)
	None EnermyTeamColor; // 0x380(0x28)
	None EnermyTeamKnockOutColor; // 0x3a8(0x28)
	None DefaultColor; // 0x3d0(0x28)
	None DefaultKnockColor; // 0x3f8(0x28)
	None ResuscatedColor; // 0x420(0x28)
	None ParentWidgetRef; // 0x448(0x08)
	None Timer_StartHideAnim; // 0x450(0x08)
	None CurrentInfoColor; // 0x458(0x28)
	None UberGraphFrame; // 0x290(0x08)
	None MarkerBorder; // 0x298(0x08)
	None UberGraphFrame; // 0x2c0(0x08)
	None KillMessageList; // 0x2c8(0x08)
	None UW-KillMessageListWidget; // 0x2d0(0x08)
	None UW-KillMessageListWidget_2; // 0x2d8(0x08)
	None UW-KillMessageListWidget_3; // 0x2e0(0x08)
	None UW-KillMessageListWidget_4; // 0x2e8(0x08)
	None UW-KillMessageListWidget_5; // 0x2f0(0x08)
	None UW-KillMessageListWidget_6; // 0x2f8(0x08)
	None UW-KillMessageListWidget_7; // 0x300(0x08)
	None UW-KillMessageListWidget_8; // 0x308(0x08)
	None UW-KillMessageListWidget_9; // 0x310(0x08)
	None UW-KillMessageListWidget_10; // 0x318(0x08)
	None TmpInfoList; // 0x320(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None UW-GameBuffSlot_Boost; // 0x250(0x08)
	None HoverWidget; // 0x258(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Canvas; // 0x250(0x08)
	None CenterCursor; // 0x258(0x08)
	None DisplayText; // 0x260(0x08)
	None Image; // 0x268(0x08)
	None Image_2; // 0x270(0x08)
	None Image_3; // 0x278(0x08)
	None Image_4; // 0x280(0x08)
	None Image_5; // 0x288(0x08)
	None Image_6; // 0x290(0x08)
	None Image_7; // 0x298(0x08)
	None Image_274; // 0x2a0(0x08)
	None Message0; // 0x2a8(0x08)
	None Message2; // 0x2b0(0x08)
	None Message3; // 0x2b8(0x08)
	None Message3_1; // 0x2c0(0x08)
	None Message3_2; // 0x2c8(0x08)
	None Message3_3; // 0x2d0(0x08)
	None Message3_4; // 0x2d8(0x08)
	None Message3_5; // 0x2e0(0x08)
	None Message3_6; // 0x2e8(0x08)
	None Message3_7; // 0x2f0(0x08)
	None Message3_8; // 0x2f8(0x08)
	None Message4; // 0x300(0x08)
	None Message5; // 0x308(0x08)
	None Message6; // 0x310(0x08)
	None Message7; // 0x318(0x08)
	None Messgae1; // 0x320(0x08)
	None Over1; // 0x328(0x08)
	None Over2; // 0x330(0x08)
	None Over3; // 0x338(0x08)
	None Over4; // 0x340(0x08)
	None Over5; // 0x348(0x08)
	None Over6; // 0x350(0x08)
	None Over7; // 0x358(0x08)
	None Over8; // 0x360(0x08)
	None Slot0; // 0x368(0x08)
	None Slot1; // 0x370(0x08)
	None Slot2; // 0x378(0x08)
	None Slot3; // 0x380(0x08)
	None Slot4; // 0x388(0x08)
	None Slot5; // 0x390(0x08)
	None Slot6; // 0x398(0x08)
	None Slot7; // 0x3a0(0x08)
	None Type; // 0x3a8(0x08)
	None UW-PlayerMarkerWidget; // 0x3b0(0x08)
	None WidgetSwitcher_133; // 0x3b8(0x08)
	None SelectionWidgets; // 0x3c0(0x10)
	None MenuCenter; // 0x3d0(0x08)
	None ReferenceVector; // 0x3d8(0x0c)
	None Selected; // 0x3e8(0x10)
	None SmartPingComponent; // 0x3f8(0x08)
	None RadialMenuMaterial; // 0x400(0x08)
	None SelectedIndex; // 0x408(0x04)
	None StartIndex; // 0x40c(0x04)
	None AngleSize; // 0x410(0x04)
	None DistanceFromCenter; // 0x414(0x04)
	None Divisions; // 0x418(0x04)
	None SelectionToleranceFromCenter; // 0x41c(0x04)
	None Hovered; // 0x420(0x10)
	None ClearPing; // 0x430(0x10)
	None IsPingType; // 0x440(0x01)
	None Enable RequestMessage; // 0x441(0x01)
	None UberGraphFrame; // 0x268(0x08)
	None Flicker; // 0x270(0x08)
	None BaseGuage; // 0x278(0x08)
	None Guage; // 0x280(0x08)
	None HB_CancelMessage; // 0x288(0x08)
	None Image_921; // 0x290(0x08)
	None Percent; // 0x298(0x08)
	None ProgressBar_Item; // 0x2a0(0x08)
	None RichT_Message; // 0x2a8(0x08)
	None TextBlock_1; // 0x2b0(0x08)
	None TextBlock_Time; // 0x2b8(0x08)
	None UseMessage; // 0x2c0(0x08)
	None VerticalBox_2; // 0x2c8(0x08)
	None PercentValue; // 0x2d0(0x04)
	None KnockState; // 0x2d4(0x01)
	None HideTimer; // 0x2d8(0x04)
	None ProgressStyle; // 0x2e0(0x1a0)
	None IsShowRevive; // 0x480(0x01)
	None CastingInfo; // 0x488(0x18)
	None CurrentTime; // 0x4a0(0x04)
	None KeyFontSize; // 0x4a4(0x04)
	None KeySizeScale; // 0x4a8(0x04)
	None CurrentLanguage; // 0x4ac(0x04)
	None UberGraphFrame; // 0x288(0x08)
	None GoldDesc_Hide; // 0x290(0x08)
	None GoldDesc_Show; // 0x298(0x08)
	None Revival_Add; // 0x2a0(0x08)
	None AliveCount_Text; // 0x2a8(0x08)
	None AliveCount_Text_2; // 0x2b0(0x08)
	None HorizontalBox_8; // 0x2b8(0x08)
	None HorizontalBox_16; // 0x2c0(0x08)
	None HorizontalBox_89; // 0x2c8(0x08)
	None HorizontalBox_Alive; // 0x2d0(0x08)
	None HorizontalBox_Assist; // 0x2d8(0x08)
	None HorizontalBox_CurrentGold; // 0x2e0(0x08)
	None HorizontalBox_Kill; // 0x2e8(0x08)
	None HorizontalBox_Team; // 0x2f0(0x08)
	None Image; // 0x2f8(0x08)
	None Image_1; // 0x300(0x08)
	None Image_2; // 0x308(0x08)
	None Image_6; // 0x310(0x08)
	None Image_102; // 0x318(0x08)
	None Image_271; // 0x320(0x08)
	None Image_376; // 0x328(0x08)
	None Image_378; // 0x330(0x08)
	None Image_1584; // 0x338(0x08)
	None KillAliveBG; // 0x340(0x08)
	None KillAliveBG_2; // 0x348(0x08)
	None KillAliveBG_3; // 0x350(0x08)
	None KillAliveBG_4; // 0x358(0x08)
	None KillCount_Text; // 0x360(0x08)
	None KillCount_Text_2; // 0x368(0x08)
	None RichTextBlock_275; // 0x370(0x08)
	None SizeBox_1; // 0x378(0x08)
	None SizeBox_3; // 0x380(0x08)
	None Spacer_2; // 0x388(0x08)
	None T_AliveCount; // 0x390(0x08)
	None T_AssistCount; // 0x398(0x08)
	None T_KillCount; // 0x3a0(0x08)
	None T_TeamCount; // 0x3a8(0x08)
	None TextBlock_1; // 0x3b0(0x08)
	None TextBlock_CurrentGold; // 0x3b8(0x08)
	None ShowKillCountUI; // 0x3c0(0x01)
	None CurrentKillCount; // 0x3c4(0x04)
	None NewVar_1; // 0x3c8(0x04)
	None ShowGoldDescHandle; // 0x3d0(0x08)
	None AliveCount_Text_1_1; // 0x3d8(0x08)
	None KillCount_Text_1_1; // 0x3e0(0x08)
	None UberGraphFrame; // 0x278(0x08)
	None FadeIn; // 0x280(0x08)
	None BackgroundBlur_1; // 0x288(0x08)
	None BackPackBound_begin; // 0x290(0x08)
	None BackPackBound_end; // 0x298(0x08)
	None BlackMarketOverlay; // 0x2a0(0x08)
	None BTN-BlackMarket; // 0x2a8(0x08)
	None Button_SortByTime; // 0x2b0(0x08)
	None Button_SortByType; // 0x2b8(0x08)
	None CanvasPanel_1; // 0x2c0(0x08)
	None CanvasPanel_7; // 0x2c8(0x08)
	None CanvasPanel_16; // 0x2d0(0x08)
	None Carried_Area; // 0x2d8(0x08)
	None CarriedBound_begin; // 0x2e0(0x08)
	None CarriedBound_end; // 0x2e8(0x08)
	None CarriedList; // 0x2f0(0x08)
	None CarriedList_StrongBox; // 0x2f8(0x08)
	None CheckBox; // 0x300(0x08)
	None CheckBox_1; // 0x308(0x08)
	None CheckBox_2; // 0x310(0x08)
	None CombineRecipe; // 0x318(0x08)
	None EquippedList; // 0x320(0x08)
	None HorizontalBox_WeightMax; // 0x328(0x08)
	None Image; // 0x330(0x08)
	None Image_2; // 0x338(0x08)
	None Image_3; // 0x340(0x08)
	None Image_5; // 0x348(0x08)
	None Image_6; // 0x350(0x08)
	None Image_7; // 0x358(0x08)
	None Image_8; // 0x360(0x08)
	None Image_9; // 0x368(0x08)
	None Image_10; // 0x370(0x08)
	None Image_223; // 0x378(0x08)
	None Image_227; // 0x380(0x08)
	None Image_271; // 0x388(0x08)
	None Image_324; // 0x390(0x08)
	None Image_489; // 0x398(0x08)
	None Image_556; // 0x3a0(0x08)
	None Image_Guess; // 0x3a8(0x08)
	None Image_ItemInfo; // 0x3b0(0x08)
	None IMG-BG; // 0x3b8(0x08)
	None IMG-BlackMarketBorder; // 0x3c0(0x08)
	None InputMaskImage; // 0x3c8(0x08)
	None Material_Area; // 0x3d0(0x08)
	None MaterialBound_begin; // 0x3d8(0x08)
	None MaterialBound_end; // 0x3e0(0x08)
	None ProgressBar_MaxWeight; // 0x3e8(0x08)
	None ProgressBar_Weight; // 0x3f0(0x08)
	None ProgressBar_WeightBag; // 0x3f8(0x08)
	None ProximityBound; // 0x400(0x08)
	None ProximityList; // 0x408(0x08)
	None StrongBox_Area; // 0x410(0x08)
	None T_AdditionalMaxWeight; // 0x418(0x08)
	None T_AdditionalMaxWeightSymbol; // 0x420(0x08)
	None T_AdditionalWeight; // 0x428(0x08)
	None T_AdditionalWeightSymbol; // 0x430(0x08)
	None T_MaxWeight; // 0x438(0x08)
	None T_StrongboxCount; // 0x440(0x08)
	None T_Weight; // 0x448(0x08)
	None T_WeightSlash; // 0x450(0x08)
	None TextBlock_11; // 0x458(0x08)
	None TextBlock_CurrentGold; // 0x460(0x08)
	None TextBlock_SortByTime; // 0x468(0x08)
	None TextBlock_SortByType; // 0x470(0x08)
	None UW-Inventory_FreeSupplyToolTip; // 0x478(0x08)
	None UW-Inventory_ItemInfoTooltip; // 0x480(0x08)
	None UW-Inventory_Keeped; // 0x488(0x08)
	None UW-Inventory_Material; // 0x490(0x08)
	None UW-Inventory_Recipe; // 0x498(0x08)
	None UW-SearchingMaterial; // 0x4a0(0x08)
	None WeaponBound; // 0x4a8(0x08)
	None WeaponList; // 0x4b0(0x08)
	None WeightPerCent; // 0x4b8(0x08)
	None PlayerController; // 0x4c0(0x08)
	None bItemDrag; // 0x4c8(0x01)
	None DropPopup; // 0x4d0(0x08)
	None MaximumWeight; // 0x4d8(0x04)
	None OldProximityItemCount; // 0x4dc(0x04)
	None ProximityGround; // 0x4e0(0x08)
	None DefaultPawnRef; // 0x4e8(0x08)
	None ProximityGroundPool; // 0x4f0(0x10)
	None OldDefaultPawnRef; // 0x500(0x08)
	None CharacterTimerHandle; // 0x508(0x08)
	None DropBoxWidgetList; // 0x510(0x10)
	None DropBoxParentWidget; // 0x520(0x08)
	None SavedInventorySettings; // 0x528(0x08)
	None EquipedWeapon; // 0x530(0x08)
	None OldWeaponList; // 0x538(0x10)
	None ChangeAttachments; // 0x548(0x01)
	None ItemHoverWidget; // 0x550(0x08)
	None MainWidget; // 0x558(0x08)
	None EventDispatcher_OnCloseInventory; // 0x560(0x10)
	None StealableWidgetList; // 0x570(0x10)
	None bItemInfoHovered; // 0x580(0x01)
	None bFirstTimeNotifyItemInfo; // 0x581(0x01)
	None Timer_ItemInfoTooltip; // 0x588(0x08)
	None IsShowingItemInfoTooltip; // 0x590(0x01)
	None FirstTimeCapsuleItem; // 0x594(0x04)
	None FirstTimeCraft; // 0x598(0x04)
	None bGoldWarning; // 0x59c(0x01)
	None DefaultWeightColor; // 0x5a0(0x28)
	None MinusWeightColor; // 0x5c8(0x28)
	None PlusWeightColor; // 0x5f0(0x28)
	None UberGraphFrame; // 0x248(0x08)
	None PlayerController; // 0x250(0x08)
	None InventoryItemInfo; // 0x258(0x98)
	None InventoryItemDetailInfo; // 0x2f0(0x490)
	None WeaponInfo; // 0x780(0xb30)
	None ItemSlotHoverWIdget; // 0x12b0(0x08)
	None InventoryWidget; // 0x12b8(0x08)
	None DraggedWidget; // 0x12c0(0x08)
	None InventorySlotWidgetKind; // 0x12c8(0x01)
	None DragItemBrush; // 0x12d0(0x88)
	None RButtonDown; // 0x1358(0x01)
	None bEpuipped; // 0x1359(0x01)
	None UberGraphFrame; // 0x1360(0x08)
	None Abillity; // 0x1368(0x08)
	None AbillityBG; // 0x1370(0x08)
	None AbillityValue; // 0x1378(0x08)
	None Bg; // 0x1380(0x08)
	None BorderBG; // 0x1388(0x08)
	None ChoiceBG; // 0x1390(0x08)
	None DefenseBG; // 0x1398(0x08)
	None DurabilityBar; // 0x13a0(0x08)
	None EmptyBG; // 0x13a8(0x08)
	None ItemImage; // 0x13b0(0x08)
	None OverBG; // 0x13b8(0x08)
	None WearableItemType; // 0x13c0(0x01)
	None IsDefense; // 0x13c1(0x01)
	None HoverWidget; // 0x13c8(0x08)
	None HoverOwnerWidget; // 0x13d0(0x08)
	None Index; // 0x13d8(0x04)
	None UberGraphFrame; // 0x1360(0x08)
	None Ani_Tutorial_Glow; // 0x1368(0x08)
	None C_Slot_Up_Arrow; // 0x1370(0x08)
	None C_SlotHover_ItemState_Hide; // 0x1378(0x08)
	None C_SlotHover_ItemState_Show; // 0x1380(0x08)
	None C_SlotHover; // 0x1388(0x08)
	None BGImage; // 0x1390(0x08)
	None BGImage_2; // 0x1398(0x08)
	None CanvasPanel_ITemState; // 0x13a0(0x08)
	None Count120; // 0x13a8(0x08)
	None Crate_Default; // 0x13b0(0x08)
	None Crate_Hover; // 0x13b8(0x08)
	None Effect_Booster; // 0x13c0(0x08)
	None Effect_Capsule; // 0x13c8(0x08)
	None HorizontalBox_Rarity; // 0x13d0(0x08)
	None HoverImage; // 0x13d8(0x08)
	None HoverImage_Round; // 0x13e0(0x08)
	None Image_531; // 0x13e8(0x08)
	None Image_539; // 0x13f0(0x08)
	None Image_540; // 0x13f8(0x08)
	None Image_541; // 0x1400(0x08)
	None Image_542; // 0x1408(0x08)
	None Image_543; // 0x1410(0x08)
	None Image_544; // 0x1418(0x08)
	None Image_Bindable; // 0x1420(0x08)
	None Image_Supply; // 0x1428(0x08)
	None ItemImage; // 0x1430(0x08)
	None ItemState_Text; // 0x1438(0x08)
	None KeepedItem_List; // 0x1440(0x08)
	None KeepedItem_ListHover; // 0x1448(0x08)
	None LvColor; // 0x1450(0x08)
	None Motion; // 0x1458(0x08)
	None ProgressBar_309; // 0x1460(0x08)
	None SizeBox_1; // 0x1468(0x08)
	None TextBlock_3; // 0x1470(0x08)
	None Tutorial_Glow; // 0x1478(0x08)
	None UW-MouseRightClick_Big; // 0x1480(0x08)
	None UW-MouseRightClick_Small; // 0x1488(0x08)
	None WeaponColorBg; // 0x1490(0x08)
	None WeaponEquipItem_Default; // 0x1498(0x08)
	None WeaponEquipItem_Hover; // 0x14a0(0x08)
	None WeaponItemImage; // 0x14a8(0x08)
	None InventoryItemInfoIndex; // 0x14b0(0x04)
	None MedicalBGColor; // 0x14b4(0x10)
	None CurCount; // 0x14c4(0x04)
	None SetSlotInfo; // 0x14c8(0x10)
	None CanUseCapsule; // 0x14d8(0x01)
	None SelectedHoverImage; // 0x14e0(0x08)
	None ShowRarityStar; // 0x14e8(0x10)
	None ShowIconBG; // 0x14f8(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Border; // 0x250(0x08)
	None Button_222; // 0x258(0x08)
	None Image_192; // 0x260(0x08)
	None Title_Text; // 0x268(0x08)
	None Index; // 0x270(0x04)
	None DeActive; // 0x274(0x10)
	None Active; // 0x284(0x10)
	None ClickEventDispatcher; // 0x298(0x10)
	None Title; // 0x2a8(0x18)
	None Type; // 0x2c0(0x01)
	None IsActive; // 0x2c1(0x01)
	None Over; // 0x2c4(0x10)
	None UberGraphFrame; // 0x1360(0x08)
	None Complete_ani; // 0x1368(0x08)
	None Serching_ani; // 0x1370(0x08)
	None Button; // 0x1378(0x08)
	None IconBox; // 0x1380(0x08)
	None Image; // 0x1388(0x08)
	None Image_2; // 0x1390(0x08)
	None Image_3; // 0x1398(0x08)
	None Image_4; // 0x13a0(0x08)
	None Image_5; // 0x13a8(0x08)
	None Image_6; // 0x13b0(0x08)
	None Image_7; // 0x13b8(0x08)
	None Image_8; // 0x13c0(0x08)
	None Image_9; // 0x13c8(0x08)
	None Image_10; // 0x13d0(0x08)
	None Image_149; // 0x13d8(0x08)
	None Image_170; // 0x13e0(0x08)
	None Image_253; // 0x13e8(0x08)
	None Image_305; // 0x13f0(0x08)
	None Image_Full; // 0x13f8(0x08)
	None IMG_ItemIcon; // 0x1400(0x08)
	None MaterialIcon; // 0x1408(0x08)
	None MouseHover_2; // 0x1410(0x08)
	None MouseHover_; // 0x1418(0x08)
	None MousePress_2; // 0x1420(0x08)
	None MousePress_; // 0x1428(0x08)
	None Searching_; // 0x1430(0x08)
	None Stroke; // 0x1438(0x08)
	None Stroke_2; // 0x1440(0x08)
	None Stroke_3; // 0x1448(0x08)
	None Stroke_4; // 0x1450(0x08)
	None PreHoveredWidget; // 0x1458(0x08)
	None PreDragType; // 0x1460(0x01)
	None Selected; // 0x1461(0x01)
	None NeedCount; // 0x1464(0x04)
	None ItemKey; // 0x1468(0x08)
	None SelectItem; // 0x1470(0x10)
	None BindSelectSearch; // 0x1480(0x01)
	None EnableSearch; // 0x1481(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_KillMessage; // 0x250(0x08)
	None Anim_RemoveCoreInfo; // 0x258(0x08)
	None Anim_AddCoreInfo; // 0x260(0x08)
	None HB_Smartping; // 0x268(0x08)
	None Img_Back; // 0x270(0x08)
	None Img_Back_2; // 0x278(0x08)
	None Img_MarkerIcon; // 0x280(0x08)
	None Img_PerkDeckIcon; // 0x288(0x08)
	None NewRichText; // 0x290(0x08)
	None T_Damage; // 0x298(0x08)
	None T_DamageCauser; // 0x2a0(0x08)
	None T_DamageResult; // 0x2a8(0x08)
	None T_HeadShot; // 0x2b0(0x08)
	None T_HitCount; // 0x2b8(0x08)
	None T_HitType; // 0x2c0(0x08)
	None T_Message; // 0x2c8(0x08)
	None T_PingType; // 0x2d0(0x08)
	None T_PlayerName; // 0x2d8(0x08)
	None T_TargetClass; // 0x2e0(0x08)
	None T_TargetLevel; // 0x2e8(0x08)
	None T_TargetName; // 0x2f0(0x08)
	None T_TargetWeapon; // 0x2f8(0x08)
	None T_WeaponLevel; // 0x300(0x08)
	None WidgetSwitcher_194; // 0x308(0x08)
	None WidgetSwitcher_Main; // 0x310(0x08)
	None ParentWidgetRef; // 0x318(0x08)
	None Timer_StartRemove; // 0x320(0x08)
	None DamageLogInfo; // 0x328(0xb58)
	None LogTime; // 0xe80(0x04)
	None LogStackValidTime; // 0xe84(0x04)
	None Complete; // 0x248(0x08)
	None Image_161; // 0x250(0x08)
	None WidgetSwitcher_2; // 0x258(0x08)
	None UberGraphFrame; // 0x1360(0x08)
	None Ani_Tutorial_Glow; // 0x1368(0x08)
	None P_Upgrade_Arrow; // 0x1370(0x08)
	None C_SlotHover_ItemState_Hide; // 0x1378(0x08)
	None C_SlotHover_ItemState_Show; // 0x1380(0x08)
	None Hover_Gold; // 0x1388(0x08)
	None P_SlotHover; // 0x1390(0x08)
	None BGImage; // 0x1398(0x08)
	None CanvasPanel_ITemState; // 0x13a0(0x08)
	None Count; // 0x13a8(0x08)
	None Effect_Craft; // 0x13b0(0x08)
	None HorizontalBox_Rarity; // 0x13b8(0x08)
	None HoverImage; // 0x13c0(0x08)
	None HoverImage_Gold; // 0x13c8(0x08)
	None IconRepair; // 0x13d0(0x08)
	None Image_1; // 0x13d8(0x08)
	None Image_2; // 0x13e0(0x08)
	None Image_222; // 0x13e8(0x08)
	None ItemImage; // 0x13f0(0x08)
	None ItemNameName; // 0x13f8(0x08)
	None ItemState_Text; // 0x1400(0x08)
	None NeedMaterial; // 0x1408(0x08)
	None Overlay_Key; // 0x1410(0x08)
	None ProgressBar_475; // 0x1418(0x08)
	None SizeBox_1; // 0x1420(0x08)
	None TextBlock_ShortCut; // 0x1428(0x08)
	None Tutorial_Glow; // 0x1430(0x08)
	None UW-MouseRightClick_Big; // 0x1438(0x08)
	None UW-MouseRightClick_Small; // 0x1440(0x08)
	None WeaponItemImage; // 0x1448(0x08)
	None bGold; // 0x1450(0x01)
	None SelectedHoverImage; // 0x1458(0x08)
	None MedicalBGColor; // 0x1460(0x10)
	None SetSlotInfo; // 0x1470(0x10)
	None SlotIndex; // 0x1480(0x04)
	None RecipeKey; // 0x1484(0x08)
	None RecipeData; // 0x1490(0x38)
	None bLeftClicked; // 0x14c8(0x01)
	None CanCraft; // 0x14c9(0x01)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x280(0x08)
	None UpArrow; // 0x288(0x08)
	None FadeIn; // 0x290(0x08)
	None Ammo_Compare; // 0x298(0x08)
	None Ammo_Value; // 0x2a0(0x08)
	None AmmoIcon; // 0x2a8(0x08)
	None AmmoInfo; // 0x2b0(0x08)
	None Arrow_01; // 0x2b8(0x08)
	None Arrow_02; // 0x2c0(0x08)
	None BuffList; // 0x2c8(0x08)
	None BuffList_2; // 0x2d0(0x08)
	None EffectiveRange_Compare; // 0x2d8(0x08)
	None EffectiveRange_Value; // 0x2e0(0x08)
	None FiringRate_Compare; // 0x2e8(0x08)
	None FiringRate_Value; // 0x2f0(0x08)
	None HorizontalBox_ItemRarity; // 0x2f8(0x08)
	None HorizontalBox_MaterialRarity; // 0x300(0x08)
	None HorizontalBox_WeaponRarity; // 0x308(0x08)
	None Image; // 0x310(0x08)
	None Image_2; // 0x318(0x08)
	None Image_3; // 0x320(0x08)
	None Image_8; // 0x328(0x08)
	None Image_9; // 0x330(0x08)
	None Image_10; // 0x338(0x08)
	None Image_11; // 0x340(0x08)
	None Image_12; // 0x348(0x08)
	None Image_13; // 0x350(0x08)
	None Image_14; // 0x358(0x08)
	None Image_15; // 0x360(0x08)
	None Image_16; // 0x368(0x08)
	None Image_20; // 0x370(0x08)
	None Image_22; // 0x378(0x08)
	None Image_23; // 0x380(0x08)
	None Image_24; // 0x388(0x08)
	None Image_25; // 0x390(0x08)
	None Image_26; // 0x398(0x08)
	None Image_27; // 0x3a0(0x08)
	None Image_28; // 0x3a8(0x08)
	None Image_29; // 0x3b0(0x08)
	None Image_30; // 0x3b8(0x08)
	None Image_31; // 0x3c0(0x08)
	None Image_32; // 0x3c8(0x08)
	None Image_310; // 0x3d0(0x08)
	None Image_557; // 0x3d8(0x08)
	None Image_WeaponLock; // 0x3e0(0x08)
	None Img_MaterialBG; // 0x3e8(0x08)
	None IMG_MaterialIcon; // 0x3f0(0x08)
	None IMG_Stat; // 0x3f8(0x08)
	None ItemBg; // 0x400(0x08)
	None ItemBg_01; // 0x408(0x08)
	None ItemBg_02; // 0x410(0x08)
	None ItemSlot-BG; // 0x418(0x08)
	None ItemSlot-Capacity; // 0x420(0x08)
	None ItemSlot-Capacity_2; // 0x428(0x08)
	None ItemSlot-Description; // 0x430(0x08)
	None ItemSlot-Description_2; // 0x438(0x08)
	None ItemSlot-ItemImage; // 0x440(0x08)
	None ItemSlot-ItemName; // 0x448(0x08)
	None ItemSlot-ItemType; // 0x450(0x08)
	None ItemSlot-ItemTypeMark; // 0x458(0x08)
	None ItemSlotHover; // 0x460(0x08)
	None PerkBG; // 0x468(0x08)
	None PerkImage; // 0x470(0x08)
	None PerkLevelText; // 0x478(0x08)
	None PerkName; // 0x480(0x08)
	None PerkSlotHover; // 0x488(0x08)
	None PopupHover-BG_2; // 0x490(0x08)
	None Power_Compare; // 0x498(0x08)
	None Power_Value; // 0x4a0(0x08)
	None SizeBox; // 0x4a8(0x08)
	None SizeBox_7; // 0x4b0(0x08)
	None SizeBox_ComparingText; // 0x4b8(0x08)
	None SizeBox_ItemDivide; // 0x4c0(0x08)
	None Stability_Compare; // 0x4c8(0x08)
	None Stability_Value; // 0x4d0(0x08)
	None StatSlotHover; // 0x4d8(0x08)
	None T_BindPlayerName; // 0x4e0(0x08)
	None T_Material; // 0x4e8(0x08)
	None T_MaterialDesc; // 0x4f0(0x08)
	None T_PerkDescLv1; // 0x4f8(0x08)
	None T_PerkDescLv2; // 0x500(0x08)
	None T_PerkDescLv3; // 0x508(0x08)
	None T_Stat; // 0x510(0x08)
	None T_StatDesc; // 0x518(0x08)
	None T_TooltipDesc; // 0x520(0x08)
	None T_UltimateDesc; // 0x528(0x08)
	None T_UnlockUltimateLevel; // 0x530(0x08)
	None Text_CombineTarget; // 0x538(0x08)
	None TextBlock_3; // 0x540(0x08)
	None TextBlock_4; // 0x548(0x08)
	None TextBlock_5; // 0x550(0x08)
	None TextBlock_6; // 0x558(0x08)
	None UpArrowAni; // 0x560(0x08)
	None UW-Inventory_ItemSlotHover_WeaponSlot; // 0x568(0x08)
	None UW-Inventory_ItemSlotHover_WeaponSlot_2; // 0x570(0x08)
	None UW-Inventory_ItemSlotHover_WeaponSlot_C; // 0x578(0x08)
	None UW-Inventory_ItemSlotHover_WeaponSlot_C_2; // 0x580(0x08)
	None UW-Inventory_ItemSlotHover_WeaponSlot_C_3; // 0x588(0x08)
	None UW-Inventory_ItemSlotHover_WeaponSlot_C_4; // 0x590(0x08)
	None VerticalBox_3; // 0x598(0x08)
	None VerticalBox_BuffList; // 0x5a0(0x08)
	None VerticalBox_BuffList_2; // 0x5a8(0x08)
	None VerticalBox_CombineTarget; // 0x5b0(0x08)
	None VerticalBox_Divide; // 0x5b8(0x08)
	None VerticalBox_ItemDivide; // 0x5c0(0x08)
	None VerticalBox_WeaponBindedInfo; // 0x5c8(0x08)
	None WeaponItemCapacity; // 0x5d0(0x08)
	None WeaponItemComparingName; // 0x5d8(0x08)
	None WeaponItemDescription; // 0x5e0(0x08)
	None WeaponItemImage; // 0x5e8(0x08)
	None WeaponItemSlot-BG; // 0x5f0(0x08)
	None WeaponItemSlotHover; // 0x5f8(0x08)
	None WeaponItemType; // 0x600(0x08)
	None WeaponLockImage; // 0x608(0x08)
	None WeaponName; // 0x610(0x08)
	None WidgetSwitcher; // 0x618(0x08)
	None WidgetSwitcher_1; // 0x620(0x08)
	None WidgetSwitcher_2; // 0x628(0x08)
	None WidgetSwitcher_3; // 0x630(0x08)
	None WidgetSwitcher_4; // 0x638(0x08)
	None WidgetSwitcher_Main; // 0x640(0x08)
	None WidgetSwitcher_PerkUltimate; // 0x648(0x08)
	None ItemInfo; // 0x650(0x98)
	None WeaponInfo; // 0x6e8(0xb30)
	None bCompare; // 0x1218(0x01)
	None NormalSlateColor; // 0x1220(0x28)
	None UpSlateColor; // 0x1248(0x28)
	None DownSlateColor; // 0x1270(0x28)
	None UpLinearColor; // 0x1298(0x10)
	None DownLinearColor; // 0x12a8(0x10)
	None WeaponObjectRef; // 0x12b8(0x08)
	None ItemDetailInfo; // 0x12c0(0x490)
	None PerkInfo; // 0x1750(0x2c)
	None PerkData; // 0x1780(0xe0)
	None Ammo; // 0x1860(0x08)
	None DragType; // 0x1868(0x01)
	None HoveredWidget; // 0x1870(0x08)
	None CurrentShowingWidgetRef; // 0x1878(0x08)
	None IsUltimatePerk; // 0x1880(0x01)
	None UltimateName; // 0x1888(0x18)
	None UltimateLinearColor; // 0x18a0(0x10)
	None UltimateImage; // 0x18b0(0x28)
	None HoverTimerHandle; // 0x18d8(0x08)
	None NeedCheckVisibility; // 0x18e0(0x01)
	None IsVisualMode; // 0x18e1(0x01)
	None IsRandomPerk; // 0x18e2(0x01)
	None ItemRarityImages; // 0x18e8(0x10)
	None WeaponRarityImages; // 0x18f8(0x10)
	None CharacterRotationVelocity; // 0x30(0x04)
	None CameraMoveVelocity; // 0x34(0x04)
	None CameraTop; // 0x38(0x04)
	None CameraBottom; // 0x3c(0x04)
	None CameraZoomVelocity; // 0x40(0x04)
	None CameraInterpSpeed; // 0x44(0x04)
	None CharacterRotationInterpSpeed; // 0x48(0x04)
	None CameraMove; // 0x50(0x08)
	None UberGraphFrame; // 0x1f20(0x08)
	None StaticMesh_Ring; // 0x1f28(0x08)
	None StaticMesh_Lever; // 0x1f30(0x08)
	None Timeline_0_Lerp_77CED3694A7ECD58C02266AF5F5B5991; // 0x1f38(0x04)
	None Timeline_0__Direction_77CED3694A7ECD58C02266AF5F5B5991; // 0x1f3c(0x01)
	None Timeline_1; // 0x1f40(0x08)
	None Lerp_Lerp_EDD5977E4E850EC460B1E599F1FF45F8; // 0x1f48(0x04)
	None Lerp__Direction_EDD5977E4E850EC460B1E599F1FF45F8; // 0x1f4c(0x01)
	None Lerp; // 0x1f50(0x08)
	None InterpOffset; // 0x1f58(0x0c)
	None DesiredLocation; // 0x1f64(0x0c)
	None InitalLocalVelocity; // 0x1f70(0x0c)
	None DesiredLocation_Ing; // 0x1f7c(0x0c)
	None InitalLocalVelocity_Ing; // 0x1f88(0x0c)
	None ThrowingWeaponState; // 0x1f94(0x01)
	None ThrowingAction_Bool; // 0x1f95(0x01)
	None DesiredLocation_3; // 0x1f98(0x0c)
	None DesiredLocation_2_Ing; // 0x1fa4(0x0c)
	None InitalLocalVelocity_3; // 0x1fb0(0x0c)
	None InitalLocalVelocity_2_ing; // 0x1fbc(0x0c)
	None PathLifeTime; // 0x1fc8(0x04)
	None TimeInterval; // 0x1fcc(0x04)
	None IndicatorComponent_2; // 0x1fd0(0x08)
	None IndicatorComponent_3; // 0x1fd8(0x08)
	None TrajectoryComponent_2; // 0x1fe0(0x08)
	None TrajectoryComponent_3; // 0x1fe8(0x08)
	None UberGraphFrame; // 0x440(0x08)
	None BgIcon; // 0x448(0x08)
	None Icon; // 0x450(0x08)
	None Image_175; // 0x458(0x08)
	None Indicator; // 0x460(0x08)
	None Overlay_1; // 0x468(0x08)
	None TeamIndex; // 0x470(0x08)
	None TextBlock; // 0x478(0x08)
	None TextBlock_2; // 0x480(0x08)
	None TextBlock_3; // 0x488(0x08)
	None TextBlock_4; // 0x490(0x08)
	None TextBlock_5; // 0x498(0x08)
	None TextBlock_6; // 0x4a0(0x08)
	None TextBlock_7; // 0x4a8(0x08)
	None TextBlock_8; // 0x4b0(0x08)
	None TextBlock_9; // 0x4b8(0x08)
	None TextBlock_10; // 0x4c0(0x08)
	None TextBlock_12; // 0x4c8(0x08)
	None VerticalBox_301; // 0x4d0(0x08)
	None PlayerCamera; // 0x4d8(0x08)
	None ParentComponent; // 0x4e0(0x08)
	None CanvasSlot; // 0x4e8(0x08)
	None MaterialPingInfo; // 0x4f0(0x30)
	None UberGraphFrame; // 0x5b8(0x08)
	None Widget_Screen; // 0x5c0(0x08)
	None Widget_World; // 0x5c8(0x08)
	None DefaultSceneRoot; // 0x5d0(0x08)
	None SmartPingWidget_World; // 0x5d8(0x08)
	None DeactivateTimer; // 0x5e0(0x08)
	None SmartPingComponent; // 0x5e8(0x08)
	None ScreenToWorldLocation; // 0x5f0(0x0c)
	None ScreenRotation; // 0x5fc(0x04)
	None HoldSound; // 0x600(0x08)
	None PhaseTimer; // 0x608(0x08)
	None TempWidget; // 0x610(0x08)
	None PingIndex; // 0x618(0x04)
	None SaveTempPingInfo; // 0x620(0x38)
	None LineActor; // 0x658(0x08)
	None SmartPingWidget_Screen; // 0x660(0x08)
	None EnableShow; // 0x668(0x01)
	None NewAnimation; // 0x248(0x08)
	None Icon; // 0x250(0x08)
	None ImageLine; // 0x258(0x08)
	None Img_Color; // 0x260(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None LevelUp; // 0x250(0x08)
	None FadeOut; // 0x258(0x08)
	None FadeIn; // 0x260(0x08)
	None Idle; // 0x268(0x08)
	None CanvasPanel_2; // 0x270(0x08)
	None Image_336; // 0x278(0x08)
	None Image_Back; // 0x280(0x08)
	None Overlay_186; // 0x288(0x08)
	None PerkLastLevel; // 0x290(0x08)
	None PerkLevelText; // 0x298(0x08)
	None PerkName; // 0x2a0(0x08)
	None PerkSlotHover; // 0x2a8(0x08)
	None RichTextBlock_Desc; // 0x2b0(0x08)
	None TextBlock_1; // 0x2b8(0x08)
	None TextBlock_8; // 0x2c0(0x08)
	None UW-Inventory_PerkSlot; // 0x2c8(0x08)
	None PerkInfo; // 0x2d0(0x2c)
	None PerkData; // 0x300(0xe0)
	None PerkLevel; // 0x3e0(0x04)
	None PerInGameData; // 0x3e8(0x1c8)
	None Index; // 0x5b0(0x04)
	None MainWiget; // 0x5b8(0x08)
	None CurrentHeight; // 0x5c0(0x04)
	None LastPerkLevel; // 0x5c4(0x04)
	None DefaultPosition; // 0x5c8(0x08)
	None CurrenteLevel; // 0x5d0(0x04)
	None IsPlayingUltimateSound; // 0x5d4(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None UpArrow; // 0x250(0x08)
	None InteractivePopup_motion; // 0x258(0x08)
	None AmmoCnt; // 0x260(0x08)
	None AmmoDown; // 0x268(0x08)
	None AmmoUp; // 0x270(0x08)
	None Attack; // 0x278(0x08)
	None AttackDown; // 0x280(0x08)
	None AttackUp; // 0x288(0x08)
	None BuffListWithText; // 0x290(0x08)
	None CanvasPanel_17; // 0x298(0x08)
	None CP_Key; // 0x2a0(0x08)
	None CustomWidgetSwitcher; // 0x2a8(0x08)
	None fill; // 0x2b0(0x08)
	None Firingrate; // 0x2b8(0x08)
	None FiringrateDown; // 0x2c0(0x08)
	None FiringrateUp; // 0x2c8(0x08)
	None HB_BuffList; // 0x2d0(0x08)
	None HorizontalBox_Rarity; // 0x2d8(0x08)
	None HorizontalBox_WeaponRarity; // 0x2e0(0x08)
	None Image; // 0x2e8(0x08)
	None Image_4; // 0x2f0(0x08)
	None Image_10; // 0x2f8(0x08)
	None Image_152; // 0x300(0x08)
	None Image_ItemIcon; // 0x308(0x08)
	None Image_WeaponLock; // 0x310(0x08)
	None Interactive; // 0x318(0x08)
	None ItemBg_01; // 0x320(0x08)
	None Key_Bomb; // 0x328(0x08)
	None KeyImageWidget_C_1; // 0x330(0x08)
	None NeedItem; // 0x338(0x08)
	None PickUpBg; // 0x340(0x08)
	None PickupItem; // 0x348(0x08)
	None Range; // 0x350(0x08)
	None RangeDown; // 0x358(0x08)
	None RangeUp; // 0x360(0x08)
	None RichT_Action; // 0x368(0x08)
	None RichT_ActionDescription; // 0x370(0x08)
	None SizeBox_WeaponOwner; // 0x378(0x08)
	None Stability; // 0x380(0x08)
	None StabilityDown; // 0x388(0x08)
	None StabilityUp; // 0x390(0x08)
	None Switcher_Item; // 0x398(0x08)
	None T_BombCancel; // 0x3a0(0x08)
	None T_ComparingWeaponName; // 0x3a8(0x08)
	None T_PickupItemName; // 0x3b0(0x08)
	None T_WeaponName; // 0x3b8(0x08)
	None Text_CombineTarget; // 0x3c0(0x08)
	None TextBlock_5; // 0x3c8(0x08)
	None UW-InteractionWidget_WeaponPerkSlot; // 0x3d0(0x08)
	None UW-InteractionWidget_WeaponPerkSlot_2; // 0x3d8(0x08)
	None UW-InteractionWidget_WeaponPerkSlot_3; // 0x3e0(0x08)
	None UW-Inventory_ItemSlotHover_WeaponSlot; // 0x3e8(0x08)
	None UW-Inventory_ItemSlotHover_WeaponSlot_C_2; // 0x3f0(0x08)
	None UW-Inventory_ItemSlotHover_WeaponSlot_C_3; // 0x3f8(0x08)
	None VerticalBox_CombineTarget; // 0x400(0x08)
	None VerticalBox_StatUp; // 0x408(0x08)
	None WeaponDesc; // 0x410(0x08)
	None WeaponItemImage; // 0x418(0x08)
	None WeaponItemSlot-BG; // 0x420(0x08)
	None WeaponItemSlot-BG_2; // 0x428(0x08)
	None WeaponItemSlotHover; // 0x430(0x08)
	None WidgetSwitcher_123; // 0x438(0x08)
	None DisableTextColor; // 0x440(0x28)
	None EnableTextColor; // 0x468(0x28)
	None IsDisable; // 0x490(0x01)
	None PickupItemInfo_1; // 0x498(0x98)
	None UpLinearColor; // 0x530(0x10)
	None DownLinearColor; // 0x540(0x10)
	None NormalSlateColor; // 0x550(0x28)
	None UpSlateColor; // 0x578(0x28)
	None DownSlateColor; // 0x5a0(0x28)
	None bAction; // 0x5c8(0x01)
	None bCompare; // 0x5c9(0x01)
	None CompareWeaponInfo; // 0x5d0(0xb30)
	None IsNoHide; // 0x1100(0x01)
	None bWeapon; // 0x1101(0x01)
	None bPlayAnimation_WeaponCompare; // 0x1102(0x01)
	None VisibleTextColor; // 0x1108(0x28)
	None BrushActionKeyWhite; // 0x1130(0x88)
	None BrushActionKeyRed; // 0x11b8(0x88)
	None TempName; // 0x1240(0x08)
	None AvailableAmmoQuantity; // 0x1248(0x18)
	None UberGraphFrame; // 0x290(0x08)
	None Anim_Bouncing; // 0x298(0x08)
	None CanvasRequestResuscitation; // 0x2a0(0x08)
	None CriticalGuage; // 0x2a8(0x08)
	None DyingGuage; // 0x2b0(0x08)
	None Img_StateDeath; // 0x2b8(0x08)
	None Img_StateDisconnect; // 0x2c0(0x08)
	None Img_StateParachute; // 0x2c8(0x08)
	None Img_StateRevival; // 0x2d0(0x08)
	None Img_StateVehicle; // 0x2d8(0x08)
	None Img_TeamColor; // 0x2e0(0x08)
	None KnockDownBar; // 0x2e8(0x08)
	None MoveParameter; // 0x2f0(0x08)
	None RevivingGuage; // 0x2f8(0x08)
	None Switcher_Guage; // 0x300(0x08)
	None Switcher_Icon; // 0x308(0x08)
	None TextBlock_Name; // 0x310(0x08)
	None TextBlock_PlayerIndex; // 0x318(0x08)
	None RevivingTimerHandle; // 0x320(0x08)
	None TotalRevivingTime; // 0x328(0x04)
	None CurrentRevivingTime; // 0x32c(0x04)
	None IsRequestResuscitation; // 0x330(0x01)
	None UberGraphFrame; // 0x450(0x08)
	None Anim_HideWidget; // 0x458(0x08)
	None HideLaserPoint; // 0x460(0x08)
	None ShowLaserPoint; // 0x468(0x08)
	None BackgroundBlur_154; // 0x470(0x08)
	None Canvas; // 0x478(0x08)
	None HB_PerkSpin; // 0x480(0x08)
	None RedCircle; // 0x488(0x08)
	None TextBlock_Start; // 0x490(0x08)
	None UW-CompassWidget; // 0x498(0x08)
	None UW-HUDMessageWidget; // 0x4a0(0x08)
	None UW-InteractionWidget; // 0x4a8(0x08)
	None UW-JetpackWidget; // 0x4b0(0x08)
	None UW-MS; // 0x4b8(0x08)
	None UW-PerkLevelUp_02; // 0x4c0(0x08)
	None UW-VehicleWidget; // 0x4c8(0x08)
	None TargetPawn; // 0x4d0(0x08)
	None LastDisplayAbility; // 0x4d8(0x0c)
	None GainPerkPopups; // 0x4e8(0x10)
	None UW-RaderCursorWidget; // 0x4f8(0x08)
	None UW-DefaultCursorWidget; // 0x500(0x08)
	None Timer_IsMouseWidgetInMap; // 0x508(0x08)
	None UW-NitroBoomTargetWidget; // 0x510(0x08)
	None bIsShow; // 0x518(0x01)
	None TmpViewportUpAngle; // 0x51c(0x04)
	None TmpViewportSideAngle; // 0x520(0x04)
	None CenterPosition; // 0x524(0x08)
	None UW-MapImageRef; // 0x530(0x08)
	None Timer_AutoPerkDeck; // 0x538(0x08)
	None LastPlayZoneID; // 0x540(0x04)
	None bShowLevelUp; // 0x544(0x01)
	None IsPlayingUltimateSound; // 0x545(0x01)
	None bIsUnlockUltimateSkill; // 0x546(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None My Tool Tip Text; // 0x250(0x18)
	None IMG-BlackMarketCharacter; // 0x248(0x08)
	None WearableItemList; // 0x28(0x10)
	None CustomItemList; // 0x38(0x10)
	None WeaponItemList; // 0x48(0x10)
	None InBackpackItemList; // 0x58(0x10)
	None AppearanceInfo; // 0x68(0x14)
	None UberGraphFrame; // 0x248(0x08)
	None FadeIn; // 0x250(0x08)
	None CharacterPreviewImage; // 0x258(0x08)
	None Image_1; // 0x260(0x08)
	None ControllerRef; // 0x268(0x08)
	None UberGraphFrame; // 0x678(0x08)
	None Ak; // 0x680(0x08)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None ItemRowName; // 0x248(0x08)
	None ConsoleCommandString; // 0x250(0x10)
	None GiveCount; // 0x260(0x10)
	None ItemType; // 0x270(0x01)
	None Icon; // 0x278(0x08)
	None bSlot; // 0x280(0x01)
	None Count; // 0x284(0x04)
	None AmmoName; // 0x288(0x08)
	None AmmoCommandString; // 0x290(0x10)
	None AmmoCount; // 0x2a0(0x04)
	None BlackMarketMainRef; // 0x2a8(0x08)
	None BlackmarketDataInfo; // 0x2b0(0x118)
	None ConsoleMultiCommandString; // 0x3c8(0x10)
	None UberGraphFrame; // 0x310(0x08)
	None ParachuteBag_SkeletalMesh; // 0x318(0x08)
	None Parachute_SkeletalMesh; // 0x320(0x08)
	None DefaultSceneRoot; // 0x328(0x08)
	None bHideWorkInProgress; // 0x28(0x01)
	None MainTab; // 0x29(0x01)
	None WeaponSubTab; // 0x2a(0x01)
	None AttachmentSubTab; // 0x2b(0x01)
	None WearableSubTab; // 0x2c(0x01)
	None CustomSubTab; // 0x2d(0x01)
	None GearSubTab; // 0x2e(0x01)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None BTN-Menu04; // 0x3f0(0x08)
	None BTN-Menu05; // 0x3f8(0x08)
	None BTN-Menu06; // 0x400(0x08)
	None BTN-Menu07; // 0x408(0x08)
	None BTN-Menu08; // 0x410(0x08)
	None BTN-Menu09; // 0x418(0x08)
	None CP-SlotInfo; // 0x420(0x08)
	None IMG-BG; // 0x428(0x08)
	None IMG-BG-Border; // 0x430(0x08)
	None IMG-Item; // 0x438(0x08)
	None IMG-Mask; // 0x440(0x08)
	None IMG-Over; // 0x448(0x08)
	None IMG-Over-Border; // 0x450(0x08)
	None Menu02; // 0x458(0x08)
	None Menu03; // 0x460(0x08)
	None Menu04; // 0x468(0x08)
	None Menu05; // 0x470(0x08)
	None Menu06; // 0x478(0x08)
	None Menu07; // 0x480(0x08)
	None Menu08; // 0x488(0x08)
	None Menu09; // 0x490(0x08)
	None Overlay_Mask; // 0x498(0x08)
	None TXT-ContinuousSpeed; // 0x4a0(0x08)
	None TXT-Horizental; // 0x4a8(0x08)
	None TXT-ItemName; // 0x4b0(0x08)
	None TXT-Menu01; // 0x4b8(0x08)
	None TXT-Menu02; // 0x4c0(0x08)
	None TXT-Menu03; // 0x4c8(0x08)
	None TXT-Menu04; // 0x4d0(0x08)
	None TXT-Menu05; // 0x4d8(0x08)
	None TXT-Menu06; // 0x4e0(0x08)
	None TXT-Menu07; // 0x4e8(0x08)
	None TXT-Menu08; // 0x4f0(0x08)
	None TXT-Menu09; // 0x4f8(0x08)
	None TXT-MovingSpeed; // 0x500(0x08)
	None TXT-Reload; // 0x508(0x08)
	None TXT-Type; // 0x510(0x08)
	None TXT-Vertical; // 0x518(0x08)
	None TXT-Weight; // 0x520(0x08)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None BTN-Menu03; // 0x3e8(0x08)
	None BTN-Menu04; // 0x3f0(0x08)
	None CP-SlotInfo; // 0x3f8(0x08)
	None IMG-BG; // 0x400(0x08)
	None IMG-BG-Border; // 0x408(0x08)
	None IMG-Item; // 0x410(0x08)
	None IMG-Mask; // 0x418(0x08)
	None IMG-Over; // 0x420(0x08)
	None IMG-Over-Border; // 0x428(0x08)
	None Menu02; // 0x430(0x08)
	None Menu03; // 0x438(0x08)
	None Menu04; // 0x440(0x08)
	None Overlay_Mask; // 0x448(0x08)
	None TXT-ItemDesc; // 0x450(0x08)
	None TXT-ItemName; // 0x458(0x08)
	None TXT-ItemSlot; // 0x460(0x08)
	None TXT-Menu01; // 0x468(0x08)
	None TXT-Menu02; // 0x470(0x08)
	None TXT-Menu03; // 0x478(0x08)
	None TXT-Menu04; // 0x480(0x08)
	None PerkSlot; // 0x488(0x18)
	None UberGraphFrame; // 0x3d8(0x08)
	None BTN-Menu02; // 0x3e0(0x08)
	None CP-SlotInfo; // 0x3e8(0x08)
	None IMG-BG; // 0x3f0(0x08)
	None IMG-BG-Border; // 0x3f8(0x08)
	None IMG-Item; // 0x400(0x08)
	None IMG-Mask; // 0x408(0x08)
	None IMG-Over; // 0x410(0x08)
	None IMG-Over-Border; // 0x418(0x08)
	None Menu02; // 0x420(0x08)
	None Overlay_Mask; // 0x428(0x08)
	None TXT-ItemName; // 0x430(0x08)
	None TXT-Menu01; // 0x438(0x08)
	None TXT-Menu02; // 0x440(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Bg1; // 0x250(0x08)
	None bg2; // 0x258(0x08)
	None Bg3; // 0x260(0x08)
	None Bg4; // 0x268(0x08)
	None Bg5; // 0x270(0x08)
	None Bg6; // 0x278(0x08)
	None Bg7; // 0x280(0x08)
	None Bg8; // 0x288(0x08)
	None Canvas; // 0x290(0x08)
	None CenterCursor; // 0x298(0x08)
	None DisplayText; // 0x2a0(0x08)
	None IconImage; // 0x2a8(0x08)
	None Index1; // 0x2b0(0x08)
	None Index2; // 0x2b8(0x08)
	None Index3; // 0x2c0(0x08)
	None Index4; // 0x2c8(0x08)
	None Index5; // 0x2d0(0x08)
	None Index6; // 0x2d8(0x08)
	None Index7; // 0x2e0(0x08)
	None Index8; // 0x2e8(0x08)
	None Key1; // 0x2f0(0x08)
	None Key2; // 0x2f8(0x08)
	None Key3; // 0x300(0x08)
	None Key4; // 0x308(0x08)
	None Key5; // 0x310(0x08)
	None Key6; // 0x318(0x08)
	None Key7; // 0x320(0x08)
	None Key8; // 0x328(0x08)
	None Message2; // 0x330(0x08)
	None Message3; // 0x338(0x08)
	None Message3_1; // 0x340(0x08)
	None Message3_2; // 0x348(0x08)
	None Message3_3; // 0x350(0x08)
	None Message3_4; // 0x358(0x08)
	None Message3_5; // 0x360(0x08)
	None Message3_6; // 0x368(0x08)
	None Message3_7; // 0x370(0x08)
	None Message3_8; // 0x378(0x08)
	None Message4; // 0x380(0x08)
	None Message5; // 0x388(0x08)
	None Message6; // 0x390(0x08)
	None Message7; // 0x398(0x08)
	None Message8; // 0x3a0(0x08)
	None Messgae1; // 0x3a8(0x08)
	None Over1; // 0x3b0(0x08)
	None Over2; // 0x3b8(0x08)
	None Over3; // 0x3c0(0x08)
	None Over4; // 0x3c8(0x08)
	None Over5; // 0x3d0(0x08)
	None Over6; // 0x3d8(0x08)
	None Over7; // 0x3e0(0x08)
	None Over8; // 0x3e8(0x08)
	None UseSlot1; // 0x3f0(0x08)
	None UseSlot2; // 0x3f8(0x08)
	None UseSlot3; // 0x400(0x08)
	None UseSlot4; // 0x408(0x08)
	None UseSlot5; // 0x410(0x08)
	None UseSlot6; // 0x418(0x08)
	None UseSlot7; // 0x420(0x08)
	None UseSlot8; // 0x428(0x08)
	None UW-PlayerMarkerWidget; // 0x430(0x08)
	None WidgetSwitcher_133; // 0x438(0x08)
	None SelectionWidgets; // 0x440(0x10)
	None MenuCenter; // 0x450(0x08)
	None ReferenceVector; // 0x458(0x0c)
	None Selected; // 0x468(0x10)
	None SelectedIndex; // 0x478(0x04)
	None AngleSize; // 0x47c(0x04)
	None DistanceFromCenter; // 0x480(0x04)
	None Divisions; // 0x484(0x04)
	None SelectionToleranceFromCenter; // 0x488(0x04)
	None Hovered; // 0x490(0x10)
	None ClearPing; // 0x4a0(0x10)
	None Title; // 0x4b0(0x18)
	None ItemKey; // 0x4c8(0x08)
	None OverOpacity; // 0x4d0(0x04)
	None BgOpacity; // 0x4d4(0x04)
	None List; // 0x4d8(0x50)
	None IndexTextVisible; // 0x528(0x01)
	None NewVar_1; // 0x529(0x01)
	None Image; // 0x530(0x28)
	None TextOpacity; // 0x558(0x04)
	None UberGraphFrame; // 0x2b0(0x08)
	None Propeller1; // 0x2b8(0x08)
	None Aircraft; // 0x2c0(0x08)
	None Image_156; // 0x2c8(0x08)
	None Image_236; // 0x2d0(0x08)
	None Image_237; // 0x2d8(0x08)
	None MapCompRef; // 0x2e0(0x08)
	None Image_3; // 0x248(0x08)
	None IMG-BG; // 0x250(0x08)
	None IMG-Close; // 0x258(0x08)
	None IMG-TitleBG; // 0x260(0x08)
	None UW-BlackMarket_Main; // 0x268(0x08)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None UberGraphFrame; // 0x1360(0x08)
	None Anim_LoopHintMaterial; // 0x1368(0x08)
	None Anim_Upgrade; // 0x1370(0x08)
	None P_Upgrade_Arrow; // 0x1378(0x08)
	None C_SlotHover_ItemState_Hide; // 0x1380(0x08)
	None C_SlotHover_ItemState_Show; // 0x1388(0x08)
	None Hover_Gold; // 0x1390(0x08)
	None P_SlotHover; // 0x1398(0x08)
	None BGImage; // 0x13a0(0x08)
	None CanvasPanel_ITemState; // 0x13a8(0x08)
	None CanvasPanel_Unnecessary; // 0x13b0(0x08)
	None Count; // 0x13b8(0x08)
	None Count_Icon; // 0x13c0(0x08)
	None fill; // 0x13c8(0x08)
	None Hint; // 0x13d0(0x08)
	None HoverImage; // 0x13d8(0x08)
	None HoverImage_Gold; // 0x13e0(0x08)
	None Image_1; // 0x13e8(0x08)
	None Image_2; // 0x13f0(0x08)
	None Image_95; // 0x13f8(0x08)
	None ItemImage; // 0x1400(0x08)
	None ItemNameName; // 0x1408(0x08)
	None ItemState_Text; // 0x1410(0x08)
	None LvColor; // 0x1418(0x08)
	None NeedMaterial; // 0x1420(0x08)
	None OverBG_3; // 0x1428(0x08)
	None ProgressBar_136; // 0x1430(0x08)
	None SizeBox_1; // 0x1438(0x08)
	None WeaponItemImage; // 0x1440(0x08)
	None bGold; // 0x1448(0x01)
	None SelectedHoverImage; // 0x1450(0x08)
	None MedicalBGColor; // 0x1458(0x10)
	None SetSlotInfo; // 0x1468(0x10)
	None SlotIndex; // 0x1478(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Image_ClassIcon; // 0x250(0x08)
	None TextBlock_ClassName; // 0x258(0x08)
	None TextBlock_Count; // 0x260(0x08)
	None Image_Selected; // 0x248(0x08)
	None TextBlock_Selected; // 0x250(0x08)
	None PlayerIndex; // 0x258(0x04)
	None Image_350; // 0x260(0x08)
	None Image_409; // 0x268(0x08)
	None Image_479; // 0x270(0x08)
	None Image_564; // 0x278(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Button_Main; // 0x250(0x08)
	None Image_ClassIcon; // 0x258(0x08)
	None Image_ComingSoonBg; // 0x260(0x08)
	None Image_Disabled; // 0x268(0x08)
	None Image_Outline; // 0x270(0x08)
	None Image_Push; // 0x278(0x08)
	None Overlay_Main; // 0x280(0x08)
	None T_ComingSoon; // 0x288(0x08)
	None UW-PerkDeckSelectItemNumWidget; // 0x290(0x08)
	None UW-PerkDeckSelectItemNumWidget_2; // 0x298(0x08)
	None UW-PerkDeckSelectItemNumWidget_3; // 0x2a0(0x08)
	None UW-PerkDeckSelectItemNumWidget_Local; // 0x2a8(0x08)
	None VerticalBox_Selected; // 0x2b0(0x08)
	None PerkDeckClassInfo; // 0x2b8(0x28)
	None SelectedNum; // 0x2e0(0x04)
	None SelectedMinIndex; // 0x2e4(0x04)
	None ChooseClass; // 0x2e8(0x10)
	None ClassIndex; // 0x2f8(0x04)
	None HoverClass; // 0x300(0x10)
	None bIsLocalSelected; // 0x310(0x01)
	None bIsSelected; // 0x311(0x01)
	None CurrentPerkDeckData; // 0x318(0x4b0)
	None bIsDuplicateSelectPossible; // 0x7c8(0x01)
	None bButtonDisabled; // 0x7c9(0x01)
	None bNoUpdatedDisabled; // 0x7ca(0x01)
	None bIsBlocked; // 0x7cb(0x01)
	None SpinVelocity; // 0x30(0x04)
	None RotationInterpSpeed; // 0x34(0x04)
	None UberGraphFrame; // 0x258(0x08)
	None First; // 0x260(0x08)
	None Hide; // 0x268(0x08)
	None Show; // 0x270(0x08)
	None Idle; // 0x278(0x08)
	None Bg; // 0x280(0x08)
	None Bg_2; // 0x288(0x08)
	None Bg_3; // 0x290(0x08)
	None Button_407; // 0x298(0x08)
	None Image; // 0x2a0(0x08)
	None Image_2; // 0x2a8(0x08)
	None Image_55; // 0x2b0(0x08)
	None Image_340; // 0x2b8(0x08)
	None Overlay_Base; // 0x2c0(0x08)
	None TextBlock_Message; // 0x2c8(0x08)
	None TextBlock_SpeakerName; // 0x2d0(0x08)
	None UW-ImageText; // 0x2d8(0x08)
	None WidgetSwitcher_Face; // 0x2e0(0x08)
	None SentenceData; // 0x2e8(0xb0)
	None UberGraphFrame; // 0x248(0x08)
	None Image_20; // 0x250(0x08)
	None TargetAccel; // 0x258(0x0c)
	None CurrentAccel; // 0x264(0x0c)
	None TargetScale; // 0x270(0x04)
	None DataAsset; // 0x278(0x08)
	None ResetOriginTransform; // 0x280(0x01)
	None MouseInputLock; // 0x281(0x01)
	None IsUpdatingRotation; // 0x282(0x01)
	None IsValidMeshActor; // 0x283(0x01)
	None IsPressedLeftMouse; // 0x284(0x01)
	None TXT-Item; // 0x248(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Image_Buff; // 0x250(0x08)
	None Image_Grade_Color_Line; // 0x258(0x08)
	None ItemOption; // 0x260(0xb8)
	None UberGraphFrame; // 0x248(0x08)
	None CanvasPanel_1; // 0x250(0x08)
	None Image_25; // 0x258(0x08)
	None Image_26; // 0x260(0x08)
	None Image_27; // 0x268(0x08)
	None Image_28; // 0x270(0x08)
	None Image_29; // 0x278(0x08)
	None Image_30; // 0x280(0x08)
	None WidgetSwitcher_167; // 0x288(0x08)
	None NewVar_1; // 0x290(0x08)
	None UberGraphFrame; // 0x2a0(0x08)
	None EventInform; // 0x2a8(0x08)
	None VisualBorder; // 0x2b0(0x08)
	None UberGraphFrame; // 0x2a0(0x08)
	None VisualBorder; // 0x2a8(0x08)
	None UberGraphFrame; // 0x2a0(0x08)
	None VisualBorder; // 0x2a8(0x08)
	None Anim_OnShow; // 0x248(0x08)
	None BackColor; // 0x250(0x08)
	None T_Num; // 0x258(0x08)
	None OnMarkerClicked; // 0x260(0x10)
	None UberGraphFrame; // 0x2a0(0x08)
	None VisualBorder; // 0x2a8(0x08)
	None Image_136; // 0x248(0x08)
	None Slider_Speed; // 0x250(0x08)
	None T_CamSpeed; // 0x258(0x08)
	None Handle_HideFreeCamSpeed; // 0x260(0x08)
	None UberGraphFrame; // 0x250(0x08)
	None btn_confirm; // 0x258(0x08)
	None popup-bg; // 0x260(0x08)
	None txt_description; // 0x268(0x08)
	None uw-bg; // 0x270(0x08)
	None DescriptionText; // 0x278(0x18)
	None UberGraphFrame; // 0x278(0x08)
	None btn_Cancel; // 0x280(0x08)
	None btn_report; // 0x288(0x08)
	None Button_2; // 0x290(0x08)
	None Button_3; // 0x298(0x08)
	None Button_4; // 0x2a0(0x08)
	None Button_5; // 0x2a8(0x08)
	None CheckBox_2; // 0x2b0(0x08)
	None CheckBox_3; // 0x2b8(0x08)
	None CheckBox_4; // 0x2c0(0x08)
	None CheckBox_5; // 0x2c8(0x08)
	None combobox_button_overlay; // 0x2d0(0x08)
	None combobox_string; // 0x2d8(0x08)
	None Image; // 0x2e0(0x08)
	None Image_2; // 0x2e8(0x08)
	None Image_545; // 0x2f0(0x08)
	None NormalArrow; // 0x2f8(0x08)
	None OpeningArrow; // 0x300(0x08)
	None popup-bg; // 0x308(0x08)
	None txt_description; // 0x310(0x08)
	None txt_nickname; // 0x318(0x08)
	None uw-bg; // 0x320(0x08)
	None DescriptionText; // 0x328(0x18)
	None ReportIndexText; // 0x340(0x10)
	None DefaultComboString; // 0x350(0x18)
	None CurrentSelectIndex; // 0x368(0x04)
	None CheckCloseComboArrow; // 0x36c(0x01)
	None TextBlock_62; // 0x248(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Button_98; // 0x250(0x08)
	None Time_2; // 0x258(0x08)
	None SavedEvent; // 0x260(0x28)
	None SavedReplayFileName; // 0x288(0x10)
	None ReplayListWidget; // 0x298(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_Bouns; // 0x250(0x08)
	None 1; // 0x258(0x08)
	None 10; // 0x260(0x08)
	None 100; // 0x268(0x08)
	None 1000; // 0x270(0x08)
	None Empty; // 0x278(0x08)
	None Image_7; // 0x280(0x08)
	None Image_11; // 0x288(0x08)
	None Image_14; // 0x290(0x08)
	None Image_15; // 0x298(0x08)
	None Image_16; // 0x2a0(0x08)
	None Image_17; // 0x2a8(0x08)
	None Image_18; // 0x2b0(0x08)
	None Image_20; // 0x2b8(0x08)
	None Image_21; // 0x2c0(0x08)
	None Image_22; // 0x2c8(0x08)
	None Image_23; // 0x2d0(0x08)
	None Image_1473; // 0x2d8(0x08)
	None TextBlock_4; // 0x2e0(0x08)
	None TextLight_3; // 0x2e8(0x08)
	None Save; // 0x2f0(0x04)
	None LoopSound; // 0x2f4(0x04)
	None IsStopSound; // 0x2f8(0x01)
	None UberGraphFrame; // 0x260(0x08)
	None Button_Delete; // 0x268(0x08)
	None Button_Keep; // 0x270(0x08)
	None Button_OldFileDelete; // 0x278(0x08)
	None Button_Play; // 0x280(0x08)
	None Button_Refresh; // 0x288(0x08)
	None DetailInfo; // 0x290(0x08)
	None HorizontalBox_3; // 0x298(0x08)
	None HorizontalBox_4; // 0x2a0(0x08)
	None HorizontalBox_5; // 0x2a8(0x08)
	None HorizontalBox_01; // 0x2b0(0x08)
	None HorizontalBox_Version; // 0x2b8(0x08)
	None Image_1; // 0x2c0(0x08)
	None Image_483; // 0x2c8(0x08)
	None Image_1010; // 0x2d0(0x08)
	None Image_2531; // 0x2d8(0x08)
	None Image_2533; // 0x2e0(0x08)
	None Image_2535; // 0x2e8(0x08)
	None Image_3059; // 0x2f0(0x08)
	None Image_3229; // 0x2f8(0x08)
	None Image_3231; // 0x300(0x08)
	None Image_; // 0x308(0x08)
	None Image_ClassImage; // 0x310(0x08)
	None Image_Icon1; // 0x318(0x08)
	None Image_Icon2; // 0x320(0x08)
	None Image_Icon3; // 0x328(0x08)
	None Image_Icon4; // 0x330(0x08)
	None Image_MapImage; // 0x338(0x08)
	None Overlay; // 0x340(0x08)
	None ReplayListBox; // 0x348(0x08)
	None TextBlock_2388; // 0x350(0x08)
	None TextBlock_BattleMode; // 0x358(0x08)
	None TextBlock_BlueZoneMaxPlayerCount; // 0x360(0x08)
	None TextBlock_BlueZoneTitle; // 0x368(0x08)
	None TextBlock_ClassLevel1; // 0x370(0x08)
	None TextBlock_ClassLevel2; // 0x378(0x08)
	None TextBlock_ClassLevel3; // 0x380(0x08)
	None TextBlock_ClassLevel4; // 0x388(0x08)
	None TextBlock_ClassName1; // 0x390(0x08)
	None TextBlock_ClassName2; // 0x398(0x08)
	None TextBlock_ClassName3; // 0x3a0(0x08)
	None TextBlock_ClassName4; // 0x3a8(0x08)
	None TextBlock_CurrentFileCount; // 0x3b0(0x08)
	None TextBlock_Damage; // 0x3b8(0x08)
	None TextBlock_FPP; // 0x3c0(0x08)
	None TextBlock_Keep; // 0x3c8(0x08)
	None TextBlock_Kill; // 0x3d0(0x08)
	None TextBlock_LifeTime; // 0x3d8(0x08)
	None TextBlock_MapName; // 0x3e0(0x08)
	None TextBlock_Name1; // 0x3e8(0x08)
	None TextBlock_Name2; // 0x3f0(0x08)
	None TextBlock_Name3; // 0x3f8(0x08)
	None TextBlock_Name4; // 0x400(0x08)
	None TextBlock_Rank; // 0x408(0x08)
	None TextBlock_Time; // 0x410(0x08)
	None TextBlock_TotalPlayerCount; // 0x418(0x08)
	None TextBlock_TotalSize; // 0x420(0x08)
	None TextBlock_Weapon1; // 0x428(0x08)
	None TextBlock_Weapon2; // 0x430(0x08)
	None TextBlock_Weapon3; // 0x438(0x08)
	None TextBlock_Weapon4; // 0x440(0x08)
	None UW-ReplayListItemWidget; // 0x448(0x08)
	None UW-ReplayListItemWidget_C_3; // 0x450(0x08)
	None UW-ReplayListItemWidget_C_4; // 0x458(0x08)
	None UW-ReplayListItemWidget_C_5; // 0x460(0x08)
	None UW-ReplayListItemWidget_C_6; // 0x468(0x08)
	None UW-ReplayListItemWidget_C_7; // 0x470(0x08)
	None UW-ReplayListItemWidget_C_8; // 0x478(0x08)
	None UW-ReplayListItemWidget_C_9; // 0x480(0x08)
	None UW-ReplayListItemWidget_C_10; // 0x488(0x08)
	None UW-ReplayListItemWidget_C_11; // 0x490(0x08)
	None UW-ReplayListItemWidget_C_12; // 0x498(0x08)
	None UW-ReplayListItemWidget_C_13; // 0x4a0(0x08)
	None SelectedItemInfo; // 0x4a8(0x128)
	None UberGraphFrame; // 0x248(0x08)
	None AdministratorPanel; // 0x250(0x08)
	None Cheat; // 0x258(0x08)
	None Image_Lock; // 0x260(0x08)
	None Image_Version; // 0x268(0x08)
	None ReplayListItemBtn_; // 0x270(0x08)
	None TextBlock_BattleMode; // 0x278(0x08)
	None TextBlock_Day; // 0x280(0x08)
	None TextBlock_FileSize; // 0x288(0x08)
	None TextBlock_FPP; // 0x290(0x08)
	None TextBlock_MapName; // 0x298(0x08)
	None TextBlock_Month; // 0x2a0(0x08)
	None TextBlock_PlayerRank; // 0x2a8(0x08)
	None TextBlock_PlayTime; // 0x2b0(0x08)
	None TextBlock_Time; // 0x2b8(0x08)
	None TextBlock_TotalCount; // 0x2c0(0x08)
	None TextBlock_TotalPlayerCount; // 0x2c8(0x08)
	None TextBlock_Year; // 0x2d0(0x08)
	None Click; // 0x2d8(0x10)
	None ReplayItemInfo; // 0x2e8(0x128)
	None Style; // 0x410(0x278)
	None ReplayListWidget; // 0x688(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Button_Category; // 0x250(0x08)
	None CanvasPanel_SlotList; // 0x258(0x08)
	None Image_New; // 0x260(0x08)
	None T_CategoryName; // 0x268(0x08)
	None UW-Lobby_RecipeList_Category_Item_4; // 0x270(0x08)
	None UW-Lobby_RecipeList_Category_Item_5; // 0x278(0x08)
	None UW-Lobby_RecipeList_Category_Item_6; // 0x280(0x08)
	None VerticalBox_ItemList; // 0x288(0x08)
	None WidgetSwitcher_Own; // 0x290(0x08)
	None WeaponType; // 0x298(0x10)
	None IsPressed; // 0x2a8(0x01)
	None IsOwn; // 0x2a9(0x01)
	None IsOwnAny; // 0x2aa(0x01)
	None ParentWidgetRef; // 0x2b0(0x08)
	None SlotSize; // 0x2b8(0x04)
	None CurrentListSize; // 0x2bc(0x04)
	None DefaultImage; // 0x2c0(0x08)
	None HoverImage; // 0x2c8(0x08)
	None PressedDefaultImage; // 0x2d0(0x08)
	None PressedHoverImage; // 0x2d8(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None RichTextBlock_52; // 0x250(0x08)
	None DefaultTextStyle; // 0x258(0x268)
	None TextString; // 0x4c0(0x18)
	None UberGraphFrame; // 0x360(0x08)
	None Bg; // 0x368(0x08)
	None Border_Timeline; // 0x370(0x08)
	None Border_TimeToGo; // 0x378(0x08)
	None BT_FreeCam; // 0x380(0x08)
	None BT_ReplayPause; // 0x388(0x08)
	None BT_ReplayResume; // 0x390(0x08)
	None BT_SpeedDown; // 0x398(0x08)
	None BT_SpeedUp; // 0x3a0(0x08)
	None BT_TimelineScaleDown; // 0x3a8(0x08)
	None BT_TimelineScaleUp; // 0x3b0(0x08)
	None Canvas_EventMarkers; // 0x3b8(0x08)
	None Chk_ShowKill; // 0x3c0(0x08)
	None Chk_ShowKnockout; // 0x3c8(0x08)
	None Chk_ShowMyKill; // 0x3d0(0x08)
	None Chk_ShowMyKnockout; // 0x3d8(0x08)
	None Chk_ShowMyResuscitated; // 0x3e0(0x08)
	None Chk_ShowResuscitated; // 0x3e8(0x08)
	None ReplayTimelineSlider; // 0x3f0(0x08)
	None ScrollBox_Timeline; // 0x3f8(0x08)
	None SizeBox_Timeline; // 0x400(0x08)
	None Slider_TimelineScale; // 0x408(0x08)
	None T_CameraType; // 0x410(0x08)
	None T_CurrentTime; // 0x418(0x08)
	None T_PlaySpeed; // 0x420(0x08)
	None T_TimeToGo; // 0x428(0x08)
	None T_TotalTime; // 0x430(0x08)
	None TimelineSizeBoxOffset; // 0x438(0x04)
	None Class_EventMarker_Kill; // 0x440(0x08)
	None Class_EventMarker_Knockout; // 0x448(0x08)
	None LastViewportSize; // 0x450(0x04)
	None IsMouseOnBorder; // 0x454(0x01)
	None Class_EventMarker_Resuscitated; // 0x458(0x08)
	None Class_EventMarker_WhenReported; // 0x460(0x08)
	None CameraType; // 0x468(0x01)
	None ViewMode; // 0x469(0x01)
	None UberGraphFrame; // 0x270(0x08)
	None AnimGraphNode_LayeredBoneBlend_8; // 0x278(0xc0)
	None AnimGraphNode_SequencePlayer_33; // 0x338(0x78)
	None AnimGraphNode_SequencePlayer_32; // 0x3b0(0x78)
	None AnimGraphNode_SequencePlayer_31; // 0x428(0x78)
	None AnimGraphNode_LayeredBoneBlend_7; // 0x4a0(0xc0)
	None AnimGraphNode_HandIKRetargeting_2; // 0x560(0x120)
	None AnimGraphNode_TwoBoneIK_4; // 0x680(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_3; // 0x860(0x20)
	None AnimGraphNode_TwoBoneIK_3; // 0x880(0x1e0)
	None AnimGraphNode_ModifyBone_2; // 0xa60(0x108)
	None AnimGraphNode_ComponentToLocalSpace_3; // 0xb68(0x20)
	None AnimGraphNode_SaveCachedPose_8; // 0xb88(0xb8)
	None AnimGraphNode_ApplyAdditive_6; // 0xc40(0xc8)
	None AnimGraphNode_SequencePlayer_30; // 0xd08(0x78)
	None AnimGraphNode_SequencePlayer_29; // 0xd80(0x78)
	None AnimGraphNode_SequencePlayer_28; // 0xdf8(0x78)
	None AnimGraphNode_LayeredBoneBlend_6; // 0xe70(0xc0)
	None AnimGraphNode_SequencePlayer_27; // 0xf30(0x78)
	None AnimGraphNode_SequencePlayer_26; // 0xfa8(0x78)
	None AnimGraphNode_LayeredBoneBlend_5; // 0x1020(0xc0)
	None AnimGraphNode_SequencePlayer_25; // 0x10e0(0x78)
	None AnimGraphNode_BlendListByEnum_4; // 0x1158(0xb0)
	None AnimGraphNode_SaveCachedPose_7; // 0x1208(0xb8)
	None AnimGraphNode_UseCachedPose_8; // 0x12c0(0x28)
	None AnimGraphNode_BlendListByBool_8; // 0x12e8(0xa0)
	None AnimGraphNode_SequencePlayer_24; // 0x1388(0x78)
	None AnimGraphNode_SaveCachedPose_6; // 0x1400(0xb8)
	None AnimGraphNode_SequencePlayer_23; // 0x14b8(0x78)
	None AnimGraphNode_BlendListByBool_7; // 0x1530(0xa0)
	None AnimGraphNode_SequencePlayer_22; // 0x15d0(0x78)
	None AnimGraphNode_BlendListByBool_6; // 0x1648(0xa0)
	None AnimGraphNode_SaveCachedPose_5; // 0x16e8(0xb8)
	None AnimGraphNode_SequencePlayer_21; // 0x17a0(0x78)
	None AnimGraphNode_BlendListByBool_5; // 0x1818(0xa0)
	None AnimGraphNode_SequencePlayer_20; // 0x18b8(0x78)
	None AnimGraphNode_SaveCachedPose_4; // 0x1930(0xb8)
	None AnimGraphNode_SequencePlayer_19; // 0x19e8(0x78)
	None AnimGraphNode_BlendListByBool_4; // 0x1a60(0xa0)
	None AnimGraphNode_SequencePlayer_18; // 0x1b00(0x78)
	None AnimGraphNode_BlendListByBool_3; // 0x1b78(0xa0)
	None AnimGraphNode_UseCachedPose_7; // 0x1c18(0x28)
	None AnimGraphNode_UseCachedPose_6; // 0x1c40(0x28)
	None AnimGraphNode_UseCachedPose_5; // 0x1c68(0x28)
	None AnimGraphNode_HandIKRetargeting; // 0x1c90(0x120)
	None AnimGraphNode_TwoBoneIK_2; // 0x1db0(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_2; // 0x1f90(0x20)
	None AnimGraphNode_TwoBoneIK; // 0x1fb0(0x1e0)
	None AnimGraphNode_ModifyBone; // 0x2190(0x108)
	None AnimGraphNode_ComponentToLocalSpace_2; // 0x2298(0x20)
	None AnimGraphNode_SequencePlayer_17; // 0x22b8(0x78)
	None AnimGraphNode_ApplyAdditive_5; // 0x2330(0xc8)
	None AnimGraphNode_SequencePlayer_16; // 0x23f8(0x78)
	None AnimGraphNode_LocalToComponentSpace; // 0x2470(0x20)
	None AnimGraphNode_AnimDynamics_11; // 0x2490(0x440)
	None AnimGraphNode_AnimDynamics_10; // 0x28d0(0x440)
	None AnimGraphNode_ComponentToLocalSpace; // 0x2d10(0x20)
	None AnimGraphNode_AnimDynamics_9; // 0x2d30(0x440)
	None AnimGraphNode_AnimDynamics_8; // 0x3170(0x440)
	None AnimGraphNode_AnimDynamics_7; // 0x35b0(0x440)
	None AnimGraphNode_AnimDynamics_6; // 0x39f0(0x440)
	None AnimGraphNode_AnimDynamics_5; // 0x3e30(0x440)
	None AnimGraphNode_AnimDynamics_4; // 0x4270(0x440)
	None AnimGraphNode_AnimDynamics_3; // 0x46b0(0x440)
	None AnimGraphNode_AnimDynamics_2; // 0x4af0(0x440)
	None AnimGraphNode_AnimDynamics; // 0x4f30(0x440)
	None AnimGraphNode_SequencePlayer_15; // 0x5370(0x78)
	None AnimGraphNode_BlendListByBool_2; // 0x53e8(0xa0)
	None AnimGraphNode_SequencePlayer_14; // 0x5488(0x78)
	None AnimGraphNode_SequencePlayer_13; // 0x5500(0x78)
	None AnimGraphNode_BlendListByBool; // 0x5578(0xa0)
	None AnimGraphNode_SequencePlayer_12; // 0x5618(0x78)
	None AnimGraphNode_KawaiiPhysics_26; // 0x5690(0x250)
	None AnimGraphNode_KawaiiPhysics_25; // 0x58e0(0x250)
	None AnimGraphNode_KawaiiPhysics_24; // 0x5b30(0x250)
	None AnimGraphNode_KawaiiPhysics_23; // 0x5d80(0x250)
	None AnimGraphNode_KawaiiPhysics_22; // 0x5fd0(0x250)
	None AnimGraphNode_KawaiiPhysics_21; // 0x6220(0x250)
	None AnimGraphNode_SequencePlayer_11; // 0x6470(0x78)
	None AnimGraphNode_LayeredBoneBlend_4; // 0x64e8(0xc0)
	None AnimGraphNode_BlendListByEnum_3; // 0x65a8(0xb0)
	None AnimGraphNode_SequencePlayer_10; // 0x6658(0x78)
	None AnimGraphNode_BlendListByEnum_2; // 0x66d0(0xb0)
	None AnimGraphNode_LayeredBoneBlend_3; // 0x6780(0xc0)
	None AnimGraphNode_SequencePlayer_9; // 0x6840(0x78)
	None AnimGraphNode_ApplyAdditive_4; // 0x68b8(0xc8)
	None AnimGraphNode_SequencePlayer_8; // 0x6980(0x78)
	None AnimGraphNode_SequencePlayer_7; // 0x69f8(0x78)
	None AnimGraphNode_LayeredBoneBlend_2; // 0x6a70(0xc0)
	None AnimGraphNode_SequencePlayer_6; // 0x6b30(0x78)
	None AnimGraphNode_ApplyAdditive_3; // 0x6ba8(0xc8)
	None AnimGraphNode_SequencePlayer_5; // 0x6c70(0x78)
	None AnimGraphNode_SequencePlayer_4; // 0x6ce8(0x78)
	None AnimGraphNode_SequencePlayer_3; // 0x6d60(0x78)
	None AnimGraphNode_ApplyAdditive_2; // 0x6dd8(0xc8)
	None AnimGraphNode_SequencePlayer_2; // 0x6ea0(0x78)
	None AnimGraphNode_BoneDrivenController_8; // 0x6f18(0x118)
	None AnimGraphNode_BoneDrivenController_7; // 0x7030(0x118)
	None AnimGraphNode_BoneDrivenController_6; // 0x7148(0x118)
	None AnimGraphNode_BoneDrivenController_5; // 0x7260(0x118)
	None AnimGraphNode_BoneDrivenController_4; // 0x7378(0x118)
	None AnimGraphNode_BoneDrivenController_3; // 0x7490(0x118)
	None AnimGraphNode_BoneDrivenController_2; // 0x75a8(0x118)
	None AnimGraphNode_BoneDrivenController; // 0x76c0(0x118)
	None AnimGraphNode_KawaiiPhysics_20; // 0x77e0(0x250)
	None AnimGraphNode_KawaiiPhysics_19; // 0x7a30(0x250)
	None AnimGraphNode_KawaiiPhysics_18; // 0x7c80(0x250)
	None AnimGraphNode_KawaiiPhysics_17; // 0x7ed0(0x250)
	None AnimGraphNode_KawaiiPhysics_16; // 0x8120(0x250)
	None AnimGraphNode_KawaiiPhysics_15; // 0x8370(0x250)
	None AnimGraphNode_KawaiiPhysics_14; // 0x85c0(0x250)
	None AnimGraphNode_KawaiiPhysics_13; // 0x8810(0x250)
	None AnimGraphNode_KawaiiPhysics_12; // 0x8a60(0x250)
	None AnimGraphNode_KawaiiPhysics_11; // 0x8cb0(0x250)
	None AnimGraphNode_KawaiiPhysics_10; // 0x8f00(0x250)
	None AnimGraphNode_KawaiiPhysics_9; // 0x9150(0x250)
	None AnimGraphNode_KawaiiPhysics_8; // 0x93a0(0x250)
	None AnimGraphNode_KawaiiPhysics_7; // 0x95f0(0x250)
	None AnimGraphNode_SequencePlayer; // 0x9840(0x78)
	None AnimGraphNode_ApplyAdditive; // 0x98b8(0xc8)
	None AnimGraphNode_UseCachedPose_4; // 0x9980(0x28)
	None AnimGraphNode_UseCachedPose_3; // 0x99a8(0x28)
	None AnimGraphNode_UseCachedPose_2; // 0x99d0(0x28)
	None AnimGraphNode_UseCachedPose; // 0x99f8(0x28)
	None AnimGraphNode_SaveCachedPose_3; // 0x9a20(0xb8)
	None AnimGraphNode_LayeredBoneBlend; // 0x9ad8(0xc0)
	None AnimGraphNode_SaveCachedPose_2; // 0x9b98(0xb8)
	None AnimGraphNode_SaveCachedPose; // 0x9c50(0xb8)
	None AnimGraphNode_BlendListByEnum; // 0x9d08(0xb0)
	None AnimGraphNode_Root; // 0x9db8(0x30)
	None AnimGraphNode_KawaiiPhysics_6; // 0x9df0(0x250)
	None AnimGraphNode_KawaiiPhysics_5; // 0xa040(0x250)
	None AnimGraphNode_KawaiiPhysics_4; // 0xa290(0x250)
	None AnimGraphNode_KawaiiPhysics_3; // 0xa4e0(0x250)
	None AnimGraphNode_KawaiiPhysics_2; // 0xa730(0x250)
	None AnimGraphNode_KawaiiPhysics; // 0xa980(0x250)
	None Character; // 0xabd0(0x08)
	None WeaponAnimType; // 0xabd8(0x01)
	None HandAnim; // 0xabe0(0x08)
	None HandL_Location; // 0xabe8(0x0c)
	None HandL_Rotation; // 0xabf4(0x0c)
	None Recorder; // 0xac00(0x08)
	None GripType; // 0xac08(0x01)
	None IsEquippingNormalGrip; // 0xac09(0x01)
	None UnarmedIdlePose; // 0xac10(0x08)
	None IdleNum; // 0xac18(0x04)
	None bIsMale; // 0xac1c(0x01)
	None bIsEquippingGatling; // 0xac1d(0x01)
	None bIsEquippingRPG; // 0xac1e(0x01)
	None InventoryCharacter; // 0xac20(0x08)
	None AnimDynamicsForce; // 0xac28(0x0c)
	None PrevMeshRotationYaw; // 0xac34(0x04)
	None BoneDrivenValue; // 0xac38(0x04)
	None ArmorSlot; // 0x248(0x08)
	None BagSlot; // 0x250(0x08)
	None BottomSlot; // 0x258(0x08)
	None EyeWearSlot; // 0x260(0x08)
	None GhillieSlot; // 0x268(0x08)
	None GlovesSlot; // 0x270(0x08)
	None HatSlot; // 0x278(0x08)
	None HelmetSlot; // 0x280(0x08)
	None MaskSlot; // 0x288(0x08)
	None OuterSlot; // 0x290(0x08)
	None ShoesSlot; // 0x298(0x08)
	None TopSlot; // 0x2a0(0x08)
	None UW-Inventory_Weapon; // 0x2a8(0x08)
	None Timer_UpdateItemList; // 0x2b0(0x08)
	None T_Desc; // 0x248(0x08)
	None UW-Lobby_WeaponInfo_Buff; // 0x250(0x08)
	None UW-Lobby_WeaponInfo_Buff_2; // 0x258(0x08)
	None UW-Lobby_WeaponInfo_Buff_3; // 0x260(0x08)
	None UW-Lobby_WeaponInfo_Buff_4; // 0x268(0x08)
	None UW-Lobby_WeaponInfo_Buff_5; // 0x270(0x08)
	None UW-Lobby_WeaponInfo_Buff_6; // 0x278(0x08)
	None UW-Lobby_WeaponInfo_Buff_7; // 0x280(0x08)
	None UW-Lobby_WeaponInfo_Buff_8; // 0x288(0x08)
	None UW-Lobby_WeaponInfo_Buff_9; // 0x290(0x08)
	None UW-Lobby_WeaponInfo_Buff_10; // 0x298(0x08)
	None WrapBox_Options; // 0x2a0(0x08)
	None FollowCamGuide; // 0x248(0x08)
	None FreeCamGuide; // 0x250(0x08)
	None KeyImageWidget_C_1; // 0x258(0x08)
	None KeyImageWidget_C_2; // 0x260(0x08)
	None KeyImageWidget_C_3; // 0x268(0x08)
	None KeyImageWidget_C_4; // 0x270(0x08)
	None KeyImageWidget_C_5; // 0x278(0x08)
	None KeyImageWidget_C_6; // 0x280(0x08)
	None KeyImageWidget_C_7; // 0x288(0x08)
	None KeyImageWidget_C_8; // 0x290(0x08)
	None KeyImageWidget_C_10; // 0x298(0x08)
	None KeyImageWidget_C_153; // 0x2a0(0x08)
	None KeyImageWidget_C_154; // 0x2a8(0x08)
	None KeyImageWidget_C_155; // 0x2b0(0x08)
	None KeyImageWidget_C_157; // 0x2b8(0x08)
	None KeyImageWidget_C_158; // 0x2c0(0x08)
	None KeyImageWidget_C_159; // 0x2c8(0x08)
	None KeyImageWidget_C_160; // 0x2d0(0x08)
	None KillCamGuide; // 0x2d8(0x08)
	None T_Guide; // 0x2e0(0x08)
	None TextBlock_1; // 0x2e8(0x08)
	None TextBlock_2; // 0x2f0(0x08)
	None TextBlock_4; // 0x2f8(0x08)
	None TextBlock_5; // 0x300(0x08)
	None TextBlock_6; // 0x308(0x08)
	None TextBlock_7; // 0x310(0x08)
	None TextBlock_8; // 0x318(0x08)
	None TextBlock_9; // 0x320(0x08)
	None TextBlock_10; // 0x328(0x08)
	None TextBlock_11; // 0x330(0x08)
	None TextBlock_13; // 0x338(0x08)
	None TextBlock_14; // 0x340(0x08)
	None TextBlock_15; // 0x348(0x08)
	None TextBlock_16; // 0x350(0x08)
	None TextBlock_17; // 0x358(0x08)
	None WidgetSwitcher_132; // 0x360(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Armory_Repair_M; // 0x250(0x08)
	None Armory_Strengthen_M; // 0x258(0x08)
	None Armory_Failed_M; // 0x260(0x08)
	None Armory_Break_M; // 0x268(0x08)
	None Armory_Failed_Break_M; // 0x270(0x08)
	None Armory_Failed_Down_M; // 0x278(0x08)
	None Armory_Awesome_M; // 0x280(0x08)
	None Armory_Success_M; // 0x288(0x08)
	None Armory_Awesome; // 0x290(0x08)
	None Armory_Break; // 0x298(0x08)
	None Armory_Failed; // 0x2a0(0x08)
	None Armory_Failed_Break; // 0x2a8(0x08)
	None Armory_Failed_Down; // 0x2b0(0x08)
	None Armory_Repair; // 0x2b8(0x08)
	None Armory_Strengthen; // 0x2c0(0x08)
	None Armory_Success; // 0x2c8(0x08)
	None Awesome_Damage1; // 0x2d0(0x08)
	None Awesome_Damage2; // 0x2d8(0x08)
	None Awesome_ItemName; // 0x2e0(0x08)
	None Awesome_Level1; // 0x2e8(0x08)
	None Awesome_Level2; // 0x2f0(0x08)
	None Awesome_MagSize1; // 0x2f8(0x08)
	None Awesome_MagSize2; // 0x300(0x08)
	None Awesome_Spread1; // 0x308(0x08)
	None Awesome_Spread2; // 0x310(0x08)
	None Awesome_UpLevel; // 0x318(0x08)
	None Break_Count; // 0x320(0x08)
	None Break_ItemName; // 0x328(0x08)
	None BreakTitle; // 0x330(0x08)
	None Button_1; // 0x338(0x08)
	None Button_2; // 0x340(0x08)
	None Button_228; // 0x348(0x08)
	None Button_230; // 0x350(0x08)
	None Button_232; // 0x358(0x08)
	None Button_233; // 0x360(0x08)
	None Button_EnchanceCancle; // 0x368(0x08)
	None Button_Enhance; // 0x370(0x08)
	None Button_Fatigue; // 0x378(0x08)
	None Empty; // 0x380(0x08)
	None FB_Damage1; // 0x388(0x08)
	None FB_Damage2; // 0x390(0x08)
	None FB_Level1; // 0x398(0x08)
	None FB_Level2; // 0x3a0(0x08)
	None FB_MagSize1; // 0x3a8(0x08)
	None FB_MagSize2; // 0x3b0(0x08)
	None FB_Spread1; // 0x3b8(0x08)
	None FB_Spread2; // 0x3c0(0x08)
	None FD_Damage1; // 0x3c8(0x08)
	None FD_Damage2; // 0x3d0(0x08)
	None FD_DownLevel; // 0x3d8(0x08)
	None FD_Level1; // 0x3e0(0x08)
	None FD_Level2; // 0x3e8(0x08)
	None FD_MagSize1; // 0x3f0(0x08)
	None FD_MagSize2; // 0x3f8(0x08)
	None FD_Spread1; // 0x400(0x08)
	None FD_Spread2; // 0x408(0x08)
	None HorizontalBox_Awesome_Damage; // 0x410(0x08)
	None HorizontalBox_Awesome_MagSize; // 0x418(0x08)
	None HorizontalBox_Awesome_Spread; // 0x420(0x08)
	None HorizontalBox_FB_Damage; // 0x428(0x08)
	None HorizontalBox_FB_MagSize; // 0x430(0x08)
	None HorizontalBox_FB_Spread; // 0x438(0x08)
	None HorizontalBox_FD_Damage; // 0x440(0x08)
	None HorizontalBox_FD_MasSize; // 0x448(0x08)
	None HorizontalBox_FD_Spread; // 0x450(0x08)
	None HorizontalBox_Strengthen_Damage; // 0x458(0x08)
	None HorizontalBox_Strengthen_MagSize; // 0x460(0x08)
	None HorizontalBox_Strengthen_Spread; // 0x468(0x08)
	None HorizontalBox_Success_Damage; // 0x470(0x08)
	None HorizontalBox_Success_Durable; // 0x478(0x08)
	None HorizontalBox_Success_Fatigue; // 0x480(0x08)
	None HorizontalBox_Success_MagSize; // 0x488(0x08)
	None HorizontalBox_Success_Spread; // 0x490(0x08)
	None Image; // 0x498(0x08)
	None Image_2; // 0x4a0(0x08)
	None Image_3; // 0x4a8(0x08)
	None Image_4; // 0x4b0(0x08)
	None Image_8; // 0x4b8(0x08)
	None Image_14; // 0x4c0(0x08)
	None Image_15; // 0x4c8(0x08)
	None Image_16; // 0x4d0(0x08)
	None Image_17; // 0x4d8(0x08)
	None Image_18; // 0x4e0(0x08)
	None Image_20; // 0x4e8(0x08)
	None Image_27; // 0x4f0(0x08)
	None Image_167; // 0x4f8(0x08)
	None Image_501; // 0x500(0x08)
	None Image_503; // 0x508(0x08)
	None Image_817; // 0x510(0x08)
	None Image_820; // 0x518(0x08)
	None Image_821; // 0x520(0x08)
	None Image_822; // 0x528(0x08)
	None Image_823; // 0x530(0x08)
	None Image_824; // 0x538(0x08)
	None Image_825; // 0x540(0x08)
	None Image_826; // 0x548(0x08)
	None Image_827; // 0x550(0x08)
	None Image_828; // 0x558(0x08)
	None Image_829; // 0x560(0x08)
	None Image_830; // 0x568(0x08)
	None Image_831; // 0x570(0x08)
	None Image_832; // 0x578(0x08)
	None Image_833; // 0x580(0x08)
	None Image_834; // 0x588(0x08)
	None Image_835; // 0x590(0x08)
	None Image_836; // 0x598(0x08)
	None Image_837; // 0x5a0(0x08)
	None Image_838; // 0x5a8(0x08)
	None Image_839; // 0x5b0(0x08)
	None Image_840; // 0x5b8(0x08)
	None Image_841; // 0x5c0(0x08)
	None Image_842; // 0x5c8(0x08)
	None Image_843; // 0x5d0(0x08)
	None Image_845; // 0x5d8(0x08)
	None Image_846; // 0x5e0(0x08)
	None Image_847; // 0x5e8(0x08)
	None Image_848; // 0x5f0(0x08)
	None Image_849; // 0x5f8(0x08)
	None Image_850; // 0x600(0x08)
	None Image_851; // 0x608(0x08)
	None Image_852; // 0x610(0x08)
	None Image_853; // 0x618(0x08)
	None Image_854; // 0x620(0x08)
	None Image_855; // 0x628(0x08)
	None Image_856; // 0x630(0x08)
	None Image_857; // 0x638(0x08)
	None Image_858; // 0x640(0x08)
	None Image_859; // 0x648(0x08)
	None Image_860; // 0x650(0x08)
	None Image_861; // 0x658(0x08)
	None Image_862; // 0x660(0x08)
	None Image_863; // 0x668(0x08)
	None Image_864; // 0x670(0x08)
	None Image_865; // 0x678(0x08)
	None Image_866; // 0x680(0x08)
	None Image_867; // 0x688(0x08)
	None Image_868; // 0x690(0x08)
	None Image_921; // 0x698(0x08)
	None Image_1264; // 0x6a0(0x08)
	None Image_1266; // 0x6a8(0x08)
	None Image_1269; // 0x6b0(0x08)
	None Image_1270; // 0x6b8(0x08)
	None Image_1271; // 0x6c0(0x08)
	None Image_1272; // 0x6c8(0x08)
	None Image_1273; // 0x6d0(0x08)
	None Image_1277; // 0x6d8(0x08)
	None Image_1278; // 0x6e0(0x08)
	None Image_1279; // 0x6e8(0x08)
	None Image_1280; // 0x6f0(0x08)
	None Image_1284; // 0x6f8(0x08)
	None Image_1285; // 0x700(0x08)
	None Image_1318; // 0x708(0x08)
	None Image_1319; // 0x710(0x08)
	None Image_1320; // 0x718(0x08)
	None Image_1321; // 0x720(0x08)
	None Image_1322; // 0x728(0x08)
	None Image_1323; // 0x730(0x08)
	None Image_1324; // 0x738(0x08)
	None Image_1329; // 0x740(0x08)
	None Image_1330; // 0x748(0x08)
	None Image_1335; // 0x750(0x08)
	None Image_1336; // 0x758(0x08)
	None Image_1341; // 0x760(0x08)
	None Image_1342; // 0x768(0x08)
	None Image_1343; // 0x770(0x08)
	None Image_1344; // 0x778(0x08)
	None Image_1345; // 0x780(0x08)
	None Image_1346; // 0x788(0x08)
	None Image_1347; // 0x790(0x08)
	None Image_1348; // 0x798(0x08)
	None Image_1349; // 0x7a0(0x08)
	None Image_1350; // 0x7a8(0x08)
	None Image_1351; // 0x7b0(0x08)
	None Image_1352; // 0x7b8(0x08)
	None Image_1353; // 0x7c0(0x08)
	None Image_1354; // 0x7c8(0x08)
	None Image_1355; // 0x7d0(0x08)
	None Image_1356; // 0x7d8(0x08)
	None Image_1358; // 0x7e0(0x08)
	None Image_1359; // 0x7e8(0x08)
	None Image_1361; // 0x7f0(0x08)
	None Image_1362; // 0x7f8(0x08)
	None Image_1363; // 0x800(0x08)
	None Image_1364; // 0x808(0x08)
	None Image_1366; // 0x810(0x08)
	None Image_1368; // 0x818(0x08)
	None Image_1369; // 0x820(0x08)
	None Image_1370; // 0x828(0x08)
	None Image_1372; // 0x830(0x08)
	None Image_1374; // 0x838(0x08)
	None Image_1375; // 0x840(0x08)
	None Image_1376; // 0x848(0x08)
	None Image_1378; // 0x850(0x08)
	None Image_1380; // 0x858(0x08)
	None Image_1381; // 0x860(0x08)
	None Image_1382; // 0x868(0x08)
	None Image_1384; // 0x870(0x08)
	None Image_1972; // 0x878(0x08)
	None ImageTX_Complete_Fail; // 0x880(0x08)
	None ItemList; // 0x888(0x08)
	None Overlay_FB_ItemList; // 0x890(0x08)
	None Strengthen_Cost; // 0x898(0x08)
	None Strengthen_Count; // 0x8a0(0x08)
	None Strengthen_CurrentDamageText1; // 0x8a8(0x08)
	None Strengthen_CurrentDamageText2; // 0x8b0(0x08)
	None Strengthen_CurrentMagSizeText1; // 0x8b8(0x08)
	None Strengthen_CurrentMagSizeText2; // 0x8c0(0x08)
	None Strengthen_CurrentSpreadText1; // 0x8c8(0x08)
	None Strengthen_CurrentSpreadText2; // 0x8d0(0x08)
	None Strengthen_Icon; // 0x8d8(0x08)
	None Strengthen_IconType1; // 0x8e0(0x08)
	None Strengthen_IconType2; // 0x8e8(0x08)
	None Strengthen_IconType3; // 0x8f0(0x08)
	None Strengthen_Level1; // 0x8f8(0x08)
	None Strengthen_Level2; // 0x900(0x08)
	None Strengthen_Name; // 0x908(0x08)
	None Strengthen_TextType1; // 0x910(0x08)
	None Strengthen_TextType2; // 0x918(0x08)
	None Strengthen_TextType3; // 0x920(0x08)
	None Success_Damage1; // 0x928(0x08)
	None Success_Damage2; // 0x930(0x08)
	None Success_ItemName; // 0x938(0x08)
	None Success_ItemName_2; // 0x940(0x08)
	None Success_Level1; // 0x948(0x08)
	None Success_Level2; // 0x950(0x08)
	None Success_MagSize1; // 0x958(0x08)
	None Success_MagSize2; // 0x960(0x08)
	None Success_Spread1; // 0x968(0x08)
	None Success_Spread2; // 0x970(0x08)
	None Success_UpLevel; // 0x978(0x08)
	None T_Durability; // 0x980(0x08)
	None T_Fatigue; // 0x988(0x08)
	None T_PreFatigue; // 0x990(0x08)
	None TerrainHeight; // 0x998(0x08)
	None TextBlock_2089; // 0x9a0(0x08)
	None TextBlock_FB_ItemCount; // 0x9a8(0x08)
	None TextBlock_FB_ItemName; // 0x9b0(0x08)
	None TextBlock_FB_Title; // 0x9b8(0x08)
	None WidgetSwitcher_1; // 0x9c0(0x08)
	None ResultInfo; // 0x9c8(0x38)
	None CurrentDurability; // 0xa00(0x04)
	None UberGraphFrame; // 0x258(0x08)
	None btn_Cancel; // 0x260(0x08)
	None btn_confirm; // 0x268(0x08)
	None popup-bg; // 0x270(0x08)
	None txt_description; // 0x278(0x08)
	None uw-bg; // 0x280(0x08)
	None Ani_Complete; // 0x248(0x08)
	None Ani_BG; // 0x250(0x08)
	None Bg; // 0x258(0x08)
	None Complete; // 0x260(0x08)
	None TextBlock_QuestDesc; // 0x268(0x08)
	None TextBlock_QuestTitle; // 0x270(0x08)
	None UW-ImageText; // 0x278(0x08)
	None UW-ScenarioQuestCell_Sub; // 0x280(0x08)
	None UW-ScenarioQuestCell_Sub_2; // 0x288(0x08)
	None UW-ScenarioQuestCell_Sub_3; // 0x290(0x08)
	None TaskInfo; // 0x298(0x20)
	None TaskData; // 0x2b8(0xb0)
	None UberGraphFrame; // 0x858(0x08)
	None DefaultSceneRoot; // 0x860(0x08)
	None TableInfo; // 0x868(0x50)
	None NewVar_1; // 0x8b8(0x10)
	None GuideWidgetStack; // 0x8c8(0x10)
	None NewVar_2; // 0x8d8(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None WrapBox_Main; // 0x250(0x08)
	None DefaultTextStyle; // 0x258(0x268)
	None TextString; // 0x4c0(0x18)
	None Game Settings; // 0x4d8(0x08)
	None HorizontalAlignment; // 0x4e0(0x01)
	None KeyImageScale; // 0x4e4(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None HorizontalBox_Next; // 0x250(0x08)
	None ProgressBar_Current; // 0x258(0x08)
	None ProgressBar_Down; // 0x260(0x08)
	None ProgressBar_Up; // 0x268(0x08)
	None TextBlock_Current; // 0x270(0x08)
	None TextBlock_Max; // 0x278(0x08)
	None TextBlock_Next; // 0x280(0x08)
	None EnableUpdate; // 0x288(0x01)
	None CurTime; // 0x28c(0x04)
	None ShowTime; // 0x290(0x04)
	None EndPoint; // 0x294(0x04)
	None ChangeValue; // 0x298(0x04)
	None StartPoint; // 0x29c(0x04)
	None Min; // 0x2a0(0x04)
	None MAX; // 0x2a4(0x04)
	None IsUPState; // 0x2a8(0x01)
	None Dispatcher_ProgressBarDone; // 0x2b0(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None HorizontalBox; // 0x250(0x08)
	None HorizontalBox_2; // 0x258(0x08)
	None Image; // 0x260(0x08)
	None Image_2; // 0x268(0x08)
	None Image_3; // 0x270(0x08)
	None Image_4; // 0x278(0x08)
	None Image_5; // 0x280(0x08)
	None Image_6; // 0x288(0x08)
	None Image_7; // 0x290(0x08)
	None Image_8; // 0x298(0x08)
	None Image_9; // 0x2a0(0x08)
	None Image_10; // 0x2a8(0x08)
	None Image_11; // 0x2b0(0x08)
	None Image_12; // 0x2b8(0x08)
	None Image_13; // 0x2c0(0x08)
	None Image_14; // 0x2c8(0x08)
	None Image_15; // 0x2d0(0x08)
	None Image_72; // 0x2d8(0x08)
	None Image_164; // 0x2e0(0x08)
	None Image_352; // 0x2e8(0x08)
	None Image_659; // 0x2f0(0x08)
	None Overlay_4; // 0x2f8(0x08)
	None SizeBox; // 0x300(0x08)
	None SizeBox_54; // 0x308(0x08)
	None T_WeaponType; // 0x310(0x08)
	None TextBlock_176; // 0x318(0x08)
	None TextBlock_258; // 0x320(0x08)
	None TextBlock_331; // 0x328(0x08)
	None WidgetSwitcher_1; // 0x330(0x08)
	None ItemInfo; // 0x338(0x08)
	None ItemDetailInfo; // 0x340(0x490)
	None LocalText; // 0x7d0(0x18)
	None bIsSmallIcon; // 0x7e8(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Hide; // 0x250(0x08)
	None RankDown; // 0x258(0x08)
	None RankUp; // 0x260(0x08)
	None Anim_Reward; // 0x268(0x08)
	None Arrow_3; // 0x270(0x08)
	None ArrowLine_3; // 0x278(0x08)
	None BottomLine_3; // 0x280(0x08)
	None BrightSpot_01; // 0x288(0x08)
	None BrightSpot_02; // 0x290(0x08)
	None BrightSpot_03; // 0x298(0x08)
	None BrightSpot_04; // 0x2a0(0x08)
	None BrightSpot_05; // 0x2a8(0x08)
	None Button_DeathCam; // 0x2b0(0x08)
	None Button_DeathCam_2; // 0x2b8(0x08)
	None Button_Exit; // 0x2c0(0x08)
	None Button_Report; // 0x2c8(0x08)
	None Button_Spectate; // 0x2d0(0x08)
	None CanvasPanel_3; // 0x2d8(0x08)
	None CanvasPanel_9; // 0x2e0(0x08)
	None CanvasPanel_1174; // 0x2e8(0x08)
	None CanvasPanel_1384; // 0x2f0(0x08)
	None Glow1; // 0x2f8(0x08)
	None Glow2; // 0x300(0x08)
	None Glow3; // 0x308(0x08)
	None Glow_01; // 0x310(0x08)
	None GlowLine; // 0x318(0x08)
	None Gold; // 0x320(0x08)
	None Image_26; // 0x328(0x08)
	None Image_27; // 0x330(0x08)
	None Image_28; // 0x338(0x08)
	None Image_29; // 0x340(0x08)
	None Image_216; // 0x348(0x08)
	None Image_223; // 0x350(0x08)
	None Image_458; // 0x358(0x08)
	None Image_559; // 0x360(0x08)
	None Image_CurrentRANK; // 0x368(0x08)
	None Image_DownRANK; // 0x370(0x08)
	None Image_UpRANK; // 0x378(0x08)
	None L_Wing01; // 0x380(0x08)
	None L_Wing01_2; // 0x388(0x08)
	None L_Wing01_5; // 0x390(0x08)
	None L_Wing02; // 0x398(0x08)
	None L_Wing02_2; // 0x3a0(0x08)
	None L_Wing02_5; // 0x3a8(0x08)
	None L_Wing03; // 0x3b0(0x08)
	None L_Wing03_2; // 0x3b8(0x08)
	None L_Wing03_5; // 0x3c0(0x08)
	None L_WingLine; // 0x3c8(0x08)
	None L_WingLine_3; // 0x3d0(0x08)
	None Light_2; // 0x3d8(0x08)
	None Light_01; // 0x3e0(0x08)
	None Light_02; // 0x3e8(0x08)
	None Light_03; // 0x3f0(0x08)
	None Light_04; // 0x3f8(0x08)
	None Light_05; // 0x400(0x08)
	None Light_06; // 0x408(0x08)
	None Overlay_2; // 0x410(0x08)
	None Overlay_264; // 0x418(0x08)
	None Overlay_Report; // 0x420(0x08)
	None Overlay_Spectate; // 0x428(0x08)
	None R_Wing01; // 0x430(0x08)
	None R_Wing01_2; // 0x438(0x08)
	None R_Wing01_5; // 0x440(0x08)
	None R_Wing01_6; // 0x448(0x08)
	None R_Wing02; // 0x450(0x08)
	None R_Wing02_2; // 0x458(0x08)
	None R_Wing02_5; // 0x460(0x08)
	None R_Wing02_6; // 0x468(0x08)
	None R_Wing03; // 0x470(0x08)
	None R_Wing03_2; // 0x478(0x08)
	None R_Wing03_5; // 0x480(0x08)
	None R_Wing03_6; // 0x488(0x08)
	None R_WingLine; // 0x490(0x08)
	None R_WingLine_3; // 0x498(0x08)
	None Ribbon; // 0x4a0(0x08)
	None ring; // 0x4a8(0x08)
	None RIng_Glow_01; // 0x4b0(0x08)
	None ScrollBox_2; // 0x4b8(0x08)
	None ScrollBox_199; // 0x4c0(0x08)
	None SizeBox_8; // 0x4c8(0x08)
	None Spacer_6018; // 0x4d0(0x08)
	None Spacer_6217; // 0x4d8(0x08)
	None Spacer_Center; // 0x4e0(0x08)
	None Spacer_Center_2; // 0x4e8(0x08)
	None T_RemainTime_2; // 0x4f0(0x08)
	None Text_Report; // 0x4f8(0x08)
	None TextBlock_3; // 0x500(0x08)
	None TextBlock_12; // 0x508(0x08)
	None TextBlock_13; // 0x510(0x08)
	None TextBlock_14; // 0x518(0x08)
	None TextBlock_25; // 0x520(0x08)
	None TextBlock_27; // 0x528(0x08)
	None TextBlock_1425; // 0x530(0x08)
	None TextBlock_2242; // 0x538(0x08)
	None TextBlock_2769; // 0x540(0x08)
	None TextBlock_3056; // 0x548(0x08)
	None TextBlock_LocalMatchRP; // 0x550(0x08)
	None TextGlow01; // 0x558(0x08)
	None TextGlow02; // 0x560(0x08)
	None TextGlow03; // 0x568(0x08)
	None TopLine_3; // 0x570(0x08)
	None UW-MatchEnd_GoldList; // 0x578(0x08)
	None UW-MatchEnd_RewardSlot_02_2; // 0x580(0x08)
	None UW-MatchEnd_RewardSlot_02_3; // 0x588(0x08)
	None UW-MatchEnd_RewardSlot_02_4; // 0x590(0x08)
	None UW-MatchEnd_RewardSlot_02_5; // 0x598(0x08)
	None UW-MatchEnd_RewardSlot_02_369; // 0x5a0(0x08)
	None UW-RankPoint; // 0x5a8(0x08)
	None UW-RewardGoldSlot_02; // 0x5b0(0x08)
	None VerticalBox_191; // 0x5b8(0x08)
	None WidgetSwitcher_2; // 0x5c0(0x08)
	None MatchEnd; // 0x5c8(0x01)
	None AnimationData; // 0x5c9(0x02)
	None MatchEndWidgetRef; // 0x5d0(0x08)
	None SimpleResult; // 0x5d8(0xa8)
	None SimpleTimer; // 0x680(0x08)
	None IsWinningCam; // 0x688(0x01)
	None StartSound; // 0x68c(0x04)
	None GainGoldHandle; // 0x690(0x08)
	None GoldHandle; // 0x698(0x08)
	None FinalResultData; // 0x6a0(0x04)
	None RandomGold; // 0x6a4(0x04)
	None GainGoldValue; // 0x6a8(0x04)
	None LocalWidget; // 0x6b0(0x08)
	None PlayerState; // 0x6b8(0x08)
	None Timehandle_Rank; // 0x6c0(0x08)
	None Increase; // 0x6c8(0x01)
	None bMaxPrograssbar; // 0x6c9(0x01)
	None CurrentRP; // 0x6cc(0x04)
	None PlayerOriRP; // 0x6d0(0x04)
	None TargetRP; // 0x6d4(0x04)
	None NextTireRP; // 0x6d8(0x04)
	None CurrentTierID; // 0x6dc(0x04)
	None IsGiveUp; // 0x6e0(0x01)
	None TempRank; // 0x6e4(0x04)
	None TempKill; // 0x6e8(0x04)
	None TempHit; // 0x6ec(0x04)
	None TempSuvival; // 0x6f0(0x04)
	None SeasonRP; // 0x6f4(0x04)
	None GainedRP; // 0x6f8(0x04)
	None AminRPText; // 0x6fc(0x04)
	None StartRP; // 0x700(0x04)
	None EndRP; // 0x704(0x04)
	None ShowTime; // 0x708(0x04)
	None IsTargetCameraKiller; // 0x70c(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Canvas_Charge; // 0x250(0x08)
	None ChargeIndicator; // 0x258(0x08)
	None Image_LeanDamageBg; // 0x260(0x08)
	None IMG_Gauge1; // 0x268(0x08)
	None IMG_Gauge2; // 0x270(0x08)
	None IMG_Gauge3; // 0x278(0x08)
	None IMG_Gauge4; // 0x280(0x08)
	None IMG_Gauge5; // 0x288(0x08)
	None IMG_Gauge6; // 0x290(0x08)
	None LeftTime; // 0x298(0x08)
	None Overlay_Gauge; // 0x2a0(0x08)
	None T_BulletsPerShot; // 0x2a8(0x08)
	None T_Damage; // 0x2b0(0x08)
	None T_RPM; // 0x2b8(0x08)
	None VerticalBox_Damage; // 0x2c0(0x08)
	None BravoHotelCharacter; // 0x2c8(0x08)
	None GaugeIMGArray; // 0x2d0(0x10)
	None LastGauge; // 0x2e0(0x04)
	None Timer_; // 0x2e4(0x01)
	None Timer_UpdateInfos; // 0x2e8(0x08)
	None ChargeIndicatorDynamicMaterial; // 0x2f0(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Event2; // 0x250(0x08)
	None Event; // 0x258(0x08)
	None Anim_Second; // 0x260(0x08)
	None Hide; // 0x268(0x08)
	None Infos_ani; // 0x270(0x08)
	None Anim_Defeat; // 0x278(0x08)
	None Anim_Victory; // 0x280(0x08)
	None Arrow; // 0x288(0x08)
	None Arrow_2; // 0x290(0x08)
	None ArrowLine; // 0x298(0x08)
	None ArrowLine_2; // 0x2a0(0x08)
	None BackgroundBlur; // 0x2a8(0x08)
	None BackgroundBlur_447; // 0x2b0(0x08)
	None BlackBG01; // 0x2b8(0x08)
	None BlackBG02; // 0x2c0(0x08)
	None BottomLine; // 0x2c8(0x08)
	None BottomLine_2; // 0x2d0(0x08)
	None Button; // 0x2d8(0x08)
	None Button_2; // 0x2e0(0x08)
	None Button_104; // 0x2e8(0x08)
	None CanvasPanel_7; // 0x2f0(0x08)
	None CanvasPanel_49; // 0x2f8(0x08)
	None CanvasPanel_488; // 0x300(0x08)
	None CanvasPanel_832; // 0x308(0x08)
	None Glow1; // 0x310(0x08)
	None Glow1_2; // 0x318(0x08)
	None Glow2; // 0x320(0x08)
	None Glow3; // 0x328(0x08)
	None Glow3_2; // 0x330(0x08)
	None GlowLine; // 0x338(0x08)
	None HeadShot; // 0x340(0x08)
	None HorizontalBox_KillerWeaponInfo; // 0x348(0x08)
	None HorizontalBox_Rarity; // 0x350(0x08)
	None Image_4; // 0x358(0x08)
	None Image_5; // 0x360(0x08)
	None Image_6; // 0x368(0x08)
	None Image_7; // 0x370(0x08)
	None Image_8; // 0x378(0x08)
	None Image_16; // 0x380(0x08)
	None Image_17; // 0x388(0x08)
	None Image_18; // 0x390(0x08)
	None Image_19; // 0x398(0x08)
	None Image_20; // 0x3a0(0x08)
	None Image_21; // 0x3a8(0x08)
	None Image_22; // 0x3b0(0x08)
	None Image_23; // 0x3b8(0x08)
	None Image_252; // 0x3c0(0x08)
	None Image_505; // 0x3c8(0x08)
	None Image_1091; // 0x3d0(0x08)
	None Image_1443; // 0x3d8(0x08)
	None Image_1558; // 0x3e0(0x08)
	None L_Wing01; // 0x3e8(0x08)
	None L_Wing01_2; // 0x3f0(0x08)
	None L_Wing01_3; // 0x3f8(0x08)
	None L_Wing01_4; // 0x400(0x08)
	None L_Wing02; // 0x408(0x08)
	None L_Wing02_2; // 0x410(0x08)
	None L_Wing02_3; // 0x418(0x08)
	None L_Wing02_4; // 0x420(0x08)
	None L_Wing03; // 0x428(0x08)
	None L_Wing03_2; // 0x430(0x08)
	None L_Wing03_3; // 0x438(0x08)
	None L_Wing03_4; // 0x440(0x08)
	None L_WingLine; // 0x448(0x08)
	None L_WingLine_2; // 0x450(0x08)
	None Logo; // 0x458(0x08)
	None Logo_2; // 0x460(0x08)
	None Overlay_1; // 0x468(0x08)
	None Overlay_WeaponLevel; // 0x470(0x08)
	None PosX; // 0x478(0x08)
	None PosY; // 0x480(0x08)
	None PosZ; // 0x488(0x08)
	None R_Wing01; // 0x490(0x08)
	None R_Wing01_2; // 0x498(0x08)
	None R_Wing01_3; // 0x4a0(0x08)
	None R_Wing01_4; // 0x4a8(0x08)
	None R_Wing02; // 0x4b0(0x08)
	None R_Wing02_2; // 0x4b8(0x08)
	None R_Wing02_3; // 0x4c0(0x08)
	None R_Wing02_4; // 0x4c8(0x08)
	None R_Wing03; // 0x4d0(0x08)
	None R_Wing03_2; // 0x4d8(0x08)
	None R_Wing03_3; // 0x4e0(0x08)
	None R_Wing03_4; // 0x4e8(0x08)
	None R_WingLine; // 0x4f0(0x08)
	None R_WingLine_2; // 0x4f8(0x08)
	None Ribbon; // 0x500(0x08)
	None Ribbon_2; // 0x508(0x08)
	None ring; // 0x510(0x08)
	None ScrollBox_1; // 0x518(0x08)
	None T_DamageType; // 0x520(0x08)
	None T_WeaponLevel; // 0x528(0x08)
	None TextBlock_3; // 0x530(0x08)
	None TextBlock_4; // 0x538(0x08)
	None TextBlock_5; // 0x540(0x08)
	None TextBlock_6; // 0x548(0x08)
	None TextBlock_8; // 0x550(0x08)
	None TextBlock_9; // 0x558(0x08)
	None TextBlock_10; // 0x560(0x08)
	None TextBlock_11; // 0x568(0x08)
	None TextBlock_900; // 0x570(0x08)
	None TopLine; // 0x578(0x08)
	None TopLine_2; // 0x580(0x08)
	None UW-MatchEnd_RewardSlot; // 0x588(0x08)
	None UW-MatchEnd_RewardSlot_02; // 0x590(0x08)
	None WeaponName; // 0x598(0x08)
	None WidgetSwitcher_DamageCauser; // 0x5a0(0x08)
	None WinText1; // 0x5a8(0x08)
	None WinText1_2; // 0x5b0(0x08)
	None WinText1_3; // 0x5b8(0x08)
	None WinText1_4; // 0x5c0(0x08)
	None WinText2; // 0x5c8(0x08)
	None WinText3; // 0x5d0(0x08)
	None MatchEnd; // 0x5d8(0x01)
	None AnimationData; // 0x5d9(0x02)
	None MatchEndWidgetRef; // 0x5e0(0x08)
	None SimpleResult; // 0x5e8(0xa8)
	None SimpleTimer; // 0x690(0x10)
	None EventDispatcher_HideComplete; // 0x6a0(0x10)
	None bSuccessWinEventCall; // 0x6b0(0x01)
	None PlayingAudio; // 0x6b8(0x10)
	None bTestMode; // 0x6c8(0x01)
	None bTestIsWin; // 0x6c9(0x01)
	None MatchFinalResultShowTime; // 0x6cc(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None HorizontalBox_Rarity; // 0x250(0x08)
	None HorizontalBox_Rarity_NotOwn; // 0x258(0x08)
	None Img_BG; // 0x260(0x08)
	None Img_Icon; // 0x268(0x08)
	None RetainerBox_2; // 0x270(0x08)
	None T_CurrentCount; // 0x278(0x08)
	None T_MaxCount; // 0x280(0x08)
	None T_RecipeNum; // 0x288(0x08)
	None WidgetSwitcher_Rarity; // 0x290(0x08)
	None MaterialInfo; // 0x298(0xd0)
	None ItemId; // 0x368(0x04)
	None MaxCount; // 0x36c(0x04)
	None CurrentCount; // 0x370(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Button_Weapon; // 0x250(0x08)
	None HorizontalBox_Rarity; // 0x258(0x08)
	None Image_2; // 0x260(0x08)
	None Image_3; // 0x268(0x08)
	None Image_4; // 0x270(0x08)
	None Image_5; // 0x278(0x08)
	None Image_6; // 0x280(0x08)
	None Image_7; // 0x288(0x08)
	None Image_8; // 0x290(0x08)
	None Image_310; // 0x298(0x08)
	None Image_Item_Weapon; // 0x2a0(0x08)
	None Image_New; // 0x2a8(0x08)
	None T_Name; // 0x2b0(0x08)
	None WidgetSwitcher_Own; // 0x2b8(0x08)
	None ParentWidgetRef; // 0x2c0(0x08)
	None CraftingInfo; // 0x2c8(0x128)
	None CraftMaterialItemIDList; // 0x3f0(0x10)
	None CraftMaterialWeaponID; // 0x400(0x04)
	None IsOwn; // 0x404(0x01)
	None IsOwnAny; // 0x405(0x01)
	None DefaultImage; // 0x408(0x08)
	None PressedDefaultImage; // 0x410(0x08)
	None IsNew; // 0x418(0x01)
	None ShowAnim; // 0x248(0x08)
	None UW-Lobby_Armory_Recipe; // 0x250(0x08)
	None WidgetSwitcher_53; // 0x258(0x08)
	None Gold; // 0x260(0x04)
	None WeaponList; // 0x268(0x10)
	None MaterialList; // 0x278(0x10)
	None ItemWeaponIDList; // 0x288(0x10)
	None LastItemWeaponIDList; // 0x298(0x10)
	None NewWeaponList; // 0x2a8(0x10)
	None MaterialIDList; // 0x2b8(0x10)
	None LastMaterialIDList; // 0x2c8(0x10)
	None NewMaterialList; // 0x2d8(0x10)
	None NewCraftIDList; // 0x2e8(0x10)
	None CraftWeaponInfo; // 0x2f8(0xc0)
	None MainTabName; // 0x3b8(0x10)
	None ArmoryTabName; // 0x3c8(0x10)
	None bNeedCheckWeaponList; // 0x3d8(0x01)
	None bNeedCheckMaterialList; // 0x3d9(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Image; // 0x250(0x08)
	None Image_2; // 0x258(0x08)
	None Image_3; // 0x260(0x08)
	None Image_4; // 0x268(0x08)
	None Image_917; // 0x270(0x08)
	None Img_TypeIcon; // 0x278(0x08)
	None KeyImageWidget; // 0x280(0x08)
	None KeyImageWidget_2; // 0x288(0x08)
	None KeyImageWidget_3; // 0x290(0x08)
	None KeyImageWidget_4; // 0x298(0x08)
	None KeyImageWidget_5; // 0x2a0(0x08)
	None T_Context; // 0x2a8(0x08)
	None T_Context_2; // 0x2b0(0x08)
	None T_Context_3; // 0x2b8(0x08)
	None T_Context_4; // 0x2c0(0x08)
	None T_Context_5; // 0x2c8(0x08)
	None Text_SkillName; // 0x2d0(0x08)
	None VB_Nuclear; // 0x2d8(0x08)
	None VB_Retreat; // 0x2e0(0x08)
	None WidgetSwitcher_126; // 0x2e8(0x08)
	None UberGraphFrame; // 0x3c0(0x08)
	None FreeCam; // 0x3c8(0x08)
	None SpringArm; // 0x3d0(0x08)
	None ReplayMainWidget; // 0x3d8(0x08)
	None ViewMode; // 0x3e0(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None VisualNoninteractButton; // 0x250(0x08)
	None Original Style; // 0x258(0x278)
	None UberGraphFrame; // 0x248(0x08)
	None Ani_Gold; // 0x250(0x08)
	None 1; // 0x258(0x08)
	None 10; // 0x260(0x08)
	None 100; // 0x268(0x08)
	None 1000; // 0x270(0x08)
	None BonusBG; // 0x278(0x08)
	None BrightSpot_01; // 0x280(0x08)
	None BrightSpot_02; // 0x288(0x08)
	None BrightSpot_03; // 0x290(0x08)
	None BrightSpot_04; // 0x298(0x08)
	None BrightSpot_05; // 0x2a0(0x08)
	None Empty; // 0x2a8(0x08)
	None Glow_01; // 0x2b0(0x08)
	None Gold; // 0x2b8(0x08)
	None Image_7; // 0x2c0(0x08)
	None Image_11; // 0x2c8(0x08)
	None Image_14; // 0x2d0(0x08)
	None Image_15; // 0x2d8(0x08)
	None Image_16; // 0x2e0(0x08)
	None Image_17; // 0x2e8(0x08)
	None Image_18; // 0x2f0(0x08)
	None Image_20; // 0x2f8(0x08)
	None Image_21; // 0x300(0x08)
	None Image_22; // 0x308(0x08)
	None Image_23; // 0x310(0x08)
	None Image_335; // 0x318(0x08)
	None Image_1473; // 0x320(0x08)
	None Light; // 0x328(0x08)
	None Light_01; // 0x330(0x08)
	None Light_02; // 0x338(0x08)
	None Light_03; // 0x340(0x08)
	None Light_04; // 0x348(0x08)
	None Light_05; // 0x350(0x08)
	None Light_06; // 0x358(0x08)
	None PickUpGold; // 0x360(0x08)
	None RIng_Glow_01; // 0x368(0x08)
	None TextBlock_4; // 0x370(0x08)
	None TextLight_2; // 0x378(0x08)
	None TextLight_3; // 0x380(0x08)
	None Save; // 0x388(0x04)
	None NewVar_1; // 0x38c(0x01)
	None IsStopSound; // 0x38d(0x01)
	None LoopSountStartTime; // 0x390(0x04)
	None LoopSound; // 0x394(0x04)
	None LoopSountEndTime; // 0x398(0x04)
	None 1StartTime; // 0x39c(0x04)
	None 10StartTime; // 0x3a0(0x04)
	None 100StartTime; // 0x3a4(0x04)
	None 1000StartTime; // 0x3a8(0x04)
	None FinStartTime; // 0x3ac(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None HorizontalBox_Rarity; // 0x250(0x08)
	None Image_bg; // 0x258(0x08)
	None Image_Icon; // 0x260(0x08)
	None T_Name; // 0x268(0x08)
	None T_WeaponType; // 0x270(0x08)
	None TextBlock_186; // 0x278(0x08)
	None Tooltip; // 0x280(0x08)
	None ItemInfo; // 0x288(0x08)
	None ItemDetailInfo; // 0x290(0x490)
	None UberGraphFrame; // 0x248(0x08)
	None Button_43; // 0x250(0x08)
	None Image_269; // 0x258(0x08)
	None TextBlock_67; // 0x260(0x08)
	None Text; // 0x268(0x18)
	None UberGraphFrame; // 0x248(0x08)
	None Canvas_Main; // 0x250(0x08)
	None CB_DrawDeathPosition; // 0x258(0x08)
	None CB_DrawFireDirection; // 0x260(0x08)
	None CB_DrawHitted; // 0x268(0x08)
	None CB_DrawPersonalSupplyBox; // 0x270(0x08)
	None CB_TransportDropBox; // 0x278(0x08)
	None ReplayController; // 0x280(0x08)
	None MainWidget; // 0x288(0x08)
	None PlayerHUD; // 0x290(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Image; // 0x250(0x08)
	None ScrollBox_99; // 0x258(0x08)
	None UW-VoiceTalkSlot; // 0x260(0x08)
	None UW-VoiceTalkSlot_135; // 0x268(0x08)
	None UW-VoiceTalkSlot_196; // 0x270(0x08)
	None TempTeamPlayers; // 0x278(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Disappear; // 0x250(0x08)
	None Finish; // 0x258(0x08)
	None Spin; // 0x260(0x08)
	None Idle; // 0x268(0x08)
	None Image_180; // 0x270(0x08)
	None ItemImage_bg; // 0x278(0x08)
	None ItemImage_Dummy1; // 0x280(0x08)
	None ItemImage_Main; // 0x288(0x08)
	None TextBlock_1; // 0x290(0x08)
	None TextBlock_3; // 0x298(0x08)
	None TextMountablewea; // 0x2a0(0x08)
	None TextMountableweaLV1; // 0x2a8(0x08)
	None PerkInfo; // 0x2b0(0x28)
	None PerkData; // 0x2d8(0xe0)
	None bLevelUp; // 0x3b8(0x01)
	None bFinishing; // 0x3b9(0x01)
	None FinishTime; // 0x3bc(0x04)
	None PerkSlot; // 0x3c0(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Image; // 0x250(0x08)
	None Image_2; // 0x258(0x08)
	None Image_4; // 0x260(0x08)
	None Image_5; // 0x268(0x08)
	None Image_6; // 0x270(0x08)
	None Image_473; // 0x278(0x08)
	None TextBlock_1; // 0x280(0x08)
	None Title; // 0x288(0x18)
	None UberGraphFrame; // 0x248(0x08)
	None Idle; // 0x250(0x08)
	None Scope_In; // 0x258(0x08)
	None CanvasPanel_1; // 0x260(0x08)
	None Distance_Image; // 0x268(0x08)
	None Distance_Text; // 0x270(0x08)
	None Magnify_Image; // 0x278(0x08)
	None Magnify_Text; // 0x280(0x08)
	None Scope_BG; // 0x288(0x08)
	None Scope_Info_Line; // 0x290(0x08)
	None Scope_Wing; // 0x298(0x08)
	None UberGraphFrame; // 0x4e8(0x08)
	None Over; // 0x4f0(0x08)
	None Button_107; // 0x4f8(0x08)
	None Button_441; // 0x500(0x08)
	None Button_Type; // 0x508(0x08)
	None ButtonType; // 0x510(0x08)
	None ComboBoxString_237; // 0x518(0x08)
	None ComboBoxType; // 0x520(0x08)
	None Down; // 0x528(0x08)
	None EditableText_80; // 0x530(0x08)
	None HorizontalBox_191; // 0x538(0x08)
	None Image_153; // 0x540(0x08)
	None Image_204; // 0x548(0x08)
	None Image_414; // 0x550(0x08)
	None Key; // 0x558(0x08)
	None KeyImageMain; // 0x560(0x08)
	None KeyImageSub; // 0x568(0x08)
	None KeyLock; // 0x570(0x08)
	None LeftA; // 0x578(0x08)
	None LeftA_2; // 0x580(0x08)
	None LockMain; // 0x588(0x08)
	None LockSub; // 0x590(0x08)
	None MainBG; // 0x598(0x08)
	None MainKeyInput; // 0x5a0(0x08)
	None Overlay_215; // 0x5a8(0x08)
	None ProgressBar_150; // 0x5b0(0x08)
	None RightA; // 0x5b8(0x08)
	None RightA_2; // 0x5c0(0x08)
	None SelectBtn1; // 0x5c8(0x08)
	None SelectBtn2; // 0x5d0(0x08)
	None SelectBtn3; // 0x5d8(0x08)
	None SelectBtn4; // 0x5e0(0x08)
	None SelectBtn5; // 0x5e8(0x08)
	None SelectBtn6; // 0x5f0(0x08)
	None SelectType; // 0x5f8(0x08)
	None SelectValue; // 0x600(0x08)
	None Slider_139; // 0x608(0x08)
	None SliderType; // 0x610(0x08)
	None SubBG; // 0x618(0x08)
	None SubKeyInput; // 0x620(0x08)
	None T_Button; // 0x628(0x08)
	None Title_Text; // 0x630(0x08)
	None Up; // 0x638(0x08)
	None Value; // 0x640(0x08)
	None Value_2; // 0x648(0x08)
	None WidgetSwitcher_1; // 0x650(0x08)
	None WidgetSwitcher_281; // 0x658(0x08)
	None Lock; // 0x660(0x01)
	None Selected SeleteValue; // 0x664(0x04)
	None TotalListSize; // 0x668(0x04)
	None Empty; // 0x670(0x10)
	None ButtonStyle; // 0x680(0x278)
	None NewVar_1; // 0x8f8(0x70)
	None SliderIsInit; // 0x968(0x01)
	None EmptyText; // 0x970(0x18)
	None TempSaveComboBoxIndex; // 0x988(0x04)
	None Temp; // 0x990(0x20)
	None TempValue; // 0x9b0(0x04)
	None PreSliderText; // 0x9b8(0x18)
	None LResultString; // 0x9d0(0x10)
	None have.; // 0x9e0(0x01)
	None IsOnEditableText; // 0x9e1(0x01)
	None CompletSettingData; // 0x9e2(0x01)
	None CompleteSettingInfo; // 0x9e8(0x88)
	None TempSetting; // 0xa70(0x88)
	None ReMarkComboBox; // 0xaf8(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Button_43; // 0x250(0x08)
	None Image_43; // 0x258(0x08)
	None SelectEventDispatcher; // 0x260(0x10)
	None Index; // 0x270(0x04)
	None UberGraphFrame; // 0x248(0x08)
	None Button_68; // 0x250(0x08)
	None Normal; // 0x258(0x08)
	None Over; // 0x260(0x08)
	None Overlay_113; // 0x268(0x08)
	None Press; // 0x270(0x08)
	None CilckBtn; // 0x278(0x10)
	None IsLeft; // 0x288(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None TextComboBoxItem; // 0x250(0x08)
	None WB_ClassicComboBoxButton; // 0x258(0x08)
	None ItemOption; // 0x260(0x10)
	None Resolution; // 0x270(0x08)
	None UberGraphFrame; // 0x298(0x08)
	None ButtonGod; // 0x2a0(0x08)
	None DevWidget; // 0x2a8(0x08)
	None ScrollBox_55; // 0x2b0(0x08)
	None UberGraphFrame; // 0x298(0x08)
	None AmmoEffect; // 0x2a0(0x08)
	None AR; // 0x2a8(0x08)
	None AutoLadder; // 0x2b0(0x08)
	None autoReload; // 0x2b8(0x08)
	None AutoUseMedicalLv1; // 0x2c0(0x08)
	None AutoUseMedicalLv2; // 0x2c8(0x08)
	None AutoUseMedicalLv3; // 0x2d0(0x08)
	None BlueBoostEffect; // 0x2d8(0x08)
	None CrossHair; // 0x2e0(0x08)
	None CustsomUseItem; // 0x2e8(0x08)
	None DMR; // 0x2f0(0x08)
	None GreenBoostEffect; // 0x2f8(0x08)
	None ImmediateAttachment; // 0x300(0x08)
	None InheritAttachment; // 0x308(0x08)
	None MedicalLv1Effect; // 0x310(0x08)
	None MedicalLv2Effect; // 0x318(0x08)
	None MedicalLv3Effect; // 0x320(0x08)
	None NetworkDebug; // 0x328(0x08)
	None Pistol; // 0x330(0x08)
	None RedBoostEffect; // 0x338(0x08)
	None ScrollBox_55; // 0x340(0x08)
	None SearchExpertWeaponMaterialItem; // 0x348(0x08)
	None SearchMaterialItem; // 0x350(0x08)
	None ShowAircraftUI; // 0x358(0x08)
	None ShowGuideWidget; // 0x360(0x08)
	None ShowPerkSlot; // 0x368(0x08)
	None ShowSmartPing; // 0x370(0x08)
	None ShowSmartPingLightPole; // 0x378(0x08)
	None ShowSmartPingSupplyBox; // 0x380(0x08)
	None ShowUseaableItemEffect; // 0x388(0x08)
	None SMG; // 0x390(0x08)
	None SR; // 0x398(0x08)
	None Tutorial; // 0x3a0(0x08)
	None Tutorial_RePlay; // 0x3a8(0x08)
	None UseItem1; // 0x3b0(0x08)
	None UseItem2; // 0x3b8(0x08)
	None UseItem3; // 0x3c0(0x08)
	None UseItem4; // 0x3c8(0x08)
	None UseItem5; // 0x3d0(0x08)
	None UseItem6; // 0x3d8(0x08)
	None UseItem7; // 0x3e0(0x08)
	None UseItem8; // 0x3e8(0x08)
	None VerticalBox_154; // 0x3f0(0x08)
	None ; // 0x3f8(0x08)
	None ; // 0x400(0x08)
	None ; // 0x408(0x08)
	None ScrollBarTimer; // 0x410(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None 1-1; // 0x250(0x08)
	None CurDesc; // 0x258(0x08)
	None UberGraphFrame; // 0x298(0x08)
	None 15XSensitivity; // 0x2a0(0x08)
	None 2XSensitivity; // 0x2a8(0x08)
	None 4XSensitivity; // 0x2b0(0x08)
	None 6XSensitivity; // 0x2b8(0x08)
	None 8XSensitivity; // 0x2c0(0x08)
	None ADSSensitivity; // 0x2c8(0x08)
	None GeneralSensitivity; // 0x2d0(0x08)
	None ReverseLeftAndRight; // 0x2d8(0x08)
	None ReverseUpAndDown; // 0x2e0(0x08)
	None ScrollBox_55; // 0x2e8(0x08)
	None TargetingSensitivity; // 0x2f0(0x08)
	None ToggleADS; // 0x2f8(0x08)
	None ToggleAOS; // 0x300(0x08)
	None ToggleCrouch; // 0x308(0x08)
	None ToggleExLean; // 0x310(0x08)
	None ToggleFreeLook; // 0x318(0x08)
	None ToggleSprint; // 0x320(0x08)
	None ToggleSteadyAim; // 0x328(0x08)
	None ToggleWalk; // 0x330(0x08)
	None TotalSensitivity; // 0x338(0x08)
	None UsingDetailSensitivity; // 0x340(0x08)
	None VehicleDriverSensitivity; // 0x348(0x08)
	None VerticalBox_1; // 0x350(0x08)
	None VerticlaModifier; // 0x358(0x08)
	None ; // 0x360(0x08)
	None ; // 0x368(0x08)
	None ; // 0x370(0x08)
	None ScrollBarTimer; // 0x378(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_Show; // 0x250(0x08)
	None Border; // 0x258(0x08)
	None Border_51; // 0x260(0x08)
	None btn_All_OK; // 0x268(0x08)
	None btn_Close; // 0x270(0x08)
	None HorizontalBox_CloseButton; // 0x278(0x08)
	None Image_2; // 0x280(0x08)
	None UW-Lobby_Craft_Success_Perk_Close; // 0x288(0x08)
	None UW-Lobby_Craft_Success_Perk_Close_2; // 0x290(0x08)
	None UW-Lobby_Craft_Success_Perk_Close_3; // 0x298(0x08)
	None UW-Lobby_WeaponInfo; // 0x2a0(0x08)
	None UW-Lobby_WeaponInfo_OptionList; // 0x2a8(0x08)
	None WidgetSwitcher_90; // 0x2b0(0x08)
	None OpenedOptionList; // 0x2b8(0x10)
	None UberGraphFrame; // 0x3d8(0x08)
	None 1-1; // 0x3e0(0x08)
	None 2-1; // 0x3e8(0x08)
	None 2-2; // 0x3f0(0x08)
	None ApplyButton; // 0x3f8(0x08)
	None Audio; // 0x400(0x08)
	None CanvasPanel_61; // 0x408(0x08)
	None CanvasPanel_279; // 0x410(0x08)
	None ChangeLock; // 0x418(0x08)
	None Control; // 0x420(0x08)
	None CrossHair; // 0x428(0x08)
	None CrossHairDetailInfo; // 0x430(0x08)
	None CrossHairDetailInfo_2; // 0x438(0x08)
	None CrossHairDetailInfo_3; // 0x440(0x08)
	None CrossHairDetailInfo_4; // 0x448(0x08)
	None CurDesc; // 0x450(0x08)
	None CurDesc2; // 0x458(0x08)
	None CurTitle; // 0x460(0x08)
	None DefaultButton; // 0x468(0x08)
	None Dev; // 0x470(0x08)
	None GamePlay; // 0x478(0x08)
	None GoBackButton; // 0x480(0x08)
	None Graphic; // 0x488(0x08)
	None Image; // 0x490(0x08)
	None Image_2; // 0x498(0x08)
	None Image_3; // 0x4a0(0x08)
	None Image_4; // 0x4a8(0x08)
	None Image_109; // 0x4b0(0x08)
	None Image_128; // 0x4b8(0x08)
	None Image_129; // 0x4c0(0x08)
	None Image_154; // 0x4c8(0x08)
	None Image_323; // 0x4d0(0x08)
	None Image_417; // 0x4d8(0x08)
	None Image_951; // 0x4e0(0x08)
	None Image_953; // 0x4e8(0x08)
	None Key; // 0x4f0(0x08)
	None KeyImageMain; // 0x4f8(0x08)
	None ProgressBar_317; // 0x500(0x08)
	None Slider_299; // 0x508(0x08)
	None TextBlock; // 0x510(0x08)
	None TextBlock_1; // 0x518(0x08)
	None TextBlock_2; // 0x520(0x08)
	None TextBlock_3; // 0x528(0x08)
	None TextBlock_5; // 0x530(0x08)
	None TextBlock_7; // 0x538(0x08)
	None VerticalBox_149; // 0x540(0x08)
	None WidgetSwitcher_113; // 0x548(0x08)
	None EnableButtonEventDispatcher; // 0x550(0x10)
	None Game Settings; // 0x560(0x08)
	None SlotList_1; // 0x568(0x50)
	None GraphicWidget; // 0x5b8(0x08)
	None AudioWidget; // 0x5c0(0x08)
	None ControlWidget; // 0x5c8(0x08)
	None KeyWidget; // 0x5d0(0x08)
	None GamePlayWidget; // 0x5d8(0x08)
	None SettingDevWidget; // 0x5e0(0x08)
	None GraphicSwitcherIndex; // 0x5e8(0x04)
	None AudioSwitcherIndex; // 0x5ec(0x04)
	None ControlSwitcherIndex; // 0x5f0(0x04)
	None KeySwitcherIndex; // 0x5f4(0x04)
	None SettingDevSwitcherIndex; // 0x5f8(0x04)
	None GamePlaySwitcherIndex; // 0x5fc(0x04)
	None KeyNotiTimer; // 0x600(0x08)
	None KeyNotiMessageShowTime; // 0x608(0x04)
	None TempImg; // 0x610(0x28)
	None SavedDescData; // 0x638(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None UW-Title_Login; // 0x250(0x08)
	None OnTriedToLogin; // 0x258(0x10)
	None OnTriedToTestLogin; // 0x268(0x10)
	None bEnableDevServer; // 0x278(0x01)
	None OnMoveLobby; // 0x280(0x10)
	None OnPlayBGM; // 0x290(0x10)
	None OnSaveUserData; // 0x2a0(0x10)
	None bPlayBGM; // 0x2b0(0x01)
	None bRememberMe; // 0x2b1(0x01)
	None OnSkipTitle; // 0x2b8(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Infos_ani; // 0x250(0x08)
	None SimpleResult_Events; // 0x258(0x08)
	None Lose_ani; // 0x260(0x08)
	None Win_ani; // 0x268(0x08)
	None Lose_Events; // 0x270(0x08)
	None Win_Events; // 0x278(0x08)
	None ClassName; // 0x280(0x08)
	None ClassWeaponName; // 0x288(0x08)
	None HeadShot; // 0x290(0x08)
	None HorizontalBox_KillerWeaponInfo; // 0x298(0x08)
	None HorizontalBox_Rarity; // 0x2a0(0x08)
	None Icon_KillerClass; // 0x2a8(0x08)
	None Image_894; // 0x2b0(0x08)
	None Image_2002; // 0x2b8(0x08)
	None Level; // 0x2c0(0x08)
	None LoseMessage; // 0x2c8(0x08)
	None Overlay_DropItems; // 0x2d0(0x08)
	None Overlay_KillerInfo; // 0x2d8(0x08)
	None Overlay_WeaponLevel; // 0x2e0(0x08)
	None T_DamageType; // 0x2e8(0x08)
	None T_WeaponLevel; // 0x2f0(0x08)
	None TextBlock_ItemCount; // 0x2f8(0x08)
	None Uniform_ItemList; // 0x300(0x08)
	None UserName; // 0x308(0x08)
	None UW-MatchEnd_RewardSlot_C_1; // 0x310(0x08)
	None UW-SkipButton; // 0x318(0x08)
	None WeaponName; // 0x320(0x08)
	None WidgetSwitcher_DamageCauser; // 0x328(0x08)
	None AnimationData; // 0x330(0x02)
	None MatchEndWidgetRef; // 0x338(0x08)
	None SimpleResult; // 0x340(0xa8)
	None MatchEnd; // 0x3e8(0x01)
	None UberGraphFrame; // 0x310(0x08)
	None WorldViewCamera; // 0x318(0x08)
	None DefaultSceneRoot; // 0x320(0x08)
	None DeltaTime; // 0x328(0x04)
	None bIsBackgroundScene; // 0x32c(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Bg; // 0x250(0x08)
	None btn_Cancel; // 0x258(0x08)
	None btn_OK; // 0x260(0x08)
	None Image_2; // 0x268(0x08)
	None UberGraphFrame; // 0x250(0x08)
	None Btn-Exit; // 0x258(0x08)
	None BTN-Resume; // 0x260(0x08)
	None BTN-ReturnToTitle; // 0x268(0x08)
	None BTN-Settings; // 0x270(0x08)
	None Button_1; // 0x278(0x08)
	None Button_2; // 0x280(0x08)
	None Button_4; // 0x288(0x08)
	None Image_2; // 0x290(0x08)
	None IMG-BG; // 0x298(0x08)
	None Overlay_Exit; // 0x2a0(0x08)
	None TextBlock_2; // 0x2a8(0x08)
	None UW-VoiceTalk; // 0x2b0(0x08)
	None VerticalBox_InGame; // 0x2b8(0x08)
	None VerticalBox_Lobby; // 0x2c0(0x08)
	None MapNameToExit; // 0x2c8(0x08)
	None IsLobby; // 0x2d0(0x01)
	None UberGraphFrame; // 0xf0(0x08)
	None PlayerController; // 0xf8(0x08)
	None bAlreadySetOptionWidget; // 0x100(0x01)
	None defaultContrast; // 0x104(0x04)
	None defaultMaxBrightness; // 0x108(0x04)
	None defaultMinBrightness; // 0x10c(0x04)
	None MinBrightness; // 0x110(0x04)
	None MaxBrightness; // 0x114(0x04)
	None Contrast; // 0x118(0x04)
	None bUsePostProcessVolumeOption; // 0x11c(0x01)
	None ColorGradingGlobalGamma; // 0x120(0x04)
	None FilmToeIntensity; // 0x124(0x04)
	None IsInWidget; // 0x128(0x01)
	None bInputModeUI; // 0x129(0x01)
	None InputActionsToBlock; // 0x130(0x10)
	None Anim_OnShow; // 0x248(0x08)
	None Line; // 0x250(0x08)
	None OnMarkerClicked; // 0x258(0x10)
	None IsLastPoint; // 0x268(0x01)
	None UberGraphFrame; // 0x248(0x08)
	None Canvas; // 0x250(0x08)
	None OnMarkerClicked; // 0x258(0x10)
	None PlayerState; // 0x268(0x08)
	None PointsArray; // 0x270(0x10)
	None StartPosition; // 0x280(0x08)
	None PointWidgets; // 0x288(0x10)
	None LineWidgets; // 0x298(0x10)
	None UW-MapCompRef; // 0x2a8(0x08)
	None IsDrawing; // 0x2b0(0x01)
	None GuideLineWidgetRef; // 0x2b8(0x08)
	None GuideLinePos; // 0x2c0(0x08)
	None IsUpdate; // 0x2c8(0x01)
	None UberGraphFrame; // 0x140(0x08)
	None bHasJustClosed_1; // 0x148(0x01)
	None defaultContrast_1; // 0x14c(0x04)
	None defaultMaxBrightness_1; // 0x150(0x04)
	None defaultMinBrightness_1; // 0x154(0x04)
	None MinBrightness_1; // 0x158(0x04)
	None MaxBrightness_1; // 0x15c(0x04)
	None Contrast_1; // 0x160(0x04)
	None bUsePostProcessVolumeOption_1; // 0x164(0x01)
	None ColorGradingGlobalGamma_1; // 0x168(0x04)
	None FilmToeIntensity_1; // 0x16c(0x04)
	None IsInWidget_1; // 0x170(0x01)
	None bInputModeUI_1; // 0x171(0x01)
	None InputActionsToBlock_1; // 0x178(0x10)
	None UberGraphFrame; // 0xb8(0x08)
	None TextureScale; // 0xc0(0x04)
	None CollisionArea; // 0xc4(0x04)
	None LieDistance; // 0xc8(0x04)
	None DrawDistance; // 0xcc(0x04)
	None Brush; // 0xd0(0x08)
	None Brush Intensity; // 0xd8(0x04)
	None Eraser; // 0xe0(0x08)
	None Erase Intensity; // 0xe8(0x04)
	None IsTickStart; // 0xec(0x01)
	None TargetCharacter; // 0xf0(0x08)
	None UberGraphFrame; // 0x310(0x08)
	None Widget; // 0x318(0x08)
	None DefaultSceneRoot; // 0x320(0x08)
	None TargetCharacter; // 0x328(0x08)
	None LoudnessCurve; // 0x330(0x08)
	None AmplifierLength; // 0x338(0x04)
	None TagetGroundState; // 0x33c(0x01)
	None IsFiring; // 0x33d(0x01)
	None CurrentWeapon; // 0x340(0x08)
	None SingleTimerEvent; // 0x348(0x08)
	None IsSingleFiring; // 0x350(0x01)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_Slot_2; // 0x490(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x4d8(0x18)
	None AnimGraphNode_LocalRefPose; // 0x4f0(0x18)
	None AnimGraphNode_Slot; // 0x508(0x48)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None UberGraphFrame; // 0x398(0x08)
	None TextureScale; // 0x3a0(0x04)
	None BurnArea; // 0x3a4(0x04)
	None UberGraphFrame; // 0x4c8(0x08)
	None FadeOutNotice; // 0x4d0(0x08)
	None Bg; // 0x4d8(0x08)
	None Bg_2; // 0x4e0(0x08)
	None CanvasPanel_GameNotice; // 0x4e8(0x08)
	None CanvasPanel_PrefetchingProgress; // 0x4f0(0x08)
	None Image; // 0x4f8(0x08)
	None Image_145; // 0x500(0x08)
	None ProgressText; // 0x508(0x08)
	None UW-Lobby_Main_Web; // 0x510(0x08)
	None WeaponList_1; // 0x518(0x10)
	None CharacterInfoWidgetList; // 0x528(0x10)
	None PartySize; // 0x538(0x04)
	None EquipmentTransition; // 0x540(0x08)
	None BindParticle; // 0x548(0x01)
	None EffectPool; // 0x550(0x10)
	None EventDispatcher_MoveToCrafting; // 0x560(0x10)
	None CurrentTab; // 0x570(0x10)
	None UberGraphFrame; // 0x128(0x08)
	None RequestOnServer; // 0x130(0x10)
	None SelectionMode; // 0x140(0x01)
	None TimeoutBetweenPings; // 0x144(0x04)
	None PingTimeouts; // 0x148(0x10)
	None ExecutingMenuIconIDs; // 0x158(0x10)
	None ExecutingMenuIconSettings; // 0x168(0x10)
	None OwningPawn; // 0x178(0x08)
	None SelectionMenu; // 0x180(0x08)
	None ExecuteOwningClient; // 0x188(0x10)
	None TraceMethod; // 0x198(0x01)
	None TraceLength; // 0x19c(0x04)
	None TraceRadius; // 0x1a0(0x04)
	None TraceChannel; // 0x1a4(0x01)
	None TraceComplex; // 0x1a5(0x01)
	None MenuActivated; // 0x1a8(0x10)
	None MenuDeactivated; // 0x1b8(0x10)
	None PingReceivedOnServer; // 0x1c8(0x10)
	None ExecutingPingInfo2; // 0x1d8(0x38)
	None NoneHitActor; // 0x210(0x01)
	None IgnorInput; // 0x211(0x01)
	None TempItemPingTableIndex; // 0x214(0x08)
	None Enable Show; // 0x21c(0x01)
	None NewVar_1; // 0x220(0x08)
	None MainWidget; // 0x228(0x08)
	None EnableEndPingType; // 0x230(0x01)
	None IsSelectionMenuOnMap; // 0x231(0x01)
	None TmpLocationByMap; // 0x234(0x0c)
	None TmpMousePosition; // 0x240(0x08)
	None IsVisibleSelectionMenu; // 0x248(0x01)
	None IsPressedCtrl; // 0x249(0x01)
	None FindPickUpItem; // 0x24a(0x01)
	None UberGraphFrame; // 0x250(0x08)
	None Tutorial_MouseCursor; // 0x258(0x08)
	None Tutorial_Arrow_Loop2; // 0x260(0x08)
	None RadarDecoLight; // 0x268(0x08)
	None RadarCircle_M; // 0x270(0x08)
	None BackgroundBlur_154; // 0x278(0x08)
	None BP-MapComp; // 0x280(0x08)
	None Button_Nuclear; // 0x288(0x08)
	None CP_RealMapSize; // 0x290(0x08)
	None Image; // 0x298(0x08)
	None Image_2; // 0x2a0(0x08)
	None Image_3; // 0x2a8(0x08)
	None Image_4; // 0x2b0(0x08)
	None Image_5; // 0x2b8(0x08)
	None Image_6; // 0x2c0(0x08)
	None Image_7; // 0x2c8(0x08)
	None Image_171; // 0x2d0(0x08)
	None Image_181; // 0x2d8(0x08)
	None Image_228; // 0x2e0(0x08)
	None Image_326; // 0x2e8(0x08)
	None Image_405; // 0x2f0(0x08)
	None Image_508; // 0x2f8(0x08)
	None Img_MapBackGround; // 0x300(0x08)
	None Img_MapCenter; // 0x308(0x08)
	None Img_RadarDummy; // 0x310(0x08)
	None Tutorial; // 0x318(0x08)
	None UW-Radar_tutorial; // 0x320(0x08)
	None MapBackGroundPosition; // 0x328(0x08)
	None RadarDummyPosition; // 0x330(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Anim_OnFire; // 0x250(0x08)
	None FireLine; // 0x258(0x08)
	None UberGraphFrame; // 0x500(0x08)
	None Aircraft; // 0x508(0x08)
	None Background; // 0x510(0x08)
	None Canvas; // 0x518(0x08)
	None InvalidationBox_1; // 0x520(0x08)
	None TestDescentEndPoint_2; // 0x528(0x08)
	None TestDescentStartPoint_2; // 0x530(0x08)
	None TestLineRouteDotline_2; // 0x538(0x08)
	None MapDisplayInfoFlag; // 0x540(0x04)
	None OnWheelOnMap; // 0x548(0x10)
	None OnMouseButtonUpOnMap; // 0x558(0x10)
	None OnObjectClickOnMap; // 0x568(0x10)
	None OnDragginOnMap; // 0x578(0x10)
	None IsDragging; // 0x588(0x01)
	None DeltaValue; // 0x58c(0x04)
	None GridString_XAxis; // 0x590(0x10)
	None GridString_YAxis; // 0x5a0(0x10)
	None PersonalSupplyBoxRef; // 0x5b0(0x08)
	None ReplayFreeCamWidget; // 0x5b8(0x08)
	None MapScaleInterpSpeed; // 0x5c0(0x04)
	None MouseRightBtnDown; // 0x5c4(0x01)
	None SelectPingMenuTimer; // 0x5c8(0x08)
	None SelectionMenu; // 0x5d0(0x08)
	None OnMouseButtonDownOnMap; // 0x5d8(0x10)
	None MouseButtonDownPos; // 0x5e8(0x08)
	None IsUpdateMapScale; // 0x5f0(0x01)
	None MapScaleInerpSpeedRatio; // 0x5f4(0x04)
	None IsDrawingRoutePing; // 0x5f8(0x01)
	None IgnoreAreaCircleLines; // 0x600(0x10)
	None UberGraphFrame; // 0x2b8(0x08)
	None FadeIn; // 0x2c0(0x08)
	None NewAnimation_2; // 0x2c8(0x08)
	None Bg; // 0x2d0(0x08)
	None BP-CheckWeightMap; // 0x2d8(0x08)
	None BP-MapComp; // 0x2e0(0x08)
	None CloseButton; // 0x2e8(0x08)
	None ShowHelBoxButton; // 0x2f0(0x08)
	None UW-ClassinfoitemBoardWidget; // 0x2f8(0x08)
	None WidgetSwitcher_1; // 0x300(0x08)
	None MAX_ZOOM_LEVEL; // 0x308(0x04)
	None ZoomLevel; // 0x30c(0x04)
	None MAX_SCALE_FACTOR; // 0x310(0x04)
	None InitializeCount; // 0x314(0x04)
	None PosOnViewport; // 0x318(0x08)
	None CurrentScaleFactor; // 0x320(0x04)
	None MouseButtonDownPos; // 0x324(0x08)
	None SelectPingMenuTimer; // 0x330(0x08)
	None SelectionMenu; // 0x338(0x08)
	None IsRoutePing; // 0x340(0x01)
	None MaxRoutePointCount; // 0x344(0x04)
	None RoutePointArray; // 0x348(0x10)
	None UberGraphFrame; // 0xb0(0x08)
	None BeamsArray; // 0xb8(0x10)
	None Decal; // 0xc8(0x08)
	None StartLocation; // 0xd0(0x0c)
	None InitialVelocity; // 0xdc(0x0c)
	None PathLifeTime; // 0xe8(0x04)
	None TimeInterval; // 0xec(0x04)
	None DrawingType; // 0xf0(0x01)
	None DesiredStartLocation; // 0xf4(0x0c)
	None InitialLocalVelocity; // 0x100(0x0c)
	None BeamParticle; // 0x110(0x08)
	None DebugColor; // 0x118(0x10)
	None DebugThickness; // 0x128(0x04)
	None ParticleColor; // 0x12c(0x10)
	None ParticleColorMultipler; // 0x13c(0x04)
	None DecalMaterial; // 0x140(0x08)
	None DecalColor; // 0x148(0x10)
	None DecalScale; // 0x158(0x0c)
	None ConstantScale?; // 0x164(0x01)
	None ResizerTimer; // 0x168(0x08)
	None DecalScaleMin; // 0x170(0x0c)
	None DecalScaleMax; // 0x17c(0x0c)
	None ScaleTime; // 0x188(0x04)
	None ScaleStart?; // 0x18c(0x01)
	None Gravity; // 0x190(0x0c)
	None InitXAxisValue; // 0x19c(0x04)
	None CreateBeam; // 0x1a0(0x01)
	None HitBeamIndex; // 0x1a4(0x04)
	None SplineStaticMesh; // 0x1a8(0x08)
	None SplineMeshArray; // 0x1b0(0x10)
	None SM-IndicatorScale; // 0x1c0(0x0c)
	None SM-Indicator; // 0x1d0(0x08)
	None Hit; // 0x1d8(0x01)
	None bForceStop; // 0x1d9(0x01)
	None FPSMode; // 0x1da(0x01)
	None UberGraphFrame; // 0x2c0(0x08)
	None Lung_Red; // 0x2c8(0x08)
	None Weaving_Stand; // 0x2d0(0x08)
	None Weaving_Sit; // 0x2d8(0x08)
	None HorizontalBox_Backpack_Star; // 0x2e0(0x08)
	None HorizontalBox_Chest_Star; // 0x2e8(0x08)
	None HorizontalBox_Damage; // 0x2f0(0x08)
	None HorizontalBox_Helmet_Star; // 0x2f8(0x08)
	None HorizontalBox_Levels; // 0x300(0x08)
	None Image_BackPack_Star; // 0x308(0x08)
	None Image_C4; // 0x310(0x08)
	None Image_Chest_Star; // 0x318(0x08)
	None Image_DamageBg; // 0x320(0x08)
	None Image_FireMode; // 0x328(0x08)
	None Image_Helmet_Star; // 0x330(0x08)
	None Image_Time; // 0x338(0x08)
	None Image_Timer; // 0x340(0x08)
	None Image_Weapon; // 0x348(0x08)
	None Overlay_Tab; // 0x350(0x08)
	None ProgressBar_Backpack; // 0x358(0x08)
	None ProgressBar_Chest; // 0x360(0x08)
	None ProgressBar_Helmet; // 0x368(0x08)
	None SizeBox_Backpack; // 0x370(0x08)
	None SizeBox_Chest; // 0x378(0x08)
	None SizeBox_Helmet; // 0x380(0x08)
	None T_C4Time; // 0x388(0x08)
	None T_Damage; // 0x390(0x08)
	None T_PerkWeaponAmmo; // 0x398(0x08)
	None T_SlotIndex; // 0x3a0(0x08)
	None T_WeaponName; // 0x3a8(0x08)
	None TextBlock_bulletCount; // 0x3b0(0x08)
	None TextBlock_bulletMaxCount; // 0x3b8(0x08)
	None UW-GameBuffSlot; // 0x3c0(0x08)
	None UW-GameBuffSlot_2; // 0x3c8(0x08)
	None UW-GameBuffSlot_3; // 0x3d0(0x08)
	None UW-GameBuffSlot_4; // 0x3d8(0x08)
	None UW-GameBuffSlot_5; // 0x3e0(0x08)
	None UW-GameBuffSlot_6; // 0x3e8(0x08)
	None UW-GameBuffSlot_BoostCover; // 0x3f0(0x08)
	None UW-PlayerInfo_Progress_Renew; // 0x3f8(0x08)
	None WidgetSwitcher_Bullet; // 0x400(0x08)
	None WidgetSwitcher_C4; // 0x408(0x08)
	None WidgetSwitcher_Stance; // 0x410(0x08)
	None Anim_LastHeadbanging; // 0x418(0x08)
	None Timer_UpdateInfos; // 0x420(0x08)
	None bIsCoolTimeWeapon; // 0x428(0x01)
	None CurrentWeapon; // 0x430(0x08)
	None TargetPawnRef; // 0x438(0x08)
	None CoolTimeMaterial; // 0x440(0x08)
	None WeaponInfo; // 0x448(0xa8)
	None SlotIndex; // 0x4f0(0x04)
	None UberGraphFrame; // 0x310(0x08)
	None Arrow; // 0x318(0x08)
	None DefaultSceneRoot; // 0x320(0x08)
	None LightList; // 0x328(0x10)
	None Intensity; // 0x338(0x04)
	None Color; // 0x33c(0x10)
	None FocalAngleOuter; // 0x34c(0x04)
	None FocalAngleInner; // 0x350(0x04)
	None AttenuationDistance; // 0x354(0x04)
	None LightWidth; // 0x358(0x04)
	None LightLength; // 0x35c(0x04)
	None CastShadows; // 0x360(0x01)
	None LightSamplesSquared; // 0x364(0x04)
	None SourceRadiusMult; // 0x368(0x04)
	None CenterOfInterestLength; // 0x36c(0x04)
	None Enabled; // 0x370(0x01)
	None Channels; // 0x371(0x01)
	None SoftRadius; // 0x374(0x04)
	None ShadowBias; // 0x378(0x04)
	None ShadowResolutionScale; // 0x37c(0x04)
	None LightSet01; // 0x380(0x10)
	None LightSet02; // 0x390(0x10)
	None LightSet03; // 0x3a0(0x10)
	None LightVisibility01; // 0x3b0(0x01)
	None LightVisibility02; // 0x3b1(0x01)
	None LightVisibility03; // 0x3b2(0x01)
	None LightVisibility04; // 0x3b3(0x01)
	None LightVisibility05; // 0x3b4(0x01)
	None LightVisibility06; // 0x3b5(0x01)
	None LightVisibility07; // 0x3b6(0x01)
	None LightVisibility08; // 0x3b7(0x01)
	None LightVisibility09; // 0x3b8(0x01)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None UberGraphFrame; // 0x248(0x08)
	None FadeIn; // 0x250(0x08)
	None FadeOut; // 0x258(0x08)
	None Image_69; // 0x260(0x08)
	None UberGraphFrame; // 0x3a70(0x08)
	None Box; // 0x3a78(0x08)
	None PawnIndex; // 0x3a80(0x04)
	None BravoHotelPlayerStateClass; // 0x3a88(0x08)
	None bReady; // 0x3a90(0x01)
	None bMatchSuccess; // 0x3a91(0x01)
	None bIsFaceCustomizing; // 0x3a92(0x01)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None UberGraphFrame; // 0x420(0x08)
	None Sphere; // 0x428(0x08)
	None SpotLight1; // 0x3d8(0x08)
	None UberGraphFrame; // 0x2d0(0x08)
	None AnimGraphNode_Root; // 0x2d8(0x30)
	None AnimGraphNode_TransitionResult_5; // 0x308(0x28)
	None AnimGraphNode_TransitionResult_4; // 0x330(0x28)
	None AnimGraphNode_TransitionResult_3; // 0x358(0x28)
	None AnimGraphNode_TransitionResult_2; // 0x380(0x28)
	None AnimGraphNode_TransitionResult; // 0x3a8(0x28)
	None AnimGraphNode_SequencePlayer_3; // 0x3d0(0x78)
	None AnimGraphNode_StateResult_4; // 0x448(0x30)
	None AnimGraphNode_BlendSpacePlayer; // 0x478(0xe0)
	None AnimGraphNode_StateResult_3; // 0x558(0x30)
	None AnimGraphNode_SequencePlayer_2; // 0x588(0x78)
	None AnimGraphNode_StateResult_2; // 0x600(0x30)
	None AnimGraphNode_SequencePlayer; // 0x630(0x78)
	None AnimGraphNode_StateResult; // 0x6a8(0x30)
	None AnimGraphNode_StateMachine; // 0x6d8(0xb0)
	None AnimGraphNode_LocalToComponentSpace; // 0x788(0x20)
	None AnimGraphNode_ComponentToLocalSpace; // 0x7a8(0x20)
	None AnimGraphNode_ModifyBone_2; // 0x7c8(0x108)
	None AnimGraphNode_ModifyBone; // 0x8d0(0x108)
	None RightHandleLocation; // 0x9d8(0x0c)
	None LeftHandleLocation; // 0x9e4(0x0c)
	None UberGraphFrame; // 0x310(0x08)
	None Widget; // 0x318(0x08)
	None DefaultSceneRoot; // 0x320(0x08)
	None TargetCharacter; // 0x328(0x08)
	None LoudnessCurve; // 0x330(0x08)
	None HeartBeatSensorLength; // 0x338(0x04)
	None TagetGroundState; // 0x33c(0x01)
	None IsFiring; // 0x33d(0x01)
	None CurrentWeapon; // 0x340(0x08)
	None SingleTimerEvent; // 0x348(0x08)
	None IsSingleFiring; // 0x350(0x01)
	None UberGraphFrame; // 0x310(0x08)
	None PointLight3; // 0x318(0x08)
	None PointLight2; // 0x320(0x08)
	None SpotLight; // 0x328(0x08)
	None PointLight1; // 0x330(0x08)
	None BravoHotelSceneCaptureComponent2D; // 0x338(0x08)
	None PointLight; // 0x340(0x08)
	None SpotLight2; // 0x348(0x08)
	None Cube; // 0x350(0x08)
	None CustomizableSkeletal; // 0x358(0x08)
	None SkeletalMesh; // 0x360(0x08)
	None Camera; // 0x368(0x08)
	None Scene; // 0x370(0x08)
	None CharacterRef; // 0x378(0x08)
	None PreviewWeapons; // 0x380(0x10)
	None EnableTick; // 0x390(0x01)
	None TargetAccel; // 0x394(0x0c)
	None CurrentAccel; // 0x3a0(0x0c)
	None UberGraphFrame; // 0x310(0x08)
	None WorldViewCamera; // 0x318(0x08)
	None FarCamera; // 0x320(0x08)
	None NearCamera; // 0x328(0x08)
	None DefaultSceneRoot; // 0x330(0x08)
	None CharacterRef; // 0x338(0x08)
	None TargetNearCameraTransform; // 0x340(0x30)
	None DeltaTime; // 0x370(0x04)
	None TargetFarCameraTransform; // 0x380(0x30)
	None PlayerControllerRef; // 0x3b0(0x08)
	None bIsBackgroundScene; // 0x3b8(0x01)
	None WinTeamCharacters; // 0x3c0(0x10)
	None DuoLocation_Near; // 0x3d0(0x10)
	None CharacterOriginLocation; // 0x3e0(0x0c)
	None DuoRotation_Near; // 0x3f0(0x10)
	None DuoLocation_Far; // 0x400(0x10)
	None DuoRotation_Far; // 0x410(0x10)
	None TrioLocation_Near; // 0x420(0x10)
	None TrioRotation_Near; // 0x430(0x10)
	None TrioLocation_Far; // 0x440(0x10)
	None TrioRotation_Far; // 0x450(0x10)
	None SquadLocation_Near; // 0x460(0x10)
	None SquadRotation_Near; // 0x470(0x10)
	None SquadLocation_Far; // 0x480(0x10)
	None SquadRotation_Far; // 0x490(0x10)
	None CharacterOriginRotation; // 0x4a0(0x0c)
	None UberGraphFrame; // 0x310(0x08)
	None WorldViewCamera; // 0x318(0x08)
	None FarCamera; // 0x320(0x08)
	None NearCamera; // 0x328(0x08)
	None DefaultSceneRoot; // 0x330(0x08)
	None CharacterRef; // 0x338(0x08)
	None TargetNearCameraTransform; // 0x340(0x30)
	None DeltaTime; // 0x370(0x04)
	None TargetFarCameraTransform; // 0x380(0x30)
	None PlayerControllerRef; // 0x3b0(0x08)
	None bIsBackgroundScene; // 0x3b8(0x01)
	None WinTeamCharacters; // 0x3c0(0x10)
	None DuoLocation_Near; // 0x3d0(0x10)
	None CharacterOriginLocation; // 0x3e0(0x0c)
	None DuoRotation_Near; // 0x3f0(0x10)
	None DuoLocation_Far; // 0x400(0x10)
	None DuoRotation_Far; // 0x410(0x10)
	None TrioLocation_Near; // 0x420(0x10)
	None TrioRotation_Near; // 0x430(0x10)
	None TrioLocation_Far; // 0x440(0x10)
	None TrioRotation_Far; // 0x450(0x10)
	None SquadLocation_Near; // 0x460(0x10)
	None SquadRotation_Near; // 0x470(0x10)
	None SquadLocation_Far; // 0x480(0x10)
	None SquadRotation_Far; // 0x490(0x10)
	None CharacterOriginRotation; // 0x4a0(0x0c)
	None UberGraphFrame; // 0x700(0x08)
	None AnimGraphNode_Root; // 0x708(0x30)
	None AnimGraphNode_LocalToComponentSpace_11; // 0x738(0x20)
	None AnimGraphNode_TransitionResult_59; // 0x758(0x28)
	None AnimGraphNode_TransitionResult_58; // 0x780(0x28)
	None AnimGraphNode_TransitionResult_57; // 0x7a8(0x28)
	None AnimGraphNode_TransitionResult_56; // 0x7d0(0x28)
	None AnimGraphNode_TransitionResult_55; // 0x7f8(0x28)
	None AnimGraphNode_TransitionResult_54; // 0x820(0x28)
	None AnimGraphNode_TransitionResult_53; // 0x848(0x28)
	None AnimGraphNode_TransitionResult_52; // 0x870(0x28)
	None AnimGraphNode_TransitionResult_51; // 0x898(0x28)
	None AnimGraphNode_TransitionResult_50; // 0x8c0(0x28)
	None AnimGraphNode_TransitionResult_49; // 0x8e8(0x28)
	None AnimGraphNode_TransitionResult_48; // 0x910(0x28)
	None AnimGraphNode_TransitionResult_47; // 0x938(0x28)
	None AnimGraphNode_TransitionResult_46; // 0x960(0x28)
	None AnimGraphNode_TransitionResult_45; // 0x988(0x28)
	None AnimGraphNode_TransitionResult_44; // 0x9b0(0x28)
	None AnimGraphNode_TransitionResult_43; // 0x9d8(0x28)
	None AnimGraphNode_TransitionResult_42; // 0xa00(0x28)
	None AnimGraphNode_TransitionResult_41; // 0xa28(0x28)
	None AnimGraphNode_TransitionResult_40; // 0xa50(0x28)
	None AnimGraphNode_SequencePlayer_129; // 0xa78(0x78)
	None AnimGraphNode_StateResult_36; // 0xaf0(0x30)
	None AnimGraphNode_SequencePlayer_128; // 0xb20(0x78)
	None AnimGraphNode_StateResult_35; // 0xb98(0x30)
	None AnimGraphNode_SequencePlayer_127; // 0xbc8(0x78)
	None AnimGraphNode_StateResult_34; // 0xc40(0x30)
	None AnimGraphNode_StateMachine_9; // 0xc70(0xb0)
	None AnimGraphNode_StateResult_33; // 0xd20(0x30)
	None AnimGraphNode_TransitionResult_39; // 0xd50(0x28)
	None AnimGraphNode_TransitionResult_38; // 0xd78(0x28)
	None AnimGraphNode_BlendSpacePlayer_27; // 0xda0(0xe0)
	None AnimGraphNode_SequencePlayer_126; // 0xe80(0x78)
	None AnimGraphNode_ApplyAdditive_4; // 0xef8(0xc8)
	None AnimGraphNode_SequencePlayer_125; // 0xfc0(0x78)
	None AnimGraphNode_BlendListByEnum_26; // 0x1038(0xb0)
	None AnimGraphNode_BlendSpacePlayer_26; // 0x10e8(0xe0)
	None AnimGraphNode_BlendSpacePlayer_25; // 0x11c8(0xe0)
	None AnimGraphNode_BlendListByEnum_25; // 0x12a8(0xb0)
	None AnimGraphNode_BlendSpacePlayer_24; // 0x1358(0xe0)
	None AnimGraphNode_StateResult_32; // 0x1438(0x30)
	None AnimGraphNode_BlendSpacePlayer_23; // 0x1468(0xe0)
	None AnimGraphNode_BlendListByBool_24; // 0x1548(0xa0)
	None AnimGraphNode_RotationOffsetBlendSpace; // 0x15e8(0x188)
	None AnimGraphNode_ModifyBone_15; // 0x1770(0x108)
	None AnimGraphNode_ModifyBone_14; // 0x1878(0x108)
	None AnimGraphNode_TwoBoneIK_9; // 0x1980(0x1e0)
	None AnimGraphNode_TwoBoneIK_8; // 0x1b60(0x1e0)
	None AnimGraphNode_SequencePlayer_124; // 0x1d40(0x78)
	None AnimGraphNode_LayeredBoneBlend_7; // 0x1db8(0xc0)
	None AnimGraphNode_TransitionResult_37; // 0x1e78(0x28)
	None AnimGraphNode_TransitionResult_36; // 0x1ea0(0x28)
	None AnimGraphNode_TransitionResult_35; // 0x1ec8(0x28)
	None AnimGraphNode_TransitionResult_34; // 0x1ef0(0x28)
	None AnimGraphNode_TransitionResult_33; // 0x1f18(0x28)
	None AnimGraphNode_TransitionResult_32; // 0x1f40(0x28)
	None AnimGraphNode_SequencePlayer_123; // 0x1f68(0x78)
	None AnimGraphNode_StateResult_31; // 0x1fe0(0x30)
	None AnimGraphNode_SequencePlayer_122; // 0x2010(0x78)
	None AnimGraphNode_StateResult_30; // 0x2088(0x30)
	None AnimGraphNode_SequencePlayer_121; // 0x20b8(0x78)
	None AnimGraphNode_StateResult_29; // 0x2130(0x30)
	None AnimGraphNode_StateMachine_8; // 0x2160(0xb0)
	None AnimGraphNode_ComponentToLocalSpace_11; // 0x2210(0x20)
	None AnimGraphNode_LocalToComponentSpace_10; // 0x2230(0x20)
	None AnimGraphNode_Fabrik_2; // 0x2250(0x190)
	None AnimGraphNode_Fabrik; // 0x23e0(0x190)
	None AnimGraphNode_StateResult_28; // 0x2570(0x30)
	None AnimGraphNode_StateMachine_7; // 0x25a0(0xb0)
	None AnimGraphNode_StateResult_27; // 0x2650(0x30)
	None AnimGraphNode_TransitionResult_31; // 0x2680(0x28)
	None AnimGraphNode_TransitionResult_30; // 0x26a8(0x28)
	None AnimGraphNode_TransitionResult_29; // 0x26d0(0x28)
	None AnimGraphNode_SequencePlayer_120; // 0x26f8(0x78)
	None AnimGraphNode_StateResult_26; // 0x2770(0x30)
	None AnimGraphNode_BlendSpacePlayer_22; // 0x27a0(0xe0)
	None AnimGraphNode_StateResult_25; // 0x2880(0x30)
	None AnimGraphNode_SequencePlayer_119; // 0x28b0(0x78)
	None AnimGraphNode_StateResult_24; // 0x2928(0x30)
	None AnimGraphNode_StateMachine_6; // 0x2958(0xb0)
	None AnimGraphNode_StateResult_23; // 0x2a08(0x30)
	None AnimGraphNode_TransitionResult_28; // 0x2a38(0x28)
	None AnimGraphNode_TransitionResult_27; // 0x2a60(0x28)
	None AnimGraphNode_TransitionResult_26; // 0x2a88(0x28)
	None AnimGraphNode_TransitionResult_25; // 0x2ab0(0x28)
	None AnimGraphNode_BlendSpacePlayer_21; // 0x2ad8(0xe0)
	None AnimGraphNode_StateResult_22; // 0x2bb8(0x30)
	None AnimGraphNode_BlendSpacePlayer_20; // 0x2be8(0xe0)
	None AnimGraphNode_StateResult_21; // 0x2cc8(0x30)
	None AnimGraphNode_StateMachine_5; // 0x2cf8(0xb0)
	None AnimGraphNode_StateResult_20; // 0x2da8(0x30)
	None AnimGraphNode_TransitionResult_24; // 0x2dd8(0x28)
	None AnimGraphNode_TransitionResult_23; // 0x2e00(0x28)
	None AnimGraphNode_SequencePlayer_118; // 0x2e28(0x78)
	None AnimGraphNode_StateResult_19; // 0x2ea0(0x30)
	None AnimGraphNode_SequencePlayer_117; // 0x2ed0(0x78)
	None AnimGraphNode_StateResult_18; // 0x2f48(0x30)
	None AnimGraphNode_StateMachine_4; // 0x2f78(0xb0)
	None AnimGraphNode_StateResult_17; // 0x3028(0x30)
	None AnimGraphNode_StateMachine_3; // 0x3058(0xb0)
	None AnimGraphNode_StateResult_16; // 0x3108(0x30)
	None AnimGraphNode_TransitionResult_22; // 0x3138(0x28)
	None AnimGraphNode_SequencePlayer_116; // 0x3160(0x78)
	None AnimGraphNode_BlendListByBool_23; // 0x31d8(0xa0)
	None AnimGraphNode_SequencePlayer_115; // 0x3278(0x78)
	None AnimGraphNode_SequencePlayer_114; // 0x32f0(0x78)
	None AnimGraphNode_SequencePlayer_113; // 0x3368(0x78)
	None AnimGraphNode_BlendListByEnum_24; // 0x33e0(0xb0)
	None AnimGraphNode_SequencePlayer_112; // 0x3490(0x78)
	None AnimGraphNode_StateResult_15; // 0x3508(0x30)
	None AnimGraphNode_SequencePlayer_111; // 0x3538(0x78)
	None AnimGraphNode_BlendListByBool_22; // 0x35b0(0xa0)
	None AnimGraphNode_SequencePlayer_110; // 0x3650(0x78)
	None AnimGraphNode_SequencePlayer_109; // 0x36c8(0x78)
	None AnimGraphNode_SequencePlayer_108; // 0x3740(0x78)
	None AnimGraphNode_BlendListByEnum_23; // 0x37b8(0xb0)
	None AnimGraphNode_SequencePlayer_107; // 0x3868(0x78)
	None AnimGraphNode_StateResult_14; // 0x38e0(0x30)
	None AnimGraphNode_SequencePlayer_106; // 0x3910(0x78)
	None AnimGraphNode_SequencePlayer_105; // 0x3988(0x78)
	None AnimGraphNode_SequencePlayer_104; // 0x3a00(0x78)
	None AnimGraphNode_BlendListByEnum_22; // 0x3a78(0xb0)
	None AnimGraphNode_SequencePlayer_103; // 0x3b28(0x78)
	None AnimGraphNode_StateResult_13; // 0x3ba0(0x30)
	None AnimGraphNode_ApplyAdditive_3; // 0x3bd0(0xc8)
	None AnimGraphNode_SequencePlayer_102; // 0x3c98(0x78)
	None AnimGraphNode_SequencePlayer_101; // 0x3d10(0x78)
	None AnimGraphNode_Slot_13; // 0x3d88(0x48)
	None AnimGraphNode_Slot_12; // 0x3dd0(0x48)
	None AnimGraphNode_BlendListByEnum_21; // 0x3e18(0xb0)
	None AnimGraphNode_SequencePlayer_100; // 0x3ec8(0x78)
	None AnimGraphNode_SequencePlayer_99; // 0x3f40(0x78)
	None AnimGraphNode_SequencePlayer_98; // 0x3fb8(0x78)
	None AnimGraphNode_SequencePlayer_97; // 0x4030(0x78)
	None AnimGraphNode_SequencePlayer_96; // 0x40a8(0x78)
	None AnimGraphNode_SequencePlayer_95; // 0x4120(0x78)
	None AnimGraphNode_SequencePlayer_94; // 0x4198(0x78)
	None AnimGraphNode_SequencePlayer_93; // 0x4210(0x78)
	None AnimGraphNode_SequencePlayer_92; // 0x4288(0x78)
	None AnimGraphNode_BlendListByEnum_20; // 0x4300(0xb0)
	None AnimGraphNode_TwoWayBlend_6; // 0x43b0(0xc8)
	None AnimGraphNode_ApplyAdditive_2; // 0x4478(0xc8)
	None AnimGraphNode_SequencePlayer_91; // 0x4540(0x78)
	None AnimGraphNode_TransitionResult_21; // 0x45b8(0x28)
	None AnimGraphNode_TransitionResult_20; // 0x45e0(0x28)
	None AnimGraphNode_TransitionResult_19; // 0x4608(0x28)
	None AnimGraphNode_TransitionResult_18; // 0x4630(0x28)
	None AnimGraphNode_TransitionResult_17; // 0x4658(0x28)
	None AnimGraphNode_TransitionResult_16; // 0x4680(0x28)
	None AnimGraphNode_TransitionResult_15; // 0x46a8(0x28)
	None AnimGraphNode_TransitionResult_14; // 0x46d0(0x28)
	None AnimGraphNode_TransitionResult_13; // 0x46f8(0x28)
	None AnimGraphNode_TransitionResult_12; // 0x4720(0x28)
	None AnimGraphNode_TransitionResult_11; // 0x4748(0x28)
	None AnimGraphNode_TransitionResult_10; // 0x4770(0x28)
	None AnimGraphNode_TransitionResult_9; // 0x4798(0x28)
	None AnimGraphNode_TransitionResult_8; // 0x47c0(0x28)
	None AnimGraphNode_TransitionResult_7; // 0x47e8(0x28)
	None AnimGraphNode_TransitionResult_6; // 0x4810(0x28)
	None AnimGraphNode_TransitionResult_5; // 0x4838(0x28)
	None AnimGraphNode_TransitionResult_4; // 0x4860(0x28)
	None AnimGraphNode_TransitionResult_3; // 0x4888(0x28)
	None AnimGraphNode_TransitionResult_2; // 0x48b0(0x28)
	None AnimGraphNode_TransitionResult; // 0x48d8(0x28)
	None AnimGraphNode_SequencePlayer_90; // 0x4900(0x78)
	None AnimGraphNode_StateResult_12; // 0x4978(0x30)
	None AnimGraphNode_SequencePlayer_89; // 0x49a8(0x78)
	None AnimGraphNode_SequencePlayer_88; // 0x4a20(0x78)
	None AnimGraphNode_SequencePlayer_87; // 0x4a98(0x78)
	None AnimGraphNode_SequencePlayer_86; // 0x4b10(0x78)
	None AnimGraphNode_SequencePlayer_85; // 0x4b88(0x78)
	None AnimGraphNode_SequencePlayer_84; // 0x4c00(0x78)
	None AnimGraphNode_SequencePlayer_83; // 0x4c78(0x78)
	None AnimGraphNode_SequencePlayer_82; // 0x4cf0(0x78)
	None AnimGraphNode_SequencePlayer_81; // 0x4d68(0x78)
	None AnimGraphNode_BlendListByEnum_19; // 0x4de0(0xb0)
	None AnimGraphNode_StateResult_11; // 0x4e90(0x30)
	None AnimGraphNode_SequencePlayer_80; // 0x4ec0(0x78)
	None AnimGraphNode_SequencePlayer_79; // 0x4f38(0x78)
	None AnimGraphNode_SequencePlayer_78; // 0x4fb0(0x78)
	None AnimGraphNode_SequencePlayer_77; // 0x5028(0x78)
	None AnimGraphNode_SequencePlayer_76; // 0x50a0(0x78)
	None AnimGraphNode_SequencePlayer_75; // 0x5118(0x78)
	None AnimGraphNode_SequencePlayer_74; // 0x5190(0x78)
	None AnimGraphNode_BlendListByEnum_18; // 0x5208(0xb0)
	None AnimGraphNode_SequencePlayer_73; // 0x52b8(0x78)
	None AnimGraphNode_StateResult_10; // 0x5330(0x30)
	None AnimGraphNode_SequencePlayer_72; // 0x5360(0x78)
	None AnimGraphNode_SequencePlayer_71; // 0x53d8(0x78)
	None AnimGraphNode_SequencePlayer_70; // 0x5450(0x78)
	None AnimGraphNode_SequencePlayer_69; // 0x54c8(0x78)
	None AnimGraphNode_SequencePlayer_68; // 0x5540(0x78)
	None AnimGraphNode_SequencePlayer_67; // 0x55b8(0x78)
	None AnimGraphNode_BlendListByEnum_17; // 0x5630(0xb0)
	None AnimGraphNode_SequencePlayer_66; // 0x56e0(0x78)
	None AnimGraphNode_SequencePlayer_65; // 0x5758(0x78)
	None AnimGraphNode_StateResult_9; // 0x57d0(0x30)
	None AnimGraphNode_SequencePlayer_64; // 0x5800(0x78)
	None AnimGraphNode_SequencePlayer_63; // 0x5878(0x78)
	None AnimGraphNode_SequencePlayer_62; // 0x58f0(0x78)
	None AnimGraphNode_SequencePlayer_61; // 0x5968(0x78)
	None AnimGraphNode_SequencePlayer_60; // 0x59e0(0x78)
	None AnimGraphNode_SequencePlayer_59; // 0x5a58(0x78)
	None AnimGraphNode_SequencePlayer_58; // 0x5ad0(0x78)
	None AnimGraphNode_BlendListByEnum_16; // 0x5b48(0xb0)
	None AnimGraphNode_SequencePlayer_57; // 0x5bf8(0x78)
	None AnimGraphNode_StateResult_8; // 0x5c70(0x30)
	None AnimGraphNode_SequencePlayer_56; // 0x5ca0(0x78)
	None AnimGraphNode_SequencePlayer_55; // 0x5d18(0x78)
	None AnimGraphNode_SequencePlayer_54; // 0x5d90(0x78)
	None AnimGraphNode_SequencePlayer_53; // 0x5e08(0x78)
	None AnimGraphNode_SequencePlayer_52; // 0x5e80(0x78)
	None AnimGraphNode_SequencePlayer_51; // 0x5ef8(0x78)
	None AnimGraphNode_BlendListByEnum_15; // 0x5f70(0xb0)
	None AnimGraphNode_SequencePlayer_50; // 0x6020(0x78)
	None AnimGraphNode_SequencePlayer_49; // 0x6098(0x78)
	None AnimGraphNode_StateResult_7; // 0x6110(0x30)
	None AnimGraphNode_SequencePlayer_48; // 0x6140(0x78)
	None AnimGraphNode_BlendListByBool_21; // 0x61b8(0xa0)
	None AnimGraphNode_SequencePlayer_47; // 0x6258(0x78)
	None AnimGraphNode_SequencePlayer_46; // 0x62d0(0x78)
	None AnimGraphNode_BlendListByEnum_14; // 0x6348(0xb0)
	None AnimGraphNode_SequencePlayer_45; // 0x63f8(0x78)
	None AnimGraphNode_SequencePlayer_44; // 0x6470(0x78)
	None AnimGraphNode_SequencePlayer_43; // 0x64e8(0x78)
	None AnimGraphNode_SequencePlayer_42; // 0x6560(0x78)
	None AnimGraphNode_SequencePlayer_41; // 0x65d8(0x78)
	None AnimGraphNode_SequencePlayer_40; // 0x6650(0x78)
	None AnimGraphNode_BlendListByEnum_13; // 0x66c8(0xb0)
	None AnimGraphNode_SequencePlayer_39; // 0x6778(0x78)
	None AnimGraphNode_StateResult_6; // 0x67f0(0x30)
	None AnimGraphNode_SequencePlayer_38; // 0x6820(0x78)
	None AnimGraphNode_BlendListByBool_20; // 0x6898(0xa0)
	None AnimGraphNode_SequencePlayer_37; // 0x6938(0x78)
	None AnimGraphNode_SequencePlayer_36; // 0x69b0(0x78)
	None AnimGraphNode_BlendListByEnum_12; // 0x6a28(0xb0)
	None AnimGraphNode_SequencePlayer_35; // 0x6ad8(0x78)
	None AnimGraphNode_SequencePlayer_34; // 0x6b50(0x78)
	None AnimGraphNode_SequencePlayer_33; // 0x6bc8(0x78)
	None AnimGraphNode_SequencePlayer_32; // 0x6c40(0x78)
	None AnimGraphNode_SequencePlayer_31; // 0x6cb8(0x78)
	None AnimGraphNode_BlendListByEnum_11; // 0x6d30(0xb0)
	None AnimGraphNode_SequencePlayer_30; // 0x6de0(0x78)
	None AnimGraphNode_SequencePlayer_29; // 0x6e58(0x78)
	None AnimGraphNode_StateResult_5; // 0x6ed0(0x30)
	None AnimGraphNode_SequencePlayer_28; // 0x6f00(0x78)
	None AnimGraphNode_BlendListByBool_19; // 0x6f78(0xa0)
	None AnimGraphNode_BlendSpacePlayer_19; // 0x7018(0xe0)
	None AnimGraphNode_BlendListByBool_18; // 0x70f8(0xa0)
	None AnimGraphNode_LayeredBoneBlend_6; // 0x7198(0xc0)
	None AnimGraphNode_SequencePlayer_27; // 0x7258(0x78)
	None AnimGraphNode_BlendSpacePlayer_18; // 0x72d0(0xe0)
	None AnimGraphNode_SequencePlayer_26; // 0x73b0(0x78)
	None AnimGraphNode_SequencePlayer_25; // 0x7428(0x78)
	None AnimGraphNode_BlendListByEnum_10; // 0x74a0(0xb0)
	None AnimGraphNode_TwoWayBlend_5; // 0x7550(0xc8)
	None AnimGraphNode_BlendSpacePlayer_17; // 0x7618(0xe0)
	None AnimGraphNode_SequencePlayer_24; // 0x76f8(0x78)
	None AnimGraphNode_BlendListByEnum_9; // 0x7770(0xb0)
	None AnimGraphNode_BlendSpacePlayer_16; // 0x7820(0xe0)
	None AnimGraphNode_BlendSpacePlayer_15; // 0x7900(0xe0)
	None AnimGraphNode_BlendListByEnum_8; // 0x79e0(0xb0)
	None AnimGraphNode_BlendSpacePlayer_14; // 0x7a90(0xe0)
	None AnimGraphNode_StateResult_4; // 0x7b70(0x30)
	None AnimGraphNode_SequencePlayer_23; // 0x7ba0(0x78)
	None AnimGraphNode_BlendListByBool_17; // 0x7c18(0xa0)
	None AnimGraphNode_ComponentToLocalSpace_10; // 0x7cb8(0x20)
	None AnimGraphNode_LocalToComponentSpace_9; // 0x7cd8(0x20)
	None AnimGraphNode_ModifyBone_13; // 0x7cf8(0x108)
	None AnimGraphNode_BlendSpacePlayer_13; // 0x7e00(0xe0)
	None AnimGraphNode_BlendListByBool_16; // 0x7ee0(0xa0)
	None AnimGraphNode_BlendSpacePlayer_12; // 0x7f80(0xe0)
	None AnimGraphNode_SequencePlayer_22; // 0x8060(0x78)
	None AnimGraphNode_SequencePlayer_21; // 0x80d8(0x78)
	None AnimGraphNode_BlendListByEnum_7; // 0x8150(0xb0)
	None AnimGraphNode_TwoWayBlend_4; // 0x8200(0xc8)
	None AnimGraphNode_BlendSpacePlayer_11; // 0x82c8(0xe0)
	None AnimGraphNode_BlendListByBool_15; // 0x83a8(0xa0)
	None AnimGraphNode_BlendSpacePlayer_10; // 0x8448(0xe0)
	None AnimGraphNode_SequencePlayer_20; // 0x8528(0x78)
	None AnimGraphNode_BlendListByEnum_6; // 0x85a0(0xb0)
	None AnimGraphNode_BlendSpacePlayer_9; // 0x8650(0xe0)
	None AnimGraphNode_BlendSpacePlayer_8; // 0x8730(0xe0)
	None AnimGraphNode_BlendListByEnum_5; // 0x8810(0xb0)
	None AnimGraphNode_BlendSpacePlayer_7; // 0x88c0(0xe0)
	None AnimGraphNode_StateResult_3; // 0x89a0(0x30)
	None AnimGraphNode_SequencePlayer_19; // 0x89d0(0x78)
	None AnimGraphNode_BlendListByBool_14; // 0x8a48(0xa0)
	None AnimGraphNode_BlendSpacePlayer_6; // 0x8ae8(0xe0)
	None AnimGraphNode_BlendListByBool_13; // 0x8bc8(0xa0)
	None AnimGraphNode_LayeredBoneBlend_5; // 0x8c68(0xc0)
	None AnimGraphNode_SequencePlayer_18; // 0x8d28(0x78)
	None AnimGraphNode_SequencePlayer_17; // 0x8da0(0x78)
	None AnimGraphNode_SequencePlayer_16; // 0x8e18(0x78)
	None AnimGraphNode_BlendSpacePlayer_5; // 0x8e90(0xe0)
	None AnimGraphNode_BlendListByInt; // 0x8f70(0xa0)
	None AnimGraphNode_BlendSpacePlayer_4; // 0x9010(0xe0)
	None AnimGraphNode_SequencePlayer_15; // 0x90f0(0x78)
	None AnimGraphNode_SequencePlayer_14; // 0x9168(0x78)
	None AnimGraphNode_BlendListByEnum_4; // 0x91e0(0xb0)
	None AnimGraphNode_TwoWayBlend_3; // 0x9290(0xc8)
	None AnimGraphNode_SequencePlayer_13; // 0x9358(0x78)
	None AnimGraphNode_SequencePlayer_12; // 0x93d0(0x78)
	None AnimGraphNode_SequencePlayer_11; // 0x9448(0x78)
	None AnimGraphNode_SequencePlayer_10; // 0x94c0(0x78)
	None AnimGraphNode_SequencePlayer_9; // 0x9538(0x78)
	None AnimGraphNode_SequencePlayer_8; // 0x95b0(0x78)
	None AnimGraphNode_SequencePlayer_7; // 0x9628(0x78)
	None AnimGraphNode_SequencePlayer_6; // 0x96a0(0x78)
	None AnimGraphNode_BlendListByEnum_3; // 0x9718(0xb0)
	None AnimGraphNode_BlendListByBool_12; // 0x97c8(0xa0)
	None AnimGraphNode_BlendSpacePlayer_3; // 0x9868(0xe0)
	None AnimGraphNode_SequencePlayer_5; // 0x9948(0x78)
	None AnimGraphNode_SequencePlayer_4; // 0x99c0(0x78)
	None AnimGraphNode_BlendListByEnum_2; // 0x9a38(0xb0)
	None AnimGraphNode_BlendSpacePlayer_2; // 0x9ae8(0xe0)
	None AnimGraphNode_BlendSpacePlayer; // 0x9bc8(0xe0)
	None AnimGraphNode_BlendListByEnum; // 0x9ca8(0xb0)
	None AnimGraphNode_StateResult_2; // 0x9d58(0x30)
	None AnimGraphNode_StateMachine_2; // 0x9d88(0xb0)
	None AnimGraphNode_StateResult; // 0x9e38(0x30)
	None AnimGraphNode_StateMachine; // 0x9e68(0xb0)
	None AnimGraphNode_SaveCachedPose_14; // 0x9f18(0xb8)
	None AnimGraphNode_CopyPoseFromMesh; // 0x9fd0(0x140)
	None AnimGraphNode_LayeredBoneBlend_4; // 0xa110(0xc0)
	None AnimGraphNode_SaveCachedPose_13; // 0xa1d0(0xb8)
	None AnimGraphNode_UseCachedPose_27; // 0xa288(0x28)
	None AnimGraphNode_SaveCachedPose_12; // 0xa2b0(0xb8)
	None AnimGraphNode_UseCachedPose_26; // 0xa368(0x28)
	None AnimGraphNode_ModifyBone_12; // 0xa390(0x108)
	None AnimGraphNode_ComponentToLocalSpace_9; // 0xa498(0x20)
	None AnimGraphNode_SaveCachedPose_11; // 0xa4b8(0xb8)
	None AnimGraphNode_ComponentToLocalSpace_8; // 0xa570(0x20)
	None AnimGraphNode_LocalToComponentSpace_8; // 0xa590(0x20)
	None AnimGraphNode_ComponentToLocalSpace_7; // 0xa5b0(0x20)
	None AnimGraphNode_SaveCachedPose_10; // 0xa5d0(0xb8)
	None AnimGraphNode_SaveCachedPose_9; // 0xa688(0xb8)
	None AnimGraphNode_LocalToComponentSpace_7; // 0xa740(0x20)
	None AnimGraphNode_TwoBoneIK_7; // 0xa760(0x1e0)
	None AnimGraphNode_TwoBoneIK_6; // 0xa940(0x1e0)
	None AnimGraphNode_UseCachedPose_25; // 0xab20(0x28)
	None AnimGraphNode_ModifyBone_11; // 0xab48(0x108)
	None AnimGraphNode_BlendListByBool_11; // 0xac50(0xa0)
	None AnimGraphNode_TwoWayBlend_2; // 0xacf0(0xc8)
	None AnimGraphNode_SaveCachedPose_8; // 0xadb8(0xb8)
	None AnimGraphNode_ModifyBone_10; // 0xae70(0x108)
	None AnimGraphNode_BlendListByBool_10; // 0xaf78(0xa0)
	None AnimGraphNode_LayeredBoneBlend_3; // 0xb018(0xc0)
	None AnimGraphNode_UseCachedPose_24; // 0xb0d8(0x28)
	None AnimGraphNode_CopyBone_2; // 0xb100(0xf0)
	None AnimGraphNode_ApplyAdditive; // 0xb1f0(0xc8)
	None AnimGraphNode_SequencePlayer_3; // 0xb2b8(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0xb330(0x78)
	None AnimGraphNode_SaveCachedPose_7; // 0xb3a8(0xb8)
	None AnimGraphNode_UseCachedPose_23; // 0xb460(0x28)
	None AnimGraphNode_SaveCachedPose_6; // 0xb488(0xb8)
	None AnimGraphNode_ModifyBone_9; // 0xb540(0x108)
	None AnimGraphNode_BlendListByBool_9; // 0xb648(0xa0)
	None AnimGraphNode_ComponentToLocalSpace_6; // 0xb6e8(0x20)
	None AnimGraphNode_LocalToComponentSpace_6; // 0xb708(0x20)
	None AnimGraphNode_SaveCachedPose_5; // 0xb728(0xb8)
	None AnimGraphNode_UseCachedPose_22; // 0xb7e0(0x28)
	None AnimGraphNode_CopyBone; // 0xb808(0xf0)
	None AnimGraphNode_ModifyBone_8; // 0xb8f8(0x108)
	None AnimGraphNode_BlendListByBool_8; // 0xba00(0xa0)
	None AnimGraphNode_Slot_11; // 0xbaa0(0x48)
	None AnimGraphNode_Slot_10; // 0xbae8(0x48)
	None AnimGraphNode_Slot_9; // 0xbb30(0x48)
	None AnimGraphNode_Slot_8; // 0xbb78(0x48)
	None AnimGraphNode_BlendListByBool_7; // 0xbbc0(0xa0)
	None AnimGraphNode_UseCachedPose_21; // 0xbc60(0x28)
	None AnimGraphNode_Slot_7; // 0xbc88(0x48)
	None AnimGraphNode_Slot_6; // 0xbcd0(0x48)
	None AnimGraphNode_ModifyBone_7; // 0xbd18(0x108)
	None AnimGraphNode_ModifyBone_6; // 0xbe20(0x108)
	None AnimGraphNode_UseCachedPose_20; // 0xbf28(0x28)
	None AnimGraphNode_ModifyBone_5; // 0xbf50(0x108)
	None AnimGraphNode_LocalToComponentSpace_5; // 0xc058(0x20)
	None AnimGraphNode_SaveCachedPose_4; // 0xc078(0xb8)
	None AnimGraphNode_ComponentToLocalSpace_5; // 0xc130(0x20)
	None AnimGraphNode_UseCachedPose_19; // 0xc150(0x28)
	None AnimGraphNode_LocalToComponentSpace_4; // 0xc178(0x20)
	None AnimGraphNode_TwoBoneIK_5; // 0xc1a0(0x1e0)
	None AnimGraphNode_ComponentToLocalSpace_4; // 0xc380(0x20)
	None AnimGraphNode_Slot_5; // 0xc3a0(0x48)
	None AnimGraphNode_LayeredBoneBlend_2; // 0xc3e8(0xc0)
	None AnimGraphNode_UseCachedPose_18; // 0xc4a8(0x28)
	None AnimGraphNode_Slot_4; // 0xc4d0(0x48)
	None AnimGraphNode_LayeredBoneBlend; // 0xc518(0xc0)
	None AnimGraphNode_UseCachedPose_17; // 0xc5d8(0x28)
	None AnimGraphNode_UseCachedPose_16; // 0xc600(0x28)
	None AnimGraphNode_BlendListByBool_6; // 0xc628(0xa0)
	None AnimGraphNode_UseCachedPose_15; // 0xc6c8(0x28)
	None AnimGraphNode_TwoWayBlend; // 0xc6f0(0xc8)
	None AnimGraphNode_ComponentToLocalSpace_3; // 0xc7b8(0x20)
	None AnimGraphNode_LocalToComponentSpace_3; // 0xc7d8(0x20)
	None AnimGraphNode_SaveCachedPose_3; // 0xc7f8(0xb8)
	None AnimGraphNode_BlendListByBool_5; // 0xc8b0(0xa0)
	None AnimGraphNode_UseCachedPose_14; // 0xc950(0x28)
	None AnimGraphNode_TwoBoneIK_4; // 0xc980(0x1e0)
	None AnimGraphNode_TwoBoneIK_3; // 0xcb60(0x1e0)
	None AnimGraphNode_ModifyBone_4; // 0xcd40(0x108)
	None AnimGraphNode_ModifyBone_3; // 0xce48(0x108)
	None AnimGraphNode_Slot_3; // 0xcf50(0x48)
	None AnimGraphNode_TwoBoneIK_2; // 0xcfa0(0x1e0)
	None AnimGraphNode_BlendListByBool_4; // 0xd180(0xa0)
	None AnimGraphNode_ModifyBone_2; // 0xd220(0x108)
	None AnimGraphNode_LocalToComponentSpace_2; // 0xd328(0x20)
	None AnimGraphNode_ComponentToLocalSpace_2; // 0xd348(0x20)
	None AnimGraphNode_BlendListByBool_3; // 0xd368(0xa0)
	None AnimGraphNode_Slot_2; // 0xd408(0x48)
	None AnimGraphNode_Slot; // 0xd450(0x48)
	None AnimGraphNode_SaveCachedPose_2; // 0xd498(0xb8)
	None AnimGraphNode_UseCachedPose_13; // 0xd550(0x28)
	None AnimGraphNode_UseCachedPose_12; // 0xd578(0x28)
	None AnimGraphNode_UseCachedPose_11; // 0xd5a0(0x28)
	None AnimGraphNode_UseCachedPose_10; // 0xd5c8(0x28)
	None AnimGraphNode_UseCachedPose_9; // 0xd5f0(0x28)
	None AnimGraphNode_UseCachedPose_8; // 0xd618(0x28)
	None AnimGraphNode_UseCachedPose_7; // 0xd640(0x28)
	None AnimGraphNode_UseCachedPose_6; // 0xd668(0x28)
	None AnimGraphNode_UseCachedPose_5; // 0xd690(0x28)
	None AnimGraphNode_UseCachedPose_4; // 0xd6b8(0x28)
	None AnimGraphNode_BlendListByBool_2; // 0xd6e0(0xa0)
	None AnimGraphNode_SequencePlayer; // 0xd780(0x78)
	None AnimGraphNode_ModifyBone; // 0xd7f8(0x108)
	None AnimGraphNode_TwoBoneIK; // 0xd900(0x1e0)
	None AnimGraphNode_LocalToComponentSpace; // 0xdae0(0x20)
	None AnimGraphNode_ComponentToLocalSpace; // 0xdb00(0x20)
	None AnimGraphNode_SaveCachedPose; // 0xdb20(0xb8)
	None AnimGraphNode_UseCachedPose_3; // 0xdbd8(0x28)
	None AnimGraphNode_UseCachedPose_2; // 0xdc00(0x28)
	None AnimGraphNode_BlendListByBool; // 0xdc28(0xa0)
	None AnimGraphNode_UseCachedPose; // 0xdcc8(0x28)
	None UberGraphFrame; // 0x3a60(0x08)
	None BP-LadderComponent; // 0x3a68(0x08)
	None OutBlueZone; // 0x3a70(0x08)
	None BP-FoliageCollision; // 0x3a78(0x08)
	None DevCamera_ChildActor; // 0x3a80(0x08)
	None TeamInfoUpdater; // 0x3a88(0x08)
	None VelocityZ_LandingDamage; // 0x3a90(0x04)
	None CharacterPreviewRef; // 0x3a98(0x08)
	None Chat System; // 0x3aa0(0x08)
	None ShowChatToggle; // 0x3aa8(0x01)
	None CurrentViewportSizeX; // 0x3aac(0x04)
	None CurrentViewportSizeY; // 0x3ab0(0x04)
	None OutScreenPosition; // 0x3ab4(0x01)
	None SightNumForTset; // 0x3ab8(0x04)
	None bDefaultAmplifier; // 0x3abc(0x01)
	None CurrentTeamInfoHeight; // 0x3ac0(0x04)
	None UberGraphFrame; // 0x330(0x08)
	None Power_Min; // 0x338(0x04)
	None Power_Max; // 0x33c(0x04)
	None FlyAngle; // 0x340(0x04)
	None UberGraphFrame; // 0x210(0x08)
	None NeedToChangeHand; // 0x218(0x01)
	None CrntAxisValue; // 0x21c(0x04)
	None GoalLocationZ; // 0x220(0x04)
	None NeedMoveOnLadder; // 0x224(0x01)
	None MotionMinAlpha; // 0x228(0x04)
	None CanStopMotion; // 0x22c(0x01)
	None DirectSnapLocZ; // 0x230(0x04)
	None DeltaSecond; // 0x234(0x04)
	None LastSecond; // 0x238(0x04)
	None AdditionalStepCount; // 0x23c(0x04)
	None UberGraphFrame; // 0x320(0x08)
	None Box2; // 0x328(0x08)
	None Box1; // 0x330(0x08)
	None BravoHotelAudioEmitter; // 0x338(0x08)
	None Upper_Rear_Display_Sub; // 0x340(0x08)
	None Upper_Front_Display_Sub; // 0x348(0x08)
	None Lower_Rear_Display_Sub; // 0x350(0x08)
	None Lower_Front_Display_Sub; // 0x358(0x08)
	None PointBox; // 0x360(0x08)
	None FloorBox; // 0x368(0x08)
	None Main_Display; // 0x370(0x08)
	None Box; // 0x378(0x08)
	None TextRender5; // 0x380(0x08)
	None TextRender7; // 0x388(0x08)
	None TextRender6; // 0x390(0x08)
	None TextRender1; // 0x398(0x08)
	None TextRender4; // 0x3a0(0x08)
	None TextRender3; // 0x3a8(0x08)
	None TextRender; // 0x3b0(0x08)
	None TextRender2; // 0x3b8(0x08)
	None Upper_Front_Button_Area; // 0x3c0(0x08)
	None Upper_Rear_Button_Area; // 0x3c8(0x08)
	None Lower_Rear_Button_Area; // 0x3d0(0x08)
	None Lower_Front_Button_Area; // 0x3d8(0x08)
	None Main_Rear_Button_Area; // 0x3e0(0x08)
	None Main_Front_Button_Area; // 0x3e8(0x08)
	None Main_Front_Button; // 0x3f0(0x08)
	None Main_Rear_Button; // 0x3f8(0x08)
	None Upper_Rear_Display; // 0x400(0x08)
	None Upper_Front_Display; // 0x408(0x08)
	None Lower_Rear_Display; // 0x410(0x08)
	None Lower_Front_Display; // 0x418(0x08)
	None Upper_Rear_Button; // 0x420(0x08)
	None Upper_Front_Button; // 0x428(0x08)
	None Lower_Rear_Button; // 0x430(0x08)
	None Lower_Front_Button; // 0x438(0x08)
	None Upper_Rear_Left; // 0x440(0x08)
	None Upper_Rear_Right; // 0x448(0x08)
	None Upper_Front_Left; // 0x450(0x08)
	None Upper_Front_Right; // 0x458(0x08)
	None Lower_Rear_Right; // 0x460(0x08)
	None Lower_Front_Right; // 0x468(0x08)
	None Lower_Front_Left; // 0x470(0x08)
	None Lower_Rear_Left; // 0x478(0x08)
	None Upper_Rear; // 0x480(0x08)
	None Upper_Front; // 0x488(0x08)
	None Lower_Rear; // 0x490(0x08)
	None Lower_Front; // 0x498(0x08)
	None Upper_Floor; // 0x4a0(0x08)
	None Front_Door; // 0x4a8(0x08)
	None Rear_Door; // 0x4b0(0x08)
	None Lower_Floor; // 0x4b8(0x08)
	None Main_Front_Right; // 0x4c0(0x08)
	None Main_Front_Left; // 0x4c8(0x08)
	None Main_Body; // 0x4d0(0x08)
	None Scene1; // 0x4d8(0x08)
	None Main_Rear_Right; // 0x4e0(0x08)
	None Main_Rear_Left; // 0x4e8(0x08)
	None ElevatorCloseDoor______0_70C4393D45E164D3C8B473964F68015B; // 0x4f0(0x04)
	None ElevatorCloseDoor__Direction_70C4393D45E164D3C8B473964F68015B; // 0x4f4(0x01)
	None ElevatorCloseDoor; // 0x4f8(0x08)
	None LowerMoving______0_95D3AE1045ABFF7C4CC7778EAC04BCDA; // 0x500(0x04)
	None LowerMoving__Direction_95D3AE1045ABFF7C4CC7778EAC04BCDA; // 0x504(0x01)
	None LowerMoving; // 0x508(0x08)
	None ElevatorOpenDoor______0_5DABF5354368A8D3121A6FB4685095FB; // 0x510(0x04)
	None ElevatorOpenDoor__Direction_5DABF5354368A8D3121A6FB4685095FB; // 0x514(0x01)
	None ElevatorOpenDoor; // 0x518(0x08)
	None UpperMoving______0_B6B6057A44D35DFC9C1FCDB8B065C5D0; // 0x520(0x04)
	None UpperMoving__Direction_B6B6057A44D35DFC9C1FCDB8B065C5D0; // 0x524(0x01)
	None UpperMoving; // 0x528(0x08)
	None Upper_Location; // 0x530(0x0c)
	None Body_Position; // 0x53c(0x0c)
	None IsLower; // 0x548(0x01)
	None DoorTravel; // 0x54c(0x04)
	None DoorMoveTime; // 0x550(0x04)
	None IsMoving; // 0x554(0x01)
	None RoomPos; // 0x558(0x0c)
	None MoveFloor; // 0x568(0x08)
	None AddCharacters; // 0x570(0x10)
	None AddMoveOffest; // 0x580(0x04)
	None OpenDoorCompleted; // 0x588(0x08)
	None OpeningDoor; // 0x590(0x08)
	None ClosingDoor; // 0x598(0x08)
	None CloseDoorCompleted; // 0x5a0(0x08)
	None SoundEventForMoved; // 0x5a8(0x08)
	None SoundEventForMoving; // 0x5b0(0x08)
	None IsTraceMoving; // 0x5b8(0x01)
	None TraceLocation; // 0x5bc(0x0c)
	None AttachActors; // 0x5c8(0x10)
	None NewVar_1; // 0x5d8(0x01)
	None NewVar_2; // 0x5d9(0x01)
	None ElevatorAKComponent; // 0x5e0(0x08)
	None ButtonSound; // 0x5e8(0x08)
	None UberGraphFrame; // 0xc60(0x08)
	None AnimGraphNode_Root; // 0xc68(0x30)
	None AnimGraphNode_TransitionResult_119; // 0xc98(0x28)
	None AnimGraphNode_TransitionResult_118; // 0xcc0(0x28)
	None AnimGraphNode_TransitionResult_117; // 0xce8(0x28)
	None AnimGraphNode_TransitionResult_116; // 0xd10(0x28)
	None AnimGraphNode_TransitionResult_115; // 0xd38(0x28)
	None AnimGraphNode_TransitionResult_114; // 0xd60(0x28)
	None AnimGraphNode_TransitionResult_113; // 0xd88(0x28)
	None AnimGraphNode_TransitionResult_112; // 0xdb0(0x28)
	None AnimGraphNode_TransitionResult_111; // 0xdd8(0x28)
	None AnimGraphNode_TransitionResult_110; // 0xe00(0x28)
	None AnimGraphNode_TransitionResult_109; // 0xe28(0x28)
	None AnimGraphNode_TransitionResult_108; // 0xe50(0x28)
	None AnimGraphNode_TransitionResult_107; // 0xe78(0x28)
	None AnimGraphNode_TransitionResult_106; // 0xea0(0x28)
	None AnimGraphNode_TransitionResult_105; // 0xec8(0x28)
	None AnimGraphNode_TransitionResult_104; // 0xef0(0x28)
	None AnimGraphNode_TransitionResult_103; // 0xf18(0x28)
	None AnimGraphNode_TransitionResult_102; // 0xf40(0x28)
	None AnimGraphNode_TransitionResult_101; // 0xf68(0x28)
	None AnimGraphNode_TransitionResult_100; // 0xf90(0x28)
	None AnimGraphNode_TransitionResult_99; // 0xfb8(0x28)
	None AnimGraphNode_TransitionResult_98; // 0xfe0(0x28)
	None AnimGraphNode_TransitionResult_97; // 0x1008(0x28)
	None AnimGraphNode_TransitionResult_96; // 0x1030(0x28)
	None AnimGraphNode_TransitionResult_95; // 0x1058(0x28)
	None AnimGraphNode_TransitionResult_94; // 0x1080(0x28)
	None AnimGraphNode_TransitionResult_93; // 0x10a8(0x28)
	None AnimGraphNode_TransitionResult_92; // 0x10d0(0x28)
	None AnimGraphNode_TransitionResult_91; // 0x10f8(0x28)
	None AnimGraphNode_TransitionResult_90; // 0x1120(0x28)
	None AnimGraphNode_TransitionResult_89; // 0x1148(0x28)
	None AnimGraphNode_TransitionResult_88; // 0x1170(0x28)
	None AnimGraphNode_TransitionResult_87; // 0x1198(0x28)
	None AnimGraphNode_TransitionResult_86; // 0x11c0(0x28)
	None AnimGraphNode_TransitionResult_85; // 0x11e8(0x28)
	None AnimGraphNode_TransitionResult_84; // 0x1210(0x28)
	None AnimGraphNode_TransitionResult_83; // 0x1238(0x28)
	None AnimGraphNode_TransitionResult_82; // 0x1260(0x28)
	None AnimGraphNode_SequencePlayer_345; // 0x1288(0x78)
	None AnimGraphNode_StateResult_61; // 0x1300(0x30)
	None AnimGraphNode_TransitionResult_81; // 0x1330(0x28)
	None AnimGraphNode_SequencePlayer_344; // 0x1358(0x78)
	None AnimGraphNode_StateResult_60; // 0x13d0(0x30)
	None AnimGraphNode_SequencePlayer_343; // 0x1400(0x78)
	None AnimGraphNode_StateResult_59; // 0x1478(0x30)
	None AnimGraphNode_StateMachine_19; // 0x14a8(0xb0)
	None AnimGraphNode_StateResult_58; // 0x1558(0x30)
	None AnimGraphNode_TransitionResult_80; // 0x1588(0x28)
	None AnimGraphNode_TransitionResult_79; // 0x15b0(0x28)
	None AnimGraphNode_TransitionResult_78; // 0x15d8(0x28)
	None AnimGraphNode_TransitionResult_77; // 0x1600(0x28)
	None AnimGraphNode_SequencePlayer_342; // 0x1628(0x78)
	None AnimGraphNode_StateResult_57; // 0x16a0(0x30)
	None AnimGraphNode_BlendSpacePlayer_116; // 0x16d0(0xe0)
	None AnimGraphNode_StateResult_56; // 0x17b0(0x30)
	None AnimGraphNode_SequencePlayer_341; // 0x17e0(0x78)
	None AnimGraphNode_StateResult_55; // 0x1858(0x30)
	None AnimGraphNode_StateMachine_18; // 0x1888(0xb0)
	None AnimGraphNode_StateResult_54; // 0x1938(0x30)
	None AnimGraphNode_TransitionResult_76; // 0x1968(0x28)
	None AnimGraphNode_TransitionResult_75; // 0x1990(0x28)
	None AnimGraphNode_SequencePlayer_340; // 0x19b8(0x78)
	None AnimGraphNode_BlendListByBool_83; // 0x1a30(0xa0)
	None AnimGraphNode_BlendListByEnum_69; // 0x1ad0(0xb0)
	None AnimGraphNode_BlendSpacePlayer_115; // 0x1b80(0xe0)
	None AnimGraphNode_BlendSpacePlayer_114; // 0x1c60(0xe0)
	None AnimGraphNode_LayeredBoneBlend_97; // 0x1d40(0xc0)
	None AnimGraphNode_SequencePlayer_339; // 0x1e00(0x78)
	None AnimGraphNode_StateResult_53; // 0x1e78(0x30)
	None AnimGraphNode_SequencePlayer_338; // 0x1ea8(0x78)
	None AnimGraphNode_BlendListByBool_82; // 0x1f20(0xa0)
	None AnimGraphNode_BlendListByEnum_68; // 0x1fc0(0xb0)
	None AnimGraphNode_BlendSpacePlayer_113; // 0x2070(0xe0)
	None AnimGraphNode_BlendSpacePlayer_112; // 0x2150(0xe0)
	None AnimGraphNode_LayeredBoneBlend_96; // 0x2230(0xc0)
	None AnimGraphNode_SequencePlayer_337; // 0x22f0(0x78)
	None AnimGraphNode_StateResult_52; // 0x2368(0x30)
	None AnimGraphNode_SequencePlayer_336; // 0x2398(0x78)
	None AnimGraphNode_BlendListByBool_81; // 0x2410(0xa0)
	None AnimGraphNode_BlendListByEnum_67; // 0x24b0(0xb0)
	None AnimGraphNode_BlendSpacePlayer_111; // 0x2560(0xe0)
	None AnimGraphNode_BlendSpacePlayer_110; // 0x2640(0xe0)
	None AnimGraphNode_LayeredBoneBlend_95; // 0x2720(0xc0)
	None AnimGraphNode_SequencePlayer_335; // 0x27e0(0x78)
	None AnimGraphNode_StateResult_51; // 0x2858(0x30)
	None AnimGraphNode_StateMachine_17; // 0x2888(0xb0)
	None AnimGraphNode_StateResult_50; // 0x2938(0x30)
	None AnimGraphNode_TransitionResult_74; // 0x2968(0x28)
	None AnimGraphNode_TransitionResult_73; // 0x2990(0x28)
	None AnimGraphNode_TransitionResult_72; // 0x29b8(0x28)
	None AnimGraphNode_TransitionResult_71; // 0x29e0(0x28)
	None AnimGraphNode_TransitionResult_70; // 0x2a08(0x28)
	None AnimGraphNode_TransitionResult_69; // 0x2a30(0x28)
	None AnimGraphNode_TransitionResult_68; // 0x2a58(0x28)
	None AnimGraphNode_TransitionResult_67; // 0x2a80(0x28)
	None AnimGraphNode_TransitionResult_66; // 0x2aa8(0x28)
	None AnimGraphNode_BlendListByBool_80; // 0x2ad0(0xa0)
	None AnimGraphNode_SequencePlayer_334; // 0x2b70(0x78)
	None AnimGraphNode_BlendListByBool_79; // 0x2be8(0xa0)
	None AnimGraphNode_SequencePlayer_333; // 0x2c88(0x78)
	None AnimGraphNode_LayeredBoneBlend_94; // 0x2d00(0xc0)
	None AnimGraphNode_SequencePlayer_332; // 0x2dc0(0x78)
	None AnimGraphNode_BlendListByEnum_66; // 0x2e38(0xb0)
	None AnimGraphNode_SequencePlayer_331; // 0x2ee8(0x78)
	None AnimGraphNode_StateResult_49; // 0x2f60(0x30)
	None AnimGraphNode_BlendListByBool_78; // 0x2f90(0xa0)
	None AnimGraphNode_SequencePlayer_330; // 0x3030(0x78)
	None AnimGraphNode_SequencePlayer_329; // 0x30a8(0x78)
	None AnimGraphNode_LayeredBoneBlend_93; // 0x3120(0xc0)
	None AnimGraphNode_BlendListByBool_77; // 0x31e0(0xa0)
	None AnimGraphNode_BlendListByBool_76; // 0x3280(0xa0)
	None AnimGraphNode_SequencePlayer_328; // 0x3320(0x78)
	None AnimGraphNode_SequencePlayer_327; // 0x3398(0x78)
	None AnimGraphNode_SequencePlayer_326; // 0x3410(0x78)
	None AnimGraphNode_BlendListByEnum_65; // 0x3488(0xb0)
	None AnimGraphNode_StateResult_48; // 0x3538(0x30)
	None AnimGraphNode_BlendSpacePlayer_109; // 0x3568(0xe0)
	None AnimGraphNode_TransitionResult_65; // 0x3648(0x28)
	None AnimGraphNode_TransitionResult_64; // 0x3670(0x28)
	None AnimGraphNode_TransitionResult_63; // 0x3698(0x28)
	None AnimGraphNode_TransitionResult_62; // 0x36c0(0x28)
	None AnimGraphNode_TransitionResult_61; // 0x36e8(0x28)
	None AnimGraphNode_TransitionResult_60; // 0x3710(0x28)
	None AnimGraphNode_SequencePlayer_325; // 0x3738(0x78)
	None AnimGraphNode_TwoWayBlend_24; // 0x37b0(0xc8)
	None AnimGraphNode_SequencePlayer_324; // 0x3878(0x78)
	None AnimGraphNode_StateResult_47; // 0x38f0(0x30)
	None AnimGraphNode_TwoWayBlend_23; // 0x3920(0xc8)
	None AnimGraphNode_SequencePlayer_323; // 0x39e8(0x78)
	None AnimGraphNode_SequencePlayer_322; // 0x3a60(0x78)
	None AnimGraphNode_StateResult_46; // 0x3ad8(0x30)
	None AnimGraphNode_SequencePlayer_321; // 0x3b08(0x78)
	None AnimGraphNode_StateResult_45; // 0x3b80(0x30)
	None AnimGraphNode_StateMachine_16; // 0x3bb0(0xb0)
	None AnimGraphNode_BlendListByBool_75; // 0x3c60(0xa0)
	None AnimGraphNode_StateResult_44; // 0x3d00(0x30)
	None AnimGraphNode_SequencePlayer_320; // 0x3d30(0x78)
	None AnimGraphNode_StateResult_43; // 0x3da8(0x30)
	None AnimGraphNode_StateMachine_15; // 0x3dd8(0xb0)
	None AnimGraphNode_StateResult_42; // 0x3e88(0x30)
	None AnimGraphNode_SequencePlayer_319; // 0x3eb8(0x78)
	None AnimGraphNode_StateResult_41; // 0x3f30(0x30)
	None AnimGraphNode_SequencePlayer_318; // 0x3f60(0x78)
	None AnimGraphNode_BlendListByBool_74; // 0x3fd8(0xa0)
	None AnimGraphNode_BlendSpacePlayer_108; // 0x4078(0xe0)
	None AnimGraphNode_StateResult_40; // 0x4158(0x30)
	None AnimGraphNode_TransitionResult_59; // 0x4188(0x28)
	None AnimGraphNode_ApplyAdditive_17; // 0x41b0(0xc8)
	None AnimGraphNode_BlendSpacePlayer_107; // 0x4278(0xe0)
	None AnimGraphNode_BlendSpacePlayer_106; // 0x4358(0xe0)
	None AnimGraphNode_BlendListByBool_73; // 0x4438(0xa0)
	None AnimGraphNode_BlendSpacePlayer_105; // 0x44d8(0xe0)
	None AnimGraphNode_StateResult_39; // 0x45b8(0x30)
	None AnimGraphNode_TransitionResult_58; // 0x45e8(0x28)
	None AnimGraphNode_TransitionResult_57; // 0x4610(0x28)
	None AnimGraphNode_TransitionResult_56; // 0x4638(0x28)
	None AnimGraphNode_TransitionResult_55; // 0x4660(0x28)
	None AnimGraphNode_BlendSpacePlayer_104; // 0x4688(0xe0)
	None AnimGraphNode_StateResult_38; // 0x4768(0x30)
	None AnimGraphNode_BlendSpacePlayer_103; // 0x4798(0xe0)
	None AnimGraphNode_StateResult_37; // 0x4878(0x30)
	None AnimGraphNode_StateMachine_14; // 0x48a8(0xb0)
	None AnimGraphNode_StateResult_36; // 0x4958(0x30)
	None AnimGraphNode_TransitionResult_54; // 0x4988(0x28)
	None AnimGraphNode_TransitionResult_53; // 0x49b0(0x28)
	None AnimGraphNode_SequencePlayer_317; // 0x49d8(0x78)
	None AnimGraphNode_StateResult_35; // 0x4a50(0x30)
	None AnimGraphNode_SequencePlayer_316; // 0x4a80(0x78)
	None AnimGraphNode_StateResult_34; // 0x4af8(0x30)
	None AnimGraphNode_StateMachine_13; // 0x4b28(0xb0)
	None AnimGraphNode_StateResult_33; // 0x4bd8(0x30)
	None AnimGraphNode_StateMachine_12; // 0x4c08(0xb0)
	None AnimGraphNode_StateResult_32; // 0x4cb8(0x30)
	None AnimGraphNode_SequencePlayer_315; // 0x4ce8(0x78)
	None AnimGraphNode_SequencePlayer_314; // 0x4d60(0x78)
	None AnimGraphNode_LayeredBoneBlend_92; // 0x4dd8(0xc0)
	None AnimGraphNode_SequencePlayer_313; // 0x4e98(0x78)
	None AnimGraphNode_SequencePlayer_312; // 0x4f10(0x78)
	None AnimGraphNode_SequencePlayer_311; // 0x4f88(0x78)
	None AnimGraphNode_BlendListByEnum_64; // 0x5000(0xb0)
	None AnimGraphNode_SequencePlayer_310; // 0x50b0(0x78)
	None AnimGraphNode_StateResult_31; // 0x5128(0x30)
	None AnimGraphNode_SequencePlayer_309; // 0x5158(0x78)
	None AnimGraphNode_LayeredBoneBlend_91; // 0x51d0(0xc0)
	None AnimGraphNode_SequencePlayer_308; // 0x5290(0x78)
	None AnimGraphNode_LayeredBoneBlend_90; // 0x5308(0xc0)
	None AnimGraphNode_SequencePlayer_307; // 0x53c8(0x78)
	None AnimGraphNode_SequencePlayer_306; // 0x5440(0x78)
	None AnimGraphNode_SequencePlayer_305; // 0x54b8(0x78)
	None AnimGraphNode_LayeredBoneBlend_89; // 0x5530(0xc0)
	None AnimGraphNode_SequenceEvaluator_6; // 0x55f0(0x48)
	None AnimGraphNode_SequencePlayer_304; // 0x5638(0x78)
	None AnimGraphNode_SequencePlayer_303; // 0x56b0(0x78)
	None AnimGraphNode_SequencePlayer_302; // 0x5728(0x78)
	None AnimGraphNode_SequencePlayer_301; // 0x57a0(0x78)
	None AnimGraphNode_BlendListByEnum_63; // 0x5818(0xb0)
	None AnimGraphNode_SequencePlayer_300; // 0x58c8(0x78)
	None AnimGraphNode_SequencePlayer_299; // 0x5940(0x78)
	None AnimGraphNode_SequencePlayer_298; // 0x59b8(0x78)
	None AnimGraphNode_BlendListByBool_72; // 0x5a30(0xa0)
	None AnimGraphNode_SequenceEvaluator_5; // 0x5ad0(0x48)
	None AnimGraphNode_BlendListByBool_71; // 0x5b18(0xa0)
	None AnimGraphNode_SequencePlayer_297; // 0x5bb8(0x78)
	None AnimGraphNode_LayeredBoneBlend_88; // 0x5c30(0xc0)
	None AnimGraphNode_SequencePlayer_296; // 0x5cf0(0x78)
	None AnimGraphNode_SequencePlayer_295; // 0x5d68(0x78)
	None AnimGraphNode_SequencePlayer_294; // 0x5de0(0x78)
	None AnimGraphNode_SequencePlayer_293; // 0x5e58(0x78)
	None AnimGraphNode_LayeredBoneBlend_87; // 0x5ed0(0xc0)
	None AnimGraphNode_BlendListByBool_70; // 0x5f90(0xa0)
	None AnimGraphNode_SequenceEvaluator_4; // 0x6030(0x48)
	None AnimGraphNode_SequenceEvaluator_3; // 0x6078(0x48)
	None AnimGraphNode_SequenceEvaluator_2; // 0x60c0(0x48)
	None AnimGraphNode_BlendListByEnum_62; // 0x6108(0xb0)
	None AnimGraphNode_SequencePlayer_292; // 0x61b8(0x78)
	None AnimGraphNode_Slot_34; // 0x6230(0x48)
	None AnimGraphNode_SequencePlayer_291; // 0x6278(0x78)
	None AnimGraphNode_LayeredBoneBlend_86; // 0x62f0(0xc0)
	None AnimGraphNode_BlendListByBool_69; // 0x63b0(0xa0)
	None AnimGraphNode_BlendListByEnum_61; // 0x6450(0xb0)
	None AnimGraphNode_SequencePlayer_290; // 0x6500(0x78)
	None AnimGraphNode_BlendListByBool_68; // 0x6578(0xa0)
	None AnimGraphNode_BlendSpacePlayer_102; // 0x6618(0xe0)
	None AnimGraphNode_ApplyAdditive_16; // 0x66f8(0xc8)
	None AnimGraphNode_StateResult_30; // 0x67c0(0x30)
	None AnimGraphNode_TransitionResult_52; // 0x67f0(0x28)
	None AnimGraphNode_BlendListByEnum_60; // 0x6818(0xb0)
	None AnimGraphNode_BlendListByEnum_59; // 0x68c8(0xb0)
	None AnimGraphNode_UseCachedPose_60; // 0x6978(0x28)
	None AnimGraphNode_LocalRefPose; // 0x69a0(0x18)
	None AnimGraphNode_Slot_33; // 0x69b8(0x48)
	None AnimGraphNode_LayeredBoneBlend_85; // 0x6a00(0xc0)
	None AnimGraphNode_SequencePlayer_289; // 0x6ac0(0x78)
	None AnimGraphNode_BlendListByBool_67; // 0x6b38(0xa0)
	None AnimGraphNode_TwoWayBlend_22; // 0x6bd8(0xc8)
	None AnimGraphNode_SequencePlayer_288; // 0x6ca0(0x78)
	None AnimGraphNode_SequencePlayer_287; // 0x6d18(0x78)
	None AnimGraphNode_SequencePlayer_286; // 0x6d90(0x78)
	None AnimGraphNode_LayeredBoneBlend_84; // 0x6e08(0xc0)
	None AnimGraphNode_SequencePlayer_285; // 0x6ec8(0x78)
	None AnimGraphNode_StateResult_29; // 0x6f40(0x30)
	None AnimGraphNode_StateMachine_11; // 0x6f70(0xb0)
	None AnimGraphNode_SaveCachedPose_26; // 0x7020(0xb8)
	None AnimGraphNode_LayeredBoneBlend_83; // 0x70d8(0xc0)
	None AnimGraphNode_RotationOffsetBlendSpace_9; // 0x7198(0x188)
	None AnimGraphNode_BlendListByBool_66; // 0x7320(0xa0)
	None AnimGraphNode_RotationOffsetBlendSpace_8; // 0x73c0(0x188)
	None AnimGraphNode_ComponentToLocalSpace_7; // 0x7548(0x20)
	None AnimGraphNode_LocalToComponentSpace_7; // 0x7568(0x20)
	None AnimGraphNode_ModifyBone_3; // 0x7588(0x108)
	None AnimGraphNode_RotationOffsetBlendSpace_7; // 0x7690(0x188)
	None AnimGraphNode_BlendListByEnum_58; // 0x7818(0xb0)
	None AnimGraphNode_BlendListByBool_65; // 0x78c8(0xa0)
	None AnimGraphNode_Slot_32; // 0x7968(0x48)
	None AnimGraphNode_BlendListByBool_64; // 0x79b0(0xa0)
	None AnimGraphNode_SaveCachedPose_25; // 0x7a50(0xb8)
	None AnimGraphNode_Slot_31; // 0x7b08(0x48)
	None AnimGraphNode_SaveCachedPose_24; // 0x7b50(0xb8)
	None AnimGraphNode_SaveCachedPose_23; // 0x7c08(0xb8)
	None AnimGraphNode_UseCachedPose_59; // 0x7cc0(0x28)
	None AnimGraphNode_UseCachedPose_58; // 0x7ce8(0x28)
	None AnimGraphNode_UseCachedPose_57; // 0x7d10(0x28)
	None AnimGraphNode_UseCachedPose_56; // 0x7d38(0x28)
	None AnimGraphNode_LayeredBoneBlend_82; // 0x7d60(0xc0)
	None AnimGraphNode_UseCachedPose_55; // 0x7e20(0x28)
	None AnimGraphNode_BlendListByBool_63; // 0x7e48(0xa0)
	None AnimGraphNode_Slot_30; // 0x7ee8(0x48)
	None AnimGraphNode_UseCachedPose_54; // 0x7f30(0x28)
	None AnimGraphNode_UseCachedPose_53; // 0x7f58(0x28)
	None AnimGraphNode_RotationOffsetBlendSpace_6; // 0x7f80(0x188)
	None AnimGraphNode_UseCachedPose_52; // 0x8108(0x28)
	None AnimGraphNode_BlendListByBool_62; // 0x8130(0xa0)
	None AnimGraphNode_BlendListByBool_61; // 0x81d0(0xa0)
	None AnimGraphNode_LayeredBoneBlend_81; // 0x8270(0xc0)
	None AnimGraphNode_UseCachedPose_51; // 0x8330(0x28)
	None AnimGraphNode_RotationOffsetBlendSpace_5; // 0x8358(0x188)
	None AnimGraphNode_UseCachedPose_50; // 0x84e0(0x28)
	None AnimGraphNode_RotationOffsetBlendSpace_4; // 0x8508(0x188)
	None AnimGraphNode_BlendListByBool_60; // 0x8690(0xa0)
	None AnimGraphNode_Slot_29; // 0x8730(0x48)
	None AnimGraphNode_LayeredBoneBlend_80; // 0x8778(0xc0)
	None AnimGraphNode_Slot_28; // 0x8838(0x48)
	None AnimGraphNode_BlendListByBool_59; // 0x8880(0xa0)
	None AnimGraphNode_Slot_27; // 0x8920(0x48)
	None AnimGraphNode_LayeredBoneBlend_79; // 0x8968(0xc0)
	None AnimGraphNode_Slot_26; // 0x8a28(0x48)
	None AnimGraphNode_Slot_25; // 0x8a70(0x48)
	None AnimGraphNode_UseCachedPose_49; // 0x8ab8(0x28)
	None AnimGraphNode_ApplyAdditive_15; // 0x8ae0(0xc8)
	None AnimGraphNode_SequencePlayer_284; // 0x8ba8(0x78)
	None AnimGraphNode_Slot_24; // 0x8c20(0x48)
	None AnimGraphNode_ApplyAdditive_14; // 0x8c68(0xc8)
	None AnimGraphNode_RotationOffsetBlendSpace_3; // 0x8d30(0x188)
	None AnimGraphNode_BlendListByBool_58; // 0x8eb8(0xa0)
	None AnimGraphNode_RotationOffsetBlendSpace_2; // 0x8f58(0x188)
	None AnimGraphNode_UseCachedPose_48; // 0x90e0(0x28)
	None AnimGraphNode_LayeredBoneBlend_78; // 0x9108(0xc0)
	None AnimGraphNode_LayeredBoneBlend_77; // 0x91c8(0xc0)
	None AnimGraphNode_SaveCachedPose_22; // 0x9288(0xb8)
	None AnimGraphNode_UseCachedPose_47; // 0x9340(0x28)
	None AnimGraphNode_UseCachedPose_46; // 0x9368(0x28)
	None AnimGraphNode_UseCachedPose_45; // 0x9390(0x28)
	None AnimGraphNode_BlendListByBool_57; // 0x93b8(0xa0)
	None AnimGraphNode_Slot_23; // 0x9458(0x48)
	None AnimGraphNode_BlendSpacePlayer_101; // 0x94a0(0xe0)
	None AnimGraphNode_SequenceEvaluator; // 0x9580(0x48)
	None AnimGraphNode_LocalToComponentSpace_6; // 0x95c8(0x20)
	None AnimGraphNode_ModifyBone_2; // 0x95e8(0x108)
	None AnimGraphNode_ComponentToLocalSpace_6; // 0x96f0(0x20)
	None AnimGraphNode_BlendListByBool_56; // 0x9710(0xa0)
	None AnimGraphNode_IdentityPose_7; // 0x97b0(0x18)
	None AnimGraphNode_LayeredBoneBlend_76; // 0x97c8(0xc0)
	None AnimGraphNode_SequencePlayer_283; // 0x9888(0x78)
	None AnimGraphNode_LayeredBoneBlend_75; // 0x9900(0xc0)
	None AnimGraphNode_IdentityPose_6; // 0x99c0(0x18)
	None AnimGraphNode_SequencePlayer_282; // 0x99d8(0x78)
	None AnimGraphNode_LayeredBoneBlend_74; // 0x9a50(0xc0)
	None AnimGraphNode_IdentityPose_5; // 0x9b10(0x18)
	None AnimGraphNode_BlendListByEnum_57; // 0x9b28(0xb0)
	None AnimGraphNode_SequencePlayer_281; // 0x9bd8(0x78)
	None AnimGraphNode_LayeredBoneBlend_73; // 0x9c50(0xc0)
	None AnimGraphNode_IdentityPose_4; // 0x9d10(0x18)
	None AnimGraphNode_StateResult_28; // 0x9d28(0x30)
	None AnimGraphNode_StateMachine_10; // 0x9d58(0xb0)
	None AnimGraphNode_SaveCachedPose_21; // 0x9e08(0xb8)
	None AnimGraphNode_ApplyAdditive_13; // 0x9ec0(0xc8)
	None AnimGraphNode_UseCachedPose_44; // 0x9f88(0x28)
	None AnimGraphNode_SaveCachedPose_20; // 0x9fb0(0xb8)
	None AnimGraphNode_UseCachedPose_43; // 0xa068(0x28)
	None AnimGraphNode_BlendListByBool_55; // 0xa090(0xa0)
	None AnimGraphNode_Slot_22; // 0xa130(0x48)
	None AnimGraphNode_SequencePlayer_280; // 0xa178(0x78)
	None AnimGraphNode_BlendListByBool_54; // 0xa1f0(0xa0)
	None AnimGraphNode_BlendListByBool_53; // 0xa290(0xa0)
	None AnimGraphNode_SequencePlayer_279; // 0xa330(0x78)
	None AnimGraphNode_LocalToComponentSpace_5; // 0xa3a8(0x20)
	None AnimGraphNode_ModifyBone; // 0xa3c8(0x108)
	None AnimGraphNode_ComponentToLocalSpace_5; // 0xa4d0(0x20)
	None AnimGraphNode_BlendListByBool_52; // 0xa4f0(0xa0)
	None AnimGraphNode_Slot_21; // 0xa590(0x48)
	None AnimGraphNode_Slot_20; // 0xa5d8(0x48)
	None AnimGraphNode_Slot_19; // 0xa620(0x48)
	None AnimGraphNode_IdentityPose_3; // 0xa668(0x18)
	None AnimGraphNode_SequencePlayer_278; // 0xa680(0x78)
	None AnimGraphNode_BlendListByBool_51; // 0xa6f8(0xa0)
	None AnimGraphNode_BlendListByBool_50; // 0xa798(0xa0)
	None AnimGraphNode_SequencePlayer_277; // 0xa838(0x78)
	None AnimGraphNode_StateResult_27; // 0xa8b0(0x30)
	None AnimGraphNode_StateMachine_9; // 0xa8e0(0xb0)
	None AnimGraphNode_SaveCachedPose_19; // 0xa990(0xb8)
	None AnimGraphNode_UseCachedPose_42; // 0xaa48(0x28)
	None AnimGraphNode_UseCachedPose_41; // 0xaa70(0x28)
	None AnimGraphNode_BlendListByBool_49; // 0xaa98(0xa0)
	None AnimGraphNode_TwoWayBlend_21; // 0xab38(0xc8)
	None AnimGraphNode_Slot_18; // 0xac00(0x48)
	None AnimGraphNode_BlendListByBool_48; // 0xac48(0xa0)
	None AnimGraphNode_Slot_17; // 0xace8(0x48)
	None AnimGraphNode_LayeredBoneBlend_72; // 0xad30(0xc0)
	None AnimGraphNode_UseCachedPose_40; // 0xadf0(0x28)
	None AnimGraphNode_UseCachedPose_39; // 0xae18(0x28)
	None AnimGraphNode_SaveCachedPose_18; // 0xae40(0xb8)
	None AnimGraphNode_UseCachedPose_38; // 0xaef8(0x28)
	None AnimGraphNode_UseCachedPose_37; // 0xaf20(0x28)
	None AnimGraphNode_Slot_16; // 0xaf48(0x48)
	None AnimGraphNode_LayeredBoneBlend_71; // 0xaf90(0xc0)
	None AnimGraphNode_Slot_15; // 0xb050(0x48)
	None AnimGraphNode_UseCachedPose_36; // 0xb098(0x28)
	None AnimGraphNode_SequencePlayer_276; // 0xb0c0(0x78)
	None AnimGraphNode_SequencePlayer_275; // 0xb138(0x78)
	None AnimGraphNode_BlendListByInt_20; // 0xb1b0(0xa0)
	None AnimGraphNode_SequencePlayer_274; // 0xb250(0x78)
	None AnimGraphNode_SequencePlayer_273; // 0xb2c8(0x78)
	None AnimGraphNode_SequencePlayer_272; // 0xb340(0x78)
	None AnimGraphNode_BlendListByInt_19; // 0xb3b8(0xa0)
	None AnimGraphNode_SequencePlayer_271; // 0xb458(0x78)
	None AnimGraphNode_SequencePlayer_270; // 0xb4d0(0x78)
	None AnimGraphNode_SequencePlayer_269; // 0xb548(0x78)
	None AnimGraphNode_BlendListByInt_18; // 0xb5c0(0xa0)
	None AnimGraphNode_SequencePlayer_268; // 0xb660(0x78)
	None AnimGraphNode_SequencePlayer_267; // 0xb6d8(0x78)
	None AnimGraphNode_SequencePlayer_266; // 0xb750(0x78)
	None AnimGraphNode_BlendListByInt_17; // 0xb7c8(0xa0)
	None AnimGraphNode_SequencePlayer_265; // 0xb868(0x78)
	None AnimGraphNode_BlendListByBool_47; // 0xb8e0(0xa0)
	None AnimGraphNode_BlendListByBool_46; // 0xb980(0xa0)
	None AnimGraphNode_BlendListByBool_45; // 0xba20(0xa0)
	None AnimGraphNode_StateResult_26; // 0xbac0(0x30)
	None AnimGraphNode_StateMachine_8; // 0xbaf0(0xb0)
	None AnimGraphNode_SaveCachedPose_17; // 0xbba0(0xb8)
	None AnimGraphNode_ApplyAdditive_12; // 0xbc58(0xc8)
	None AnimGraphNode_UseCachedPose_35; // 0xbd20(0x28)
	None AnimGraphNode_BlendListByBool_44; // 0xbd48(0xa0)
	None AnimGraphNode_SequencePlayer_264; // 0xbde8(0x78)
	None AnimGraphNode_SequencePlayer_263; // 0xbe60(0x78)
	None AnimGraphNode_SequencePlayer_262; // 0xbed8(0x78)
	None AnimGraphNode_SequencePlayer_261; // 0xbf50(0x78)
	None AnimGraphNode_BlendListByEnum_56; // 0xbfc8(0xb0)
	None AnimGraphNode_StateResult_25; // 0xc078(0x30)
	None AnimGraphNode_StateMachine_7; // 0xc0a8(0xb0)
	None AnimGraphNode_SaveCachedPose_16; // 0xc158(0xb8)
	None AnimGraphNode_LayeredBoneBlend_70; // 0xc210(0xc0)
	None AnimGraphNode_UseCachedPose_34; // 0xc2d0(0x28)
	None AnimGraphNode_BlendListByBool_43; // 0xc2f8(0xa0)
	None AnimGraphNode_BlendListByBool_42; // 0xc398(0xa0)
	None AnimGraphNode_SequencePlayer_260; // 0xc438(0x78)
	None AnimGraphNode_SequencePlayer_259; // 0xc4b0(0x78)
	None AnimGraphNode_BlendListByBool_41; // 0xc528(0xa0)
	None AnimGraphNode_SequencePlayer_258; // 0xc5c8(0x78)
	None AnimGraphNode_SequencePlayer_257; // 0xc640(0x78)
	None AnimGraphNode_StateResult_24; // 0xc6b8(0x30)
	None AnimGraphNode_StateMachine_6; // 0xc6e8(0xb0)
	None AnimGraphNode_SaveCachedPose_15; // 0xc798(0xb8)
	None AnimGraphNode_BlendListByBool_40; // 0xc850(0xa0)
	None AnimGraphNode_BlendListByBool_39; // 0xc8f0(0xa0)
	None AnimGraphNode_UseCachedPose_33; // 0xc990(0x28)
	None AnimGraphNode_SaveCachedPose_14; // 0xc9b8(0xb8)
	None AnimGraphNode_UseCachedPose_32; // 0xca70(0x28)
	None AnimGraphNode_Slot_14; // 0xca98(0x48)
	None AnimGraphNode_LayeredBoneBlend_69; // 0xcae0(0xc0)
	None AnimGraphNode_UseCachedPose_31; // 0xcba0(0x28)
	None AnimGraphNode_TwoBoneIK_11; // 0xcbd0(0x1e0)
	None AnimGraphNode_TwoBoneIK_10; // 0xcdb0(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_4; // 0xcf90(0x20)
	None AnimGraphNode_ComponentToLocalSpace_4; // 0xcfb0(0x20)
	None AnimGraphNode_SaveCachedPose_13; // 0xcfd0(0xb8)
	None AnimGraphNode_UseCachedPose_30; // 0xd088(0x28)
	None AnimGraphNode_UseCachedPose_29; // 0xd0b0(0x28)
	None AnimGraphNode_TwoBoneIK_9; // 0xd0e0(0x1e0)
	None AnimGraphNode_TwoBoneIK_8; // 0xd2c0(0x1e0)
	None AnimGraphNode_TwoBoneIK_7; // 0xd4a0(0x1e0)
	None AnimGraphNode_TwoBoneIK_6; // 0xd680(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_3; // 0xd860(0x20)
	None AnimGraphNode_ComponentToLocalSpace_3; // 0xd880(0x20)
	None AnimGraphNode_TwoBoneIK_5; // 0xd8a0(0x1e0)
	None AnimGraphNode_TwoBoneIK_4; // 0xda80(0x1e0)
	None AnimGraphNode_TwoBoneIK_3; // 0xdc60(0x1e0)
	None AnimGraphNode_TwoBoneIK_2; // 0xde40(0x1e0)
	None AnimGraphNode_LocalToComponentSpace_2; // 0xe020(0x20)
	None AnimGraphNode_ComponentToLocalSpace_2; // 0xe040(0x20)
	None AnimGraphNode_UseCachedPose_28; // 0xe060(0x28)
	None AnimGraphNode_UseCachedPose_27; // 0xe088(0x28)
	None AnimGraphNode_UseCachedPose_26; // 0xe0b0(0x28)
	None AnimGraphNode_Slot_13; // 0xe0d8(0x48)
	None AnimGraphNode_BlendListByEnum_55; // 0xe120(0xb0)
	None AnimGraphNode_BlendListByBool_38; // 0xe1d0(0xa0)
	None AnimGraphNode_RotationOffsetBlendSpace; // 0xe270(0x188)
	None AnimGraphNode_UseCachedPose_25; // 0xe3f8(0x28)
	None AnimGraphNode_SequencePlayer_256; // 0xe420(0x78)
	None AnimGraphNode_BlendListByBool_37; // 0xe498(0xa0)
	None AnimGraphNode_Slot_12; // 0xe538(0x48)
	None AnimGraphNode_Slot_11; // 0xe580(0x48)
	None AnimGraphNode_BlendListByBool_36; // 0xe5c8(0xa0)
	None AnimGraphNode_SequencePlayer_255; // 0xe668(0x78)
	None AnimGraphNode_SequencePlayer_254; // 0xe6e0(0x78)
	None AnimGraphNode_BlendListByBool_35; // 0xe758(0xa0)
	None AnimGraphNode_LayeredBoneBlend_68; // 0xe7f8(0xc0)
	None AnimGraphNode_Slot_10; // 0xe8b8(0x48)
	None AnimGraphNode_BlendListByBool_34; // 0xe900(0xa0)
	None AnimGraphNode_LayeredBoneBlend_67; // 0xe9a0(0xc0)
	None AnimGraphNode_Slot_9; // 0xea60(0x48)
	None AnimGraphNode_BlendListByBool_33; // 0xeaa8(0xa0)
	None AnimGraphNode_ApplyAdditive_11; // 0xeb48(0xc8)
	None AnimGraphNode_UseCachedPose_24; // 0xec10(0x28)
	None AnimGraphNode_TransitionResult_51; // 0xec38(0x28)
	None AnimGraphNode_TransitionResult_50; // 0xec60(0x28)
	None AnimGraphNode_TransitionResult_49; // 0xec88(0x28)
	None AnimGraphNode_TransitionResult_48; // 0xecb0(0x28)
	None AnimGraphNode_TransitionResult_47; // 0xecd8(0x28)
	None AnimGraphNode_TransitionResult_46; // 0xed00(0x28)
	None AnimGraphNode_TransitionResult_45; // 0xed28(0x28)
	None AnimGraphNode_TransitionResult_44; // 0xed50(0x28)
	None AnimGraphNode_TransitionResult_43; // 0xed78(0x28)
	None AnimGraphNode_TransitionResult_42; // 0xeda0(0x28)
	None AnimGraphNode_TransitionResult_41; // 0xedc8(0x28)
	None AnimGraphNode_TransitionResult_40; // 0xedf0(0x28)
	None AnimGraphNode_TransitionResult_39; // 0xee18(0x28)
	None AnimGraphNode_TransitionResult_38; // 0xee40(0x28)
	None AnimGraphNode_TransitionResult_37; // 0xee68(0x28)
	None AnimGraphNode_TransitionResult_36; // 0xee90(0x28)
	None AnimGraphNode_TransitionResult_35; // 0xeeb8(0x28)
	None AnimGraphNode_TransitionResult_34; // 0xeee0(0x28)
	None AnimGraphNode_TransitionResult_33; // 0xef08(0x28)
	None AnimGraphNode_TransitionResult_32; // 0xef30(0x28)
	None AnimGraphNode_TransitionResult_31; // 0xef58(0x28)
	None AnimGraphNode_TransitionResult_30; // 0xef80(0x28)
	None AnimGraphNode_TransitionResult_29; // 0xefa8(0x28)
	None AnimGraphNode_TransitionResult_28; // 0xefd0(0x28)
	None AnimGraphNode_TransitionResult_27; // 0xeff8(0x28)
	None AnimGraphNode_TransitionResult_26; // 0xf020(0x28)
	None AnimGraphNode_SequencePlayer_253; // 0xf048(0x78)
	None AnimGraphNode_SequencePlayer_252; // 0xf0c0(0x78)
	None AnimGraphNode_TwoWayBlend_20; // 0xf138(0xc8)
	None AnimGraphNode_LayeredBoneBlend_66; // 0xf200(0xc0)
	None AnimGraphNode_BlendSpacePlayer_100; // 0xf2c0(0xe0)
	None AnimGraphNode_SequencePlayer_251; // 0xf3a0(0x78)
	None AnimGraphNode_LayeredBoneBlend_65; // 0xf418(0xc0)
	None AnimGraphNode_BlendSpacePlayer_99; // 0xf4d8(0xe0)
	None AnimGraphNode_SequencePlayer_250; // 0xf5b8(0x78)
	None AnimGraphNode_SequencePlayer_249; // 0xf630(0x78)
	None AnimGraphNode_SequencePlayer_248; // 0xf6a8(0x78)
	None AnimGraphNode_SequencePlayer_247; // 0xf720(0x78)
	None AnimGraphNode_SequencePlayer_246; // 0xf798(0x78)
	None AnimGraphNode_SequencePlayer_245; // 0xf810(0x78)
	None AnimGraphNode_SequencePlayer_244; // 0xf888(0x78)
	None AnimGraphNode_SequencePlayer_243; // 0xf900(0x78)
	None AnimGraphNode_TwoWayBlend_19; // 0xf978(0xc8)
	None AnimGraphNode_SequencePlayer_242; // 0xfa40(0x78)
	None AnimGraphNode_LayeredBoneBlend_64; // 0xfab8(0xc0)
	None AnimGraphNode_BlendSpacePlayer_98; // 0xfb78(0xe0)
	None AnimGraphNode_SequencePlayer_241; // 0xfc58(0x78)
	None AnimGraphNode_LayeredBoneBlend_63; // 0xfcd0(0xc0)
	None AnimGraphNode_BlendSpacePlayer_97; // 0xfd90(0xe0)
	None AnimGraphNode_BlendListByBool_32; // 0xfe70(0xa0)
	None AnimGraphNode_SequencePlayer_240; // 0xff10(0x78)
	None AnimGraphNode_TwoWayBlend_18; // 0xff88(0xc8)
	None AnimGraphNode_BlendSpacePlayer_96; // 0x10050(0xe0)
	None AnimGraphNode_SequencePlayer_239; // 0x10130(0x78)
	None AnimGraphNode_TwoWayBlend_17; // 0x101a8(0xc8)
	None AnimGraphNode_BlendSpacePlayer_95; // 0x10270(0xe0)
	None AnimGraphNode_TwoWayBlend_16; // 0x10350(0xc8)
	None AnimGraphNode_SequencePlayer_238; // 0x10418(0x78)
	None AnimGraphNode_SequencePlayer_237; // 0x10490(0x78)
	None AnimGraphNode_TwoWayBlend_15; // 0x10508(0xc8)
	None AnimGraphNode_SequencePlayer_236; // 0x105d0(0x78)
	None AnimGraphNode_TwoWayBlend_14; // 0x10648(0xc8)
	None AnimGraphNode_SequencePlayer_235; // 0x10710(0x78)
	None AnimGraphNode_TwoWayBlend_13; // 0x10788(0xc8)
	None AnimGraphNode_SequencePlayer_234; // 0x10850(0x78)
	None AnimGraphNode_TwoWayBlend_12; // 0x108c8(0xc8)
	None AnimGraphNode_SequencePlayer_233; // 0x10990(0x78)
	None AnimGraphNode_TwoWayBlend_11; // 0x10a08(0xc8)
	None AnimGraphNode_BlendSpacePlayer_94; // 0x10ad0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_93; // 0x10bb0(0xe0)
	None AnimGraphNode_LayeredBoneBlend_62; // 0x10c90(0xc0)
	None AnimGraphNode_BlendSpacePlayer_92; // 0x10d50(0xe0)
	None AnimGraphNode_BlendListByEnum_54; // 0x10e30(0xb0)
	None AnimGraphNode_BlendSpacePlayer_91; // 0x10ee0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_90; // 0x10fc0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_89; // 0x110a0(0xe0)
	None AnimGraphNode_BlendListByEnum_53; // 0x11180(0xb0)
	None AnimGraphNode_IdentityPose_2; // 0x11230(0x18)
	None AnimGraphNode_ApplyAdditive_10; // 0x11248(0xc8)
	None AnimGraphNode_BlendListByEnum_52; // 0x11310(0xb0)
	None AnimGraphNode_LayeredBoneBlend_61; // 0x113c0(0xc0)
	None AnimGraphNode_BlendListByEnum_51; // 0x11480(0xb0)
	None AnimGraphNode_LayeredBoneBlend_60; // 0x11530(0xc0)
	None AnimGraphNode_BlendSpacePlayer_88; // 0x115f0(0xe0)
	None AnimGraphNode_BlendListByEnum_50; // 0x116d0(0xb0)
	None AnimGraphNode_BlendSpacePlayer_87; // 0x11780(0xe0)
	None AnimGraphNode_BlendSpacePlayer_86; // 0x11860(0xe0)
	None AnimGraphNode_BlendSpacePlayer_85; // 0x11940(0xe0)
	None AnimGraphNode_BlendSpacePlayer_84; // 0x11a20(0xe0)
	None AnimGraphNode_BlendSpacePlayer_83; // 0x11b00(0xe0)
	None AnimGraphNode_ApplyAdditive_9; // 0x11be0(0xc8)
	None AnimGraphNode_ApplyAdditive_8; // 0x11ca8(0xc8)
	None AnimGraphNode_BlendListByBool_31; // 0x11d70(0xa0)
	None AnimGraphNode_StateResult_23; // 0x11e10(0x30)
	None AnimGraphNode_SequencePlayer_232; // 0x11e40(0x78)
	None AnimGraphNode_LayeredBoneBlend_59; // 0x11eb8(0xc0)
	None AnimGraphNode_SequencePlayer_231; // 0x11f78(0x78)
	None AnimGraphNode_SequencePlayer_230; // 0x11ff0(0x78)
	None AnimGraphNode_SequencePlayer_229; // 0x12068(0x78)
	None AnimGraphNode_SequencePlayer_228; // 0x120e0(0x78)
	None AnimGraphNode_LayeredBoneBlend_58; // 0x12158(0xc0)
	None AnimGraphNode_LayeredBoneBlend_57; // 0x12218(0xc0)
	None AnimGraphNode_SequencePlayer_227; // 0x122d8(0x78)
	None AnimGraphNode_SequencePlayer_226; // 0x12350(0x78)
	None AnimGraphNode_SequencePlayer_225; // 0x123c8(0x78)
	None AnimGraphNode_BlendListByEnum_49; // 0x12440(0xb0)
	None AnimGraphNode_SequencePlayer_224; // 0x124f0(0x78)
	None AnimGraphNode_StateResult_22; // 0x12568(0x30)
	None AnimGraphNode_SequencePlayer_223; // 0x12598(0x78)
	None AnimGraphNode_SequencePlayer_222; // 0x12610(0x78)
	None AnimGraphNode_LayeredBoneBlend_56; // 0x12688(0xc0)
	None AnimGraphNode_SequencePlayer_221; // 0x12748(0x78)
	None AnimGraphNode_LayeredBoneBlend_55; // 0x127c0(0xc0)
	None AnimGraphNode_SequencePlayer_220; // 0x12880(0x78)
	None AnimGraphNode_SequencePlayer_219; // 0x128f8(0x78)
	None AnimGraphNode_SequencePlayer_218; // 0x12970(0x78)
	None AnimGraphNode_BlendListByEnum_48; // 0x129e8(0xb0)
	None AnimGraphNode_SequencePlayer_217; // 0x12a98(0x78)
	None AnimGraphNode_StateResult_21; // 0x12b10(0x30)
	None AnimGraphNode_SequencePlayer_216; // 0x12b40(0x78)
	None AnimGraphNode_LayeredBoneBlend_54; // 0x12bb8(0xc0)
	None AnimGraphNode_SequencePlayer_215; // 0x12c78(0x78)
	None AnimGraphNode_SequencePlayer_214; // 0x12cf0(0x78)
	None AnimGraphNode_SequencePlayer_213; // 0x12d68(0x78)
	None AnimGraphNode_LayeredBoneBlend_53; // 0x12de0(0xc0)
	None AnimGraphNode_SequencePlayer_212; // 0x12ea0(0x78)
	None AnimGraphNode_LayeredBoneBlend_52; // 0x12f18(0xc0)
	None AnimGraphNode_SequencePlayer_211; // 0x12fd8(0x78)
	None AnimGraphNode_SequencePlayer_210; // 0x13050(0x78)
	None AnimGraphNode_SequencePlayer_209; // 0x130c8(0x78)
	None AnimGraphNode_BlendListByEnum_47; // 0x13140(0xb0)
	None AnimGraphNode_SequencePlayer_208; // 0x131f0(0x78)
	None AnimGraphNode_StateResult_20; // 0x13268(0x30)
	None AnimGraphNode_StateMachine_5; // 0x13298(0xb0)
	None AnimGraphNode_StateResult_19; // 0x13348(0x30)
	None AnimGraphNode_LayeredBoneBlend_51; // 0x13378(0xc0)
	None AnimGraphNode_SequencePlayer_207; // 0x13438(0x78)
	None AnimGraphNode_SequencePlayer_206; // 0x134b0(0x78)
	None AnimGraphNode_SequencePlayer_205; // 0x13528(0x78)
	None AnimGraphNode_SequencePlayer_204; // 0x135a0(0x78)
	None AnimGraphNode_SequencePlayer_203; // 0x13618(0x78)
	None AnimGraphNode_LayeredBoneBlend_50; // 0x13690(0xc0)
	None AnimGraphNode_LayeredBoneBlend_49; // 0x13750(0xc0)
	None AnimGraphNode_SequencePlayer_202; // 0x13810(0x78)
	None AnimGraphNode_SequencePlayer_201; // 0x13888(0x78)
	None AnimGraphNode_BlendListByEnum_46; // 0x13900(0xb0)
	None AnimGraphNode_SequencePlayer_200; // 0x139b0(0x78)
	None AnimGraphNode_SequencePlayer_199; // 0x13a28(0x78)
	None AnimGraphNode_StateResult_18; // 0x13aa0(0x30)
	None AnimGraphNode_LayeredBoneBlend_48; // 0x13ad0(0xc0)
	None AnimGraphNode_SequencePlayer_198; // 0x13b90(0x78)
	None AnimGraphNode_SequencePlayer_197; // 0x13c08(0x78)
	None AnimGraphNode_SequencePlayer_196; // 0x13c80(0x78)
	None AnimGraphNode_SequencePlayer_195; // 0x13cf8(0x78)
	None AnimGraphNode_LayeredBoneBlend_47; // 0x13d70(0xc0)
	None AnimGraphNode_SequencePlayer_194; // 0x13e30(0x78)
	None AnimGraphNode_LayeredBoneBlend_46; // 0x13ea8(0xc0)
	None AnimGraphNode_SequencePlayer_193; // 0x13f68(0x78)
	None AnimGraphNode_SequencePlayer_192; // 0x13fe0(0x78)
	None AnimGraphNode_BlendListByEnum_45; // 0x14058(0xb0)
	None AnimGraphNode_SequencePlayer_191; // 0x14108(0x78)
	None AnimGraphNode_SequencePlayer_190; // 0x14180(0x78)
	None AnimGraphNode_StateResult_17; // 0x141f8(0x30)
	None AnimGraphNode_SequencePlayer_189; // 0x14228(0x78)
	None AnimGraphNode_LayeredBoneBlend_45; // 0x142a0(0xc0)
	None AnimGraphNode_SequencePlayer_188; // 0x14360(0x78)
	None AnimGraphNode_SequencePlayer_187; // 0x143d8(0x78)
	None AnimGraphNode_SequencePlayer_186; // 0x14450(0x78)
	None AnimGraphNode_SequencePlayer_185; // 0x144c8(0x78)
	None AnimGraphNode_SequencePlayer_184; // 0x14540(0x78)
	None AnimGraphNode_SequencePlayer_183; // 0x145b8(0x78)
	None AnimGraphNode_SequencePlayer_182; // 0x14630(0x78)
	None AnimGraphNode_SequencePlayer_181; // 0x146a8(0x78)
	None AnimGraphNode_LayeredBoneBlend_44; // 0x14720(0xc0)
	None AnimGraphNode_LayeredBoneBlend_43; // 0x147e0(0xc0)
	None AnimGraphNode_BlendListByEnum_44; // 0x148a0(0xb0)
	None AnimGraphNode_BlendListByEnum_43; // 0x14950(0xb0)
	None AnimGraphNode_SequencePlayer_180; // 0x14a00(0x78)
	None AnimGraphNode_SequencePlayer_179; // 0x14a78(0x78)
	None AnimGraphNode_BlendListByEnum_42; // 0x14af0(0xb0)
	None AnimGraphNode_SequencePlayer_178; // 0x14ba0(0x78)
	None AnimGraphNode_SequencePlayer_177; // 0x14c18(0x78)
	None AnimGraphNode_StateResult_16; // 0x14c90(0x30)
	None AnimGraphNode_SequencePlayer_176; // 0x14cc0(0x78)
	None AnimGraphNode_LayeredBoneBlend_42; // 0x14d38(0xc0)
	None AnimGraphNode_SequencePlayer_175; // 0x14df8(0x78)
	None AnimGraphNode_LayeredBoneBlend_41; // 0x14e70(0xc0)
	None AnimGraphNode_SequencePlayer_174; // 0x14f30(0x78)
	None AnimGraphNode_SequencePlayer_173; // 0x14fa8(0x78)
	None AnimGraphNode_SequencePlayer_172; // 0x15020(0x78)
	None AnimGraphNode_SequencePlayer_171; // 0x15098(0x78)
	None AnimGraphNode_SequencePlayer_170; // 0x15110(0x78)
	None AnimGraphNode_SequencePlayer_169; // 0x15188(0x78)
	None AnimGraphNode_SequencePlayer_168; // 0x15200(0x78)
	None AnimGraphNode_SequencePlayer_167; // 0x15278(0x78)
	None AnimGraphNode_SequencePlayer_166; // 0x152f0(0x78)
	None AnimGraphNode_LayeredBoneBlend_40; // 0x15368(0xc0)
	None AnimGraphNode_SequencePlayer_165; // 0x15428(0x78)
	None AnimGraphNode_LayeredBoneBlend_39; // 0x154a0(0xc0)
	None AnimGraphNode_BlendListByEnum_41; // 0x15560(0xb0)
	None AnimGraphNode_BlendListByEnum_40; // 0x15610(0xb0)
	None AnimGraphNode_LayeredBoneBlend_38; // 0x156c0(0xc0)
	None AnimGraphNode_SequencePlayer_164; // 0x15780(0x78)
	None AnimGraphNode_SequencePlayer_163; // 0x157f8(0x78)
	None AnimGraphNode_SequencePlayer_162; // 0x15870(0x78)
	None AnimGraphNode_BlendListByEnum_39; // 0x158e8(0xb0)
	None AnimGraphNode_SequencePlayer_161; // 0x15998(0x78)
	None AnimGraphNode_StateResult_15; // 0x15a10(0x30)
	None AnimGraphNode_TransitionResult_25; // 0x15a40(0x28)
	None AnimGraphNode_TransitionResult_24; // 0x15a68(0x28)
	None AnimGraphNode_TransitionResult_23; // 0x15a90(0x28)
	None AnimGraphNode_TransitionResult_22; // 0x15ab8(0x28)
	None AnimGraphNode_TransitionResult_21; // 0x15ae0(0x28)
	None AnimGraphNode_BlendListByBool_30; // 0x15b08(0xa0)
	None AnimGraphNode_BlendSpacePlayer_82; // 0x15ba8(0xe0)
	None AnimGraphNode_BlendSpacePlayer_81; // 0x15c88(0xe0)
	None AnimGraphNode_SequencePlayer_160; // 0x15d68(0x78)
	None AnimGraphNode_LayeredBoneBlend_37; // 0x15de0(0xc0)
	None AnimGraphNode_SequencePlayer_159; // 0x15ea0(0x78)
	None AnimGraphNode_SequencePlayer_158; // 0x15f18(0x78)
	None AnimGraphNode_LayeredBoneBlend_36; // 0x15f90(0xc0)
	None AnimGraphNode_BlendListByBool_29; // 0x16050(0xa0)
	None AnimGraphNode_BlendSpacePlayer_80; // 0x160f0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_79; // 0x161d0(0xe0)
	None AnimGraphNode_LayeredBoneBlend_35; // 0x162b0(0xc0)
	None AnimGraphNode_BlendListByBool_28; // 0x16370(0xa0)
	None AnimGraphNode_BlendSpacePlayer_78; // 0x16410(0xe0)
	None AnimGraphNode_BlendSpacePlayer_77; // 0x164f0(0xe0)
	None AnimGraphNode_BlendListByEnum_38; // 0x165d0(0xb0)
	None AnimGraphNode_BlendListByBool_27; // 0x16680(0xa0)
	None AnimGraphNode_BlendSpacePlayer_76; // 0x16720(0xe0)
	None AnimGraphNode_BlendSpacePlayer_75; // 0x16800(0xe0)
	None AnimGraphNode_BlendListByBool_26; // 0x168e0(0xa0)
	None AnimGraphNode_BlendSpacePlayer_74; // 0x16980(0xe0)
	None AnimGraphNode_BlendSpacePlayer_73; // 0x16a60(0xe0)
	None AnimGraphNode_StateResult_14; // 0x16b40(0x30)
	None AnimGraphNode_BlendListByBool_25; // 0x16b70(0xa0)
	None AnimGraphNode_BlendSpacePlayer_72; // 0x16c10(0xe0)
	None AnimGraphNode_BlendSpacePlayer_71; // 0x16cf0(0xe0)
	None AnimGraphNode_SequencePlayer_157; // 0x16dd0(0x78)
	None AnimGraphNode_SequencePlayer_156; // 0x16e48(0x78)
	None AnimGraphNode_LayeredBoneBlend_34; // 0x16ec0(0xc0)
	None AnimGraphNode_BlendSpacePlayer_70; // 0x16f80(0xe0)
	None AnimGraphNode_LayeredBoneBlend_33; // 0x17060(0xc0)
	None AnimGraphNode_BlendSpacePlayer_69; // 0x17120(0xe0)
	None AnimGraphNode_BlendSpacePlayer_68; // 0x17200(0xe0)
	None AnimGraphNode_BlendListByEnum_37; // 0x172e0(0xb0)
	None AnimGraphNode_BlendSpacePlayer_67; // 0x17390(0xe0)
	None AnimGraphNode_BlendSpacePlayer_66; // 0x17470(0xe0)
	None AnimGraphNode_StateResult_13; // 0x17550(0x30)
	None AnimGraphNode_SequencePlayer_155; // 0x17580(0x78)
	None AnimGraphNode_SequencePlayer_154; // 0x175f8(0x78)
	None AnimGraphNode_SequencePlayer_153; // 0x17670(0x78)
	None AnimGraphNode_ComponentToLocalSpace; // 0x176e8(0x20)
	None AnimGraphNode_LocalToComponentSpace; // 0x17708(0x20)
	None AnimGraphNode_TwoBoneIK; // 0x17730(0x1e0)
	None AnimGraphNode_SequencePlayer_152; // 0x17910(0x78)
	None AnimGraphNode_SequencePlayer_151; // 0x17988(0x78)
	None AnimGraphNode_LayeredBoneBlend_32; // 0x17a00(0xc0)
	None AnimGraphNode_SequencePlayer_150; // 0x17ac0(0x78)
	None AnimGraphNode_LayeredBoneBlend_31; // 0x17b38(0xc0)
	None AnimGraphNode_SequencePlayer_149; // 0x17bf8(0x78)
	None AnimGraphNode_SequencePlayer_148; // 0x17c70(0x78)
	None AnimGraphNode_BlendListByInt_16; // 0x17ce8(0xa0)
	None AnimGraphNode_SequencePlayer_147; // 0x17d88(0x78)
	None AnimGraphNode_SequencePlayer_146; // 0x17e00(0x78)
	None AnimGraphNode_SequencePlayer_145; // 0x17e78(0x78)
	None AnimGraphNode_BlendListByEnum_36; // 0x17ef0(0xb0)
	None AnimGraphNode_SequencePlayer_144; // 0x17fa0(0x78)
	None AnimGraphNode_BlendListByBool_24; // 0x18018(0xa0)
	None AnimGraphNode_SequencePlayer_143; // 0x180b8(0x78)
	None AnimGraphNode_BlendListByBool_23; // 0x18130(0xa0)
	None AnimGraphNode_SequencePlayer_142; // 0x181d0(0x78)
	None AnimGraphNode_BlendListByBool_22; // 0x18248(0xa0)
	None AnimGraphNode_SequencePlayer_141; // 0x182e8(0x78)
	None AnimGraphNode_BlendListByBool_21; // 0x18360(0xa0)
	None AnimGraphNode_SequencePlayer_140; // 0x18400(0x78)
	None AnimGraphNode_SequencePlayer_139; // 0x18478(0x78)
	None AnimGraphNode_SequencePlayer_138; // 0x184f0(0x78)
	None AnimGraphNode_SequencePlayer_137; // 0x18568(0x78)
	None AnimGraphNode_BlendListByInt_15; // 0x185e0(0xa0)
	None AnimGraphNode_SequencePlayer_136; // 0x18680(0x78)
	None AnimGraphNode_SequencePlayer_135; // 0x186f8(0x78)
	None AnimGraphNode_BlendListByInt_14; // 0x18770(0xa0)
	None AnimGraphNode_SequencePlayer_134; // 0x18810(0x78)
	None AnimGraphNode_SequencePlayer_133; // 0x18888(0x78)
	None AnimGraphNode_BlendListByInt_13; // 0x18900(0xa0)
	None AnimGraphNode_BlendListByEnum_35; // 0x189a0(0xb0)
	None AnimGraphNode_SequencePlayer_132; // 0x18a50(0x78)
	None AnimGraphNode_SequencePlayer_131; // 0x18ac8(0x78)
	None AnimGraphNode_SequencePlayer_130; // 0x18b40(0x78)
	None AnimGraphNode_BlendListByEnum_34; // 0x18bb8(0xb0)
	None AnimGraphNode_SequencePlayer_129; // 0x18c68(0x78)
	None AnimGraphNode_SequencePlayer_128; // 0x18ce0(0x78)
	None AnimGraphNode_BlendListByBool_20; // 0x18d58(0xa0)
	None AnimGraphNode_BlendListByEnum_33; // 0x18df8(0xb0)
	None AnimGraphNode_Slot_8; // 0x18ea8(0x48)
	None AnimGraphNode_SequencePlayer_127; // 0x18ef0(0x78)
	None AnimGraphNode_StateResult_12; // 0x18f68(0x30)
	None AnimGraphNode_StateMachine_4; // 0x18f98(0xb0)
	None AnimGraphNode_StateResult_11; // 0x19048(0x30)
	None AnimGraphNode_TransitionResult_20; // 0x19078(0x28)
	None AnimGraphNode_TransitionResult_19; // 0x190a0(0x28)
	None AnimGraphNode_TransitionResult_18; // 0x190c8(0x28)
	None AnimGraphNode_TransitionResult_17; // 0x190f0(0x28)
	None AnimGraphNode_TransitionResult_16; // 0x19118(0x28)
	None AnimGraphNode_SequencePlayer_126; // 0x19140(0x78)
	None AnimGraphNode_BlendSpacePlayer_65; // 0x191b8(0xe0)
	None AnimGraphNode_BlendSpacePlayer_64; // 0x19298(0xe0)
	None AnimGraphNode_BlendListByBool_19; // 0x19378(0xa0)
	None AnimGraphNode_LayeredBoneBlend_30; // 0x19418(0xc0)
	None AnimGraphNode_SequencePlayer_125; // 0x194d8(0x78)
	None AnimGraphNode_SequencePlayer_124; // 0x19550(0x78)
	None AnimGraphNode_SequencePlayer_123; // 0x195c8(0x78)
	None AnimGraphNode_SequencePlayer_122; // 0x19640(0x78)
	None AnimGraphNode_SequencePlayer_121; // 0x196b8(0x78)
	None AnimGraphNode_SequencePlayer_120; // 0x19730(0x78)
	None AnimGraphNode_SequencePlayer_119; // 0x197a8(0x78)
	None AnimGraphNode_SequencePlayer_118; // 0x19820(0x78)
	None AnimGraphNode_LayeredBoneBlend_29; // 0x19898(0xc0)
	None AnimGraphNode_BlendSpacePlayer_63; // 0x19958(0xe0)
	None AnimGraphNode_BlendSpacePlayer_62; // 0x19a38(0xe0)
	None AnimGraphNode_BlendListByBool_18; // 0x19b18(0xa0)
	None AnimGraphNode_BlendListByEnum_32; // 0x19bb8(0xb0)
	None AnimGraphNode_BlendListByEnum_31; // 0x19c68(0xb0)
	None AnimGraphNode_LayeredBoneBlend_28; // 0x19d18(0xc0)
	None AnimGraphNode_BlendListByEnum_30; // 0x19dd8(0xb0)
	None AnimGraphNode_BlendSpacePlayer_61; // 0x19e88(0xe0)
	None AnimGraphNode_BlendSpacePlayer_60; // 0x19f68(0xe0)
	None AnimGraphNode_BlendListByBool_17; // 0x1a048(0xa0)
	None AnimGraphNode_BlendSpacePlayer_59; // 0x1a0e8(0xe0)
	None AnimGraphNode_BlendSpacePlayer_58; // 0x1a1c8(0xe0)
	None AnimGraphNode_BlendListByBool_16; // 0x1a2a8(0xa0)
	None AnimGraphNode_BlendListByEnum_29; // 0x1a348(0xb0)
	None AnimGraphNode_BlendSpacePlayer_57; // 0x1a3f8(0xe0)
	None AnimGraphNode_BlendSpacePlayer_56; // 0x1a4d8(0xe0)
	None AnimGraphNode_BlendListByBool_15; // 0x1a5b8(0xa0)
	None AnimGraphNode_BlendSpacePlayer_55; // 0x1a658(0xe0)
	None AnimGraphNode_BlendSpacePlayer_54; // 0x1a738(0xe0)
	None AnimGraphNode_BlendListByBool_14; // 0x1a818(0xa0)
	None AnimGraphNode_StateResult_10; // 0x1a8b8(0x30)
	None AnimGraphNode_BlendSpacePlayer_53; // 0x1a8e8(0xe0)
	None AnimGraphNode_BlendSpacePlayer_52; // 0x1a9c8(0xe0)
	None AnimGraphNode_BlendListByBool_13; // 0x1aaa8(0xa0)
	None AnimGraphNode_SequencePlayer_117; // 0x1ab48(0x78)
	None AnimGraphNode_LayeredBoneBlend_27; // 0x1abc0(0xc0)
	None AnimGraphNode_BlendSpacePlayer_51; // 0x1ac80(0xe0)
	None AnimGraphNode_SequencePlayer_116; // 0x1ad60(0x78)
	None AnimGraphNode_LayeredBoneBlend_26; // 0x1add8(0xc0)
	None AnimGraphNode_BlendListByEnum_28; // 0x1ae98(0xb0)
	None AnimGraphNode_BlendSpacePlayer_50; // 0x1af48(0xe0)
	None AnimGraphNode_BlendSpacePlayer_49; // 0x1b028(0xe0)
	None AnimGraphNode_SequencePlayer_115; // 0x1b108(0x78)
	None AnimGraphNode_SequencePlayer_114; // 0x1b180(0x78)
	None AnimGraphNode_SequencePlayer_113; // 0x1b1f8(0x78)
	None AnimGraphNode_SequencePlayer_112; // 0x1b270(0x78)
	None AnimGraphNode_SequencePlayer_111; // 0x1b2e8(0x78)
	None AnimGraphNode_BlendSpacePlayer_48; // 0x1b360(0xe0)
	None AnimGraphNode_BlendListByBool_12; // 0x1b440(0xa0)
	None AnimGraphNode_SequencePlayer_110; // 0x1b4e0(0x78)
	None AnimGraphNode_LayeredBoneBlend_25; // 0x1b558(0xc0)
	None AnimGraphNode_BlendSpacePlayer_47; // 0x1b618(0xe0)
	None AnimGraphNode_SequencePlayer_109; // 0x1b6f8(0x78)
	None AnimGraphNode_LayeredBoneBlend_24; // 0x1b770(0xc0)
	None AnimGraphNode_BlendListByEnum_27; // 0x1b830(0xb0)
	None AnimGraphNode_BlendSpacePlayer_46; // 0x1b8e0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_45; // 0x1b9c0(0xe0)
	None AnimGraphNode_LayeredBoneBlend_23; // 0x1baa0(0xc0)
	None AnimGraphNode_LayeredBoneBlend_22; // 0x1bb60(0xc0)
	None AnimGraphNode_BlendListByEnum_26; // 0x1bc20(0xb0)
	None AnimGraphNode_BlendListByEnum_25; // 0x1bcd0(0xb0)
	None AnimGraphNode_BlendListByEnum_24; // 0x1bd80(0xb0)
	None AnimGraphNode_BlendListByEnum_23; // 0x1be30(0xb0)
	None AnimGraphNode_LayeredBoneBlend_21; // 0x1bee0(0xc0)
	None AnimGraphNode_BlendSpacePlayer_44; // 0x1bfa0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_43; // 0x1c080(0xe0)
	None AnimGraphNode_BlendSpacePlayer_42; // 0x1c160(0xe0)
	None AnimGraphNode_BlendListByEnum_22; // 0x1c240(0xb0)
	None AnimGraphNode_BlendSpacePlayer_41; // 0x1c2f0(0xe0)
	None AnimGraphNode_BlendListByEnum_21; // 0x1c3d0(0xb0)
	None AnimGraphNode_BlendSpacePlayer_40; // 0x1c480(0xe0)
	None AnimGraphNode_BlendSpacePlayer_39; // 0x1c560(0xe0)
	None AnimGraphNode_BlendSpacePlayer_38; // 0x1c640(0xe0)
	None AnimGraphNode_BlendSpacePlayer_37; // 0x1c720(0xe0)
	None AnimGraphNode_BlendSpacePlayer_36; // 0x1c800(0xe0)
	None AnimGraphNode_BlendSpacePlayer_35; // 0x1c8e0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_34; // 0x1c9c0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_33; // 0x1caa0(0xe0)
	None AnimGraphNode_ApplyAdditive_7; // 0x1cb80(0xc8)
	None AnimGraphNode_ApplyAdditive_6; // 0x1cc48(0xc8)
	None AnimGraphNode_BlendListByBool_11; // 0x1cd10(0xa0)
	None AnimGraphNode_StateResult_9; // 0x1cdb0(0x30)
	None AnimGraphNode_SequencePlayer_108; // 0x1cde0(0x78)
	None AnimGraphNode_SequencePlayer_107; // 0x1ce58(0x78)
	None AnimGraphNode_SequencePlayer_106; // 0x1ced0(0x78)
	None AnimGraphNode_BlendListByInt_12; // 0x1cf48(0xa0)
	None AnimGraphNode_SequencePlayer_105; // 0x1cfe8(0x78)
	None AnimGraphNode_LayeredBoneBlend_20; // 0x1d060(0xc0)
	None AnimGraphNode_SequencePlayer_104; // 0x1d120(0x78)
	None AnimGraphNode_SequencePlayer_103; // 0x1d198(0x78)
	None AnimGraphNode_SequencePlayer_102; // 0x1d210(0x78)
	None AnimGraphNode_BlendListByBool_10; // 0x1d288(0xa0)
	None AnimGraphNode_SequencePlayer_101; // 0x1d328(0x78)
	None AnimGraphNode_SequencePlayer_100; // 0x1d3a0(0x78)
	None AnimGraphNode_BlendListByInt_11; // 0x1d418(0xa0)
	None AnimGraphNode_SequencePlayer_99; // 0x1d4b8(0x78)
	None AnimGraphNode_SequencePlayer_98; // 0x1d530(0x78)
	None AnimGraphNode_LayeredBoneBlend_19; // 0x1d5a8(0xc0)
	None AnimGraphNode_SequencePlayer_97; // 0x1d668(0x78)
	None AnimGraphNode_SequencePlayer_96; // 0x1d6e0(0x78)
	None AnimGraphNode_BlendListByInt_10; // 0x1d758(0xa0)
	None AnimGraphNode_SequencePlayer_95; // 0x1d7f8(0x78)
	None AnimGraphNode_LayeredBoneBlend_18; // 0x1d870(0xc0)
	None AnimGraphNode_SequencePlayer_94; // 0x1d930(0x78)
	None AnimGraphNode_SequencePlayer_93; // 0x1d9a8(0x78)
	None AnimGraphNode_BlendListByEnum_20; // 0x1da20(0xb0)
	None AnimGraphNode_SequencePlayer_92; // 0x1dad0(0x78)
	None AnimGraphNode_SequencePlayer_91; // 0x1db48(0x78)
	None AnimGraphNode_SequencePlayer_90; // 0x1dbc0(0x78)
	None AnimGraphNode_SequencePlayer_89; // 0x1dc38(0x78)
	None AnimGraphNode_SequencePlayer_88; // 0x1dcb0(0x78)
	None AnimGraphNode_SequencePlayer_87; // 0x1dd28(0x78)
	None AnimGraphNode_BlendListByInt_9; // 0x1dda0(0xa0)
	None AnimGraphNode_SequencePlayer_86; // 0x1de40(0x78)
	None AnimGraphNode_SequencePlayer_85; // 0x1deb8(0x78)
	None AnimGraphNode_SequencePlayer_84; // 0x1df30(0x78)
	None AnimGraphNode_BlendListByInt_8; // 0x1dfa8(0xa0)
	None AnimGraphNode_BlendListByInt_7; // 0x1e048(0xa0)
	None AnimGraphNode_BlendListByEnum_19; // 0x1e0e8(0xb0)
	None AnimGraphNode_BlendListByEnum_18; // 0x1e198(0xb0)
	None AnimGraphNode_SequencePlayer_83; // 0x1e248(0x78)
	None AnimGraphNode_Slot_7; // 0x1e2c0(0x48)
	None AnimGraphNode_StateResult_8; // 0x1e308(0x30)
	None AnimGraphNode_StateMachine_3; // 0x1e338(0xb0)
	None AnimGraphNode_StateResult_7; // 0x1e3e8(0x30)
	None AnimGraphNode_Slot_6; // 0x1e418(0x48)
	None AnimGraphNode_TransitionResult_15; // 0x1e460(0x28)
	None AnimGraphNode_TransitionResult_14; // 0x1e488(0x28)
	None AnimGraphNode_TransitionResult_13; // 0x1e4b0(0x28)
	None AnimGraphNode_TransitionResult_12; // 0x1e4d8(0x28)
	None AnimGraphNode_TransitionResult_11; // 0x1e500(0x28)
	None AnimGraphNode_TransitionResult_10; // 0x1e528(0x28)
	None AnimGraphNode_TransitionResult_9; // 0x1e550(0x28)
	None AnimGraphNode_TransitionResult_8; // 0x1e578(0x28)
	None AnimGraphNode_TransitionResult_7; // 0x1e5a0(0x28)
	None AnimGraphNode_TransitionResult_6; // 0x1e5c8(0x28)
	None AnimGraphNode_TransitionResult_5; // 0x1e5f0(0x28)
	None AnimGraphNode_TransitionResult_4; // 0x1e618(0x28)
	None AnimGraphNode_TransitionResult_3; // 0x1e640(0x28)
	None AnimGraphNode_TransitionResult_2; // 0x1e668(0x28)
	None AnimGraphNode_TransitionResult; // 0x1e690(0x28)
	None AnimGraphNode_SequencePlayer_82; // 0x1e6b8(0x78)
	None AnimGraphNode_LayeredBoneBlend_17; // 0x1e730(0xc0)
	None AnimGraphNode_SequencePlayer_81; // 0x1e7f0(0x78)
	None AnimGraphNode_SequencePlayer_80; // 0x1e868(0x78)
	None AnimGraphNode_BlendListByBool_9; // 0x1e8e0(0xa0)
	None AnimGraphNode_SequencePlayer_79; // 0x1e980(0x78)
	None AnimGraphNode_SequencePlayer_78; // 0x1e9f8(0x78)
	None AnimGraphNode_SequencePlayer_77; // 0x1ea70(0x78)
	None AnimGraphNode_SequencePlayer_76; // 0x1eae8(0x78)
	None AnimGraphNode_SequencePlayer_75; // 0x1eb60(0x78)
	None AnimGraphNode_SequencePlayer_74; // 0x1ebd8(0x78)
	None AnimGraphNode_BlendListByEnum_17; // 0x1ec50(0xb0)
	None AnimGraphNode_StateResult_6; // 0x1ed00(0x30)
	None AnimGraphNode_SequencePlayer_73; // 0x1ed30(0x78)
	None AnimGraphNode_SequencePlayer_72; // 0x1eda8(0x78)
	None AnimGraphNode_SequencePlayer_71; // 0x1ee20(0x78)
	None AnimGraphNode_SequencePlayer_70; // 0x1ee98(0x78)
	None AnimGraphNode_SequencePlayer_69; // 0x1ef10(0x78)
	None AnimGraphNode_BlendListByEnum_16; // 0x1ef88(0xb0)
	None AnimGraphNode_StateResult_5; // 0x1f038(0x30)
	None AnimGraphNode_SequencePlayer_68; // 0x1f068(0x78)
	None AnimGraphNode_LayeredBoneBlend_16; // 0x1f0e0(0xc0)
	None AnimGraphNode_BlendListByBool_8; // 0x1f1a0(0xa0)
	None AnimGraphNode_BlendSpacePlayer_32; // 0x1f240(0xe0)
	None AnimGraphNode_BlendSpacePlayer_31; // 0x1f320(0xe0)
	None AnimGraphNode_SequencePlayer_67; // 0x1f400(0x78)
	None AnimGraphNode_SequencePlayer_66; // 0x1f478(0x78)
	None AnimGraphNode_SequencePlayer_65; // 0x1f4f0(0x78)
	None AnimGraphNode_SequencePlayer_64; // 0x1f568(0x78)
	None AnimGraphNode_SequencePlayer_63; // 0x1f5e0(0x78)
	None AnimGraphNode_SequencePlayer_62; // 0x1f658(0x78)
	None AnimGraphNode_SequencePlayer_61; // 0x1f6d0(0x78)
	None AnimGraphNode_SequencePlayer_60; // 0x1f748(0x78)
	None AnimGraphNode_LayeredBoneBlend_15; // 0x1f7c0(0xc0)
	None AnimGraphNode_BlendListByBool_7; // 0x1f880(0xa0)
	None AnimGraphNode_BlendSpacePlayer_30; // 0x1f920(0xe0)
	None AnimGraphNode_BlendSpacePlayer_29; // 0x1fa00(0xe0)
	None AnimGraphNode_BlendListByEnum_15; // 0x1fae0(0xb0)
	None AnimGraphNode_BlendListByEnum_14; // 0x1fb90(0xb0)
	None AnimGraphNode_BlendListByEnum_13; // 0x1fc40(0xb0)
	None AnimGraphNode_LayeredBoneBlend_14; // 0x1fcf0(0xc0)
	None AnimGraphNode_BlendListByBool_6; // 0x1fdb0(0xa0)
	None AnimGraphNode_BlendSpacePlayer_28; // 0x1fe50(0xe0)
	None AnimGraphNode_BlendSpacePlayer_27; // 0x1ff30(0xe0)
	None AnimGraphNode_BlendListByEnum_12; // 0x20010(0xb0)
	None AnimGraphNode_BlendSpacePlayer_26; // 0x200c0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_25; // 0x201a0(0xe0)
	None AnimGraphNode_BlendListByBool_5; // 0x20280(0xa0)
	None AnimGraphNode_BlendListByBool_4; // 0x20320(0xa0)
	None AnimGraphNode_BlendSpacePlayer_24; // 0x203c0(0xe0)
	None AnimGraphNode_BlendSpacePlayer_23; // 0x204a0(0xe0)
	None AnimGraphNode_BlendListByBool_3; // 0x20580(0xa0)
	None AnimGraphNode_BlendSpacePlayer_22; // 0x20620(0xe0)
	None AnimGraphNode_BlendSpacePlayer_21; // 0x20700(0xe0)
	None AnimGraphNode_StateResult_4; // 0x207e0(0x30)
	None AnimGraphNode_SequencePlayer_59; // 0x20810(0x78)
	None AnimGraphNode_SequencePlayer_58; // 0x20888(0x78)
	None AnimGraphNode_TwoWayBlend_10; // 0x20900(0xc8)
	None AnimGraphNode_LayeredBoneBlend_13; // 0x209c8(0xc0)
	None AnimGraphNode_BlendSpacePlayer_20; // 0x20a88(0xe0)
	None AnimGraphNode_SequencePlayer_57; // 0x20b68(0x78)
	None AnimGraphNode_LayeredBoneBlend_12; // 0x20be0(0xc0)
	None AnimGraphNode_BlendSpacePlayer_19; // 0x20ca0(0xe0)
	None AnimGraphNode_SequencePlayer_56; // 0x20d80(0x78)
	None AnimGraphNode_SequencePlayer_55; // 0x20df8(0x78)
	None AnimGraphNode_SequencePlayer_54; // 0x20e70(0x78)
	None AnimGraphNode_SequencePlayer_53; // 0x20ee8(0x78)
	None AnimGraphNode_SequencePlayer_52; // 0x20f60(0x78)
	None AnimGraphNode_SequencePlayer_51; // 0x20fd8(0x78)
	None AnimGraphNode_TwoWayBlend_9; // 0x21050(0xc8)
	None AnimGraphNode_SequencePlayer_50; // 0x21118(0x78)
	None AnimGraphNode_LayeredBoneBlend_11; // 0x21190(0xc0)
	None AnimGraphNode_BlendSpacePlayer_18; // 0x21250(0xe0)
	None AnimGraphNode_SequencePlayer_49; // 0x21330(0x78)
	None AnimGraphNode_LayeredBoneBlend_10; // 0x213a8(0xc0)
	None AnimGraphNode_BlendSpacePlayer_17; // 0x21468(0xe0)
	None AnimGraphNode_BlendListByBool_2; // 0x21548(0xa0)
	None AnimGraphNode_SequencePlayer_48; // 0x215e8(0x78)
	None AnimGraphNode_TwoWayBlend_8; // 0x21660(0xc8)
	None AnimGraphNode_BlendSpacePlayer_16; // 0x21728(0xe0)
	None AnimGraphNode_SequencePlayer_47; // 0x21808(0x78)
	None AnimGraphNode_TwoWayBlend_7; // 0x21880(0xc8)
	None AnimGraphNode_BlendSpacePlayer_15; // 0x21948(0xe0)
	None AnimGraphNode_BlendSpacePlayer_14; // 0x21a28(0xe0)
	None AnimGraphNode_BlendSpacePlayer_13; // 0x21b08(0xe0)
	None AnimGraphNode_ApplyAdditive_5; // 0x21be8(0xc8)
	None AnimGraphNode_ApplyAdditive_4; // 0x21cb0(0xc8)
	None AnimGraphNode_BlendListByEnum_11; // 0x21d78(0xb0)
	None AnimGraphNode_IdentityPose; // 0x21e28(0x18)
	None AnimGraphNode_ApplyAdditive_3; // 0x21e40(0xc8)
	None AnimGraphNode_SequencePlayer_46; // 0x21f08(0x78)
	None AnimGraphNode_TwoWayBlend_6; // 0x21f80(0xc8)
	None AnimGraphNode_SequencePlayer_45; // 0x22048(0x78)
	None AnimGraphNode_SequencePlayer_44; // 0x220c0(0x78)
	None AnimGraphNode_TwoWayBlend_5; // 0x22138(0xc8)
	None AnimGraphNode_SequencePlayer_43; // 0x22200(0x78)
	None AnimGraphNode_TwoWayBlend_4; // 0x22278(0xc8)
	None AnimGraphNode_SequencePlayer_42; // 0x22340(0x78)
	None AnimGraphNode_TwoWayBlend_3; // 0x223b8(0xc8)
	None AnimGraphNode_SequencePlayer_41; // 0x22480(0x78)
	None AnimGraphNode_TwoWayBlend_2; // 0x224f8(0xc8)
	None AnimGraphNode_SequencePlayer_40; // 0x225c0(0x78)
	None AnimGraphNode_TwoWayBlend; // 0x22638(0xc8)
	None AnimGraphNode_BlendListByEnum_10; // 0x22700(0xb0)
	None AnimGraphNode_SequencePlayer_39; // 0x227b0(0x78)
	None AnimGraphNode_BlendSpacePlayer_12; // 0x22828(0xe0)
	None AnimGraphNode_BlendSpacePlayer_11; // 0x22908(0xe0)
	None AnimGraphNode_LayeredBoneBlend_9; // 0x229e8(0xc0)
	None AnimGraphNode_BlendListByEnum_9; // 0x22aa8(0xb0)
	None AnimGraphNode_LayeredBoneBlend_8; // 0x22b58(0xc0)
	None AnimGraphNode_BlendSpacePlayer_10; // 0x22c18(0xe0)
	None AnimGraphNode_LayeredBoneBlend_7; // 0x22cf8(0xc0)
	None AnimGraphNode_BlendSpacePlayer_9; // 0x22db8(0xe0)
	None AnimGraphNode_BlendListByEnum_8; // 0x22e98(0xb0)
	None AnimGraphNode_BlendListByEnum_7; // 0x22f48(0xb0)
	None AnimGraphNode_BlendSpacePlayer_8; // 0x22ff8(0xe0)
	None AnimGraphNode_BlendSpacePlayer_7; // 0x230d8(0xe0)
	None AnimGraphNode_BlendSpacePlayer_6; // 0x231b8(0xe0)
	None AnimGraphNode_BlendSpacePlayer_5; // 0x23298(0xe0)
	None AnimGraphNode_BlendSpacePlayer_4; // 0x23378(0xe0)
	None AnimGraphNode_BlendSpacePlayer_3; // 0x23458(0xe0)
	None AnimGraphNode_BlendSpacePlayer_2; // 0x23538(0xe0)
	None AnimGraphNode_BlendSpacePlayer; // 0x23618(0xe0)
	None AnimGraphNode_ApplyAdditive_2; // 0x236f8(0xc8)
	None AnimGraphNode_ApplyAdditive; // 0x237c0(0xc8)
	None AnimGraphNode_BlendListByBool; // 0x23888(0xa0)
	None AnimGraphNode_StateResult_3; // 0x23928(0x30)
	None AnimGraphNode_SequencePlayer_38; // 0x23958(0x78)
	None AnimGraphNode_SequencePlayer_37; // 0x239d0(0x78)
	None AnimGraphNode_SequencePlayer_36; // 0x23a48(0x78)
	None AnimGraphNode_SequencePlayer_35; // 0x23ac0(0x78)
	None AnimGraphNode_SequencePlayer_34; // 0x23b38(0x78)
	None AnimGraphNode_BlendListByInt_6; // 0x23bb0(0xa0)
	None AnimGraphNode_LayeredBoneBlend_6; // 0x23c50(0xc0)
	None AnimGraphNode_SequencePlayer_33; // 0x23d10(0x78)
	None AnimGraphNode_SequencePlayer_32; // 0x23d88(0x78)
	None AnimGraphNode_SequencePlayer_31; // 0x23e00(0x78)
	None AnimGraphNode_SequencePlayer_30; // 0x23e78(0x78)
	None AnimGraphNode_SequencePlayer_29; // 0x23ef0(0x78)
	None AnimGraphNode_LayeredBoneBlend_5; // 0x23f68(0xc0)
	None AnimGraphNode_SequencePlayer_28; // 0x24028(0x78)
	None AnimGraphNode_SequencePlayer_27; // 0x240a0(0x78)
	None AnimGraphNode_LayeredBoneBlend_4; // 0x24118(0xc0)
	None AnimGraphNode_SequencePlayer_26; // 0x241d8(0x78)
	None AnimGraphNode_LayeredBoneBlend_3; // 0x24250(0xc0)
	None AnimGraphNode_SequencePlayer_25; // 0x24310(0x78)
	None AnimGraphNode_SequencePlayer_24; // 0x24388(0x78)
	None AnimGraphNode_SequencePlayer_23; // 0x24400(0x78)
	None AnimGraphNode_SequencePlayer_22; // 0x24478(0x78)
	None AnimGraphNode_SequencePlayer_21; // 0x244f0(0x78)
	None AnimGraphNode_BlendListByInt_5; // 0x24568(0xa0)
	None AnimGraphNode_LayeredBoneBlend_2; // 0x24608(0xc0)
	None AnimGraphNode_SequencePlayer_20; // 0x246c8(0x78)
	None AnimGraphNode_SequencePlayer_19; // 0x24740(0x78)
	None AnimGraphNode_SequencePlayer_18; // 0x247b8(0x78)
	None AnimGraphNode_SequencePlayer_17; // 0x24830(0x78)
	None AnimGraphNode_BlendListByInt_4; // 0x248a8(0xa0)
	None AnimGraphNode_SequencePlayer_16; // 0x24948(0x78)
	None AnimGraphNode_SequencePlayer_15; // 0x249c0(0x78)
	None AnimGraphNode_SequencePlayer_14; // 0x24a38(0x78)
	None AnimGraphNode_LayeredBoneBlend; // 0x24ab0(0xc0)
	None AnimGraphNode_SequencePlayer_13; // 0x24b70(0x78)
	None AnimGraphNode_BlendListByEnum_6; // 0x24be8(0xb0)
	None AnimGraphNode_SequencePlayer_12; // 0x24c98(0x78)
	None AnimGraphNode_BlendListByEnum_5; // 0x24d10(0xb0)
	None AnimGraphNode_BlendListByEnum_4; // 0x24dc0(0xb0)
	None AnimGraphNode_SequencePlayer_11; // 0x24e70(0x78)
	None AnimGraphNode_SequencePlayer_10; // 0x24ee8(0x78)
	None AnimGraphNode_SequencePlayer_9; // 0x24f60(0x78)
	None AnimGraphNode_SequencePlayer_8; // 0x24fd8(0x78)
	None AnimGraphNode_SequencePlayer_7; // 0x25050(0x78)
	None AnimGraphNode_BlendListByInt_3; // 0x250c8(0xa0)
	None AnimGraphNode_SequencePlayer_6; // 0x25168(0x78)
	None AnimGraphNode_SequencePlayer_5; // 0x251e0(0x78)
	None AnimGraphNode_SequencePlayer_4; // 0x25258(0x78)
	None AnimGraphNode_BlendListByInt_2; // 0x252d0(0xa0)
	None AnimGraphNode_SequencePlayer_3; // 0x25370(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x253e8(0x78)
	None AnimGraphNode_SequencePlayer; // 0x25460(0x78)
	None AnimGraphNode_BlendListByInt; // 0x254d8(0xa0)
	None AnimGraphNode_BlendListByEnum_3; // 0x25578(0xb0)
	None AnimGraphNode_BlendListByEnum_2; // 0x25628(0xb0)
	None AnimGraphNode_Slot_5; // 0x256d8(0x48)
	None AnimGraphNode_StateResult_2; // 0x25720(0x30)
	None AnimGraphNode_StateMachine_2; // 0x25750(0xb0)
	None AnimGraphNode_StateResult; // 0x25800(0x30)
	None AnimGraphNode_StateMachine; // 0x25830(0xb0)
	None AnimGraphNode_SaveCachedPose_12; // 0x258e0(0xb8)
	None AnimGraphNode_SaveCachedPose_11; // 0x25998(0xb8)
	None AnimGraphNode_UseCachedPose_23; // 0x25a50(0x28)
	None AnimGraphNode_UseCachedPose_22; // 0x25a78(0x28)
	None AnimGraphNode_SaveCachedPose_10; // 0x25aa0(0xb8)
	None AnimGraphNode_UseCachedPose_21; // 0x25b58(0x28)
	None AnimGraphNode_UseCachedPose_20; // 0x25b80(0x28)
	None AnimGraphNode_SaveCachedPose_9; // 0x25ba8(0xb8)
	None AnimGraphNode_UseCachedPose_19; // 0x25c60(0x28)
	None AnimGraphNode_UseCachedPose_18; // 0x25c88(0x28)
	None AnimGraphNode_SaveCachedPose_8; // 0x25cb0(0xb8)
	None AnimGraphNode_UseCachedPose_17; // 0x25d68(0x28)
	None AnimGraphNode_UseCachedPose_16; // 0x25d90(0x28)
	None AnimGraphNode_UseCachedPose_15; // 0x25db8(0x28)
	None AnimGraphNode_SaveCachedPose_7; // 0x25de0(0xb8)
	None AnimGraphNode_SaveCachedPose_6; // 0x25e98(0xb8)
	None AnimGraphNode_UseCachedPose_14; // 0x25f50(0x28)
	None AnimGraphNode_SaveCachedPose_5; // 0x25f78(0xb8)
	None AnimGraphNode_UseCachedPose_13; // 0x26030(0x28)
	None AnimGraphNode_UseCachedPose_12; // 0x26058(0x28)
	None AnimGraphNode_SaveCachedPose_4; // 0x26080(0xb8)
	None AnimGraphNode_UseCachedPose_11; // 0x26138(0x28)
	None AnimGraphNode_UseCachedPose_10; // 0x26160(0x28)
	None AnimGraphNode_UseCachedPose_9; // 0x26188(0x28)
	None AnimGraphNode_SaveCachedPose_3; // 0x261b0(0xb8)
	None AnimGraphNode_UseCachedPose_8; // 0x26268(0x28)
	None AnimGraphNode_UseCachedPose_7; // 0x26290(0x28)
	None AnimGraphNode_SaveCachedPose_2; // 0x262b8(0xb8)
	None AnimGraphNode_UseCachedPose_6; // 0x26370(0x28)
	None AnimGraphNode_UseCachedPose_5; // 0x26398(0x28)
	None AnimGraphNode_Slot_4; // 0x263c0(0x48)
	None AnimGraphNode_SaveCachedPose; // 0x26408(0xb8)
	None AnimGraphNode_UseCachedPose_4; // 0x264c0(0x28)
	None AnimGraphNode_UseCachedPose_3; // 0x264e8(0x28)
	None AnimGraphNode_Slot_3; // 0x26510(0x48)
	None AnimGraphNode_Slot_2; // 0x26558(0x48)
	None AnimGraphNode_BlendListByEnum; // 0x265a0(0xb0)
	None AnimGraphNode_UseCachedPose_2; // 0x26650(0x28)
	None AnimGraphNode_UseCachedPose; // 0x26678(0x28)
	None AnimGraphNode_Slot; // 0x266a0(0x48)
	None StoppingAnimation; // 0x266e8(0x08)
	None AdditiveLandingSlot; // 0x266f0(0x08)
	None StoppingDirection; // 0x266f8(0x04)
	None CameraLagTimer; // 0x26700(0x08)
	None SavedCameraArmLocation; // 0x26708(0x0c)
	None TestSprinting; // 0x26714(0x01)
	None UberGraphFrame; // 0x270(0x08)
	None AnimGraphNode_Root; // 0x278(0x30)
	None AnimGraphNode_SequencePlayer; // 0x2a8(0x78)
	None UberGraphFrame; // 0x248(0x08)
	None Idle; // 0x250(0x08)
	None Scope_In; // 0x258(0x08)
	None CanvasPanel_1; // 0x260(0x08)
	None Scope_Center; // 0x268(0x08)
	None Scope_Center_Dot; // 0x270(0x08)
	None UberGraphFrame; // 0x4a0(0x08)
	None OverWater_CV_OverWater_77012AB948B572A268E63583418444D0; // 0x4a8(0x04)
	None OverWater__Direction_77012AB948B572A268E63583418444D0; // 0x4ac(0x01)
	None OverWater; // 0x4b0(0x08)
	None HittingWater_CV_OverWater_7E5F9D2E4D0DDDC70F2F67AD035A6212; // 0x4b8(0x04)
	None HittingWater__Direction_7E5F9D2E4D0DDDC70F2F67AD035A6212; // 0x4bc(0x01)
	None HittingWater; // 0x4c0(0x08)
	None LandingTimer; // 0x4c8(0x04)
	None ItemResult; // 0x4d0(0x10)
	None ParachuteTimer; // 0x4e0(0x04)
	None LandingDelay; // 0x4e4(0x04)
	None ForceLandingDelaySeconds; // 0x4e8(0x04)
	None bLandedOnGround; // 0x4ec(0x01)
	None UberGraphFrame; // 0x3ac8(0x08)
	None Listener; // 0x3ad0(0x08)
	None _P_Cam_Z_NewTrack_0_898B65D1462B08609DA61C81A7B52313; // 0x3ad8(0x04)
	None _P_Cam_Z__Direction_898B65D1462B08609DA61C81A7B52313; // 0x3adc(0x01)
	None 3P_Cam_Z; // 0x3ae0(0x08)
	None CriticalUITimeHandler; // 0x3ae8(0x08)
	None DyingUITimeHandler; // 0x3af0(0x08)
	None ClothHandler; // 0x3af8(0x08)
	None ClothBallObject; // 0x3b00(0x08)
	None BallHandleLocation; // 0x3b08(0x0c)
	None GamepadInputModifier; // 0x3b14(0x04)
	None BaseTurnRate; // 0x3b18(0x04)
	None BaseLookUpRate; // 0x3b1c(0x04)
	None PerkLevelUpWidgets; // 0x3b20(0x10)
	None PerkLevelUpWidthDepth; // 0x3b30(0x04)
	None AmplifierEffect; // 0x3b38(0x08)
	None Cam_Shake_Radius; // 0x3b40(0x04)
	None MainWidget; // 0x3b48(0x08)
	None HeartBeatSensorEffect; // 0x3b50(0x08)
	None UberGraphFrame; // 0x38(0x08)
	None Game Settings Wrapper; // 0x40(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None CP-Login-FadeIn; // 0x250(0x08)
	None Blink; // 0x258(0x08)
	None Dot; // 0x260(0x08)
	None MainCanvas-FadeIn; // 0x268(0x08)
	None BTN-Login; // 0x270(0x08)
	None CB-SaveUserName; // 0x278(0x08)
	None CP-Dot; // 0x280(0x08)
	None CP-ErrorMessage; // 0x288(0x08)
	None CP-LOGIN; // 0x290(0x08)
	None CP-MESSAGE; // 0x298(0x08)
	None EDT-ID; // 0x2a0(0x08)
	None EDT-PASSWORD; // 0x2a8(0x08)
	None Image_1; // 0x2b0(0x08)
	None Image_2; // 0x2b8(0x08)
	None Image_3; // 0x2c0(0x08)
	None Image_5; // 0x2c8(0x08)
	None Image_10; // 0x2d0(0x08)
	None Image_204; // 0x2d8(0x08)
	None IMG-ErrorIcon; // 0x2e0(0x08)
	None IMG-Logo; // 0x2e8(0x08)
	None TXT-Connecting; // 0x2f0(0x08)
	None TXT-Error_Message; // 0x2f8(0x08)
	None TXT-Waitting; // 0x300(0x08)
	None TXT_Connecting_Dot; // 0x308(0x08)
	None UW-Exit_Popup; // 0x310(0x08)
	None TitleWidgetRef; // 0x318(0x08)
	None State; // 0x320(0x04)
	None bPlayOnce; // 0x324(0x01)
	None bPopupOpen; // 0x325(0x01)
	None ExitPopupKey; // 0x328(0x18)
	None UberGraphFrame; // 0x248(0x08)
	None Ani_FadeOut; // 0x250(0x08)
	None Ani_FadeIn; // 0x258(0x08)
	None 1; // 0x260(0x08)
	None 10; // 0x268(0x08)
	None 2; // 0x270(0x08)
	None 3; // 0x278(0x08)
	None 4; // 0x280(0x08)
	None 5; // 0x288(0x08)
	None 6; // 0x290(0x08)
	None 7; // 0x298(0x08)
	None 8; // 0x2a0(0x08)
	None 9; // 0x2a8(0x08)
	None Button_GamePlayTutorial; // 0x2b0(0x08)
	None Button_TutorialMovie; // 0x2b8(0x08)
	None Image_62; // 0x2c0(0x08)
	None Light1; // 0x2c8(0x08)
	None Light2; // 0x2d0(0x08)
	None red1; // 0x2d8(0x08)
	None red2; // 0x2e0(0x08)
	None RichTextBlock; // 0x2e8(0x08)
	None Image_80; // 0x248(0x08)
	None DefaultSceneRoot; // 0x4b0(0x08)
	None MediaSoundComponent; // 0x4b8(0x08)
	None EventDispatcher_PlayLobbySound; // 0x4c0(0x10)
	None EventDispatcher_StopLobbySound; // 0x4d0(0x10)
	None DefaultSceneRoot; // 0x638(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Button_OK; // 0x250(0x08)
	None Image_337; // 0x258(0x08)
	None Image_581; // 0x260(0x08)
	None Image_583; // 0x268(0x08)
	None Image_584; // 0x270(0x08)
	None Slider_Gamma; // 0x278(0x08)
	None TextBlock_Gamma; // 0x280(0x08)
	None Game Settings; // 0x288(0x08)
	None Gamma Strength Slider Value; // 0x290(0x04)
	None Gamma Strength Edit Value; // 0x298(0x18)
	None ClosedWidgetDelegate; // 0x2b0(0x10)
	None UberGraphFrame; // 0x248(0x08)
	None Blink; // 0x250(0x08)
	None FadeIn; // 0x258(0x08)
	None Button_480; // 0x260(0x08)
	None Button_482; // 0x268(0x08)
	None Button_483; // 0x270(0x08)
	None Button_484; // 0x278(0x08)
	None Button_485; // 0x280(0x08)
	None Button_486; // 0x288(0x08)
	None Button_ExitGame; // 0x290(0x08)
	None Button_Retry; // 0x298(0x08)
	None CanvasPanel_10; // 0x2a0(0x08)
	None CanvasPanel_143; // 0x2a8(0x08)
	None CanvasPanel_Default; // 0x2b0(0x08)
	None CanvasPanel_JuvenileRestricted; // 0x2b8(0x08)
	None CanvasPanel_RestrictedUser; // 0x2c0(0x08)
	None CanvasPanel_ServerInspection; // 0x2c8(0x08)
	None CanvasPanel_UnableToConnectServer; // 0x2d0(0x08)
	None CanvasPanel_WaitingServer; // 0x2d8(0x08)
	None HorizontalBox_1; // 0x2e0(0x08)
	None HorizontalBox_2; // 0x2e8(0x08)
	None Image_122; // 0x2f0(0x08)
	None Image_123; // 0x2f8(0x08)
	None Image_309; // 0x300(0x08)
	None Image_bg; // 0x308(0x08)
	None SizeBox; // 0x310(0x08)
	None SizeBox_2; // 0x318(0x08)
	None SizeBox_85; // 0x320(0x08)
	None TextBlock; // 0x328(0x08)
	None TextBlock_2; // 0x330(0x08)
	None TextBlock_3; // 0x338(0x08)
	None TextBlock_4; // 0x340(0x08)
	None TextBlock_544; // 0x348(0x08)
	None TextBlock_546; // 0x350(0x08)
	None TextBlock_Desc; // 0x358(0x08)
	None TextBlock_EndTime; // 0x360(0x08)
	None Throbber_1; // 0x368(0x08)
	None Throbber_979; // 0x370(0x08)
	None TXT-Waitting; // 0x378(0x08)
	None WidgetSwitcher_1; // 0x380(0x08)
	None TitleWidgetRef; // 0x388(0x08)
	None ErrorID; // 0x390(0x10)
	None ErrorIndex; // 0x3a0(0x04)
	None ErrorParameters; // 0x3a8(0x10)
	None MediaPlayer; // 0x3b8(0x08)
	None Media; // 0x3c0(0x08)
	None MediaTexture; // 0x3c8(0x08)
	None MediaSoundComp; // 0x3d0(0x08)
	None ApplyUserInfoCount; // 0x3d8(0x04)
	None bServicePlatformFlow; // 0x3dc(0x01)
	None UberGraphFrame; // 0x318(0x08)
	None TitleWidgetRef; // 0x320(0x08)
	None LobbyWidgetRef; // 0x328(0x08)
	None LobbyPawns; // 0x330(0x10)
	None LobbyPawnClass; // 0x340(0x28)
	None SkipKey; // 0x368(0x18)
	None bSkip; // 0x380(0x01)
	None bNotFirstTime; // 0x381(0x01)
	None LobbyCustomizePawn; // 0x388(0x08)
	None IsCharacterAppearance; // 0x390(0x01)
	None TargetWearableCamera; // 0x398(0x08)
	None CurrentArmorySceneState; // 0x3a0(0x10)
	None SurveyUPanValue; // 0x3b0(0x04)
	None GunSurveyMovingValue; // 0x3b4(0x04)
	None SurveyUPan; // 0x3b8(0x08)
	None GunSurveyMoving; // 0x3c0(0x08)
	None IdentifiedTimer; // 0x3c8(0x08)
	None CurrentTab; // 0x3d0(0x10)
	None PP-OutlineGlow; // 0x3e0(0x08)
	None AudioIndex_BGM; // 0x3e8(0x04)
	None AudioIndex_Ambience; // 0x3ec(0x04)
	None AudioIndex_Analyze; // 0x3f0(0x04)
	None PendingPartyInfoChange; // 0x3f4(0x01)
	None EnhanceTimerHandle; // 0x3f8(0x08)
	None ProceedingTimerHandle; // 0x400(0x08)
	None CreateCharacterRef; // 0x408(0x08)
	None IntroBGWidget; // 0x410(0x08)
	None MediaSoundComponent; // 0x418(0x08)
	None bPlaySoloSequencePlayer; // 0x420(0x01)
	None CurrentArmoryTab; // 0x428(0x10)
	None LoginWidget; // 0x438(0x08)
	None bFinished_SequencePlayer_Endgame; // 0x440(0x01)
	None ANIM-Lobby01_5_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x448(0x08)
	None ANIM-Lobby02_8_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x450(0x08)
	None ANIM-Lobby03_2_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x458(0x08)
	None ANIM-Lobby04_11_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x460(0x08)
	None SK-Body_Female_5_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x468(0x08)
	None Title_TowerBridge_Squard_5_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x470(0x08)
	None SK-Body_Female_Ranking_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x478(0x08)
	None Ak-LobbySound_1_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x480(0x08)
	None Title_TowerBridge_Endgame_2_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x488(0x08)
	None Title_TowerBridge_Readyshot_2_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x490(0x08)
	None Character_Creation_2_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x498(0x08)
	None ExponentialHeightFog3_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4a0(0x08)
	None ExponentialHeightFog_1_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4a8(0x08)
	None CineCameraActor_1_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4b0(0x08)
	None CineCamera_Supplybox_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4b8(0x08)
	None CineCamera_All_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4c0(0x08)
	None Character_Customization_Face_3_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4c8(0x08)
	None Supplybox_Lobby_4_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4d0(0x08)
	None Supplybox_Lobby_3_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4d8(0x08)
	None CineCamera_Target_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4e0(0x08)
	None CineCamera_Rank_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4e8(0x08)
	None Title_Rank_2_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4f0(0x08)
	None Gun_Survey_Plane_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x4f8(0x08)
	None Weapon_Lobby_01_2_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x500(0x08)
	None CineCamera_Face3_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x508(0x08)
	None Screen_Transition_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x510(0x08)
	None Character_Fade_2_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x518(0x08)
	None PS-LobbyRay1_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x520(0x08)
	None PS-LobbyRay2_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x528(0x08)
	None PS-LobbyRay3_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x530(0x08)
	None PS-LobbyRay4_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x538(0x08)
	None PS-LobbyRay5_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x540(0x08)
	None PS-LobbyRay6_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x548(0x08)
	None PS-LobbyRay7_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x550(0x08)
	None PS-LobbyRay8_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x558(0x08)
	None Weapon_Lobby_Disassemble_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x560(0x08)
	None Weapon_Lobby_Repair_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x568(0x08)
	None CineCamera_Weapon_Customization02_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x570(0x08)
	None CineCamera_Weapon_Customization_2_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x578(0x08)
	None Weapon_Lobby_Custom_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x580(0x08)
	None SK-Body_Female_Creation_ExecuteUbergraph_LV-Title_Alternative_RefProperty; // 0x588(0x08)
	None CineCameraActor_1_EdGraph_4_RefProperty; // 0x590(0x08)
	None Gun_Survey_Plane_EdGraph_11_RefProperty; // 0x598(0x08)
	None Gun_Survey_Plane_EdGraph_12_RefProperty; // 0x5a0(0x08)
	None Gun_Survey_Plane_EdGraph_13_RefProperty; // 0x5a8(0x08)
	None PostProcessVolume2_EdGraph_14_RefProperty; // 0x5b0(0x08)
	None PostProcessVolume2_EdGraph_15_RefProperty; // 0x5b8(0x08)
	None Supplybox_Lobby_4_EdGraph_16_RefProperty; // 0x5c0(0x08)
	None Title_Rank_2_EdGraph_16_RefProperty; // 0x5c8(0x08)
	None Character_Customization_Face_3_EdGraph_16_RefProperty; // 0x5d0(0x08)
	None Supplybox_Lobby_3_EdGraph_16_RefProperty; // 0x5d8(0x08)
	None Plane_3_EdGraph_27_RefProperty; // 0x5e0(0x08)
	None Plane_2_EdGraph_27_RefProperty; // 0x5e8(0x08)
	None Plane_4_EdGraph_27_RefProperty; // 0x5f0(0x08)
	None UberGraphFrame; // 0x270(0x08)
	None AnimGraphNode_AnimDynamics_11; // 0x280(0x440)
	None AnimGraphNode_AnimDynamics_10; // 0x6c0(0x440)
	None AnimGraphNode_ComponentToLocalSpace; // 0xb00(0x20)
	None AnimGraphNode_AnimDynamics_9; // 0xb20(0x440)
	None AnimGraphNode_AnimDynamics_8; // 0xf60(0x440)
	None AnimGraphNode_AnimDynamics_7; // 0x13a0(0x440)
	None AnimGraphNode_AnimDynamics_6; // 0x17e0(0x440)
	None AnimGraphNode_AnimDynamics_5; // 0x1c20(0x440)
	None AnimGraphNode_AnimDynamics_4; // 0x2060(0x440)
	None AnimGraphNode_AnimDynamics_3; // 0x24a0(0x440)
	None AnimGraphNode_LocalToComponentSpace; // 0x28e0(0x20)
	None AnimGraphNode_SequencePlayer_12; // 0x2900(0x78)
	None AnimGraphNode_TransitionResult_4; // 0x2978(0x28)
	None AnimGraphNode_TransitionResult_3; // 0x29a0(0x28)
	None AnimGraphNode_TransitionResult_2; // 0x29c8(0x28)
	None AnimGraphNode_TransitionResult; // 0x29f0(0x28)
	None AnimGraphNode_SequencePlayer_11; // 0x2a18(0x78)
	None AnimGraphNode_StateResult_4; // 0x2a90(0x30)
	None AnimGraphNode_SequencePlayer_10; // 0x2ac0(0x78)
	None AnimGraphNode_StateResult_3; // 0x2b38(0x30)
	None AnimGraphNode_SequencePlayer_9; // 0x2b68(0x78)
	None AnimGraphNode_StateResult_2; // 0x2be0(0x30)
	None AnimGraphNode_SequencePlayer_8; // 0x2c10(0x78)
	None AnimGraphNode_StateResult; // 0x2c88(0x30)
	None AnimGraphNode_StateMachine; // 0x2cb8(0xb0)
	None AnimGraphNode_SaveCachedPose_3; // 0x2d68(0xb8)
	None AnimGraphNode_UseCachedPose_6; // 0x2e20(0x28)
	None AnimGraphNode_UseCachedPose_5; // 0x2e48(0x28)
	None AnimGraphNode_UseCachedPose_4; // 0x2e70(0x28)
	None AnimGraphNode_UseCachedPose_3; // 0x2e98(0x28)
	None AnimGraphNode_AnimDynamics_2; // 0x2ec0(0x440)
	None AnimGraphNode_AnimDynamics; // 0x3300(0x440)
	None AnimGraphNode_KawaiiPhysics_12; // 0x3740(0x250)
	None AnimGraphNode_KawaiiPhysics_11; // 0x3990(0x250)
	None AnimGraphNode_KawaiiPhysics_10; // 0x3be0(0x250)
	None AnimGraphNode_KawaiiPhysics_9; // 0x3e30(0x250)
	None AnimGraphNode_KawaiiPhysics_8; // 0x4080(0x250)
	None AnimGraphNode_KawaiiPhysics_7; // 0x42d0(0x250)
	None AnimGraphNode_BoneDrivenController_8; // 0x4520(0x118)
	None AnimGraphNode_BoneDrivenController_7; // 0x4638(0x118)
	None AnimGraphNode_BoneDrivenController_6; // 0x4750(0x118)
	None AnimGraphNode_BoneDrivenController_5; // 0x4868(0x118)
	None AnimGraphNode_BoneDrivenController_4; // 0x4980(0x118)
	None AnimGraphNode_BoneDrivenController_3; // 0x4a98(0x118)
	None AnimGraphNode_BoneDrivenController_2; // 0x4bb0(0x118)
	None AnimGraphNode_BoneDrivenController; // 0x4cc8(0x118)
	None AnimGraphNode_SaveCachedPose_2; // 0x4de0(0xb8)
	None AnimGraphNode_BlendListByEnum; // 0x4e98(0xb0)
	None AnimGraphNode_SequencePlayer_7; // 0x4f48(0x78)
	None AnimGraphNode_LayeredBoneBlend_2; // 0x4fc0(0xc0)
	None AnimGraphNode_SequencePlayer_6; // 0x5080(0x78)
	None AnimGraphNode_SequencePlayer_5; // 0x50f8(0x78)
	None AnimGraphNode_LayeredBoneBlend; // 0x5170(0xc0)
	None AnimGraphNode_SequencePlayer_4; // 0x5230(0x78)
	None AnimGraphNode_SequencePlayer_3; // 0x52a8(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x5320(0x78)
	None AnimGraphNode_ApplyAdditive; // 0x5398(0xc8)
	None AnimGraphNode_UseCachedPose_2; // 0x5460(0x28)
	None AnimGraphNode_UseCachedPose; // 0x5488(0x28)
	None AnimGraphNode_SaveCachedPose; // 0x54b0(0xb8)
	None AnimGraphNode_BlendListByBool; // 0x5568(0xa0)
	None AnimGraphNode_SequencePlayer; // 0x5608(0x78)
	None AnimGraphNode_BlendListByInt; // 0x5680(0xa0)
	None AnimGraphNode_Root; // 0x5720(0x30)
	None AnimGraphNode_KawaiiPhysics_6; // 0x5750(0x250)
	None AnimGraphNode_KawaiiPhysics_5; // 0x59a0(0x250)
	None AnimGraphNode_KawaiiPhysics_4; // 0x5bf0(0x250)
	None AnimGraphNode_KawaiiPhysics_3; // 0x5e40(0x250)
	None AnimGraphNode_KawaiiPhysics_2; // 0x6090(0x250)
	None AnimGraphNode_KawaiiPhysics; // 0x62e0(0x250)
	None PawnIndex; // 0x6530(0x04)
	None IdleNum; // 0x6534(0x04)
	None IdleAnimSequence; // 0x6538(0x08)
	None CharacterRef; // 0x6540(0x08)
	None bIsMale; // 0x6548(0x01)
	None bIsEquippingWeapon; // 0x6549(0x01)
	None WeaponAnimType; // 0x654a(0x01)
	None HandAnim; // 0x6550(0x08)
	None GripType; // 0x6558(0x01)
	None bIsEquippingNormalGrip; // 0x6559(0x01)
	None HandL_Location; // 0x655c(0x0c)
	None HandL_Rotation; // 0x6568(0x0c)
	None LeftHandIK_Alpha; // 0x6574(0x04)
	None AnimDynamicsForce; // 0x6578(0x0c)
	None PrevCharacterRotationYaw; // 0x6584(0x04)
	None RightHandIK_Alpha; // 0x6588(0x04)
	None bReady; // 0x658c(0x01)
	None ReadyAnimSequence; // 0x6590(0x08)
	None Readyon_AnimSequence; // 0x6598(0x08)
	None Readyoff_AnimSequence; // 0x65a0(0x08)
	None DeltaTimeX; // 0x65a8(0x04)
	None HairAnimDynamicsAlpha; // 0x65ac(0x04)
	None UberGraphFrame; // 0x310(0x08)
	None MaterialBillboard; // 0x318(0x08)
	None InternalPP; // 0x320(0x08)
	None Bounding Box; // 0x328(0x08)
	None Bleach Bypass; // 0x330(0x01)
	None Distance Fog; // 0x331(0x01)
	None Channel Clamper; // 0x332(0x01)
	None mChannelClamper; // 0x338(0x08)
	None iChannelClamper; // 0x340(0x08)
	None Channel Swapper; // 0x348(0x01)
	None Screen Drops; // 0x349(0x01)
	None Alcohol; // 0x34a(0x01)
	None Drug; // 0x34b(0x01)
	None Mosaic; // 0x34c(0x01)
	None Pixel Dissolve; // 0x34d(0x01)
	None Blur; // 0x34e(0x01)
	None mBleachBypass; // 0x350(0x08)
	None mDistanceFog; // 0x358(0x08)
	None mChannelSwapper; // 0x360(0x08)
	None mScreenDrops; // 0x368(0x08)
	None mAlcohol; // 0x370(0x08)
	None mDrug; // 0x378(0x08)
	None mMosaic; // 0x380(0x08)
	None mPixelDissolve; // 0x388(0x08)
	None mBlur; // 0x390(0x08)
	None Channel Clamper Red Intensity; // 0x398(0x04)
	None Channel Clamper Green Intensity; // 0x39c(0x04)
	None Channel Clamper Blue Intensity; // 0x3a0(0x04)
	None iBleachBypass; // 0x3a8(0x08)
	None iDistanceFog; // 0x3b0(0x08)
	None iChannelSwapper; // 0x3b8(0x08)
	None Channel Swapper Red; // 0x3c0(0x01)
	None Channel Swapper Green; // 0x3c1(0x01)
	None Channel Swapper Blue; // 0x3c2(0x01)
	None iScreenDrops; // 0x3c8(0x08)
	None iAlcohol; // 0x3d0(0x08)
	None iDrug; // 0x3d8(0x08)
	None iMosaic; // 0x3e0(0x08)
	None iPixelDissolve; // 0x3e8(0x08)
	None iBlur; // 0x3f0(0x08)
	None Screen Drops Layer 1 Map; // 0x3f8(0x08)
	None Screen Drops Layer 1 Intensity; // 0x400(0x04)
	None Mosaic Scale; // 0x404(0x04)
	None Alcohol Speed; // 0x408(0x04)
	None Drug Speed; // 0x40c(0x04)
	None Pixel Dissolve Intensity; // 0x410(0x04)
	None Blur Amount; // 0x414(0x04)
	None ASCII; // 0x418(0x01)
	None mAscii; // 0x420(0x08)
	None iAscii; // 0x428(0x08)
	None Colorize; // 0x430(0x01)
	None mColorize; // 0x438(0x08)
	None iColorize; // 0x440(0x08)
	None Colorize Detail; // 0x448(0x04)
	None Comic; // 0x44c(0x01)
	None mComic; // 0x450(0x08)
	None iComic; // 0x458(0x08)
	None Comic Blend Color; // 0x460(0x10)
	None Comic Threshold; // 0x470(0x04)
	None Edge Detect; // 0x474(0x01)
	None mEdgeDetect; // 0x478(0x08)
	None iEdgeDetect; // 0x480(0x08)
	None Emboss; // 0x488(0x01)
	None mEmboss; // 0x490(0x08)
	None iEmboss; // 0x498(0x08)
	None Glitch; // 0x4a0(0x01)
	None mGlitch; // 0x4a8(0x08)
	None iGlitch; // 0x4b0(0x08)
	None Glitch Speed; // 0x4b8(0x04)
	None Glitch Lines; // 0x4bc(0x04)
	None Glitch Blocking; // 0x4c0(0x04)
	None Monitor Effects; // 0x4c4(0x01)
	None mGrainNLines; // 0x4c8(0x08)
	None iGrainNLines; // 0x4d0(0x08)
	None Monitor Effects Line Count; // 0x4d8(0x04)
	None Monitor Effects Intensity 1; // 0x4dc(0x04)
	None Monitor Effects Intensity 2; // 0x4e0(0x04)
	None Hard Emboss; // 0x4e4(0x01)
	None mHardEmboss; // 0x4e8(0x08)
	None iHardEmboss; // 0x4f0(0x08)
	None Hue Panner; // 0x4f8(0x01)
	None mHuePanner; // 0x500(0x08)
	None iHuePanner; // 0x508(0x08)
	None Hue Panner Speed; // 0x510(0x04)
	None Monochrome; // 0x514(0x01)
	None mMonochrome; // 0x518(0x08)
	None iMonochrome; // 0x520(0x08)
	None Monochrome Color; // 0x528(0x10)
	None Radial Blur; // 0x538(0x01)
	None mRadialBlur; // 0x540(0x08)
	None iRadialBlur; // 0x548(0x08)
	None Radial Blur Width; // 0x550(0x04)
	None Radial Blur Samples; // 0x554(0x04)
	None Scratches; // 0x558(0x01)
	None mScratches; // 0x560(0x08)
	None iScratches; // 0x568(0x08)
	None Screen Waves; // 0x570(0x01)
	None mScreenWaves; // 0x578(0x08)
	None iScreenWaves; // 0x580(0x08)
	None Screen Waves X Tiling; // 0x588(0x04)
	None Screen Waves Y Tiling; // 0x58c(0x04)
	None Monitor Effects Distortion 1; // 0x590(0x04)
	None Monitor Effects Distortion 2; // 0x594(0x04)
	None Monitor Effects Picture Scale; // 0x598(0x04)
	None Distance Fog Near Color; // 0x59c(0x10)
	None Distance Fog Far Color; // 0x5ac(0x10)
	None Distance Fog Distance; // 0x5bc(0x04)
	None Scratches Distortion Map; // 0x5c0(0x08)
	None Scratches Distortion Amount; // 0x5c8(0x04)
	None Scratches Color; // 0x5cc(0x10)
	None Screen Drops Layer 1 Speed; // 0x5dc(0x04)
	None Screen Drops Layer 1 Noise; // 0x5e0(0x04)
	None Screen Drops Layer 2 Map; // 0x5e8(0x08)
	None Screen Drops Layer 2 Intensity; // 0x5f0(0x04)
	None Screen Drops Layer 2 Speed; // 0x5f4(0x04)
	None Screen Drops Layer 2 Noise; // 0x5f8(0x04)
	None Screen Drops Layer 3 Map; // 0x600(0x08)
	None Screen Drops Layer 3 Intensity; // 0x608(0x04)
	None Screen Drops Layer 3 Speed; // 0x60c(0x04)
	None Invert; // 0x610(0x01)
	None mInvert; // 0x618(0x08)
	None iInvert; // 0x620(0x08)
	None Iridescent; // 0x628(0x01)
	None mIridescent; // 0x630(0x08)
	None iIridescent; // 0x638(0x08)
	None Iridescent Iridescence; // 0x640(0x04)
	None Kuwahara; // 0x644(0x01)
	None mKuwahara; // 0x648(0x08)
	None iKuwahara; // 0x650(0x08)
	None Kuwahara Amount; // 0x658(0x04)
	None Pulse; // 0x65c(0x01)
	None mPulse; // 0x660(0x08)
	None iPulse; // 0x668(0x08)
	None Pulse Center X; // 0x670(0x04)
	None Pulse Center Y; // 0x674(0x04)
	None Pulse Speed; // 0x678(0x04)
	None Pulse Smoothing; // 0x67c(0x04)
	None Squares; // 0x680(0x01)
	None mSquares; // 0x688(0x08)
	None iSquares; // 0x690(0x08)
	None Squares Scale; // 0x698(0x04)
	None Squares Ratio; // 0x69c(0x04)
	None Squares Radius; // 0x6a0(0x04)
	None Squares Brightness; // 0x6a4(0x04)
	None Tiles; // 0x6a8(0x01)
	None mTiles; // 0x6b0(0x08)
	None iTiles; // 0x6b8(0x08)
	None Tiles Centered; // 0x6c0(0x01)
	None Tiles Count; // 0x6c4(0x04)
	None TV Noise; // 0x6c8(0x01)
	None mTVNoise; // 0x6d0(0x08)
	None iTVNoise; // 0x6d8(0x08)
	None TV Noise Contrast; // 0x6e0(0x04)
	None TV Noise Intensity; // 0x6e4(0x04)
	None Native Post Process; // 0x6f0(0x5c0)
	None LOOK!; // 0xcb0(0x01)
	None LOOK! Presets; // 0xcb1(0x01)
	None Circles; // 0xcb2(0x01)
	None mCircles; // 0xcb8(0x08)
	None iCircles; // 0xcc0(0x08)
	None Circles Ratio; // 0xcc8(0x04)
	None Circles Tiling; // 0xccc(0x04)
	None Sonar; // 0xcd0(0x01)
	None mSonar; // 0xcd8(0x08)
	None iSonar; // 0xce0(0x08)
	None Sonar Color; // 0xce8(0x10)
	None Sonar Color Intensity; // 0xcf8(0x04)
	None Sonar Depth; // 0xcfc(0x04)
	None Sonar Wave Distance; // 0xd00(0x04)
	None Sonar Distortion Intensity; // 0xd04(0x04)
	None Sonar Sharpness; // 0xd08(0x04)
	None Alcohol Offset; // 0xd0c(0x04)
	None Distance Distortion; // 0xd10(0x01)
	None mDistanceDistortion; // 0xd18(0x08)
	None iDistanceDistortion; // 0xd20(0x08)
	None Distance Distortion Normal; // 0xd28(0x08)
	None Distance Distortion Amount; // 0xd30(0x04)
	None Distance Distortion Edge Distance; // 0xd34(0x04)
	None Distance Distortion Edge Fading; // 0xd38(0x04)
	None Distance Distortion Movement Speed; // 0xd3c(0x04)
	None Distance Distortion Movement Scale; // 0xd40(0x04)
	None Distance Distortion Affected Brightness; // 0xd44(0x04)
	None Distance Distortion Unaffected Brightness; // 0xd48(0x04)
	None Drawing; // 0xd4c(0x01)
	None mDrawing; // 0xd50(0x08)
	None iDrawing; // 0xd58(0x08)
	None Drawing Paper Texture; // 0xd60(0x08)
	None Drawing Noise Algorithm; // 0xd68(0x01)
	None Drawing Ink Amount; // 0xd6c(0x04)
	None Drawing Liner Amount; // 0xd70(0x04)
	None Drawing Blending Color; // 0xd74(0x10)
	None Magic Transitions; // 0xd84(0x01)
	None mMagicTransitions; // 0xd88(0x08)
	None iMagicTransitions; // 0xd90(0x08)
	None Magic Transitions Final Texture; // 0xd98(0x08)
	None Magic Transitions Mask Texture; // 0xda0(0x08)
	None Magic Transitions Transition Amount; // 0xda8(0x04)
	None Magic Transitions Flashing Intensity; // 0xdac(0x04)
	None Magic Transitions Flashing Tolerance; // 0xdb0(0x04)
	None Magic Transitions Flashing Color; // 0xdb4(0x10)
	None Screen Damage; // 0xdc4(0x01)
	None mScreenDamage; // 0xdc8(0x08)
	None iScreenDamage; // 0xdd0(0x08)
	None Screen Damage Texture; // 0xdd8(0x08)
	None Screen Damage Intensity; // 0xde0(0x04)
	None Screen Damage Distortion; // 0xde4(0x04)
	None Screen Damage Tint; // 0xde8(0x10)
	None Screen Damage Edge Size; // 0xdf8(0x04)
	None Screen Damage Fading; // 0xdfc(0x04)
	None Screen Decals; // 0xe00(0x01)
	None mScreenDecals; // 0xe08(0x08)
	None iScreenDecals; // 0xe10(0x08)
	None Screen Decals Slot 1 - Texture; // 0xe18(0x08)
	None Screen Decals Slot 1 - Distortion; // 0xe20(0x04)
	None Screen Decals Slot 1 - Intensity; // 0xe24(0x04)
	None Screen Decals Slot 1 - Position X; // 0xe28(0x04)
	None Screen Decals Slot 1 - Position Y; // 0xe2c(0x04)
	None Screen Decals Slot 1 - Rotation; // 0xe30(0x04)
	None Screen Decals Slot 1 - Size; // 0xe34(0x04)
	None Screen Decals Slot 2 - Texture; // 0xe38(0x08)
	None Screen Decals Slot 2 - Distortion; // 0xe40(0x04)
	None Screen Decals Slot 2 - Intensity; // 0xe44(0x04)
	None Screen Decals Slot 2 - Position X; // 0xe48(0x04)
	None Screen Decals Slot 2 - Position Y; // 0xe4c(0x04)
	None Screen Decals Slot 2 - Rotation; // 0xe50(0x04)
	None Screen Decals Slot 2 - Size; // 0xe54(0x04)
	None Screen Decals Slot 3 - Texture; // 0xe58(0x08)
	None Screen Decals Slot 3 - Distortion; // 0xe60(0x04)
	None Screen Decals Slot 3 - Intensity; // 0xe64(0x04)
	None Screen Decals Slot 3 - Position X; // 0xe68(0x04)
	None Screen Decals Slot 3 - Position Y; // 0xe6c(0x04)
	None Screen Decals Slot 3 - Rotation; // 0xe70(0x04)
	None Screen Decals Slot 3 - Size; // 0xe74(0x04)
	None Screen Decals Slot 4 - Texture; // 0xe78(0x08)
	None Screen Decals Slot 4 - Distortion; // 0xe80(0x04)
	None Screen Decals Slot 4 - Intensity; // 0xe84(0x04)
	None Screen Decals Slot 4 - Position X; // 0xe88(0x04)
	None Screen Decals Slot 4 - Position Y; // 0xe8c(0x04)
	None Screen Decals Slot 4 - Rotation; // 0xe90(0x04)
	None Screen Decals Slot 4 - Size; // 0xe94(0x04)
	None Sharpen; // 0xe98(0x01)
	None mSharpen; // 0xea0(0x08)
	None iSharpen; // 0xea8(0x08)
	None Sharpen Value; // 0xeb0(0x04)
	None Toon Shading; // 0xeb4(0x01)
	None mToonShading; // 0xeb8(0x08)
	None iToonShading; // 0xec0(0x08)
	None Toon Shading Use Diffuse Buffer; // 0xec8(0x01)
	None Toon Shading Details; // 0xecc(0x04)
	None Toon Shading Fading ; // 0xed0(0x04)
	None Toon Shading Size; // 0xed4(0x04)
	None Toon Shading Sobel Strength; // 0xed8(0x04)
	None Anamorphic Lens Flares; // 0xedc(0x01)
	None mAnamorphicLensFlares; // 0xee0(0x08)
	None iAnamorphicLensFlares; // 0xee8(0x08)
	None Anamorphic Lens Flares Linear Color; // 0xef0(0x04)
	None Anamorphic Lens Flares Exposure Scale; // 0xef4(0x04)
	None Anamorphic Lens Flares Threshold; // 0xef8(0x04)
	None Anamorphic Lens Flares Intensity; // 0xefc(0x04)
	None Anamorphic Lens Flares Steps; // 0xf00(0x04)
	None Anamorphic Lens Flares Length; // 0xf04(0x04)
	None Anamorphic Lens Flares Tint; // 0xf08(0x10)
	None Frost; // 0xf18(0x01)
	None mFrost; // 0xf20(0x08)
	None iFrost; // 0xf28(0x08)
	None Frost Texture; // 0xf30(0x08)
	None Frost Colorization; // 0xf38(0x04)
	None Frost Distortion Strength; // 0xf3c(0x04)
	None Frost Visible Area; // 0xf40(0x04)
	None ASCII Color Multiplier; // 0xf44(0x10)
	None Neon; // 0xf54(0x01)
	None mNeon; // 0xf58(0x08)
	None iNeon; // 0xf60(0x08)
	None Neon Color; // 0xf68(0x10)
	None Neon Noise; // 0xf78(0x04)
	None Neon Power; // 0xf7c(0x04)
	None Custom Depth Highlighter; // 0xf80(0x01)
	None mCustomDepthHighlighter; // 0xf88(0x08)
	None iCustomDepthHighlighter; // 0xf90(0x08)
	None Custom Depth Highlighter Highlight Color; // 0xf98(0x10)
	None Custom Depth Highlighter Highlight Opacity; // 0xfa8(0x04)
	None Custom Depth Highlighter (Clip); // 0xfac(0x01)
	None mCustomDepthHighlighterClip; // 0xfb0(0x08)
	None iCustomDepthHighlighterClip; // 0xfb8(0x08)
	None Custom Depth Highlighter (C) Highlight Color; // 0xfc0(0x10)
	None Custom Depth Highlighter (C) Highlight Opacity; // 0xfd0(0x04)
	None Edge Detect Threshold; // 0xfd4(0x04)
	None Scratches Noising; // 0xfd8(0x04)
	None Enabled; // 0xfdc(0x01)
	None Unbound; // 0xfdd(0x01)
	None AllMaterials; // 0xfe0(0x10)
	None Screen Drops Layer 3 Noise; // 0xff0(0x04)
	None Screen Drops Diffuse Color; // 0xff4(0x10)
	None Screen Drops Splashes Amount; // 0x1004(0x04)
	None Screen Drops Splashes Tiling; // 0x1008(0x04)
	None Screen Drops Splashes Intensity; // 0x100c(0x04)
	None Screen Drops Bump; // 0x1010(0x04)
	None 2D Transform; // 0x1014(0x01)
	None m2DTransform; // 0x1018(0x08)
	None i2DTransform; // 0x1020(0x08)
	None Kaleidescope; // 0x1028(0x01)
	None mKaleidescope; // 0x1030(0x08)
	None iKaleidescope; // 0x1038(0x08)
	None Letterboxing; // 0x1040(0x01)
	None mLetterboxing; // 0x1048(0x08)
	None iLetterboxing; // 0x1050(0x08)
	None Snow; // 0x1058(0x01)
	None mSnow; // 0x1060(0x08)
	None iSnow; // 0x1068(0x08)
	None 2D Transform Anchor Point (X); // 0x1070(0x04)
	None 2D Transform Anchor Point (Y); // 0x1074(0x04)
	None 2D Transform Rotate; // 0x1078(0x04)
	None 2D Transform Pan (X); // 0x107c(0x04)
	None 2D Transform Pan (Y); // 0x1080(0x04)
	None 2D Transform Scale (X); // 0x1084(0x04)
	None 2D Transform Scale (Y); // 0x1088(0x04)
	None 2D Transform Tiled; // 0x108c(0x01)
	None Kaleidescope Scale; // 0x1090(0x04)
	None Kaleidescope Factor A; // 0x1094(0x04)
	None Kaleidescope Factor B; // 0x1098(0x04)
	None Letterboxing Texture; // 0x10a0(0x08)
	None Letterboxing Size; // 0x10a8(0x04)
	None Letterboxing Horizontal; // 0x10ac(0x01)
	None Letterboxing Vertical; // 0x10ad(0x01)
	None Snow Amount; // 0x10b0(0x04)
	None Snow Distortion; // 0x10b4(0x04)
	None Snow Size; // 0x10b8(0x04)
	None Snow Speed (X); // 0x10bc(0x04)
	None Snow Speed (Y); // 0x10c0(0x04)
	None Drawing Animation Speed; // 0x10c4(0x04)
	None Distance Fog Edge Sharpness; // 0x10c8(0x04)
	None Screen Drops Diffuse Intensity; // 0x10cc(0x04)
	None World Splash; // 0x10d0(0x01)
	None mWorldSplash; // 0x10d8(0x08)
	None iWorldSplash; // 0x10e0(0x08)
	None World Splash Distort; // 0x10e8(0x04)
	None World Splash Smoothness; // 0x10ec(0x04)
	None World Splash Tiling; // 0x10f0(0x04)
	None World Splash Color Tint; // 0x10f4(0x10)
	None Blur Samples; // 0x1104(0x04)
	None Frost Color; // 0x1108(0x10)
	None Comic PreMultiplier; // 0x1118(0x04)
	None Comic Desaturation; // 0x111c(0x04)
	None World Glitch; // 0x1120(0x01)
	None mWorldGlitch; // 0x1128(0x08)
	None iWorldGlitch; // 0x1130(0x08)
	None World Glitch Animated; // 0x1138(0x01)
	None World Glitch Animation Speed; // 0x113c(0x04)
	None World Glitch Distance; // 0x1140(0x04)
	None World Glitch Distance Sharpness; // 0x1144(0x04)
	None World Glitch Phase; // 0x1148(0x04)
	None World Glitch Power; // 0x114c(0x04)
	None World Glitch Grid Position; // 0x1150(0x0c)
	None World Glitch Grid Size; // 0x115c(0x0c)
	None Digitize; // 0x1168(0x01)
	None mDigitize; // 0x1170(0x08)
	None iDigitize; // 0x1178(0x08)
	None Digitize Cell Color; // 0x1180(0x10)
	None Digitize Cell Position; // 0x1190(0x0c)
	None Digitize Cell Position Over Time; // 0x119c(0x0c)
	None Digitize Distance; // 0x11a8(0x04)
	None Digitize Distance Sharpness; // 0x11ac(0x04)
	None Digitize Cell Size; // 0x11b0(0x04)
	None Digitize Cell Color Multiplier; // 0x11b4(0x04)
	None Digitize Cell Distortion; // 0x11b8(0x04)
	None Digitize Background Color Multiplier; // 0x11bc(0x04)
	None Alarm; // 0x11c0(0x01)
	None mAlarm; // 0x11c8(0x08)
	None iAlarm; // 0x11d0(0x08)
	None Alarm Color; // 0x11d8(0x10)
	None Alarm Speed; // 0x11e8(0x04)
	None Sketch; // 0x11ec(0x01)
	None mSketch; // 0x11f0(0x08)
	None iSketch; // 0x11f8(0x08)
	None Sketch Color; // 0x1200(0x10)
	None Sketch Background Color; // 0x1210(0x10)
	None Sketch Power; // 0x1220(0x04)
	None Sketch Pattern Rotation; // 0x1224(0x04)
	None Sketch Pattern Speed; // 0x1228(0x04)
	None Custom Depth Highlighter Outline Color; // 0x122c(0x10)
	None Custom Depth Highlighter Outline Opacity; // 0x123c(0x04)
	None Custom Depth Highlighter (C) Outline Color; // 0x1240(0x10)
	None Custom Depth Highlighter (C) Outline Opacity; // 0x1250(0x04)
	None Wired; // 0x1254(0x01)
	None iWired; // 0x1258(0x08)
	None mWired; // 0x1260(0x08)
	None Wired Color; // 0x1268(0x10)
	None Wired Power; // 0x1278(0x04)
	None Mosaic - Advanced; // 0x1280(0x38)
	None Drug - Advanced; // 0x12b8(0x38)
	None Alcohol - Advanced; // 0x12f0(0x38)
	None Pixel Dissolve - Advanced; // 0x1328(0x38)
	None Channel Clamper - Advanced; // 0x1360(0x38)
	None Channel Swapper - Advanced; // 0x1398(0x38)
	None Bleach Bypass - Advanced; // 0x13d0(0x38)
	None Blur - Advanced; // 0x1408(0x38)
	None ASCII PreMultiplier; // 0x1440(0x04)
	None ASCII - Advanced; // 0x1448(0x38)
	None Colorize - Advanced; // 0x1480(0x38)
	None Edge Detect - Advanced; // 0x14b8(0x38)
	None Emboss - Advanced; // 0x14f0(0x38)
	None Hard Emboss - Advanced; // 0x1528(0x38)
	None Glitch Grid Distortion Power; // 0x1560(0x04)
	None Glitch Grid Distortion Size; // 0x1564(0x04)
	None Glitch Grid Distortion Speed; // 0x1568(0x04)
	None Glitch - Advanced; // 0x1570(0x38)
	None Monitor Effects Tiled; // 0x15a8(0x01)
	None Monitor Effects - Advanced; // 0x15b0(0x38)
	None Hue Panner - Advanced; // 0x15e8(0x38)
	None Monochrome - Advanced; // 0x1620(0x38)
	None Radial Blur Center; // 0x1658(0x08)
	None Radial Blur Sample Offset; // 0x1660(0x08)
	None Radial Blur - Advanced; // 0x1668(0x38)
	None Scratches - Advanced; // 0x16a0(0x38)
	None Screen Waves - Advanced; // 0x16d8(0x38)
	None Distance Fog - Advanced; // 0x1710(0x38)
	None Screen Drops - Advanced; // 0x1748(0x38)
	None Invert - Advanced; // 0x1780(0x38)
	None Iridescent - Advanced; // 0x17b8(0x38)
	None Kuwahara - Advanced; // 0x17f0(0x38)
	None Pulse - Advanced; // 0x1828(0x38)
	None Squares - Advanced; // 0x1860(0x38)
	None Tiles - Advanced; // 0x1898(0x38)
	None TV Noise - Advanced; // 0x18d0(0x38)
	None Circles - Advanced; // 0x1908(0x38)
	None Sonar - Advanced; // 0x1940(0x38)
	None Distance Distortion - Advanced; // 0x1978(0x38)
	None Drawing - Advanced; // 0x19b0(0x38)
	None Magic Transitions - Advanced; // 0x19e8(0x38)
	None Screen Damage - Advanced; // 0x1a20(0x38)
	None Screen Decals - Advanced; // 0x1a58(0x38)
	None Sharpen - Advanced; // 0x1a90(0x38)
	None Toon Shading - Advanced; // 0x1ac8(0x38)
	None Anamorphic Lens Flares - Advanced; // 0x1b00(0x38)
	None Frost - Advanced; // 0x1b38(0x38)
	None Neon - Advanced; // 0x1b70(0x38)
	None Custom Depth Highlighter - Advanced; // 0x1ba8(0x30)
	None Custom Depth Highlighter (Clip) - Advanced; // 0x1bd8(0x30)
	None 2D Transform Background Color; // 0x1c08(0x10)
	None 2D Transform - Advanced; // 0x1c18(0x38)
	None Kaleidescope - Advanced; // 0x1c50(0x38)
	None Letterboxing - Advanced; // 0x1c88(0x38)
	None Snow - Advanced; // 0x1cc0(0x38)
	None World Splash - Advanced; // 0x1cf8(0x38)
	None World Glitch - Advanced; // 0x1d30(0x38)
	None Digitize - Advanced; // 0x1d68(0x38)
	None Alarm - Advanced; // 0x1da0(0x38)
	None Sketch - Advanced; // 0x1dd8(0x38)
	None Wired - Advanced; // 0x1e10(0x38)
	None Comic Pattern Intensity; // 0x1e48(0x04)
	None Comic Pattern Line Count; // 0x1e4c(0x04)
	None Comic Pattern Rotation; // 0x1e50(0x04)
	None Comic - Advanced; // 0x1e58(0x38)
	None Actor Featurette; // 0x1e90(0x01)
	None mActorFeaturette; // 0x1e98(0x08)
	None iActorFeaturette; // 0x1ea0(0x08)
	None Actor Featurette Background Multiplier; // 0x1ea8(0x10)
	None Actor Featurette Background Desaturation; // 0x1eb8(0x04)
	None Actor Featurette Foreground Multiplier; // 0x1ebc(0x10)
	None Actor Featurette Foreground Saturation; // 0x1ecc(0x04)
	None Actor Featurette Blur Amount; // 0x1ed0(0x04)
	None Actor Featurette Blur Samples; // 0x1ed4(0x04)
	None Actor Featurette Stencil Mask; // 0x1ed8(0x04)
	None Actor Featurette - Advanced; // 0x1ee0(0x30)
	None Infected; // 0x1f10(0x01)
	None mInfected; // 0x1f18(0x08)
	None iInfected; // 0x1f20(0x08)
	None Infected Distortion Amount; // 0x1f28(0x04)
	None Infected Smoothness; // 0x1f2c(0x04)
	None Infected Speed; // 0x1f30(0x04)
	None Infected TransformZ; // 0x1f34(0x04)
	None Infected - Advanced; // 0x1f38(0x38)
	None Colored AO; // 0x1f70(0x01)
	None mColoredAO; // 0x1f78(0x08)
	None iColoredAO; // 0x1f80(0x08)
	None Colored AO Color; // 0x1f88(0x10)
	None Colored AO Intensity; // 0x1f98(0x04)
	None Colored AO - Advanced; // 0x1fa0(0x38)
	None Camera Shake; // 0x1fd8(0x01)
	None mCameraShake; // 0x1fe0(0x08)
	None iCameraShake; // 0x1fe8(0x08)
	None Camera Shake Power (X); // 0x1ff0(0x04)
	None Camera Shake Power (Y); // 0x1ff4(0x04)
	None Camera Shake Frequency; // 0x1ff8(0x04)
	None Camera Shake - Advanced; // 0x2000(0x38)
	None Disco Ball; // 0x2038(0x01)
	None mDiscoBall; // 0x2040(0x08)
	None iDiscoBall; // 0x2048(0x08)
	None Disco Ball WS Center; // 0x2050(0x0c)
	None Disco Ball Color 1; // 0x205c(0x10)
	None Disco Ball Color 2; // 0x206c(0x10)
	None Disco Ball Block Scale; // 0x207c(0x0c)
	None Disco Ball Block Distribution; // 0x2088(0x04)
	None Disco Ball Rotation Speed; // 0x208c(0x04)
	None Disco Ball Manual Rotation; // 0x2090(0x04)
	None Disco Ball - Advanced; // 0x2098(0x38)
	None Hazy Lights; // 0x20d0(0x01)
	None mHazyLights; // 0x20d8(0x08)
	None iHazyLights; // 0x20e0(0x08)
	None Hazy Lights Move Speed; // 0x20e8(0x08)
	None Hazy Lights Position; // 0x20f0(0x08)
	None Hazy Lights - Advanced; // 0x20f8(0x38)
	None Melted World; // 0x2130(0x01)
	None mMeltedWorld; // 0x2138(0x08)
	None iMeltedWorld; // 0x2140(0x08)
	None Melted World Size; // 0x2148(0x0c)
	None Melted World Distance; // 0x2154(0x04)
	None Melted World Power; // 0x2158(0x04)
	None Melted World Sharpness; // 0x215c(0x04)
	None Melted World - Advanced; // 0x2160(0x38)
	None Selective Color; // 0x2198(0x01)
	None mSelectiveColor; // 0x21a0(0x08)
	None iSelectiveColor; // 0x21a8(0x08)
	None Selective Color Mask Color; // 0x21b0(0x10)
	None Selective Color Hue Tolerance; // 0x21c0(0x04)
	None Selective Color Saturation Tolerance; // 0x21c4(0x04)
	None Selective Color Value Tolerance; // 0x21c8(0x04)
	None Selective Color - Advanced; // 0x21d0(0x38)
	None Screen Fire; // 0x2208(0x01)
	None mScreenFire; // 0x2210(0x08)
	None iScreenFire; // 0x2218(0x08)
	None Screen Fire Color; // 0x2220(0x10)
	None Screen Fire Distortion Amount; // 0x2230(0x04)
	None Screen Fire Mask Contrast; // 0x2234(0x04)
	None Screen Fire Mask Scale; // 0x2238(0x04)
	None Screen Fire Flame Tiling; // 0x223c(0x04)
	None Screen Fire Speed; // 0x2240(0x04)
	None Screen Fire - Advanced; // 0x2248(0x38)
	None Haunted; // 0x2280(0x01)
	None mHaunted; // 0x2288(0x08)
	None iHaunted; // 0x2290(0x08)
	None Haunted Amount; // 0x2298(0x04)
	None Haunted Mask Scale; // 0x229c(0x04)
	None Haunted Texture; // 0x22a0(0x08)
	None Haunted Texture Scale; // 0x22a8(0x04)
	None Haunted - Advanced; // 0x22b0(0x38)
	None Grid Cell; // 0x22e8(0x01)
	None mGridCell; // 0x22f0(0x08)
	None iGridCell; // 0x22f8(0x08)
	None Grid Cell Animated; // 0x2300(0x01)
	None Grid Cell Animation Speed; // 0x2304(0x04)
	None Grid Cell Color; // 0x2308(0x10)
	None Grid Cell Void Color; // 0x2318(0x10)
	None Grid Cell Tiling; // 0x2328(0x04)
	None Grid Cell Transition Amount; // 0x232c(0x04)
	None Lens Distortion; // 0x2330(0x01)
	None mLensDistortion; // 0x2338(0x08)
	None iLensDistortion; // 0x2340(0x08)
	None Lens Distortion Optic Refinement; // 0x2348(0x04)
	None Lens Distortion Optic Size; // 0x234c(0x04)
	None Lens Distortion Optic Position X; // 0x2350(0x04)
	None Lens Distortion Optic Position Y; // 0x2354(0x04)
	None Lens Distortion Scope Texture; // 0x2358(0x08)
	None Lens Distortion Scope Texture Scale X; // 0x2360(0x04)
	None Lens Distortion Scope Texture Scale Y; // 0x2364(0x04)
	None Lens Distortion - Advanced; // 0x2368(0x38)
	None Grid Cell - Advanced; // 0x23a0(0x38)
	None Zone; // 0x23d8(0x01)
	None mZone; // 0x23e0(0x08)
	None iZone; // 0x23e8(0x08)
	None Zone Center; // 0x23f0(0x10)
	None Zone Radius; // 0x2400(0x04)
	None Zone Edge Hardness; // 0x2404(0x04)
	None Zone Edge Color; // 0x2408(0x10)
	None Zone Coverage Color; // 0x2418(0x10)
	None Zone - Advanced; // 0x2428(0x38)
	None Pyramid; // 0x2460(0x01)
	None mPyramid; // 0x2468(0x08)
	None iPyramid; // 0x2470(0x08)
	None Pyramid Masked; // 0x2478(0x01)
	None Pyramid Background Color; // 0x247c(0x10)
	None Pyramid Width; // 0x248c(0x04)
	None Pyramid Pan; // 0x2490(0x04)
	None Pyramid Tile Amount; // 0x2494(0x04)
	None Pyramid - Advanced; // 0x2498(0x38)
	None Mojo; // 0x24d0(0x01)
	None mMojo; // 0x24d8(0x08)
	None iMojo; // 0x24e0(0x08)
	None Mojo Animated; // 0x24e8(0x01)
	None Mojo Animation Speed; // 0x24ec(0x04)
	None Mojo Mask; // 0x24f0(0x08)
	None Mojo Distortion Map; // 0x24f8(0x08)
	None Mojo Distortion Amount; // 0x2500(0x04)
	None Mojo Color; // 0x2504(0x10)
	None Mojo Intensity; // 0x2514(0x04)
	None Mojo Phase; // 0x2518(0x04)
	None Mojo Tolerance; // 0x251c(0x04)
	None Mojo - Advanced; // 0x2520(0x38)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_Slot_2; // 0x490(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x4d8(0x18)
	None AnimGraphNode_BlendListByBool; // 0x4f0(0xa0)
	None AnimGraphNode_Slot; // 0x590(0x48)
	None AnimGraphNode_LocalRefPose; // 0x5d8(0x18)
	None UberGraphFrame; // 0x248(0x08)
	None CanvasPanel_1; // 0x250(0x08)
	None Image; // 0x258(0x08)
	None Image_2; // 0x260(0x08)
	None Image_3; // 0x268(0x08)
	None Image_4; // 0x270(0x08)
	None Image_5; // 0x278(0x08)
	None Image_6; // 0x280(0x08)
	None Image_7; // 0x288(0x08)
	None Image_8; // 0x290(0x08)
	None Image_9; // 0x298(0x08)
	None Image_10; // 0x2a0(0x08)
	None Image_11; // 0x2a8(0x08)
	None Image_12; // 0x2b0(0x08)
	None Image_13; // 0x2b8(0x08)
	None Image_14; // 0x2c0(0x08)
	None Image_15; // 0x2c8(0x08)
	None Image_16; // 0x2d0(0x08)
	None Image_17; // 0x2d8(0x08)
	None Image_18; // 0x2e0(0x08)
	None Image_47; // 0x2e8(0x08)
	None ScaleBox4X_5mm; // 0x2f0(0x08)
	None ScaleBox4X_7mm; // 0x2f8(0x08)
	None ScaleBox4X_SR; // 0x300(0x08)
	None WidgetSwitcher_167; // 0x308(0x08)
	None NewVar_1; // 0x310(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None CanvasPanel_1; // 0x250(0x08)
	None Image_19; // 0x258(0x08)
	None Image_20; // 0x260(0x08)
	None Image_21; // 0x268(0x08)
	None Image_22; // 0x270(0x08)
	None Image_23; // 0x278(0x08)
	None Image_24; // 0x280(0x08)
	None WidgetSwitcher_167; // 0x288(0x08)
	None NewVar_1; // 0x290(0x08)
	None UberGraphFrame; // 0x520(0x08)
	None ParticleSystem; // 0x528(0x08)
	None UberGraphFrame; // 0x368(0x08)
	None SkillDelayTime; // 0x370(0x04)
	None BlackOutDynamicMaterial; // 0x378(0x08)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None Sphere; // 0x420(0x08)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_Slot_2; // 0x490(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x4d8(0x18)
	None AnimGraphNode_BlendListByBool; // 0x4f0(0xa0)
	None AnimGraphNode_Slot; // 0x590(0x48)
	None AnimGraphNode_LocalRefPose; // 0x5d8(0x18)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_Slot_2; // 0x490(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x4d8(0x18)
	None AnimGraphNode_BlendListByBool; // 0x4f0(0xa0)
	None AnimGraphNode_Slot; // 0x590(0x48)
	None AnimGraphNode_LocalRefPose; // 0x5d8(0x18)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_Slot_2; // 0x490(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x4d8(0x18)
	None AnimGraphNode_BlendListByBool; // 0x4f0(0xa0)
	None AnimGraphNode_Slot; // 0x590(0x48)
	None AnimGraphNode_LocalRefPose; // 0x5d8(0x18)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_Slot_2; // 0x490(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x4d8(0x18)
	None AnimGraphNode_BlendListByBool; // 0x4f0(0xa0)
	None AnimGraphNode_Slot; // 0x590(0x48)
	None AnimGraphNode_LocalRefPose; // 0x5d8(0x18)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_4; // 0x368(0x48)
	None AnimGraphNode_BlendListByEnum; // 0x3b0(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x460(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x4d8(0x78)
	None AnimGraphNode_SequencePlayer; // 0x550(0x78)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_Slot_2; // 0x7b0(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7f8(0x18)
	None AnimGraphNode_BlendListByBool; // 0x810(0xa0)
	None AnimGraphNode_Slot; // 0x8b0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x8f8(0x18)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x768(0x18)
	None AnimGraphNode_Slot_3; // 0x780(0x48)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_Slot_2; // 0x7c8(0x48)
	None AnimGraphNode_Slot; // 0x810(0x48)
	None AnimGraphNode_LocalRefPose; // 0x858(0x18)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_Slot_2; // 0x7b0(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7f8(0x18)
	None AnimGraphNode_BlendListByBool; // 0x810(0xa0)
	None AnimGraphNode_Slot; // 0x8b0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x8f8(0x18)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_Slot_3; // 0x368(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x3b0(0xc8)
	None AnimGraphNode_LocalRefPose_3; // 0x478(0x18)
	None AnimGraphNode_LocalRefPose_2; // 0x490(0x18)
	None AnimGraphNode_Slot_2; // 0x4a8(0x48)
	None AnimGraphNode_Slot; // 0x4f0(0x48)
	None AnimGraphNode_LocalRefPose; // 0x538(0x18)
	None AnimGraphNode_BlendListByBool; // 0x550(0xa0)
	None UberGraphFrame; // 0x330(0x08)
	None AnimGraphNode_Root; // 0x338(0x30)
	None AnimGraphNode_BlendListByEnum; // 0x368(0xb0)
	None AnimGraphNode_SequencePlayer_3; // 0x418(0x78)
	None AnimGraphNode_SequencePlayer_2; // 0x490(0x78)
	None AnimGraphNode_SequencePlayer; // 0x508(0x78)
	None AnimGraphNode_Slot_4; // 0x580(0x48)
	None AnimGraphNode_TwoWayBlend; // 0x5c8(0xc8)
	None AnimGraphNode_LayeredBoneBlend; // 0x690(0xc0)
	None AnimGraphNode_LocalRefPose_3; // 0x750(0x18)
	None AnimGraphNode_Slot_3; // 0x768(0x48)
	None AnimGraphNode_LocalRefPose_2; // 0x7b0(0x18)
	None AnimGraphNode_LocalRefPose; // 0x7c8(0x18)
	None AnimGraphNode_Slot_2; // 0x7e0(0x48)
	None AnimGraphNode_Slot; // 0x828(0x48)
	None AnimGraphNode_BlendListByBool; // 0x870(0xa0)
	None ScopeWidget_Background; // 0x420(0x08)
	None Cube; // 0x428(0x08)
	None Sphere; // 0x420(0x08)
	None UberGraphFrame; // 0x248(0x08)
	None Image_1; // 0x250(0x08)
	None UberGraphFrame; // 0x368(0x08)
	None UberGraphFrame; // 0x320(0x08)
	None ParticleSystem; // 0x328(0x08)
	None SM-Aricraft001__WheelFolding; // 0x330(0x08)
	None DefaultSceneRoot; // 0x338(0x08)
	None UberGraphFrame; // 0x678(0x08)
	None Ak; // 0x680(0x08)
	None UberGraphFrame; // 0x388(0x08)
	None UberGraphFrame; // 0x368(0x08)
	None UberGraphFrame; // 0x398(0x08)
	None TextureScale; // 0x3a0(0x04)
	None BurnArea; // 0x3a4(0x04)
	None UberGraphFrame; // 0x1ff0(0x08)
	None ParticleSystem; // 0x1ff8(0x08)

	void UnloadMaskOutCache(); // UnloadMaskOutCache CustomizableObject.CustomizableObject.UnloadMaskOutCache // (Final|Native|Public|BlueprintCallable) // <Game+0x10384d0>
	void UpdateSkeletalMeshAsync(None bIgnoreCloseDist, None bForceHighPriority); // UpdateSkeletalMeshAsync CustomizableObject.CustomizableObjectInstance.UpdateSkeletalMeshAsync // (Final|Native|Public|BlueprintCallable) // <Game+0x10384f0>
	void SetReleaseMutableTexturesImmediately(None bReleaseTextures); // SetReleaseMutableTexturesImmediately CustomizableObject.CustomizableObjectSystem.SetReleaseMutableTexturesImmediately // (Final|Native|Public|BlueprintCallable) // <Game+0x103cb50>
	void UpdateSkeletalMeshAsync(None bNeverSkipUpdate); // UpdateSkeletalMeshAsync CustomizableObject.CustomizableSkeletalComponent.UpdateSkeletalMeshAsync // (Final|Native|Public|BlueprintCallable) // <Game+0x103cbe0>
	void DelegatedCallback(None Instance); // DelegatedCallback CustomizableObject.InstanceUpdatedHelper.DelegatedCallback // (Final|Native|Public) // <Game+0x103c930>
	void SetHideTimer(); // SetHideTimer UW-MyKillCountMessageWidget.UW-MyKillCountMessageWidget_C.SetHideTimer // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ExecuteUbergraph(None EntryPoint); // ExecuteUbergraph CoreUObject.Object.ExecuteUbergraph // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void CheckThirdCameraLocationRange(); // CheckThirdCameraLocationRange BP-DeathCam.BP-DeathCam_C.CheckThirdCameraLocationRange // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetDestructibleMesh(None NewMesh); // SetDestructibleMesh ApexDestruction.DestructibleComponent.SetDestructibleMesh // (Final|Native|Public|BlueprintCallable) // <Game+0x1092f60>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-MK14.ABP-MK14_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None OnMouseButtonDown(None MyGeometry, None& MouseEvent); // OnMouseButtonDown UW-PersonalSupplyBoxWidget.UW-PersonalSupplyBoxWidget_C.OnMouseButtonDown // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetPosition(None Position_); // SetPosition LowEntryExtendedStandardLibrary.LowEntryBitDataReader.SetPosition // (Final|Native|Public|BlueprintCallable) // <Game+0x1061410>
	void AddStringUtf8Array(None& Value); // AddStringUtf8Array LowEntryExtendedStandardLibrary.LowEntryBitDataWriter.AddStringUtf8Array // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x10605a0>
	void SetPosition(None Position_); // SetPosition LowEntryExtendedStandardLibrary.LowEntryByteDataReader.SetPosition // (Final|Native|Public|BlueprintCallable) // <Game+0x1076c80>
	void AddStringUtf8Array(None& Value); // AddStringUtf8Array LowEntryExtendedStandardLibrary.LowEntryByteDataWriter.AddStringUtf8Array // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1066fc0>
	void SetBytes(None& ByteArray, None Index, None Length); // SetBytes LowEntryExtendedStandardLibrary.LowEntryDouble.SetBytes // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x10768d0>
	None XboxOnePlatform(); // XboxOnePlatform LowEntryExtendedStandardLibrary.LowEntryExtendedStandardLibrary.XboxOnePlatform // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x1067090>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionBoolean.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b750>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionFloat.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b890>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionInteger.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107b9d0>
	void WaitTillDone(None WorldContextObject, None LatentInfo); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionNone.WaitTillDone // (Final|Native|Public|BlueprintCallable) // <Game+0x107bb10>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionObject.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107bc00>
	void WaitTillDone(None WorldContextObject, None LatentInfo, None& Result_); // WaitTillDone LowEntryExtendedStandardLibrary.LowEntryLatentActionString.WaitTillDone // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x107bd40>
	void SetBytes(None& ByteArray, None Index, None Length); // SetBytes LowEntryExtendedStandardLibrary.LowEntryLong.SetBytes // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x10768d0>
	None ToString(); // ToString LowEntryExtendedStandardLibrary.LowEntryParsedHashcash.ToString // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x107b6d0>
	None ShouldResetTrackedObjects(); // ShouldResetTrackedObjects AugmentedReality.ARSessionConfig.ShouldResetTrackedObjects // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2eed1f0>
	None GetAmbientIntensityLumens(); // GetAmbientIntensityLumens AugmentedReality.ARBasicLightEstimate.GetAmbientIntensityLumens // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2eeb480>
	None GetPhysicalWidth(); // GetPhysicalWidth AugmentedReality.ARCandidateImage.GetPhysicalWidth // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2ef3aa0>
	void UnpinComponent(None ComponentToUnpin); // UnpinComponent AugmentedReality.ARBlueprintLibrary.UnpinComponent // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x2eed2b0>
	None GetTrackedGeometry(None& TraceResult); // GetTrackedGeometry AugmentedReality.ARTraceResultLibrary.GetTrackedGeometry // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x2eebf90>
	None ARSaveWorld(None WorldContextObject); // ARSaveWorld AugmentedReality.ARSaveWorldAsyncTaskBlueprintProxy.ARSaveWorld // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x2eea660>
	None ARGetCandidateObject(None WorldContextObject, None Location, None Extent); // ARGetCandidateObject AugmentedReality.ARGetCandidateObjectAsyncTaskBlueprintProxy.ARGetCandidateObject // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x2eea540>
	None GetTrackingState(); // GetTrackingState AugmentedReality.ARPin.GetTrackingState // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2eeb7e0>
	void SetPreviewImageData(None ImageData); // SetPreviewImageData AugmentedReality.ARSharedWorldGameMode.SetPreviewImageData // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // <Game+0x2ef1590>
	void K2_OnARWorldMapIsReady(); // K2_OnARWorldMapIsReady AugmentedReality.ARSharedWorldGameState.K2_OnARWorldMapIsReady // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void ServerMarkReadyForReceiving(); // ServerMarkReadyForReceiving AugmentedReality.ARSharedWorldPlayerController.ServerMarkReadyForReceiving // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // <Game+0x2ef13b0>
	void SetEnvironmentCaptureProbe(None InCaptureProbe); // SetEnvironmentCaptureProbe AugmentedReality.ARSkyLight.SetEnvironmentCaptureProbe // (Final|Native|Public|BlueprintCallable) // <Game+0x2ef1510>
	None IsTracked(); // IsTracked AugmentedReality.ARTrackedGeometry.IsTracked // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2ef1380>
	None GetSubsumedBy(); // GetSubsumedBy AugmentedReality.ARPlaneGeometry.GetSubsumedBy // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2ef1250>
	None GetEstimateSize(); // GetEstimateSize AugmentedReality.ARTrackedImage.GetEstimateSize // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x2ef1000>
	None GetWorldSpaceEyeTransform(None Eye); // GetWorldSpaceEyeTransform AugmentedReality.ARFaceGeometry.GetWorldSpaceEyeTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x2ef12d0>
	None GetExtent(); // GetExtent AugmentedReality.AREnvironmentCaptureProbe.GetExtent // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x2ef1040>
	None GetDetectedObject(); // GetDetectedObject AugmentedReality.ARTrackedObject.GetDetectedObject // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2ef0fb0>
	None GetTrackedPoseData(); // GetTrackedPoseData AugmentedReality.ARTrackedPose.GetTrackedPoseData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2ef1270>
	void SetFriendlyName(None NewName); // SetFriendlyName AugmentedReality.ARCandidateObject.SetFriendlyName // (Final|Native|Public|BlueprintCallable) // <Game+0x2ef3c10>
	void ToggleActive(); // ToggleActive Engine.ActorComponent.ToggleActive // (Native|Public|BlueprintCallable) // <Game+0x3385ac0>
	void ToggleVisibility(None bPropagateToChildren); // ToggleVisibility Engine.SceneComponent.ToggleVisibility // (Final|Native|Public|BlueprintCallable) // <Game+0x3de3730>
	void OnTickReplaySampleRecord(None DemoNetDriver, None MinRecordHz, None MaxRecordHz, None bSaveCheckpoint); // OnTickReplaySampleRecord Engine.MKActorEx.OnTickReplaySampleRecord // (Final|Native|Private) // <Game+0x3d90770>
	None WasRecentlyRendered(None Tolerance); // WasRecentlyRendered Engine.Actor.WasRecentlyRendered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3c5f4e0>
	void OnRep_ReplicatedPhysAsset(); // OnRep_ReplicatedPhysAsset Engine.SkeletalMeshActor.OnRep_ReplicatedPhysAsset // (Native|Public) // <Game+0x1237680>
	None WasRecentlyRendered(None Tolerance); // WasRecentlyRendered Engine.PrimitiveComponent.WasRecentlyRendered // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dd0a20>
	void SetVectorParameterValueOnMaterials(None ParameterName, None ParameterValue); // SetVectorParameterValueOnMaterials Engine.MeshComponent.SetVectorParameterValueOnMaterials // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3d884d0>
	void UnloadSkinWeightProfile(None InProfileName); // UnloadSkinWeightProfile Engine.SkinnedMeshComponent.UnloadSkinWeightProfile // (Final|Native|Public|BlueprintCallable) // <Game+0x3df72f0>
	void SetLODSettings(None InLODSettings); // SetLODSettings Engine.SkeletalMesh.SetLODSettings // (Final|Native|Public|BlueprintCallable) // <Game+0x16b4b10>
	void SetMobility(None InMobility); // SetMobility Engine.StaticMeshActor.SetMobility // (Final|Native|Public|BlueprintCallable) // <Game+0x124d330>
	void ShowHUD(); // ShowHUD Engine.HUD.ShowHUD // (Exec|Native|Public) // <Game+0x1e4f220>
	void Activate(); // Activate Engine.BlueprintAsyncActionBase.Activate // (Native|Public|BlueprintCallable) // <Game+0x2edcf90>
	void UnlinkAnimClassLayers(None InClass); // UnlinkAnimClassLayers Engine.SkeletalMeshComponent.UnlinkAnimClassLayers // (Final|Native|Public|BlueprintCallable) // <Game+0x3deee80>
	void UnlockAIResources(None bUnlockMovement, None UnlockAILogic); // UnlockAIResources Engine.AnimInstance.UnlockAIResources // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // <Game+0x1edc390>
	None ScriptRunAssetExportTask(None Task); // ScriptRunAssetExportTask Engine.Exporter.ScriptRunAssetExportTask // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void WorldOriginLocationChanged(None OldOriginLocation, None NewOriginLocation); // WorldOriginLocationChanged Engine.LevelScriptActor.WorldOriginLocationChanged // (Event|Public|HasDefaults|BlueprintEvent) // <Game+0x23ad490>
	void SetVectorParameter(None ParameterName, None Param); // SetVectorParameter Engine.FXSystemComponent.SetVectorParameter // (Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3daaf20>
	None Received_Notify(None MeshComp, None Animation); // Received_Notify Engine.AnimNotify.Received_Notify // (Event|Public|BlueprintEvent|Const) // <Game+0x23ad490>
	None Received_NotifyTick(None MeshComp, None Animation, None FrameDeltaTime); // Received_NotifyTick Engine.AnimNotifyState.Received_NotifyTick // (Event|Public|BlueprintEvent|Const) // <Game+0x23ad490>
	None K2_GetWorldSettings(); // K2_GetWorldSettings Engine.World.K2_GetWorldSettings // (Final|Native|Public|BlueprintCallable) // <Game+0x3e28f40>
	void OnChangedViewMode(); // OnChangedViewMode Engine.MKPawnEx.OnChangedViewMode // (Native|Event|Public|BlueprintEvent) // <Game+0x1e4f220>
	void SpawnDefaultController(); // SpawnDefaultController Engine.Pawn.SpawnDefaultController // (Native|Public|BlueprintCallable) // <Game+0x3daf690>
	void UnCrouch(None bClientSimulation); // UnCrouch Engine.Character.UnCrouch // (Native|Public|BlueprintCallable) // <Game+0x202aa80>
	void UpdateSpline(); // UpdateSpline Engine.SplineComponent.UpdateSpline // (Final|Native|Public|BlueprintCallable) // <Game+0x3e0c7e0>
	void StopDelayed(None DelayTime); // StopDelayed Engine.AudioComponent.StopDelayed // (Final|Native|Public|BlueprintCallable) // <Game+0x3c8bfb0>
	void StartPlay(); // StartPlay Engine.GameModeBase.StartPlay // (Native|Public|BlueprintCallable) // <Game+0x3ce2330>
	void StartMatch(); // StartMatch Engine.GameMode.StartMatch // (Native|Public|BlueprintCallable) // <Game+0x3ce2310>
	void OnRep_SpectatorClass(); // OnRep_SpectatorClass Engine.GameStateBase.OnRep_SpectatorClass // (Native|Protected) // <Game+0x1f1c220>
	void OnRep_MatchState(); // OnRep_MatchState Engine.GameState.OnRep_MatchState // (Native|Public) // <Game+0x3ce1c70>
	void UnPossess(); // UnPossess Engine.Controller.UnPossess // (Final|Native|Public|BlueprintCallable) // <Game+0x3cbb490>
	None WasInputKeyJustReleased(None Key); // WasInputKeyJustReleased Engine.PlayerController.WasInputKeyJustReleased // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dc2600>
	void StopMovementImmediately(); // StopMovementImmediately Engine.MovementComponent.StopMovementImmediately // (Native|Public|BlueprintCallable) // <Game+0x2050030>
	void StopMovementKeepPathing(); // StopMovementKeepPathing Engine.NavMovementComponent.StopMovementKeepPathing // (Final|Native|Public|BlueprintCallable) // <Game+0x3d9a090>
	None K2_GetInputVector(); // K2_GetInputVector Engine.PawnMovementComponent.K2_GetInputVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3daef40>
	void SetWalkableFloorZ(None InWalkableFloorZ); // SetWalkableFloorZ Engine.CharacterMovementComponent.SetWalkableFloorZ // (Final|Native|Public|BlueprintCallable) // <Game+0x3cb2690>
	void OnInterpToggle(None bEnable); // OnInterpToggle Engine.SceneCapture2D.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // <Game+0x3db71b0>
	void SetBoxExtent(None InBoxExtent, None bUpdateOverlaps); // SetBoxExtent Engine.BoxComponent.SetBoxExtent // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3ca4330>
	void SetUseFieldOfViewForLOD(None bInUseFieldOfViewForLOD); // SetUseFieldOfViewForLOD Engine.CameraComponent.SetUseFieldOfViewForLOD // (Final|Native|Public|BlueprintCallable) // <Game+0x3ca48a0>
	void Walk(); // Walk Engine.CheatManager.Walk // (Exec|Native|Public|BlueprintCallable) // <Game+0x2edce10>
	void SetReplaySample(None Target, None ReplaySample, None bSaveCheckpoint); // SetReplaySample Engine.MKDemoNetDriverEx.SetReplaySample // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3d90aa0>
	None SetStaticMesh(None NewMesh); // SetStaticMesh Engine.StaticMeshComponent.SetStaticMesh // (Native|Public|BlueprintCallable) // <Game+0x168dfb0>
	void PlayReplayCommand(None DemoName); // PlayReplayCommand Engine.MKGameInstanceEx.PlayReplayCommand // (Final|Exec|Native|Public) // <Game+0x3d909b0>
	void ReceiveShutdown(); // ReceiveShutdown Engine.GameInstance.ReceiveShutdown // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None UpdateInstanceTransform(None InstanceIndex, None& NewInstanceTransform, None bWorldSpace, None bMarkRenderStateDirty, None bTeleport); // UpdateInstanceTransform Engine.InstancedStaticMeshComponent.UpdateInstanceTransform // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d031d0>
	None RemoveInstances(None& InstancesToRemove); // RemoveInstances Engine.HierarchicalInstancedStaticMeshComponent.RemoveInstances // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3cf7130>
	void ToggleReplayPauseAndResume(); // ToggleReplayPauseAndResume Engine.MK3DReplayController.ToggleReplayPauseAndResume // (Final|Native|Protected|BlueprintCallable) // <Game+0x3d8c360>
	void TurnAtRate(None Rate); // TurnAtRate Engine.DefaultPawn.TurnAtRate // (Native|Public|BlueprintCallable) // <Game+0x3cc4580>
	void MK3DSpectatorPawn_SetMaxSpeed(None fSpeed); // MK3DSpectatorPawn_SetMaxSpeed Engine.MK3DSpectatorPawn.MK3DSpectatorPawn_SetMaxSpeed // (Final|Exec|Native|Public) // <Game+0x3d90500>
	void StopCameraShake(None ShakeInstance, None bImmediately); // StopCameraShake Engine.PlayerCameraManager.StopCameraShake // (Native|Public|BlueprintCallable) // <Game+0x3db80f0>
	void ReceiveOverrideWith(None OldPlayerState); // ReceiveOverrideWith Engine.PlayerState.ReceiveOverrideWith // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	None UpdateKillcamInfo(None WorldContextObject, None Recorder, None Target, None Killer, None Victim, None bUpdateTime); // UpdateKillcamInfo Engine.MK3DEventFunction.UpdateKillcamInfo // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d8c380>
	void ShowOnlyComponent(None InComponent); // ShowOnlyComponent Engine.SceneCaptureComponent.ShowOnlyComponent // (Final|Native|Public|BlueprintCallable) // <Game+0x3de35f0>
	void CaptureScene(); // CaptureScene Engine.SceneCaptureComponent2D.CaptureScene // (Final|Native|Public|BlueprintCallable) // <Game+0x3ddfff0>
	void SetArrowColor(None NewColor); // SetArrowColor Engine.ArrowComponent.SetArrowColor // (Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3c83940>
	void StopSimulating(None& HitResult); // StopSimulating Engine.ProjectileMovementComponent.StopSimulating // (Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3dd33c0>
	void ValidateSettings(); // ValidateSettings Engine.GameUserSettings.ValidateSettings // (Native|Public|BlueprintCallable) // <Game+0x2edce10>
	void SetCapsuleSize(None InRadius, None InHalfHeight, None bUpdateOverlaps); // SetCapsuleSize Engine.CapsuleComponent.SetCapsuleSize // (Final|Native|Public|BlueprintCallable) // <Game+0x3cafee0>
	void SSSwapControllers(); // SSSwapControllers Engine.GameViewportClient.SSSwapControllers // (Exec|Native|Public) // <Game+0x2edcf90>
	void OnRep_WorldGravityZ(); // OnRep_WorldGravityZ Engine.WorldSettings.OnRep_WorldGravityZ // (Native|Public) // <Game+0x1e4f220>
	None IsDisabled(); // IsDisabled Engine.CameraModifier.IsDisabled // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2edcf10>
	void OnRep_bEnabled(); // OnRep_bEnabled Engine.SkyLight.OnRep_bEnabled // (Native|Public) // <Game+0x1e4f220>
	void SetForceMipLevelsToBeResident(None OverrideForceMiplevelsToBeResident, None bForceMiplevelsToBeResidentValue, None ForceDuration, None CinematicTextureGroups, None bFastResponse); // SetForceMipLevelsToBeResident Engine.MaterialInterface.SetForceMipLevelsToBeResident // (RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3d83f20>
	None K2_GetVectorParameterValue(None ParameterName); // K2_GetVectorParameterValue Engine.MaterialInstanceConstant.K2_GetVectorParameterValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3d83c20>
	None GetAutoActivatePlayerIndex(); // GetAutoActivatePlayerIndex Engine.CameraActor.GetAutoActivatePlayerIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3ca3f20>
	void Stop(); // Stop Engine.AmbientSound.Stop // (Final|Native|Public|BlueprintCallable) // <Game+0x3c64100>
	None GetPlayLength(); // GetPlayLength Engine.AnimSequenceBase.GetPlayLength // (Native|Public|BlueprintCallable) // <Game+0x3c7db70>
	None GetDefaultBlendOutTime(); // GetDefaultBlendOutTime Engine.AnimMontage.GetDefaultBlendOutTime // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x328b060>
	None OverridePSTemplate(None MeshComp, None Animation); // OverridePSTemplate Engine.AnimNotifyState_Trail.OverridePSTemplate // (Event|Public|BlueprintEvent|Const) // <Game+0x23ad490>
	void StopAnim(); // StopAnim Engine.AnimSingleNodeInstance.StopAnim // (Final|Native|Public|BlueprintCallable) // <Game+0x3c7e380>
	None AsyncSaveGameToSlot(None WorldContextObject, None SaveGameObject, None SlotName, None UserIndex); // AsyncSaveGameToSlot Engine.AsyncActionHandleSaveGame.AsyncSaveGameToSlot // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3c87aa0>
	None AsyncLoadPrimaryAsset(None WorldContextObject, None PrimaryAsset, None& LoadBundles); // AsyncLoadPrimaryAsset Engine.AsyncActionLoadPrimaryAsset.AsyncLoadPrimaryAsset // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3c87560>
	None AsyncLoadPrimaryAssetClass(None WorldContextObject, None PrimaryAsset, None& LoadBundles); // AsyncLoadPrimaryAssetClass Engine.AsyncActionLoadPrimaryAssetClass.AsyncLoadPrimaryAssetClass // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3c876a0>
	None AsyncLoadPrimaryAssetList(None WorldContextObject, None& PrimaryAssetList, None& LoadBundles); // AsyncLoadPrimaryAssetList Engine.AsyncActionLoadPrimaryAssetList.AsyncLoadPrimaryAssetList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c87940>
	None AsyncLoadPrimaryAssetClassList(None WorldContextObject, None& PrimaryAssetList, None& LoadBundles); // AsyncLoadPrimaryAssetClassList Engine.AsyncActionLoadPrimaryAssetClassList.AsyncLoadPrimaryAssetClassList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c877e0>
	None AsyncChangeBundleStateForPrimaryAssetList(None WorldContextObject, None& PrimaryAssetList, None& AddBundles, None& RemoveBundles); // AsyncChangeBundleStateForPrimaryAssetList Engine.AsyncActionChangePrimaryAssetBundles.AsyncChangeBundleStateForPrimaryAssetList // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c87280>
	void StartPrecompute(); // StartPrecompute Engine.AtmosphericFogComponent.StartPrecompute // (Final|Native|Public|BlueprintCallable) // <Game+0x151b310>
	void SetReverbSettings(None& NewReverbSettings); // SetReverbSettings Engine.AudioVolume.SetReverbSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3c8ba20>
	void OnActorEndPlay(None Actor, None EndPlayReason); // OnActorEndPlay Engine.AutoDestroySubsystem.OnActorEndPlay // (Final|Native|Private) // <Game+0x3c92250>
	None RegisterMovementComponent(None MovementComp, None AvoidanceWeight); // RegisterMovementComponent Engine.AvoidanceManager.RegisterMovementComponent // (Final|Native|Public|BlueprintCallable) // <Game+0x3c92310>
	void SetUV(None NewU, None NewUL, None NewV, None NewVL); // SetUV Engine.BillboardComponent.SetUV // (Native|Public|BlueprintCallable) // <Game+0x3c925f0>
	void SetMapPropertyByName(None Object, None PropertyName, None& Value); // SetMapPropertyByName Engine.BlueprintMapLibrary.SetMapPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c97ef0>
	None VideoCaptureDir(); // VideoCaptureDir Engine.BlueprintPathsLibrary.VideoCaptureDir // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3c9c5e0>
	None ScheduleLocalNotificationFromNow(None inSecondsFromNow, None& Title, None& Body, None& Action, None ActivationEvent); // ScheduleLocalNotificationFromNow Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationFromNow // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c9e560>
	void SetSetPropertyByName(None Object, None PropertyName, None& Value); // SetSetPropertyByName Engine.BlueprintSetLibrary.SetSetPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3c9e800>
	void Stop(None bImmediate); // Stop Engine.CameraAnimInst.Stop // (Final|Native|Public|BlueprintCallable) // <Game+0x3ca4930>
	void ReceiveStopShake(None bImmediately); // ReceiveStopShake Engine.CameraShake.ReceiveStopShake // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void StopAllCameraShakes(None bImmediately); // StopAllCameraShakes Engine.CameraShakeSourceComponent.StopAllCameraShakes // (Final|Native|Public|BlueprintCallable) // <Game+0x3ca8e80>
	None K2_TextSize(None RenderFont, None RenderText, None Scale); // K2_TextSize Engine.Canvas.K2_TextSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3ca8cb0>
	void UpdateResource(); // UpdateResource Engine.CanvasRenderTarget2D.UpdateResource // (Native|Public|BlueprintCallable) // <Game+0x3cb0080>
	void SetChildActorClass(None InClass); // SetChildActorClass Engine.ChildActorComponent.SetChildActorClass // (Final|Native|Public|BlueprintCallable) // <Game+0x3cb7700>
	void GetValueRange(None& MinValue, None& MaxValue); // GetValueRange Engine.CurveBase.GetValueRange // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbfea0>
	None GetFloatValue(None InTime); // GetFloatValue Engine.CurveFloat.GetFloatValue // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbfc60>
	None GetLinearColorValue(None InTime); // GetLinearColorValue Engine.CurveLinearColor.GetLinearColorValue // (Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbfcf0>
	None Blueprint_GetSizeY(); // Blueprint_GetSizeY Engine.Texture2D.Blueprint_GetSizeY // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3e1df20>
	None GetCurvePosition(None InCurve, None& Position); // GetCurvePosition Engine.CurveLinearColorAtlas.GetCurvePosition // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3cbf390>
	None GetCurveValue(None CurveName); // GetCurveValue Engine.CurveSourceInterface.GetCurveValue // (Native|Event|Public|BlueprintEvent|Const) // <Game+0x3cbf470>
	None GetVectorValue(None InTime); // GetVectorValue Engine.CurveVector.GetVectorValue // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cbff80>
	void GetDataTableRowNames(None Table, None& OutRowNames); // GetDataTableRowNames Engine.DataTableFunctionLibrary.GetDataTableRowNames // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3cbfb80>
	void ToggleDisplay(); // ToggleDisplay Engine.DebugCameraController.ToggleDisplay // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc00c0>
	void SetDecalMaterial(None NewDecalMaterial); // SetDecalMaterial Engine.DecalActor.SetDecalMaterial // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc3d90>
	void SetSortOrder(None Value); // SetSortOrder Engine.DecalComponent.SetSortOrder // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc4500>
	void ToggleEnabled(); // ToggleEnabled Engine.Light.ToggleEnabled // (Final|Native|Public|BlueprintCallable) // <Game+0x3d69860>
	void SetSamplesPerPixel(None NewValue); // SetSamplesPerPixel Engine.LightComponentBase.SetSamplesPerPixel // (Final|Native|Public|BlueprintCallable) // <Game+0x3d6c4e0>
	void SetVolumetricScatteringIntensity(None NewIntensity); // SetVolumetricScatteringIntensity Engine.LightComponent.SetVolumetricScatteringIntensity // (Final|Native|Public|BlueprintCallable) // <Game+0x3d697e0>
	void SetShadowDistanceFadeoutFraction(None NewValue); // SetShadowDistanceFadeoutFraction Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction // (Final|Native|Public|BlueprintCallable) // <Game+0x3cc4480>
	void SetSphereRadius(None InSphereRadius, None bUpdateOverlaps); // SetSphereRadius Engine.SphereComponent.SetSphereRadius // (Final|Native|Public|BlueprintCallable) // <Game+0x3e0be20>
	void ToggleActive(); // ToggleActive Engine.Emitter.ToggleActive // (Final|Native|Public|BlueprintCallable) // <Game+0x3cccba0>
	void OnRep_bEnabled(); // OnRep_bEnabled Engine.ExponentialHeightFog.OnRep_bEnabled // (Native|Public) // <Game+0x1e4f220>
	void SetVolumetricFogScatteringDistribution(None NewValue); // SetVolumetricFogScatteringDistribution Engine.ExponentialHeightFogComponent.SetVolumetricFogScatteringDistribution // (Final|Native|Public|BlueprintCallable) // <Game+0x3cded50>
	void Stop(); // Stop Engine.ForceFeedbackComponent.Stop // (Native|Public|BlueprintCallable) // <Game+0x3cdedd0>
	void UnloadStreamLevel(None WorldContextObject, None LevelName, None LatentInfo, None bShouldBlockOnUnload); // UnloadStreamLevel Engine.GameplayStatics.UnloadStreamLevel // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3cee4c0>
	void SetOuterConeAngle(None NewOuterConeAngle); // SetOuterConeAngle Engine.SpotLight.SetOuterConeAngle // (Final|Native|Public|BlueprintCallable) // <Game+0x3e10bd0>
	void StopPerformanceSnapshots(); // StopPerformanceSnapshots Engine.HealthSnapshotBlueprintLibrary.StopPerformanceSnapshots // (Final|Exec|Native|Static|Public|BlueprintCallable) // <Game+0x3cf73a0>
	None RandomSobolFloat(None Index, None Dimension, None Seed); // RandomSobolFloat Engine.ImportanceSamplingLibrary.RandomSobolFloat // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3cfdce0>
	None WasControllerKeyJustReleased(None Key); // WasControllerKeyJustReleased Engine.InputComponent.WasControllerKeyJustReleased // (Final|Native|Private|BlueprintCallable|BlueprintPure|Const) // <Game+0x3cfd430>
	void SaveKeyMappings(); // SaveKeyMappings Engine.InputSettings.SaveKeyMappings // (Final|Native|Public|BlueprintCallable) // <Game+0x3cfe120>
	void StopSimulating(None& HitResult); // StopSimulating Engine.InterpToMovementComponent.StopSimulating // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3d07160>
	void SetArrayPropertyByName(None Object, None PropertyName, None& Value); // SetArrayPropertyByName Engine.KismetArrayLibrary.SetArrayPropertyByName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3d0c070>
	void Parse_StringToGuid(None GuidString, None& OutGuid, None& SUCCESS); // Parse_StringToGuid Engine.KismetGuidLibrary.Parse_StringToGuid // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x3d0fa30>
	None PointerEvent_IsTouchEvent(None& Input); // PointerEvent_IsTouchEvent Engine.KismetInputLibrary.PointerEvent_IsTouchEvent // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x3d109a0>
	None SetCurrentLocale(None Culture, None SaveToConfig); // SetCurrentLocale Engine.KismetInternationalizationLibrary.SetCurrentLocale // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d10e90>
	void SetVectorParameterValue(None WorldContextObject, None Collection, None ParameterName, None& ParameterValue); // SetVectorParameterValue Engine.KismetMaterialLibrary.SetVectorParameterValue // (Final|RequiredAPI|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d38e50>
	None Xor_IntInt(None A, None B); // Xor_IntInt Engine.KismetMathLibrary.Xor_IntInt // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d406c0>
	void MarkBit(None& Data, None Index); // MarkBit Engine.KismetNodeHelperLibrary.MarkBit // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3d47160>
	void SetCastInsetShadowForAllAttachments(None PrimitiveComponent, None bCastInsetShadow, None bLightAttachmentsAsGroup); // SetCastInsetShadowForAllAttachments Engine.KismetRenderingLibrary.SetCastInsetShadowForAllAttachments // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // <Game+0x3d485d0>
	None TrimTrailing(None SourceString); // TrimTrailing Engine.KismetStringLibrary.TrimTrailing // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d48de0>
	None IsRegisteredTableId(None TableID); // IsRegisteredTableId Engine.KismetStringTableLibrary.IsRegisteredTableId // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d568d0>
	void UnregisterForRemoteNotifications(); // UnregisterForRemoteNotifications Engine.KismetSystemLibrary.UnregisterForRemoteNotifications // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d5b7a0>
	None TextTrimTrailing(None& InText); // TextTrimTrailing Engine.KismetTextLibrary.TextTrimTrailing // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x3d65980>
	None ShouldBeLoaded(); // ShouldBeLoaded Engine.LevelStreaming.ShouldBeLoaded // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x34ef380>
	None LoadLevelInstanceBySoftObjectPtr(None WorldContextObject, None Level, None Location, None Rotation, None& bOutSuccess); // LoadLevelInstanceBySoftObjectPtr Engine.LevelStreamingDynamic.LoadLevelInstanceBySoftObjectPtr // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d67fb0>
	void SetIntensityUnits(None NewIntensityUnits); // SetIntensityUnits Engine.LocalLightComponent.SetIntensityUnits // (Final|Native|Public|BlueprintCallable) // <Game+0x3d6c460>
	void SetElements(None& NewElements); // SetElements Engine.MaterialBillboardComponent.SetElements // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3d70e90>
	void SetVectorParameterValueByInfo(None& ParameterInfo, None Value); // SetVectorParameterValueByInfo Engine.MaterialInstanceDynamic.SetVectorParameterValueByInfo // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3d84500>
	void Stop(); // Stop Engine.MatineeActor.Stop // (Native|Public|BlueprintCallable) // <Game+0x1f19d50>
	void RemovePaintedVertices(None StaticMeshComponent); // RemovePaintedVertices Engine.MeshVertexPainterKismetLibrary.RemovePaintedVertices // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d8bec0>
	void OnJumpCompleteForKillcam(None bSuccess); // OnJumpCompleteForKillcam Engine.MK3DKillcamComponent.OnJumpCompleteForKillcam // (Final|Native|Public) // <Game+0x3d8ba80>
	void EnumerateMK3DTargetEvents(None World); // EnumerateMK3DTargetEvents Engine.MK3DTargetcamComponent.EnumerateMK3DTargetEvents // (Final|Native|Public) // <Game+0x3d8f400>
	None MakeReplaySample(None Actor); // MakeReplaySample Engine.ReplaySampleBase.MakeReplaySample // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3d90580>
	None IsViewTargetPawn(None InPawn, None InPC); // IsViewTargetPawn Engine.MKUtils.IsViewTargetPawn // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d90300>
	void MarkPropertyDirtyFromRepIndex(None Object, None RepIndex, None PropertyName); // MarkPropertyDirtyFromRepIndex Engine.NetPushModelHelpers.MarkPropertyDirtyFromRepIndex // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d99f80>
	None ContainsEmitterType(None TypeData); // ContainsEmitterType Engine.ParticleSystem.ContainsEmitterType // (Final|Native|Public|BlueprintCallable) // <Game+0x3da9290>
	void SetTrailSourceData(None InFirstSocketName, None InSecondSocketName, None InWidthMode, None InWidth); // SetTrailSourceData Engine.ParticleSystemComponent.SetTrailSourceData // (Final|Native|Public|BlueprintCallable) // <Game+0x3daad40>
	void MakeNoise(None NoiseMaker, None Loudness, None& NoiseLocation); // MakeNoise Engine.PawnNoiseEmitterComponent.MakeNoise // (BlueprintAuthorityOnly|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3daf230>
	void SetStrengthMultiplyer(None InStrengthMultiplyer); // SetStrengthMultiplyer Engine.PhysicalAnimationComponent.SetStrengthMultiplyer // (Final|Native|Public|BlueprintCallable) // <Game+0x3daf610>
	void SetOrientationDriveTwistAndSwing(None bEnableTwistDrive, None bEnableSwingDrive); // SetOrientationDriveTwistAndSwing Engine.PhysicsConstraintComponent.SetOrientationDriveTwistAndSwing // (Final|Native|Public|BlueprintCallable) // <Game+0x3db3050>
	void SetTargetRotation(None NewRotation); // SetTargetRotation Engine.PhysicsHandleComponent.SetTargetRotation // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3db3290>
	None GetSpringRestingPoint(); // GetSpringRestingPoint Engine.PhysicsSpringComponent.GetSpringRestingPoint // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3db7110>
	void OnInterpToggle(None bEnable); // OnInterpToggle Engine.PlanarReflection.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // <Game+0x3db71b0>
	None SupportsConvertibleLaptops(); // SupportsConvertibleLaptops Engine.PlatformEventsComponent.SupportsConvertibleLaptops // (Final|Native|Public|BlueprintCallable) // <Game+0x3db81c0>
	None GetNumHeaders(); // GetNumHeaders Engine.PlatformInterfaceWebResponse.GetNumHeaders // (Native|Public) // <Game+0x151b2e0>
	void SetMouseSensitivity(None Sensitivity); // SetMouseSensitivity Engine.PlayerInput.SetMouseSensitivity // (Final|Exec|Native|Public) // <Game+0x3dc7aa0>
	void SetRadius(None NewRadius); // SetRadius Engine.PointLight.SetRadius // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3dc7b20>
	void SetSourceRadius(None bNewValue); // SetSourceRadius Engine.PointLightComponent.SetSourceRadius // (Final|Native|Public|BlueprintCallable) // <Game+0x3dc7ca0>
	void SetBoneTransformByName(None BoneName, None& InTransform, None BoneSpace); // SetBoneTransformByName Engine.PoseableMeshComponent.SetBoneTransformByName // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3dc7840>
	void AddOrUpdateBlendable(None InBlendableObject, None InWeight); // AddOrUpdateBlendable Engine.PostProcessComponent.AddOrUpdateBlendable // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3dc6c70>
	void AddOrUpdateBlendable(None InBlendableObject, None InWeight); // AddOrUpdateBlendable Engine.PostProcessVolume.AddOrUpdateBlendable // (Final|Native|Public|BlueprintCallable) // <Game+0x3dc6b20>
	void ToggleForce(); // ToggleForce Engine.RadialForceActor.ToggleForce // (Native|Public|BlueprintCallable) // <Game+0x1f184b0>
	void RemoveObjectTypeToAffect(None ObjectType); // RemoveObjectTypeToAffect Engine.RadialForceComponent.RemoveObjectTypeToAffect // (Native|Public|BlueprintCallable) // <Game+0x3dd3000>
	void SetSourceWidth(None bNewValue); // SetSourceWidth Engine.RectLightComponent.SetSourceWidth // (Final|Native|Public|BlueprintCallable) // <Game+0x3dd32b0>
	None GetTileSize(); // GetTileSize Engine.RuntimeVirtualTexture.GetTileSize // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dd9220>
	None GetVirtualTextureTransform(); // GetVirtualTextureTransform Engine.RuntimeVirtualTextureComponent.GetVirtualTextureTransform // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x3dd9270>
	void CaptureScene(); // CaptureScene Engine.SceneCaptureComponentCube.CaptureScene // (Final|Native|Public|BlueprintCallable) // <Game+0x3ddfff0>
	void OnInterpToggle(None bEnable); // OnInterpToggle Engine.SceneCaptureCube.OnInterpToggle // (Final|Native|Public|BlueprintCallable) // <Game+0x3db71b0>
	void InitializeSocketFromLocation(None SkelComp, None WorldLocation, None WorldNormal); // InitializeSocketFromLocation Engine.SkeletalMeshSocket.InitializeSocketFromLocation // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3df6280>
	void SetSkyLuminanceFactor(None NewValue); // SetSkyLuminanceFactor Engine.SkyAtmosphereComponent.SetSkyLuminanceFactor // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3dfc320>
	void SetVolumetricScatteringIntensity(None NewIntensity); // SetVolumetricScatteringIntensity Engine.SkyLightComponent.SetVolumetricScatteringIntensity // (Final|Native|Public|BlueprintCallable) // <Game+0x3dfc3a0>
	void StopRecordingOutput(None WorldContextObject, None ExportType, None Name, None Path, None ExistingSoundWaveToOverwrite); // StopRecordingOutput Engine.SoundSubmix.StopRecordingOutput // (Final|Native|Public|BlueprintCallable) // <Game+0x3e04350>
	void UpdateMesh(); // UpdateMesh Engine.SplineMeshComponent.UpdateMesh // (Final|Native|Public|BlueprintCallable) // <Game+0x3e11380>
	void SetOuterConeAngle(None NewOuterConeAngle); // SetOuterConeAngle Engine.SpotLightComponent.SetOuterConeAngle // (Final|Native|Public|BlueprintCallable) // <Game+0x3e10c50>
	None IsCollisionFixApplied(); // IsCollisionFixApplied Engine.SpringArmComponent.IsCollisionFixApplied // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3e10420>
	void RemoveSocket(None Socket); // RemoveSocket Engine.StaticMesh.RemoveSocket // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x1f801a0>
	void SetUVRect(None InUVRect); // SetUVRect Engine.StereoLayerComponent.SetUVRect // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3e15f80>
	void SetRadius(None InRadius); // SetRadius Engine.StereoLayerShapeCylinder.SetRadius // (Final|Native|Public|BlueprintCallable) // <Game+0x3e15c50>
	void SetEquirectProps(None InScaleBiases); // SetEquirectProps Engine.StereoLayerShapeEquirect.SetEquirectProps // (Final|Native|Public|BlueprintCallable) // <Game+0x3e15850>
	void ShowSplashScreen(); // ShowSplashScreen Engine.StereoLayerFunctionLibrary.ShowSplashScreen // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x2f10500>
	None GetWorldSubsystem(None ContextObject, None Class); // GetWorldSubsystem Engine.SubsystemBlueprintLibrary.GetWorldSubsystem // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3e19eb0>
	None GetTimecode(); // GetTimecode Engine.TimecodeProvider.GetTimecode // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3e1e110>
	void SetYScale(None Value); // SetYScale Engine.TextRenderComponent.SetYScale // (Final|Native|Public|BlueprintCallable) // <Game+0x3e1a550>
	void Stop(); // Stop Engine.TimelineComponent.Stop // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x3e1e920>
	None TwitterRequest(None URL, None& ParamKeysAndValues, None RequestMethod, None AccountIndex); // TwitterRequest Engine.TwitterIntegrationBase.TwitterRequest // (Native|Public|HasOutParms) // <Game+0x3e22e20>
	void SetIntensity(None NewIntensity); // SetIntensity Engine.VectorFieldComponent.SetIntensity // (Native|Public|BlueprintCallable) // <Game+0x3e22c30>
	void RedirectVislog(None SourceOwner, None DestinationOwner); // RedirectVislog Engine.VisualLoggerKismetLibrary.RedirectVislog // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d99ed0>
	void RegisterWithPlayerState(None OwningState); // RegisterWithPlayerState Engine.VOIPTalker.RegisterWithPlayerState // (Final|Native|Public|BlueprintCallable) // <Game+0x3e298a0>
	void SetMicThreshold(None InThreshold); // SetMicThreshold Engine.VOIPStatics.SetMicThreshold // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3e299a0>
	void SetWindType(None InNewType); // SetWindType Engine.WindDirectionalSourceComponent.SetWindType // (Final|Native|Public|BlueprintCallable) // <Game+0x3e29c10>
	None Validate(); // Validate MediaAssets.MediaSource.Validate // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x34ef380>
	void SetFilePath(None Path); // SetFilePath MediaAssets.FileMediaSource.SetFilePath // (Final|Native|Public|BlueprintCallable) // <Game+0x34ee580>
	void EnumerateWebcamCaptureDevices(None& OutDevices, None Filter); // EnumerateWebcamCaptureDevices MediaAssets.MediaBlueprintFunctionLibrary.EnumerateWebcamCaptureDevices // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x34ebef0>
	None GetMediaTexture(); // GetMediaTexture MediaAssets.MediaComponent.GetMediaTexture // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2ef12a0>
	None SupportsSeeking(); // SupportsSeeking MediaAssets.MediaPlayer.SupportsSeeking // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x34ef350>
	None Replace(None Index, None Replacement); // Replace MediaAssets.MediaPlaylist.Replace // (Final|Native|Public|BlueprintCallable) // <Game+0x34ee040>
	void SetSpectralAnalysisSettings(None InFrequenciesToAnalyze, None InFFTSize); // SetSpectralAnalysisSettings MediaAssets.MediaSoundComponent.SetSpectralAnalysisSettings // (Final|Native|Public|BlueprintCallable) // <Game+0x34eecc0>
	void SetMediaPlayer(None NewMediaPlayer); // SetMediaPlayer MediaAssets.MediaTexture.SetMediaPlayer // (Final|Native|Public|BlueprintCallable) // <Game+0x34eeb20>
	void HideMouse(); // HideMouse UW-MouseRightClick.UW-MouseRightClick_C.HideMouse // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdateSideMesh(None InPrototype, None MeshRelativeLocation, None MeshRelativeRotation, None MeshRelativeScale, None SocketIndex, None IsEnable, None IsNormalized); // UpdateSideMesh RoadRuntime.CrossActor.UpdateSideMesh // (Final|Native|Public|HasDefaults) // <Game+0x109c680>
	void UpdateSplineMesh(None MeshIndex); // UpdateSplineMesh RoadRuntime.RoadActor.UpdateSplineMesh // (Final|Native|Public) // <Game+0x109cb60>
	void SetMaterialParameter(None Opacity, None Speed, None Scale); // SetMaterialParameter WBP-AmplifierEffect.WBP-AmplifierEffect_C.SetMaterialParameter // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetCachedAchievementProgress(None WorldContextObject, None PlayerController, None AchievementID, None& bFoundID, None& progress); // GetCachedAchievementProgress OnlineSubsystemUtils.AchievementBlueprintLibrary.GetCachedAchievementProgress // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11c8c90>
	None CacheAchievements(None WorldContextObject, None PlayerController); // CacheAchievements OnlineSubsystemUtils.AchievementQueryCallbackProxy.CacheAchievements // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c79c0>
	None WriteAchievementProgress(None WorldContextObject, None PlayerController, None AchievementName, None progress, None UserTag); // WriteAchievementProgress OnlineSubsystemUtils.AchievementWriteCallbackProxy.WriteAchievementProgress // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c95f0>
	None ConnectToService(None WorldContextObject, None PlayerController); // ConnectToService OnlineSubsystemUtils.ConnectionCallbackProxy.ConnectToService // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c7a80>
	None CreateSession(None WorldContextObject, None PlayerController, None PublicConnections, None bUseLAN); // CreateSession OnlineSubsystemUtils.CreateSessionCallbackProxy.CreateSession // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8040>
	None DestroySession(None WorldContextObject, None PlayerController); // DestroySession OnlineSubsystemUtils.DestroySessionCallbackProxy.DestroySession // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8170>
	None EndMatch(None WorldContextObject, None PlayerController, None MatchActor, None MatchID, None LocalPlayerOutcome, None OtherPlayersOutcome); // EndMatch OnlineSubsystemUtils.EndMatchCallbackProxy.EndMatch // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8230>
	None EndTurn(None WorldContextObject, None PlayerController, None MatchID, None TurnBasedMatchInterface); // EndTurn OnlineSubsystemUtils.EndTurnCallbackProxy.EndTurn // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8460>
	None GetServerName(None& Result); // GetServerName OnlineSubsystemUtils.FindSessionsCallbackProxy.GetServerName // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x11c93d0>
	None FindTurnBasedMatch(None WorldContextObject, None PlayerController, None MatchActor, None MinPlayers, None MaxPlayers, None PlayerGroup, None ShowExistingMatches); // FindTurnBasedMatch OnlineSubsystemUtils.FindTurnBasedMatchCallbackProxy.FindTurnBasedMatch // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c8730>
	None CreateProxyObjectForInAppPurchase(None PlayerController, None& ProductRequest); // CreateProxyObjectForInAppPurchase OnlineSubsystemUtils.InAppPurchaseCallbackProxy.CreateProxyObjectForInAppPurchase // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11c7c30>
	None CreateProxyObjectForInAppPurchaseUnprocessedPurchases(None PlayerController); // CreateProxyObjectForInAppPurchaseUnprocessedPurchases OnlineSubsystemUtils.InAppPurchaseCallbackProxy2.CreateProxyObjectForInAppPurchaseUnprocessedPurchases // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11c7fc0>
	None CreateProxyObjectForInAppPurchaseQuery(None PlayerController, None& ProductIdentifiers); // CreateProxyObjectForInAppPurchaseQuery OnlineSubsystemUtils.InAppPurchaseQueryCallbackProxy.CreateProxyObjectForInAppPurchaseQuery // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11c7e30>
	None CreateProxyObjectForInAppPurchaseQuery(None PlayerController, None& ProductIdentifiers); // CreateProxyObjectForInAppPurchaseQuery OnlineSubsystemUtils.InAppPurchaseQueryCallbackProxy2.CreateProxyObjectForInAppPurchaseQuery // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11c7d20>
	None CreateProxyObjectForInAppPurchaseRestore(None& ConsumableProductFlags, None PlayerController); // CreateProxyObjectForInAppPurchaseRestore OnlineSubsystemUtils.InAppPurchaseRestoreCallbackProxy.CreateProxyObjectForInAppPurchaseRestore // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11cd2f0>
	None CreateProxyObjectForInAppPurchaseRestore(None& ConsumableProductFlags, None PlayerController); // CreateProxyObjectForInAppPurchaseRestore OnlineSubsystemUtils.InAppPurchaseRestoreCallbackProxy2.CreateProxyObjectForInAppPurchaseRestore // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11cd1d0>
	None JoinSession(None WorldContextObject, None PlayerController, None& SearchResult); // JoinSession OnlineSubsystemUtils.JoinSessionCallbackProxy.JoinSession // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11cd4d0>
	None WriteLeaderboardInteger(None PlayerController, None StatName, None StatValue); // WriteLeaderboardInteger OnlineSubsystemUtils.LeaderboardBlueprintLibrary.WriteLeaderboardInteger // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11ce2b0>
	None CreateProxyObjectForFlush(None PlayerController, None SessionName); // CreateProxyObjectForFlush OnlineSubsystemUtils.LeaderboardFlushCallbackProxy.CreateProxyObjectForFlush // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11cd110>
	None CreateProxyObjectForIntQuery(None PlayerController, None StatName); // CreateProxyObjectForIntQuery OnlineSubsystemUtils.LeaderboardQueryCallbackProxy.CreateProxyObjectForIntQuery // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11cd410>
	None Logout(None WorldContextObject, None PlayerController); // Logout OnlineSubsystemUtils.LogoutCallbackProxy.Logout // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11cd730>
	void ClientOnConnected(); // ClientOnConnected OnlineSubsystemUtils.OnlineBeaconClient.ClientOnConnected // (Final|Net|NetReliableNative|Event|Private|NetClient) // <Game+0x11ccfc0>
	void ServerUpdateReservationRequest(None SessionID, None ReservationUpdate); // ServerUpdateReservationRequest OnlineSubsystemUtils.PartyBeaconClient.ServerUpdateReservationRequest // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // <Game+0x11ce010>
	None QuitMatch(None WorldContextObject, None PlayerController, None MatchID, None Outcome, None TurnTimeoutInSeconds); // QuitMatch OnlineSubsystemUtils.QuitMatchCallbackProxy.QuitMatch // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11cd7f0>
	None ShowExternalLoginUI(None WorldContextObject, None InPlayerController); // ShowExternalLoginUI OnlineSubsystemUtils.ShowLoginUICallbackProxy.ShowExternalLoginUI // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11d0570>
	void ServerReservationRequest(None SessionID, None Reservation); // ServerReservationRequest OnlineSubsystemUtils.SpectatorBeaconClient.ServerReservationRequest // (Net|NetReliableNative|Event|Protected|NetServer|NetValidate) // <Game+0x11d0370>
	void ServerPong(); // ServerPong OnlineSubsystemUtils.TestBeaconClient.ServerPong // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // <Game+0x11d0320>
	void RegisterTurnBasedMatchInterfaceObject(None WorldContextObject, None PlayerController, None Object); // RegisterTurnBasedMatchInterfaceObject OnlineSubsystemUtils.TurnBasedBlueprintLibrary.RegisterTurnBasedMatchInterfaceObject // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11d0230>
	None IsIdling(); // IsIdling OnlineSubsystemUtils.VoipListenerSynthComponent.IsIdling // (Final|Native|Public|BlueprintCallable) // <Game+0x11d0200>
	void SendUnreliableMessage(None& Bytes); // SendUnreliableMessage LowEntrySocketConnection.LowEntryRawSocketConnection.SendUnreliableMessage // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1086830>
	void SetPeriodicConnectionValidationEnabled(None Enabled); // SetPeriodicConnectionValidationEnabled LowEntrySocketConnection.LowEntrySocketConnection.SetPeriodicConnectionValidationEnabled // (Final|Native|Public|BlueprintCallable) // <Game+0x1086990>
	void Relisten(None SocketConnection, None WorldContextObject, None LatentInfo); // Relisten LowEntrySocketConnection.LowEntrySocketConnectionLibrary.Relisten // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x1086000>
	void SetWeaponStat(None& WeaponInfo); // SetWeaponStat UW-Lobby_WeaponInfo_Stat.UW-Lobby_WeaponInfo_Stat_C.SetWeaponStat // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetSequencePath(None Path); // SetSequencePath ImgMedia.ImgMediaSource.SetSequencePath // (Final|Native|Public|BlueprintCallable) // <Game+0x10a92e0>
	None FoliageOverlappingSphereCount(None WorldContextObject, None StaticMesh, None CenterPosition, None Radius); // FoliageOverlappingSphereCount Foliage.FoliageStatistics.FoliageOverlappingSphereCount // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x3117ab0>
	void CapsuleTouched(None OverlappedComp, None Other, None OtherComp, None OtherBodyIndex, None bFromSweep, None& OverlapInfo); // CapsuleTouched Foliage.InteractiveFoliageActor.CapsuleTouched // (Final|Native|Protected|HasOutParms) // <Game+0x3117780>
	void Simulate(None NumSteps); // Simulate Foliage.ProceduralFoliageSpawner.Simulate // (Final|Native|Public|BlueprintCallable) // <Game+0x3117c00>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-S686.ABP-S686_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetInputString(None Identifier, None Value); // SetInputString SubstanceCore.SubstanceGraphInstance.SetInputString // (Final|Native|Public|BlueprintCallable) // <Game+0x10c37d0>
	void SyncRendering(None InstancesToRender); // SyncRendering SubstanceCore.SubstanceUtility.SyncRendering // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // <Game+0x10c3910>
	void SetTargetPawnInfo(); // SetTargetPawnInfo UW-ReplayMainWidget.UW-ReplayMainWidget_C.SetTargetPawnInfo // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetVisibility(None InVisibility); // SetVisibility UMG.Widget.SetVisibility // (Native|Public|BlueprintCallable) // <Game+0x3386ad0>
	void UnregisterInputComponent(); // UnregisterInputComponent UMG.UserWidget.UnregisterInputComponent // (Final|Native|Protected|BlueprintCallable) // <Game+0x33837e0>
	None RemoveChildAt(None Index); // RemoveChildAt UMG.PanelWidget.RemoveChildAt // (Final|Native|Public|BlueprintCallable) // <Game+0x33711c0>
	None SetContent(None Content); // SetContent UMG.ContentWidget.SetContent // (Final|Native|Public|BlueprintCallable) // <Game+0x3367710>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.Border.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3364650>
	None DownloadImage(None URL); // DownloadImage UMG.AsyncTaskDownloadImage.DownloadImage // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3362b00>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.BackgroundBlur.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3364550>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.BackgroundBlurSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x33645d0>
	None GetValue(); // GetValue UMG.BoolBinding.GetValue // (Final|Native|Public|Const) // <Game+0x3362e10>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.BorderSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x33646d0>
	None GetValue(); // GetValue UMG.BrushBinding.GetValue // (Final|Native|Public|Const) // <Game+0x3362e40>
	void SetTouchMethod(None InTouchMethod); // SetTouchMethod UMG.Button.SetTouchMethod // (Final|Native|Public|BlueprintCallable) // <Game+0x33644d0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.ButtonSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3364750>
	None AddChildToCanvas(None Content); // AddChildToCanvas UMG.CanvasPanel.AddChildToCanvas // (Final|Native|Public|BlueprintCallable) // <Game+0x3362a70>
	void SetZOrder(None InZOrder); // SetZOrder UMG.CanvasPanelSlot.SetZOrder // (Final|Native|Public|BlueprintCallable) // <Game+0x33647d0>
	void SetIsChecked(None InIsChecked); // SetIsChecked UMG.CheckBox.SetIsChecked // (Final|Native|Public|BlueprintCallable) // <Game+0x3363b60>
	None GetValue(); // GetValue UMG.CheckedStateBinding.GetValue // (Final|Native|Public|Const) // <Game+0x3367480>
	void SetRadius(None InRadius); // SetRadius UMG.CircularThrobber.SetRadius // (Final|Native|Public|BlueprintCallable) // <Game+0x3367f10>
	None GetSlateValue(); // GetSlateValue UMG.ColorBinding.GetSlateValue // (Final|Native|Public|Const) // <Game+0x33672d0>
	void SetSelectedOption(None Option); // SetSelectedOption UMG.ComboBoxString.SetSelectedOption // (Final|Native|Public|BlueprintCallable) // <Game+0x3368010>
	void Drop(None& PointerEvent); // Drop UMG.DragDropOperation.Drop // (Native|Event|Public|HasOutParms|BlueprintEvent) // <Game+0x3366dd0>
	void SetEntrySpacing(None& InEntrySpacing); // SetEntrySpacing UMG.DynamicEntryBoxBase.SetEntrySpacing // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x33677a0>
	void Reset(None bDeleteWidgets); // Reset UMG.DynamicEntryBox.Reset // (Final|Native|Public|BlueprintCallable) // <Game+0x3367660>
	void SetText(None InText); // SetText UMG.EditableText.SetText // (Final|Native|Public|BlueprintCallable) // <Game+0x3368100>
	void SetText(None InText); // SetText UMG.EditableTextBox.SetText // (Final|Native|Public|BlueprintCallable) // <Game+0x33681e0>
	void SetIsExpanded_Animated(None IsExpanded); // SetIsExpanded_Animated UMG.ExpandableArea.SetIsExpanded_Animated // (Final|Native|Public|BlueprintCallable) // <Game+0x336c550>
	None GetValue(); // GetValue UMG.FloatBinding.GetValue // (Final|Native|Public|Const) // <Game+0x336b1c0>
	void SetRowFill(None columnIndex, None Coefficient); // SetRowFill UMG.GridPanel.SetRowFill // (Final|Native|Public|BlueprintCallable) // <Game+0x336cac0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.GridSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x336cf10>
	None AddChildToHorizontalBox(None Content); // AddChildToHorizontalBox UMG.HorizontalBox.AddChildToHorizontalBox // (Final|Native|Public|BlueprintCallable) // <Game+0x336a820>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.HorizontalBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x336cf90>
	void SetOpacity(None InOpacity); // SetOpacity UMG.Image.SetOpacity // (Final|Native|Public|BlueprintCallable) // <Game+0x336c8a0>
	void SetTextBlockVisibility(None InVisibility); // SetTextBlockVisibility UMG.InputKeySelector.SetTextBlockVisibility // (Final|Native|Public|BlueprintCallable) // <Game+0x336ce90>
	None GetValue(); // GetValue UMG.Int32Binding.GetValue // (Final|Native|Public|Const) // <Game+0x336b1f0>
	void SetCanCache(None CanCache); // SetCanCache UMG.InvalidationBox.SetCanCache // (Final|Native|Public|BlueprintCallable) // <Game+0x336bfd0>
	void BP_OnItemSelectionChanged(None bIsSelected); // BP_OnItemSelectionChanged UMG.UserListEntry.BP_OnItemSelectionChanged // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	None IsListItemSelected(None UserListEntry); // IsListItemSelected UMG.UserListEntryLibrary.IsListItemSelected // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x336b2c0>
	void OnListItemObjectSet(None ListItemObject); // OnListItemObjectSet UMG.UserObjectListEntry.OnListItemObjectSet // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	None GetListItemObject(None UserObjectListEntry); // GetListItemObject UMG.UserObjectListEntryLibrary.GetListItemObject // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x336b020>
	void SetWheelScrollMultiplier(None NewWheelScrollMultiplier); // SetWheelScrollMultiplier UMG.ListViewBase.SetWheelScrollMultiplier // (Final|Native|Public|BlueprintCallable) // <Game+0x3371bf0>
	void SetSelectionMode(None SelectionMode); // SetSelectionMode UMG.ListView.SetSelectionMode // (Final|Native|Public|BlueprintCallable) // <Game+0x336cd80>
	void ToggleOpen(None bFocusOnOpen); // ToggleOpen UMG.MenuAnchor.ToggleOpen // (Final|Native|Public|BlueprintCallable) // <Game+0x3371d50>
	None GetValue(); // GetValue UMG.MouseCursorBinding.GetValue // (Final|Native|Public|Const) // <Game+0x3370f30>
	void SetJustification(None InJustification); // SetJustification UMG.TextLayoutWidget.SetJustification // (Native|Public|BlueprintCallable) // <Game+0x3382670>
	void SetWidgetStyle(None& InWidgetStyle); // SetWidgetStyle UMG.MultiLineEditableText.SetWidgetStyle // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3371c70>
	void SetTextStyle(None& InTextStyle); // SetTextStyle UMG.MultiLineEditableTextBox.SetTextStyle // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3371ac0>
	None AddChildToOverlay(None Content); // AddChildToOverlay UMG.Overlay.AddChildToOverlay // (Final|Native|Public|BlueprintCallable) // <Game+0x33708d0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.OverlaySlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3371b70>
	void SetPercent(None InPercent); // SetPercent UMG.ProgressBar.SetPercent // (Final|Native|Public|BlueprintCallable) // <Game+0x3375a10>
	void SetTextureParameter(None TextureParameter); // SetTextureParameter UMG.RetainerBox.SetTextureParameter // (Final|Native|Public|BlueprintCallable) // <Game+0x3376210>
	void SetTextStyleSet(None NewTextStyleSet); // SetTextStyleSet UMG.RichTextBlock.SetTextStyleSet // (Final|Native|Public|BlueprintCallable) // <Game+0x3376190>
	void SetSidesToPad(None InPadLeft, None InPadRight, None InPadTop, None InPadBottom); // SetSidesToPad UMG.SafeZone.SetSidesToPad // (Final|Native|Public|BlueprintCallable) // <Game+0x3375d80>
	void SetUserSpecifiedScale(None InUserSpecifiedScale); // SetUserSpecifiedScale UMG.ScaleBox.SetUserSpecifiedScale // (Final|Native|Public|BlueprintCallable) // <Game+0x3376290>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.ScaleBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3364750>
	void SetState(None InOffsetFraction, None InThumbSizeFraction); // SetState UMG.ScrollBar.SetState // (Final|Native|Public|BlueprintCallable) // <Game+0x3375ef0>
	void SetWheelScrollMultiplier(None NewWheelScrollMultiplier); // SetWheelScrollMultiplier UMG.ScrollBox.SetWheelScrollMultiplier // (Final|Native|Public|BlueprintCallable) // <Game+0x3376390>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.ScrollBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3376310>
	void SetWidthOverride(None InWidthOverride); // SetWidthOverride UMG.SizeBox.SetWidthOverride // (Final|Native|Public|BlueprintCallable) // <Game+0x3376410>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.SizeBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x337a410>
	None TransformVectorLocalToAbsolute(None& Geometry, None LocalVector); // TransformVectorLocalToAbsolute UMG.SlateBlueprintLibrary.TransformVectorLocalToAbsolute // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x337a790>
	void SetValue(None InValue); // SetValue UMG.Slider.SetValue // (Final|Native|Public|BlueprintCallable) // <Game+0x337a310>
	void SetSize(None InSize); // SetSize UMG.Spacer.SetSize // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x337a110>
	void SetValue(None NewValue); // SetValue UMG.SpinBox.SetValue // (Final|Native|Public|BlueprintCallable) // <Game+0x337a390>
	None GetTextValue(); // GetTextValue UMG.TextBinding.GetTextValue // (Final|Native|Public|Const) // <Game+0x3380e50>
	void SetText(None InText); // SetText UMG.TextBlock.SetText // (Native|Public|BlueprintCallable) // <Game+0x33831a0>
	void SetNumberOfPieces(None InNumberOfPieces); // SetNumberOfPieces UMG.Throbber.SetNumberOfPieces // (Final|Native|Public|BlueprintCallable) // <Game+0x33829c0>
	void SetEntryWidth(None NewWidth); // SetEntryWidth UMG.TileView.SetEntryWidth // (Final|Native|Public|BlueprintCallable) // <Game+0x3382190>
	void SetItemExpansion(None Item, None bExpandItem); // SetItemExpansion UMG.TreeView.SetItemExpansion // (Final|Native|Public|BlueprintCallable) // <Game+0x33825a0>
	void SetUserTag(None InUserTag); // SetUserTag UMG.UMGSequencePlayer.SetUserTag // (Final|Native|Public|BlueprintCallable) // <Game+0x3383280>
	void SetSlotPadding(None InSlotPadding); // SetSlotPadding UMG.UniformGridPanel.SetSlotPadding // (Final|Native|Public|BlueprintCallable) // <Game+0x3382ee0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.UniformGridSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3383300>
	None AddChildToVerticalBox(None Content); // AddChildToVerticalBox UMG.VerticalBox.AddChildToVerticalBox // (Final|Native|Public|BlueprintCallable) // <Game+0x3385300>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.VerticalBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3386930>
	None Spawn(None ActorClass); // Spawn UMG.Viewport.Spawn // (Final|Native|Public|BlueprintCallable) // <Game+0x3386b50>
	None GetValue(); // GetValue UMG.VisibilityBinding.GetValue // (Final|Native|Public|Const) // <Game+0x33856c0>
	void UnbindFromAnimationStarted(None Widget, None Delegate); // UnbindFromAnimationStarted UMG.WidgetAnimation.UnbindFromAnimationStarted // (Final|Native|Public|BlueprintCallable) // <Game+0x338d0e0>
	None CreatePlayAnimationTimeRangeProxyObject(None& Result, None Widget, None InAnimation, None StartAtTime, None EndAtTime, None NumLoopsToPlay, None PlayMode, None PlaybackSpeed); // CreatePlayAnimationTimeRangeProxyObject UMG.WidgetAnimationPlayCallbackProxy.CreatePlayAnimationTimeRangeProxyObject // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3389770>
	None GetValue(); // GetValue UMG.WidgetBinding.GetValue // (Final|Native|Public|Const) // <Game+0x338b9f0>
	None UnlockMouse(None& Reply); // UnlockMouse UMG.WidgetBlueprintLibrary.UnlockMouse // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x338d230>
	void SetWindowVisibility(None InVisibility); // SetWindowVisibility UMG.WidgetComponent.SetWindowVisibility // (Final|Native|Public|BlueprintCallable) // <Game+0x3390d90>
	void SetFocus(None FocusWidget); // SetFocus UMG.WidgetInteractionComponent.SetFocus // (Final|Native|Public|BlueprintCallable) // <Game+0x3390740>
	None SlotAsWrapBoxSlot(None Widget); // SlotAsWrapBoxSlot UMG.WidgetLayoutLibrary.SlotAsWrapBoxSlot // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x3391410>
	void SetActiveWidgetIndex(None Index); // SetActiveWidgetIndex UMG.WidgetSwitcher.SetActiveWidgetIndex // (Native|Public|BlueprintCallable) // <Game+0x3392aa0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.WidgetSwitcherSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x33930f0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.WindowTitleBarArea.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3393170>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.WindowTitleBarAreaSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x33931f0>
	void SetInnerSlotPadding(None InPadding); // SetInnerSlotPadding UMG.WrapBox.SetInnerSlotPadding // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3392ec0>
	void SetVerticalAlignment(None InVerticalAlignment); // SetVerticalAlignment UMG.WrapBoxSlot.SetVerticalAlignment // (Final|Native|Public|BlueprintCallable) // <Game+0x3393270>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-Weapon_ADS.ABP-Weapon_ADS_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdateWholeDataModelFromStruct(None Arg); // UpdateWholeDataModelFromStruct CoherentUIGTPlugin.CoherentUIGTBaseComponent.UpdateWholeDataModelFromStruct // (Final|Native|Public|BlueprintCallable|Const) // <Game+0x1101140>
	void TriggerJSEvent_Widget(None Widget, None EventName, None JSEvent); // TriggerJSEvent_Widget CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.TriggerJSEvent_Widget // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11043b0>
	void SetupUIGTView(None PageUrl, None bIsTransparent, None ClickThroughAlphaThreshold, None AnimationFrameDefer, None bDelayedUpdate); // SetupUIGTView CoherentUIGTPlugin.CoherentUIGTGameHUD.SetupUIGTView // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x1103f40>
	void ToggleCoherentUIGTInputFocus(); // ToggleCoherentUIGTInputFocus CoherentUIGTPlugin.CoherentUIGTInputActor.ToggleCoherentUIGTInputFocus // (Final|Native|Public|BlueprintCallable) // <Game+0x11041a0>
	void AddText(None& Text); // AddText CoherentUIGTPlugin.CoherentUIGTJSEvent.AddText // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1106e40>
	void ReadObject(None Index, None Object); // ReadObject CoherentUIGTPlugin.CoherentUIGTJSPayload.ReadObject // (Final|Native|Public|BlueprintCallable) // <Game+0x1107790>
	void OnLiveViewSizeRequest(None baseComponent, None Name, None& Width, None& Height); // OnLiveViewSizeRequest CoherentUIGTPlugin.CoherentUIGTLiveView.OnLiveViewSizeRequest // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1107600>
	void UpdateWholeDataModelFromStruct(None Arg); // UpdateWholeDataModelFromStruct CoherentUIGTPlugin.CoherentUIGTWidget.UpdateWholeDataModelFromStruct // (Final|Native|Public|BlueprintCallable|Const) // <Game+0x1101210>
	None GetDatasmithUserDataValueForKey(None Object, None Key); // GetDatasmithUserDataValueForKey DatasmithContent.DatasmithContentBlueprintLibrary.GetDatasmithUserDataValueForKey // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x16b4a00>
	void PlayLevelSequence(None SequenceToPlay); // PlayLevelSequence DatasmithContent.DatasmithImportedSequencesActor.PlayLevelSequence // (Final|Native|Public|BlueprintCallable) // <Game+0x16b4b10>
	void OnMatchReceivedTurn(None Match, None bDidBecomeActive); // OnMatchReceivedTurn OnlineSubsystem.TurnBasedMatchInterface.OnMatchReceivedTurn // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None GetVariantSetByName(None VariantSetName); // GetVariantSetByName VariantManagerContent.LevelVariantSets.GetVariantSetByName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x16be830>
	None SwitchOnVariantByName(None VariantSetName, None VariantName); // SwitchOnVariantByName VariantManagerContent.LevelVariantSetsActor.SwitchOnVariantByName // (Final|Native|Public|BlueprintCallable) // <Game+0x16bec40>
	None HasRecordedData(); // HasRecordedData VariantManagerContent.PropertyValue.HasRecordedData // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x16be930>
	void SelectOption(None OptionIndex); // SelectOption VariantManagerContent.SwitchActor.SelectOption // (Final|Native|Public|BlueprintCallable) // <Game+0x16be990>
	void SwitchOn(); // SwitchOn VariantManagerContent.Variant.SwitchOn // (Final|Native|Public|BlueprintCallable) // <Game+0x16beb60>
	void SetDisplayText(None& NewDisplayText); // SetDisplayText VariantManagerContent.VariantSet.SetDisplayText // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x16bea10>
	void DisableCarriedListHover(); // DisableCarriedListHover UW-Inventory_Keeped.UW-Inventory_Keeped_C.DisableCarriedListHover // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None IsCapturing(); // IsCapturing MovieSceneCapture.MovieSceneCaptureProtocolBase.IsCapturing // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3512650>
	void SetImageCaptureProtocolType(None ProtocolType); // SetImageCaptureProtocolType MovieSceneCapture.MovieSceneCapture.SetImageCaptureProtocolType // (Final|Native|Public|BlueprintCallable) // <Game+0x3512940>
	None IsCaptureInProgress(); // IsCaptureInProgress MovieSceneCapture.MovieSceneCaptureEnvironment.IsCaptureInProgress // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3512620>
	void StopCapturingFinalPixels(); // StopCapturingFinalPixels MovieSceneCapture.UserDefinedCaptureProtocol.StopCapturingFinalPixels // (Final|Native|Public|BlueprintCallable) // <Game+0x3512b50>
	void WriteImageToDisk(None& PixelData, None& StreamID, None& FrameMetrics, None bCopyImageData); // WriteImageToDisk MovieSceneCapture.UserDefinedImageCaptureProtocol.WriteImageToDisk // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3512b70>
	void Stop(); // Stop AudioMixer.SynthComponent.Stop // (Final|Native|Public|BlueprintCallable) // <Game+0x33f9980>
	None TrimAudioCache(None InMegabytesToFree); // TrimAudioCache AudioMixer.AudioMixerBlueprintLibrary.TrimAudioCache // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x33f9c80>
	void SetSettings(None& Settings); // SetSettings AudioMixer.SubmixEffectDynamicsProcessorPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x33f90c0>
	void SetSettings(None& InSettings); // SetSettings AudioMixer.SubmixEffectSubmixEQPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0790>
	void SetSettingsWithReverbEffect(None InReverbEffect, None WetLevel, None DryLevel); // SetSettingsWithReverbEffect AudioMixer.SubmixEffectReverbPreset.SetSettingsWithReverbEffect // (Final|Native|Public|BlueprintCallable) // <Game+0x33f9450>
	void SetSettingsWithReverbEffect(None InReverbEffect, None WetLevel, None DryLevel); // SetSettingsWithReverbEffect AudioMixer.SubmixEffectReverbFastPreset.SetSettingsWithReverbEffect // (Final|Native|Public|BlueprintCallable) // <Game+0x33f9350>
	void OnInitializedFSM(None Context); // OnInitializedFSM UFSM.FSMInterface.OnInitializedFSM // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x11ef360>
	None FSM_SetState_Async(None FSM, None WaitForSeconds, None Name, None Loop); // FSM_SetState_Async UFSM.FSM_SetState_Async.FSM_SetState_Async // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11ee8d0>
	None FSM_SetStateID_Async(None FSM, None WaitForSeconds, None ID, None Loop); // FSM_SetStateID_Async UFSM.FSM_SetStateID_Async.FSM_SetStateID_Async // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11ee1a0>
	None FSM_SetState_ConditionalAsync(None FSM, None WaitForSeconds, None Name, None Condition, None Loop); // FSM_SetState_ConditionalAsync UFSM.FSM_SetState_ConditionalAsync.FSM_SetState_ConditionalAsync // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11eec20>
	None FSM_SetStateID_ConditionalAsync(None FSM, None WaitForSeconds, None ID, None Condition, None Loop); // FSM_SetStateID_ConditionalAsync UFSM.FSM_SetStateID_ConditionalAsync.FSM_SetStateID_ConditionalAsync // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11ee500>
	None FSM_SetState_AsyncWithCallbacks(None FSM, None WaitForSeconds, None Name, None Loop, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_SetState_AsyncWithCallbacks UFSM.FSM_SetState_AsyncWithCallbacks.FSM_SetState_AsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11eea10>
	None FSM_SetStateID_AsyncWithCallbacks(None FSM, None WaitForSeconds, None ID, None Loop, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_SetStateID_AsyncWithCallbacks UFSM.FSM_SetStateID_AsyncWithCallbacks.FSM_SetStateID_AsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11ee2e0>
	None FSM_SetState_ConditionalAsyncWithCallbacks(None FSM, None WaitForSeconds, None Name, None Condition, None Loop, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_SetState_ConditionalAsyncWithCallbacks UFSM.FSM_SetState_ConditionalAsyncWithCallbacks.FSM_SetState_ConditionalAsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11eeda0>
	None FSM_SetStateID_ConditionalAsyncWithCallbacks(None FSM, None WaitForSeconds, None ID, None Condition, None Loop, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_SetStateID_ConditionalAsyncWithCallbacks UFSM.FSM_SetStateID_ConditionalAsyncWithCallbacks.FSM_SetStateID_ConditionalAsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11ee680>
	None FSM_FinishState_Async(None FSM, None WaitForSeconds); // FSM_FinishState_Async UFSM.FSM_FinishState_Async.FSM_FinishState_Async // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11edb80>
	None FSM_FinishState_ConditionalAsync(None FSM, None Condition, None WaitForSeconds, None Fallback); // FSM_FinishState_ConditionalAsync UFSM.FSM_FinishState_ConditionalAsync.FSM_FinishState_ConditionalAsync // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11edde0>
	None FSM_FinishState_AsyncWithCallbacks(None FSM, None WaitForSeconds, None& ExitPreviousStateCallback, None& BeginNextStateCallback); // FSM_FinishState_AsyncWithCallbacks UFSM.FSM_FinishState_AsyncWithCallbacks.FSM_FinishState_AsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11edc50>
	None FSM_FinishState_ConditionalAsyncWithCallbacks(None FSM, None Condition, None WaitForSeconds, None Fallback, None& ExitPreviousStateCallback, None& BeginNextStateCallback, None& BeginFallbackStateCallback); // FSM_FinishState_ConditionalAsyncWithCallbacks UFSM.FSM_FinishState_ConditionalAsyncWithCallbacks.FSM_FinishState_ConditionalAsyncWithCallbacks // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x11edf20>
	None FSM_EvaluateTwoBools(None& BoolA, None& AndB); // FSM_EvaluateTwoBools UFSM.FSMHelper.FSM_EvaluateTwoBools // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x11f2900>
	void Update(None DeltaTime); // Update UFSM.ReactiveStateMachine.Update // (Final|Native|Private) // <Game+0x11f3670>
	None WasInputKeyJustReleased(None Key); // WasInputKeyJustReleased UFSM.StateAction.WasInputKeyJustReleased // (Final|Native|Protected|BlueprintCallable|BlueprintPure|Const) // <Game+0x11f37e0>
	None SpawnMachine(None Context, None MachineClass, None MachineID); // SpawnMachine UFSM.ReactiveStateMachineFactory.SpawnMachine // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x11fa550>
	None GetFSMComponentByName(None Name); // GetFSMComponentByName UFSM.StateMachineABP.GetFSMComponentByName // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x11f7930>
	void Update(None UpState, None& Callback); // Update UFSM.StateMachineComponent.Update // (Native|Protected|HasOutParms) // <Game+0x11fa6a0>
	void AddOptionList(None& ItemOption); // AddOptionList UW-Lobby_WeaponInfo_OptionList.UW-Lobby_WeaponInfo_OptionList_C.AddOptionList // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None UseBlackboard(None BlackboardAsset, None& BlackboardComponent); // UseBlackboard AIModule.AIController.UseBlackboard // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3fa7550>
	void OnMoveCompleted(None RequestID, None MovementResult); // OnMoveCompleted AIModule.AIAsyncTaskBlueprintProxy.OnMoveCompleted // (Final|Native|Public) // <Game+0x3fa6af0>
	void UnlockAIResourcesWithAnimation(None AnimInstance, None bUnlockMovement, None UnlockAILogic); // UnlockAIResourcesWithAnimation AIModule.AIBlueprintHelperLibrary.UnlockAIResourcesWithAnimation // (Final|BlueprintAuthorityOnly|Native|Static|Public|BlueprintCallable) // <Game+0x3fa7440>
	void SetSenseEnabled(None SenseClass, None bEnable); // SetSenseEnabled AIModule.AIPerceptionComponent.SetSenseEnabled // (Final|Native|Public|BlueprintCallable) // <Game+0x3fa6f70>
	void UnregisterFromSense(None SenseClass); // UnregisterFromSense AIModule.AIPerceptionStimuliSourceComponent.UnregisterFromSense // (Final|Native|Public|BlueprintCallable) // <Game+0x3fabf40>
	void ReportPerceptionEvent(None WorldContextObject, None PerceptionEvent); // ReportPerceptionEvent AIModule.AIPerceptionSystem.ReportPerceptionEvent // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fabc70>
	None OnUpdate(None& EventsToProcess); // OnUpdate AIModule.AISense_Blueprint.OnUpdate // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void ReportDamageEvent(None WorldContextObject, None DamagedActor, None Instigator, None DamageAmount, None EventLocation, None HitLocation); // ReportDamageEvent AIModule.AISense_Damage.ReportDamageEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x3fab860>
	void ReportNoiseEvent(None WorldContextObject, None NoiseLocation, None Loudness, None Instigator, None MaxRange, None Tag); // ReportNoiseEvent AIModule.AISense_Hearing.ReportNoiseEvent // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x3fabab0>
	void RequestPawnPredictionEvent(None Requestor, None PredictedActor, None PredictionTime); // RequestPawnPredictionEvent AIModule.AISense_Prediction.RequestPawnPredictionEvent // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fabe20>
	void AILoggingVerbose(); // AILoggingVerbose AIModule.AISystem.AILoggingVerbose // (Exec|Native|Public) // <Game+0x2edce10>
	None AIMoveTo(None Controller, None GoalLocation, None GoalActor, None AcceptanceRadius, None StopOnOverlap, None AcceptPartialPath, None bUsePathfinding, None bLockAILogic, None bUseContinuosGoalTracking, None ProjectGoalOnNavigation); // AIMoveTo AIModule.AITask_MoveTo.AIMoveTo // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x3fafdd0>
	None RunEQS(None Controller, None QueryTemplate); // RunEQS AIModule.AITask_RunEQS.RunEQS // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fb0c10>
	void StopLogic(None reason); // StopLogic AIModule.BrainComponent.StopLogic // (Native|Public|BlueprintCallable) // <Game+0x3fb6b50>
	void SetDynamicSubtree(None InjectTag, None BehaviorAsset); // SetDynamicSubtree AIModule.BehaviorTreeComponent.SetDynamicSubtree // (Native|Public|BlueprintCallable) // <Game+0x3fb0cd0>
	None GetBlackboardAsset(); // GetBlackboardAsset AIModule.BlackboardAssetProvider.GetBlackboardAsset // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x1f98cb0>
	void SetValueAsVector(None& KeyName, None VectorValue); // SetValueAsVector AIModule.BlackboardComponent.SetValueAsVector // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3fb1590>
	void ReceiveTickAI(None OwnerController, None ControlledPawn, None DeltaSeconds); // ReceiveTickAI AIModule.BTDecorator_BlueprintBase.ReceiveTickAI // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void StopUsingExternalEvent(None NodeOwner); // StopUsingExternalEvent AIModule.BTFunctionLibrary.StopUsingExternalEvent // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3d51bf0>
	void ReceiveTickAI(None OwnerController, None ControlledPawn, None DeltaSeconds); // ReceiveTickAI AIModule.BTService_BlueprintBase.ReceiveTickAI // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void SetFinishOnMessageWithId(None MessageName, None RequestID); // SetFinishOnMessageWithId AIModule.BTTask_BlueprintBase.SetFinishOnMessageWithId // (Final|Native|Protected|BlueprintCallable) // <Game+0x3fb9a50>
	void OnNavDataRegistered(None NavData); // OnNavDataRegistered AIModule.PathFollowingComponent.OnNavDataRegistered // (Final|Native|Protected) // <Game+0x3fc4f00>
	void SuspendCrowdSteering(None bSuspend); // SuspendCrowdSteering AIModule.CrowdFollowingComponent.SuspendCrowdSteering // (Native|Public|BlueprintCallable) // <Game+0x3fb9b10>
	void ProvideSingleLocation(None QuerierObject, None QuerierActor, None& ResultingLocation); // ProvideSingleLocation AIModule.EnvQueryContext_BlueprintBase.ProvideSingleLocation // (Event|Public|HasOutParms|HasDefaults|BlueprintEvent|Const) // <Game+0x23ad490>
	None GetQuerier(); // GetQuerier AIModule.EnvQueryGenerator_BlueprintBase.GetQuerier // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3fbd1b0>
	void SetNamedParam(None ParamName, None Value); // SetNamedParam AIModule.EnvQueryInstanceBlueprintWrapper.SetNamedParam // (Final|Native|Public|BlueprintCallable) // <Game+0x3fbd5e0>
	None RunEQSQuery(None WorldContextObject, None QueryTemplate, None Querier, None RunMode, None WrapperClass); // RunEQSQuery AIModule.EnvQueryManager.RunEQSQuery // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fbd460>
	void SetSmartLinkEnabled(None bEnabled); // SetSmartLinkEnabled AIModule.NavLinkProxy.SetSmartLinkEnabled // (Final|Native|Public|BlueprintCallable) // <Game+0x3fc2930>
	None SetLocalNavigationGridDensity(None WorldContextObject, None CellSize); // SetLocalNavigationGridDensity AIModule.NavLocalGridManager.SetLocalNavigationGridDensity // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3fc2860>
	None GetActionPriority(); // GetActionPriority AIModule.PawnAction.GetActionPriority // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x1895fe0>
	void ActionTick(None ControlledPawn, None DeltaSeconds); // ActionTick AIModule.PawnAction_BlueprintBase.ActionTick // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None K2_PushAction(None NewAction, None Priority, None Instigator); // K2_PushAction AIModule.PawnActionsComponent.K2_PushAction // (Final|Native|Public|BlueprintCallable) // <Game+0x3fc4c70>
	void SetSensingUpdatesEnabled(None bEnabled); // SetSensingUpdatesEnabled AIModule.PawnSensingComponent.SetSensingUpdatesEnabled // (BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // <Game+0x3fc5080>
	void Construct(); // Construct UW-ItemRecipeTreePopup.UW-ItemRecipeTreePopup_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void ServerRPVPing(); // ServerRPVPing ReplicationOptimizer.ReplicationPingComponet.ServerRPVPing // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // <Game+0x120d600>
	void SetDiedPawnInfo(None BroadCastInfo); // SetDiedPawnInfo UW-DeathUserWidget.UW-DeathUserWidget_C.SetDiedPawnInfo // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None DropItem(None MyGeometry, None PointerEvent, None Operation); // DropItem UW-Inventory_Proximity.UW-Inventory_Proximity_C.DropItem // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void InitFxInfo(); // InitFxInfo UW-Inventory_PerkSlot_FX.UW-Inventory_PerkSlot_FX_C.InitFxInfo // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ServerStopDebugging(); // ServerStopDebugging ReplicationGraph.ReplicationGraphDebugActor.ServerStopDebugging // (Net|NetReliableNative|Event|Public|NetServer) // <Game+0x12378f0>
	None GetProjectlFullVersion(None Prefix); // GetProjectlFullVersion ProjectVersion.ProjectVersionStatics.GetProjectlFullVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x1238c40>
	void SetScopeImageAngle(None NewAngle); // SetScopeImageAngle UW-Sight_Reddot.UW-Sight_Reddot_C.SetScopeImageAngle // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckEmptyGroup(); // CheckEmptyGroup UW-ReplayPlayerListGroupWidget.UW-ReplayPlayerListGroupWidget_C.CheckEmptyGroup // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetPrefab(None NewPrefab, None bForceRevertEvenDisconnected); // SetPrefab PrefabAsset.PrefabToolActor.SetPrefab // (Final|Native|Public|BlueprintCallable) // <Game+0x124d3b0>
	void SetSimplifiedMeshAssetReference(None& InAssetReference); // SetSimplifiedMeshAssetReference PrefabAsset.PrefabAsset.SetSimplifiedMeshAssetReference // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x124d480>
	None SpawnPrefab(None WorldContextObject, None PrefabAsset, None& SpawnTransform, None& OutSpawnPrefabInstances, None bSpawnInstancesOnly, None CollisionHandlingOverride, None Owner); // SpawnPrefab PrefabAsset.PrefabFunctionLibrary.SpawnPrefab // (Final|Native|Static|Private|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x124d530>
	void UnitTest(); // UnitTest PrefabAsset.BravoHotelWorldTagFunctionLibrary.UnitTest // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x124d7c0>
	None ToAbsolutePath(None projectReleativePath, None isSave); // ToAbsolutePath XlntLib.DirectExcelLibrary.ToAbsolutePath // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x13412f0>
	None Type(); // Type XlntLib.ExcelCell.Type // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x13419d0>
	None Width(None rangeReference); // Width XlntLib.ExcelCellRangeReferenceLibrary.Width // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x1341a00>
	None ToString(None cellRef); // ToString XlntLib.ExcelCellReferenceLibrary.ToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x13418d0>
	void SetProtection(None protection); // SetProtection XlntLib.ExcelFormat.SetProtection // (Final|Native|Public|BlueprintCallable) // <Game+0x1348080>
	None MakeNumberFormat_Text(); // MakeNumberFormat_Text XlntLib.ExcelNumberFormatLibrary.MakeNumberFormat_Text // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x13465c0>
	None ToString(None Value); // ToString XlntLib.ExcelVariantLibrary.ToString // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x1348b10>
	None Title(); // Title XlntLib.ExcelWorkbook.Title // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x1351d50>
	void UnmergeCells(None rangeReference); // UnmergeCells XlntLib.ExcelWorksheet.UnmergeCells // (Final|Native|Public|BlueprintCallable) // <Game+0x13526d0>
	None Get_TextBlock_TabName_ColorAndOpacity_1(); // Get_TextBlock_TabName_ColorAndOpacity_1 UW-BlackMarket_SubTabCell.UW-BlackMarket_SubTabCell_C.Get_TextBlock_TabName_ColorAndOpacity_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void Init(None Title, None Value); // Init UW-MatchEnd_GoldList.UW-MatchEnd_GoldList_C.Init // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None GetVisibility_1(); // GetVisibility_1 UW-ScenarioWidget.UW-ScenarioWidget_C.GetVisibility_1 // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void SetOpeningArrow(None InOpening); // SetOpeningArrow UW-ReportUser.UW-ReportUser_C.SetOpeningArrow // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None GetVersion(); // GetVersion RMAFoliageTools.RMAFoliageToolsFunctionLibrary.GetVersion // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x1358130>
	None Get(); // Get MK3DReplayBasic.MK3DUserInterfaceManager.Get // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x13677a0>
	void OnClickPlayerNameButton(); // OnClickPlayerNameButton MK3DReplayBasic.NativePlayerListItem.OnClickPlayerNameButton // (Final|Native|Public) // <Game+0x1367c40>
	void ShowPlayerList(); // ShowPlayerList MK3DReplayBasic.NativePlayerListWidget.ShowPlayerList // (Final|Native|Public|BlueprintCallable) // <Game+0x13699c0>
	None OnMouseMoveEventBorder(None MyGeometry, None& MouseEvent); // OnMouseMoveEventBorder MK3DReplayBasic.NativeReplayEventMarkerBasic.OnMouseMoveEventBorder // (Native|Public|HasOutParms) // <Game+0x1368b20>
	void SetKillEvent(None& InKillEvent); // SetKillEvent MK3DReplayBasic.NativeReplayKillEventMarker.SetKillEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x13696e0>
	void SetReplayListItemText(None Name, None IsLive, None Time); // SetReplayListItemText MK3DReplayBasic.NativeReplayListItem.SetReplayListItemText // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x13697c0>
	void ShowMouseCursor(); // ShowMouseCursor MK3DReplayBasic.NativeReplayListLevel.ShowMouseCursor // (Final|Native|Protected) // <Game+0x13699a0>
	void UpdateTotalReplaysTB(); // UpdateTotalReplaysTB MK3DReplayBasic.NativeReplayListWidget.UpdateTotalReplaysTB // (Final|Native|Public|BlueprintCallable) // <Game+0x1369d50>
	void UpdateTimelineScale(); // UpdateTimelineScale MK3DReplayBasic.NativeReplayTimelineBasicWidget.UpdateTimelineScale // (Final|Native|Public|BlueprintCallable) // <Game+0x1369d10>
	None IsTrackerValid(); // IsTrackerValid MagicLeapLightEstimation.MagicLeapLightEstimationFunctionLibrary.IsTrackerValid // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x17f5880>
	None GetVelocityValue(None& rowIndex, None& Value); // GetVelocityValue HoudiniNiagara.HoudiniCSV.GetVelocityValue // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x1383f90>
	None SendSharedWorldDataToClients(); // SendSharedWorldDataToClients MagicLeapSharedWorld.MagicLeapSharedWorldGameMode.SendSharedWorldDataToClients // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // <Game+0x17bf110>
	void OnReplicate_SharedWorldData(); // OnReplicate_SharedWorldData MagicLeapSharedWorld.MagicLeapSharedWorldGameState.OnReplicate_SharedWorldData // (Final|Native|Private) // <Game+0x17bf0d0>
	void ServerSetLocalWorldData(None LocalWorldReplicationData); // ServerSetLocalWorldData MagicLeapSharedWorld.MagicLeapSharedWorldPlayerController.ServerSetLocalWorldData // (Net|NetReliableNative|Event|Public|NetServer|BlueprintCallable) // <Game+0x17bf1e0>
	void OnPaint(None& Context); // OnPaint UW-MapDrawWidget_Circle.UW-MapDrawWidget_Circle_C.OnPaint // (BlueprintCosmetic|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const) // <Game+0x23ad490>
	void SetIconTexture(None IconTexture); // SetIconTexture UW-BlackMarket_Slot_Vehicle.UW-BlackMarket_Slot_Vehicle_C.SetIconTexture // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None TryPurchaseItemAsync(None& ItemDetails); // TryPurchaseItemAsync MagicLeap.InAppPurchaseComponent.TryPurchaseItemAsync // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x17cac70>
	void SetStabilizationDepthActor(None InStabilizationDepthActor, None bSetFocusActor); // SetStabilizationDepthActor MagicLeap.MagicLeapHMDFunctionLibrary.SetStabilizationDepthActor // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x17caa40>
	void SelectMeshBlocks(None& NewMeshInfo, None& RequestedMesh); // SelectMeshBlocks MagicLeap.MagicLeapMeshTrackerComponent.SelectMeshBlocks // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x17ca7e0>
	void SelectMeshBlocks(None& NewMeshInfo, None& RequestedMesh); // SelectMeshBlocks MagicLeap.MagicLeapMeshBlockSelectorInterface.SelectMeshBlocks // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x17ca6c0>
	None RequestRaycast(None& RequestParams, None& ResultDelegate); // RequestRaycast MagicLeap.MagicLeapRaycastComponent.RequestRaycast // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x17ca570>
	None MakeRaycastQueryParams(None Position, None Direction, None UpVector, None Width, None Height, None HorizontalFovDegrees, None CollideWithUnobserved, None UserData); // MakeRaycastQueryParams MagicLeap.MagicLeapRaycastFunctionLibrary.MakeRaycastQueryParams // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x17ca2f0>
	void AnimGraph(None InPose, None& AnimGraph); // AnimGraph ABP-Mannequin-PostProcess.ABP-Mannequin-PostProcess_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetDestroyOnSystemFinish(None bShouldDestroyOnSystemFinish); // SetDestroyOnSystemFinish Niagara.NiagaraActor.SetDestroyOnSystemFinish // (Final|RequiredAPI|Native|Public|BlueprintCallable) // <Game+0x1508260>
	void SetVariableVec4(None InVariableName, None& InValue); // SetVariableVec4 Niagara.NiagaraComponent.SetVariableVec4 // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x1509690>
	void ReceiveParticleData(None& Data, None NiagaraSystem); // ReceiveParticleData Niagara.NiagaraParticleCallbackHandler.ReceiveParticleData // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x1510d50>
	void GetTextureSize(None Component, None& SizeX, None& SizeY); // GetTextureSize Niagara.NiagaraDataInterfaceGrid2DCollection.GetTextureSize // (Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1510c30>
	None SpawnSystemAttached(None SystemTemplate, None AttachToComponent, None AttachPointName, None Location, None Rotation, None LocationType, None bAutoDestroy, None bAutoActivate, None PoolingMethod, None bPreCullCheck); // SpawnSystemAttached Niagara.NiagaraFunctionLibrary.SpawnSystemAttached // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x1515600>
	void SetVectorParameter(None InVariableName, None InValue); // SetVectorParameter Niagara.NiagaraParameterCollectionInstance.SetVectorParameter // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x1515150>
	void SetSystem(None InSystem); // SetSystem Niagara.NiagaraPreviewBase.SetSystem // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None Num(); // Num Niagara.NiagaraPreviewAxis.Num // (Native|Event|Public|BlueprintEvent) // <Game+0x151b2e0>
	void SetPaused(None bPaused); // SetPaused Niagara.NiagaraPreviewGrid.SetPaused // (Final|Native|Public|BlueprintCallable) // <Game+0x151b330>
	void RaiseOnGPUCompilationComplete(); // RaiseOnGPUCompilationComplete Niagara.NiagaraScript.RaiseOnGPUCompilationComplete // (Final|Native|Public) // <Game+0x151b310>
	void IsDraging(None& bResult); // IsDraging UW-Inventory_EquippedSlot.UW-Inventory_EquippedSlot_C.IsDraging // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-Projectile_MolotovFireTrapCell.BP-Projectile_MolotovFireTrapCell_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0xffff80089fab0000>
	void SetRowIndex(None NewRowIndex); // SetRowIndex MovieScene.MovieSceneSection.SetRowIndex // (Final|Native|Public|BlueprintCallable) // <Game+0x31b8c30>
	None FindBindingsByTag(None InBindingName); // FindBindingsByTag MovieScene.MovieSceneSequence.FindBindingsByTag // (Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x31bcc50>
	void StopAtCurrentTime(); // StopAtCurrentTime MovieScene.MovieSceneSequencePlayer.StopAtCurrentTime // (Final|Native|Public|BlueprintCallable) // <Game+0x31be130>
	void SetSequence(None Sequence); // SetSequence MovieScene.MovieSceneSubSection.SetSequence // (Final|Native|Public|BlueprintCallable) // <Game+0x31c0e60>
	void OnTick(None DeltaSeconds, None InPlayRate); // OnTick MovieScene.MovieSceneCustomClockSource.OnTick // (Native|Public) // <Game+0x31b1300>
	None OnEvaluate(None Interp); // OnEvaluate MovieScene.MovieSceneEasingFunction.OnEvaluate // (Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // <Game+0x23ad490>
	None GetColorAndOpacity_1(); // GetColorAndOpacity_1 UW-Inventory_PopupPerkSlot.UW-Inventory_PopupPerkSlot_C.GetColorAndOpacity_1 // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTSequenceDirector_1(); // SequenceEvent__ENTRYPOINTSequenceDirector_1 Weapon_Lobby_01.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None GetSpawnedEffect(); // GetSpawnedEffect NiagaraAnimNotifies.AnimNotify_PlayNiagaraEffect.GetSpawnedEffect // (Final|Native|Public|BlueprintCallable|Const) // <Game+0x15243b0>
	void OnLoaded_6834BC7D48AF986BC5969685C4D6D2B3(None Loaded); // OnLoaded_6834BC7D48AF986BC5969685C4D6D2B3 WBP_SPS_UseItemSelectionIcon.WBP_SPS_UseItemSelectionIcon_C.OnLoaded_6834BC7D48AF986BC5969685C4D6D2B3 // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetOwnInfo(); // SetOwnInfo UW-Lobby_Craft_Recipe_Weapon.UW-Lobby_Craft_Recipe_Weapon_C.SetOwnInfo // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OpenPortal(); // OpenPortal AkAudio.AkAcousticPortal.OpenPortal // (Final|Native|Public|BlueprintCallable) // <Game+0x15fb020>
	void StopAmbientSound(); // StopAmbientSound AkAudio.AkAmbientSound.StopAmbientSound // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // <Game+0x15fc260>
	void MigrateMultiCoreRendering(None NewValue); // MigrateMultiCoreRendering AkAudio.AkAndroidInitializationSettings.MigrateMultiCoreRendering // (Final|Native|Public) // <Game+0x15fafa0>
	None GetMinimumDuration(); // GetMinimumDuration AkAudio.AkAudioEvent.GetMinimumDuration // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x15facb0>
	void Stop(); // Stop AkAudio.AkGameObject.Stop // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // <Game+0x1601280>
	void UseReverbVolumes(None inUseReverbVolumes); // UseReverbVolumes AkAudio.AkComponent.UseReverbVolumes // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // <Game+0x15fc460>
	None PostAssociatedAudioInputEvent(); // PostAssociatedAudioInputEvent AkAudio.AkAudioInputComponent.PostAssociatedAudioInputEvent // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // <Game+0x15fb7b0>
	void SetIsChecked(None InIsChecked); // SetIsChecked AkAudio.AkCheckBox.SetIsChecked // (Final|Native|Public|BlueprintCallable) // <Game+0x15fbc70>
	void UseReverbVolumes(None inUseReverbVolumes, None Actor); // UseReverbVolumes AkAudio.AkGameplayStatics.UseReverbVolumes // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable) // <Game+0x16018d0>
	None GetType(); // GetType AkAudio.AkMIDIEventCallbackInfo.GetType // (Final|Native|Public|BlueprintCallable) // <Game+0x1606b10>
	void UpdateGeometry(); // UpdateGeometry AkAudio.AkGeometryComponent.UpdateGeometry // (Final|Native|Public|BlueprintCallable) // <Game+0x1606b60>
	void MigrateMultiCoreRendering(None NewValue); // MigrateMultiCoreRendering AkAudio.AkHololensInitializationSettings.MigrateMultiCoreRendering // (Final|Native|Public) // <Game+0x15fafa0>
	None Conv_FAkBoolPropertyToControlToText(None& INAkBoolPropertyToControl); // Conv_FAkBoolPropertyToControlToText AkAudio.AkItemBoolPropertiesConv.Conv_FAkBoolPropertyToControlToText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x160d490>
	void SetSearchText(None newText); // SetSearchText AkAudio.AkItemBoolProperties.SetSearchText // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // <Game+0x160d7a0>
	None Conv_FAkPropertyToControlToText(None& INAkPropertyToControl); // Conv_FAkPropertyToControlToText AkAudio.AkItemPropertiesConv.Conv_FAkPropertyToControlToText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x160d490>
	void SetSearchText(None newText); // SetSearchText AkAudio.AkItemProperties.SetSearchText // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // <Game+0x160d7a0>
	void MigrateMultiCoreRendering(None NewValue); // MigrateMultiCoreRendering AkAudio.AkLinuxInitializationSettings.MigrateMultiCoreRendering // (Final|Native|Public) // <Game+0x15fafa0>
	void MigrateMultiCoreRendering(None NewValue); // MigrateMultiCoreRendering AkAudio.AkLuminInitializationSettings.MigrateMultiCoreRendering // (Final|Native|Public) // <Game+0x15fafa0>
	void MigrateMultiCoreRendering(None NewValue); // MigrateMultiCoreRendering AkAudio.AkMacInitializationSettings.MigrateMultiCoreRendering // (Final|Native|Public) // <Game+0x15fafa0>
	void MigrateMultiCoreRendering(None NewValue); // MigrateMultiCoreRendering AkAudio.AkPS4InitializationSettings.MigrateMultiCoreRendering // (Final|Native|Public) // <Game+0x160d720>
	void SetValue(None InValue); // SetValue AkAudio.AkSlider.SetValue // (Final|Native|Public|BlueprintCallable) // <Game+0x16119a0>
	void UpdateSurfaceReflectorSet(); // UpdateSurfaceReflectorSet AkAudio.AkSurfaceReflectorSetComponent.UpdateSurfaceReflectorSet // (Final|Native|Public|BlueprintCallable) // <Game+0x1611dc0>
	void MigrateMultiCoreRendering(None NewValue); // MigrateMultiCoreRendering AkAudio.AkSwitchInitializationSettings.MigrateMultiCoreRendering // (Final|Native|Public) // <Game+0x15fafa0>
	None Unsubscribe(None& SubscriptionId, None& UnsubscriptionDone); // Unsubscribe AkAudio.AkWaapiCalls.Unsubscribe // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x1611ca0>
	None Conv_FAkWaapiFieldNamesToText(None& INAkWaapiFieldNames); // Conv_FAkWaapiFieldNamesToText AkAudio.SAkWaapiFieldNamesConv.Conv_FAkWaapiFieldNamesToText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x160d490>
	None SetStringField(None& FieldName, None FieldValue, None Target); // SetStringField AkAudio.AkWaapiJsonManager.SetStringField // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x1618fb0>
	None Conv_FAkWaapiUriToText(None& INAkWaapiUri); // Conv_FAkWaapiUriToText AkAudio.AkWaapiUriConv.Conv_FAkWaapiUriToText // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x160d490>
	void MigrateMultiCoreRendering(None NewValue); // MigrateMultiCoreRendering AkAudio.AkWindowsInitializationSettings.MigrateMultiCoreRendering // (Final|Native|Public) // <Game+0x15fafa0>
	void SetSearchText(None newText); // SetSearchText AkAudio.AkWwiseTree.SetSearchText // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // <Game+0x160d7a0>
	void MigrateMultiCoreRendering(None NewValue); // MigrateMultiCoreRendering AkAudio.AkXboxOneInitializationSettings.MigrateMultiCoreRendering // (Final|Native|Public) // <Game+0x15fafa0>
	None PostEventAsync(None WorldContextObject, None AkEvent, None Actor, None CallbackMask, None& PostEventCallback, None& ExternalSources, None bStopWhenAttachedToDestroyed); // PostEventAsync AkAudio.PostEventAsync.PostEventAsync // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x1618360>
	None PostEventAtLocationAsync(None WorldContextObject, None AkEvent, None Location, None Orientation); // PostEventAtLocationAsync AkAudio.PostEventAtLocationAsync.PostEventAtLocationAsync // (Final|BlueprintCosmetic|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x1619450>
	void SetVertexPosition(None VertexID, None& Position); // SetVertexPosition MeshDescription.MeshDescriptionBase.SetVertexPosition // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x3477a70>
	None On_IMG-BG_MouseButtonDown_1(None MyGeometry, None& MouseEvent); // On_IMG-BG_MouseButtonDown_1 UW-BlackMarket_Slot_Ammo.UW-BlackMarket_Slot_Ammo_C.On_IMG-BG_MouseButtonDown_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetHealthPosition(None InHealth, None& PositionX); // GetHealthPosition UW-PlayerInfo_Progress_Renew.UW-PlayerInfo_Progress_Renew_C.GetHealthPosition // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void CanInput(None& bCheck); // CanInput BP-LobbyController.BP-LobbyController_C.CanInput // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void EnableShowReplayType(None& bRet); // EnableShowReplayType KeyWidget.KeyWidget_C.EnableShowReplayType // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ActiveThrowingProjectileMainEffect(); // ActiveThrowingProjectileMainEffect BP-ProjectileGrenade_MolotovCocktail.BP-ProjectileGrenade_MolotovCocktail_C.ActiveThrowingProjectileMainEffect // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetAnimDriveSpringStiffness(None InStiffness); // SetAnimDriveSpringStiffness ClothingSystemRuntimeInterface.ClothingSimulationInteractor.SetAnimDriveSpringStiffness // (Native|Public|BlueprintCallable) // <Game+0x34d1ad0>
	void UpdateHighlightNameColor(); // UpdateHighlightNameColor UW-ReplayPlayerListItemWidget.UW-ReplayPlayerListItemWidget_C.UpdateHighlightNameColor // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReadyForActivation(); // ReadyForActivation GameplayTasks.GameplayTask.ReadyForActivation // (Final|Native|Public|BlueprintCallable) // <Game+0x3eb3ca0>
	None ClaimResources(None InTaskOwner, None ResourceClasses, None Priority, None TaskInstanceName); // ClaimResources GameplayTasks.GameplayTask_ClaimResource.ClaimResources // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3eb37b0>
	None SpawnActor(None TaskOwner, None SpawnLocation, None SpawnRotation, None Class, None bSpawnOnlyOnAuthority); // SpawnActor GameplayTasks.GameplayTask_SpawnActor.SpawnActor // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x3eb3cc0>
	None TaskWaitDelay(None TaskOwner, None Time, None Priority); // TaskWaitDelay GameplayTasks.GameplayTask_WaitDelay.TaskWaitDelay // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x3eb3e70>
	void OnRep_SimulatedTasks(); // OnRep_SimulatedTasks GameplayTasks.GameplayTasksComponent.OnRep_SimulatedTasks // (Final|Native|Public) // <Game+0x3eb3c80>
	void SetScopeImageAngle(None NewAngle); // SetScopeImageAngle UW-Sight_2X.UW-Sight_2X_C.SetScopeImageAngle // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetDLSSSharpness(None Sharpness); // SetDLSSSharpness DLSSBlueprint.DLSSLibrary.SetDLSSSharpness // (Final|RequiredAPI|Native|Static|Public|BlueprintCallable) // <Game+0x162fee0>
	void EndCraft(); // EndCraft UW-Lobby_Main_Web.UW-Lobby_Main_Web_C.EndCraft // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void EnableVolume(None DDGIVolumeComponent); // EnableVolume RTXGI.DDGIBlueprintLibrary.EnableVolume // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x164e750>
	void DDGIClearVolumes(); // DDGIClearVolumes RTXGI.DDGIVolumeComponent.DDGIClearVolumes // (Final|Exec|Native|Public) // <Game+0x164e6c0>
	None GetGeometryCacheComponent(); // GetGeometryCacheComponent GeometryCache.GeometryCacheActor.GetGeometryCacheComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x16d2260>
	void TickAtThisTime(None Time, None bInIsRunning, None bInBackwards, None bInIsLooping); // TickAtThisTime GeometryCache.GeometryCacheComponent.TickAtThisTime // (Final|Native|Public|BlueprintCallable) // <Game+0x16d28d0>
	void AddMeshSample(None& MeshData, None SampleTime); // AddMeshSample GeometryCache.GeometryCacheTrack_FlipbookAnimation.AddMeshSample // (Final|Native|Public|HasOutParms) // <Game+0x16d1fa0>
	void SetMesh(None& NewMeshData); // SetMesh GeometryCache.GeometryCacheTrack_TransformAnimation.SetMesh // (Final|Native|Public|HasOutParms) // <Game+0x16d25a0>
	void SetMesh(None& NewMeshData); // SetMesh GeometryCache.GeometryCacheTrack_TransformGroupAnimation.SetMesh // (Final|Native|Public|HasOutParms) // <Game+0x16d25a0>
	void BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature(); // BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature UW-MatchEnd_ButtonBase.UW-MatchEnd_ButtonBase_C.BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature // (BlueprintEvent) // <Game+0x23ad490>
	void ServerMessage(None Message); // ServerMessage BattlEyeCommon.BattlEyeNetComponent.ServerMessage // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // <Game+0x1658f80>
	void SliceProceduralMesh(None InProcMesh, None PlanePosition, None PlaneNormal, None bCreateOtherHalf, None& OutOtherHalfProcMesh, None CapOption, None CapMaterial); // SliceProceduralMesh ProceduralMeshComponent.KismetProceduralMeshLibrary.SliceProceduralMesh // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x178e790>
	void UpdateMeshSection_LinearColor(None SectionIndex, None& Vertices, None& Normals, None& UV0, None& UV1, None& UV2, None& UV3, None& VertexColors, None& Tangents); // UpdateMeshSection_LinearColor ProceduralMeshComponent.ProceduralMeshComponent.UpdateMeshSection_LinearColor // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x178ec90>
	void StopOperation(); // StopOperation ZipUtility.ZipOperation.StopOperation // (Final|Native|Public|BlueprintCallable) // <Game+0x166e6c0>
	void OnStartProcess(None archive, None Bytes); // OnStartProcess ZipUtility.ZipUtilityInterface.OnStartProcess // (Native|Event|Public|BlueprintEvent) // <Game+0x166e5e0>
	void SetPriceData(None ItemName, None Price); // SetPriceData UW-SupplyToolTip.UW-SupplyToolTip_C.SetPriceData // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None IsValidKeyFrameIndex(None Index); // IsValidKeyFrameIndex Paper2D.PaperFlipbook.IsValidKeyFrameIndex // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x168dd70>
	void Stop(); // Stop Paper2D.PaperFlipbookComponent.Stop // (Final|Native|Public|BlueprintCallable) // <Game+0x168e480>
	None UpdateInstanceTransform(None InstanceIndex, None& NewInstanceTransform, None bWorldSpace, None bMarkRenderStateDirty, None bTeleport); // UpdateInstanceTransform Paper2D.PaperGroupedSpriteComponent.UpdateInstanceTransform // (Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x168e5b0>
	None MakeBrushFromSprite(None Sprite, None Width, None Height); // MakeBrushFromSprite Paper2D.PaperSpriteBlueprintLibrary.MakeBrushFromSprite // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x16912f0>
	void SetSpriteColor(None NewColor); // SetSpriteColor Paper2D.PaperSpriteComponent.SetSpriteColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x1691980>
	void SetTerrainColor(None NewColor); // SetTerrainColor Paper2D.PaperTerrainComponent.SetTerrainColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x1691a00>
	void SetTileMapColor(None NewColor); // SetTileMapColor Paper2D.PaperTileMapComponent.SetTileMapColor // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x1691be0>
	None MakeTile(None TileIndex, None TileSet, None bFlipH, None bFlipV, None bFlipD); // MakeTile Paper2D.TileMapBlueprintLibrary.MakeTile // (Final|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x16936b0>
	void GetInstancedActors(None& Actors); // GetInstancedActors AnimationSharing.AnimSharingStateInstance.GetInstancedActors // (Final|Native|Protected|HasOutParms|BlueprintCallable) // <Game+0x16a6490>
	void RegisterActorWithSkeletonBP(None InActor, None SharingSkeleton); // RegisterActorWithSkeletonBP AnimationSharing.AnimationSharingManager.RegisterActorWithSkeletonBP // (Final|Native|Public|BlueprintCallable) // <Game+0x16a66f0>
	void ProcessActorState(None& OutState, None InActor, None CurrentState, None OnDemandState, None& bShouldProcess); // ProcessActorState AnimationSharing.AnimationSharingStateProcessor.ProcessActorState // (Native|Event|Public|HasOutParms|BlueprintEvent) // <Game+0x16a6540>
	void TakeGameplayAutomationScreenshot(None ScreenshotName, None MaxGlobalError, None MaxLocalError, None MapNameOverride); // TakeGameplayAutomationScreenshot AutomationUtils.AutomationUtilsBlueprintLibrary.TakeGameplayAutomationScreenshot // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x16d9690>
	void WeldVertices(None& VertexIDs, None& OutNewVertexID); // WeldVertices EditableMesh.EditableMesh.WeldVertices // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1770a30>
	None MakeEditableMesh(None PrimitiveComponent, None LODIndex); // MakeEditableMesh EditableMesh.EditableMeshFactory.MakeEditableMesh // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x1776fd0>
	void SetNativeValues(); // SetNativeValues UW-JetpackWidget.UW-JetpackWidget_C.SetNativeValues // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UnPin(); // UnPin MagicLeapARPin.MagicLeapARPinComponent.UnPin // (Final|Native|Public|BlueprintCallable) // <Game+0x17b9e60>
	void UnBindToOnMagicLeapARPinUpdatedDelegate(None& Delegate); // UnBindToOnMagicLeapARPinUpdatedDelegate MagicLeapARPin.MagicLeapARPinFunctionLibrary.UnBindToOnMagicLeapARPinUpdatedDelegate // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x17b9dc0>
	void UpdateExternalTrackingHMDPosition(None& ExternalTrackingTransform); // UpdateExternalTrackingHMDPosition HeadMountedDisplay.HeadMountedDisplayFunctionLibrary.UpdateExternalTrackingHMDPosition // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x2f10520>
	void SetTrackingSource(None NewSource); // SetTrackingSource HeadMountedDisplay.MotionControllerComponent.SetTrackingSource // (Final|Native|Public|BlueprintCallable) // <Game+0x2f103c0>
	void SetIsControllerMotionTrackingEnabledByDefault(None Enable); // SetIsControllerMotionTrackingEnabledByDefault HeadMountedDisplay.MotionTrackedDeviceFunctionLibrary.SetIsControllerMotionTrackingEnabledByDefault // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x2f0fd50>
	None AddNamedDeviceVisualizationComponentBlocking(None Target, None SystemName, None DeviceName, None bManualAttachment, None& RelativeTransform, None& XRDeviceId); // AddNamedDeviceVisualizationComponentBlocking HeadMountedDisplay.XRAssetFunctionLibrary.AddNamedDeviceVisualizationComponentBlocking // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x2f0dae0>
	None AddNamedDeviceVisualizationComponentAsync(None Target, None SystemName, None DeviceName, None bManualAttachment, None& RelativeTransform, None& XRDeviceId, None& NewComponent); // AddNamedDeviceVisualizationComponentAsync HeadMountedDisplay.AsyncTask_LoadXRDeviceVisComponent.AddNamedDeviceVisualizationComponentAsync // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x2f0d850>
	void ShowLoadingScreen(); // ShowLoadingScreen HeadMountedDisplay.XRLoadingScreenFunctionLibrary.ShowLoadingScreen // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x2f10500>
	void StartLuminARSession(None WorldContextObject, None LatentInfo, None Configuration); // StartLuminARSession MagicLeapAR.LuminARSessionFunctionLibrary.StartLuminARSession // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x17cedf0>
	None LuminARLineTrace(None WorldContextObject, None& ScreenPosition, None TraceChannels, None& OutHitResults); // LuminARLineTrace MagicLeapAR.LuminARFrameFunctionLibrary.LuminARLineTrace // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x17ceac0>
	None AddLuminRuntimeCandidateImage(None SessionConfig, None CandidateTexture, None FriendlyName, None PhysicalWidth, None bUseUnreliablePose, None bImageIsStationary); // AddLuminRuntimeCandidateImage MagicLeapAR.LuminARImageTrackingFunctionLibrary.AddLuminRuntimeCandidateImage // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x17ce770>
	None GetAmbientIntensityNits(); // GetAmbientIntensityNits MagicLeapAR.LuminARLightEstimate.GetAmbientIntensityNits // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x17ce990>
	None GetUseUnreliablePose(); // GetUseUnreliablePose MagicLeapAR.LuminARCandidateImage.GetUseUnreliablePose // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x17ceaa0>
	None SetOnAudioJackUnpluggedDelegate(None& ResultDelegate); // SetOnAudioJackUnpluggedDelegate MagicLeapAudio.MagicLeapAudioFunctionLibrary.SetOnAudioJackUnpluggedDelegate // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x17d24d0>
	None OnMouseButtonDown(None MyGeometry, None& MouseEvent); // OnMouseButtonDown UW-PlayerMarkerWidget.UW-PlayerMarkerWidget_C.OnMouseButtonDown // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-MagazineBase.BP-MagazineBase_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	None SetMotionSourceForHand(None Hand, None MotionSource); // SetMotionSourceForHand MagicLeapController.MagicLeapControllerFunctionLibrary.SetMotionSourceForHand // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x17d8f00>
	void SetParachuteInfo(None SetParachuteInfo); // SetParachuteInfo UW-FallingWidget.UW-FallingWidget_C.SetParachuteInfo // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetIconTexture(None IconTexture); // SetIconTexture UW-BlackMarket_Slot_Preset.UW-BlackMarket_Slot_Preset_C.SetIconTexture // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None GetEyeBlinkState(None& BlinkState); // GetEyeBlinkState MagicLeapEyeTracker.MagicLeapEyeTrackerFunctionLibrary.GetEyeBlinkState // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x17da7c0>
	void SetOptionList(None& OptionList); // SetOptionList UW-Lobby_Craft_Success_Perk_OpenPopup.UW-Lobby_Craft_Success_Perk_OpenPopup_C.SetOptionList // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetStaticGestureConfidenceThreshold(None Gesture, None Confidence); // SetStaticGestureConfidenceThreshold MagicLeapHandTracking.MagicLeapHandTrackingFunctionLibrary.SetStaticGestureConfidenceThreshold // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x17e7cb0>
	void RequestIdentityAttributeValueDelegate__DelegateSignature(None ResultCode, None& AttributeValue); // RequestIdentityAttributeValueDelegate__DelegateSignature MagicLeapIdentity.MagicLeapIdentity.RequestIdentityAttributeValueDelegate__DelegateSignature // (Public|Delegate|HasOutParms) // <Game+0x23ad490>
	None SetTargetAsync(None ImageTarget); // SetTargetAsync MagicLeapImageTracker.MagicLeapImageTrackerComponent.SetTargetAsync // (Final|Native|Public|BlueprintCallable) // <Game+0x17ebf00>
	void SetMaxSimultaneousTargets(None MaxSimultaneousTargets); // SetMaxSimultaneousTargets MagicLeapImageTracker.MagicLeapImageTrackerFunctionLibrary.SetMaxSimultaneousTargets // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x17ebe90>
	None RequestPlanesAsync(); // RequestPlanesAsync MagicLeapPlanes.MagicLeapPlanesComponent.RequestPlanesAsync // (Final|Native|Public|BlueprintCallable) // <Game+0x17ef900>
	void ReorderPlaneFlags(None& InPriority, None& InFlagsToReorder, None& OutReorderedFlags); // ReorderPlaneFlags MagicLeapPlanes.MagicLeapPlanesFunctionLibrary.ReorderPlaneFlags // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x17ef780>
	None IsVisibleMatchEndWidget(); // IsVisibleMatchEndWidget UW-MatchEndWidget.UW-MatchEndWidget_C.IsVisibleMatchEndWidget // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None RequestPrivilegeAsync(None Privilege, None& ResultDelegate); // RequestPrivilegeAsync MagicLeapPrivileges.MagicLeapPrivilegesFunctionLibrary.RequestPrivilegeAsync // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x17f0070>
	void ConsumeQuestInfo(); // ConsumeQuestInfo UW-ScenarioQuest.UW-ScenarioQuest_C.ConsumeQuestInfo // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None PutSecureVector(None Key, None& DataToStore); // PutSecureVector MagicLeapSecureStorage.MagicLeapSecureStorage.PutSecureVector // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x17f0de0>
	void CheckHoverMaterial(); // CheckHoverMaterial UW-Inventory_ProximitySlot.UW-Inventory_ProximitySlot_C.CheckHoverMaterial // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CustomEvent_1(None Value); // CustomEvent_1 GraphicWidget.GraphicWidget_C.CustomEvent_1 // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetUseWeightedNormals(None bInUseWeightedNormals); // SetUseWeightedNormals MagicLeapHandMeshing.MagicLeapHandMeshingComponent.SetUseWeightedNormals // (Final|Native|Public|BlueprintCallable) // <Game+0x17f3a80>
	None DisconnectMRMesh(None InMRMeshPtr); // DisconnectMRMesh MagicLeapHandMeshing.MagicLeapHandMeshingFunctionLibrary.DisconnectMRMesh // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x17f3a00>
	void UpdateWantedOpacity(); // UpdateWantedOpacity UW-MapImageWidget.UW-MapImageWidget_C.UpdateWantedOpacity // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetStatValue(None Type, None Value); // SetStatValue UW-StatupWidget_Item.UW-StatupWidget_Item_C.SetStatValue // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetNameByID(None ItemId); // SetNameByID UW-Lobby_ItemName.UW-Lobby_ItemName_C.SetNameByID // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None BP_GetTransformOrigin(); // BP_GetTransformOrigin MovieSceneTracks.MovieSceneTransformOrigin.BP_GetTransformOrigin // (Event|Protected|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // <Game+0x23ad490>
	void SetConstraintBindingID(None& InConstraintBindingID); // SetConstraintBindingID MovieSceneTracks.MovieScene3DConstraintSection.SetConstraintBindingID // (Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x328b080>
	void SetStartOffset(None InStartOffset); // SetStartOffset MovieSceneTracks.MovieSceneAudioSection.SetStartOffset // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x328b1c0>
	void SetCameraBindingID(None& InCameraBindingID); // SetCameraBindingID MovieSceneTracks.MovieSceneCameraCutSection.SetCameraBindingID // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x3292950>
	void SetShotDisplayName(None InShotDisplayName); // SetShotDisplayName MovieSceneTracks.MovieSceneCinematicShotSection.SetShotDisplayName // (Final|Native|Public|BlueprintCallable) // <Game+0x3292ac0>
	void SetVisibility(None InVisibility); // SetVisibility MovieSceneTracks.MovieSceneLevelVisibilitySection.SetVisibility // (Final|Native|Public|BlueprintCallable) // <Game+0x3292bc0>
	void CheckNumeric(None CheckString, None& CheckResult); // CheckNumeric UW-ItemDropPopup.UW-ItemDropPopup_C.CheckNumeric // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	None Get_TextBlock_RemailTime_Text_1(); // Get_TextBlock_RemailTime_Text_1 UW-Timer.UW-Timer_C.Get_TextBlock_RemailTime_Text_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void SetSequence(None InSequence); // SetSequence TemplateSequence.TemplateSequenceActor.SetSequence // (Final|Native|Public|BlueprintCallable) // <Game+0x183ae30>
	None CreateTemplateSequencePlayer(None WorldContextObject, None TemplateSequence, None Settings, None& OutActor); // CreateTemplateSequencePlayer TemplateSequence.TemplateSequencePlayer.CreateTemplateSequencePlayer // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x183abb0>
	None CheckPermission(None permission); // CheckPermission AndroidPermission.AndroidPermissionFunctionLibrary.CheckPermission // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x17f0880>
	None CreateProxyObjectForConvertToTIFF(None SourceImage, None bWantColor, None bUseGpu, None Scale, None Rotate); // CreateProxyObjectForConvertToTIFF AppleImageUtils.AppleImageUtilsBaseAsyncTaskBlueprintProxy.CreateProxyObjectForConvertToTIFF // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x184f970>
	void CheckLanguageIndex(); // CheckLanguageIndex UW-Lobby_Craft_List.UW-Lobby_Craft_List_C.CheckLanguageIndex // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void MoveNextScene(); // MoveNextScene UW-Opening.UW-Opening_C.MoveNextScene // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None GetCollectionsContainingAssetPtr(None AssetPtr); // GetCollectionsContainingAssetPtr AssetTags.AssetTagsSubsystem.GetCollectionsContainingAssetPtr // (Final|Native|Public|BlueprintCallable) // <Game+0x1854250>
	void StopCapturingAudio(); // StopCapturingAudio AudioCapture.AudioCapture.StopCapturingAudio // (Final|Native|Public|BlueprintCallable) // <Game+0x18556a0>
	None CreateAudioCapture(); // CreateAudioCapture AudioCapture.AudioCaptureFunctionLibrary.CreateAudioCapture // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x1855580>
	void SetAttachEndToComponent(None Component, None SocketName); // SetAttachEndToComponent CableComponent.CableComponent.SetAttachEndToComponent // (Final|Native|Public|BlueprintCallable) // <Game+0x1859f00>
	void SetBuffIcon(None Icon, None Rarity); // SetBuffIcon UW-Inventory_WeaponPerkSlot.UW-Inventory_WeaponPerkSlot_C.SetBuffIcon // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None GetInteractiveWidget(); // GetInteractiveWidget BP-SpectatorHUD.BP-SpectatorHUD_C.GetInteractiveWidget // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None SetCustomMeshTriangles(None& Triangles); // SetCustomMeshTriangles CustomMeshComponent.CustomMeshComponent.SetCustomMeshTriangles // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x185bed0>
	None ShowCellularDataConfirmation(); // ShowCellularDataConfirmation GooglePAD.GooglePADFunctionLibrary.ShowCellularDataConfirmation // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x185d210>
	None StopLocationServices(); // StopLocationServices LocationServicesBPLibrary.LocationServices.StopLocationServices // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x185dd50>
	void SetItemOption(None& ItemOption); // SetItemOption UW-Lobby_Craft_Success_Perk_Open.UW-Lobby_Craft_Success_Perk_Open_C.SetItemOption // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None Mount(None PakOrder, None MountPoint); // Mount MobilePatchingUtils.MobileInstalledContent.Mount // (Final|Native|Public|BlueprintCallable) // <Game+0x1862070>
	void StartInstall(None OnSucceeded, None OnFailed); // StartInstall MobilePatchingUtils.MobilePendingContent.StartInstall // (Final|Native|Public|BlueprintCallable) // <Game+0x1862350>
	void RequestContent(None RemoteManifestURL, None CloudURL, None InstallDirectory, None OnSucceeded, None OnFailed); // RequestContent MobilePatchingUtils.MobilePatchingLibrary.RequestContent // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x1862160>
	void Set Position(None IsLeft, None IsSoloMode, None CharacterRef, None MemberInfo); // Set Position UW-Lobby_CharacterInfo.UW-Lobby_CharacterInfo_C.Set Position // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Craft(); // Craft UW-ArmoryWidget.UW-ArmoryWidget_C.Craft // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ShowLoadingSplashScreen(); // ShowLoadingSplashScreen OculusHMD.OculusFunctionLibrary.ShowLoadingSplashScreen // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x1885190>
	None SetCustomMeshTriangles(None& Triangles); // SetCustomMeshTriangles OculusMR.OculusMR_PlaneMeshComponent.SetCustomMeshTriangles // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18961a0>
	void SetUseDynamicLighting(None Val); // SetUseDynamicLighting OculusMR.OculusMR_Settings.SetUseDynamicLighting // (Final|Native|Public|BlueprintCallable) // <Game+0x1896470>
	None SetTrackingReferenceComponent(None Component); // SetTrackingReferenceComponent OculusMR.OculusMRFunctionLibrary.SetTrackingReferenceComponent // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x18963f0>
	void SetUseAutoGears(None bUseAuto); // SetUseAutoGears PhysXVehicles.WheeledVehicleMovementComponent.SetUseAutoGears // (Final|Native|Public|BlueprintCallable) // <Game+0x18ac800>
	void SetSteerAngle(None SteerAngle, None WheelIndex); // SetSteerAngle PhysXVehicles.SimpleWheeledVehicleMovementComponent.SetSteerAngle // (Final|Native|Public|BlueprintCallable) // <Game+0x18ac570>
	None GetVehicle(); // GetVehicle PhysXVehicles.VehicleAnimInstance.GetVehicle // (Final|Native|Public|BlueprintCallable) // <Game+0x18abb80>
	None IsInAir(); // IsInAir PhysXVehicles.VehicleWheel.IsInAir // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x18abbe0>
	void SetStatInfo(None& StatupParams, None IsUpAnim); // SetStatInfo UW-StatupWidget.UW-StatupWidget_C.SetStatInfo // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AddModularSynthPresetToBankAsset(None InBank, None& Preset, None PresetName); // AddModularSynthPresetToBankAsset Synthesis.ModularSynthLibrary.AddModularSynthPresetToBankAsset // (Final|Native|Static|Private|HasOutParms|BlueprintCallable) // <Game+0x18d63b0>
	void SetSynthPreset(None& SynthPreset); // SetSynthPreset Synthesis.ModularSynthComponent.SetSynthPreset // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18d8970>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectBitCrusherPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0580>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectChorusPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0630>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectDynamicsProcessorPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e06e0>
	void UnregisterEnvelopeFollowerListener(None EnvelopeFollowerListener); // UnregisterEnvelopeFollowerListener Synthesis.SourceEffectEnvelopeFollowerPreset.UnregisterEnvelopeFollowerListener // (Final|Native|Public|BlueprintCallable) // <Game+0x18e0e60>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectEQPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0790>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectFilterPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e08f0>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectFoldbackDistortionPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e09a0>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectMidSideSpreaderPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0a50>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectPannerPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0b00>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectPhaserPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0bb0>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectRingModulationPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0c70>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectSimpleDelayPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0d10>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectStereoDelayPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0dc0>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SourceEffectWaveShaperPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e0b00>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SubmixEffectConvolutionReverbPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e5fb0>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SubmixEffectDelayPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e6050>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SubmixEffectFilterPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e6110>
	void SetSettings(None& InSettings); // SetSettings Synthesis.SubmixEffectFlexiverbPreset.SetSettings // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e61c0>
	void SetTap(None TapId, None& TapInfo); // SetTap Synthesis.SubmixEffectTapDelayPreset.SetTap // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x18e6540>
	void SetValue(None InValue); // SetValue Synthesis.Synth2DSlider.SetValue // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x18e6620>
	void SetSustainGain(None SustainGain); // SetSustainGain Synthesis.GranularSynth.SetSustainGain // (Final|Native|Public|BlueprintCallable) // <Game+0x18e64c0>
	void SetWaveTablePosition(None InPosition); // SetWaveTablePosition Synthesis.SynthComponentMonoWaveTable.SetWaveTablePosition // (Final|Native|Public|BlueprintCallable) // <Game+0x18e9ca0>
	void SetSoundWave(None InSoundWave); // SetSoundWave Synthesis.SynthSamplePlayer.SetSoundWave // (Final|Native|Public|BlueprintCallable) // <Game+0x18e9a90>
	void SetValue(None InValue); // SetValue Synthesis.SynthKnob.SetValue // (Final|Native|Public|BlueprintCallable) // <Game+0x18e9c20>
	void OnOverlapEnd(None OverlappedComponent, None OtherActor, None OtherComp, None OtherBodyIndex); // OnOverlapEnd BravoHotelGame.AmbientSoundVolume.OnOverlapEnd // (Final|Native|Protected) // <Game+0x1e4a090>
	void SetTestAIChangeLocation(None AIController); // SetTestAIChangeLocation BravoHotelGame.BravoHotelGameMode.SetTestAIChangeLocation // (Final|Native|Public) // <Game+0x1f234a0>
	void UpdateSurvivalCircleDelegate__DelegateSignature(); // UpdateSurvivalCircleDelegate__DelegateSignature BravoHotelGame.BattleRoyaleGameMode.UpdateSurvivalCircleDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // <Game+0x23ad490>
	void UpdatePCInfo(); // UpdatePCInfo BravoHotelGame.BattleRoyaleGameMode_Login.UpdatePCInfo // (Final|Native|Public|BlueprintCallable) // <Game+0x1e4cb90>
	void ChangeLevel(None NextLevelName); // ChangeLevel BravoHotelGame.BattleRoyaleGameMode_StoreWeb.ChangeLevel // (Final|Native|Public|BlueprintCallable) // <Game+0x1e4cd30>
	void ShowTimeHUDMessage(); // ShowTimeHUDMessage BravoHotelGame.BravoHotelGameState.ShowTimeHUDMessage // (Native|Public) // <Game+0x1f28390>
	void SetDescentPlayerInfo(None PlayerId); // SetDescentPlayerInfo BravoHotelGame.BattleRoyaleGameState.SetDescentPlayerInfo // (Final|Native|Public) // <Game+0x1e4e430>
	void UpdateCheckRePosition(); // UpdateCheckRePosition BravoHotelGame.BHPersonalSupplyBox.UpdateCheckRePosition // (Final|Native|Public) // <Game+0x1e4f390>
	void SetItemInBlueprint(None& ItemKey); // SetItemInBlueprint BravoHotelGame.BravoHotelDropBoxActor.SetItemInBlueprint // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void SetCurrentPhaseNum(None PhaseNum); // SetCurrentPhaseNum BravoHotelGame.BHPersonalSupplyBoxManager.SetCurrentPhaseNum // (Final|Native|Public|BlueprintCallable) // <Game+0x1e4f860>
	void WearItem(None Slot, None UniqueKey, None bUpdateSkeletalMesh); // WearItem BravoHotelGame.BravoHotelCharacter.WearItem // (Final|Native|Public|BlueprintCallable) // <Game+0x1ed6680>
	void StartSpawnFromSpawnInfo(None& Data, None CheckRePosition); // StartSpawnFromSpawnInfo BravoHotelGame.BHPersonalSupplySystemComponent.StartSpawnFromSpawnInfo // (Final|Native|Public|HasOutParms) // <Game+0x1e50dc0>
	void WeaponBuffEventDelegate__DelegateSignature(None& EventType, None& WeaponInfo); // WeaponBuffEventDelegate__DelegateSignature BravoHotelGame.BravoHotelAbilityComponent.WeaponBuffEventDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // <Game+0x23ad490>
	void WeaponEventEndCallBack(None& BuffEventType, None& WeaponInfo); // WeaponEventEndCallBack BravoHotelGame.BuffControlState.WeaponEventEndCallBack // (Final|Native|Public|HasOutParms) // <Game+0x1e65070>
	void OnRep_ThrowingType(); // OnRep_ThrowingType BravoHotelGame.BravoHotelActionComponent.OnRep_ThrowingType // (Final|Native|Protected) // <Game+0x1e665a0>
	void StartDescenting(); // StartDescenting BravoHotelGame.BravoHotelAIPlayerController.StartDescenting // (Final|Native|Public|BlueprintCallable) // <Game+0x1e68d70>
	void OnReset(None& ImpactResult, None Time); // OnReset BravoHotelGame.BravoHotelAircraftBomber.OnReset // (Final|Native|Protected|HasOutParms|BlueprintCallable) // <Game+0x1e69010>
	void UpdateSplineTimeline(None Value); // UpdateSplineTimeline BravoHotelGame.BravoHotelAircraftFlight.UpdateSplineTimeline // (Final|Native|Protected) // <Game+0x1e6a4a0>
	void StartFromHere(None AircraftFlight, None AircraftCount); // StartFromHere BravoHotelGame.BravoHotelAircraftPoint.StartFromHere // (Final|Native|Public|BlueprintCallable) // <Game+0x1e6a6c0>
	void UpdateAircraftPosition(None MapCompWidget); // UpdateAircraftPosition BravoHotelGame.BravoHotelAircraftRouteWidget.UpdateAircraftPosition // (Final|Native|Public) // <Game+0x1e6b090>
	void StartDescent(); // StartDescent BravoHotelGame.BravoHotelAircraftViewer.StartDescent // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnEndAirCraftBoardingPlayer(); // OnEndAirCraftBoardingPlayer BravoHotelGame.BravoHotelAircraftWidget.OnEndAirCraftBoardingPlayer // (Final|Native|Private) // <Game+0x1e6bbe0>
	void UpdateTeamCount(); // UpdateTeamCount BravoHotelGame.BravoHotelAliveInfoWidget.UpdateTeamCount // (Final|Native|Public) // <Game+0x1e6c590>
	void OnEmitterUnregistered(); // OnEmitterUnregistered BravoHotelGame.BravoHotelAmbientSound.OnEmitterUnregistered // (Final|Native|Protected) // <Game+0x1e6c7a0>
	None OnUnEquip(None bPlayUnequipAnimation); // OnUnEquip BravoHotelGame.BravoHotelEquippableActor.OnUnEquip // (Native|Public) // <Game+0x1f1c260>
	void UpdateActorHiddenInGame_TPPOnly(); // UpdateActorHiddenInGame_TPPOnly BravoHotelGame.BravoHotelWeaponBase.UpdateActorHiddenInGame_TPPOnly // (Final|Native|Public) // <Game+0x202c1d0>
	void ServerValidateAmplifierEffect(None TargetCharacter); // ServerValidateAmplifierEffect BravoHotelGame.BravoHotelAmplifier.ServerValidateAmplifierEffect // (Net|Native|Event|Public|NetServer|NetValidate) // <Game+0x1e6cc30>
	None Transition_Swim_ToMovementModeConduit(); // Transition_Swim_ToMovementModeConduit BravoHotelGame.BravoHotelAnimInstance.Transition_Swim_ToMovementModeConduit // (Final|Native|Public) // <Game+0x1e703f0>
	void UpdateWeaponVariables(); // UpdateWeaponVariables BravoHotelGame.BravoHotelAnimInstanceFPP.UpdateWeaponVariables // (Final|Native|Protected) // <Game+0x1e71280>
	void UpdateSpawnedParachute(); // UpdateSpawnedParachute BravoHotelGame.BravoHotelAnimInstanceParachute.UpdateSpawnedParachute // (Final|Native|Protected) // <Game+0x1e71650>
	void UpdateAnimDynamicsAlpha(); // UpdateAnimDynamicsAlpha BravoHotelGame.BravoHotelAnimInstancePostprocess.UpdateAnimDynamicsAlpha // (Final|Native|Public) // <Game+0x1e720d0>
	void StartDestroy(); // StartDestroy BravoHotelGame.BravoHotelAreaSkillZone.StartDestroy // (Native|Event|Public|BlueprintEvent) // <Game+0x1e4f220>
	None GetWetFogZoneInfo(); // GetWetFogZoneInfo BravoHotelGame.BravoHotelAreaSkillZoneWetFog.GetWetFogZoneInfo // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x1e74e60>
	void SetHiddenAllArmoryMesh(); // SetHiddenAllArmoryMesh BravoHotelGame.BravoHotelArmory.SetHiddenAllArmoryMesh // (Final|Native|Public|BlueprintCallable) // <Game+0x1e761b0>
	void OnCompleteAysnLoadItems(None StaticMeshPtr, None SkeletalMeshPtr); // OnCompleteAysnLoadItems BravoHotelGame.BravoHotelAttachedUsableItem.OnCompleteAysnLoadItems // (Final|Native|Protected) // <Game+0x1e77500>
	void SetImage(None InHitType); // SetImage BravoHotelGame.BravoHotelAttackDamageWidget.SetImage // (Final|Native|Public) // <Game+0x1e778e0>
	void EventRemoveWidget(); // EventRemoveWidget BravoHotelGame.BravoHotelAttackUserWidget.EventRemoveWidget // (Final|Native|Public) // <Game+0x1e77bc0>
	void OpenPortal(); // OpenPortal BravoHotelGame.BravoHotelAudioPortalComponent.OpenPortal // (Final|Native|Public|BlueprintCallable) // <Game+0x1e79430>
	void UpdateGeometry(); // UpdateGeometry BravoHotelGame.BravoHotelAudioRoomComponent.UpdateGeometry // (Final|Native|Public|BlueprintCallable) // <Game+0x1e79d80>
	void StopPlayingSound(None& InPlayingHandle); // StopPlayingSound BravoHotelGame.BravoHotelAudioStatics.StopPlayingSound // (Final|BlueprintCosmetic|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x1e7b700>
	None GetMainWidget(None bWantsToCreateIfNull); // GetMainWidget BravoHotelGame.BravoHotelBaseHUD.GetMainWidget // (Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x1e7be90>
	void Zip(None archivePath, None ZipUtilityInterfaceDelegate, None Format); // Zip BravoHotelGame.BravoHotelBlueprintExtension.Zip // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x1e89840>
	None TryGetCustomCircle(None& OutCenter, None& OutRadius); // TryGetCustomCircle BravoHotelGame.BravoHotelBlueZone.TryGetCustomCircle // (Final|BlueprintCosmetic|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x1e8af70>
	void OnFollowingChanged(None Checker, None bIsFollowing); // OnFollowingChanged BravoHotelGame.BravoHotelBlueZoneGameRule.OnFollowingChanged // (Final|Native|Public) // <Game+0x1e8b240>
	void RefreshHighestRarityOfCurrentItems(); // RefreshHighestRarityOfCurrentItems BravoHotelGame.BravoHotelBootyBoxActor.RefreshHighestRarityOfCurrentItems // (Final|Native|Protected) // <Game+0x1e8b670>
	void UpdateLineOfFire(None& Pos, None LastUpdate, None delataTime); // UpdateLineOfFire BravoHotelGame.BravoHotelBottomInfoInterface.UpdateLineOfFire // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnWaitingMessage(None IsMessage); // OnWaitingMessage BravoHotelGame.BravoHotelBroadcastingWidget.OnWaitingMessage // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetToEnd(); // SetToEnd BravoHotelGame.BravoHotelBuffBase.SetToEnd // (Final|Native|Public) // <Game+0x1ea4cd0>
	void RemoveAvoidHeadShotCondition(); // RemoveAvoidHeadShotCondition BravoHotelGame.BHBHackBallistic.RemoveAvoidHeadShotCondition // (Final|Native|Protected) // <Game+0x1ea4c90>
	void SpawnBlackOut(); // SpawnBlackOut BravoHotelGame.BHBPowerInterruption.SpawnBlackOut // (Final|Native|Public) // <Game+0x1ea4d00>
	void OnExitForceField(); // OnExitForceField BravoHotelGame.BHBForceField.OnExitForceField // (Final|Native|Public) // <Game+0x1ea48c0>
	void UnbindAllBuffDelegates(); // UnbindAllBuffDelegates BravoHotelGame.BHBCancelableActiveSkill.UnbindAllBuffDelegates // (Native|Public) // <Game+0x1ea4db0>
	void PlayJumpSound(None& BuffEventType); // PlayJumpSound BravoHotelGame.BHBUltimate_Sprint.PlayJumpSound // (Final|Native|Public|HasOutParms) // <Game+0x1ea4c00>
	void MarkRenderStateDirty(None UpdatedCharacter); // MarkRenderStateDirty BravoHotelGame.BHBMaterialEffectBase.MarkRenderStateDirty // (Final|Native|Protected) // <Game+0x1ea4700>
	None IsNeedToDrawAdditiveCrosshair(); // IsNeedToDrawAdditiveCrosshair BravoHotelGame.BHBAdditiveCrosshairBase.IsNeedToDrawAdditiveCrosshair // (Native|Protected) // <Game+0x1ea4590>
	void OnItemUsed(None& ItemInfo); // OnItemUsed BravoHotelGame.BHBTeamBuffWhenItemUsed.OnItemUsed // (Final|Native|Public|HasOutParms) // <Game+0x1ea4a60>
	void OnItemUsed(None& ItemInfo); // OnItemUsed BravoHotelGame.BHBBuffWhenItemUsed.OnItemUsed // (Final|Native|Public|HasOutParms) // <Game+0x1ea4970>
	void OnStartBuffFailed(); // OnStartBuffFailed BravoHotelGame.BHBActiveBuffBase.OnStartBuffFailed // (Native|Protected) // <Game+0x1ea4be0>
	void MeteorStrike(None& InBuffEventType); // MeteorStrike BravoHotelGame.BHBActiveMeteorJump.MeteorStrike // (Final|Native|Public|HasOutParms) // <Game+0x1ea4780>
	void PropagateDrawDistanceByTag(); // PropagateDrawDistanceByTag BravoHotelGame.BravoHotelBuilding.PropagateDrawDistanceByTag // (Final|Native|Public|BlueprintCallable) // <Game+0x151b310>
	void SetRemoteControllerState(None NewState); // SetRemoteControllerState BravoHotelGame.BravoHotelRemoteController.SetRemoteControllerState // (Final|Native|Protected) // <Game+0x1fb5480>
	void UpdateCheckDistance(); // UpdateCheckDistance BravoHotelGame.BravoHotelC4RemoteController.UpdateCheckDistance // (Final|Native|Private) // <Game+0x1ea54c0>
	void UpdateUltimateVehicleLocation(); // UpdateUltimateVehicleLocation BravoHotelGame.BravoHotelCarKey.UpdateUltimateVehicleLocation // (Final|Native|Protected) // <Game+0x1ea5e60>
	void OnRep_ParachuteSkinIndex(); // OnRep_ParachuteSkinIndex BravoHotelGame.BHStationaryCharInfo.OnRep_ParachuteSkinIndex // (Final|Native|Protected) // <Game+0x1ec9cd0>
	void OnRep_ResuscitatedTargetActor(); // OnRep_ResuscitatedTargetActor BravoHotelGame.BHCharacterReplication.OnRep_ResuscitatedTargetActor // (Final|Native|Protected) // <Game+0x1ec9d10>
	void ServerSetLocationImmediatly(None TargetLocation, None TargetVelocity, None ClientTimeStamp, None ClientMovementMode); // ServerSetLocationImmediatly BravoHotelGame.BravoHotelCharacterMovementComponent.ServerSetLocationImmediatly // (Net|NetReliableNative|Event|Public|NetServer|HasDefaults|NetValidate) // <Game+0x1ed7460>
	void WeaponDebugText(); // WeaponDebugText BravoHotelGame.BravoHotelCheatManager.WeaponDebugText // (Final|Exec|Native|Public|Const) // <Game+0x151b310>
	void Toggle(); // Toggle BravoHotelGame.BravoHotelCheatWidget.Toggle // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void OpenMenu(None OpenLobby); // OpenMenu BravoHotelGame.BravoHotelClassicSettingPopupInterface.OpenMenu // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnSetLocalSavedSettings(None Settings); // OnSetLocalSavedSettings BravoHotelGame.BravoHotelCoherentBaseWidget.OnSetLocalSavedSettings // (Final|Native|Public) // <Game+0x1edf7d0>
	void SendTriggerEvent(None Str, None Value); // SendTriggerEvent BravoHotelGame.BravoHotelCoherentTestHUD.SendTriggerEvent // (Final|Native|Public|BlueprintCallable) // <Game+0x1edfce0>
	None UpdateUnit(None& CurrentAngle, None& CurrentPos, None& WidgetAngle, None& Reset, None IsTest); // UpdateUnit BravoHotelGame.BravoHotelCompassWidget.UpdateUnit // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1ee2d00>
	void StopConversation(); // StopConversation BravoHotelGame.BravoHotelConversationComponent.StopConversation // (Final|Native|Public|BlueprintCallable) // <Game+0x1ee3910>
	void ShowSentense(None& SentenceData); // ShowSentense BravoHotelGame.BravoHotelConversationWidget.ShowSentense // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnReceiveCharacterTab(None ReceiveTab); // OnReceiveCharacterTab BravoHotelGame.BravoHotelCreateCharacterWidget.OnReceiveCharacterTab // (Final|Native|Private) // <Game+0x1ee43b0>
	void OnChangeOption(None& ChangeTypeList); // OnChangeOption BravoHotelGame.BravoHotelCrosshair.OnChangeOption // (Final|Native|Public|HasOutParms) // <Game+0x1ee4e00>
	void RemoveAdditiveCrosshair(None& CrosshairRowName); // RemoveAdditiveCrosshair BravoHotelGame.BravoHotelCrosshairManager.RemoveAdditiveCrosshair // (Final|Native|Public|HasOutParms) // <Game+0x1ee52f0>
	None OpensslEncryptAES256CBC(None InContent); // OpensslEncryptAES256CBC BravoHotelGame.BravoHotelCryptoFunction.OpensslEncryptAES256CBC // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x1ee5890>
	void OnPreViewEquipAppearance(None PCLooks); // OnPreViewEquipAppearance BravoHotelGame.BravoHotelCustomizedCharacter.OnPreViewEquipAppearance // (Final|Native|Public) // <Game+0x1ee5de0>
	void Ok(); // Ok BravoHotelGame.BravoHotelCustomMatchWidget.Ok // (Final|Native|Public|BlueprintCallable) // <Game+0x151b310>
	None IsDamageTypeName(None& InName); // IsDamageTypeName BravoHotelGame.BravoHotelDamageType.IsDamageTypeName // (Final|Native|Public|HasOutParms|Const) // <Game+0x1eeaa40>
	void SimulatedDestructibleMesh(None HitLocation, None ImpactDirection); // SimulatedDestructibleMesh BravoHotelGame.BravoHotelDestructibleComponent.SimulatedDestructibleMesh // (Final|Native|Protected|HasDefaults|BlueprintCallable) // <Game+0x1f14f10>
	void HandleInReplay(None bState); // HandleInReplay BravoHotelGame.BravoHotelDestructibleEx.HandleInReplay // (Final|Native|Public|BlueprintCallable) // <Game+0x1f15160>
	void SpawnItems(None Box, None& ItemsToSpawn); // SpawnItems BravoHotelGame.BravoHotelDetectItemSpawnBoxComponent.SpawnItems // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1f15be0>
	void SortListForDevelopment(None TabType); // SortListForDevelopment BravoHotelGame.BravoHotelDevelopmentBlackMarket.SortListForDevelopment // (Final|Native|Public|BlueprintCallable) // <Game+0x1f17490>
	void Show(None& Name); // Show BravoHotelGame.BravoHotelDiedWidget.Show // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void UpdateOpenDoor(None Value); // UpdateOpenDoor BravoHotelGame.BravoHotelDoor.UpdateOpenDoor // (Native|Event|Protected|BlueprintEvent) // <Game+0x1f19160>
	void ServerActivateDoor(None Door); // ServerActivateDoor BravoHotelGame.BravoHotelDoorComponent.ServerActivateDoor // (Final|Net|NetReliableNative|Event|Private|NetServer|NetValidate) // <Game+0x1f19440>
	void OpenDoor(); // OpenDoor BravoHotelGame.BravoHotelDoorInterface.OpenDoor // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x1e8d6f0>
	void OnHitSurface(None Surface, None& Location); // OnHitSurface BravoHotelGame.BravoHotelShellCasing.OnHitSurface // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x1fc21a0>
	void OnRep_SetStateType(); // OnRep_SetStateType BravoHotelGame.BravoHotelElevator.OnRep_SetStateType // (Native|Protected) // <Game+0x1e4f220>
	void OnRep_SetStateType(); // OnRep_SetStateType BravoHotelGame.BravoHotelElevatorDoor.OnRep_SetStateType // (Native|Protected) // <Game+0x1e4f220>
	void SetParachuteInfo(None SetParachuteInfo); // SetParachuteInfo BravoHotelGame.BravoHotelFallingWidget.SetParachuteInfo // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None ShouldReplicate(); // ShouldReplicate BravoHotelGame.BravoHotelFence.ShouldReplicate // (Event|Protected|BlueprintEvent|Const) // <Game+0x23ad490>
	None SpawnPoolingEffectAttached(None EmitterTemplate, None AttachToComponent, None AttachPointName, None Location, None Rotation, None LocationType, None bWantsReleaseManually); // SpawnPoolingEffectAttached BravoHotelGame.BravoHotelFXFunctionLibrary.SpawnPoolingEffectAttached // (Final|Native|Static|Public|HasDefaults|BlueprintCallable) // <Game+0x1f1cf20>
	None SpawnProjectile(None WorldContextObject, None ProjectileClass, None& SpawnLocation, None& ShootDirection, None ImpactDamage, None LifeSpan, None InOwner); // SpawnProjectile BravoHotelGame.BravoHotelGameBlueprintLibrary.SpawnProjectile // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x1f1d650>
	void UpdateBuff(None KeyIndex, None Timer, None MaxTime); // UpdateBuff BravoHotelGame.BravoHotelGameBuffSlot.UpdateBuff // (Final|Native|Public) // <Game+0x1f1dce0>
	void UpdateVoiceTalkMember(None bIsLobby); // UpdateVoiceTalkMember BravoHotelGame.BravoHotelGameInstance.UpdateVoiceTalkMember // (Final|Native|Public|BlueprintCallable) // <Game+0x1f21960>
	None GetSteamFriendAvatar(None& FriendUniqueNetId, None InAvatarSize); // GetSteamFriendAvatar BravoHotelGame.BravoHotelGameInstanceSteam.GetSteamFriendAvatar // (Final|Native|Protected|HasOutParms|BlueprintCallable) // <Game+0x1f21bc0>
	void ShowSimpleResult(None& SimpleResult, None ShowDelayTime); // ShowSimpleResult BravoHotelGame.BravoHotelGameMatchEndWidget.ShowSimpleResult // (Final|Native|Public|HasOutParms) // <Game+0x1f23110>
	None GetTotalDistanceTraveled(); // GetTotalDistanceTraveled BravoHotelGame.BravoHotelGamePlayStatistics.GetTotalDistanceTraveled // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x1f248c0>
	void ShowQuitPopup(); // ShowQuitPopup BravoHotelGame.BravoHotelGamePopupInterface.ShowQuitPopup // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveInit(); // ReceiveInit BravoHotelGame.BravoHotelGameSettingManager.ReceiveInit // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void RestoreAfterGameStart(); // RestoreAfterGameStart BravoHotelGame.BravoHotelGameStartRestoreInterface.RestoreAfterGameStart // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x1e8dc00>
	void DrawGrassCollision(None TargetCharacter); // DrawGrassCollision BravoHotelGame.BravoHotelGrassCollisionComponent.DrawGrassCollision // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SpawnPinOffParticle(None& SpawnTransform); // SpawnPinOffParticle BravoHotelGame.BravoHotelGrenadeWeapon.SpawnPinOffParticle // (Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x1f299f0>
	void ServerValidateHeartBeatSensorEffect(None TargetCharacter); // ServerValidateHeartBeatSensorEffect BravoHotelGame.BravoHotelHeartBeatSensor.ServerValidateHeartBeatSensorEffect // (Net|Native|Event|Public|NetServer|NetValidate) // <Game+0x1f29e70>
	void SimulatedDestructibleMesh(None HitLocation, None ImpactDirection, None InstanceIndex); // SimulatedDestructibleMesh BravoHotelGame.BravoHotelHIDestructibleComponent.SimulatedDestructibleMesh // (Final|Native|Protected|HasDefaults|BlueprintCallable) // <Game+0x1f2a890>
	void SetIcon(None ResourceImage, None ItemRarity, None bEffectReinforce); // SetIcon BravoHotelGame.BravoHotelIconImageWidget.SetIcon // (Final|Native|Public|BlueprintCallable) // <Game+0x1f45aa0>
	void ShowPickupItem(None InteractionInfo, None& ItemInfo); // ShowPickupItem BravoHotelGame.BravoHotelInteractionWidget.ShowPickupItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1f48a50>
	void UpdateWeapons(); // UpdateWeapons BravoHotelGame.BravoHotelInventoryCharacter.UpdateWeapons // (Final|Native|Public) // <Game+0x1f49530>
	void HideHoverBP(); // HideHoverBP BravoHotelGame.BravoHotelInventoryHoverWidget.HideHoverBP // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void ShowStatupAnim(None& StatupParameters, None StatupType); // ShowStatupAnim BravoHotelGame.BravoHotelInventoryInterface.ShowStatupAnim // (Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x1f49e60>
	void UpdateUnlockLevel(None NewLevel); // UpdateUnlockLevel BravoHotelGame.BravoHotelInventoryPerkWidget.UpdateUnlockLevel // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None WeightGauge(None ItemName, None Quantity, None Ground); // WeightGauge BravoHotelGame.BravoHotelInventoryWidget.WeightGauge // (Final|Native|Public|BlueprintCallable) // <Game+0x1f4a730>
	None SpawnItemActorByName(None WorldContextObject, None& NewItemName, None& SpawnTransform, None Quantity, None bLoadMesh); // SpawnItemActorByName BravoHotelGame.BravoHotelItemFunctionLibrary.SpawnItemActorByName // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x1f4c600>
	void UpdateSkelMeshTickEnable(); // UpdateSkelMeshTickEnable BravoHotelGame.BravoHotelPickup.UpdateSkelMeshTickEnable // (Final|Native|Protected) // <Game+0x1f85410>
	void SetTreeInfo(None TopRecipe); // SetTreeInfo BravoHotelGame.BravoHotelItemRecipeTreeWidget.SetTreeInfo // (Final|Native|Public|BlueprintCallable) // <Game+0x16b4b10>
	void SetBoxComponentID(None ID); // SetBoxComponentID BravoHotelGame.BravoHotelItemSpawnBoxComponent.SetBoxComponentID // (Final|Native|Public|BlueprintCallable) // <Game+0x1f4e3e0>
	void SetSpawnData(None TotalSpawnCnt, None TotalPickUpCount, None TotalPickUpLimitCount); // SetSpawnData BravoHotelGame.BravoHotelItemSpawnDebugWidget.SetSpawnData // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetSetting(None& Data); // SetSetting BravoHotelGame.BravoHotelItemSpawnRateWidget.SetSetting // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void EndSimulation(None& Location, None Msg); // EndSimulation BravoHotelGame.BravoHotelItemSpawnSimulationBox.EndSimulation // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x1f51300>
	void SetUseItemVisibility(None Visible, None bUpdateRecovery, None& DataTableRow); // SetUseItemVisibility BravoHotelGame.BravoHotelItemUseWidget.SetUseItemVisibility // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1f56d20>
	void SetInfo_BP(None NewArrayIndex, None& Info); // SetInfo_BP BravoHotelGame.BravoHotelKillInfoSlotWidget.SetInfo_BP // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void TimeOverSlot(None ArrayIndex, None TargetSlotWidget); // TimeOverSlot BravoHotelGame.BravoHotelKillInfoWidget.TimeOverSlot // (Final|Native|Public|BlueprintCallable) // <Game+0x1f576d0>
	void SetOccupyLadder(None IsTop); // SetOccupyLadder BravoHotelGame.BravoHotelLadder.SetOccupyLadder // (Final|Native|Public|BlueprintCallable) // <Game+0x1f58580>
	void Update(None& Data); // Update BravoHotelGame.BravoHotelLoadingWidget.Update // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void OnUpdatedMutable_Lobby(); // OnUpdatedMutable_Lobby BravoHotelGame.BravoHotelLobbyCharacter.OnUpdatedMutable_Lobby // (Final|Native|Protected) // <Game+0x1f595c0>
	void VoiceTalkState(None bVoiceChat); // VoiceTalkState BravoHotelGame.BravoHotelLobbyPlayerController.VoiceTalkState // (Final|Native|Public) // <Game+0x1f59ae0>
	void Logout(); // Logout BravoHotelGame.BravoHotelLobbyWidget.Logout // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x1edf220>
	void UIButtonOverSoundDelegate__DelegateSignature(); // UIButtonOverSoundDelegate__DelegateSignature BravoHotelGame.BravoHotelLobbyWidget_Web.UIButtonOverSoundDelegate__DelegateSignature // (MulticastDelegate|Public|Delegate) // <Game+0x23ad490>
	void StopPatrol(); // StopPatrol BravoHotelGame.BravoHotelLocalAIController.StopPatrol // (Final|Native|Public|BlueprintCallable) // <Game+0x1f5e770>
	None Save(); // Save BravoHotelGame.BravoHotelLocalSaveBase.Save // (Final|BlueprintCosmetic|Native|Public|BlueprintCallable) // <Game+0x1f5ec10>
	None Get(); // Get BravoHotelGame.BravoHotelLocalSavedSettings.Get // (Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable|BlueprintPure) // <Game+0x1f5f140>
	void TryPlayerInfoHttpService(); // TryPlayerInfoHttpService BravoHotelGame.BravoHotelLoginWidget.TryPlayerInfoHttpService // (Final|Native|Public|BlueprintCallable) // <Game+0x1f5f360>
	void OnCompleteAysnLoadItems(None StaticMeshPtr); // OnCompleteAysnLoadItems BravoHotelGame.BravoHotelMagazineForDrop.OnCompleteAysnLoadItems // (Final|Native|Protected) // <Game+0x1f658e0>
	void UpdateNitroBoomWidget(None TargetPosition); // UpdateNitroBoomWidget BravoHotelGame.BravoHotelMainWidget.UpdateNitroBoomWidget // (Event|Public|HasDefaults|BlueprintEvent) // <Game+0x23ad490>
	void UpdateSupplyBoxInfo(); // UpdateSupplyBoxInfo BravoHotelGame.BravoHotelMapCompWidget.UpdateSupplyBoxInfo // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void UpdateReplayCircleInfos(); // UpdateReplayCircleInfos BravoHotelGame.BravoHotelMapDrawWidget.UpdateReplayCircleInfos // (Final|Native|Public|BlueprintCallable) // <Game+0x1f6afa0>
	void ShowMovie(); // ShowMovie BravoHotelGame.BravoHotelMediaPlayerWidget.ShowMovie // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None UpdatePlayerIcon_Impl(None DeltaSeconds, None MapWidth, None PlayerIconGroup); // UpdatePlayerIcon_Impl BravoHotelGame.BravoHotelMiniMapWidget.UpdatePlayerIcon_Impl // (Final|Native|Public|BlueprintCallable) // <Game+0x1f6bb90>
	void ShowLevelName(); // ShowLevelName BravoHotelGame.BravoHotelMK3DReplayController.ShowLevelName // (Final|Exec|Native|Public) // <Game+0x1f6cc40>
	void SetCameraMaxSpeed(None SpeedLevel); // SetCameraMaxSpeed BravoHotelGame.BravoHotelMK3DSpectatorPawn.SetCameraMaxSpeed // (Final|Native|Public|BlueprintCallable) // <Game+0x1f6cfd0>
	void OnRep_ChangeElevatorState(); // OnRep_ChangeElevatorState BravoHotelGame.BravoHotelMoveElevator.OnRep_ChangeElevatorState // (Final|Native|Public) // <Game+0x1f6d670>
	void OpRep_StartAction(); // OpRep_StartAction BravoHotelGame.BravoHotelMutiplayerPhysicsActor.OpRep_StartAction // (Final|Native|Private) // <Game+0x1f6dbf0>
	void TimerFunction_WarmupUpdate(); // TimerFunction_WarmupUpdate BravoHotelGame.BravoHotelMuzzleEffectComponent.TimerFunction_WarmupUpdate // (Final|Native|Protected) // <Game+0x1f6e120>
	None IsSocketAlive(); // IsSocketAlive BravoHotelGame.BravoHotelNetClient.IsSocketAlive // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x1f6e3d0>
	None IsSocketAlive(); // IsSocketAlive BravoHotelGame.BravoHotelNetworkManager.IsSocketAlive // (Final|Native|Public) // <Game+0x1f77fa0>
	void SetSkinMaterial(None Material); // SetSkinMaterial BravoHotelGame.BravoHotelOutGameParachuteActor.SetSkinMaterial // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UnregisterActorOutOfCircle(None Actor); // UnregisterActorOutOfCircle BravoHotelGame.BravoHotelPainCausingComponent.UnregisterActorOutOfCircle // (Final|Native|Public) // <Game+0x1f801a0>
	None GetLanuchForce(); // GetLanuchForce BravoHotelGame.BravoHotelParachuteTriggerBox.GetLanuchForce // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x1f80390>
	void PerkInfoChanged__DelegateSignature(); // PerkInfoChanged__DelegateSignature BravoHotelGame.BravoHotelPerkComponent.PerkInfoChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // <Game+0x23ad490>
	void SetPerkInfoImpl(None bUseLocalPlayerInfo, None& PerkDeckClassInfo); // SetPerkInfoImpl BravoHotelGame.BravoHotelPerkDeckWidget.SetPerkInfoImpl // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetWeaponInfo(None& NewWeaponItemData); // SetWeaponInfo BravoHotelGame.BravoHotelPersonalSupplyBoxSlotItemWidget.SetWeaponInfo // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void UpdateWeaponItemEquipState(None& WeaponItem, None IsUnEquip); // UpdateWeaponItemEquipState BravoHotelGame.BravoHotelPersonalSupplyBoxWidget.UpdateWeaponItemEquipState // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1f840a0>
	None GetSurfaceName(); // GetSurfaceName BravoHotelGame.BravoHotelPhysicalMaterial.GetSurfaceName // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x1f84440>
	void UpdateTimedCameraPostProcess(None& TargetData); // UpdateTimedCameraPostProcess BravoHotelGame.BravoHotelPlayerCameraManager.UpdateTimedCameraPostProcess // (Final|Native|Public|HasOutParms) // <Game+0x1f865d0>
	void UnEquipItem(None& ItemKey); // UnEquipItem BravoHotelGame.BravoHotelPlayerController.UnEquipItem // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1f98240>
	void OnChangedReplayViewMode(None IsPlayer); // OnChangedReplayViewMode BravoHotelGame.BravoHotelPlayerControllerInterface.OnChangedReplayViewMode // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x1f98f70>
	None GetViewPoint(None InWorldContextObject); // GetViewPoint BravoHotelGame.BravoHotelPlayerControllerStatics.GetViewPoint // (Final|Native|Static|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x1f98ee0>
	void UpdateKillCount(); // UpdateKillCount BravoHotelGame.BravoHotelPlayerHUD.UpdateKillCount // (Final|Native|Public) // <Game+0x1f9cfc0>
	void UpdateInfo(); // UpdateInfo BravoHotelGame.BravoHotelPlayerIconWidget.UpdateInfo // (Final|Native|Protected) // <Game+0x1f9d550>
	void SetProgressPercent(None InProgressBar, None InHealth); // SetProgressPercent BravoHotelGame.BravoHotelPlayerInfoProgressSlotWidget.SetProgressPercent // (Final|Native|Public) // <Game+0x1f9db00>
	void UpdateOverHealing(None InNewHealth, None bFlag); // UpdateOverHealing BravoHotelGame.BravoHotelPlayerInfoProgressWidget.UpdateOverHealing // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void UpdateWidgetBuff(None KeyIndex, None Timer, None MaxTime); // UpdateWidgetBuff BravoHotelGame.BravoHotelPlayerInfoWidget.UpdateWidgetBuff // (Final|Native|Public|BlueprintCallable) // <Game+0x1f9ff60>
	void ResetMarkerInfo(None IsUpdate); // ResetMarkerInfo BravoHotelGame.BravoHotelPlayerMarkerWidget.ResetMarkerInfo // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnRep_TeamIndex(); // OnRep_TeamIndex BravoHotelGame.BHReplicatedPlayerInfo.OnRep_TeamIndex // (Final|Native|Protected) // <Game+0x1fa3b40>
	void OnRep_Kills(); // OnRep_Kills BravoHotelGame.BHReplicatedPlayStat.OnRep_Kills // (Final|Native|Protected) // <Game+0x1fa3aa0>
	void OnRep_ReplicatedAppearanceInfo(); // OnRep_ReplicatedAppearanceInfo BravoHotelGame.BHReplicatedAppearanceInfo.OnRep_ReplicatedAppearanceInfo // (Final|Native|Protected) // <Game+0x1fa3ae0>
	None TryGetMarker(None& OutMarkerPosition); // TryGetMarker BravoHotelGame.BravoHotelPlayerState.TryGetMarker // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x1fa42e0>
	void OnRep_RequestResuscitation(); // OnRep_RequestResuscitation BravoHotelGame.BravoHotelPlayerSubState.OnRep_RequestResuscitation // (Final|Native|Protected) // <Game+0x1fa5190>
	void SetMessageEx(None ErrorIdx, None ErrorID, None Parameter, None bConfirm, None bCancel, None bWaiting, None& evt); // SetMessageEx BravoHotelGame.BravoHotelPopupWidget.SetMessageEx // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SpawnTrailEffect(); // SpawnTrailEffect BravoHotelGame.BravoHotelProjectile.SpawnTrailEffect // (Final|Native|Protected) // <Game+0x1fa7170>
	void UpdateFlyby(); // UpdateFlyby BravoHotelGame.BravoHotelProjectileBullet.UpdateFlyby // (Final|Native|Protected) // <Game+0x1fa75c0>
	void UpdateTrailParticle(); // UpdateTrailParticle BravoHotelGame.BravoHotelProjectileGrenade.UpdateTrailParticle // (Final|Native|Protected) // <Game+0x1fa93f0>
	void OnAudioEmitterUnregistered(); // OnAudioEmitterUnregistered BravoHotelGame.BravoHotelProjectileFireAx.OnAudioEmitterUnregistered // (Final|Native|Private) // <Game+0x1fa77c0>
	void AddExplosionDecalEffect(); // AddExplosionDecalEffect BravoHotelGame.BravoHotelProjectileGrenadeBomb.AddExplosionDecalEffect // (Final|Native|Protected) // <Game+0x1fa9750>
	void OnAudioEmitterUnregistered(); // OnAudioEmitterUnregistered BravoHotelGame.BravoHotelProjectileGrenadeC4.OnAudioEmitterUnregistered // (Final|Native|Protected) // <Game+0x1fa99d0>
	void AddExplosionDecalEffect(); // AddExplosionDecalEffect BravoHotelGame.BravoHotelProjectileGrenadeDynamite.AddExplosionDecalEffect // (Final|Native|Protected) // <Game+0x1fa9b60>
	void PlayFlashbangGrenade(); // PlayFlashbangGrenade BravoHotelGame.BravoHotelProjectileGrenadeFlashbang.PlayFlashbangGrenade // (Final|Native|Protected) // <Game+0x1faa020>
	void AddExplosionDecalEffect(); // AddExplosionDecalEffect BravoHotelGame.BravoHotelProjectileGrenadeFragment.AddExplosionDecalEffect // (Final|Native|Protected) // <Game+0x1faa1b0>
	void SpreadingFirePropagation(); // SpreadingFirePropagation BravoHotelGame.BravoHotelProjectileGrenadeMolotovCocktail.SpreadingFirePropagation // (Final|Native|Protected) // <Game+0x1faa900>
	void SmokeEffectFinished(None PSystem); // SmokeEffectFinished BravoHotelGame.BravoHotelProjectileGrenadeSmoke.SmokeEffectFinished // (Final|Native|Public) // <Game+0x1fab300>
	void OnOverlapEnd(None OverlappedComponent, None OtherActor, None OtherComp, None OtherBodyIndex); // OnOverlapEnd BravoHotelGame.BravoHotelProjectileMolotovFireCell.OnOverlapEnd // (Final|Native|Protected) // <Game+0x1fab870>
	void StopScenarioQuest(); // StopScenarioQuest BravoHotelGame.BravoHotelQuestComponent.StopScenarioQuest // (Final|Native|Public|BlueprintCallable) // <Game+0x1facaa0>
	void UpdateOneByOneReload(None Delay); // UpdateOneByOneReload BravoHotelGame.BravoHotelRangedWeapon.UpdateOneByOneReload // (Final|Native|Protected) // <Game+0x1fb3d00>
	void UpdateVerticalRecoilRotation(None Value); // UpdateVerticalRecoilRotation BravoHotelGame.BravoHotelRecoilComponent.UpdateVerticalRecoilRotation // (Final|Native|Protected) // <Game+0x1fb4660>
	void OnRep_RemainingBombingCount(); // OnRep_RemainingBombingCount BravoHotelGame.BravoHotelRedZone.OnRep_RemainingBombingCount // (Final|Native|Protected) // <Game+0x1fb4b90>
	void Run(None CheckPhase); // Run BravoHotelGame.BravoHotelRedZoneManager.Run // (Final|Native|Public|BlueprintCallable) // <Game+0x1fb4d20>
	None UpdateShouldKeep(None ReplayName, None bShouldKeep); // UpdateShouldKeep BravoHotelGame.BravoHotelReplayListWidget.UpdateShouldKeep // (Final|Native|Public|BlueprintCallable) // <Game+0x1fb60a0>
	void UpdatePlayerInfo(None PlayerListSortType); // UpdatePlayerInfo BravoHotelGame.BravoHotelReplayPlayerListInterface.UpdatePlayerInfo // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x1fb69f0>
	void SetPlayerInfo(); // SetPlayerInfo BravoHotelGame.BravoHotelReplayPlayerListItem.SetPlayerInfo // (Final|Native|Public|BlueprintCallable) // <Game+0x1fb6cf0>
	void ShowPlayerList(); // ShowPlayerList BravoHotelGame.BravoHotelReplayPlayerListWidget.ShowPlayerList // (Final|Native|Public|BlueprintCallable) // <Game+0x1fb71f0>
	void SetKillEvent(None& InKillEvent, None IsMyInfo); // SetKillEvent BravoHotelGame.BravoHotelReplayTimelineEventMarker.SetKillEvent // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x1fb79a0>
	void UpdateTimelineScale(); // UpdateTimelineScale BravoHotelGame.BravoHotelReplayTimelineWidget.UpdateTimelineScale // (Final|Native|Public|BlueprintCallable) // <Game+0x1fb8a50>
	void UpdateCameraState(None Inside); // UpdateCameraState BravoHotelGame.BravoHotelReplayZone.UpdateCameraState // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void OnClickedConfirm(); // OnClickedConfirm BravoHotelGame.BravoHotelReportUserCompletedWidget.OnClickedConfirm // (Final|Native|Public) // <Game+0x1fb9430>
	void OnReportSended(None InWidgetType); // OnReportSended BravoHotelGame.BravoHotelReportUserConfirmWidget.OnReportSended // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetSelectedUserNickName(None InUserNickName); // SetSelectedUserNickName BravoHotelGame.BravoHotelReportUserProgramWidget.SetSelectedUserNickName // (Final|Native|Public|BlueprintCallable) // <Game+0x1fb9bb0>
	void SetSelectedUserNickName(None InUserNickName); // SetSelectedUserNickName BravoHotelGame.BravoHotelReportUserWidget.SetSelectedUserNickName // (Final|Native|Public|BlueprintCallable) // <Game+0x1fb9bb0>
	void UpdateRoutePing(None MapCompWidget, None& Positions, None IsUpdate); // UpdateRoutePing BravoHotelGame.BravoHotelRoutePingWidget.UpdateRoutePing // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void K2_StopScenario(); // K2_StopScenario BravoHotelGame.BravoHotelScenarioBase.K2_StopScenario // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void OnActorActived__DelegateSignature(None ChangedActor); // OnActorActived__DelegateSignature BravoHotelGame.BravoHotelScenarioActor.OnActorActived__DelegateSignature // (MulticastDelegate|Public|Delegate) // <Game+0x23ad490>
	void DoDeactive(); // DoDeactive BravoHotelGame.BravoHotelScenarioActorInterface.DoDeactive // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x1e8dc00>
	void OnTriggerFinished(None OverlappedComponent, None OtherActor, None OtherComp, None OtherBodyIndex, None bFromSweep, None& SweepResult); // OnTriggerFinished BravoHotelGame.BravoHotelScenarioCallbackProxy.OnTriggerFinished // (Final|Native|Private|HasOutParms) // <Game+0x1fbb370>
	void StopScenario(); // StopScenario BravoHotelGame.BravoHotelScenarioComponent.StopScenario // (Final|Native|Public|BlueprintCallable) // <Game+0x1fbbea0>
	void OnUpdateScenarioQuest(None& QuestInfo); // OnUpdateScenarioQuest BravoHotelGame.BravoHotelScenarioWidget.OnUpdateScenarioQuest // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ResizeTextureTarget(None InSizeX, None InSizeY); // ResizeTextureTarget BravoHotelGame.BravoHotelSceneCaptureComponent2D.ResizeTextureTarget // (Final|Native|Public|BlueprintCallable) // <Game+0x1fbd200>
	void K2_OnSetAllowdAmmo(None WeaponType, None& AllowdAmmoName); // K2_OnSetAllowdAmmo BravoHotelGame.BravoHotelScopeWidget.K2_OnSetAllowdAmmo // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void Broadcast_DelegateShowInfo(None TargetSlot); // Broadcast_DelegateShowInfo BravoHotelGame.BravoHotelSettingBaseWidget.Broadcast_DelegateShowInfo // (Final|Native|Public|BlueprintCallable) // <Game+0x1fbe150>
	None ValueToPercent(None InValue); // ValueToPercent BravoHotelGame.BravoHotelSettingSlotWidget.ValueToPercent // (Final|Native|Public|BlueprintCallable) // <Game+0x1fbff90>
	void SetScrollLock(None Lock); // SetScrollLock BravoHotelGame.BravoHotelSettingSubWidget.SetScrollLock // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdateVideoMemoryUsageGraph(None UsedVideoMemory, None TotalVideoMemory, None CurrentProcessUsage, None OtherProcessUsage); // UpdateVideoMemoryUsageGraph BravoHotelGame.BravoHotelSettingWidget.UpdateVideoMemoryUsageGraph // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SpawnShellCasing(None& TargetSpawnTransform); // SpawnShellCasing BravoHotelGame.BravoHotelShellCasingArrowComponent.SpawnShellCasing // (Final|Native|Public|HasOutParms|HasDefaults) // <Game+0x1fc23f0>
	None ZoomOut(); // ZoomOut BravoHotelGame.BravoHotelSightAttachment.ZoomOut // (Final|Native|Public|BlueprintCallable) // <Game+0x1fc3000>
	void UpdateTargetSize(); // UpdateTargetSize BravoHotelGame.BravoHotelSkillTargetingBase.UpdateTargetSize // (Native|Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x1e4f220>
	void OnRep_BroadcastNuclear(); // OnRep_BroadcastNuclear BravoHotelGame.BravoHotelSkillTargetingNuclear.OnRep_BroadcastNuclear // (Final|Native|Public) // <Game+0x1fc41b0>
	void UpdateRotation(None NewLineRate); // UpdateRotation BravoHotelGame.BravoHotelSmartPingActor.UpdateRotation // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetWidgetComponentsRenderScale(None ScaleRate); // SetWidgetComponentsRenderScale BravoHotelGame.BravoHotelSmartPingIconWidget.SetWidgetComponentsRenderScale // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None TraceInteractionableActor(None& EndLocation, None& OutFindActor, None& outList); // TraceInteractionableActor BravoHotelGame.BravoHotelSmartPingSystem.TraceInteractionableActor // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x1fc8c10>
	void SetCurrentReplayTimeToSeconds(None Seconds); // SetCurrentReplayTimeToSeconds BravoHotelGame.BravoHotelSpectatorController.SetCurrentReplayTimeToSeconds // (Final|Native|Public|BlueprintCallable) // <Game+0x1fc9350>
	void SetTargetVehicle(None Vehicle, None bDrive); // SetTargetVehicle BravoHotelGame.BravoHotelSpectatorPawn.SetTargetVehicle // (Final|Native|Public) // <Game+0x1fc9940>
	void OnRep_ImpactPointOnDestruct(); // OnRep_ImpactPointOnDestruct BravoHotelGame.BravoHotelSuperBarrier.OnRep_ImpactPointOnDestruct // (Final|Native|Protected) // <Game+0x1fca0d0>
	void AddSupplyBox(None World); // AddSupplyBox BravoHotelGame.BravoHotelSupplyBoxSpawnComponent.AddSupplyBox // (Final|Native|Public|BlueprintCallable) // <Game+0x1fcae60>
	void UpdateInvalidationbox(); // UpdateInvalidationbox BravoHotelGame.BravoHotelTeamInfoSlotWidget.UpdateInvalidationbox // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Init(); // Init BravoHotelGame.BravoHotelTeamInfoWidget.Init // (Final|Native|Public|BlueprintCallable) // <Game+0x1fcbdc0>
	None GetUseSpawnBound(); // GetUseSpawnBound BravoHotelGame.BravoHotelTeamPlayerStart.GetUseSpawnBound // (Final|Native|Public|BlueprintCallable) // <Game+0x1fcc170>
	void K2_OnChangedPlayerState(); // K2_OnChangedPlayerState BravoHotelGame.BravoHotelTeamPositionWidget.K2_OnChangedPlayerState // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void ResetFilterLevels(); // ResetFilterLevels BravoHotelGame.BravoHotelTestCheatWidget.ResetFilterLevels // (Final|Native|Public|BlueprintCallable) // <Game+0x1fcd130>
	void TestLog(None Log, None Index); // TestLog BravoHotelGame.BravoHotelTestWidget.TestLog // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void UpdateSimulation(); // UpdateSimulation BravoHotelGame.BravoHotelTimeOfDay.UpdateSimulation // (Final|Native|Protected) // <Game+0x1fcf340>
	void UpdateUserCount(); // UpdateUserCount BravoHotelGame.BravoHotelTitleHUD.UpdateUserCount // (Final|Native|Public) // <Game+0x1fcfb40>
	void SlashLogMessage(None Message, None Warning); // SlashLogMessage BravoHotelGame.BravoHotelTopInfoInterface.SlashLogMessage // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdateDamageLogVisibility(); // UpdateDamageLogVisibility BravoHotelGame.BravoHotelTopInfoWidget.UpdateDamageLogVisibility // (Final|Native|Public) // <Game+0x1fd25b0>
	void StopDraw(); // StopDraw BravoHotelGame.BravoHotelTrajectoryComponent.StopDraw // (Final|Native|Protected|BlueprintCallable) // <Game+0x1fd2bc0>
	void SetDropBoxState(None NewState); // SetDropBoxState BravoHotelGame.BravoHotelTransportDropBoxActor.SetDropBoxState // (Final|BlueprintAuthorityOnly|Native|Public|BlueprintCallable) // <Game+0x1fd3810>
	None GetDisplayRateofFire(); // GetDisplayRateofFire BravoHotelGame.BravoHotelUIWeaponInterface.GetDisplayRateofFire // (Native|Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // <Game+0x201d590>
	void SetToDefaultSettingsWithTabelData(); // SetToDefaultSettingsWithTabelData BravoHotelGame.BravoHotelUserSettings.SetToDefaultSettingsWithTabelData // (Final|Native|Public|BlueprintCallable) // <Game+0x201de00>
	void WheelWrecked__DelegateSignature(None WheelIndex); // WheelWrecked__DelegateSignature BravoHotelGame.BravoHotelVehicle.WheelWrecked__DelegateSignature // (MulticastDelegate|Public|Delegate) // <Game+0x23ad490>
	None Transition_RightSteering_ToLeftSteering(None MachineIndex, None StateIndex); // Transition_RightSteering_ToLeftSteering BravoHotelGame.BravoHotelVehicleAnimInstance.Transition_RightSteering_ToLeftSteering // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x2024260>
	None GetRandomDefaultFuel(); // GetRandomDefaultFuel BravoHotelGame.BravoHotelVehicleData.GetRandomDefaultFuel // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2024920>
	void WheelTypeChanged__DelegateSignature(None WheelIndex, None PreviousWheel, None CurrentWheel); // WheelTypeChanged__DelegateSignature BravoHotelGame.BravoHotelVehicleMovementComponent.WheelTypeChanged__DelegateSignature // (MulticastDelegate|Public|Delegate) // <Game+0x23ad490>
	None GetSeatNum(); // GetSeatNum BravoHotelGame.BravoHotelVehicleSeatCollisionComponent.GetSeatNum // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x20263c0>
	void SetSeatSocketName(None NewSocketName); // SetSeatSocketName BravoHotelGame.BravoHotelVehicleSeatComponent.SetSeatSocketName // (Final|Native|Public|BlueprintCallable) // <Game+0x2026aa0>
	void SpawnVehicle(None SpawnInstigator, None ParentActorName); // SpawnVehicle BravoHotelGame.BravoHotelVehicleSpawnBoxComponent.SpawnVehicle // (Final|Native|Public) // <Game+0x2027440>
	None SpawnVehicles(); // SpawnVehicles BravoHotelGame.BravoHotelVehicleSpawner.SpawnVehicles // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void ShowVehicle(); // ShowVehicle BravoHotelGame.BravoHotelVehicleWidget.ShowVehicle // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void ServerTeamPlayerVoice(None pController, None Idx); // ServerTeamPlayerVoice BravoHotelGame.BravoHotelVoiceComponent.ServerTeamPlayerVoice // (Net|NetReliableNative|Event|Public|NetServer|NetValidate) // <Game+0x2028e60>
	void OnViewCameraOutWater(); // OnViewCameraOutWater BravoHotelGame.BravoHotelWaterActor.OnViewCameraOutWater // (Final|Native|Public) // <Game+0x2029370>
	void NativeGetWeaponDetailsByItemInfo(None& InInventoryItemInfo, None& ReturnValue, None& WeaponInfoOut); // NativeGetWeaponDetailsByItemInfo BravoHotelGame.BravoHotelWeaponFunctionLibrary.NativeGetWeaponDetailsByItemInfo // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x202bb90>
	None IsEnablePersonalBoxSpawn(None& WolrdCurPos, None& outErrorMessage); // IsEnablePersonalBoxSpawn BravoHotelGame.BravoHotelWeightMapData.IsEnablePersonalBoxSpawn // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable) // <Game+0x2043d10>
	void UpdateLocation(); // UpdateLocation BravoHotelGame.BravoHotelWorldMapAreaWidget.UpdateLocation // (Final|Native|Public) // <Game+0x2044d30>
	void UpdateWorldMapClassInfo(); // UpdateWorldMapClassInfo BravoHotelGame.BravoHotelWorldMapInterface.UpdateWorldMapClassInfo // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetWorldPos(None& StartPos, None& EndPos); // SetWorldPos BravoHotelGame.BravoHotelWorldMapWidget.SetWorldPos // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None ConvertPosWorldtoMap_Impl(None WorldPos); // ConvertPosWorldtoMap_Impl BravoHotelGame.BravoHotelWorldTeleportWidget.ConvertPosWorldtoMap_Impl // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x1f50480>
	None GetMaterialCount(); // GetMaterialCount BravoHotelGame.CameraPostProcessPreset.GetMaterialCount // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2047480>
	void SetReplicationItems(None ItemListType, None& ItemList); // SetReplicationItems BravoHotelGame.InventoryComponent.SetReplicationItems // (Final|Native|Public|HasOutParms) // <Game+0x204c210>
	void AddItemsToBox(None& ItemsToSpawn); // AddItemsToBox BravoHotelGame.DropBoxInventoryComponent.AddItemsToBox // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x20478d0>
	void OnRep_OwningPawn(); // OnRep_OwningPawn BravoHotelGame.EquippableComponent.OnRep_OwningPawn // (Final|Native|Private) // <Game+0x2047f40>
	void StopListeningForAllInputActions(None Widget); // StopListeningForAllInputActions BravoHotelGame.HUDInteractionComponent.StopListeningForAllInputActions // (Final|Native|Public|BlueprintCallable) // <Game+0x2048820>
	void OnAnimNotifyTriggered(None InAudioEvent, None& InConditions); // OnAnimNotifyTriggered BravoHotelGame.BravoHotelAudioConditionProvider.OnAnimNotifyTriggered // (Native|Public|HasOutParms) // <Game+0x2048b40>
	void EndInDoorVolume(None OverlappedComponent, None OtherActor, None OtherComp, None OtherBodyIndex); // EndInDoorVolume BravoHotelGame.InDoorVolumeComponent.EndInDoorVolume // (Final|Native|Public) // <Game+0x2049120>
	void SyncActorLocation(); // SyncActorLocation BravoHotelGame.LadderComponent.SyncActorLocation // (Final|Native|Public|BlueprintCallable) // <Game+0x204d6a0>
	void SetVectorParameter(None Name, None Value); // SetVectorParameter BravoHotelGame.MaterialControllableInterface.SetVectorParameter // (Native|Public|HasDefaults|BlueprintCallable) // <Game+0x204ddc0>
	void SetVectorParameter(None Name, None Value); // SetVectorParameter BravoHotelGame.MaterialController.SetVectorParameter // (Native|Public|HasDefaults|BlueprintCallable) // <Game+0x204e610>
	void SetAttachTime(None AttachTime); // SetAttachTime BravoHotelGame.ParkourComponent.SetAttachTime // (Final|Native|Public|BlueprintCallable) // <Game+0x2050780>
	void UseThrowingWeapon(None WeaponSlotIndex, None DestroyDelay); // UseThrowingWeapon BravoHotelGame.PlayerInventoryComponent.UseThrowingWeapon // (Final|Native|Public) // <Game+0x2058340>
	void StopSimulating(None& HitResult); // StopSimulating BravoHotelGame.RealisticProjectileComponent.StopSimulating // (Native|Public|HasOutParms|BlueprintCallable) // <Game+0x20595d0>
	None Conv_STIntToString(None& Obj); // Conv_STIntToString BravoHotelGame.STypeBlueprintFunctionLibrary.Conv_STIntToString // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x205a6e0>
	None RequestSteamFriendsList(None WorldContextObject, None PlayerController); // RequestSteamFriendsList BravoHotelGame.SteamGetFriendsCallbackProxy.RequestSteamFriendsList // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x205a9a0>
	void OnRep_HealthPoint(None PreviousHealthPoint); // OnRep_HealthPoint BravoHotelGame.TransportAircraftPawn.OnRep_HealthPoint // (Final|Native|Public) // <Game+0x205b010>
	void OnCompleteAsyncLoad(); // OnCompleteAsyncLoad BravoHotelGame.AsyncStaticMeshComponent.OnCompleteAsyncLoad // (Final|Native|Protected) // <Game+0x205c320>
	void OnCompleteAsyncLoad(); // OnCompleteAsyncLoad BravoHotelGame.AsyncSkeletalMeshComponent.OnCompleteAsyncLoad // (Final|Native|Protected) // <Game+0x205c300>
	void UnequipAttachment_Multicast(None AttachmentType); // UnequipAttachment_Multicast BravoHotelGame.WeaponAttachmentComponent.UnequipAttachment_Multicast // (Net|NetReliableNative|Event|NetMulticast|Public) // <Game+0x205c580>
	void OnRep_ChangeAttachments(); // OnRep_ChangeAttachments BravoHotelGame.WeaponReplicatedComponent.OnRep_ChangeAttachments // (Final|Native|Private) // <Game+0x11f7c50>
	void SetLensPresetByName(None InPresetName); // SetLensPresetByName CinematicCamera.CineCameraComponent.SetLensPresetByName // (Final|Native|Public|BlueprintCallable) // <Game+0x3397920>
	None GetRailSplineComponent(); // GetRailSplineComponent CinematicCamera.CameraRig_Rail.GetRailSplineComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x3397790>
	None GetCineCameraComponent(); // GetCineCameraComponent CinematicCamera.CineCameraActor.GetCineCameraComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3397490>
	void SetOpacity(); // SetOpacity UW-Lobby_Craft_Recipe.UW-Lobby_Craft_Recipe_C.SetOpacity // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void StartInstall(); // StartInstall BravoHotelPatch.BravoHotelPatchService.StartInstall // (Final|Native|Public|BlueprintCallable) // <Game+0x20619a0>
	void StartPatchService(); // StartPatchService BravoHotelPatch.BravoHotelPatchWidget.StartPatchService // (Final|Native|Public|BlueprintCallable) // <Game+0x2061fb0>
	void ChangeOption(None& ChangeTypeList); // ChangeOption BravoHotelClient.BravoHotelClientInstance.ChangeOption // (Final|Native|Public|HasOutParms) // <Game+0x207f780>
	void SetWeaponList(None& WeaponList, None BaseItemID); // SetWeaponList UW-Lobby_Craft_WeaponSelect.UW-Lobby_Craft_WeaponSelect_C.SetWeaponList // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetAutoReloadSetting(None Value, None Apply, None& Result); // SetAutoReloadSetting BP_GameSettings.BP_GameSettings_C.SetAutoReloadSetting // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ExportToDisk(None Texture, None Filename, None& options); // ExportToDisk ImageWriteQueue.ImageWriteBlueprintLibrary.ExportToDisk // (Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x2731f00>
	void SetSkipAssigningGamepadToPlayer1(None bSkipFirstPlayer); // SetSkipAssigningGamepadToPlayer1 EngineSettings.GameMapsSettings.SetSkipAssigningGamepadToPlayer1 // (Final|Native|Public|BlueprintCallable) // <Game+0x2c24bd0>
	void StopReconstruction(); // StopReconstruction MRMesh.MeshReconstructorBase.StopReconstruction // (Native|Public|BlueprintCallable) // <Game+0x2edcfb0>
	void OnMockDataMeshTrackerUpdated__DelegateSignature(None Index, None& Vertices, None& Triangles, None& Normals, None& Confidence); // OnMockDataMeshTrackerUpdated__DelegateSignature MRMesh.MockDataMeshTrackerComponent.OnMockDataMeshTrackerUpdated__DelegateSignature // (MulticastDelegate|Public|Delegate|HasOutParms) // <Game+0x23ad490>
	None IsConnected(); // IsConnected MRMesh.MRMeshComponent.IsConnected // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x2edced0>
	void ReportSended(); // ReportSended UW-SpectatingTargetInfo.UW-SpectatingTargetInfo_C.ReportSended // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct BP-CreateCharacterWidget_Web.BP-CreateCharacterWidget_Web_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetLandscapeMaterialVectorParameterValue(None ParameterName, None Value); // SetLandscapeMaterialVectorParameterValue Landscape.LandscapeProxy.SetLandscapeMaterialVectorParameterValue // (Final|RequiredAPI|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3157c50>
	void RequestLandscapeUpdate(); // RequestLandscapeUpdate Landscape.LandscapeBlueprintBrushBase.RequestLandscapeUpdate // (Final|Native|Public|BlueprintCallable) // <Game+0x151b310>
	None GetMaterialInstanceDynamic(None InIndex); // GetMaterialInstanceDynamic Landscape.LandscapeComponent.GetMaterialInstanceDynamic // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3155180>
	None GetRenderComponent(); // GetRenderComponent Landscape.LandscapeHeightfieldCollisionComponent.GetRenderComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3157a90>
	None GetSplineMeshComponents(); // GetSplineMeshComponents Landscape.LandscapeSplinesComponent.GetSplineMeshComponents // (Final|Native|Public|BlueprintCallable) // <Game+0x315ac80>
	void Apply Audio Channel(None Channel, None Volume, None Game Instance, None __WorldContext); // Apply Audio Channel BPFL_SettingsInterfaceUtil.BPFL_SettingsInterfaceUtil_C.Apply Audio Channel // (Static|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetWaterLevelZ_Func(); // SetWaterLevelZ_Func BP-DefaultWheeledVehicle.BP-DefaultWheeledVehicle_C.SetWaterLevelZ_Func // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None TransformTime(None& SourceTime, None& SourceRate, None& DestinationRate); // TransformTime TimeManagement.TimeManagementBlueprintLibrary.TransformTime // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x315d110>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-Projectile_IncendiaryFireCell.BP-Projectile_IncendiaryFireCell_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void K2_TwoBoneIK(None& RootPos, None& JointPos, None& EndPos, None& JointTarget, None& Effector, None& OutJointPos, None& OutEndPos, None bAllowStretching, None StartStretchRatio, None MaxStretchScale); // K2_TwoBoneIK AnimGraphRuntime.KismetAnimationLibrary.K2_TwoBoneIK // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x32362c0>
	void OnNotifyEndReceived(None NotifyName, None& BranchingPointNotifyPayload); // OnNotifyEndReceived AnimGraphRuntime.PlayMontageCallbackProxy.OnNotifyEndReceived // (Final|Native|Protected|HasOutParms) // <Game+0x3236870>
	void OnClickPlayerNameButton(); // OnClickPlayerNameButton UW-PlayerIconWidget.UW-PlayerIconWidget_C.OnClickPlayerNameButton // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None ToSoftObjectPath(None& InAssetData); // ToSoftObjectPath AssetRegistry.AssetRegistryHelpers.ToSoftObjectPath // (Final|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x34464a0>
	void UseFilterToExcludeAssets(None& AssetDataList, None& Filter); // UseFilterToExcludeAssets AssetRegistry.AssetRegistry.UseFilterToExcludeAssets // (Native|Public|HasOutParms|BlueprintCallable|Const) // <Game+0x34465f0>
	None CreateExpertWeaponItemMarker(); // CreateExpertWeaponItemMarker UW-CompassWidget.UW-CompassWidget_C.CreateExpertWeaponItemMarker // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None RemoveGameplayTag(None& TagContainer, None Tag); // RemoveGameplayTag GameplayTags.BlueprintGameplayTagLibrary.RemoveGameplayTag // (Final|Native|Static|Public|HasOutParms|BlueprintCallable) // <Game+0x3459a60>
	None HasMatchingGameplayTag(None TagToCheck); // HasMatchingGameplayTag GameplayTags.GameplayTagAssetInterface.HasMatchingGameplayTag // (Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3458be0>
	void SetRecipeList(); // SetRecipeList UW-MinimapWidget.UW-MinimapWidget_C.SetRecipeList // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetVertexInstanceUV(None VertexInstanceID, None UV, None UVIndex); // SetVertexInstanceUV StaticMeshDescription.StaticMeshDescription.SetVertexInstanceUV // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x34803b0>
	void SetItemOption(None& ItemOption); // SetItemOption UW-Lobby_Craft_Success_Perk_Close.UW-Lobby_Craft_Success_Perk_Close_C.SetItemOption // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetEyeTrackedPlayer(None PlayerController); // SetEyeTrackedPlayer EyeTracker.EyeTrackerFunctionLibrary.SetEyeTrackedPlayer // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x34d2890>
	void IsCorrectPresetSlot(None status, None& bResult); // IsCorrectPresetSlot UW-BlackMarket_Main.UW-BlackMarket_Main_C.IsCorrectPresetSlot // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void RemoveMetaDataByClass(None InClass); // RemoveMetaDataByClass LevelSequence.LevelSequence.RemoveMetaDataByClass // (Final|Native|Public|BlueprintCallable) // <Game+0x34fe8f0>
	void SetBurnIn(None InBurnInClass); // SetBurnIn LevelSequence.LevelSequenceBurnInOptions.SetBurnIn // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x34fecb0>
	void ShowBurnin(); // ShowBurnin LevelSequence.LevelSequenceActor.ShowBurnin // (Final|Native|Public|BlueprintCallable) // <Game+0x34ff010>
	void SetSettings(None InSettings); // SetSettings LevelSequence.LevelSequenceBurnIn.SetSettings // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void OnCreated(); // OnCreated LevelSequence.LevelSequenceDirector.OnCreated // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None GetActiveCameraComponent(); // GetActiveCameraComponent LevelSequence.LevelSequencePlayer.GetActiveCameraComponent // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x34fe5d0>
	void SynchronizeToServer(None DesyncThresholdSeconds); // SynchronizeToServer LevelSequence.LevelSequenceMediaController.SynchronizeToServer // (Final|Native|Public|BlueprintCallable) // <Game+0x34ff030>
	void SequenceEvent__ENTRYPOINTUW-MatchEnd_Ranking_4(); // SequenceEvent__ENTRYPOINTUW-MatchEnd_Ranking_4 UW-MatchEnd_Ranking.UW-MatchEnd_Ranking_C.SequenceEvent__ENTRYPOINTUW-MatchEnd_Ranking_4 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None OnMouseButtonUp(None MyGeometry, None& MouseEvent); // OnMouseButtonUp UW-PersonalSupplyBoxSlotItemWidget.UW-PersonalSupplyBoxSlotItemWidget_C.OnMouseButtonUp // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetAnimDriveDamperStiffness(None InStiffness); // SetAnimDriveDamperStiffness ClothingSystemRuntimeNv.ClothingSimulationInteractorNv.SetAnimDriveDamperStiffness // (Final|Native|Public|BlueprintCallable) // <Game+0x3e535a0>
	None GetVisibility_1(); // GetVisibility_1 UW-Inventory_CharacterDragPanel.UW-Inventory_CharacterDragPanel_C.GetVisibility_1 // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	None IsValid(); // IsValid NavigationSystem.NavigationPath.IsValid // (Final|Native|Public|BlueprintCallable|BlueprintPure|Const) // <Game+0x3f16c40>
	void UnregisterNavigationInvoker(None Invoker); // UnregisterNavigationInvoker NavigationSystem.NavigationSystemV1.UnregisterNavigationInvoker // (Final|Native|Public|BlueprintCallable) // <Game+0x3f17a90>
	void SetNavigationRelevancy(None bRelevant); // SetNavigationRelevancy NavigationSystem.NavRelevantComponent.SetNavigationRelevancy // (Final|Native|Public|BlueprintCallable) // <Game+0x3f1a130>
	void SetAreaClass(None NewAreaClass); // SetAreaClass NavigationSystem.NavModifierComponent.SetAreaClass // (Final|Native|Public|BlueprintCallable) // <Game+0x3f1a0b0>
	void SetAreaClass(None NewAreaClass); // SetAreaClass NavigationSystem.NavModifierVolume.SetAreaClass // (Final|Native|Public|BlueprintCallable) // <Game+0x3f1a030>
	None K2_ReplaceAreaInTileBounds(None Bounds, None OldArea, None NewArea, None ReplaceLinks); // K2_ReplaceAreaInTileBounds NavigationSystem.RecastNavMesh.K2_ReplaceAreaInTileBounds // (Final|Native|Public|HasDefaults|BlueprintCallable) // <Game+0x3f19ea0>
	void OnListFileFound(None Filename, None ByteCount, None FilePath); // OnListFileFound WindowsFileUtility.WFUFileListInterface.OnListFileFound // (Native|Event|Public|BlueprintEvent) // <Game+0x4001d30>
	void OnFileChanged(None Filename, None FilePath); // OnFileChanged WindowsFileUtility.WFUFolderWatchInterface.OnFileChanged // (Native|Event|Public|BlueprintEvent) // <Game+0x166e270>
	void WatchFolder(None fullPath, None WatcherDelegate); // WatchFolder WindowsFileUtility.WindowsFileUtilityFunctionLibrary.WatchFolder // (Final|Native|Static|Public|BlueprintCallable) // <Game+0x4001f40>
	None ConvertPhysicsCollisionToHitResult(None& PhysicsCollision); // ConvertPhysicsCollisionToHitResult ChaosSolverEngine.ChaosSolverEngineBlueprintLibrary.ConvertPhysicsCollisionToHitResult // (Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure) // <Game+0x4006270>
	void SetSolverActive(None bActive); // SetSolverActive ChaosSolverEngine.ChaosSolverActor.SetSolverActive // (Native|Public|BlueprintCallable) // <Game+0x4006380>
	void GetCraftingWeaponRarity(None& OutRarity); // GetCraftingWeaponRarity UW-Lobby_Armory_Recipe.UW-Lobby_Armory_Recipe_C.GetCraftingWeaponRarity // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void ResetFieldSystem(); // ResetFieldSystem FieldSystemEngine.FieldSystemComponent.ResetFieldSystem // (Final|Native|Public|BlueprintCallable) // <Game+0x400e050>
	None SetMetaDataIteration(None Iterations); // SetMetaDataIteration FieldSystemEngine.FieldSystemMetaDataIteration.SetMetaDataIteration // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400e3a0>
	None SetMetaDataaProcessingResolutionType(None ResolutionType); // SetMetaDataaProcessingResolutionType FieldSystemEngine.FieldSystemMetaDataProcessingResolution.SetMetaDataaProcessingResolutionType // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400e430>
	None SetUniformInteger(None Magnitude); // SetUniformInteger FieldSystemEngine.UniformInteger.SetUniformInteger // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400e3a0>
	None SetRadialIntMask(None Radius, None Position, None InteriorValue, None ExteriorValue, None SetMaskConditionIn); // SetRadialIntMask FieldSystemEngine.RadialIntMask.SetRadialIntMask // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x400ec30>
	None SetUniformScalar(None Magnitude); // SetUniformScalar FieldSystemEngine.UniformScalar.SetUniformScalar // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400eed0>
	None SetRadialFalloff(None Magnitude, None MinRange, None MaxRange, None Default, None Radius, None Position, None Falloff); // SetRadialFalloff FieldSystemEngine.RadialFalloff.SetRadialFalloff // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x400ea10>
	None SetPlaneFalloff(None Magnitude, None MinRange, None MaxRange, None Default, None Distance, None Position, None Normal, None Falloff); // SetPlaneFalloff FieldSystemEngine.PlaneFalloff.SetPlaneFalloff // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x400e790>
	None SetBoxFalloff(None Magnitude, None MinRange, None MaxRange, None Default, None Transform, None Falloff); // SetBoxFalloff FieldSystemEngine.BoxFalloff.SetBoxFalloff // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x400e070>
	None SetNoiseField(None MinRange, None MaxRange, None Transform); // SetNoiseField FieldSystemEngine.NoiseField.SetNoiseField // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x400e4c0>
	None SetUniformVector(None Magnitude, None Direction); // SetUniformVector FieldSystemEngine.UniformVector.SetUniformVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x400edf0>
	None SetRadialVector(None Magnitude, None Position); // SetRadialVector FieldSystemEngine.RadialVector.SetRadialVector // (Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure) // <Game+0x400edf0>
	None SetRandomVector(None Magnitude); // SetRandomVector FieldSystemEngine.RandomVector.SetRandomVector // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400eed0>
	None SetOperatorField(None Magnitude, None RightField, None LeftField, None Operation); // SetOperatorField FieldSystemEngine.OperatorField.SetOperatorField // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400e640>
	None SetToIntegerField(None FloatField); // SetToIntegerField FieldSystemEngine.ToIntegerField.SetToIntegerField // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400ef90>
	None SetToFloatField(None IntegerField); // SetToFloatField FieldSystemEngine.ToFloatField.SetToFloatField // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400ef90>
	None SetCullingField(None Culling, None Field, None Operation); // SetCullingField FieldSystemEngine.CullingField.SetCullingField // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400e2a0>
	None SetReturnResultsTerminal(); // SetReturnResultsTerminal FieldSystemEngine.ReturnResultsTerminal.SetReturnResultsTerminal // (Final|Native|Public|BlueprintCallable|BlueprintPure) // <Game+0x400ef60>
	void SortTrailingEvents(None& TrailingEvents, None SortMethod); // SortTrailingEvents GeometryCollectionEngine.ChaosDestructionListener.SortTrailingEvents // (Final|Native|Public|HasOutParms|BlueprintCallable) // <Game+0x402bd90>
	None RaycastSingle(None Start, None End, None& OutHit); // RaycastSingle GeometryCollectionEngine.GeometryCollectionActor.RaycastSingle // (Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const) // <Game+0x402b570>
	void SetNotifyBreaks(None bNewNotifyBreaks); // SetNotifyBreaks GeometryCollectionEngine.GeometryCollectionComponent.SetNotifyBreaks // (Final|Native|Public|BlueprintCallable) // <Game+0x402b9d0>
	void ReceivePhysicsCollision(None& CollisionInfo); // ReceivePhysicsCollision GeometryCollectionEngine.SkeletalMeshSimulationComponent.ReceivePhysicsCollision // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void ReceivePhysicsCollision(None& CollisionInfo); // ReceivePhysicsCollision GeometryCollectionEngine.StaticMeshSimulationComponent.ReceivePhysicsCollision // (Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void SetHoverWidgetRef(); // SetHoverWidgetRef UW-Inventory_WeaponAttachmentSlot.UW-Inventory_WeaponAttachmentSlot_C.SetHoverWidgetRef // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdateWorldLocalState(None bWorldIn); // UpdateWorldLocalState InteractiveToolsFramework.GizmoBaseComponent.UpdateWorldLocalState // (Final|Native|Public) // <Game+0x40513a0>
	void SetTransform(None& NewTransform); // SetTransform InteractiveToolsFramework.GizmoTransformSource.SetTransform // (Native|Public|HasOutParms|HasDefaults) // <Game+0x40511a0>
	None HasTangentVectors(); // HasTangentVectors InteractiveToolsFramework.GizmoAxisSource.HasTangentVectors // (Native|Public|Const) // <Game+0x4051060>
	void UpdateHoverState(None bHovering); // UpdateHoverState InteractiveToolsFramework.GizmoClickTarget.UpdateHoverState // (Native|Public|Const) // <Game+0x4051280>
	void EndUpdate(); // EndUpdate InteractiveToolsFramework.GizmoStateTarget.EndUpdate // (Native|Public) // <Game+0x1e8d710>
	void SetParameter(None NewValue); // SetParameter InteractiveToolsFramework.GizmoFloatParameterSource.SetParameter // (Native|Public) // <Game+0x4051090>
	void SetParameter(None& NewValue); // SetParameter InteractiveToolsFramework.GizmoVec2ParameterSource.SetParameter // (Native|Public|HasOutParms|HasDefaults) // <Game+0x4051110>
	void Construct(); // Construct WBP-HeartBeatSensorEffect.WBP-HeartBeatSensorEffect_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetItemOption(None& ItemOption); // SetItemOption UW-Lobby_WeaponInfo_Option_Slot.UW-Lobby_WeaponInfo_Option_Slot_C.SetItemOption // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetTimerCount(); // SetTimerCount ConfirmPopupWidget.ConfirmPopupWidget_C.SetTimerCount // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void PlayClickSound(); // PlayClickSound UW-Radar_Cursor.UW-Radar_Cursor_C.PlayClickSound // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void HoverRecipeItems(None& ItemKeys); // HoverRecipeItems UW-Inventory_Material.UW-Inventory_Material_C.HoverRecipeItems // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetOptionChangedFromBenchmark(); // SetOptionChangedFromBenchmark UW-PopupWidget.UW-PopupWidget_C.SetOptionChangedFromBenchmark // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetIsActive(None bActive); // SetIsActive UW-GameBuffSlot_Boost.UW-GameBuffSlot_Boost_C.SetIsActive // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveTick(None DeltaSeconds); // ReceiveTick BP-PersonalSupplyBox.BP-PersonalSupplyBox_C.ReceiveTick // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void OnLoaded_9DF86FA64782B378E42DBB813545BD34(None Loaded); // OnLoaded_9DF86FA64782B378E42DBB813545BD34 UW-KillMessageListItemWidget.UW-KillMessageListItemWidget_C.OnLoaded_9DF86FA64782B378E42DBB813545BD34 // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ShowHUDToggle(None ShowToggle); // ShowHUDToggle HUD_Widget.HUD_Widget_C.ShowHUDToggle // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-LoadingRichText.UW-LoadingRichText_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-CastingWidget_CancelText.UW-CastingWidget_CancelText_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-Projectile_FlameThrowerFireCell.BP-Projectile_FlameThrowerFireCell_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void Key Input Current State(None Controller, None& Axis Value, None& Down, None& Just Pressed, None& Just Released); // Key Input Current State BP_KeyInput_AnalogAxis_RemoveDelta.BP_KeyInput_AnalogAxis_RemoveDelta_C.Key Input Current State // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdateTargetSize(); // UpdateTargetSize BP-SkillTargetingNuclear.BP-SkillTargetingNuclear_C.UpdateTargetSize // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void PlayMedia(); // PlayMedia UW-Tutorial.UW-Tutorial_C.PlayMedia // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void IsEquipped(None& Return); // IsEquipped UW-Inventory_WeaponSlot.UW-Inventory_WeaponSlot_C.IsEquipped // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-G3.ABP-G3_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct WBP_SPS_SelectionIcon.WBP_SPS_SelectionIcon_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-Lobby_Craft_Success_Perk_Slot_1(); // SequenceEvent__ENTRYPOINTUW-Lobby_Craft_Success_Perk_Slot_1 UW-Lobby_Craft_Success_Perk_Slot.UW-Lobby_Craft_Success_Perk_Slot_C.SequenceEvent__ENTRYPOINTUW-Lobby_Craft_Success_Perk_Slot_1 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Update Audio Channel(None Audio Channel, None Volume, None& -); // Update Audio Channel BPI_GameSettingsInterface.BPI_GameSettingsInterface_C.Update Audio Channel // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Set Tool Tip Text Design(None Tool Tip, None& -); // Set Tool Tip Text Design WB_ClassicToolTipDesign.WB_ClassicToolTipDesign_C.Set Tool Tip Text Design // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ExecuteUbergraph_BP_GameSettingsWrapper(None EntryPoint); // ExecuteUbergraph_BP_GameSettingsWrapper BP_GameSettingsWrapper.BP_GameSettingsWrapper_C.ExecuteUbergraph_BP_GameSettingsWrapper // (Final|UbergraphFunction) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-AKM.ABP-AKM_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetMyKillCountMessageWidget(None& KillCountWidget); // GetMyKillCountMessageWidget UW-HUDMessageWidget.UW-HUDMessageWidget_C.GetMyKillCountMessageWidget // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void Construct(); // Construct LineWidget.LineWidget_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void GetImage(None Index, None& Image); // GetImage Temp.Temp_C.GetImage // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetLine(None Show, None IconIndex); // SetLine Line_WidgetActor.Line_WidgetActor_C.SetLine // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ConvertLoopAnimationType(None In Type, None __WorldContext, None& Out Type); // ConvertLoopAnimationType BPF_SPS_Functions.BPF_SPS_Functions_C.ConvertLoopAnimationType // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Revert To Default KeyMapping(); // Revert To Default KeyMapping BP_KeyMapping.BP_KeyMapping_C.Revert To Default KeyMapping // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-VECTOR.ABP-VECTOR_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Generate Display Name(); // Generate Display Name BP_KeyInput.BP_KeyInput_C.Generate Display Name // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Initialize(None Direction); // Initialize UW-CompassRulerWidget.UW-CompassRulerWidget_C.Initialize // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveTick(None DeltaSeconds); // ReceiveTick BP-TransportAircraft.BP-TransportAircraft_C.ReceiveTick // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void Key Input Current State(None Controller, None& Axis Value, None& Down, None& Just Pressed, None& Just Released); // Key Input Current State BP_KeyInput_Digital.BP_KeyInput_Digital_C.Key Input Current State // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Key Input Current State(None Controller, None& Axis Value, None& Down, None& Just Pressed, None& Just Released); // Key Input Current State BP_KeyInput_AnalogAxis.BP_KeyInput_AnalogAxis_C.Key Input Current State // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Get Key Combination Display Name(None Separator, None No Key Display, None Display Type, None& Display Name); // Get Key Combination Display Name BP_KeyCombination.BP_KeyCombination_C.Get Key Combination Display Name // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Get Mapping(None Mapping Name, None& Mapping, None& SUCCESS); // Get Mapping BP_KeyAction.BP_KeyAction_C.Get Mapping // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdateMouseWheel(None Delta); // UpdateMouseWheel UW-CustomizedCharacter.UW-CustomizedCharacter_C.UpdateMouseWheel // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None On_IMG-BG_MouseButtonDown_1(None MyGeometry, None& MouseEvent); // On_IMG-BG_MouseButtonDown_1 UW-BlackMarket_Slot_Consumable.UW-BlackMarket_Slot_Consumable_C.On_IMG-BG_MouseButtonDown_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetFontSize(None Size); // SetFontSize UW-KeyControl.UW-KeyControl_C.SetFontSize // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None GetAngleText(None Angle, None& IsNormal); // GetAngleText UW-CompassUnitWidget.UW-CompassUnitWidget_C.GetAngleText // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void SetBuffInfo(None BuffName, None Desc, None Icon, None Rarity); // SetBuffInfo UW-InteractionWidget_WeaponPerkSlot.UW-InteractionWidget_WeaponPerkSlot_C.SetBuffInfo // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-PerkDeckWidget_3(); // SequenceEvent__ENTRYPOINTUW-PerkDeckWidget_3 UW-PerkDeckWidget.UW-PerkDeckWidget_C.SequenceEvent__ENTRYPOINTUW-PerkDeckWidget_3 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Hide(); // Hide UW-HittedDamageWidget.UW-HittedDamageWidget_C.Hide // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTSequenceDirector_1(); // SequenceEvent__ENTRYPOINTSequenceDirector_1 Weapon_Lobby_Repair.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None OnMouseButtonDown(None MyGeometry, None& MouseEvent); // OnMouseButtonDown UW-ItemRecipeTreeSlot.UW-ItemRecipeTreeSlot_C.OnMouseButtonDown // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetConsumableData(None Type); // SetConsumableData UW-BlackMarket_SubTab.UW-BlackMarket_SubTab_C.SetConsumableData // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetIconTexture(None IconTexture); // SetIconTexture UW-BlackMarket_Slot_Weapon.UW-BlackMarket_Slot_Weapon_C.SetIconTexture // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ShowStatupAnim(None& StatParams, None StatType); // ShowStatupAnim UW-Inventory_Weapon.UW-Inventory_Weapon_C.ShowStatupAnim // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetBuffInfo(None BuffName, None Desc, None Icon, None Rarity); // SetBuffInfo UW-Inventory_ItemSlotHover_WeaponSlot.UW-Inventory_ItemSlotHover_WeaponSlot_C.SetBuffInfo // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct WB_ClassicSettingsText.WB_ClassicSettingsText_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void CheckCanStackDamageLog(None& DamageLogInfo, None& CanStack); // CheckCanStackDamageLog UW-CoreInfoWidget.UW-CoreInfoWidget_C.CheckCanStackDamageLog // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void HideAnim(); // HideAnim BPI-PopupWidget.BPI-PopupWidget_C.HideAnim // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void TargetSetting(); // TargetSetting BP-SpectatorPawn.BP-SpectatorPawn_C.TargetSetting // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-PerkLevelUp_02_4(None Image_365); // SequenceEvent__ENTRYPOINTUW-PerkLevelUp_02_4 UW-PerkLevelUp_02.UW-PerkLevelUp_02_C.SequenceEvent__ENTRYPOINTUW-PerkLevelUp_02_4 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetFontSize(None Override); // SetFontSize KeyImageWidget.KeyImageWidget_C.SetFontSize // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetBravoHotelPlayerHUD(None& NewParam); // GetBravoHotelPlayerHUD UW-Inventory_DragItem.UW-Inventory_DragItem_C.GetBravoHotelPlayerHUD // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void Setup(None VehicleInstance); // Setup UW-VehicleSubInfo_Base.UW-VehicleSubInfo_Base_C.Setup // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-NitroBoomTargetWidget.UW-NitroBoomTargetWidget_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None On_IMG-BG_MouseButtonDown_1(None MyGeometry, None& MouseEvent); // On_IMG-BG_MouseButtonDown_1 UW-BlackMarket_Slot_Gear.UW-BlackMarket_Slot_Gear_C.On_IMG-BG_MouseButtonDown_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetInfo(None VoiceTalkState); // SetInfo UW-VoiceTalkSlot.UW-VoiceTalkSlot_C.SetInfo // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnWheelWrecked(None WheelIndex); // OnWheelWrecked UW-VehicleWidget.UW-VehicleWidget_C.OnWheelWrecked // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdatePing(); // UpdatePing UW-MS.UW-MS_C.UpdatePing // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-Mini14.ABP-Mini14_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetForVisual(); // SetForVisual UW-Inventory_PerkSlot.UW-Inventory_PerkSlot_C.SetForVisual // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-CompanyLogo_2(); // SequenceEvent__ENTRYPOINTUW-CompanyLogo_2 UW-CompanyLogo.UW-CompanyLogo_C.SequenceEvent__ENTRYPOINTUW-CompanyLogo_2 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None GetHUDInteractionComponent(); // GetHUDInteractionComponent BP-MK3DReplayController.BP-MK3DReplayController_C.GetHUDInteractionComponent // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // <Game+0x23ad490>
	void UpdateWorldMapGuideOpacity(None PreZoomLevel, None NewZoomLevel); // UpdateWorldMapGuideOpacity UW-GuideWidget.UW-GuideWidget_C.UpdateWorldMapGuideOpacity // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnLoaded_395796F147F051B7CCBB17B8AB7F3577(None Loaded); // OnLoaded_395796F147F051B7CCBB17B8AB7F3577 BP-CheckWeightMap.BP-CheckWeightMap_C.OnLoaded_395796F147F051B7CCBB17B8AB7F3577 // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetInfo(None Type, None& OutData); // SetInfo BP-LoadingScreenWidget.BP-LoadingScreenWidget_C.SetInfo // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Set DisableBtn(None IsDisable); // Set DisableBtn ButtomButtonWidget.ButtomButtonWidget_C.Set DisableBtn // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-C1911.ABP-C1911_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ShowStatupAnim(None& StatupParams); // ShowStatupAnim UW-TopInfoWidget.UW-TopInfoWidget_C.ShowStatupAnim // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetEnableNameButton(None Enable); // SetEnableNameButton UW_UserNameTooltip.UW_UserNameTooltip_C.SetEnableNameButton // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct AudioWidget.AudioWidget_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None On_IMG-BG_MouseButtonDown_1(None MyGeometry, None& MouseEvent); // On_IMG-BG_MouseButtonDown_1 UW-BlackMarket_Slot_Wearable.UW-BlackMarket_Slot_Wearable_C.On_IMG-BG_MouseButtonDown_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct Chat_Message.Chat_Message_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None OnFocusReceived(None MyGeometry, None InFocusEvent); // OnFocusReceived Chat_Tab.Chat_Tab_C.OnFocusReceived // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None Get Chat Input Hint Text(); // Get Chat Input Hint Text Chat_MainWidget.Chat_MainWidget_C.Get Chat Input Hint Text // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void Censor String(None String, None& Censor Filter, None Censor Character, None Censor Whitespace?, None __WorldContext, None& Censored String); // Censor String Chat_FL.Chat_FL_C.Censor String // (Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-MicroUzi.ABP-MicroUzi_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Set Canvas Material Scale and Position(None Size, None Position, None Scale, None __WorldContext, None& Screen Position, None& Screen Size); // Set Canvas Material Scale and Position RenderToTextureFunctionLibrary.RenderToTextureFunctionLibrary_C.Set Canvas Material Scale and Position // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void SetMessage(None Str); // SetMessage UW-GameNoticePopupWidget.UW-GameNoticePopupWidget_C.SetMessage // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Update Audio Channel(None Audio Channel, None Volume, None& -); // Update Audio Channel BP-BHGameInstanceWithSettings.BP-BHGameInstanceWithSettings_C.Update Audio Channel // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Get Current Group(None& Group); // Get Current Group Chat_System.Chat_System_C.Get Current Group // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void SetObserver(); // SetObserver BP-SpectatorPC.BP-SpectatorPC_C.SetObserver // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CreateSlots(); // CreateSlots UW-Inventory_ProximityBoxSlot.UW-Inventory_ProximityBoxSlot_C.CreateSlots // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None OnMouseButtonDown_1(None MyGeometry, None& MouseEvent); // OnMouseButtonDown_1 UW-Inventory_ItemInfoTooltip.UW-Inventory_ItemInfoTooltip_C.OnMouseButtonDown_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void BndEvt__Button_42_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature(); // BndEvt__Button_42_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature UW-ComboBoxText.UW-ComboBoxText_C.BndEvt__Button_42_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature // (BlueprintEvent) // <Game+0x23ad490>
	void ShowStatupAnim(None& StatParams, None StatType); // ShowStatupAnim UW-Inventory_Equipped.UW-Inventory_Equipped_C.ShowStatupAnim // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void DragLeave(None PointerEvent, None Operation); // DragLeave UW-Inventory_Carried.UW-Inventory_Carried_C.DragLeave // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdatePersonalSupplyBox(); // UpdatePersonalSupplyBox UW-WorldMapMarkerWidget.UW-WorldMapMarkerWidget_C.UpdatePersonalSupplyBox // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ShowTreeNode(None WidgetInfo, None bShow, None bCombinable); // ShowTreeNode UW-ItemRecipeTree.UW-ItemRecipeTree_C.ShowTreeNode // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None OnMouseButtonUp(None MyGeometry, None& MouseEvent); // OnMouseButtonUp UW-PersonalSupplyBoxWeaponInfoWidget.UW-PersonalSupplyBoxWeaponInfoWidget_C.OnMouseButtonUp // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None OnMouseButtonUp(None MyGeometry, None& MouseEvent); // OnMouseButtonUp UW-PersonalSupplyBoxConsumableItemSlotWidget.UW-PersonalSupplyBoxConsumableItemSlotWidget_C.OnMouseButtonUp // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None Generate Combobox Widget Item(None Item); // Generate Combobox Widget Item DevWidget.DevWidget_C.Generate Combobox Widget Item // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-Revival_PayPopup.UW-Revival_PayPopup_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void OnPaint(None& Context); // OnPaint UW-MapDrawWidget_Grid.UW-MapDrawWidget_Grid_C.OnPaint // (BlueprintCosmetic|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const) // <Game+0x23ad490>
	None CreatePlayerListGroup(None PlayerState); // CreatePlayerListGroup UW-ReplayPlayerListWidget.UW-ReplayPlayerListWidget_C.CreatePlayerListGroup // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetButtonEnabled(None InIsEnabled); // SetButtonEnabled UW-Lobby_Craft_WeaponSelect_Slot.UW-Lobby_Craft_WeaponSelect_Slot_C.SetButtonEnabled // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ShouldUpdateParameter(None& Result); // ShouldUpdateParameter BP_BlueZone.BP_BlueZone_C.ShouldUpdateParameter // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void UpdateClassCount(); // UpdateClassCount UW-ClassinfoitemBoardWidget.UW-ClassinfoitemBoardWidget_C.UpdateClassCount // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-Volume.UW-Volume_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void Get Slot Index(None Index, None& Slot); // Get Slot Index UW-SearchingMaterial.UW-SearchingMaterial_C.Get Slot Index // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetWeaponInfo(None WeaponItemID); // SetWeaponInfo UW-Lobby_WeaponInfo.UW-Lobby_WeaponInfo_C.SetWeaponInfo // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-MP5.ABP-MP5_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UpdateSlotMaxSize(None SlotNum); // UpdateSlotMaxSize UW-Inventory_Recipe.UW-Inventory_Recipe_C.UpdateSlotMaxSize // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None HasPerkDeckWidget(); // HasPerkDeckWidget BP-BravoHotel-PlayerController.BP-BravoHotel-PlayerController_C.HasPerkDeckWidget // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-Inventory_Perk_2(); // SequenceEvent__ENTRYPOINTUW-Inventory_Perk_2 UW-Inventory_Perk.UW-Inventory_Perk_C.SequenceEvent__ENTRYPOINTUW-Inventory_Perk_2 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None CreateSlot(); // CreateSlot UW-TeamInfoWidget.UW-TeamInfoWidget_C.CreateSlot // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetEquippedWeapon(None& SUCCESS); // SetEquippedWeapon UW_ReplayUserNameTooltip.UW_ReplayUserNameTooltip_C.SetEquippedWeapon // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnLoaded_27D2D12149E3EA31998D6D88C1D08B2F(None Loaded); // OnLoaded_27D2D12149E3EA31998D6D88C1D08B2F UW-TeamInfoItemWidget.UW-TeamInfoItemWidget_C.OnLoaded_27D2D12149E3EA31998D6D88C1D08B2F // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Init(); // Init UW-RequestResuscitation.UW-RequestResuscitation_C.Init // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ResetInfos(); // ResetInfos UW-KillMessageListWidget.UW-KillMessageListWidget_C.ResetInfos // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void K2_SetKillEvent(None IsMyInfo); // K2_SetKillEvent UW-ReplayEventMarkerBasic.UW-ReplayEventMarkerBasic_C.K2_SetKillEvent // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void AddKillMessage(None& BroadCastInfo); // AddKillMessage UW-KillInfoWidget.UW-KillInfoWidget_C.AddKillMessage // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void OnMouseEnter(None MyGeometry, None& MouseEvent); // OnMouseEnter UW-GameBuffSlot_BoostCover.UW-GameBuffSlot_BoostCover_C.OnMouseEnter // (BlueprintCosmetic|Event|Public|HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void GetRequestTextFromIndex(None Index, None& Text); // GetRequestTextFromIndex WBP_SPS_SelectionMenu.WBP_SPS_SelectionMenu_C.GetRequestTextFromIndex // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckLanguage(); // CheckLanguage UW-CastingWidget.UW-CastingWidget_C.CheckLanguage // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None Get_HorizontalBox_CurrentGold_Visibility_1(); // Get_HorizontalBox_CurrentGold_Visibility_1 UW-AliveInfoWidget.UW-AliveInfoWidget_C.Get_HorizontalBox_CurrentGold_Visibility_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void AllHiddenMaterialWidget(); // AllHiddenMaterialWidget UW-InventoryWidget.UW-InventoryWidget_C.AllHiddenMaterialWidget // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void IsEquipped(None& Return); // IsEquipped UW-Inventory_SlotBase.UW-Inventory_SlotBase_C.IsEquipped // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const) // <Game+0x23ad490>
	void OnDragDetected(None MyGeometry, None& PointerEvent, None& Operation); // OnDragDetected UW-Inventory_KeepedSlot.UW-Inventory_KeepedSlot_C.OnDragDetected // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckBoosterItem(None& IsBoost, None& OutColor, None& OutTexture); // CheckBoosterItem UW-Inventory_CarriedSlot.UW-Inventory_CarriedSlot_C.CheckBoosterItem // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Click Event(None Index, None Type); // Click Event SettingSubButtonWidget.SettingSubButtonWidget_C.Click Event // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None Get_Image_Full_Visibility_1(); // Get_Image_Full_Visibility_1 UW-Inventory_MaterialIconSlot.UW-Inventory_MaterialIconSlot_C.Get_Image_Full_Visibility_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void IsEquipped(None& Return); // IsEquipped BPI-InventorySlotWidget.BPI-InventorySlotWidget_C.IsEquipped // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const) // <Game+0x23ad490>
	void DamageResultText(None& Result); // DamageResultText UW-CoreInfoWidgetItem.UW-CoreInfoWidgetItem_C.DamageResultText // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void Get Weapon Infoby Inventory Item Info(None& bResult, None& WeaponInfo); // Get Weapon Infoby Inventory Item Info UW-Inventory_RecipeSlot.UW-Inventory_RecipeSlot_C.Get Weapon Infoby Inventory Item Info // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-Saiga12K.ABP-Saiga12K_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None GetDisplayAccuracy(); // GetDisplayAccuracy UW-Inventory_ItemSlotHover.UW-Inventory_ItemSlotHover_C.GetDisplayAccuracy // (Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // <Game+0x23ad490>
	None GetDebugInfo(); // GetDebugInfo BP-GrenadeWeaponBase.BP-GrenadeWeaponBase_C.GetDebugInfo // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None SetExpertWeaponPing(None& PingInfo); // SetExpertWeaponPing WBP_SPS_Icon.WBP_SPS_Icon_C.SetExpertWeaponPing // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetTeamColor(None TeamIndex, None& OutColor); // GetTeamColor BP_SPS_WidgetActor.BP_SPS_WidgetActor_C.GetTeamColor // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void InitIcon(None PlayerState); // InitIcon UW-CompassWidget_Item_Resuscitation.UW-CompassWidget_Item_Resuscitation_C.InitIcon // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None IsUltimateLevel(); // IsUltimateLevel UW-GainPerk.UW-GainPerk_C.IsUltimateLevel // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void SetCompareFloatArrow(None UpImgae, None DownImgae, None Text, None CompareInfo); // SetCompareFloatArrow UW-InteractionWidget.UW-InteractionWidget_C.SetCompareFloatArrow // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Move Parameter(); // Move Parameter UW-TeamPositionWidget.UW-TeamPositionWidget_C.Move Parameter // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckUltimateSound(None CurrentLevel); // CheckUltimateSound UW-MainWidget.UW-MainWidget_C.CheckUltimateSound // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Set Tool Tip Text Design(None Tool Tip, None& -); // Set Tool Tip Text Design WB_ToolTipDesign.WB_ToolTipDesign_C.Set Tool Tip Text Design // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None Get_CharacterPreviewImage_Visibility_1(); // Get_CharacterPreviewImage_Visibility_1 UW-Inventory_CharacterPreView.UW-Inventory_CharacterPreView_C.Get_CharacterPreviewImage_Visibility_1 // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(None HitComponent, None OtherActor, None OtherComp, None NormalImpulse, None& Hit); // BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature BP-ProjectileGrenade_Bomb_Perk.BP-ProjectileGrenade_Bomb_Perk_C.BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature // (HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-WA2000.ABP-WA2000_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetConsoleMultiCommandString(None& Str); // SetConsoleMultiCommandString UW-BlackMarket_Slot_Base.UW-BlackMarket_Slot_Base_C.SetConsoleMultiCommandString // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-OutGameParachute.BP-OutGameParachute_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	None On_IMG-BG_MouseButtonDown_1(None MyGeometry, None& MouseEvent); // On_IMG-BG_MouseButtonDown_1 UW-BlackMarket_Slot_Attachment.UW-BlackMarket_Slot_Attachment_C.On_IMG-BG_MouseButtonDown_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetIconTexture(None IconTexture); // SetIconTexture UW-BlackMarket_Slot_Perk.UW-BlackMarket_Slot_Perk_C.SetIconTexture // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetSlotInfo(None BlackmarketDataInfo); // SetSlotInfo UW-BlackMarket_Slot_Custom.UW-BlackMarket_Slot_Custom_C.SetSlotInfo // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Get Icon from Index(None Index, None& Icon); // Get Icon from Index WBP_SPS_UseItemSelectionMenu.WBP_SPS_UseItemSelectionMenu_C.Get Icon from Index // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void StopAirCraftAnimation(); // StopAirCraftAnimation UW-Route.UW-Route_C.StopAirCraftAnimation // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None OnClose(None MyGeometry, None& MouseEvent); // OnClose UW-BlackMarket.UW-BlackMarket_C.OnClose // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-SKS.ABP-SKS_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Get Weapon Infoby Inventory Item Info(None& bResult, None& WeaponInfo); // Get Weapon Infoby Inventory Item Info UW-Inventory_MaterialSlot.UW-Inventory_MaterialSlot_C.Get Weapon Infoby Inventory Item Info // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetClassCount(None Count); // SetClassCount UW-ClassinfoitemWidget.UW-ClassinfoitemWidget_C.SetClassCount // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetTeamIndex(None PlayerIndex); // SetTeamIndex UW-PerkDeckSelectItemNumWidget.UW-PerkDeckSelectItemNumWidget_C.SetTeamIndex // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetBlocked(None IsBlocked, None ComingSoon); // SetBlocked UW-PerkDeckSelectItemWidget.UW-PerkDeckSelectItemWidget_C.SetBlocked // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Finished_F3AEE8B3477DC5B8B5A3EA8301B8E940(); // Finished_F3AEE8B3477DC5B8B5A3EA8301B8E940 UW-BasicConversation.UW-BasicConversation_C.Finished_F3AEE8B3477DC5B8B5A3EA8301B8E940 // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckValidMeshActor(None& Return); // CheckValidMeshActor UW-ArmoryInput.UW-ArmoryInput_C.CheckValidMeshActor // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetItemOption(None& ItemOption); // SetItemOption UW-Lobby_WeaponInfo_Option_Slot_Icon.UW-Lobby_WeaponInfo_Option_Slot_Icon_C.SetItemOption // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetMainWidget(None __WorldContext, None& MainWidget); // GetMainWidget BravoHotelFunctionLibrary.BravoHotelFunctionLibrary_C.GetMainWidget // (Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const) // <Game+0x23ad490>
	void SetScopeImageAngle(None NewAngle); // SetScopeImageAngle UW-Sight_15X.UW-Sight_15X_C.SetScopeImageAngle // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-ReplayEventMarker_WhenReported.UW-ReplayEventMarker_WhenReported_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-ReplayEventMarker_Resuscitated.UW-ReplayEventMarker_Resuscitated_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-ReplayEventMarker_Knockout.UW-ReplayEventMarker_Knockout_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetPointAngle(None Angle); // SetPointAngle UW-RoutePingWidget_Point.UW-RoutePingWidget_Point_C.SetPointAngle // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-ReplayEventMarker_Kill.UW-ReplayEventMarker_Kill_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void HideFreeCamSpeed(); // HideFreeCamSpeed UW-ReplayFreeCamSpeedWidget.UW-ReplayFreeCamSpeedWidget_C.HideFreeCamSpeed // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-ReportUserCompleted.UW-ReportUserCompleted_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void CheckSelectProgramIndex(); // CheckSelectProgramIndex UW-ReportUserProgram.UW-ReportUserProgram_C.CheckSelectProgramIndex // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Init(None Str); // Init UW-CheatReplayListTitleItem.UW-CheatReplayListTitleItem_C.Init // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Init(None Event, None ReplayFileName, None ReplayListWidget); // Init UW-CheatReplayListItem.UW-CheatReplayListItem_C.Init // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Divide(None Value, None& RetS1, None& RetS2); // Divide UW-RewardGoldSlot_02.UW-RewardGoldSlot_02_C.Divide // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetBattleModeString(None Idx, None& Str); // GetBattleModeString UW-ReplayListWidget.UW-ReplayListWidget_C.GetBattleModeString // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetBattleModeString(None Idx, None& Str); // GetBattleModeString UW-ReplayListItemWidget.UW-ReplayListItemWidget_C.GetBattleModeString // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetNew(); // SetNew UW-Lobby_Craft_List_Category.UW-Lobby_Craft_List_Category_C.SetNew // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct UW-ImageTextCell.UW-ImageTextCell_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void CheckCameraType(); // CheckCameraType UW-ReplayTimelineBasic.UW-ReplayTimelineBasic_C.CheckCameraType // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-InventoryPawn.ABP-InventoryPawn_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetEquippedSlot(None InventoryItemInfo); // SetEquippedSlot UW-ReplayItemList.UW-ReplayItemList_C.SetEquippedSlot // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetRandomOptionDesc(None Desc); // SetRandomOptionDesc UW-Lobby_WeaponInfo_RandomOption.UW-Lobby_WeaponInfo_RandomOption_C.SetRandomOptionDesc // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetKillCamGuide(); // SetKillCamGuide UW-ReplayGuideWidget.UW-ReplayGuideWidget_C.SetKillCamGuide // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-ArmoryResultListWidget_16(); // SequenceEvent__ENTRYPOINTUW-ArmoryResultListWidget_16 UW-ArmoryResultListWidget.UW-ArmoryResultListWidget_C.SequenceEvent__ENTRYPOINTUW-ArmoryResultListWidget_16 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void PreConstruct(None IsDesignTime); // PreConstruct UW-ReportUserConfirm.UW-ReportUserConfirm_C.PreConstruct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void SetTaskInfo(None TaskInfo); // SetTaskInfo UW-ScenarioQuestCell.UW-ScenarioQuestCell_C.SetTaskInfo // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void IsSpectate(None& Return); // IsSpectate BP-PlayerHUD.BP-PlayerHUD_C.IsSpectate // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void ParseString(None InputString); // ParseString UW-ImageText.UW-ImageText_C.ParseString // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetData(None StartPoint, None EndPoint, None Min, None MAX, None ShowTime, None Play); // SetData UW-RankPoint.UW-RankPoint_C.SetData // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void IsMaterialData(None ItemKey, None& bRet, None& Index); // IsMaterialData UW-MatchEnd_RewardSlot_02.UW-MatchEnd_RewardSlot_02_C.IsMaterialData // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-MatchEnd_Ranking2_2(); // SequenceEvent__ENTRYPOINTUW-MatchEnd_Ranking2_2 UW-MatchEnd_Ranking2.UW-MatchEnd_Ranking2_C.SequenceEvent__ENTRYPOINTUW-MatchEnd_Ranking2_2 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void HideChargeInfo(); // HideChargeInfo UW-SightInfo.UW-SightInfo_C.HideChargeInfo // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-MatchEnd_Animation_02_2(); // SequenceEvent__ENTRYPOINTUW-MatchEnd_Animation_02_2 UW-MatchEnd_Animation_02.UW-MatchEnd_Animation_02_C.SequenceEvent__ENTRYPOINTUW-MatchEnd_Animation_02_2 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetNotOwnRarityVisibility(None Rarity); // SetNotOwnRarityVisibility UW-Lobby_Craft_Recipe_Item.UW-Lobby_Craft_Recipe_Item_C.SetNotOwnRarityVisibility // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetNew(None IsNew); // SetNew UW-Lobby_Craft_List_Category_Slot.UW-Lobby_Craft_List_Category_Slot_C.SetNew // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void NotifyNewItemToCoh(); // NotifyNewItemToCoh UW-Lobby_ArmoryMain.UW-Lobby_ArmoryMain_C.NotifyNewItemToCoh // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetTutorialInfo(None SkillType); // SetTutorialInfo UW-Radar_tutorial.UW-Radar_tutorial_C.SetTutorialInfo // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetReplayWidget(None& ReplayMainWidget); // GetReplayWidget BP-MK3DSpectatorPawn.BP-MK3DSpectatorPawn_C.GetReplayWidget // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	None OnMouseButtonUp(None MyGeometry, None& MouseEvent); // OnMouseButtonUp WB_ClassicComboBoxButton.WB_ClassicComboBoxButton_C.OnMouseButtonUp // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Divide(None Value1, None& RetS1, None& RetS2); // Divide UW-RewardGoldSlot.UW-RewardGoldSlot_C.Divide // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetRarity(); // SetRarity UW-MatchEnd_RewardSlot.UW-MatchEnd_RewardSlot_C.SetRarity // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None NewFunction_1(); // NewFunction_1 ComboBoxText.ComboBoxText_C.NewFunction_1 // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Init(); // Init UW-ReplayWorldmapOption.UW-ReplayWorldMapOption_C.Init // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckCreateSlot(None& bRet); // CheckCreateSlot UW-VoiceTalk.UW-VoiceTalk_C.CheckCreateSlot // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None Get_TextBlock_1_Text_1(); // Get_TextBlock_1_Text_1 UW-PerkLevelUp.UW-PerkLevelUp_C.Get_TextBlock_1_Text_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void Construct(); // Construct SubTitleSlotWidget.SubTitleSlotWidget_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	None Get_Distance_Text_ColorAndOpacity_1(); // Get_Distance_Text_ColorAndOpacity_1 UW-Sight_Digital_Background.UW-Sight_Digital_Background_C.Get_Distance_Text_ColorAndOpacity_1 // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void GetOrgKey(None IsSubKey, None& Key); // GetOrgKey SlotItemWidget.SlotItemWidget_C.GetOrgKey // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void BndEvt__Button_42_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature(); // BndEvt__Button_42_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature selectTypeBtn.selectTypeBtn_C.BndEvt__Button_42_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature // (BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct ArrowBtn.ArrowBtn_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct WB_ClassicComboBoxItem.WB_ClassicComboBoxItem_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct SettingDevWidget.SettingDevWidget_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void _1(None Type); // _1 GamePlayWidget.GamePlayWidget_C._1 // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetData(None Title, None Image); // SetData CrossHairDetailInfo.CrossHairDetailInfo_C.SetData // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Construct(); // Construct ControlWidget.ControlWidget_C.Construct // (BlueprintCosmetic|Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void OnClosePerkPopup(); // OnClosePerkPopup UW-Lobby_Craft_Success_PerkSelect.UW-Lobby_Craft_Success_PerkSelect_C.OnClosePerkPopup // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CreateWidgetImpl(None WidgetClass, None& OutWidget, None& OutSwitcherIndex, None& RealIndex); // CreateWidgetImpl SettingMainWidget.SettingMainWidget_C.CreateWidgetImpl // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void HideExitPopup(); // HideExitPopup BP-TitleWidget.BP-TitleWidget_C.HideExitPopup // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-MatchEnd_Animation_10(); // SequenceEvent__ENTRYPOINTUW-MatchEnd_Animation_10 UW-MatchEnd_Animation.UW-MatchEnd_Animation_C.SequenceEvent__ENTRYPOINTUW-MatchEnd_Animation_10 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckWorldViewCameraLocationRange(); // CheckWorldViewCameraLocationRange BP-FieldViewCam.BP-FieldViewCam_C.CheckWorldViewCameraLocationRange // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Hide(); // Hide UW-Exit_Popup.UW-Exit_Popup_C.Hide // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None OnMouseButtonDown(None MyGeometry, None& MouseEvent); // OnMouseButtonDown UW-GamePopupWidget.UW-GamePopupWidget_C.OnMouseButtonDown // (BlueprintCosmetic|Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckAnyAction(None& AnyAction); // CheckAnyAction BP-HUDInteractionComponentBase.BP-HUDInteractionComponentBase_C.CheckAnyAction // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void SetGuideLine(); // SetGuideLine UW-RoutePingWidget_Line.UW-RoutePingWidget_Line_C.SetGuideLine // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void InitGuideLine(); // InitGuideLine UW-RoutePingWidget.UW-RoutePingWidget_C.InitGuideLine // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckAnyAction(None& AnyAction); // CheckAnyAction BP-HUDInteractionComponent.BP-HUDInteractionComponent_C.CheckAnyAction // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void DrawGrassCollision(None TargetCharacter); // DrawGrassCollision BP-GrassCollision_Character.BP-GrassCollision_Character_C.DrawGrassCollision // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void _1(None DeltaSeconds, None OldLocation, None OldVelocity); // _1 BP-AmplifierEffect.BP-AmplifierEffect_C._1 // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-Gatling_.ABP-Gatling__C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-Projectile_MolotovFireCell.BP-Projectile_MolotovFireCell_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void CheckOptionChanged(); // CheckOptionChanged BP-LobbyWidget_Web.BP-LobbyWidget_Web_C.CheckOptionChanged // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Set Ping Tye(None IsPingType); // Set Ping Tye SmartPingSystem.SmartPingSystem_C.Set Ping Tye // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void MapClickEvent(None ClickLocation); // MapClickEvent UW-SkillMapWidget.UW-SkillMapWidget_C.MapClickEvent // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetLineInfo(None Angle, None Length); // SetLineInfo UW-PlayerIconWidget_OnFire.UW-PlayerIconWidget_OnFire_C.SetLineInfo // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void CheckAgreePing(None& bRet, None& Location); // CheckAgreePing UW-MapComp.UW-MapComp_C.CheckAgreePing // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetClassInfoBoardVisibilityByZoomLevel(None LastZoomLevel, None NewZoomLevel); // SetClassInfoBoardVisibilityByZoomLevel UW-WorldMapWidget.UW-WorldMapWidget_C.SetClassInfoBoardVisibilityByZoomLevel // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void InterpProjectileTrajectoryJumpState(None Jump, None Location, None Rotation, None& StartLocation, None& Velocity); // InterpProjectileTrajectoryJumpState ProjectileTrajectoryComponent.ProjectileTrajectoryComponent_C.InterpProjectileTrajectoryJumpState // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void IsNoDamageWeapon(None& Weapon); // IsNoDamageWeapon UW-PlayerInfoWidget_Renew.UW-PlayerInfoWidget_Renew_C.IsNoDamageWeapon // (Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void NewFunction_1(); // NewFunction_1 BP_AreaRectLight.BP_AreaRectLight_C.NewFunction_1 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-RPG.ABP-RPG_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTUW-SupportProgram_2(); // SequenceEvent__ENTRYPOINTUW-SupportProgram_2 UW-SupportProgram.UW-SupportProgram_C.SequenceEvent__ENTRYPOINTUW-SupportProgram_2 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-LobbyPawn.BP-LobbyPawn_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-M1_Garand_Tactical.ABP-M1_Garand_Tactical_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetTexture5mm(); // SetTexture5mm BP-Sight_4X_FPSK.BP-Sight_4X_FPSK_C.SetTexture5mm // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-Parachute.ABP-Parachute_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveTick(None DeltaSeconds); // ReceiveTick BP-HeartBeatSensorEffect.BP-HeartBeatSensorEffect_C.ReceiveTick // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void Resize Render Target(None SizeX, None SizeY); // Resize Render Target BP-CharacterRecording.BP-CharacterRecording_C.Resize Render Target // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ResetCharacter(); // ResetCharacter BP-TutorialEndCam.BP-TutorialEndCam_C.ResetCharacter // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void GetFloorLocation(None InLocation, None& OutLocation); // GetFloorLocation BP-WinCam.BP-WinCam_C.GetFloorLocation // (Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-FPSK_Arms.ABP-FPSK_Arms_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ForceInitRecordingCharacter(); // ForceInitRecordingCharacter BP-DefaultPawn.BP-DefaultPawn_C.ForceInitRecordingCharacter // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-BrokenHelmet.BP-BrokenHelmet_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void CalcLadderInteractionType(); // CalcLadderInteractionType BP-LadderComponent.BP-LadderComponent_C.CalcLadderInteractionType // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetScalarParameterList(None& StaticMeshList, None ParameterName, None ParameterValue); // SetScalarParameterList BP_MoveElevator.BP_MoveElevator_C.SetScalarParameterList // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-DefaultMan_Native.ABP-DefaultMan_Native_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-SupplyHelicopter.ABP-SupplyHelicopter_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetScopeImageAngle(None NewAngle); // SetScopeImageAngle UW-Sight_Digital.UW-Sight_Digital_C.SetScopeImageAngle // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void UserConstructionScript(); // UserConstructionScript BP-TransportDropBox.BP-TransportDropBox_C.UserConstructionScript // (Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	None IsEnableSpawnSupplyBox(None TargetActor, None& OutResult); // IsEnableSpawnSupplyBox BP-BattleRoyalePawn.BP-BattleRoyalePawn_C.IsEnableSpawnSupplyBox // (Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Get Settings Instance(None& SettingsWrapper); // Get Settings Instance BP-GameSettingManager.BP-GameSettingManager_C.Get Settings Instance // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetTitleWidget(None TitleWidget); // SetTitleWidget UW-Title_Login_OrbIsland.UW-Title_Login_OrbIsland_C.SetTitleWidget // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void MoveNextScene(); // MoveNextScene UW-ScenarioStartPopup.UW-ScenarioStartPopup_C.MoveNextScene // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void destroy(); // destroy UW-IntroBackground.UW-IntroBackground_C.destroy // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void EventDispatcher_StopLobbySound__DelegateSignature(); // EventDispatcher_StopLobbySound__DelegateSignature BP-TitleHUD.BP-TitleHUD_C.EventDispatcher_StopLobbySound__DelegateSignature // (Public|Delegate|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Refresh Video Settings(); // Refresh Video Settings UW-StartGammaSetting.UW-StartGammaSetting_C.Refresh Video Settings // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void DefaultMessage(); // DefaultMessage UW-LoginWidget.UW-LoginWidget_C.DefaultMessage // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetSequecePanelColor(None WeaponRarity); // SetSequecePanelColor LV-Title_Alternative.LV-Title_Alternative_C.SetSequecePanelColor // (Public|HasDefaults|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-LobbyPawn.ABP-LobbyPawn_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTSequenceDirector_1(); // SequenceEvent__ENTRYPOINTSequenceDirector_1 Weapon_Lobby_Disassemble.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SequenceEvent__ENTRYPOINTSequenceDirector_1(); // SequenceEvent__ENTRYPOINTSequenceDirector_1 Weapon_Lobby_Custom_02.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_1 // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void Create Effect Material Instance(None Material, None& Instance); // Create Effect Material Instance Chameleon.Chameleon_C.Create Effect Material Instance // (Public|HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-Karabiner98K.ABP-Karabiner98K_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetScopeImageAngle(None NewAngle); // SetScopeImageAngle UW-Sight_4X.UW-Sight_4X_C.SetScopeImageAngle // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetScopeImageAngle(None NewAngle); // SetScopeImageAngle UW-Sight_8X.UW-Sight_8X_C.SetScopeImageAngle // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-Projectile_Base.BP-Projectile_Base_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void UserConstructionScript(); // UserConstructionScript BP-AreaSkill_PowerInterruption.BP-AreaSkill_PowerInterruption_C.UserConstructionScript // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-M40A1.ABP-M40A1_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-M200.ABP-M200_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-M870.ABP-M870_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-Winchester1887.ABP-Winchester1887_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-UMP9.ABP-UMP9_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-PPSH41.ABP-PPSH41_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-M9.ABP-M9_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-M1895.ABP-M1895_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-DesertEagle.ABP-DesertEagle_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-ACR.ABP-ACR_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-SCAR.ABP-SCAR_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-M416.ABP-M416_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-M16.ABP-M16_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-G18.ABP-G18_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-Flamethrower.ABP-Flamethrower_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void AnimGraph(None& AnimGraph); // AnimGraph ABP-F2000.ABP-F2000_C.AnimGraph // (HasOutParms|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetScopeImageAngle(None NewAngle); // SetScopeImageAngle UW-Sight_HoloSight.UW-Sight_HoloSight_C.SetScopeImageAngle // (BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-SkillTargetingBombing.BP-SkillTargetingBombing_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-AircraftBomber_TypeC.BP-AircraftBomber_TypeC_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(None HitComponent, None OtherActor, None OtherComp, None NormalImpulse, None& Hit); // BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature BP-ProjectileGrenade_Bomb.BP-ProjectileGrenade_Bomb_C.BndEvt__SphereCollision_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature // (HasOutParms|BlueprintEvent) // <Game+0x23ad490>
	void ActivateEffect(None Character); // ActivateEffect BP-AreaSkill_WetFog.BP-AreaSkill_WetFog_C.ActivateEffect // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
	void UserConstructionScript(); // UserConstructionScript BP-AreaSkill_Hacking.BP-AreaSkill_Hacking_C.UserConstructionScript // (Event|Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void SetCheckBox(None Checked); // SetCheckBox BPI_WeaponSimulator.BPI_WeaponSimulator_C.SetCheckBox // (Public|BlueprintCallable|BlueprintEvent) // <Game+0x23ad490>
	void ReceiveBeginPlay(); // ReceiveBeginPlay BP-Projectile_FireWallCell.BP-Projectile_FireWallCell_C.ReceiveBeginPlay // (Event|Protected|BlueprintEvent) // <Game+0x23ad490>
	void K2_OnEquip(); // K2_OnEquip BP-Weapon-MolotovCocktail.BP-Weapon-MolotovCocktail_C.K2_OnEquip // (Event|Public|BlueprintEvent) // <Game+0x23ad490>
};

