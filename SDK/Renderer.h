// ScriptStruct Renderer.LightPropagationVolumeSettings
struct FLightPropagationVolumeSettings {
	char bOverride_LPVIntensity : 0; // 0x0 (1)
	char bOverride_LPVDirectionalOcclusionIntensity : 0; // 0x0 (1)
	char bOverride_LPVDirectionalOcclusionRadius : 0; // 0x0 (1)
	char bOverride_LPVDiffuseOcclusionExponent : 0; // 0x0 (1)
	char bOverride_LPVSpecularOcclusionExponent : 0; // 0x0 (1)
	char bOverride_LPVDiffuseOcclusionIntensity : 0; // 0x0 (1)
	char bOverride_LPVSpecularOcclusionIntensity : 0; // 0x0 (1)
	char bOverride_LPVSize : 0; // 0x0 (1)
	char bOverride_LPVSecondaryOcclusionIntensity : 0; // 0x1 (1)
	char bOverride_LPVSecondaryBounceIntensity : 0; // 0x1 (1)
	char bOverride_LPVGeometryVolumeBias : 0; // 0x1 (1)
	char bOverride_LPVVplInjectionBias : 0; // 0x1 (1)
	char bOverride_LPVEmissiveInjectionIntensity : 0; // 0x1 (1)
	char bOverride_LPVReflectionIntensity : 0; // 0x1 (1)
	char bOverride_LPVReflectionLength : 0; // 0x1 (1)
	char bOverride_LPVReflectionOcclusion : 0; // 0x1 (1)
	char bOverride_LPVHairSpecularLightingIntensity : 0; // 0x2 (1)
	char bOverride_LPVHairSpecularOcclusionIntensity : 0; // 0x2 (1)
	char bOverride_LPVHairRoughnessOverride : 0; // 0x2 (1)
	char bOverride_LPVDistantLightingIntensity : 0; // 0x2 (1)
	char bOverride_UseSeparateAOVolume : 0; // 0x2 (1)
	char bOverride_LPVEnvironmentColor : 0; // 0x2 (1)
	float LPVIntensity; // 0x4 (4)
	float LPVVplInjectionBias; // 0x8 (4)
	float LPVSize; // 0xC (4)
	float LPVSecondaryOcclusionIntensity; // 0x10 (4)
	float LPVSecondaryBounceIntensity; // 0x14 (4)
	float LPVGeometryVolumeBias; // 0x18 (4)
	float LPVEmissiveInjectionIntensity; // 0x1C (4)
	float LPVDirectionalOcclusionIntensity; // 0x20 (4)
	float LPVDirectionalOcclusionRadius; // 0x24 (4)
	float LPVDiffuseOcclusionExponent; // 0x28 (4)
	float LPVSpecularOcclusionExponent; // 0x2C (4)
	float LPVDiffuseOcclusionIntensity; // 0x30 (4)
	float LPVSpecularOcclusionIntensity; // 0x34 (4)
	float LPVFadeRange; // 0x38 (4)
	float LPVDirectionalOcclusionFadeRange; // 0x3C (4)
	float LPVReflectionIntensity; // 0x40 (4)
	float LPVReflectionLength; // 0x44 (4)
	char bLPVReflectionOcclusion : 0; // 0x48 (1)
	float LPVHairSpecularLightingIntensity; // 0x4C (4)
	float LPVHairSpecularOcclusionIntensity; // 0x50 (4)
	float LPVHairRoughnessOverride; // 0x54 (4)
	float LPVDistantLightingIntensity; // 0x58 (4)
	struct FLinearColor LPVEnvironmentColor; // 0x5C (16)
	char bUseSeparateAOVolume : 0; // 0x6C (1)
};

// ScriptStruct Renderer.VolumetricFogVolumeSettings
struct FVolumetricFogVolumeSettings {
	char bOverride_UseVolumetricFogEmissive : 0; // 0x0 (1)
	char bOverride_VolumetricFogEmissive : 0; // 0x0 (1)
	char UseVolumetricFogEmissive : 0; // 0x0 (1)
	struct FLinearColor VolumetricFogEmissive; // 0x4 (16)
};

